----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07811999320983887

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [8, 6], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [13, 10], [5, 19], [4, 14], [9, 6], [13, 10], [8, 3], [18, 1], [14, 2], [13, 5], [3, 6], [4, 11], [0, 1], [17, 10], [8, 9], [13, 5], [16, 11], [19, 7], [13, 5], [10, 18], [13, 5], [4, 14], [8, 3], [5, 19], [12, 14], [17, 10], [18, 1], [16, 8], [0, 7], [13, 5], [19, 7], [5, 19], [1, 7], [2, 13], [5, 19], [16, 8], [4, 14], [15, 12], [19, 7], [2, 13], [5, 18], [3, 6], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [14, 13], [11, 3], [6, 0], [11, 19], [1, 7], [14, 13], [17, 10], [19, 1], [5, 10], [19, 1], [8, 3], [14, 2], [5, 10], [1, 7], [11, 19], [15, 4], [14, 2], [6, 0], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [17, 10], [15, 4], [6, 0], [13, 18], [8, 6], [3, 19], [11, 5], [12, 14], [6, 0], [12, 14], [1, 7], [15, 4], [13, 18], [5, 10], [0, 1], [3, 5], [12, 14], [2, 17], [19, 1], [14, 11], [8, 6], [13, 10], [19, 1], [3, 5], [6, 0], [16, 11], [13, 18], [19, 0], [4, 11], [13, 5], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [13, 18], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [19, 7], [5, 18], [19, 7], [6, 0], [5, 18], [5, 19], [16, 14], [1, 7], [2, 13], [5, 19], [4, 16], [3, 19], [2, 13], [19, 0], [13, 10], [9, 6], [11, 3], [2, 17], [0, 7], [17, 10], [11, 5], [2, 13], [15, 4], [0, 7], [8, 9], [15, 4], [1, 7], [6, 0], [16, 8], [2, 17], [5, 18], [0, 1], [3, 6], [15, 4], [16, 8], [13, 18], [0, 1], [14, 2], [5, 19], [8, 9], [19, 1], [12, 2], [6, 0], [3, 5], [14, 13], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 23]
[27, 33]
[33, 36]
[36, 38]
[49, 52]
[45, 53]
[51, 57]
[53, 65]
[70, 75]
[77, 79]
[78, 82]
[81, 86]
[72, 87]
[85, 95]
[101, 103]
[95, 105]
[97, 106]
[103, 110]
[112, 116]
[109, 117]
[106, 120]
[120, 129]
[135, 137]
[136, 139]
[140, 144]
[143, 147]
[153, 158]
[157, 160]
[160, 168]
[163, 169]
[166, 171]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[21, 26, 39]
[24, 28, 40]
[31, 37, 43]
[38, 41, 47]
[152, 154, 164]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[96, 98, 102]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 23]
[27, 33]
[33, 36]
[36, 38]
[49, 52]
[45, 53]
[51, 57]
[53, 65]
[70, 75]
[77, 79]
[78, 82]
[81, 86]
[72, 87]
[85, 95]
[101, 103]
[95, 105]
[97, 106]
[103, 110]
[112, 116]
[109, 117]
[106, 120]
[120, 129]
[135, 137]
[136, 139]
[140, 144]
[143, 147]
[153, 158]
[157, 160]
[160, 168]
[163, 169]
[166, 171]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.203402519226074

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 23] cc => I, Pos: [19, 23] cc => I, Pos: [21, 26, 39] ccc => cc, Pos: [24, 28, 40] ccc => cc, Pos: [27, 33] cc => I, Pos: [27, 33] cc => I, Pos: [31, 37, 43] ccc => cc, Pos: [33, 36] cc => I, Pos: [33, 36] cc => I, Pos: [36, 38] cc => I, Pos: [36, 38] cc => I, Pos: [38, 41, 47] ccc => cc, Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [49, 52] cc => I, Pos: [49, 52] cc => I, Pos: [51, 57] cc => I, Pos: [51, 57] cc => I, Pos: [53, 65] cc => I, Pos: [53, 65] cc => I, Pos: [70, 75] cc => I, Pos: [70, 75] cc => I, Pos: [72, 87] cc => I, Pos: [72, 87] cc => I, Pos: [77, 79] cc => I, Pos: [77, 79] cc => I, Pos: [78, 82] cc => I, Pos: [78, 82] cc => I, Pos: [81, 86] cc => I, Pos: [81, 86] cc => I, Pos: [85, 95] cc => I, Pos: [85, 95] cc => I, Pos: [95, 105] cc => I, Pos: [95, 105] cc => I, Pos: [96, 98, 102] ccc => cc, Pos: [97, 106] cc => I, Pos: [97, 106] cc => I, Pos: [101, 103] cc => I, Pos: [101, 103] cc => I, Pos: [103, 110] cc => I, Pos: [103, 110] cc => I, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [109, 117] cc => I, Pos: [109, 117] cc => I, Pos: [112, 116] cc => I, Pos: [112, 116] cc => I, Pos: [120, 129] cc => I, Pos: [120, 129] cc => I, Pos: [135, 137] cc => I, Pos: [135, 137] cc => I, Pos: [136, 139] cc => I, Pos: [136, 139] cc => I, Pos: [140, 144] cc => I, Pos: [140, 144] cc => I, Pos: [143, 147] cc => I, Pos: [143, 147] cc => I, Pos: [152, 154, 164] ccc => cc, Pos: [153, 158] cc => I, Pos: [153, 158] cc => I, Pos: [157, 160] cc => I, Pos: [157, 160] cc => I, Pos: [160, 168] cc => I, Pos: [160, 168] cc => I, Pos: [163, 169] cc => I, Pos: [163, 169] cc => I, Pos: [166, 171] cc => I, Pos: [166, 171] cc => I]

Plan: 1
[Pos: [19, 23] cc => I,
 Pos: [21, 26, 39] ccc => cc,
 Pos: [24, 28, 40] ccc => cc,
 Pos: [27, 33] cc => I,
 Pos: [31, 37, 43] ccc => cc,
 Pos: [36, 38] cc => I,
 Pos: [45, 53] cc => I,
 Pos: [49, 52] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [72, 87] cc => I,
 Pos: [77, 79] cc => I,
 Pos: [78, 82] cc => I,
 Pos: [81, 86] cc => I,
 Pos: [85, 95] cc => I,
 Pos: [96, 98, 102] ccc => cc,
 Pos: [97, 106] cc => I,
 Pos: [101, 103] cc => I,
 Pos: [109, 117] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [120, 129] cc => I,
 Pos: [135, 137] cc => I,
 Pos: [136, 139] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 147] cc => I,
 Pos: [152, 154, 164] ccc => cc,
 Pos: [153, 158] cc => I,
 Pos: [157, 160] cc => I,
 Pos: [163, 169] cc => I,
 Pos: [166, 171] cc => I]
Change: 30, Saving: 110

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 23] cc => I,
 Pos: [21, 26, 39] ccc => cc,
 Pos: [24, 28, 40] ccc => cc,
 Pos: [27, 33] cc => I,
 Pos: [31, 37, 43] ccc => cc,
 Pos: [36, 38] cc => I,
 Pos: [45, 53] cc => I,
 Pos: [49, 52] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [72, 87] cc => I,
 Pos: [77, 79] cc => I,
 Pos: [78, 82] cc => I,
 Pos: [81, 86] cc => I,
 Pos: [85, 95] cc => I,
 Pos: [96, 98, 102] ccc => cc,
 Pos: [97, 106] cc => I,
 Pos: [101, 103] cc => I,
 Pos: [109, 117] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [120, 129] cc => I,
 Pos: [135, 137] cc => I,
 Pos: [136, 139] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 147] cc => I,
 Pos: [152, 154, 164] ccc => cc,
 Pos: [153, 158] cc => I,
 Pos: [157, 160] cc => I,
 Pos: [163, 169] cc => I,
 Pos: [166, 171] cc => I]
Change: 30, Saving: 110

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [19, 23] cc => I
Apply:  Pos: [21, 26, 39] ccc => cc
Apply:  Pos: [24, 28, 40] ccc => cc
Apply:  Pos: [27, 33] cc => I
Apply:  Pos: [31, 37, 43] ccc => cc
Apply:  Pos: [36, 38] cc => I
Apply:  Pos: [45, 53] cc => I
Apply:  Pos: [49, 52] cc => I
Apply:  Pos: [51, 57] cc => I
Apply:  Pos: [70, 75] cc => I
Apply:  Pos: [72, 87] cc => I
Apply:  Pos: [77, 79] cc => I
Apply:  Pos: [78, 82] cc => I
Apply:  Pos: [81, 86] cc => I
Apply:  Pos: [85, 95] cc => I
Apply:  Pos: [96, 98, 102] ccc => cc
Apply:  Pos: [97, 106] cc => I
Apply:  Pos: [101, 103] cc => I
Apply:  Pos: [109, 117] cc => I
Apply:  Pos: [112, 116] cc => I
Apply:  Pos: [120, 129] cc => I
Apply:  Pos: [135, 137] cc => I
Apply:  Pos: [136, 139] cc => I
Apply:  Pos: [140, 144] cc => I
Apply:  Pos: [143, 147] cc => I
Apply:  Pos: [152, 154, 164] ccc => cc
Apply:  Pos: [153, 158] cc => I
Apply:  Pos: [157, 160] cc => I
Apply:  Pos: [163, 169] cc => I
Apply:  Pos: [166, 171] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [8, 6], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [8, 6], [18, 1], [14, 2], [3, 6], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [5, 19], [12, 14], [18, 1], [0, 7], [13, 5], [19, 7], [1, 7], [4, 14], [15, 12], [19, 7], [5, 18], [3, 6], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [11, 19], [1, 7], [17, 10], [8, 3], [1, 7], [11, 19], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [17, 10], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [15, 4], [5, 10], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [13, 10], [6, 0], [16, 11], [19, 0], [4, 11], [13, 5], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [1, 7], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [2, 10], [17, 10], [11, 5], [2, 13], [8, 9], [1, 7], [6, 0], [5, 18], [3, 6], [15, 4], [13, 18], [14, 2], [5, 19], [8, 9], [19, 1], [12, 2], [6, 0], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  3.203402519226074

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[39, 42]
[25, 44]
[57, 60]
[55, 61]
[99, 111]
[110, 119]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[19, 31, 33]
[58, 65, 68]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[112, 114, 122]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[75, 81, 86]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[39, 42]
[25, 44]
[57, 60]
[55, 61]
[99, 111]
[110, 119]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0165276527404785

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 21] cc => I, Pos: [7, 21] cc => I, Pos: [19, 31, 33] ccc => cc, Pos: [25, 44] cc => I, Pos: [25, 44] cc => I, Pos: [39, 42] cc => I, Pos: [39, 42] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [57, 60] cc => I, Pos: [57, 60] cc => I, Pos: [58, 65, 68] ccc => cc, Pos: [75, 81, 86] ccc => cc, Pos: [99, 111] cc => I, Pos: [99, 111] cc => I, Pos: [110, 119] cc => I, Pos: [110, 119] cc => I, Pos: [112, 114, 122] ccc => cc]

Plan: 1
[Pos: [7, 21] cc => I,
 Pos: [19, 31, 33] ccc => cc,
 Pos: [25, 44] cc => I,
 Pos: [39, 42] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [57, 60] cc => I,
 Pos: [58, 65, 68] ccc => cc,
 Pos: [75, 81, 86] ccc => cc,
 Pos: [99, 111] cc => I,
 Pos: [110, 119] cc => I,
 Pos: [112, 114, 122] ccc => cc]
Change: 11, Saving: 36

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 21] cc => I,
 Pos: [19, 31, 33] ccc => cc,
 Pos: [25, 44] cc => I,
 Pos: [39, 42] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [57, 60] cc => I,
 Pos: [58, 65, 68] ccc => cc,
 Pos: [75, 81, 86] ccc => cc,
 Pos: [99, 111] cc => I,
 Pos: [110, 119] cc => I,
 Pos: [112, 114, 122] ccc => cc]
Change: 11, Saving: 36

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 21] cc => I
Apply:  Pos: [19, 31, 33] ccc => cc
Apply:  Pos: [25, 44] cc => I
Apply:  Pos: [39, 42] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [57, 60] cc => I
Apply:  Pos: [58, 65, 68] ccc => cc
Apply:  Pos: [75, 81, 86] ccc => cc
Apply:  Pos: [99, 111] cc => I
Apply:  Pos: [110, 119] cc => I
Apply:  Pos: [112, 114, 122] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [18, 1], [0, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 7], [4, 2], [9, 6], [18, 1], [14, 2], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [12, 14], [18, 1], [0, 7], [13, 5], [1, 7], [4, 14], [15, 12], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [15, 4], [13, 5], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [17, 10], [2, 10], [11, 5], [2, 13], [3, 6], [5, 18], [6, 0], [15, 4], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  2.0165276527404785

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.593743085861206

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 7], [4, 2], [9, 6], [18, 1], [14, 2], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [12, 14], [18, 1], [0, 7], [13, 5], [1, 7], [4, 14], [15, 12], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [15, 4], [13, 5], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [2, 10], [17, 10], [11, 5], [2, 13], [3, 6], [5, 18], [6, 0], [15, 4], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  1.593743085861206

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [107] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 25 - (small)
 - circuit cycle: 214

Reduced: 
 - size: 73 (40.56%)
 - cycle: 146 (40.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07811927795410156

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [8, 6], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [13, 10], [5, 19], [4, 14], [9, 6], [13, 10], [8, 3], [18, 1], [14, 2], [13, 5], [3, 6], [4, 11], [0, 1], [17, 10], [8, 9], [13, 5], [16, 11], [19, 7], [13, 5], [10, 18], [13, 5], [4, 14], [8, 3], [5, 19], [12, 14], [17, 10], [18, 1], [16, 8], [0, 7], [13, 5], [19, 7], [5, 19], [1, 7], [2, 13], [5, 19], [16, 8], [4, 14], [15, 12], [19, 7], [2, 13], [5, 18], [3, 6], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [14, 13], [11, 3], [6, 0], [11, 19], [1, 7], [14, 13], [17, 10], [19, 1], [5, 10], [19, 1], [8, 3], [14, 2], [5, 10], [1, 7], [11, 19], [15, 4], [14, 2], [6, 0], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [17, 10], [15, 4], [6, 0], [13, 18], [8, 6], [3, 19], [11, 5], [12, 14], [6, 0], [12, 14], [1, 7], [15, 4], [13, 18], [5, 10], [0, 1], [3, 5], [12, 14], [2, 17], [19, 1], [14, 11], [8, 6], [13, 10], [19, 1], [3, 5], [6, 0], [16, 11], [13, 18], [19, 0], [4, 11], [13, 5], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [13, 18], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [19, 7], [5, 18], [19, 7], [6, 0], [5, 18], [5, 19], [16, 14], [1, 7], [2, 13], [5, 19], [4, 16], [3, 19], [2, 13], [19, 0], [13, 10], [9, 6], [11, 3], [2, 17], [0, 7], [17, 10], [11, 5], [2, 13], [15, 4], [0, 7], [8, 9], [15, 4], [1, 7], [6, 0], [16, 8], [2, 17], [5, 18], [0, 1], [3, 6], [15, 4], [16, 8], [13, 18], [0, 1], [14, 2], [5, 19], [8, 9], [19, 1], [12, 2], [6, 0], [3, 5], [14, 13], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 23]
[27, 33]
[33, 36]
[36, 38]
[49, 52]
[45, 53]
[51, 57]
[53, 65]
[70, 75]
[77, 79]
[78, 82]
[81, 86]
[72, 87]
[85, 95]
[101, 103]
[95, 105]
[97, 106]
[103, 110]
[112, 116]
[109, 117]
[106, 120]
[120, 129]
[135, 137]
[136, 139]
[140, 144]
[143, 147]
[153, 158]
[157, 160]
[160, 168]
[163, 169]
[166, 171]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[21, 26, 39]
[24, 28, 40]
[31, 37, 43]
[38, 41, 47]
[152, 154, 164]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[96, 98, 102]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 23]
[27, 33]
[33, 36]
[36, 38]
[49, 52]
[45, 53]
[51, 57]
[53, 65]
[70, 75]
[77, 79]
[78, 82]
[81, 86]
[72, 87]
[85, 95]
[101, 103]
[95, 105]
[97, 106]
[103, 110]
[112, 116]
[109, 117]
[106, 120]
[120, 129]
[135, 137]
[136, 139]
[140, 144]
[143, 147]
[153, 158]
[157, 160]
[160, 168]
[163, 169]
[166, 171]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2031092643737793

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 23] cc => I, Pos: [19, 23] cc => I, Pos: [21, 26, 39] ccc => cc, Pos: [24, 28, 40] ccc => cc, Pos: [27, 33] cc => I, Pos: [27, 33] cc => I, Pos: [31, 37, 43] ccc => cc, Pos: [33, 36] cc => I, Pos: [33, 36] cc => I, Pos: [36, 38] cc => I, Pos: [36, 38] cc => I, Pos: [38, 41, 47] ccc => cc, Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [49, 52] cc => I, Pos: [49, 52] cc => I, Pos: [51, 57] cc => I, Pos: [51, 57] cc => I, Pos: [53, 65] cc => I, Pos: [53, 65] cc => I, Pos: [70, 75] cc => I, Pos: [70, 75] cc => I, Pos: [72, 87] cc => I, Pos: [72, 87] cc => I, Pos: [77, 79] cc => I, Pos: [77, 79] cc => I, Pos: [78, 82] cc => I, Pos: [78, 82] cc => I, Pos: [81, 86] cc => I, Pos: [81, 86] cc => I, Pos: [85, 95] cc => I, Pos: [85, 95] cc => I, Pos: [95, 105] cc => I, Pos: [95, 105] cc => I, Pos: [96, 98, 102] ccc => cc, Pos: [97, 106] cc => I, Pos: [97, 106] cc => I, Pos: [101, 103] cc => I, Pos: [101, 103] cc => I, Pos: [103, 110] cc => I, Pos: [103, 110] cc => I, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [109, 117] cc => I, Pos: [109, 117] cc => I, Pos: [112, 116] cc => I, Pos: [112, 116] cc => I, Pos: [120, 129] cc => I, Pos: [120, 129] cc => I, Pos: [135, 137] cc => I, Pos: [135, 137] cc => I, Pos: [136, 139] cc => I, Pos: [136, 139] cc => I, Pos: [140, 144] cc => I, Pos: [140, 144] cc => I, Pos: [143, 147] cc => I, Pos: [143, 147] cc => I, Pos: [152, 154, 164] ccc => cc, Pos: [153, 158] cc => I, Pos: [153, 158] cc => I, Pos: [157, 160] cc => I, Pos: [157, 160] cc => I, Pos: [160, 168] cc => I, Pos: [160, 168] cc => I, Pos: [163, 169] cc => I, Pos: [163, 169] cc => I, Pos: [166, 171] cc => I, Pos: [166, 171] cc => I]

Plan: 1
[Pos: [19, 23] cc => I,
 Pos: [21, 26, 39] ccc => cc,
 Pos: [24, 28, 40] ccc => cc,
 Pos: [27, 33] cc => I,
 Pos: [31, 37, 43] ccc => cc,
 Pos: [36, 38] cc => I,
 Pos: [45, 53] cc => I,
 Pos: [49, 52] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [72, 87] cc => I,
 Pos: [77, 79] cc => I,
 Pos: [78, 82] cc => I,
 Pos: [81, 86] cc => I,
 Pos: [85, 95] cc => I,
 Pos: [96, 98, 102] ccc => cc,
 Pos: [97, 106] cc => I,
 Pos: [101, 103] cc => I,
 Pos: [109, 117] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [120, 129] cc => I,
 Pos: [135, 137] cc => I,
 Pos: [136, 139] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 147] cc => I,
 Pos: [152, 154, 164] ccc => cc,
 Pos: [153, 158] cc => I,
 Pos: [157, 160] cc => I,
 Pos: [163, 169] cc => I,
 Pos: [166, 171] cc => I]
Change: 30, Saving: 29

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.07835125923156738

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 23] cc => I,
 Pos: [21, 26, 39] ccc => cc,
 Pos: [24, 28, 40] ccc => cc,
 Pos: [27, 33] cc => I,
 Pos: [31, 37, 43] ccc => cc,
 Pos: [36, 38] cc => I,
 Pos: [45, 53] cc => I,
 Pos: [49, 52] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [72, 87] cc => I,
 Pos: [77, 79] cc => I,
 Pos: [78, 82] cc => I,
 Pos: [81, 86] cc => I,
 Pos: [85, 95] cc => I,
 Pos: [96, 98, 102] ccc => cc,
 Pos: [97, 106] cc => I,
 Pos: [101, 103] cc => I,
 Pos: [109, 117] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [120, 129] cc => I,
 Pos: [135, 137] cc => I,
 Pos: [136, 139] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 147] cc => I,
 Pos: [152, 154, 164] ccc => cc,
 Pos: [153, 158] cc => I,
 Pos: [157, 160] cc => I,
 Pos: [163, 169] cc => I,
 Pos: [166, 171] cc => I]
Change: 30, Saving: 29

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [19, 23] cc => I
Apply:  Pos: [21, 26, 39] ccc => cc
Apply:  Pos: [24, 28, 40] ccc => cc
Apply:  Pos: [27, 33] cc => I
Apply:  Pos: [31, 37, 43] ccc => cc
Apply:  Pos: [36, 38] cc => I
Apply:  Pos: [45, 53] cc => I
Apply:  Pos: [49, 52] cc => I
Apply:  Pos: [51, 57] cc => I
Apply:  Pos: [70, 75] cc => I
Apply:  Pos: [72, 87] cc => I
Apply:  Pos: [77, 79] cc => I
Apply:  Pos: [78, 82] cc => I
Apply:  Pos: [81, 86] cc => I
Apply:  Pos: [85, 95] cc => I
Apply:  Pos: [96, 98, 102] ccc => cc
Apply:  Pos: [97, 106] cc => I
Apply:  Pos: [101, 103] cc => I
Apply:  Pos: [109, 117] cc => I
Apply:  Pos: [112, 116] cc => I
Apply:  Pos: [120, 129] cc => I
Apply:  Pos: [135, 137] cc => I
Apply:  Pos: [136, 139] cc => I
Apply:  Pos: [140, 144] cc => I
Apply:  Pos: [143, 147] cc => I
Apply:  Pos: [152, 154, 164] ccc => cc
Apply:  Pos: [153, 158] cc => I
Apply:  Pos: [157, 160] cc => I
Apply:  Pos: [163, 169] cc => I
Apply:  Pos: [166, 171] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [8, 6], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [8, 6], [18, 1], [14, 2], [3, 6], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [5, 19], [12, 14], [18, 1], [0, 7], [13, 5], [19, 7], [1, 7], [4, 14], [15, 12], [19, 7], [5, 18], [3, 6], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [11, 19], [1, 7], [17, 10], [8, 3], [1, 7], [11, 19], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [17, 10], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [15, 4], [5, 10], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [13, 10], [6, 0], [16, 11], [19, 0], [4, 11], [13, 5], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [1, 7], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [2, 10], [17, 10], [11, 5], [2, 13], [8, 9], [1, 7], [6, 0], [5, 18], [3, 6], [15, 4], [13, 18], [14, 2], [5, 19], [8, 9], [19, 1], [12, 2], [6, 0], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  3.2814605236053467

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[39, 42]
[25, 44]
[57, 60]
[55, 61]
[99, 111]
[110, 119]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[19, 31, 33]
[58, 65, 68]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[112, 114, 122]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[75, 81, 86]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[39, 42]
[25, 44]
[57, 60]
[55, 61]
[99, 111]
[110, 119]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.015453815460205

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 21] cc => I, Pos: [7, 21] cc => I, Pos: [19, 31, 33] ccc => cc, Pos: [25, 44] cc => I, Pos: [25, 44] cc => I, Pos: [39, 42] cc => I, Pos: [39, 42] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [57, 60] cc => I, Pos: [57, 60] cc => I, Pos: [58, 65, 68] ccc => cc, Pos: [75, 81, 86] ccc => cc, Pos: [99, 111] cc => I, Pos: [99, 111] cc => I, Pos: [110, 119] cc => I, Pos: [110, 119] cc => I, Pos: [112, 114, 122] ccc => cc]

Plan: 1
[Pos: [7, 21] cc => I,
 Pos: [19, 31, 33] ccc => cc,
 Pos: [25, 44] cc => I,
 Pos: [39, 42] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [57, 60] cc => I,
 Pos: [58, 65, 68] ccc => cc,
 Pos: [75, 81, 86] ccc => cc,
 Pos: [99, 111] cc => I,
 Pos: [110, 119] cc => I,
 Pos: [112, 114, 122] ccc => cc]
Change: 11, Saving: 11

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015623331069946289

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 21] cc => I,
 Pos: [19, 31, 33] ccc => cc,
 Pos: [25, 44] cc => I,
 Pos: [39, 42] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [57, 60] cc => I,
 Pos: [58, 65, 68] ccc => cc,
 Pos: [75, 81, 86] ccc => cc,
 Pos: [99, 111] cc => I,
 Pos: [110, 119] cc => I,
 Pos: [112, 114, 122] ccc => cc]
Change: 11, Saving: 11

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 21] cc => I
Apply:  Pos: [19, 31, 33] ccc => cc
Apply:  Pos: [25, 44] cc => I
Apply:  Pos: [39, 42] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [57, 60] cc => I
Apply:  Pos: [58, 65, 68] ccc => cc
Apply:  Pos: [75, 81, 86] ccc => cc
Apply:  Pos: [99, 111] cc => I
Apply:  Pos: [110, 119] cc => I
Apply:  Pos: [112, 114, 122] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [18, 1], [0, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 7], [4, 2], [9, 6], [18, 1], [14, 2], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [12, 14], [18, 1], [0, 7], [13, 5], [1, 7], [4, 14], [15, 12], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [15, 4], [13, 5], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [17, 10], [2, 10], [11, 5], [2, 13], [3, 6], [5, 18], [6, 0], [15, 4], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  2.0467021465301514

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5937576293945312

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 7], [4, 2], [9, 6], [18, 1], [14, 2], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [12, 14], [18, 1], [0, 7], [13, 5], [1, 7], [4, 14], [15, 12], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [15, 4], [13, 5], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [2, 10], [17, 10], [11, 5], [2, 13], [3, 6], [5, 18], [6, 0], [15, 4], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  1.5937576293945312

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [107] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 25 - (small)
 - circuit cycle: 214

Reduced: 
 - size: 73 (40.56%)
 - depth: 20 (44.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07853317260742188

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [8, 6], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [13, 10], [5, 19], [4, 14], [9, 6], [13, 10], [8, 3], [18, 1], [14, 2], [13, 5], [3, 6], [4, 11], [0, 1], [17, 10], [8, 9], [13, 5], [16, 11], [19, 7], [13, 5], [10, 18], [13, 5], [4, 14], [8, 3], [5, 19], [12, 14], [17, 10], [18, 1], [16, 8], [0, 7], [13, 5], [19, 7], [5, 19], [1, 7], [2, 13], [5, 19], [16, 8], [4, 14], [15, 12], [19, 7], [2, 13], [5, 18], [3, 6], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [14, 13], [11, 3], [6, 0], [11, 19], [1, 7], [14, 13], [17, 10], [19, 1], [5, 10], [19, 1], [8, 3], [14, 2], [5, 10], [1, 7], [11, 19], [15, 4], [14, 2], [6, 0], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [17, 10], [15, 4], [6, 0], [13, 18], [8, 6], [3, 19], [11, 5], [12, 14], [6, 0], [12, 14], [1, 7], [15, 4], [13, 18], [5, 10], [0, 1], [3, 5], [12, 14], [2, 17], [19, 1], [14, 11], [8, 6], [13, 10], [19, 1], [3, 5], [6, 0], [16, 11], [13, 18], [19, 0], [4, 11], [13, 5], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [13, 18], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [19, 7], [5, 18], [19, 7], [6, 0], [5, 18], [5, 19], [16, 14], [1, 7], [2, 13], [5, 19], [4, 16], [3, 19], [2, 13], [19, 0], [13, 10], [9, 6], [11, 3], [2, 17], [0, 7], [17, 10], [11, 5], [2, 13], [15, 4], [0, 7], [8, 9], [15, 4], [1, 7], [6, 0], [16, 8], [2, 17], [5, 18], [0, 1], [3, 6], [15, 4], [16, 8], [13, 18], [0, 1], [14, 2], [5, 19], [8, 9], [19, 1], [12, 2], [6, 0], [3, 5], [14, 13], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 23]
[27, 33]
[33, 36]
[36, 38]
[49, 52]
[45, 53]
[51, 57]
[53, 65]
[70, 75]
[77, 79]
[78, 82]
[81, 86]
[72, 87]
[85, 95]
[101, 103]
[95, 105]
[97, 106]
[103, 110]
[112, 116]
[109, 117]
[106, 120]
[120, 129]
[135, 137]
[136, 139]
[140, 144]
[143, 147]
[153, 158]
[157, 160]
[160, 168]
[163, 169]
[166, 171]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[21, 26, 39]
[24, 28, 40]
[31, 37, 43]
[38, 41, 47]
[152, 154, 164]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[96, 98, 102]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 23]
[27, 33]
[33, 36]
[36, 38]
[49, 52]
[45, 53]
[51, 57]
[53, 65]
[70, 75]
[77, 79]
[78, 82]
[81, 86]
[72, 87]
[85, 95]
[101, 103]
[95, 105]
[97, 106]
[103, 110]
[112, 116]
[109, 117]
[106, 120]
[120, 129]
[135, 137]
[136, 139]
[140, 144]
[143, 147]
[153, 158]
[157, 160]
[160, 168]
[163, 169]
[166, 171]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2808985710144043

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 23] cc => I, Pos: [19, 23] cc => I, Pos: [21, 26, 39] ccc => cc, Pos: [24, 28, 40] ccc => cc, Pos: [27, 33] cc => I, Pos: [27, 33] cc => I, Pos: [31, 37, 43] ccc => cc, Pos: [33, 36] cc => I, Pos: [33, 36] cc => I, Pos: [36, 38] cc => I, Pos: [36, 38] cc => I, Pos: [38, 41, 47] ccc => cc, Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [49, 52] cc => I, Pos: [49, 52] cc => I, Pos: [51, 57] cc => I, Pos: [51, 57] cc => I, Pos: [53, 65] cc => I, Pos: [53, 65] cc => I, Pos: [70, 75] cc => I, Pos: [70, 75] cc => I, Pos: [72, 87] cc => I, Pos: [72, 87] cc => I, Pos: [77, 79] cc => I, Pos: [77, 79] cc => I, Pos: [78, 82] cc => I, Pos: [78, 82] cc => I, Pos: [81, 86] cc => I, Pos: [81, 86] cc => I, Pos: [85, 95] cc => I, Pos: [85, 95] cc => I, Pos: [95, 105] cc => I, Pos: [95, 105] cc => I, Pos: [96, 98, 102] ccc => cc, Pos: [97, 106] cc => I, Pos: [97, 106] cc => I, Pos: [101, 103] cc => I, Pos: [101, 103] cc => I, Pos: [103, 110] cc => I, Pos: [103, 110] cc => I, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [109, 117] cc => I, Pos: [109, 117] cc => I, Pos: [112, 116] cc => I, Pos: [112, 116] cc => I, Pos: [120, 129] cc => I, Pos: [120, 129] cc => I, Pos: [135, 137] cc => I, Pos: [135, 137] cc => I, Pos: [136, 139] cc => I, Pos: [136, 139] cc => I, Pos: [140, 144] cc => I, Pos: [140, 144] cc => I, Pos: [143, 147] cc => I, Pos: [143, 147] cc => I, Pos: [152, 154, 164] ccc => cc, Pos: [153, 158] cc => I, Pos: [153, 158] cc => I, Pos: [157, 160] cc => I, Pos: [157, 160] cc => I, Pos: [160, 168] cc => I, Pos: [160, 168] cc => I, Pos: [163, 169] cc => I, Pos: [163, 169] cc => I, Pos: [166, 171] cc => I, Pos: [166, 171] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 23] cc => I,
 Pos: [21, 26, 39] ccc => cc,
 Pos: [24, 28, 40] ccc => cc,
 Pos: [33, 36] cc => I,
 Pos: [31, 37, 43] ccc => cc,
 Pos: [38, 41, 47] ccc => cc,
 Pos: [53, 65] cc => I,
 Pos: [49, 52] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [72, 87] cc => I,
 Pos: [77, 79] cc => I,
 Pos: [78, 82] cc => I,
 Pos: [81, 86] cc => I,
 Pos: [85, 95] cc => I,
 Pos: [96, 98, 102] ccc => cc,
 Pos: [97, 106] cc => I,
 Pos: [103, 110] cc => I,
 Pos: [109, 117] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [120, 129] cc => I,
 Pos: [135, 137] cc => I,
 Pos: [136, 139] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 147] cc => I,
 Pos: [152, 154, 164] ccc => cc,
 Pos: [153, 158] cc => I,
 Pos: [157, 160] cc => I,
 Pos: [163, 169] cc => I,
 Pos: [166, 171] cc => I]
Change: 30, Saving: 108

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [19, 23] cc => I
Apply:  Pos: [21, 26, 39] ccc => cc
Apply:  Pos: [24, 28, 40] ccc => cc
Apply:  Pos: [33, 36] cc => I
Apply:  Pos: [31, 37, 43] ccc => cc
Apply:  Pos: [38, 41, 47] ccc => cc
Apply:  Pos: [53, 65] cc => I
Apply:  Pos: [49, 52] cc => I
Apply:  Pos: [51, 57] cc => I
Apply:  Pos: [70, 75] cc => I
Apply:  Pos: [72, 87] cc => I
Apply:  Pos: [77, 79] cc => I
Apply:  Pos: [78, 82] cc => I
Apply:  Pos: [81, 86] cc => I
Apply:  Pos: [85, 95] cc => I
Apply:  Pos: [96, 98, 102] ccc => cc
Apply:  Pos: [97, 106] cc => I
Apply:  Pos: [103, 110] cc => I
Apply:  Pos: [109, 117] cc => I
Apply:  Pos: [112, 116] cc => I
Apply:  Pos: [120, 129] cc => I
Apply:  Pos: [135, 137] cc => I
Apply:  Pos: [136, 139] cc => I
Apply:  Pos: [140, 144] cc => I
Apply:  Pos: [143, 147] cc => I
Apply:  Pos: [152, 154, 164] ccc => cc
Apply:  Pos: [153, 158] cc => I
Apply:  Pos: [157, 160] cc => I
Apply:  Pos: [163, 169] cc => I
Apply:  Pos: [166, 171] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [8, 6], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [8, 6], [18, 1], [14, 2], [13, 5], [3, 6], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [13, 19], [5, 19], [12, 14], [18, 1], [16, 8], [0, 7], [19, 7], [1, 7], [4, 14], [15, 12], [19, 7], [5, 18], [3, 6], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [11, 19], [1, 7], [17, 10], [8, 3], [1, 7], [11, 19], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [17, 10], [8, 6], [6, 0], [3, 19], [11, 5], [12, 14], [1, 7], [15, 4], [5, 10], [0, 1], [2, 17], [14, 11], [8, 6], [13, 10], [6, 0], [16, 11], [19, 0], [4, 11], [13, 5], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [1, 7], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [2, 10], [17, 10], [11, 5], [2, 13], [8, 9], [1, 7], [6, 0], [5, 18], [3, 6], [15, 4], [13, 18], [14, 2], [5, 19], [8, 9], [19, 1], [12, 2], [6, 0], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  3.2808985710144043

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[26, 46]
[58, 61]
[56, 62]
[100, 112]
[111, 120]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[59, 66, 69]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 115, 123]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 82, 87]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[26, 46]
[58, 61]
[56, 62]
[100, 112]
[111, 120]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.046903371810913

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 21] cc => I, Pos: [7, 21] cc => I, Pos: [26, 46] cc => I, Pos: [26, 46] cc => I, Pos: [56, 62] cc => I, Pos: [56, 62] cc => I, Pos: [58, 61] cc => I, Pos: [58, 61] cc => I, Pos: [59, 66, 69] ccc => cc, Pos: [77, 82, 87] ccc => cc, Pos: [100, 112] cc => I, Pos: [100, 112] cc => I, Pos: [111, 120] cc => I, Pos: [111, 120] cc => I, Pos: [113, 115, 123] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 21] cc => I,
 Pos: [26, 46] cc => I,
 Pos: [56, 62] cc => I,
 Pos: [58, 61] cc => I,
 Pos: [59, 66, 69] ccc => cc,
 Pos: [77, 82, 87] ccc => cc,
 Pos: [100, 112] cc => I,
 Pos: [111, 120] cc => I,
 Pos: [113, 115, 123] ccc => cc]
Change: 9, Saving: 30

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 21] cc => I
Apply:  Pos: [26, 46] cc => I
Apply:  Pos: [56, 62] cc => I
Apply:  Pos: [58, 61] cc => I
Apply:  Pos: [59, 66, 69] ccc => cc
Apply:  Pos: [77, 82, 87] ccc => cc
Apply:  Pos: [100, 112] cc => I
Apply:  Pos: [111, 120] cc => I
Apply:  Pos: [113, 115, 123] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [18, 1], [0, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [18, 1], [14, 2], [13, 5], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [5, 19], [13, 19], [12, 14], [18, 1], [16, 8], [19, 7], [1, 7], [0, 7], [4, 14], [15, 12], [19, 7], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [12, 14], [1, 7], [15, 4], [13, 5], [0, 1], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [17, 10], [2, 10], [11, 5], [2, 13], [3, 6], [5, 18], [6, 0], [15, 4], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  2.046903371810913

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 41]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 41]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7187507152557373

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [38, 41] cc => I, Pos: [38, 41] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [38, 41] cc => I]
Change: 1, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [38, 41] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [18, 1], [14, 2], [13, 5], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [13, 19], [5, 19], [12, 14], [18, 1], [16, 8], [1, 7], [0, 7], [4, 14], [15, 12], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [12, 14], [1, 7], [15, 4], [13, 5], [0, 1], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [2, 10], [17, 10], [11, 5], [2, 13], [3, 6], [5, 18], [6, 0], [15, 4], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  1.7187507152557373

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7030961513519287

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [18, 1], [0, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [18, 1], [14, 2], [13, 5], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [5, 19], [13, 19], [12, 14], [18, 1], [16, 8], [0, 7], [1, 7], [4, 14], [15, 12], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [12, 14], [1, 7], [15, 4], [13, 5], [0, 1], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [17, 10], [2, 10], [11, 5], [2, 13], [3, 6], [5, 18], [6, 0], [15, 4], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  1.7030961513519287

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [109] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 25 - (small)
 - circuit cycle: 218

Reduced: 
 - size: 71 (39.44%)
 - cycle: 142 (39.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07813739776611328

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [8, 6], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [13, 10], [5, 19], [4, 14], [9, 6], [13, 10], [8, 3], [18, 1], [14, 2], [13, 5], [3, 6], [4, 11], [0, 1], [17, 10], [8, 9], [13, 5], [16, 11], [19, 7], [13, 5], [10, 18], [13, 5], [4, 14], [8, 3], [5, 19], [12, 14], [17, 10], [18, 1], [16, 8], [0, 7], [13, 5], [19, 7], [5, 19], [1, 7], [2, 13], [5, 19], [16, 8], [4, 14], [15, 12], [19, 7], [2, 13], [5, 18], [3, 6], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [14, 13], [11, 3], [6, 0], [11, 19], [1, 7], [14, 13], [17, 10], [19, 1], [5, 10], [19, 1], [8, 3], [14, 2], [5, 10], [1, 7], [11, 19], [15, 4], [14, 2], [6, 0], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [17, 10], [15, 4], [6, 0], [13, 18], [8, 6], [3, 19], [11, 5], [12, 14], [6, 0], [12, 14], [1, 7], [15, 4], [13, 18], [5, 10], [0, 1], [3, 5], [12, 14], [2, 17], [19, 1], [14, 11], [8, 6], [13, 10], [19, 1], [3, 5], [6, 0], [16, 11], [13, 18], [19, 0], [4, 11], [13, 5], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [13, 18], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [19, 7], [5, 18], [19, 7], [6, 0], [5, 18], [5, 19], [16, 14], [1, 7], [2, 13], [5, 19], [4, 16], [3, 19], [2, 13], [19, 0], [13, 10], [9, 6], [11, 3], [2, 17], [0, 7], [17, 10], [11, 5], [2, 13], [15, 4], [0, 7], [8, 9], [15, 4], [1, 7], [6, 0], [16, 8], [2, 17], [5, 18], [0, 1], [3, 6], [15, 4], [16, 8], [13, 18], [0, 1], [14, 2], [5, 19], [8, 9], [19, 1], [12, 2], [6, 0], [3, 5], [14, 13], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 23]
[27, 33]
[33, 36]
[36, 38]
[49, 52]
[45, 53]
[51, 57]
[53, 65]
[70, 75]
[77, 79]
[78, 82]
[81, 86]
[72, 87]
[85, 95]
[101, 103]
[95, 105]
[97, 106]
[103, 110]
[112, 116]
[109, 117]
[106, 120]
[120, 129]
[135, 137]
[136, 139]
[140, 144]
[143, 147]
[153, 158]
[157, 160]
[160, 168]
[163, 169]
[166, 171]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[21, 26, 39]
[24, 28, 40]
[31, 37, 43]
[38, 41, 47]
[152, 154, 164]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[96, 98, 102]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 23]
[27, 33]
[33, 36]
[36, 38]
[49, 52]
[45, 53]
[51, 57]
[53, 65]
[70, 75]
[77, 79]
[78, 82]
[81, 86]
[72, 87]
[85, 95]
[101, 103]
[95, 105]
[97, 106]
[103, 110]
[112, 116]
[109, 117]
[106, 120]
[120, 129]
[135, 137]
[136, 139]
[140, 144]
[143, 147]
[153, 158]
[157, 160]
[160, 168]
[163, 169]
[166, 171]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2531609535217285

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 23] cc => I, Pos: [19, 23] cc => I, Pos: [21, 26, 39] ccc => cc, Pos: [24, 28, 40] ccc => cc, Pos: [27, 33] cc => I, Pos: [27, 33] cc => I, Pos: [31, 37, 43] ccc => cc, Pos: [33, 36] cc => I, Pos: [33, 36] cc => I, Pos: [36, 38] cc => I, Pos: [36, 38] cc => I, Pos: [38, 41, 47] ccc => cc, Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [49, 52] cc => I, Pos: [49, 52] cc => I, Pos: [51, 57] cc => I, Pos: [51, 57] cc => I, Pos: [53, 65] cc => I, Pos: [53, 65] cc => I, Pos: [70, 75] cc => I, Pos: [70, 75] cc => I, Pos: [72, 87] cc => I, Pos: [72, 87] cc => I, Pos: [77, 79] cc => I, Pos: [77, 79] cc => I, Pos: [78, 82] cc => I, Pos: [78, 82] cc => I, Pos: [81, 86] cc => I, Pos: [81, 86] cc => I, Pos: [85, 95] cc => I, Pos: [85, 95] cc => I, Pos: [95, 105] cc => I, Pos: [95, 105] cc => I, Pos: [96, 98, 102] ccc => cc, Pos: [97, 106] cc => I, Pos: [97, 106] cc => I, Pos: [101, 103] cc => I, Pos: [101, 103] cc => I, Pos: [103, 110] cc => I, Pos: [103, 110] cc => I, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [109, 117] cc => I, Pos: [109, 117] cc => I, Pos: [112, 116] cc => I, Pos: [112, 116] cc => I, Pos: [120, 129] cc => I, Pos: [120, 129] cc => I, Pos: [135, 137] cc => I, Pos: [135, 137] cc => I, Pos: [136, 139] cc => I, Pos: [136, 139] cc => I, Pos: [140, 144] cc => I, Pos: [140, 144] cc => I, Pos: [143, 147] cc => I, Pos: [143, 147] cc => I, Pos: [152, 154, 164] ccc => cc, Pos: [153, 158] cc => I, Pos: [153, 158] cc => I, Pos: [157, 160] cc => I, Pos: [157, 160] cc => I, Pos: [160, 168] cc => I, Pos: [160, 168] cc => I, Pos: [163, 169] cc => I, Pos: [163, 169] cc => I, Pos: [166, 171] cc => I, Pos: [166, 171] cc => I]

--------End Timer [Generate Plans]:  0.07812333106994629

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 23] cc => I,
 Pos: [21, 26, 39] ccc => cc,
 Pos: [24, 28, 40] ccc => cc,
 Pos: [27, 33] cc => I,
 Pos: [31, 37, 43] ccc => cc,
 Pos: [36, 38] cc => I,
 Pos: [45, 53] cc => I,
 Pos: [49, 52] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [72, 87] cc => I,
 Pos: [77, 79] cc => I,
 Pos: [78, 82] cc => I,
 Pos: [81, 86] cc => I,
 Pos: [95, 105] cc => I,
 Pos: [96, 98, 102] ccc => cc,
 Pos: [97, 106] cc => I,
 Pos: [101, 103] cc => I,
 Pos: [109, 117] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [120, 129] cc => I,
 Pos: [135, 137] cc => I,
 Pos: [136, 139] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 147] cc => I,
 Pos: [152, 154, 164] ccc => cc,
 Pos: [153, 158] cc => I,
 Pos: [157, 160] cc => I,
 Pos: [163, 169] cc => I,
 Pos: [166, 171] cc => I]
Change: 30, Saving: 29

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [19, 23] cc => I
Apply:  Pos: [21, 26, 39] ccc => cc
Apply:  Pos: [24, 28, 40] ccc => cc
Apply:  Pos: [27, 33] cc => I
Apply:  Pos: [31, 37, 43] ccc => cc
Apply:  Pos: [36, 38] cc => I
Apply:  Pos: [45, 53] cc => I
Apply:  Pos: [49, 52] cc => I
Apply:  Pos: [51, 57] cc => I
Apply:  Pos: [70, 75] cc => I
Apply:  Pos: [72, 87] cc => I
Apply:  Pos: [77, 79] cc => I
Apply:  Pos: [78, 82] cc => I
Apply:  Pos: [81, 86] cc => I
Apply:  Pos: [95, 105] cc => I
Apply:  Pos: [96, 98, 102] ccc => cc
Apply:  Pos: [97, 106] cc => I
Apply:  Pos: [101, 103] cc => I
Apply:  Pos: [109, 117] cc => I
Apply:  Pos: [112, 116] cc => I
Apply:  Pos: [120, 129] cc => I
Apply:  Pos: [135, 137] cc => I
Apply:  Pos: [136, 139] cc => I
Apply:  Pos: [140, 144] cc => I
Apply:  Pos: [143, 147] cc => I
Apply:  Pos: [152, 154, 164] ccc => cc
Apply:  Pos: [153, 158] cc => I
Apply:  Pos: [157, 160] cc => I
Apply:  Pos: [163, 169] cc => I
Apply:  Pos: [166, 171] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [8, 6], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [8, 6], [18, 1], [14, 2], [3, 6], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [5, 19], [12, 14], [18, 1], [0, 7], [13, 5], [19, 7], [1, 7], [4, 14], [15, 12], [19, 7], [5, 18], [3, 6], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [11, 19], [1, 7], [17, 10], [8, 3], [1, 7], [11, 19], [15, 4], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [17, 10], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [5, 10], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [13, 10], [6, 0], [16, 11], [19, 0], [4, 11], [13, 5], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [1, 7], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [2, 10], [17, 10], [11, 5], [2, 13], [8, 9], [1, 7], [6, 0], [5, 18], [3, 6], [15, 4], [13, 18], [14, 2], [5, 19], [8, 9], [19, 1], [12, 2], [6, 0], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  3.331284284591675

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[39, 42]
[25, 44]
[57, 60]
[55, 61]
[99, 111]
[110, 119]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[19, 31, 33]
[58, 66, 69]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[112, 114, 122]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[75, 81, 86]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[39, 42]
[25, 44]
[57, 60]
[55, 61]
[99, 111]
[110, 119]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9882152080535889

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 21] cc => I, Pos: [7, 21] cc => I, Pos: [19, 31, 33] ccc => cc, Pos: [25, 44] cc => I, Pos: [25, 44] cc => I, Pos: [39, 42] cc => I, Pos: [39, 42] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [57, 60] cc => I, Pos: [57, 60] cc => I, Pos: [58, 66, 69] ccc => cc, Pos: [75, 81, 86] ccc => cc, Pos: [99, 111] cc => I, Pos: [99, 111] cc => I, Pos: [110, 119] cc => I, Pos: [110, 119] cc => I, Pos: [112, 114, 122] ccc => cc]

--------End Timer [Generate Plans]:  0.03124856948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 21] cc => I,
 Pos: [19, 31, 33] ccc => cc,
 Pos: [25, 44] cc => I,
 Pos: [39, 42] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [57, 60] cc => I,
 Pos: [58, 66, 69] ccc => cc,
 Pos: [75, 81, 86] ccc => cc,
 Pos: [99, 111] cc => I,
 Pos: [110, 119] cc => I,
 Pos: [112, 114, 122] ccc => cc]
Change: 11, Saving: 11

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 21] cc => I
Apply:  Pos: [19, 31, 33] ccc => cc
Apply:  Pos: [25, 44] cc => I
Apply:  Pos: [39, 42] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [57, 60] cc => I
Apply:  Pos: [58, 66, 69] ccc => cc
Apply:  Pos: [75, 81, 86] ccc => cc
Apply:  Pos: [99, 111] cc => I
Apply:  Pos: [110, 119] cc => I
Apply:  Pos: [112, 114, 122] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [18, 1], [0, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 7], [4, 2], [9, 6], [18, 1], [14, 2], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [12, 14], [18, 1], [0, 7], [13, 5], [1, 7], [4, 14], [15, 12], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [15, 4], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [13, 5], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [17, 10], [2, 10], [11, 5], [2, 13], [3, 6], [5, 18], [6, 0], [15, 4], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  2.0194637775421143

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6266121864318848

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 7], [4, 2], [9, 6], [18, 1], [14, 2], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [12, 14], [18, 1], [0, 7], [13, 5], [1, 7], [4, 14], [15, 12], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [15, 4], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [13, 5], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [2, 10], [17, 10], [11, 5], [2, 13], [3, 6], [5, 18], [6, 0], [15, 4], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  1.6266121864318848

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [107] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 25 - (small)
 - circuit cycle: 214

Reduced: 
 - size: 73 (40.56%)
 - depth: 20 (44.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07811975479125977

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [8, 6], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [13, 10], [5, 19], [4, 14], [9, 6], [13, 10], [8, 3], [18, 1], [14, 2], [13, 5], [3, 6], [4, 11], [0, 1], [17, 10], [8, 9], [13, 5], [16, 11], [19, 7], [13, 5], [10, 18], [13, 5], [4, 14], [8, 3], [5, 19], [12, 14], [17, 10], [18, 1], [16, 8], [0, 7], [13, 5], [19, 7], [5, 19], [1, 7], [2, 13], [5, 19], [16, 8], [4, 14], [15, 12], [19, 7], [2, 13], [5, 18], [3, 6], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [14, 13], [11, 3], [6, 0], [11, 19], [1, 7], [14, 13], [17, 10], [19, 1], [5, 10], [19, 1], [8, 3], [14, 2], [5, 10], [1, 7], [11, 19], [15, 4], [14, 2], [6, 0], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [17, 10], [15, 4], [6, 0], [13, 18], [8, 6], [3, 19], [11, 5], [12, 14], [6, 0], [12, 14], [1, 7], [15, 4], [13, 18], [5, 10], [0, 1], [3, 5], [12, 14], [2, 17], [19, 1], [14, 11], [8, 6], [13, 10], [19, 1], [3, 5], [6, 0], [16, 11], [13, 18], [19, 0], [4, 11], [13, 5], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [13, 18], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [19, 7], [5, 18], [19, 7], [6, 0], [5, 18], [5, 19], [16, 14], [1, 7], [2, 13], [5, 19], [4, 16], [3, 19], [2, 13], [19, 0], [13, 10], [9, 6], [11, 3], [2, 17], [0, 7], [17, 10], [11, 5], [2, 13], [15, 4], [0, 7], [8, 9], [15, 4], [1, 7], [6, 0], [16, 8], [2, 17], [5, 18], [0, 1], [3, 6], [15, 4], [16, 8], [13, 18], [0, 1], [14, 2], [5, 19], [8, 9], [19, 1], [12, 2], [6, 0], [3, 5], [14, 13], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 23]
[27, 33]
[33, 36]
[36, 38]
[49, 52]
[45, 53]
[51, 57]
[53, 65]
[70, 75]
[77, 79]
[78, 82]
[81, 86]
[72, 87]
[85, 95]
[101, 103]
[95, 105]
[97, 106]
[103, 110]
[112, 116]
[109, 117]
[106, 120]
[120, 129]
[135, 137]
[136, 139]
[140, 144]
[143, 147]
[153, 158]
[157, 160]
[160, 168]
[163, 169]
[166, 171]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[21, 26, 39]
[24, 28, 40]
[31, 37, 43]
[38, 41, 47]
[152, 154, 164]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[96, 98, 102]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 23]
[27, 33]
[33, 36]
[36, 38]
[49, 52]
[45, 53]
[51, 57]
[53, 65]
[70, 75]
[77, 79]
[78, 82]
[81, 86]
[72, 87]
[85, 95]
[101, 103]
[95, 105]
[97, 106]
[103, 110]
[112, 116]
[109, 117]
[106, 120]
[120, 129]
[135, 137]
[136, 139]
[140, 144]
[143, 147]
[153, 158]
[157, 160]
[160, 168]
[163, 169]
[166, 171]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.203134059906006

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 23] cc => I, Pos: [19, 23] cc => I, Pos: [21, 26, 39] ccc => cc, Pos: [24, 28, 40] ccc => cc, Pos: [27, 33] cc => I, Pos: [27, 33] cc => I, Pos: [31, 37, 43] ccc => cc, Pos: [33, 36] cc => I, Pos: [33, 36] cc => I, Pos: [36, 38] cc => I, Pos: [36, 38] cc => I, Pos: [38, 41, 47] ccc => cc, Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [49, 52] cc => I, Pos: [49, 52] cc => I, Pos: [51, 57] cc => I, Pos: [51, 57] cc => I, Pos: [53, 65] cc => I, Pos: [53, 65] cc => I, Pos: [70, 75] cc => I, Pos: [70, 75] cc => I, Pos: [72, 87] cc => I, Pos: [72, 87] cc => I, Pos: [77, 79] cc => I, Pos: [77, 79] cc => I, Pos: [78, 82] cc => I, Pos: [78, 82] cc => I, Pos: [81, 86] cc => I, Pos: [81, 86] cc => I, Pos: [85, 95] cc => I, Pos: [85, 95] cc => I, Pos: [95, 105] cc => I, Pos: [95, 105] cc => I, Pos: [96, 98, 102] ccc => cc, Pos: [97, 106] cc => I, Pos: [97, 106] cc => I, Pos: [101, 103] cc => I, Pos: [101, 103] cc => I, Pos: [103, 110] cc => I, Pos: [103, 110] cc => I, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [109, 117] cc => I, Pos: [109, 117] cc => I, Pos: [112, 116] cc => I, Pos: [112, 116] cc => I, Pos: [120, 129] cc => I, Pos: [120, 129] cc => I, Pos: [135, 137] cc => I, Pos: [135, 137] cc => I, Pos: [136, 139] cc => I, Pos: [136, 139] cc => I, Pos: [140, 144] cc => I, Pos: [140, 144] cc => I, Pos: [143, 147] cc => I, Pos: [143, 147] cc => I, Pos: [152, 154, 164] ccc => cc, Pos: [153, 158] cc => I, Pos: [153, 158] cc => I, Pos: [157, 160] cc => I, Pos: [157, 160] cc => I, Pos: [160, 168] cc => I, Pos: [160, 168] cc => I, Pos: [163, 169] cc => I, Pos: [163, 169] cc => I, Pos: [166, 171] cc => I, Pos: [166, 171] cc => I]

--------End Timer [Generate Plans]:  0.09373903274536133

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 23] cc => I,
 Pos: [21, 26, 39] ccc => cc,
 Pos: [24, 28, 40] ccc => cc,
 Pos: [33, 36] cc => I,
 Pos: [31, 37, 43] ccc => cc,
 Pos: [38, 41, 47] ccc => cc,
 Pos: [45, 53] cc => I,
 Pos: [49, 52] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [72, 87] cc => I,
 Pos: [77, 79] cc => I,
 Pos: [78, 82] cc => I,
 Pos: [81, 86] cc => I,
 Pos: [95, 105] cc => I,
 Pos: [96, 98, 102] ccc => cc,
 Pos: [97, 106] cc => I,
 Pos: [103, 110] cc => I,
 Pos: [109, 117] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [120, 129] cc => I,
 Pos: [135, 137] cc => I,
 Pos: [136, 139] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 147] cc => I,
 Pos: [152, 154, 164] ccc => cc,
 Pos: [153, 158] cc => I,
 Pos: [160, 168] cc => I,
 Pos: [163, 169] cc => I,
 Pos: [166, 171] cc => I]
Change: 30, Saving: 29

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [19, 23] cc => I
Apply:  Pos: [21, 26, 39] ccc => cc
Apply:  Pos: [24, 28, 40] ccc => cc
Apply:  Pos: [33, 36] cc => I
Apply:  Pos: [31, 37, 43] ccc => cc
Apply:  Pos: [38, 41, 47] ccc => cc
Apply:  Pos: [45, 53] cc => I
Apply:  Pos: [49, 52] cc => I
Apply:  Pos: [51, 57] cc => I
Apply:  Pos: [70, 75] cc => I
Apply:  Pos: [72, 87] cc => I
Apply:  Pos: [77, 79] cc => I
Apply:  Pos: [78, 82] cc => I
Apply:  Pos: [81, 86] cc => I
Apply:  Pos: [95, 105] cc => I
Apply:  Pos: [96, 98, 102] ccc => cc
Apply:  Pos: [97, 106] cc => I
Apply:  Pos: [103, 110] cc => I
Apply:  Pos: [109, 117] cc => I
Apply:  Pos: [112, 116] cc => I
Apply:  Pos: [120, 129] cc => I
Apply:  Pos: [135, 137] cc => I
Apply:  Pos: [136, 139] cc => I
Apply:  Pos: [140, 144] cc => I
Apply:  Pos: [143, 147] cc => I
Apply:  Pos: [152, 154, 164] ccc => cc
Apply:  Pos: [153, 158] cc => I
Apply:  Pos: [160, 168] cc => I
Apply:  Pos: [163, 169] cc => I
Apply:  Pos: [166, 171] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [8, 6], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [8, 6], [18, 1], [14, 2], [13, 5], [3, 6], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [13, 19], [5, 19], [12, 14], [18, 1], [0, 7], [19, 7], [1, 7], [4, 14], [15, 12], [19, 7], [5, 18], [3, 6], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [11, 19], [1, 7], [17, 10], [8, 3], [1, 7], [11, 19], [15, 4], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [17, 10], [8, 6], [6, 0], [3, 19], [11, 5], [12, 14], [1, 7], [5, 10], [0, 1], [2, 17], [14, 11], [8, 6], [13, 10], [6, 0], [16, 11], [19, 0], [4, 11], [13, 5], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [1, 7], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [2, 10], [17, 10], [11, 5], [2, 13], [15, 4], [8, 9], [1, 7], [6, 0], [5, 18], [3, 6], [13, 18], [14, 2], [5, 19], [8, 9], [19, 1], [12, 2], [6, 0], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  3.296873092651367

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[26, 45]
[58, 61]
[56, 62]
[100, 113]
[112, 120]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[59, 67, 70]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[114, 116, 123]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 82, 87]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[26, 45]
[58, 61]
[56, 62]
[100, 113]
[112, 120]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.000035524368286

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 21] cc => I, Pos: [7, 21] cc => I, Pos: [26, 45] cc => I, Pos: [26, 45] cc => I, Pos: [56, 62] cc => I, Pos: [56, 62] cc => I, Pos: [58, 61] cc => I, Pos: [58, 61] cc => I, Pos: [59, 67, 70] ccc => cc, Pos: [77, 82, 87] ccc => cc, Pos: [100, 113] cc => I, Pos: [100, 113] cc => I, Pos: [112, 120] cc => I, Pos: [112, 120] cc => I, Pos: [114, 116, 123] ccc => cc]

--------End Timer [Generate Plans]:  0.031246662139892578

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 21] cc => I,
 Pos: [26, 45] cc => I,
 Pos: [56, 62] cc => I,
 Pos: [58, 61] cc => I,
 Pos: [59, 67, 70] ccc => cc,
 Pos: [77, 82, 87] ccc => cc,
 Pos: [100, 113] cc => I,
 Pos: [112, 120] cc => I,
 Pos: [114, 116, 123] ccc => cc]
Change: 9, Saving: 9

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 21] cc => I
Apply:  Pos: [26, 45] cc => I
Apply:  Pos: [56, 62] cc => I
Apply:  Pos: [58, 61] cc => I
Apply:  Pos: [59, 67, 70] ccc => cc
Apply:  Pos: [77, 82, 87] ccc => cc
Apply:  Pos: [100, 113] cc => I
Apply:  Pos: [112, 120] cc => I
Apply:  Pos: [114, 116, 123] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [18, 1], [0, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [18, 1], [14, 2], [13, 5], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [5, 19], [13, 19], [12, 14], [18, 1], [19, 7], [1, 7], [0, 7], [4, 14], [15, 12], [19, 7], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [15, 4], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [12, 14], [1, 7], [13, 5], [0, 1], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [17, 10], [2, 10], [11, 5], [2, 13], [15, 4], [3, 6], [5, 18], [6, 0], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  2.0312821865081787

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 40]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 40]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6718652248382568

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 40] cc => I, Pos: [37, 40] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 40] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 40] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [18, 1], [14, 2], [13, 5], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [13, 19], [5, 19], [12, 14], [18, 1], [1, 7], [0, 7], [4, 14], [15, 12], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [15, 4], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [12, 14], [1, 7], [13, 5], [0, 1], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [2, 10], [17, 10], [11, 5], [2, 13], [15, 4], [3, 6], [5, 18], [6, 0], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  1.6718652248382568

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6405644416809082

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [18, 1], [0, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [18, 1], [14, 2], [13, 5], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [5, 19], [13, 19], [12, 14], [18, 1], [0, 7], [1, 7], [4, 14], [15, 12], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [15, 4], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [12, 14], [1, 7], [13, 5], [0, 1], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [17, 10], [2, 10], [11, 5], [2, 13], [15, 4], [3, 6], [5, 18], [6, 0], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  1.6405644416809082

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [109] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 25 - (small)
 - circuit cycle: 218

Reduced: 
 - size: 71 (39.44%)
 - depth: 20 (44.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.06249427795410156

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [8, 6], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [13, 10], [5, 19], [4, 14], [9, 6], [13, 10], [8, 3], [18, 1], [14, 2], [13, 5], [3, 6], [4, 11], [0, 1], [17, 10], [8, 9], [13, 5], [16, 11], [19, 7], [13, 5], [10, 18], [13, 5], [4, 14], [8, 3], [5, 19], [12, 14], [17, 10], [18, 1], [16, 8], [0, 7], [13, 5], [19, 7], [5, 19], [1, 7], [2, 13], [5, 19], [16, 8], [4, 14], [15, 12], [19, 7], [2, 13], [5, 18], [3, 6], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [14, 13], [11, 3], [6, 0], [11, 19], [1, 7], [14, 13], [17, 10], [19, 1], [5, 10], [19, 1], [8, 3], [14, 2], [5, 10], [1, 7], [11, 19], [15, 4], [14, 2], [6, 0], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [17, 10], [15, 4], [6, 0], [13, 18], [8, 6], [3, 19], [11, 5], [12, 14], [6, 0], [12, 14], [1, 7], [15, 4], [13, 18], [5, 10], [0, 1], [3, 5], [12, 14], [2, 17], [19, 1], [14, 11], [8, 6], [13, 10], [19, 1], [3, 5], [6, 0], [16, 11], [13, 18], [19, 0], [4, 11], [13, 5], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [13, 18], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [19, 7], [5, 18], [19, 7], [6, 0], [5, 18], [5, 19], [16, 14], [1, 7], [2, 13], [5, 19], [4, 16], [3, 19], [2, 13], [19, 0], [13, 10], [9, 6], [11, 3], [2, 17], [0, 7], [17, 10], [11, 5], [2, 13], [15, 4], [0, 7], [8, 9], [15, 4], [1, 7], [6, 0], [16, 8], [2, 17], [5, 18], [0, 1], [3, 6], [15, 4], [16, 8], [13, 18], [0, 1], [14, 2], [5, 19], [8, 9], [19, 1], [12, 2], [6, 0], [3, 5], [14, 13], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 23]
[27, 33]
[33, 36]
[36, 38]
[49, 52]
[45, 53]
[51, 57]
[53, 65]
[70, 75]
[77, 79]
[78, 82]
[81, 86]
[72, 87]
[85, 95]
[101, 103]
[95, 105]
[97, 106]
[103, 110]
[112, 116]
[109, 117]
[106, 120]
[120, 129]
[135, 137]
[136, 139]
[140, 144]
[143, 147]
[153, 158]
[157, 160]
[160, 168]
[163, 169]
[166, 171]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[21, 26, 39]
[24, 28, 40]
[31, 37, 43]
[38, 41, 47]
[152, 154, 164]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[96, 98, 102]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 23]
[27, 33]
[33, 36]
[36, 38]
[49, 52]
[45, 53]
[51, 57]
[53, 65]
[70, 75]
[77, 79]
[78, 82]
[81, 86]
[72, 87]
[85, 95]
[101, 103]
[95, 105]
[97, 106]
[103, 110]
[112, 116]
[109, 117]
[106, 120]
[120, 129]
[135, 137]
[136, 139]
[140, 144]
[143, 147]
[153, 158]
[157, 160]
[160, 168]
[163, 169]
[166, 171]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.1875078678131104

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 23] cc => I, Pos: [19, 23] cc => I, Pos: [21, 26, 39] ccc => cc, Pos: [24, 28, 40] ccc => cc, Pos: [27, 33] cc => I, Pos: [27, 33] cc => I, Pos: [31, 37, 43] ccc => cc, Pos: [33, 36] cc => I, Pos: [33, 36] cc => I, Pos: [36, 38] cc => I, Pos: [36, 38] cc => I, Pos: [38, 41, 47] ccc => cc, Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [49, 52] cc => I, Pos: [49, 52] cc => I, Pos: [51, 57] cc => I, Pos: [51, 57] cc => I, Pos: [53, 65] cc => I, Pos: [53, 65] cc => I, Pos: [70, 75] cc => I, Pos: [70, 75] cc => I, Pos: [72, 87] cc => I, Pos: [72, 87] cc => I, Pos: [77, 79] cc => I, Pos: [77, 79] cc => I, Pos: [78, 82] cc => I, Pos: [78, 82] cc => I, Pos: [81, 86] cc => I, Pos: [81, 86] cc => I, Pos: [85, 95] cc => I, Pos: [85, 95] cc => I, Pos: [95, 105] cc => I, Pos: [95, 105] cc => I, Pos: [96, 98, 102] ccc => cc, Pos: [97, 106] cc => I, Pos: [97, 106] cc => I, Pos: [101, 103] cc => I, Pos: [101, 103] cc => I, Pos: [103, 110] cc => I, Pos: [103, 110] cc => I, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [109, 117] cc => I, Pos: [109, 117] cc => I, Pos: [112, 116] cc => I, Pos: [112, 116] cc => I, Pos: [120, 129] cc => I, Pos: [120, 129] cc => I, Pos: [135, 137] cc => I, Pos: [135, 137] cc => I, Pos: [136, 139] cc => I, Pos: [136, 139] cc => I, Pos: [140, 144] cc => I, Pos: [140, 144] cc => I, Pos: [143, 147] cc => I, Pos: [143, 147] cc => I, Pos: [152, 154, 164] ccc => cc, Pos: [153, 158] cc => I, Pos: [153, 158] cc => I, Pos: [157, 160] cc => I, Pos: [157, 160] cc => I, Pos: [160, 168] cc => I, Pos: [160, 168] cc => I, Pos: [163, 169] cc => I, Pos: [163, 169] cc => I, Pos: [166, 171] cc => I, Pos: [166, 171] cc => I]

--------End Timer [Generate Plans]:  0.07842326164245605

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 23] cc => I,
 Pos: [21, 26, 39] ccc => cc,
 Pos: [24, 28, 40] ccc => cc,
 Pos: [33, 36] cc => I,
 Pos: [31, 37, 43] ccc => cc,
 Pos: [38, 41, 47] ccc => cc,
 Pos: [45, 53] cc => I,
 Pos: [49, 52] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [72, 87] cc => I,
 Pos: [77, 79] cc => I,
 Pos: [78, 82] cc => I,
 Pos: [81, 86] cc => I,
 Pos: [95, 105] cc => I,
 Pos: [96, 98, 102] ccc => cc,
 Pos: [106, 120] cc => I,
 Pos: [101, 103] cc => I,
 Pos: [109, 117] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [135, 137] cc => I,
 Pos: [136, 139] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 147] cc => I,
 Pos: [152, 154, 164] ccc => cc,
 Pos: [153, 158] cc => I,
 Pos: [160, 168] cc => I,
 Pos: [163, 169] cc => I,
 Pos: [166, 171] cc => I]
Change: 29, Saving: 28

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [19, 23] cc => I
Apply:  Pos: [21, 26, 39] ccc => cc
Apply:  Pos: [24, 28, 40] ccc => cc
Apply:  Pos: [33, 36] cc => I
Apply:  Pos: [31, 37, 43] ccc => cc
Apply:  Pos: [38, 41, 47] ccc => cc
Apply:  Pos: [45, 53] cc => I
Apply:  Pos: [49, 52] cc => I
Apply:  Pos: [51, 57] cc => I
Apply:  Pos: [70, 75] cc => I
Apply:  Pos: [72, 87] cc => I
Apply:  Pos: [77, 79] cc => I
Apply:  Pos: [78, 82] cc => I
Apply:  Pos: [81, 86] cc => I
Apply:  Pos: [95, 105] cc => I
Apply:  Pos: [96, 98, 102] ccc => cc
Apply:  Pos: [106, 120] cc => I
Apply:  Pos: [101, 103] cc => I
Apply:  Pos: [109, 117] cc => I
Apply:  Pos: [112, 116] cc => I
Apply:  Pos: [135, 137] cc => I
Apply:  Pos: [136, 139] cc => I
Apply:  Pos: [140, 144] cc => I
Apply:  Pos: [143, 147] cc => I
Apply:  Pos: [152, 154, 164] ccc => cc
Apply:  Pos: [153, 158] cc => I
Apply:  Pos: [160, 168] cc => I
Apply:  Pos: [163, 169] cc => I
Apply:  Pos: [166, 171] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [8, 6], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [8, 6], [18, 1], [14, 2], [13, 5], [3, 6], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [13, 19], [5, 19], [12, 14], [18, 1], [0, 7], [19, 7], [1, 7], [4, 14], [15, 12], [19, 7], [5, 18], [3, 6], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [11, 19], [1, 7], [17, 10], [8, 3], [1, 7], [11, 19], [15, 4], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [17, 10], [8, 6], [13, 18], [6, 0], [3, 19], [11, 5], [1, 7], [5, 10], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [13, 10], [6, 0], [16, 11], [19, 0], [4, 11], [13, 5], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [13, 18], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [1, 7], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [2, 10], [17, 10], [11, 5], [2, 13], [15, 4], [8, 9], [1, 7], [6, 0], [5, 18], [3, 6], [13, 18], [14, 2], [5, 19], [8, 9], [19, 1], [12, 2], [6, 0], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  3.2659311294555664

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[26, 45]
[58, 61]
[56, 62]
[72, 94]
[102, 115]
[114, 122]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[59, 67, 70]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[116, 118, 125]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 83, 88]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[26, 45]
[58, 61]
[56, 62]
[72, 94]
[102, 115]
[114, 122]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0469167232513428

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 21] cc => I, Pos: [7, 21] cc => I, Pos: [26, 45] cc => I, Pos: [26, 45] cc => I, Pos: [56, 62] cc => I, Pos: [56, 62] cc => I, Pos: [58, 61] cc => I, Pos: [58, 61] cc => I, Pos: [59, 67, 70] ccc => cc, Pos: [72, 94] cc => I, Pos: [72, 94] cc => I, Pos: [77, 83, 88] ccc => cc, Pos: [102, 115] cc => I, Pos: [102, 115] cc => I, Pos: [114, 122] cc => I, Pos: [114, 122] cc => I, Pos: [116, 118, 125] ccc => cc]

--------End Timer [Generate Plans]:  0.015504598617553711

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 21] cc => I,
 Pos: [26, 45] cc => I,
 Pos: [56, 62] cc => I,
 Pos: [58, 61] cc => I,
 Pos: [59, 67, 70] ccc => cc,
 Pos: [72, 94] cc => I,
 Pos: [77, 83, 88] ccc => cc,
 Pos: [102, 115] cc => I,
 Pos: [114, 122] cc => I,
 Pos: [116, 118, 125] ccc => cc]
Change: 10, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 21] cc => I
Apply:  Pos: [26, 45] cc => I
Apply:  Pos: [56, 62] cc => I
Apply:  Pos: [58, 61] cc => I
Apply:  Pos: [59, 67, 70] ccc => cc
Apply:  Pos: [72, 94] cc => I
Apply:  Pos: [77, 83, 88] ccc => cc
Apply:  Pos: [102, 115] cc => I
Apply:  Pos: [114, 122] cc => I
Apply:  Pos: [116, 118, 125] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [18, 1], [0, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [18, 1], [14, 2], [13, 5], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [5, 19], [13, 19], [12, 14], [18, 1], [19, 7], [1, 7], [0, 7], [4, 14], [15, 12], [19, 7], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [15, 4], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [13, 5], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [17, 10], [2, 10], [11, 5], [2, 13], [15, 4], [3, 6], [5, 18], [6, 0], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  2.0624213218688965

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 40]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 40]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6874895095825195

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 40] cc => I, Pos: [37, 40] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 40] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 40] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [18, 1], [14, 2], [13, 5], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [13, 19], [5, 19], [12, 14], [18, 1], [1, 7], [0, 7], [4, 14], [15, 12], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [15, 4], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [13, 5], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [2, 10], [17, 10], [11, 5], [2, 13], [15, 4], [3, 6], [5, 18], [6, 0], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  1.6874895095825195

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6406948566436768

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [18, 1], [0, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [18, 1], [14, 2], [13, 5], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [5, 19], [13, 19], [12, 14], [18, 1], [0, 7], [1, 7], [4, 14], [15, 12], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [15, 4], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [13, 5], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [17, 10], [2, 10], [11, 5], [2, 13], [15, 4], [3, 6], [5, 18], [6, 0], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  1.6406948566436768

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [109] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 25 - (small)
 - circuit cycle: 218

Reduced: 
 - size: 71 (39.44%)
 - depth: 20 (44.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.061806678771972656

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [8, 6], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [13, 10], [5, 19], [4, 14], [9, 6], [13, 10], [8, 3], [18, 1], [14, 2], [13, 5], [3, 6], [4, 11], [0, 1], [17, 10], [8, 9], [13, 5], [16, 11], [19, 7], [13, 5], [10, 18], [13, 5], [4, 14], [8, 3], [5, 19], [12, 14], [17, 10], [18, 1], [16, 8], [0, 7], [13, 5], [19, 7], [5, 19], [1, 7], [2, 13], [5, 19], [16, 8], [4, 14], [15, 12], [19, 7], [2, 13], [5, 18], [3, 6], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [14, 13], [11, 3], [6, 0], [11, 19], [1, 7], [14, 13], [17, 10], [19, 1], [5, 10], [19, 1], [8, 3], [14, 2], [5, 10], [1, 7], [11, 19], [15, 4], [14, 2], [6, 0], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [17, 10], [15, 4], [6, 0], [13, 18], [8, 6], [3, 19], [11, 5], [12, 14], [6, 0], [12, 14], [1, 7], [15, 4], [13, 18], [5, 10], [0, 1], [3, 5], [12, 14], [2, 17], [19, 1], [14, 11], [8, 6], [13, 10], [19, 1], [3, 5], [6, 0], [16, 11], [13, 18], [19, 0], [4, 11], [13, 5], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [13, 18], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [19, 7], [5, 18], [19, 7], [6, 0], [5, 18], [5, 19], [16, 14], [1, 7], [2, 13], [5, 19], [4, 16], [3, 19], [2, 13], [19, 0], [13, 10], [9, 6], [11, 3], [2, 17], [0, 7], [17, 10], [11, 5], [2, 13], [15, 4], [0, 7], [8, 9], [15, 4], [1, 7], [6, 0], [16, 8], [2, 17], [5, 18], [0, 1], [3, 6], [15, 4], [16, 8], [13, 18], [0, 1], [14, 2], [5, 19], [8, 9], [19, 1], [12, 2], [6, 0], [3, 5], [14, 13], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 23]
[27, 33]
[33, 36]
[36, 38]
[49, 52]
[45, 53]
[51, 57]
[53, 65]
[70, 75]
[77, 79]
[78, 82]
[81, 86]
[72, 87]
[85, 95]
[101, 103]
[95, 105]
[97, 106]
[103, 110]
[112, 116]
[109, 117]
[106, 120]
[120, 129]
[135, 137]
[136, 139]
[140, 144]
[143, 147]
[153, 158]
[157, 160]
[160, 168]
[163, 169]
[166, 171]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[21, 26, 39]
[24, 28, 40]
[31, 37, 43]
[38, 41, 47]
[152, 154, 164]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[96, 98, 102]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 23]
[27, 33]
[33, 36]
[36, 38]
[49, 52]
[45, 53]
[51, 57]
[53, 65]
[70, 75]
[77, 79]
[78, 82]
[81, 86]
[72, 87]
[85, 95]
[101, 103]
[95, 105]
[97, 106]
[103, 110]
[112, 116]
[109, 117]
[106, 120]
[120, 129]
[135, 137]
[136, 139]
[140, 144]
[143, 147]
[153, 158]
[157, 160]
[160, 168]
[163, 169]
[166, 171]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2968573570251465

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 23] cc => I, Pos: [19, 23] cc => I, Pos: [21, 26, 39] ccc => cc, Pos: [24, 28, 40] ccc => cc, Pos: [27, 33] cc => I, Pos: [27, 33] cc => I, Pos: [31, 37, 43] ccc => cc, Pos: [33, 36] cc => I, Pos: [33, 36] cc => I, Pos: [36, 38] cc => I, Pos: [36, 38] cc => I, Pos: [38, 41, 47] ccc => cc, Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [49, 52] cc => I, Pos: [49, 52] cc => I, Pos: [51, 57] cc => I, Pos: [51, 57] cc => I, Pos: [53, 65] cc => I, Pos: [53, 65] cc => I, Pos: [70, 75] cc => I, Pos: [70, 75] cc => I, Pos: [72, 87] cc => I, Pos: [72, 87] cc => I, Pos: [77, 79] cc => I, Pos: [77, 79] cc => I, Pos: [78, 82] cc => I, Pos: [78, 82] cc => I, Pos: [81, 86] cc => I, Pos: [81, 86] cc => I, Pos: [85, 95] cc => I, Pos: [85, 95] cc => I, Pos: [95, 105] cc => I, Pos: [95, 105] cc => I, Pos: [96, 98, 102] ccc => cc, Pos: [97, 106] cc => I, Pos: [97, 106] cc => I, Pos: [101, 103] cc => I, Pos: [101, 103] cc => I, Pos: [103, 110] cc => I, Pos: [103, 110] cc => I, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [109, 117] cc => I, Pos: [109, 117] cc => I, Pos: [112, 116] cc => I, Pos: [112, 116] cc => I, Pos: [120, 129] cc => I, Pos: [120, 129] cc => I, Pos: [135, 137] cc => I, Pos: [135, 137] cc => I, Pos: [136, 139] cc => I, Pos: [136, 139] cc => I, Pos: [140, 144] cc => I, Pos: [140, 144] cc => I, Pos: [143, 147] cc => I, Pos: [143, 147] cc => I, Pos: [152, 154, 164] ccc => cc, Pos: [153, 158] cc => I, Pos: [153, 158] cc => I, Pos: [157, 160] cc => I, Pos: [157, 160] cc => I, Pos: [160, 168] cc => I, Pos: [160, 168] cc => I, Pos: [163, 169] cc => I, Pos: [163, 169] cc => I, Pos: [166, 171] cc => I, Pos: [166, 171] cc => I]

--------End Timer [Generate Plans]:  0.07811975479125977

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 23] cc => I,
 Pos: [21, 26, 39] ccc => cc,
 Pos: [24, 28, 40] ccc => cc,
 Pos: [33, 36] cc => I,
 Pos: [31, 37, 43] ccc => cc,
 Pos: [38, 41, 47] ccc => cc,
 Pos: [53, 65] cc => I,
 Pos: [49, 52] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [72, 87] cc => I,
 Pos: [77, 79] cc => I,
 Pos: [78, 82] cc => I,
 Pos: [81, 86] cc => I,
 Pos: [95, 105] cc => I,
 Pos: [96, 98, 102] ccc => cc,
 Pos: [106, 120] cc => I,
 Pos: [101, 103] cc => I,
 Pos: [109, 117] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [135, 137] cc => I,
 Pos: [136, 139] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 147] cc => I,
 Pos: [152, 154, 164] ccc => cc,
 Pos: [153, 158] cc => I,
 Pos: [160, 168] cc => I,
 Pos: [163, 169] cc => I,
 Pos: [166, 171] cc => I]
Change: 29, Saving: 28

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [19, 23] cc => I
Apply:  Pos: [21, 26, 39] ccc => cc
Apply:  Pos: [24, 28, 40] ccc => cc
Apply:  Pos: [33, 36] cc => I
Apply:  Pos: [31, 37, 43] ccc => cc
Apply:  Pos: [38, 41, 47] ccc => cc
Apply:  Pos: [53, 65] cc => I
Apply:  Pos: [49, 52] cc => I
Apply:  Pos: [51, 57] cc => I
Apply:  Pos: [70, 75] cc => I
Apply:  Pos: [72, 87] cc => I
Apply:  Pos: [77, 79] cc => I
Apply:  Pos: [78, 82] cc => I
Apply:  Pos: [81, 86] cc => I
Apply:  Pos: [95, 105] cc => I
Apply:  Pos: [96, 98, 102] ccc => cc
Apply:  Pos: [106, 120] cc => I
Apply:  Pos: [101, 103] cc => I
Apply:  Pos: [109, 117] cc => I
Apply:  Pos: [112, 116] cc => I
Apply:  Pos: [135, 137] cc => I
Apply:  Pos: [136, 139] cc => I
Apply:  Pos: [140, 144] cc => I
Apply:  Pos: [143, 147] cc => I
Apply:  Pos: [152, 154, 164] ccc => cc
Apply:  Pos: [153, 158] cc => I
Apply:  Pos: [160, 168] cc => I
Apply:  Pos: [163, 169] cc => I
Apply:  Pos: [166, 171] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [8, 6], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [8, 6], [18, 1], [14, 2], [13, 5], [3, 6], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [13, 19], [5, 19], [12, 14], [18, 1], [16, 8], [0, 7], [19, 7], [1, 7], [4, 14], [15, 12], [19, 7], [5, 18], [3, 6], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [11, 19], [1, 7], [17, 10], [8, 3], [1, 7], [11, 19], [15, 4], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [17, 10], [8, 6], [13, 18], [6, 0], [3, 19], [11, 5], [1, 7], [5, 10], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [13, 10], [6, 0], [16, 11], [19, 0], [4, 11], [13, 5], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [13, 18], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [1, 7], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [2, 10], [17, 10], [11, 5], [2, 13], [15, 4], [8, 9], [1, 7], [6, 0], [5, 18], [3, 6], [13, 18], [14, 2], [5, 19], [8, 9], [19, 1], [12, 2], [6, 0], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  3.3749771118164062

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[26, 46]
[58, 61]
[56, 62]
[72, 94]
[102, 115]
[114, 122]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[59, 67, 70]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[116, 118, 125]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 83, 88]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[26, 46]
[58, 61]
[56, 62]
[72, 94]
[102, 115]
[114, 122]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0622901916503906

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 21] cc => I, Pos: [7, 21] cc => I, Pos: [26, 46] cc => I, Pos: [26, 46] cc => I, Pos: [56, 62] cc => I, Pos: [56, 62] cc => I, Pos: [58, 61] cc => I, Pos: [58, 61] cc => I, Pos: [59, 67, 70] ccc => cc, Pos: [72, 94] cc => I, Pos: [72, 94] cc => I, Pos: [77, 83, 88] ccc => cc, Pos: [102, 115] cc => I, Pos: [102, 115] cc => I, Pos: [114, 122] cc => I, Pos: [114, 122] cc => I, Pos: [116, 118, 125] ccc => cc]

--------End Timer [Generate Plans]:  0.03124856948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 21] cc => I,
 Pos: [26, 46] cc => I,
 Pos: [56, 62] cc => I,
 Pos: [58, 61] cc => I,
 Pos: [59, 67, 70] ccc => cc,
 Pos: [72, 94] cc => I,
 Pos: [77, 83, 88] ccc => cc,
 Pos: [102, 115] cc => I,
 Pos: [114, 122] cc => I,
 Pos: [116, 118, 125] ccc => cc]
Change: 10, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 21] cc => I
Apply:  Pos: [26, 46] cc => I
Apply:  Pos: [56, 62] cc => I
Apply:  Pos: [58, 61] cc => I
Apply:  Pos: [59, 67, 70] ccc => cc
Apply:  Pos: [72, 94] cc => I
Apply:  Pos: [77, 83, 88] ccc => cc
Apply:  Pos: [102, 115] cc => I
Apply:  Pos: [114, 122] cc => I
Apply:  Pos: [116, 118, 125] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [18, 1], [0, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [18, 1], [14, 2], [13, 5], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [5, 19], [13, 19], [12, 14], [18, 1], [16, 8], [19, 7], [1, 7], [0, 7], [4, 14], [15, 12], [19, 7], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [15, 4], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [13, 5], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [17, 10], [2, 10], [11, 5], [2, 13], [15, 4], [3, 6], [5, 18], [6, 0], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  2.093538761138916

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 41]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 41]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7035109996795654

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [38, 41] cc => I, Pos: [38, 41] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [38, 41] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [38, 41] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [18, 1], [14, 2], [13, 5], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [13, 19], [5, 19], [12, 14], [18, 1], [16, 8], [1, 7], [0, 7], [4, 14], [15, 12], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [15, 4], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [13, 5], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [2, 10], [17, 10], [11, 5], [2, 13], [15, 4], [3, 6], [5, 18], [6, 0], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  1.7035109996795654

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6565089225769043

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [18, 1], [0, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [18, 1], [14, 2], [13, 5], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [5, 19], [13, 19], [12, 14], [18, 1], [16, 8], [0, 7], [1, 7], [4, 14], [15, 12], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [15, 4], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [13, 5], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [17, 10], [2, 10], [11, 5], [2, 13], [15, 4], [3, 6], [5, 18], [6, 0], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  1.6565089225769043

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [109] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 25 - (small)
 - circuit cycle: 218

Reduced: 
 - size: 71 (39.44%)
 - depth: 20 (44.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.0778970718383789

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [8, 6], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [13, 10], [5, 19], [4, 14], [9, 6], [13, 10], [8, 3], [18, 1], [14, 2], [13, 5], [3, 6], [4, 11], [0, 1], [17, 10], [8, 9], [13, 5], [16, 11], [19, 7], [13, 5], [10, 18], [13, 5], [4, 14], [8, 3], [5, 19], [12, 14], [17, 10], [18, 1], [16, 8], [0, 7], [13, 5], [19, 7], [5, 19], [1, 7], [2, 13], [5, 19], [16, 8], [4, 14], [15, 12], [19, 7], [2, 13], [5, 18], [3, 6], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [14, 13], [11, 3], [6, 0], [11, 19], [1, 7], [14, 13], [17, 10], [19, 1], [5, 10], [19, 1], [8, 3], [14, 2], [5, 10], [1, 7], [11, 19], [15, 4], [14, 2], [6, 0], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [17, 10], [15, 4], [6, 0], [13, 18], [8, 6], [3, 19], [11, 5], [12, 14], [6, 0], [12, 14], [1, 7], [15, 4], [13, 18], [5, 10], [0, 1], [3, 5], [12, 14], [2, 17], [19, 1], [14, 11], [8, 6], [13, 10], [19, 1], [3, 5], [6, 0], [16, 11], [13, 18], [19, 0], [4, 11], [13, 5], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [13, 18], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [19, 7], [5, 18], [19, 7], [6, 0], [5, 18], [5, 19], [16, 14], [1, 7], [2, 13], [5, 19], [4, 16], [3, 19], [2, 13], [19, 0], [13, 10], [9, 6], [11, 3], [2, 17], [0, 7], [17, 10], [11, 5], [2, 13], [15, 4], [0, 7], [8, 9], [15, 4], [1, 7], [6, 0], [16, 8], [2, 17], [5, 18], [0, 1], [3, 6], [15, 4], [16, 8], [13, 18], [0, 1], [14, 2], [5, 19], [8, 9], [19, 1], [12, 2], [6, 0], [3, 5], [14, 13], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 23]
[27, 33]
[33, 36]
[36, 38]
[49, 52]
[45, 53]
[51, 57]
[53, 65]
[70, 75]
[77, 79]
[78, 82]
[81, 86]
[72, 87]
[85, 95]
[101, 103]
[95, 105]
[97, 106]
[103, 110]
[112, 116]
[109, 117]
[106, 120]
[120, 129]
[135, 137]
[136, 139]
[140, 144]
[143, 147]
[153, 158]
[157, 160]
[160, 168]
[163, 169]
[166, 171]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[21, 26, 39]
[24, 28, 40]
[31, 37, 43]
[38, 41, 47]
[152, 154, 164]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[96, 98, 102]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 23]
[27, 33]
[33, 36]
[36, 38]
[49, 52]
[45, 53]
[51, 57]
[53, 65]
[70, 75]
[77, 79]
[78, 82]
[81, 86]
[72, 87]
[85, 95]
[101, 103]
[95, 105]
[97, 106]
[103, 110]
[112, 116]
[109, 117]
[106, 120]
[120, 129]
[135, 137]
[136, 139]
[140, 144]
[143, 147]
[153, 158]
[157, 160]
[160, 168]
[163, 169]
[166, 171]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2342123985290527

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 23] cc => I, Pos: [19, 23] cc => I, Pos: [21, 26, 39] ccc => cc, Pos: [24, 28, 40] ccc => cc, Pos: [27, 33] cc => I, Pos: [27, 33] cc => I, Pos: [31, 37, 43] ccc => cc, Pos: [33, 36] cc => I, Pos: [33, 36] cc => I, Pos: [36, 38] cc => I, Pos: [36, 38] cc => I, Pos: [38, 41, 47] ccc => cc, Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [49, 52] cc => I, Pos: [49, 52] cc => I, Pos: [51, 57] cc => I, Pos: [51, 57] cc => I, Pos: [53, 65] cc => I, Pos: [53, 65] cc => I, Pos: [70, 75] cc => I, Pos: [70, 75] cc => I, Pos: [72, 87] cc => I, Pos: [72, 87] cc => I, Pos: [77, 79] cc => I, Pos: [77, 79] cc => I, Pos: [78, 82] cc => I, Pos: [78, 82] cc => I, Pos: [81, 86] cc => I, Pos: [81, 86] cc => I, Pos: [85, 95] cc => I, Pos: [85, 95] cc => I, Pos: [95, 105] cc => I, Pos: [95, 105] cc => I, Pos: [96, 98, 102] ccc => cc, Pos: [97, 106] cc => I, Pos: [97, 106] cc => I, Pos: [101, 103] cc => I, Pos: [101, 103] cc => I, Pos: [103, 110] cc => I, Pos: [103, 110] cc => I, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [109, 117] cc => I, Pos: [109, 117] cc => I, Pos: [112, 116] cc => I, Pos: [112, 116] cc => I, Pos: [120, 129] cc => I, Pos: [120, 129] cc => I, Pos: [135, 137] cc => I, Pos: [135, 137] cc => I, Pos: [136, 139] cc => I, Pos: [136, 139] cc => I, Pos: [140, 144] cc => I, Pos: [140, 144] cc => I, Pos: [143, 147] cc => I, Pos: [143, 147] cc => I, Pos: [152, 154, 164] ccc => cc, Pos: [153, 158] cc => I, Pos: [153, 158] cc => I, Pos: [157, 160] cc => I, Pos: [157, 160] cc => I, Pos: [160, 168] cc => I, Pos: [160, 168] cc => I, Pos: [163, 169] cc => I, Pos: [163, 169] cc => I, Pos: [166, 171] cc => I, Pos: [166, 171] cc => I]

--------End Timer [Generate Plans]:  0.07811927795410156

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 23] cc => I,
 Pos: [21, 26, 39] ccc => cc,
 Pos: [24, 28, 40] ccc => cc,
 Pos: [33, 36] cc => I,
 Pos: [31, 37, 43] ccc => cc,
 Pos: [38, 41, 47] ccc => cc,
 Pos: [53, 65] cc => I,
 Pos: [49, 52] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [72, 87] cc => I,
 Pos: [77, 79] cc => I,
 Pos: [78, 82] cc => I,
 Pos: [81, 86] cc => I,
 Pos: [85, 95] cc => I,
 Pos: [96, 98, 102] ccc => cc,
 Pos: [106, 120] cc => I,
 Pos: [101, 103] cc => I,
 Pos: [109, 117] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [135, 137] cc => I,
 Pos: [136, 139] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 147] cc => I,
 Pos: [152, 154, 164] ccc => cc,
 Pos: [153, 158] cc => I,
 Pos: [160, 168] cc => I,
 Pos: [163, 169] cc => I,
 Pos: [166, 171] cc => I]
Change: 29, Saving: 28

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [19, 23] cc => I
Apply:  Pos: [21, 26, 39] ccc => cc
Apply:  Pos: [24, 28, 40] ccc => cc
Apply:  Pos: [33, 36] cc => I
Apply:  Pos: [31, 37, 43] ccc => cc
Apply:  Pos: [38, 41, 47] ccc => cc
Apply:  Pos: [53, 65] cc => I
Apply:  Pos: [49, 52] cc => I
Apply:  Pos: [51, 57] cc => I
Apply:  Pos: [70, 75] cc => I
Apply:  Pos: [72, 87] cc => I
Apply:  Pos: [77, 79] cc => I
Apply:  Pos: [78, 82] cc => I
Apply:  Pos: [81, 86] cc => I
Apply:  Pos: [85, 95] cc => I
Apply:  Pos: [96, 98, 102] ccc => cc
Apply:  Pos: [106, 120] cc => I
Apply:  Pos: [101, 103] cc => I
Apply:  Pos: [109, 117] cc => I
Apply:  Pos: [112, 116] cc => I
Apply:  Pos: [135, 137] cc => I
Apply:  Pos: [136, 139] cc => I
Apply:  Pos: [140, 144] cc => I
Apply:  Pos: [143, 147] cc => I
Apply:  Pos: [152, 154, 164] ccc => cc
Apply:  Pos: [153, 158] cc => I
Apply:  Pos: [160, 168] cc => I
Apply:  Pos: [163, 169] cc => I
Apply:  Pos: [166, 171] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [8, 6], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [8, 6], [18, 1], [14, 2], [13, 5], [3, 6], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [13, 19], [5, 19], [12, 14], [18, 1], [16, 8], [0, 7], [19, 7], [1, 7], [4, 14], [15, 12], [19, 7], [5, 18], [3, 6], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [11, 19], [1, 7], [17, 10], [8, 3], [1, 7], [11, 19], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [17, 10], [8, 6], [13, 18], [6, 0], [3, 19], [11, 5], [1, 7], [15, 4], [5, 10], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [13, 10], [6, 0], [16, 11], [19, 0], [4, 11], [13, 5], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [13, 18], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [1, 7], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [2, 10], [17, 10], [11, 5], [2, 13], [15, 4], [8, 9], [1, 7], [6, 0], [5, 18], [3, 6], [13, 18], [14, 2], [5, 19], [8, 9], [19, 1], [12, 2], [6, 0], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  3.3123316764831543

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[26, 46]
[58, 61]
[56, 62]
[71, 94]
[102, 115]
[114, 122]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[59, 66, 69]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[116, 118, 125]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 83, 88]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[26, 46]
[58, 61]
[56, 62]
[71, 94]
[102, 115]
[114, 122]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.061504364013672

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 21] cc => I, Pos: [7, 21] cc => I, Pos: [26, 46] cc => I, Pos: [26, 46] cc => I, Pos: [56, 62] cc => I, Pos: [56, 62] cc => I, Pos: [58, 61] cc => I, Pos: [58, 61] cc => I, Pos: [59, 66, 69] ccc => cc, Pos: [71, 94] cc => I, Pos: [71, 94] cc => I, Pos: [77, 83, 88] ccc => cc, Pos: [102, 115] cc => I, Pos: [102, 115] cc => I, Pos: [114, 122] cc => I, Pos: [114, 122] cc => I, Pos: [116, 118, 125] ccc => cc]

--------End Timer [Generate Plans]:  0.03126215934753418

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 21] cc => I,
 Pos: [26, 46] cc => I,
 Pos: [56, 62] cc => I,
 Pos: [58, 61] cc => I,
 Pos: [59, 66, 69] ccc => cc,
 Pos: [71, 94] cc => I,
 Pos: [77, 83, 88] ccc => cc,
 Pos: [102, 115] cc => I,
 Pos: [114, 122] cc => I,
 Pos: [116, 118, 125] ccc => cc]
Change: 10, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 21] cc => I
Apply:  Pos: [26, 46] cc => I
Apply:  Pos: [56, 62] cc => I
Apply:  Pos: [58, 61] cc => I
Apply:  Pos: [59, 66, 69] ccc => cc
Apply:  Pos: [71, 94] cc => I
Apply:  Pos: [77, 83, 88] ccc => cc
Apply:  Pos: [102, 115] cc => I
Apply:  Pos: [114, 122] cc => I
Apply:  Pos: [116, 118, 125] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [18, 1], [0, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [18, 1], [14, 2], [13, 5], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [5, 19], [13, 19], [12, 14], [18, 1], [16, 8], [19, 7], [1, 7], [0, 7], [4, 14], [15, 12], [19, 7], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [15, 4], [13, 5], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [17, 10], [2, 10], [11, 5], [2, 13], [15, 4], [3, 6], [5, 18], [6, 0], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  2.092766523361206

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 41]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 41]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.703451156616211

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [38, 41] cc => I, Pos: [38, 41] cc => I]

--------End Timer [Generate Plans]:  0.015519142150878906

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [38, 41] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [38, 41] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [18, 1], [14, 2], [13, 5], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [13, 19], [5, 19], [12, 14], [18, 1], [16, 8], [1, 7], [0, 7], [4, 14], [15, 12], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [15, 4], [13, 5], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [2, 10], [17, 10], [11, 5], [2, 13], [15, 4], [3, 6], [5, 18], [6, 0], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  1.7189702987670898

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6559655666351318

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [18, 1], [0, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [18, 1], [14, 2], [13, 5], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [5, 19], [13, 19], [12, 14], [18, 1], [16, 8], [0, 7], [1, 7], [4, 14], [15, 12], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [15, 4], [13, 5], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [17, 10], [2, 10], [11, 5], [2, 13], [15, 4], [3, 6], [5, 18], [6, 0], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  1.6559655666351318

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [109] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 25 - (small)
 - circuit cycle: 218

Reduced: 
 - size: 71 (39.44%)
 - depth: 20 (44.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.06249523162841797

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [8, 6], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [13, 10], [5, 19], [4, 14], [9, 6], [13, 10], [8, 3], [18, 1], [14, 2], [13, 5], [3, 6], [4, 11], [0, 1], [17, 10], [8, 9], [13, 5], [16, 11], [19, 7], [13, 5], [10, 18], [13, 5], [4, 14], [8, 3], [5, 19], [12, 14], [17, 10], [18, 1], [16, 8], [0, 7], [13, 5], [19, 7], [5, 19], [1, 7], [2, 13], [5, 19], [16, 8], [4, 14], [15, 12], [19, 7], [2, 13], [5, 18], [3, 6], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [14, 13], [11, 3], [6, 0], [11, 19], [1, 7], [14, 13], [17, 10], [19, 1], [5, 10], [19, 1], [8, 3], [14, 2], [5, 10], [1, 7], [11, 19], [15, 4], [14, 2], [6, 0], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [17, 10], [15, 4], [6, 0], [13, 18], [8, 6], [3, 19], [11, 5], [12, 14], [6, 0], [12, 14], [1, 7], [15, 4], [13, 18], [5, 10], [0, 1], [3, 5], [12, 14], [2, 17], [19, 1], [14, 11], [8, 6], [13, 10], [19, 1], [3, 5], [6, 0], [16, 11], [13, 18], [19, 0], [4, 11], [13, 5], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [13, 18], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [19, 7], [5, 18], [19, 7], [6, 0], [5, 18], [5, 19], [16, 14], [1, 7], [2, 13], [5, 19], [4, 16], [3, 19], [2, 13], [19, 0], [13, 10], [9, 6], [11, 3], [2, 17], [0, 7], [17, 10], [11, 5], [2, 13], [15, 4], [0, 7], [8, 9], [15, 4], [1, 7], [6, 0], [16, 8], [2, 17], [5, 18], [0, 1], [3, 6], [15, 4], [16, 8], [13, 18], [0, 1], [14, 2], [5, 19], [8, 9], [19, 1], [12, 2], [6, 0], [3, 5], [14, 13], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 23]
[27, 33]
[33, 36]
[36, 38]
[49, 52]
[45, 53]
[51, 57]
[53, 65]
[70, 75]
[77, 79]
[78, 82]
[81, 86]
[72, 87]
[85, 95]
[101, 103]
[95, 105]
[97, 106]
[103, 110]
[112, 116]
[109, 117]
[106, 120]
[120, 129]
[135, 137]
[136, 139]
[140, 144]
[143, 147]
[153, 158]
[157, 160]
[160, 168]
[163, 169]
[166, 171]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[21, 26, 39]
[24, 28, 40]
[31, 37, 43]
[38, 41, 47]
[152, 154, 164]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[96, 98, 102]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 23]
[27, 33]
[33, 36]
[36, 38]
[49, 52]
[45, 53]
[51, 57]
[53, 65]
[70, 75]
[77, 79]
[78, 82]
[81, 86]
[72, 87]
[85, 95]
[101, 103]
[95, 105]
[97, 106]
[103, 110]
[112, 116]
[109, 117]
[106, 120]
[120, 129]
[135, 137]
[136, 139]
[140, 144]
[143, 147]
[153, 158]
[157, 160]
[160, 168]
[163, 169]
[166, 171]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2030415534973145

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 23] cc => I, Pos: [19, 23] cc => I, Pos: [21, 26, 39] ccc => cc, Pos: [24, 28, 40] ccc => cc, Pos: [27, 33] cc => I, Pos: [27, 33] cc => I, Pos: [31, 37, 43] ccc => cc, Pos: [33, 36] cc => I, Pos: [33, 36] cc => I, Pos: [36, 38] cc => I, Pos: [36, 38] cc => I, Pos: [38, 41, 47] ccc => cc, Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [49, 52] cc => I, Pos: [49, 52] cc => I, Pos: [51, 57] cc => I, Pos: [51, 57] cc => I, Pos: [53, 65] cc => I, Pos: [53, 65] cc => I, Pos: [70, 75] cc => I, Pos: [70, 75] cc => I, Pos: [72, 87] cc => I, Pos: [72, 87] cc => I, Pos: [77, 79] cc => I, Pos: [77, 79] cc => I, Pos: [78, 82] cc => I, Pos: [78, 82] cc => I, Pos: [81, 86] cc => I, Pos: [81, 86] cc => I, Pos: [85, 95] cc => I, Pos: [85, 95] cc => I, Pos: [95, 105] cc => I, Pos: [95, 105] cc => I, Pos: [96, 98, 102] ccc => cc, Pos: [97, 106] cc => I, Pos: [97, 106] cc => I, Pos: [101, 103] cc => I, Pos: [101, 103] cc => I, Pos: [103, 110] cc => I, Pos: [103, 110] cc => I, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [109, 117] cc => I, Pos: [109, 117] cc => I, Pos: [112, 116] cc => I, Pos: [112, 116] cc => I, Pos: [120, 129] cc => I, Pos: [120, 129] cc => I, Pos: [135, 137] cc => I, Pos: [135, 137] cc => I, Pos: [136, 139] cc => I, Pos: [136, 139] cc => I, Pos: [140, 144] cc => I, Pos: [140, 144] cc => I, Pos: [143, 147] cc => I, Pos: [143, 147] cc => I, Pos: [152, 154, 164] ccc => cc, Pos: [153, 158] cc => I, Pos: [153, 158] cc => I, Pos: [157, 160] cc => I, Pos: [157, 160] cc => I, Pos: [160, 168] cc => I, Pos: [160, 168] cc => I, Pos: [163, 169] cc => I, Pos: [163, 169] cc => I, Pos: [166, 171] cc => I, Pos: [166, 171] cc => I]

--------End Timer [Generate Plans]:  0.07865118980407715

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 23] cc => I,
 Pos: [21, 26, 39] ccc => cc,
 Pos: [24, 28, 40] ccc => cc,
 Pos: [27, 33] cc => I,
 Pos: [31, 37, 43] ccc => cc,
 Pos: [36, 38] cc => I,
 Pos: [53, 65] cc => I,
 Pos: [49, 52] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [72, 87] cc => I,
 Pos: [77, 79] cc => I,
 Pos: [78, 82] cc => I,
 Pos: [81, 86] cc => I,
 Pos: [95, 105] cc => I,
 Pos: [96, 98, 102] ccc => cc,
 Pos: [97, 106] cc => I,
 Pos: [103, 110] cc => I,
 Pos: [109, 117] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [120, 129] cc => I,
 Pos: [135, 137] cc => I,
 Pos: [136, 139] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 147] cc => I,
 Pos: [152, 154, 164] ccc => cc,
 Pos: [153, 158] cc => I,
 Pos: [160, 168] cc => I,
 Pos: [163, 169] cc => I,
 Pos: [166, 171] cc => I]
Change: 30, Saving: 29

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [19, 23] cc => I
Apply:  Pos: [21, 26, 39] ccc => cc
Apply:  Pos: [24, 28, 40] ccc => cc
Apply:  Pos: [27, 33] cc => I
Apply:  Pos: [31, 37, 43] ccc => cc
Apply:  Pos: [36, 38] cc => I
Apply:  Pos: [53, 65] cc => I
Apply:  Pos: [49, 52] cc => I
Apply:  Pos: [51, 57] cc => I
Apply:  Pos: [70, 75] cc => I
Apply:  Pos: [72, 87] cc => I
Apply:  Pos: [77, 79] cc => I
Apply:  Pos: [78, 82] cc => I
Apply:  Pos: [81, 86] cc => I
Apply:  Pos: [95, 105] cc => I
Apply:  Pos: [96, 98, 102] ccc => cc
Apply:  Pos: [97, 106] cc => I
Apply:  Pos: [103, 110] cc => I
Apply:  Pos: [109, 117] cc => I
Apply:  Pos: [112, 116] cc => I
Apply:  Pos: [120, 129] cc => I
Apply:  Pos: [135, 137] cc => I
Apply:  Pos: [136, 139] cc => I
Apply:  Pos: [140, 144] cc => I
Apply:  Pos: [143, 147] cc => I
Apply:  Pos: [152, 154, 164] ccc => cc
Apply:  Pos: [153, 158] cc => I
Apply:  Pos: [160, 168] cc => I
Apply:  Pos: [163, 169] cc => I
Apply:  Pos: [166, 171] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [8, 6], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [8, 6], [18, 1], [14, 2], [3, 6], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [5, 19], [12, 14], [18, 1], [16, 8], [0, 7], [13, 5], [19, 7], [1, 7], [4, 14], [15, 12], [19, 7], [5, 18], [3, 6], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [11, 19], [1, 7], [17, 10], [8, 3], [1, 7], [11, 19], [15, 4], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [17, 10], [8, 6], [6, 0], [3, 19], [11, 5], [12, 14], [1, 7], [5, 10], [0, 1], [2, 17], [14, 11], [8, 6], [13, 10], [6, 0], [16, 11], [19, 0], [4, 11], [13, 5], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [1, 7], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [2, 10], [17, 10], [11, 5], [2, 13], [15, 4], [8, 9], [1, 7], [6, 0], [5, 18], [3, 6], [13, 18], [14, 2], [5, 19], [8, 9], [19, 1], [12, 2], [6, 0], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  3.2816927433013916

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[40, 43]
[25, 45]
[57, 60]
[55, 61]
[99, 112]
[111, 119]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[19, 31, 33]
[58, 66, 69]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 115, 122]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[76, 81, 86]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[40, 43]
[25, 45]
[57, 60]
[55, 61]
[99, 112]
[111, 119]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.999495506286621

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 21] cc => I, Pos: [7, 21] cc => I, Pos: [19, 31, 33] ccc => cc, Pos: [25, 45] cc => I, Pos: [25, 45] cc => I, Pos: [40, 43] cc => I, Pos: [40, 43] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [57, 60] cc => I, Pos: [57, 60] cc => I, Pos: [58, 66, 69] ccc => cc, Pos: [76, 81, 86] ccc => cc, Pos: [99, 112] cc => I, Pos: [99, 112] cc => I, Pos: [111, 119] cc => I, Pos: [111, 119] cc => I, Pos: [113, 115, 122] ccc => cc]

--------End Timer [Generate Plans]:  0.03125166893005371

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 21] cc => I,
 Pos: [19, 31, 33] ccc => cc,
 Pos: [25, 45] cc => I,
 Pos: [40, 43] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [57, 60] cc => I,
 Pos: [58, 66, 69] ccc => cc,
 Pos: [76, 81, 86] ccc => cc,
 Pos: [99, 112] cc => I,
 Pos: [111, 119] cc => I,
 Pos: [113, 115, 122] ccc => cc]
Change: 11, Saving: 11

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 21] cc => I
Apply:  Pos: [19, 31, 33] ccc => cc
Apply:  Pos: [25, 45] cc => I
Apply:  Pos: [40, 43] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [57, 60] cc => I
Apply:  Pos: [58, 66, 69] ccc => cc
Apply:  Pos: [76, 81, 86] ccc => cc
Apply:  Pos: [99, 112] cc => I
Apply:  Pos: [111, 119] cc => I
Apply:  Pos: [113, 115, 122] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [18, 1], [0, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 7], [4, 2], [9, 6], [18, 1], [14, 2], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [12, 14], [18, 1], [16, 8], [0, 7], [13, 5], [1, 7], [4, 14], [15, 12], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [15, 4], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [12, 14], [1, 7], [13, 5], [0, 1], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [17, 10], [2, 10], [11, 5], [2, 13], [15, 4], [3, 6], [5, 18], [6, 0], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  2.030747175216675

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.625086784362793

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 7], [4, 2], [9, 6], [18, 1], [14, 2], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [12, 14], [18, 1], [16, 8], [0, 7], [13, 5], [1, 7], [4, 14], [15, 12], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [15, 4], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [12, 14], [1, 7], [13, 5], [0, 1], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [2, 10], [17, 10], [11, 5], [2, 13], [15, 4], [3, 6], [5, 18], [6, 0], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  1.625086784362793

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [107] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 25 - (small)
 - circuit cycle: 214

Reduced: 
 - size: 73 (40.56%)
 - depth: 20 (44.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.06248140335083008

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [8, 6], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [13, 10], [5, 19], [4, 14], [9, 6], [13, 10], [8, 3], [18, 1], [14, 2], [13, 5], [3, 6], [4, 11], [0, 1], [17, 10], [8, 9], [13, 5], [16, 11], [19, 7], [13, 5], [10, 18], [13, 5], [4, 14], [8, 3], [5, 19], [12, 14], [17, 10], [18, 1], [16, 8], [0, 7], [13, 5], [19, 7], [5, 19], [1, 7], [2, 13], [5, 19], [16, 8], [4, 14], [15, 12], [19, 7], [2, 13], [5, 18], [3, 6], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [14, 13], [11, 3], [6, 0], [11, 19], [1, 7], [14, 13], [17, 10], [19, 1], [5, 10], [19, 1], [8, 3], [14, 2], [5, 10], [1, 7], [11, 19], [15, 4], [14, 2], [6, 0], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [17, 10], [15, 4], [6, 0], [13, 18], [8, 6], [3, 19], [11, 5], [12, 14], [6, 0], [12, 14], [1, 7], [15, 4], [13, 18], [5, 10], [0, 1], [3, 5], [12, 14], [2, 17], [19, 1], [14, 11], [8, 6], [13, 10], [19, 1], [3, 5], [6, 0], [16, 11], [13, 18], [19, 0], [4, 11], [13, 5], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [13, 18], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [19, 7], [5, 18], [19, 7], [6, 0], [5, 18], [5, 19], [16, 14], [1, 7], [2, 13], [5, 19], [4, 16], [3, 19], [2, 13], [19, 0], [13, 10], [9, 6], [11, 3], [2, 17], [0, 7], [17, 10], [11, 5], [2, 13], [15, 4], [0, 7], [8, 9], [15, 4], [1, 7], [6, 0], [16, 8], [2, 17], [5, 18], [0, 1], [3, 6], [15, 4], [16, 8], [13, 18], [0, 1], [14, 2], [5, 19], [8, 9], [19, 1], [12, 2], [6, 0], [3, 5], [14, 13], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 23]
[27, 33]
[33, 36]
[36, 38]
[49, 52]
[45, 53]
[51, 57]
[53, 65]
[70, 75]
[77, 79]
[78, 82]
[81, 86]
[72, 87]
[85, 95]
[101, 103]
[95, 105]
[97, 106]
[103, 110]
[112, 116]
[109, 117]
[106, 120]
[120, 129]
[135, 137]
[136, 139]
[140, 144]
[143, 147]
[153, 158]
[157, 160]
[160, 168]
[163, 169]
[166, 171]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[21, 26, 39]
[24, 28, 40]
[31, 37, 43]
[38, 41, 47]
[152, 154, 164]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[96, 98, 102]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 23]
[27, 33]
[33, 36]
[36, 38]
[49, 52]
[45, 53]
[51, 57]
[53, 65]
[70, 75]
[77, 79]
[78, 82]
[81, 86]
[72, 87]
[85, 95]
[101, 103]
[95, 105]
[97, 106]
[103, 110]
[112, 116]
[109, 117]
[106, 120]
[120, 129]
[135, 137]
[136, 139]
[140, 144]
[143, 147]
[153, 158]
[157, 160]
[160, 168]
[163, 169]
[166, 171]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.234415054321289

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 23] cc => I, Pos: [19, 23] cc => I, Pos: [21, 26, 39] ccc => cc, Pos: [24, 28, 40] ccc => cc, Pos: [27, 33] cc => I, Pos: [27, 33] cc => I, Pos: [31, 37, 43] ccc => cc, Pos: [33, 36] cc => I, Pos: [33, 36] cc => I, Pos: [36, 38] cc => I, Pos: [36, 38] cc => I, Pos: [38, 41, 47] ccc => cc, Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [49, 52] cc => I, Pos: [49, 52] cc => I, Pos: [51, 57] cc => I, Pos: [51, 57] cc => I, Pos: [53, 65] cc => I, Pos: [53, 65] cc => I, Pos: [70, 75] cc => I, Pos: [70, 75] cc => I, Pos: [72, 87] cc => I, Pos: [72, 87] cc => I, Pos: [77, 79] cc => I, Pos: [77, 79] cc => I, Pos: [78, 82] cc => I, Pos: [78, 82] cc => I, Pos: [81, 86] cc => I, Pos: [81, 86] cc => I, Pos: [85, 95] cc => I, Pos: [85, 95] cc => I, Pos: [95, 105] cc => I, Pos: [95, 105] cc => I, Pos: [96, 98, 102] ccc => cc, Pos: [97, 106] cc => I, Pos: [97, 106] cc => I, Pos: [101, 103] cc => I, Pos: [101, 103] cc => I, Pos: [103, 110] cc => I, Pos: [103, 110] cc => I, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [109, 117] cc => I, Pos: [109, 117] cc => I, Pos: [112, 116] cc => I, Pos: [112, 116] cc => I, Pos: [120, 129] cc => I, Pos: [120, 129] cc => I, Pos: [135, 137] cc => I, Pos: [135, 137] cc => I, Pos: [136, 139] cc => I, Pos: [136, 139] cc => I, Pos: [140, 144] cc => I, Pos: [140, 144] cc => I, Pos: [143, 147] cc => I, Pos: [143, 147] cc => I, Pos: [152, 154, 164] ccc => cc, Pos: [153, 158] cc => I, Pos: [153, 158] cc => I, Pos: [157, 160] cc => I, Pos: [157, 160] cc => I, Pos: [160, 168] cc => I, Pos: [160, 168] cc => I, Pos: [163, 169] cc => I, Pos: [163, 169] cc => I, Pos: [166, 171] cc => I, Pos: [166, 171] cc => I]

--------End Timer [Generate Plans]:  0.07811951637268066

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 23] cc => I,
 Pos: [21, 26, 39] ccc => cc,
 Pos: [24, 28, 40] ccc => cc,
 Pos: [33, 36] cc => I,
 Pos: [31, 37, 43] ccc => cc,
 Pos: [38, 41, 47] ccc => cc,
 Pos: [45, 53] cc => I,
 Pos: [49, 52] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [72, 87] cc => I,
 Pos: [77, 79] cc => I,
 Pos: [78, 82] cc => I,
 Pos: [81, 86] cc => I,
 Pos: [95, 105] cc => I,
 Pos: [96, 98, 102] ccc => cc,
 Pos: [106, 120] cc => I,
 Pos: [101, 103] cc => I,
 Pos: [109, 117] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [135, 137] cc => I,
 Pos: [136, 139] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 147] cc => I,
 Pos: [152, 154, 164] ccc => cc,
 Pos: [153, 158] cc => I,
 Pos: [157, 160] cc => I,
 Pos: [163, 169] cc => I,
 Pos: [166, 171] cc => I]
Change: 29, Saving: 28

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [19, 23] cc => I
Apply:  Pos: [21, 26, 39] ccc => cc
Apply:  Pos: [24, 28, 40] ccc => cc
Apply:  Pos: [33, 36] cc => I
Apply:  Pos: [31, 37, 43] ccc => cc
Apply:  Pos: [38, 41, 47] ccc => cc
Apply:  Pos: [45, 53] cc => I
Apply:  Pos: [49, 52] cc => I
Apply:  Pos: [51, 57] cc => I
Apply:  Pos: [70, 75] cc => I
Apply:  Pos: [72, 87] cc => I
Apply:  Pos: [77, 79] cc => I
Apply:  Pos: [78, 82] cc => I
Apply:  Pos: [81, 86] cc => I
Apply:  Pos: [95, 105] cc => I
Apply:  Pos: [96, 98, 102] ccc => cc
Apply:  Pos: [106, 120] cc => I
Apply:  Pos: [101, 103] cc => I
Apply:  Pos: [109, 117] cc => I
Apply:  Pos: [112, 116] cc => I
Apply:  Pos: [135, 137] cc => I
Apply:  Pos: [136, 139] cc => I
Apply:  Pos: [140, 144] cc => I
Apply:  Pos: [143, 147] cc => I
Apply:  Pos: [152, 154, 164] ccc => cc
Apply:  Pos: [153, 158] cc => I
Apply:  Pos: [157, 160] cc => I
Apply:  Pos: [163, 169] cc => I
Apply:  Pos: [166, 171] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [8, 6], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [8, 6], [18, 1], [14, 2], [13, 5], [3, 6], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [13, 19], [5, 19], [12, 14], [18, 1], [0, 7], [19, 7], [1, 7], [4, 14], [15, 12], [19, 7], [5, 18], [3, 6], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [11, 19], [1, 7], [17, 10], [8, 3], [1, 7], [11, 19], [15, 4], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [17, 10], [8, 6], [13, 18], [6, 0], [3, 19], [11, 5], [1, 7], [5, 10], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [13, 10], [6, 0], [16, 11], [19, 0], [4, 11], [13, 5], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [13, 18], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [1, 7], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [2, 10], [17, 10], [11, 5], [2, 13], [8, 9], [1, 7], [6, 0], [5, 18], [3, 6], [15, 4], [13, 18], [14, 2], [5, 19], [8, 9], [19, 1], [12, 2], [6, 0], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  3.3125345706939697

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[26, 45]
[58, 61]
[56, 62]
[72, 94]
[102, 114]
[113, 122]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[59, 67, 70]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[115, 117, 125]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 83, 88]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[26, 45]
[58, 61]
[56, 62]
[72, 94]
[102, 114]
[113, 122]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.047194480895996

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 21] cc => I, Pos: [7, 21] cc => I, Pos: [26, 45] cc => I, Pos: [26, 45] cc => I, Pos: [56, 62] cc => I, Pos: [56, 62] cc => I, Pos: [58, 61] cc => I, Pos: [58, 61] cc => I, Pos: [59, 67, 70] ccc => cc, Pos: [72, 94] cc => I, Pos: [72, 94] cc => I, Pos: [77, 83, 88] ccc => cc, Pos: [102, 114] cc => I, Pos: [102, 114] cc => I, Pos: [113, 122] cc => I, Pos: [113, 122] cc => I, Pos: [115, 117, 125] ccc => cc]

--------End Timer [Generate Plans]:  0.03124856948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 21] cc => I,
 Pos: [26, 45] cc => I,
 Pos: [56, 62] cc => I,
 Pos: [58, 61] cc => I,
 Pos: [59, 67, 70] ccc => cc,
 Pos: [72, 94] cc => I,
 Pos: [77, 83, 88] ccc => cc,
 Pos: [102, 114] cc => I,
 Pos: [113, 122] cc => I,
 Pos: [115, 117, 125] ccc => cc]
Change: 10, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 21] cc => I
Apply:  Pos: [26, 45] cc => I
Apply:  Pos: [56, 62] cc => I
Apply:  Pos: [58, 61] cc => I
Apply:  Pos: [59, 67, 70] ccc => cc
Apply:  Pos: [72, 94] cc => I
Apply:  Pos: [77, 83, 88] ccc => cc
Apply:  Pos: [102, 114] cc => I
Apply:  Pos: [113, 122] cc => I
Apply:  Pos: [115, 117, 125] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [18, 1], [0, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [18, 1], [14, 2], [13, 5], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [5, 19], [13, 19], [12, 14], [18, 1], [19, 7], [1, 7], [0, 7], [4, 14], [15, 12], [19, 7], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [15, 4], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [13, 5], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [17, 10], [2, 10], [11, 5], [2, 13], [3, 6], [5, 18], [6, 0], [15, 4], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  2.0784430503845215

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 40]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 40]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.718963623046875

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 40] cc => I, Pos: [37, 40] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 40] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 40] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [18, 1], [14, 2], [13, 5], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [13, 19], [5, 19], [12, 14], [18, 1], [1, 7], [0, 7], [4, 14], [15, 12], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [15, 4], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [13, 5], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [2, 10], [17, 10], [11, 5], [2, 13], [3, 6], [5, 18], [6, 0], [15, 4], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  1.718963623046875

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6564807891845703

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [18, 1], [0, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [18, 1], [14, 2], [13, 5], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [5, 19], [13, 19], [12, 14], [18, 1], [0, 7], [1, 7], [4, 14], [15, 12], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [15, 4], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [13, 5], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [17, 10], [2, 10], [11, 5], [2, 13], [3, 6], [5, 18], [6, 0], [15, 4], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  1.6564807891845703

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [109] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 25 - (small)
 - circuit cycle: 218

Reduced: 
 - size: 71 (39.44%)
 - depth: 20 (44.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07813310623168945

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [8, 6], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [13, 10], [5, 19], [4, 14], [9, 6], [13, 10], [8, 3], [18, 1], [14, 2], [13, 5], [3, 6], [4, 11], [0, 1], [17, 10], [8, 9], [13, 5], [16, 11], [19, 7], [13, 5], [10, 18], [13, 5], [4, 14], [8, 3], [5, 19], [12, 14], [17, 10], [18, 1], [16, 8], [0, 7], [13, 5], [19, 7], [5, 19], [1, 7], [2, 13], [5, 19], [16, 8], [4, 14], [15, 12], [19, 7], [2, 13], [5, 18], [3, 6], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [14, 13], [11, 3], [6, 0], [11, 19], [1, 7], [14, 13], [17, 10], [19, 1], [5, 10], [19, 1], [8, 3], [14, 2], [5, 10], [1, 7], [11, 19], [15, 4], [14, 2], [6, 0], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [17, 10], [15, 4], [6, 0], [13, 18], [8, 6], [3, 19], [11, 5], [12, 14], [6, 0], [12, 14], [1, 7], [15, 4], [13, 18], [5, 10], [0, 1], [3, 5], [12, 14], [2, 17], [19, 1], [14, 11], [8, 6], [13, 10], [19, 1], [3, 5], [6, 0], [16, 11], [13, 18], [19, 0], [4, 11], [13, 5], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [13, 18], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [19, 7], [5, 18], [19, 7], [6, 0], [5, 18], [5, 19], [16, 14], [1, 7], [2, 13], [5, 19], [4, 16], [3, 19], [2, 13], [19, 0], [13, 10], [9, 6], [11, 3], [2, 17], [0, 7], [17, 10], [11, 5], [2, 13], [15, 4], [0, 7], [8, 9], [15, 4], [1, 7], [6, 0], [16, 8], [2, 17], [5, 18], [0, 1], [3, 6], [15, 4], [16, 8], [13, 18], [0, 1], [14, 2], [5, 19], [8, 9], [19, 1], [12, 2], [6, 0], [3, 5], [14, 13], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 23]
[27, 33]
[33, 36]
[36, 38]
[49, 52]
[45, 53]
[51, 57]
[53, 65]
[70, 75]
[77, 79]
[78, 82]
[81, 86]
[72, 87]
[85, 95]
[101, 103]
[95, 105]
[97, 106]
[103, 110]
[112, 116]
[109, 117]
[106, 120]
[120, 129]
[135, 137]
[136, 139]
[140, 144]
[143, 147]
[153, 158]
[157, 160]
[160, 168]
[163, 169]
[166, 171]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[21, 26, 39]
[24, 28, 40]
[31, 37, 43]
[38, 41, 47]
[152, 154, 164]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[96, 98, 102]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 23]
[27, 33]
[33, 36]
[36, 38]
[49, 52]
[45, 53]
[51, 57]
[53, 65]
[70, 75]
[77, 79]
[78, 82]
[81, 86]
[72, 87]
[85, 95]
[101, 103]
[95, 105]
[97, 106]
[103, 110]
[112, 116]
[109, 117]
[106, 120]
[120, 129]
[135, 137]
[136, 139]
[140, 144]
[143, 147]
[153, 158]
[157, 160]
[160, 168]
[163, 169]
[166, 171]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.187990427017212

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 23] cc => I, Pos: [19, 23] cc => I, Pos: [21, 26, 39] ccc => cc, Pos: [24, 28, 40] ccc => cc, Pos: [27, 33] cc => I, Pos: [27, 33] cc => I, Pos: [31, 37, 43] ccc => cc, Pos: [33, 36] cc => I, Pos: [33, 36] cc => I, Pos: [36, 38] cc => I, Pos: [36, 38] cc => I, Pos: [38, 41, 47] ccc => cc, Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [49, 52] cc => I, Pos: [49, 52] cc => I, Pos: [51, 57] cc => I, Pos: [51, 57] cc => I, Pos: [53, 65] cc => I, Pos: [53, 65] cc => I, Pos: [70, 75] cc => I, Pos: [70, 75] cc => I, Pos: [72, 87] cc => I, Pos: [72, 87] cc => I, Pos: [77, 79] cc => I, Pos: [77, 79] cc => I, Pos: [78, 82] cc => I, Pos: [78, 82] cc => I, Pos: [81, 86] cc => I, Pos: [81, 86] cc => I, Pos: [85, 95] cc => I, Pos: [85, 95] cc => I, Pos: [95, 105] cc => I, Pos: [95, 105] cc => I, Pos: [96, 98, 102] ccc => cc, Pos: [97, 106] cc => I, Pos: [97, 106] cc => I, Pos: [101, 103] cc => I, Pos: [101, 103] cc => I, Pos: [103, 110] cc => I, Pos: [103, 110] cc => I, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [109, 117] cc => I, Pos: [109, 117] cc => I, Pos: [112, 116] cc => I, Pos: [112, 116] cc => I, Pos: [120, 129] cc => I, Pos: [120, 129] cc => I, Pos: [135, 137] cc => I, Pos: [135, 137] cc => I, Pos: [136, 139] cc => I, Pos: [136, 139] cc => I, Pos: [140, 144] cc => I, Pos: [140, 144] cc => I, Pos: [143, 147] cc => I, Pos: [143, 147] cc => I, Pos: [152, 154, 164] ccc => cc, Pos: [153, 158] cc => I, Pos: [153, 158] cc => I, Pos: [157, 160] cc => I, Pos: [157, 160] cc => I, Pos: [160, 168] cc => I, Pos: [160, 168] cc => I, Pos: [163, 169] cc => I, Pos: [163, 169] cc => I, Pos: [166, 171] cc => I, Pos: [166, 171] cc => I]

Plan: 1
[Pos: [19, 23] cc => I,
 Pos: [21, 26, 39] ccc => cc,
 Pos: [24, 28, 40] ccc => cc,
 Pos: [27, 33] cc => I,
 Pos: [31, 37, 43] ccc => cc,
 Pos: [36, 38] cc => I,
 Pos: [45, 53] cc => I,
 Pos: [49, 52] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [72, 87] cc => I,
 Pos: [77, 79] cc => I,
 Pos: [78, 82] cc => I,
 Pos: [81, 86] cc => I,
 Pos: [85, 95] cc => I,
 Pos: [96, 98, 102] ccc => cc,
 Pos: [97, 106] cc => I,
 Pos: [101, 103] cc => I,
 Pos: [109, 117] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [120, 129] cc => I,
 Pos: [135, 137] cc => I,
 Pos: [136, 139] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 147] cc => I,
 Pos: [152, 154, 164] ccc => cc,
 Pos: [153, 158] cc => I,
 Pos: [157, 160] cc => I,
 Pos: [163, 169] cc => I,
 Pos: [166, 171] cc => I]
Change: 30, Saving: 29

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0780029296875

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 23] cc => I,
 Pos: [21, 26, 39] ccc => cc,
 Pos: [24, 28, 40] ccc => cc,
 Pos: [27, 33] cc => I,
 Pos: [31, 37, 43] ccc => cc,
 Pos: [36, 38] cc => I,
 Pos: [45, 53] cc => I,
 Pos: [49, 52] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [72, 87] cc => I,
 Pos: [77, 79] cc => I,
 Pos: [78, 82] cc => I,
 Pos: [81, 86] cc => I,
 Pos: [85, 95] cc => I,
 Pos: [96, 98, 102] ccc => cc,
 Pos: [97, 106] cc => I,
 Pos: [101, 103] cc => I,
 Pos: [109, 117] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [120, 129] cc => I,
 Pos: [135, 137] cc => I,
 Pos: [136, 139] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 147] cc => I,
 Pos: [152, 154, 164] ccc => cc,
 Pos: [153, 158] cc => I,
 Pos: [157, 160] cc => I,
 Pos: [163, 169] cc => I,
 Pos: [166, 171] cc => I]
Change: 30, Saving: 29

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [19, 23] cc => I
Apply:  Pos: [21, 26, 39] ccc => cc
Apply:  Pos: [24, 28, 40] ccc => cc
Apply:  Pos: [27, 33] cc => I
Apply:  Pos: [31, 37, 43] ccc => cc
Apply:  Pos: [36, 38] cc => I
Apply:  Pos: [45, 53] cc => I
Apply:  Pos: [49, 52] cc => I
Apply:  Pos: [51, 57] cc => I
Apply:  Pos: [70, 75] cc => I
Apply:  Pos: [72, 87] cc => I
Apply:  Pos: [77, 79] cc => I
Apply:  Pos: [78, 82] cc => I
Apply:  Pos: [81, 86] cc => I
Apply:  Pos: [85, 95] cc => I
Apply:  Pos: [96, 98, 102] ccc => cc
Apply:  Pos: [97, 106] cc => I
Apply:  Pos: [101, 103] cc => I
Apply:  Pos: [109, 117] cc => I
Apply:  Pos: [112, 116] cc => I
Apply:  Pos: [120, 129] cc => I
Apply:  Pos: [135, 137] cc => I
Apply:  Pos: [136, 139] cc => I
Apply:  Pos: [140, 144] cc => I
Apply:  Pos: [143, 147] cc => I
Apply:  Pos: [152, 154, 164] ccc => cc
Apply:  Pos: [153, 158] cc => I
Apply:  Pos: [157, 160] cc => I
Apply:  Pos: [163, 169] cc => I
Apply:  Pos: [166, 171] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [8, 6], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 19], [4, 2], [9, 6], [8, 6], [18, 1], [14, 2], [3, 6], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [5, 19], [12, 14], [18, 1], [0, 7], [13, 5], [19, 7], [1, 7], [4, 14], [15, 12], [19, 7], [5, 18], [3, 6], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [11, 19], [1, 7], [17, 10], [8, 3], [1, 7], [11, 19], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [17, 10], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [15, 4], [5, 10], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [13, 10], [6, 0], [16, 11], [19, 0], [4, 11], [13, 5], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [1, 7], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [2, 10], [17, 10], [11, 5], [2, 13], [8, 9], [1, 7], [6, 0], [5, 18], [3, 6], [15, 4], [13, 18], [14, 2], [5, 19], [8, 9], [19, 1], [12, 2], [6, 0], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  3.265993356704712

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[39, 42]
[25, 44]
[57, 60]
[55, 61]
[99, 111]
[110, 119]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[19, 31, 33]
[58, 65, 68]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[112, 114, 122]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[75, 81, 86]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[39, 42]
[25, 44]
[57, 60]
[55, 61]
[99, 111]
[110, 119]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0153825283050537

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 21] cc => I, Pos: [7, 21] cc => I, Pos: [19, 31, 33] ccc => cc, Pos: [25, 44] cc => I, Pos: [25, 44] cc => I, Pos: [39, 42] cc => I, Pos: [39, 42] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [57, 60] cc => I, Pos: [57, 60] cc => I, Pos: [58, 65, 68] ccc => cc, Pos: [75, 81, 86] ccc => cc, Pos: [99, 111] cc => I, Pos: [99, 111] cc => I, Pos: [110, 119] cc => I, Pos: [110, 119] cc => I, Pos: [112, 114, 122] ccc => cc]

Plan: 1
[Pos: [7, 21] cc => I,
 Pos: [19, 31, 33] ccc => cc,
 Pos: [25, 44] cc => I,
 Pos: [39, 42] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [57, 60] cc => I,
 Pos: [58, 65, 68] ccc => cc,
 Pos: [75, 81, 86] ccc => cc,
 Pos: [99, 111] cc => I,
 Pos: [110, 119] cc => I,
 Pos: [112, 114, 122] ccc => cc]
Change: 11, Saving: 11

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.031247854232788086

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 21] cc => I,
 Pos: [19, 31, 33] ccc => cc,
 Pos: [25, 44] cc => I,
 Pos: [39, 42] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [57, 60] cc => I,
 Pos: [58, 65, 68] ccc => cc,
 Pos: [75, 81, 86] ccc => cc,
 Pos: [99, 111] cc => I,
 Pos: [110, 119] cc => I,
 Pos: [112, 114, 122] ccc => cc]
Change: 11, Saving: 11

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 21] cc => I
Apply:  Pos: [19, 31, 33] ccc => cc
Apply:  Pos: [25, 44] cc => I
Apply:  Pos: [39, 42] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [57, 60] cc => I
Apply:  Pos: [58, 65, 68] ccc => cc
Apply:  Pos: [75, 81, 86] ccc => cc
Apply:  Pos: [99, 111] cc => I
Apply:  Pos: [110, 119] cc => I
Apply:  Pos: [112, 114, 122] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 18], [19, 0], [13, 18], [14, 11], [18, 1], [0, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 7], [4, 2], [9, 6], [18, 1], [14, 2], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [12, 14], [18, 1], [0, 7], [13, 5], [1, 7], [4, 14], [15, 12], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [15, 4], [13, 5], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [17, 10], [2, 10], [11, 5], [2, 13], [3, 6], [5, 18], [6, 0], [15, 4], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  2.046630382537842

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.593703269958496

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[5, 18], [19, 0], [13, 18], [14, 11], [0, 1], [18, 1], [15, 12], [4, 11], [14, 2], [10, 18], [0, 7], [2, 13], [12, 14], [9, 3], [5, 10], [12, 13], [11, 3], [15, 4], [5, 7], [4, 2], [9, 6], [18, 1], [14, 2], [4, 11], [0, 1], [17, 18], [8, 9], [16, 11], [19, 7], [10, 18], [12, 14], [18, 1], [0, 7], [13, 5], [1, 7], [4, 14], [15, 12], [5, 18], [16, 14], [0, 7], [5, 10], [12, 14], [2, 17], [16, 8], [4, 11], [19, 7], [12, 2], [18, 1], [11, 3], [17, 18], [8, 3], [19, 1], [3, 6], [13, 5], [10, 18], [0, 1], [14, 13], [8, 6], [6, 0], [3, 19], [11, 5], [1, 7], [15, 4], [13, 5], [0, 1], [12, 14], [2, 17], [14, 11], [8, 6], [5, 10], [6, 0], [16, 11], [19, 0], [4, 11], [1, 7], [15, 12], [9, 6], [3, 19], [8, 9], [0, 7], [11, 19], [4, 14], [17, 10], [8, 3], [6, 0], [16, 14], [4, 16], [3, 19], [19, 0], [13, 10], [9, 6], [11, 3], [2, 10], [17, 10], [11, 5], [2, 13], [3, 6], [5, 18], [6, 0], [15, 4], [13, 18], [14, 2], [5, 19], [19, 1], [12, 2], [3, 5], [14, 13], ----End Timer [Execute Mapping]:  1.593703269958496

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [107] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 25 - (small)
 - circuit cycle: 214

Reduced: 
 - size: 73 (40.56%)
 - depth: 20 (44.44%)

