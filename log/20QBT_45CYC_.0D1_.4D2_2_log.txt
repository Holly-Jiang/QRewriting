----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07811856269836426

[6, 2], [13, 3], [15, 7], [17, 18], [0, 8], [3, 6], [11, 14], [15, 7], [10, 1], [16, 18], [6, 2], [8, 15], [19, 3], [16, 17], [13, 6], [15, 7], [19, 3], [16, 17], [6, 2], [18, 11], [9, 19], [15, 7], [13, 2], [0, 4], [18, 13], [12, 19], [18, 13], [8, 17], [7, 6], [4, 18], [16, 12], [8, 17], [15, 14], [13, 2], [9, 11], [4, 18], [1, 7], [19, 3], [0, 8], [18, 13], [8, 5], [12, 11], [4, 16], [16, 18], [4, 17], [12, 11], [16, 12], [14, 1], [4, 18], [13, 6], [16, 12], [8, 5], [10, 1], [18, 11], [13, 6], [16, 18], [5, 15], [13, 2], [16, 18], [12, 9], [5, 10], [19, 3], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [17, 5], [11, 13], [10, 1], [16, 18], [5, 10], [7, 6], [4, 16], [12, 19], [14, 1], [5, 10], [17, 15], [14, 13], [5, 15], [0, 4], [3, 2], [1, 7], [12, 19], [11, 14], [13, 6], [5, 15], [14, 7], [8, 15], [1, 7], [9, 19], [3, 6], [4, 18], [17, 5], [8, 15], [13, 3], [17, 18], [14, 7], [11, 19], [15, 14], [18, 11], [19, 3], [10, 1], [4, 17], [18, 14], [13, 2], [5, 15], [18, 11], [13, 6], [12, 9], [4, 18], [10, 1], [6, 2], [4, 16], [5, 15], [11, 13], [19, 3], [18, 14], [16, 17], [3, 2], [0, 8], [11, 19], [4, 17], [18, 11], [14, 1], [8, 5], [15, 7], [17, 15], [3, 2], [12, 9], [4, 18], [0, 8], [17, 15], [3, 2], [0, 8], [17, 15], [16, 12], [18, 14], [0, 8], [9, 11], [17, 18], [15, 7], [0, 8], [18, 14], [9, 11], [17, 5], [15, 1], [7, 6], [18, 14], [13, 2], [8, 15], [3, 6], [4, 17], [14, 7], [0, 8], [1, 7], [8, 15], [13, 3], [15, 7], [8, 5], [5, 15], [18, 14], [19, 3], [9, 11], [6, 2], [5, 15], [19, 3], [18, 13], [5, 15], [16, 17], [18, 13], [9, 11], [8, 5], [16, 12], [13, 6], [18, 14], [0, 8], [1, 7], [3, 6], [5, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 7]
[12, 16]
[13, 17]
[15, 21]
[24, 26]
[27, 31]
[29, 35]
[41, 45]
[46, 50]
[40, 51]
[49, 54]
[55, 58]
[37, 61]
[61, 66]
[58, 70]
[71, 76]
[74, 83]
[79, 86]
[88, 94]
[100, 107]
[102, 111]
[106, 114]
[101, 116]
[119, 128]
[109, 129]
[127, 132]
[128, 133]
[131, 134]
[132, 135]
[134, 138]
[138, 142]
[139, 144]
[143, 148]
[144, 163]
[160, 165]
[162, 166]
[165, 168]
[167, 170]
[163, 171]
[136, 173]
[161, 175]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[120, 125, 131]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[7, 11, 15]
[10, 14, 18]
[137, 140, 143]
[150, 154, 156]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 9, 13]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 7]
[12, 16]
[13, 17]
[15, 21]
[24, 26]
[27, 31]
[29, 35]
[41, 45]
[46, 50]
[40, 51]
[49, 54]
[55, 58]
[37, 61]
[61, 66]
[58, 70]
[71, 76]
[74, 83]
[79, 86]
[88, 94]
[100, 107]
[102, 111]
[106, 114]
[101, 116]
[119, 128]
[109, 129]
[127, 132]
[128, 133]
[131, 134]
[132, 135]
[134, 138]
[138, 142]
[139, 144]
[143, 148]
[144, 163]
[160, 165]
[162, 166]
[165, 168]
[167, 170]
[163, 171]
[136, 173]
[161, 175]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.234790563583374

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7] cc => I, Pos: [2, 7] cc => I, Pos: [3, 9, 13] ccc => cc, Pos: [7, 11, 15] ccc => cc, Pos: [10, 14, 18] ccc => cc, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [24, 26] cc => I, Pos: [24, 26] cc => I, Pos: [27, 31] cc => I, Pos: [27, 31] cc => I, Pos: [29, 35] cc => I, Pos: [29, 35] cc => I, Pos: [37, 61] cc => I, Pos: [37, 61] cc => I, Pos: [40, 51] cc => I, Pos: [40, 51] cc => I, Pos: [41, 45] cc => I, Pos: [41, 45] cc => I, Pos: [46, 50] cc => I, Pos: [46, 50] cc => I, Pos: [49, 54] cc => I, Pos: [49, 54] cc => I, Pos: [55, 58] cc => I, Pos: [55, 58] cc => I, Pos: [58, 70] cc => I, Pos: [58, 70] cc => I, Pos: [61, 66] cc => I, Pos: [61, 66] cc => I, Pos: [71, 76] cc => I, Pos: [71, 76] cc => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [79, 86] cc => I, Pos: [79, 86] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [100, 107] cc => I, Pos: [100, 107] cc => I, Pos: [101, 116] cc => I, Pos: [101, 116] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I, Pos: [109, 129] cc => I, Pos: [109, 129] cc => I, Pos: [119, 128] cc => I, Pos: [119, 128] cc => I, Pos: [120, 125, 131] ccc => cc, Pos: [127, 132] cc => I, Pos: [127, 132] cc => I, Pos: [128, 133] cc => I, Pos: [128, 133] cc => I, Pos: [131, 134] cc => I, Pos: [131, 134] cc => I, Pos: [132, 135] cc => I, Pos: [132, 135] cc => I, Pos: [134, 138] cc => I, Pos: [134, 138] cc => I, Pos: [136, 173] cc => I, Pos: [136, 173] cc => I, Pos: [137, 140, 143] ccc => cc, Pos: [138, 142] cc => I, Pos: [138, 142] cc => I, Pos: [139, 144] cc => I, Pos: [139, 144] cc => I, Pos: [143, 148] cc => I, Pos: [143, 148] cc => I, Pos: [144, 163] cc => I, Pos: [144, 163] cc => I, Pos: [150, 154, 156] ccc => cc, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [161, 175] cc => I, Pos: [161, 175] cc => I, Pos: [162, 166] cc => I, Pos: [162, 166] cc => I, Pos: [163, 171] cc => I, Pos: [163, 171] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [167, 170] cc => I, Pos: [167, 170] cc => I]

Plan: 1
[Pos: [2, 7] cc => I,
 Pos: [3, 9, 13] ccc => cc,
 Pos: [10, 14, 18] ccc => cc,
 Pos: [12, 16] cc => I,
 Pos: [15, 21] cc => I,
 Pos: [24, 26] cc => I,
 Pos: [27, 31] cc => I,
 Pos: [29, 35] cc => I,
 Pos: [37, 61] cc => I,
 Pos: [40, 51] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [46, 50] cc => I,
 Pos: [49, 54] cc => I,
 Pos: [55, 58] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [101, 116] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [106, 114] cc => I,
 Pos: [109, 129] cc => I,
 Pos: [119, 128] cc => I,
 Pos: [120, 125, 131] ccc => cc,
 Pos: [127, 132] cc => I,
 Pos: [134, 138] cc => I,
 Pos: [136, 173] cc => I,
 Pos: [137, 140, 143] ccc => cc,
 Pos: [139, 144] cc => I,
 Pos: [150, 154, 156] ccc => cc,
 Pos: [160, 165] cc => I,
 Pos: [161, 175] cc => I,
 Pos: [162, 166] cc => I,
 Pos: [163, 171] cc => I,
 Pos: [167, 170] cc => I]
Change: 36, Saving: 134

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 7] cc => I,
 Pos: [3, 9, 13] ccc => cc,
 Pos: [10, 14, 18] ccc => cc,
 Pos: [12, 16] cc => I,
 Pos: [15, 21] cc => I,
 Pos: [24, 26] cc => I,
 Pos: [27, 31] cc => I,
 Pos: [29, 35] cc => I,
 Pos: [37, 61] cc => I,
 Pos: [40, 51] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [46, 50] cc => I,
 Pos: [49, 54] cc => I,
 Pos: [55, 58] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [101, 116] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [106, 114] cc => I,
 Pos: [109, 129] cc => I,
 Pos: [119, 128] cc => I,
 Pos: [120, 125, 131] ccc => cc,
 Pos: [127, 132] cc => I,
 Pos: [134, 138] cc => I,
 Pos: [136, 173] cc => I,
 Pos: [137, 140, 143] ccc => cc,
 Pos: [139, 144] cc => I,
 Pos: [150, 154, 156] ccc => cc,
 Pos: [160, 165] cc => I,
 Pos: [161, 175] cc => I,
 Pos: [162, 166] cc => I,
 Pos: [163, 171] cc => I,
 Pos: [167, 170] cc => I]
Change: 36, Saving: 134

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 7] cc => I
Apply:  Pos: [3, 9, 13] ccc => cc
Apply:  Pos: [10, 14, 18] ccc => cc
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [15, 21] cc => I
Apply:  Pos: [24, 26] cc => I
Apply:  Pos: [27, 31] cc => I
Apply:  Pos: [29, 35] cc => I
Apply:  Pos: [37, 61] cc => I
Apply:  Pos: [40, 51] cc => I
Apply:  Pos: [41, 45] cc => I
Apply:  Pos: [46, 50] cc => I
Apply:  Pos: [49, 54] cc => I
Apply:  Pos: [55, 58] cc => I
Apply:  Pos: [71, 76] cc => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [79, 86] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [100, 107] cc => I
Apply:  Pos: [101, 116] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [106, 114] cc => I
Apply:  Pos: [109, 129] cc => I
Apply:  Pos: [119, 128] cc => I
Apply:  Pos: [120, 125, 131] ccc => cc
Apply:  Pos: [127, 132] cc => I
Apply:  Pos: [134, 138] cc => I
Apply:  Pos: [136, 173] cc => I
Apply:  Pos: [137, 140, 143] ccc => cc
Apply:  Pos: [139, 144] cc => I
Apply:  Pos: [150, 154, 156] ccc => cc
Apply:  Pos: [160, 165] cc => I
Apply:  Pos: [161, 175] cc => I
Apply:  Pos: [162, 166] cc => I
Apply:  Pos: [163, 171] cc => I
Apply:  Pos: [167, 170] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [16, 17], [0, 8], [3, 6], [11, 14], [10, 1], [17, 18], [13, 6], [8, 15], [6, 2], [16, 17], [18, 11], [9, 19], [13, 2], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [13, 2], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [17, 5], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [1, 7], [11, 14], [13, 6], [14, 7], [1, 7], [9, 19], [3, 6], [4, 18], [17, 5], [13, 3], [17, 18], [14, 7], [11, 19], [15, 14], [4, 17], [18, 14], [13, 2], [13, 6], [4, 18], [6, 2], [4, 16], [11, 13], [18, 14], [16, 17], [0, 5], [11, 19], [4, 17], [18, 11], [14, 1], [8, 5], [15, 7], [4, 18], [3, 2], [17, 15], [17, 18], [18, 14], [15, 7], [0, 8], [17, 5], [15, 1], [7, 6], [18, 14], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 5], [6, 2], [5, 15], [16, 17], [8, 5], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  3.234790563583374

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[52, 55]
[41, 60]
[56, 63]
[64, 77]
[87, 93]
[89, 95]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[2, 7, 11]
[103, 105, 107]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[67, 70, 74]
[82, 86, 88]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[52, 55]
[41, 60]
[56, 63]
[64, 77]
[87, 93]
[89, 95]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.718517780303955

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7, 11] ccc => cc, Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [41, 60] cc => I, Pos: [41, 60] cc => I, Pos: [52, 55] cc => I, Pos: [52, 55] cc => I, Pos: [56, 63] cc => I, Pos: [56, 63] cc => I, Pos: [64, 77] cc => I, Pos: [64, 77] cc => I, Pos: [67, 70, 74] ccc => cc, Pos: [82, 86, 88] ccc => cc, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [89, 95] cc => I, Pos: [89, 95] cc => I, Pos: [103, 105, 107] ccc => cc]

Plan: 1
[Pos: [2, 7, 11] ccc => cc,
 Pos: [14, 20] cc => I,
 Pos: [41, 60] cc => I,
 Pos: [52, 55] cc => I,
 Pos: [56, 63] cc => I,
 Pos: [64, 77] cc => I,
 Pos: [67, 70, 74] ccc => cc,
 Pos: [82, 86, 88] ccc => cc,
 Pos: [87, 93] cc => I,
 Pos: [89, 95] cc => I,
 Pos: [103, 105, 107] ccc => cc]
Change: 11, Saving: 36

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 7, 11] ccc => cc,
 Pos: [14, 20] cc => I,
 Pos: [41, 60] cc => I,
 Pos: [52, 55] cc => I,
 Pos: [56, 63] cc => I,
 Pos: [64, 77] cc => I,
 Pos: [67, 70, 74] ccc => cc,
 Pos: [82, 86, 88] ccc => cc,
 Pos: [87, 93] cc => I,
 Pos: [89, 95] cc => I,
 Pos: [103, 105, 107] ccc => cc]
Change: 11, Saving: 36

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 7, 11] ccc => cc
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [41, 60] cc => I
Apply:  Pos: [52, 55] cc => I
Apply:  Pos: [56, 63] cc => I
Apply:  Pos: [64, 77] cc => I
Apply:  Pos: [67, 70, 74] ccc => cc
Apply:  Pos: [82, 86, 88] ccc => cc
Apply:  Pos: [87, 93] cc => I
Apply:  Pos: [89, 95] cc => I
Apply:  Pos: [103, 105, 107] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [16, 18], [0, 8], [3, 6], [11, 14], [10, 1], [17, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [17, 18], [15, 14], [4, 17], [4, 18], [13, 6], [13, 2], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [0, 5], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [4, 18], [3, 2], [17, 18], [15, 7], [17, 5], [15, 1], [7, 6], [13, 2], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [5, 15], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  1.718517780303955

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 94]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[54, 56, 57]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 94]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.3593316078186035

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [54, 56, 57] ccc => cc, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I]

Plan: 1
[Pos: [54, 56, 57] ccc => cc, Pos: [88, 94] cc => I]
Change: 2, Saving: 6

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [54, 56, 57] ccc => cc, Pos: [88, 94] cc => I]
Change: 2, Saving: 6

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [54, 56, 57] ccc => cc
Apply:  Pos: [88, 94] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [16, 18], [0, 8], [3, 6], [11, 14], [10, 1], [17, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 2], [13, 6], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [0, 5], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [4, 18], [3, 2], [17, 18], [15, 7], [17, 5], [15, 1], [7, 6], [13, 2], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], ----End Timer [Execute Mapping]:  1.3593316078186035

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2659251689910889

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[6, 2], [13, 3], [16, 18], [0, 8], [3, 6], [11, 14], [10, 1], [17, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 6], [13, 2], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [0, 5], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [4, 18], [3, 2], [17, 18], [15, 7], [17, 5], [15, 1], [7, 6], [13, 2], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], ----End Timer [Execute Mapping]:  1.2659251689910889

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [92] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 24 - (small)
 - circuit cycle: 184

Reduced: 
 - size: 88 (48.89%)
 - cycle: 176 (48.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07811880111694336

[6, 2], [13, 3], [15, 7], [17, 18], [0, 8], [3, 6], [11, 14], [15, 7], [10, 1], [16, 18], [6, 2], [8, 15], [19, 3], [16, 17], [13, 6], [15, 7], [19, 3], [16, 17], [6, 2], [18, 11], [9, 19], [15, 7], [13, 2], [0, 4], [18, 13], [12, 19], [18, 13], [8, 17], [7, 6], [4, 18], [16, 12], [8, 17], [15, 14], [13, 2], [9, 11], [4, 18], [1, 7], [19, 3], [0, 8], [18, 13], [8, 5], [12, 11], [4, 16], [16, 18], [4, 17], [12, 11], [16, 12], [14, 1], [4, 18], [13, 6], [16, 12], [8, 5], [10, 1], [18, 11], [13, 6], [16, 18], [5, 15], [13, 2], [16, 18], [12, 9], [5, 10], [19, 3], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [17, 5], [11, 13], [10, 1], [16, 18], [5, 10], [7, 6], [4, 16], [12, 19], [14, 1], [5, 10], [17, 15], [14, 13], [5, 15], [0, 4], [3, 2], [1, 7], [12, 19], [11, 14], [13, 6], [5, 15], [14, 7], [8, 15], [1, 7], [9, 19], [3, 6], [4, 18], [17, 5], [8, 15], [13, 3], [17, 18], [14, 7], [11, 19], [15, 14], [18, 11], [19, 3], [10, 1], [4, 17], [18, 14], [13, 2], [5, 15], [18, 11], [13, 6], [12, 9], [4, 18], [10, 1], [6, 2], [4, 16], [5, 15], [11, 13], [19, 3], [18, 14], [16, 17], [3, 2], [0, 8], [11, 19], [4, 17], [18, 11], [14, 1], [8, 5], [15, 7], [17, 15], [3, 2], [12, 9], [4, 18], [0, 8], [17, 15], [3, 2], [0, 8], [17, 15], [16, 12], [18, 14], [0, 8], [9, 11], [17, 18], [15, 7], [0, 8], [18, 14], [9, 11], [17, 5], [15, 1], [7, 6], [18, 14], [13, 2], [8, 15], [3, 6], [4, 17], [14, 7], [0, 8], [1, 7], [8, 15], [13, 3], [15, 7], [8, 5], [5, 15], [18, 14], [19, 3], [9, 11], [6, 2], [5, 15], [19, 3], [18, 13], [5, 15], [16, 17], [18, 13], [9, 11], [8, 5], [16, 12], [13, 6], [18, 14], [0, 8], [1, 7], [3, 6], [5, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 7]
[12, 16]
[13, 17]
[15, 21]
[24, 26]
[27, 31]
[29, 35]
[41, 45]
[46, 50]
[40, 51]
[49, 54]
[55, 58]
[37, 61]
[61, 66]
[58, 70]
[71, 76]
[74, 83]
[79, 86]
[88, 94]
[100, 107]
[102, 111]
[106, 114]
[101, 116]
[119, 128]
[109, 129]
[127, 132]
[128, 133]
[131, 134]
[132, 135]
[134, 138]
[138, 142]
[139, 144]
[143, 148]
[144, 163]
[160, 165]
[162, 166]
[165, 168]
[167, 170]
[163, 171]
[136, 173]
[161, 175]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[120, 125, 131]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[7, 11, 15]
[10, 14, 18]
[137, 140, 143]
[150, 154, 156]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 9, 13]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 7]
[12, 16]
[13, 17]
[15, 21]
[24, 26]
[27, 31]
[29, 35]
[41, 45]
[46, 50]
[40, 51]
[49, 54]
[55, 58]
[37, 61]
[61, 66]
[58, 70]
[71, 76]
[74, 83]
[79, 86]
[88, 94]
[100, 107]
[102, 111]
[106, 114]
[101, 116]
[119, 128]
[109, 129]
[127, 132]
[128, 133]
[131, 134]
[132, 135]
[134, 138]
[138, 142]
[139, 144]
[143, 148]
[144, 163]
[160, 165]
[162, 166]
[165, 168]
[167, 170]
[163, 171]
[136, 173]
[161, 175]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.172445297241211

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7] cc => I, Pos: [2, 7] cc => I, Pos: [3, 9, 13] ccc => cc, Pos: [7, 11, 15] ccc => cc, Pos: [10, 14, 18] ccc => cc, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [24, 26] cc => I, Pos: [24, 26] cc => I, Pos: [27, 31] cc => I, Pos: [27, 31] cc => I, Pos: [29, 35] cc => I, Pos: [29, 35] cc => I, Pos: [37, 61] cc => I, Pos: [37, 61] cc => I, Pos: [40, 51] cc => I, Pos: [40, 51] cc => I, Pos: [41, 45] cc => I, Pos: [41, 45] cc => I, Pos: [46, 50] cc => I, Pos: [46, 50] cc => I, Pos: [49, 54] cc => I, Pos: [49, 54] cc => I, Pos: [55, 58] cc => I, Pos: [55, 58] cc => I, Pos: [58, 70] cc => I, Pos: [58, 70] cc => I, Pos: [61, 66] cc => I, Pos: [61, 66] cc => I, Pos: [71, 76] cc => I, Pos: [71, 76] cc => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [79, 86] cc => I, Pos: [79, 86] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [100, 107] cc => I, Pos: [100, 107] cc => I, Pos: [101, 116] cc => I, Pos: [101, 116] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I, Pos: [109, 129] cc => I, Pos: [109, 129] cc => I, Pos: [119, 128] cc => I, Pos: [119, 128] cc => I, Pos: [120, 125, 131] ccc => cc, Pos: [127, 132] cc => I, Pos: [127, 132] cc => I, Pos: [128, 133] cc => I, Pos: [128, 133] cc => I, Pos: [131, 134] cc => I, Pos: [131, 134] cc => I, Pos: [132, 135] cc => I, Pos: [132, 135] cc => I, Pos: [134, 138] cc => I, Pos: [134, 138] cc => I, Pos: [136, 173] cc => I, Pos: [136, 173] cc => I, Pos: [137, 140, 143] ccc => cc, Pos: [138, 142] cc => I, Pos: [138, 142] cc => I, Pos: [139, 144] cc => I, Pos: [139, 144] cc => I, Pos: [143, 148] cc => I, Pos: [143, 148] cc => I, Pos: [144, 163] cc => I, Pos: [144, 163] cc => I, Pos: [150, 154, 156] ccc => cc, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [161, 175] cc => I, Pos: [161, 175] cc => I, Pos: [162, 166] cc => I, Pos: [162, 166] cc => I, Pos: [163, 171] cc => I, Pos: [163, 171] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [167, 170] cc => I, Pos: [167, 170] cc => I]

Plan: 1
[Pos: [2, 7] cc => I,
 Pos: [3, 9, 13] ccc => cc,
 Pos: [10, 14, 18] ccc => cc,
 Pos: [12, 16] cc => I,
 Pos: [15, 21] cc => I,
 Pos: [24, 26] cc => I,
 Pos: [27, 31] cc => I,
 Pos: [29, 35] cc => I,
 Pos: [37, 61] cc => I,
 Pos: [40, 51] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [46, 50] cc => I,
 Pos: [49, 54] cc => I,
 Pos: [55, 58] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [101, 116] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [106, 114] cc => I,
 Pos: [109, 129] cc => I,
 Pos: [119, 128] cc => I,
 Pos: [120, 125, 131] ccc => cc,
 Pos: [127, 132] cc => I,
 Pos: [134, 138] cc => I,
 Pos: [136, 173] cc => I,
 Pos: [137, 140, 143] ccc => cc,
 Pos: [139, 144] cc => I,
 Pos: [150, 154, 156] ccc => cc,
 Pos: [160, 165] cc => I,
 Pos: [161, 175] cc => I,
 Pos: [162, 166] cc => I,
 Pos: [163, 171] cc => I,
 Pos: [167, 170] cc => I]
Change: 36, Saving: 37

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.09345221519470215

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 7] cc => I,
 Pos: [3, 9, 13] ccc => cc,
 Pos: [10, 14, 18] ccc => cc,
 Pos: [12, 16] cc => I,
 Pos: [15, 21] cc => I,
 Pos: [24, 26] cc => I,
 Pos: [27, 31] cc => I,
 Pos: [29, 35] cc => I,
 Pos: [37, 61] cc => I,
 Pos: [40, 51] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [46, 50] cc => I,
 Pos: [49, 54] cc => I,
 Pos: [55, 58] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [101, 116] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [106, 114] cc => I,
 Pos: [109, 129] cc => I,
 Pos: [119, 128] cc => I,
 Pos: [120, 125, 131] ccc => cc,
 Pos: [127, 132] cc => I,
 Pos: [134, 138] cc => I,
 Pos: [136, 173] cc => I,
 Pos: [137, 140, 143] ccc => cc,
 Pos: [139, 144] cc => I,
 Pos: [150, 154, 156] ccc => cc,
 Pos: [160, 165] cc => I,
 Pos: [161, 175] cc => I,
 Pos: [162, 166] cc => I,
 Pos: [163, 171] cc => I,
 Pos: [167, 170] cc => I]
Change: 36, Saving: 37

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 7] cc => I
Apply:  Pos: [3, 9, 13] ccc => cc
Apply:  Pos: [10, 14, 18] ccc => cc
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [15, 21] cc => I
Apply:  Pos: [24, 26] cc => I
Apply:  Pos: [27, 31] cc => I
Apply:  Pos: [29, 35] cc => I
Apply:  Pos: [37, 61] cc => I
Apply:  Pos: [40, 51] cc => I
Apply:  Pos: [41, 45] cc => I
Apply:  Pos: [46, 50] cc => I
Apply:  Pos: [49, 54] cc => I
Apply:  Pos: [55, 58] cc => I
Apply:  Pos: [71, 76] cc => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [79, 86] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [100, 107] cc => I
Apply:  Pos: [101, 116] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [106, 114] cc => I
Apply:  Pos: [109, 129] cc => I
Apply:  Pos: [119, 128] cc => I
Apply:  Pos: [120, 125, 131] ccc => cc
Apply:  Pos: [127, 132] cc => I
Apply:  Pos: [134, 138] cc => I
Apply:  Pos: [136, 173] cc => I
Apply:  Pos: [137, 140, 143] ccc => cc
Apply:  Pos: [139, 144] cc => I
Apply:  Pos: [150, 154, 156] ccc => cc
Apply:  Pos: [160, 165] cc => I
Apply:  Pos: [161, 175] cc => I
Apply:  Pos: [162, 166] cc => I
Apply:  Pos: [163, 171] cc => I
Apply:  Pos: [167, 170] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [16, 17], [0, 8], [3, 6], [11, 14], [10, 1], [17, 18], [13, 6], [8, 15], [6, 2], [16, 17], [18, 11], [9, 19], [13, 2], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [13, 2], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [17, 5], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [1, 7], [11, 14], [13, 6], [14, 7], [1, 7], [9, 19], [3, 6], [4, 18], [17, 5], [13, 3], [17, 18], [14, 7], [11, 19], [15, 14], [4, 17], [18, 14], [13, 2], [13, 6], [4, 18], [6, 2], [4, 16], [11, 13], [18, 14], [16, 17], [0, 5], [11, 19], [4, 17], [18, 11], [14, 1], [8, 5], [15, 7], [4, 18], [3, 2], [17, 15], [17, 18], [18, 14], [15, 7], [0, 8], [17, 5], [15, 1], [7, 6], [18, 14], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 5], [6, 2], [5, 15], [16, 17], [8, 5], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  3.265897512435913

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[52, 55]
[41, 60]
[56, 63]
[64, 77]
[87, 93]
[89, 95]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[2, 7, 11]
[103, 105, 107]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[67, 70, 74]
[82, 86, 88]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[52, 55]
[41, 60]
[56, 63]
[64, 77]
[87, 93]
[89, 95]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7185819149017334

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7, 11] ccc => cc, Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [41, 60] cc => I, Pos: [41, 60] cc => I, Pos: [52, 55] cc => I, Pos: [52, 55] cc => I, Pos: [56, 63] cc => I, Pos: [56, 63] cc => I, Pos: [64, 77] cc => I, Pos: [64, 77] cc => I, Pos: [67, 70, 74] ccc => cc, Pos: [82, 86, 88] ccc => cc, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [89, 95] cc => I, Pos: [89, 95] cc => I, Pos: [103, 105, 107] ccc => cc]

Plan: 1
[Pos: [2, 7, 11] ccc => cc,
 Pos: [14, 20] cc => I,
 Pos: [41, 60] cc => I,
 Pos: [52, 55] cc => I,
 Pos: [56, 63] cc => I,
 Pos: [64, 77] cc => I,
 Pos: [67, 70, 74] ccc => cc,
 Pos: [82, 86, 88] ccc => cc,
 Pos: [87, 93] cc => I,
 Pos: [89, 95] cc => I,
 Pos: [103, 105, 107] ccc => cc]
Change: 11, Saving: 10

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.03124713897705078

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 7, 11] ccc => cc,
 Pos: [14, 20] cc => I,
 Pos: [41, 60] cc => I,
 Pos: [52, 55] cc => I,
 Pos: [56, 63] cc => I,
 Pos: [64, 77] cc => I,
 Pos: [67, 70, 74] ccc => cc,
 Pos: [82, 86, 88] ccc => cc,
 Pos: [87, 93] cc => I,
 Pos: [89, 95] cc => I,
 Pos: [103, 105, 107] ccc => cc]
Change: 11, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 7, 11] ccc => cc
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [41, 60] cc => I
Apply:  Pos: [52, 55] cc => I
Apply:  Pos: [56, 63] cc => I
Apply:  Pos: [64, 77] cc => I
Apply:  Pos: [67, 70, 74] ccc => cc
Apply:  Pos: [82, 86, 88] ccc => cc
Apply:  Pos: [87, 93] cc => I
Apply:  Pos: [89, 95] cc => I
Apply:  Pos: [103, 105, 107] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [16, 18], [0, 8], [3, 6], [11, 14], [10, 1], [17, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [17, 18], [15, 14], [4, 17], [4, 18], [13, 6], [13, 2], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [0, 5], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [4, 18], [3, 2], [17, 18], [15, 7], [17, 5], [15, 1], [7, 6], [13, 2], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [5, 15], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  1.7498290538787842

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 94]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[54, 56, 57]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 94]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.3281190395355225

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [54, 56, 57] ccc => cc, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I]

Plan: 1
[Pos: [54, 56, 57] ccc => cc, Pos: [88, 94] cc => I]
Change: 2, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [54, 56, 57] ccc => cc, Pos: [88, 94] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [54, 56, 57] ccc => cc
Apply:  Pos: [88, 94] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [16, 18], [0, 8], [3, 6], [11, 14], [10, 1], [17, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 2], [13, 6], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [0, 5], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [4, 18], [3, 2], [17, 18], [15, 7], [17, 5], [15, 1], [7, 6], [13, 2], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], ----End Timer [Execute Mapping]:  1.3281190395355225

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2656011581420898

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[6, 2], [13, 3], [16, 18], [0, 8], [3, 6], [11, 14], [10, 1], [17, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 6], [13, 2], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [0, 5], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [4, 18], [3, 2], [17, 18], [15, 7], [17, 5], [15, 1], [7, 6], [13, 2], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], ----End Timer [Execute Mapping]:  1.2656011581420898

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [92] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 24 - (small)
 - circuit cycle: 184

Reduced: 
 - size: 88 (48.89%)
 - depth: 21 (46.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07813191413879395

[6, 2], [13, 3], [15, 7], [17, 18], [0, 8], [3, 6], [11, 14], [15, 7], [10, 1], [16, 18], [6, 2], [8, 15], [19, 3], [16, 17], [13, 6], [15, 7], [19, 3], [16, 17], [6, 2], [18, 11], [9, 19], [15, 7], [13, 2], [0, 4], [18, 13], [12, 19], [18, 13], [8, 17], [7, 6], [4, 18], [16, 12], [8, 17], [15, 14], [13, 2], [9, 11], [4, 18], [1, 7], [19, 3], [0, 8], [18, 13], [8, 5], [12, 11], [4, 16], [16, 18], [4, 17], [12, 11], [16, 12], [14, 1], [4, 18], [13, 6], [16, 12], [8, 5], [10, 1], [18, 11], [13, 6], [16, 18], [5, 15], [13, 2], [16, 18], [12, 9], [5, 10], [19, 3], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [17, 5], [11, 13], [10, 1], [16, 18], [5, 10], [7, 6], [4, 16], [12, 19], [14, 1], [5, 10], [17, 15], [14, 13], [5, 15], [0, 4], [3, 2], [1, 7], [12, 19], [11, 14], [13, 6], [5, 15], [14, 7], [8, 15], [1, 7], [9, 19], [3, 6], [4, 18], [17, 5], [8, 15], [13, 3], [17, 18], [14, 7], [11, 19], [15, 14], [18, 11], [19, 3], [10, 1], [4, 17], [18, 14], [13, 2], [5, 15], [18, 11], [13, 6], [12, 9], [4, 18], [10, 1], [6, 2], [4, 16], [5, 15], [11, 13], [19, 3], [18, 14], [16, 17], [3, 2], [0, 8], [11, 19], [4, 17], [18, 11], [14, 1], [8, 5], [15, 7], [17, 15], [3, 2], [12, 9], [4, 18], [0, 8], [17, 15], [3, 2], [0, 8], [17, 15], [16, 12], [18, 14], [0, 8], [9, 11], [17, 18], [15, 7], [0, 8], [18, 14], [9, 11], [17, 5], [15, 1], [7, 6], [18, 14], [13, 2], [8, 15], [3, 6], [4, 17], [14, 7], [0, 8], [1, 7], [8, 15], [13, 3], [15, 7], [8, 5], [5, 15], [18, 14], [19, 3], [9, 11], [6, 2], [5, 15], [19, 3], [18, 13], [5, 15], [16, 17], [18, 13], [9, 11], [8, 5], [16, 12], [13, 6], [18, 14], [0, 8], [1, 7], [3, 6], [5, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 7]
[12, 16]
[13, 17]
[15, 21]
[24, 26]
[27, 31]
[29, 35]
[41, 45]
[46, 50]
[40, 51]
[49, 54]
[55, 58]
[37, 61]
[61, 66]
[58, 70]
[71, 76]
[74, 83]
[79, 86]
[88, 94]
[100, 107]
[102, 111]
[106, 114]
[101, 116]
[119, 128]
[109, 129]
[127, 132]
[128, 133]
[131, 134]
[132, 135]
[134, 138]
[138, 142]
[139, 144]
[143, 148]
[144, 163]
[160, 165]
[162, 166]
[165, 168]
[167, 170]
[163, 171]
[136, 173]
[161, 175]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[120, 125, 131]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[7, 11, 15]
[10, 14, 18]
[137, 140, 143]
[150, 154, 156]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 9, 13]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 7]
[12, 16]
[13, 17]
[15, 21]
[24, 26]
[27, 31]
[29, 35]
[41, 45]
[46, 50]
[40, 51]
[49, 54]
[55, 58]
[37, 61]
[61, 66]
[58, 70]
[71, 76]
[74, 83]
[79, 86]
[88, 94]
[100, 107]
[102, 111]
[106, 114]
[101, 116]
[119, 128]
[109, 129]
[127, 132]
[128, 133]
[131, 134]
[132, 135]
[134, 138]
[138, 142]
[139, 144]
[143, 148]
[144, 163]
[160, 165]
[162, 166]
[165, 168]
[167, 170]
[163, 171]
[136, 173]
[161, 175]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2188031673431396

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7] cc => I, Pos: [2, 7] cc => I, Pos: [3, 9, 13] ccc => cc, Pos: [7, 11, 15] ccc => cc, Pos: [10, 14, 18] ccc => cc, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [24, 26] cc => I, Pos: [24, 26] cc => I, Pos: [27, 31] cc => I, Pos: [27, 31] cc => I, Pos: [29, 35] cc => I, Pos: [29, 35] cc => I, Pos: [37, 61] cc => I, Pos: [37, 61] cc => I, Pos: [40, 51] cc => I, Pos: [40, 51] cc => I, Pos: [41, 45] cc => I, Pos: [41, 45] cc => I, Pos: [46, 50] cc => I, Pos: [46, 50] cc => I, Pos: [49, 54] cc => I, Pos: [49, 54] cc => I, Pos: [55, 58] cc => I, Pos: [55, 58] cc => I, Pos: [58, 70] cc => I, Pos: [58, 70] cc => I, Pos: [61, 66] cc => I, Pos: [61, 66] cc => I, Pos: [71, 76] cc => I, Pos: [71, 76] cc => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [79, 86] cc => I, Pos: [79, 86] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [100, 107] cc => I, Pos: [100, 107] cc => I, Pos: [101, 116] cc => I, Pos: [101, 116] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I, Pos: [109, 129] cc => I, Pos: [109, 129] cc => I, Pos: [119, 128] cc => I, Pos: [119, 128] cc => I, Pos: [120, 125, 131] ccc => cc, Pos: [127, 132] cc => I, Pos: [127, 132] cc => I, Pos: [128, 133] cc => I, Pos: [128, 133] cc => I, Pos: [131, 134] cc => I, Pos: [131, 134] cc => I, Pos: [132, 135] cc => I, Pos: [132, 135] cc => I, Pos: [134, 138] cc => I, Pos: [134, 138] cc => I, Pos: [136, 173] cc => I, Pos: [136, 173] cc => I, Pos: [137, 140, 143] ccc => cc, Pos: [138, 142] cc => I, Pos: [138, 142] cc => I, Pos: [139, 144] cc => I, Pos: [139, 144] cc => I, Pos: [143, 148] cc => I, Pos: [143, 148] cc => I, Pos: [144, 163] cc => I, Pos: [144, 163] cc => I, Pos: [150, 154, 156] ccc => cc, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [161, 175] cc => I, Pos: [161, 175] cc => I, Pos: [162, 166] cc => I, Pos: [162, 166] cc => I, Pos: [163, 171] cc => I, Pos: [163, 171] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [167, 170] cc => I, Pos: [167, 170] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 7] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [10, 14, 18] ccc => cc,
 Pos: [12, 16] cc => I,
 Pos: [15, 21] cc => I,
 Pos: [24, 26] cc => I,
 Pos: [27, 31] cc => I,
 Pos: [29, 35] cc => I,
 Pos: [61, 66] cc => I,
 Pos: [40, 51] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [46, 50] cc => I,
 Pos: [49, 54] cc => I,
 Pos: [55, 58] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [101, 116] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [106, 114] cc => I,
 Pos: [109, 129] cc => I,
 Pos: [128, 133] cc => I,
 Pos: [131, 134] cc => I,
 Pos: [132, 135] cc => I,
 Pos: [136, 173] cc => I,
 Pos: [137, 140, 143] ccc => cc,
 Pos: [138, 142] cc => I,
 Pos: [139, 144] cc => I,
 Pos: [150, 154, 156] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [161, 175] cc => I,
 Pos: [162, 166] cc => I,
 Pos: [163, 171] cc => I,
 Pos: [167, 170] cc => I]
Change: 36, Saving: 138

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 7] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [10, 14, 18] ccc => cc
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [15, 21] cc => I
Apply:  Pos: [24, 26] cc => I
Apply:  Pos: [27, 31] cc => I
Apply:  Pos: [29, 35] cc => I
Apply:  Pos: [61, 66] cc => I
Apply:  Pos: [40, 51] cc => I
Apply:  Pos: [41, 45] cc => I
Apply:  Pos: [46, 50] cc => I
Apply:  Pos: [49, 54] cc => I
Apply:  Pos: [55, 58] cc => I
Apply:  Pos: [71, 76] cc => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [79, 86] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [100, 107] cc => I
Apply:  Pos: [101, 116] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [106, 114] cc => I
Apply:  Pos: [109, 129] cc => I
Apply:  Pos: [128, 133] cc => I
Apply:  Pos: [131, 134] cc => I
Apply:  Pos: [132, 135] cc => I
Apply:  Pos: [136, 173] cc => I
Apply:  Pos: [137, 140, 143] ccc => cc
Apply:  Pos: [138, 142] cc => I
Apply:  Pos: [139, 144] cc => I
Apply:  Pos: [150, 154, 156] ccc => cc
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [161, 175] cc => I
Apply:  Pos: [162, 166] cc => I
Apply:  Pos: [163, 171] cc => I
Apply:  Pos: [167, 170] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [13, 2], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [13, 2], [9, 11], [1, 7], [19, 3], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [17, 5], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [1, 7], [11, 14], [13, 6], [14, 7], [1, 7], [9, 19], [3, 6], [4, 18], [17, 5], [13, 3], [17, 18], [14, 7], [11, 19], [15, 14], [4, 17], [18, 14], [13, 2], [13, 6], [4, 18], [6, 2], [4, 16], [11, 13], [18, 14], [16, 17], [3, 2], [0, 8], [11, 19], [4, 17], [18, 11], [14, 1], [8, 5], [15, 7], [17, 15], [4, 18], [17, 18], [18, 14], [15, 7], [17, 5], [15, 1], [7, 6], [18, 14], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 5], [5, 15], [6, 2], [16, 17], [8, 5], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  3.2188031673431396

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[13, 19]
[51, 54]
[55, 62]
[63, 77]
[86, 91]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[101, 102, 105]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[66, 69, 73]
[82, 83, 87]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[13, 19]
[51, 54]
[55, 62]
[63, 77]
[86, 91]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.718738317489624

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [13, 19] cc => I, Pos: [13, 19] cc => I, Pos: [51, 54] cc => I, Pos: [51, 54] cc => I, Pos: [55, 62] cc => I, Pos: [55, 62] cc => I, Pos: [63, 77] cc => I, Pos: [63, 77] cc => I, Pos: [66, 69, 73] ccc => cc, Pos: [82, 83, 87] ccc => cc, Pos: [86, 91] cc => I, Pos: [86, 91] cc => I, Pos: [101, 102, 105] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [13, 19] cc => I,
 Pos: [51, 54] cc => I,
 Pos: [55, 62] cc => I,
 Pos: [63, 77] cc => I,
 Pos: [66, 69, 73] ccc => cc,
 Pos: [82, 83, 87] ccc => cc,
 Pos: [86, 91] cc => I,
 Pos: [101, 102, 105] ccc => cc]
Change: 8, Saving: 26

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [13, 19] cc => I
Apply:  Pos: [51, 54] cc => I
Apply:  Pos: [55, 62] cc => I
Apply:  Pos: [63, 77] cc => I
Apply:  Pos: [66, 69, 73] ccc => cc
Apply:  Pos: [82, 83, 87] ccc => cc
Apply:  Pos: [86, 91] cc => I
Apply:  Pos: [101, 102, 105] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [19, 3], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [17, 5], [8, 5], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [17, 5], [13, 3], [17, 18], [15, 14], [4, 17], [4, 18], [13, 6], [13, 2], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [0, 8], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [15, 7], [17, 18], [4, 18], [17, 5], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [5, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  1.718738317489624

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 54]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[56, 58, 59]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 54]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4220309257507324

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [38, 54] cc => I, Pos: [38, 54] cc => I, Pos: [56, 58, 59] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [38, 54] cc => I, Pos: [56, 58, 59] ccc => cc]
Change: 2, Saving: 6

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [38, 54] cc => I
Apply:  Pos: [56, 58, 59] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [19, 3], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 2], [13, 6], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [0, 8], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [15, 7], [4, 18], [17, 5], [17, 18], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [5, 15], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  1.4220309257507324

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[87, 94]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 65, 69]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[87, 94]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.3593049049377441

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 65, 69] ccc => cc, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 65, 69] ccc => cc, Pos: [87, 94] cc => I]
Change: 2, Saving: 6

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 65, 69] ccc => cc
Apply:  Pos: [87, 94] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [19, 3], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [0, 8], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 6], [13, 2], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [8, 5], [4, 17], [18, 11], [14, 1], [17, 15], [15, 7], [4, 18], [17, 18], [17, 5], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], ----End Timer [Execute Mapping]:  1.3593049049377441

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 37]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[28, 33, 39]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 37]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.265676498413086

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [21, 37] cc => I, Pos: [21, 37] cc => I, Pos: [28, 33, 39] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [21, 37] cc => I, Pos: [28, 33, 39] ccc => cc]
Change: 2, Saving: 6

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [21, 37] cc => I
Apply:  Pos: [28, 33, 39] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [19, 3], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [5, 10], [18, 11], [5, 15], [13, 2], [12, 9], [10, 1], [11, 14], [16, 17], [14, 13], [11, 13], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 2], [13, 6], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [8, 5], [4, 17], [18, 11], [14, 1], [17, 15], [15, 7], [17, 18], [4, 18], [17, 5], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], ----End Timer [Execute Mapping]:  1.265676498413086

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [89] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 23 - (small)
 - circuit cycle: 178

Reduced: 
 - size: 91 (50.56%)
 - cycle: 182 (50.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07810163497924805

[6, 2], [13, 3], [15, 7], [17, 18], [0, 8], [3, 6], [11, 14], [15, 7], [10, 1], [16, 18], [6, 2], [8, 15], [19, 3], [16, 17], [13, 6], [15, 7], [19, 3], [16, 17], [6, 2], [18, 11], [9, 19], [15, 7], [13, 2], [0, 4], [18, 13], [12, 19], [18, 13], [8, 17], [7, 6], [4, 18], [16, 12], [8, 17], [15, 14], [13, 2], [9, 11], [4, 18], [1, 7], [19, 3], [0, 8], [18, 13], [8, 5], [12, 11], [4, 16], [16, 18], [4, 17], [12, 11], [16, 12], [14, 1], [4, 18], [13, 6], [16, 12], [8, 5], [10, 1], [18, 11], [13, 6], [16, 18], [5, 15], [13, 2], [16, 18], [12, 9], [5, 10], [19, 3], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [17, 5], [11, 13], [10, 1], [16, 18], [5, 10], [7, 6], [4, 16], [12, 19], [14, 1], [5, 10], [17, 15], [14, 13], [5, 15], [0, 4], [3, 2], [1, 7], [12, 19], [11, 14], [13, 6], [5, 15], [14, 7], [8, 15], [1, 7], [9, 19], [3, 6], [4, 18], [17, 5], [8, 15], [13, 3], [17, 18], [14, 7], [11, 19], [15, 14], [18, 11], [19, 3], [10, 1], [4, 17], [18, 14], [13, 2], [5, 15], [18, 11], [13, 6], [12, 9], [4, 18], [10, 1], [6, 2], [4, 16], [5, 15], [11, 13], [19, 3], [18, 14], [16, 17], [3, 2], [0, 8], [11, 19], [4, 17], [18, 11], [14, 1], [8, 5], [15, 7], [17, 15], [3, 2], [12, 9], [4, 18], [0, 8], [17, 15], [3, 2], [0, 8], [17, 15], [16, 12], [18, 14], [0, 8], [9, 11], [17, 18], [15, 7], [0, 8], [18, 14], [9, 11], [17, 5], [15, 1], [7, 6], [18, 14], [13, 2], [8, 15], [3, 6], [4, 17], [14, 7], [0, 8], [1, 7], [8, 15], [13, 3], [15, 7], [8, 5], [5, 15], [18, 14], [19, 3], [9, 11], [6, 2], [5, 15], [19, 3], [18, 13], [5, 15], [16, 17], [18, 13], [9, 11], [8, 5], [16, 12], [13, 6], [18, 14], [0, 8], [1, 7], [3, 6], [5, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 7]
[12, 16]
[13, 17]
[15, 21]
[24, 26]
[27, 31]
[29, 35]
[41, 45]
[46, 50]
[40, 51]
[49, 54]
[55, 58]
[37, 61]
[61, 66]
[58, 70]
[71, 76]
[74, 83]
[79, 86]
[88, 94]
[100, 107]
[102, 111]
[106, 114]
[101, 116]
[119, 128]
[109, 129]
[127, 132]
[128, 133]
[131, 134]
[132, 135]
[134, 138]
[138, 142]
[139, 144]
[143, 148]
[144, 163]
[160, 165]
[162, 166]
[165, 168]
[167, 170]
[163, 171]
[136, 173]
[161, 175]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[120, 125, 131]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[7, 11, 15]
[10, 14, 18]
[137, 140, 143]
[150, 154, 156]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 9, 13]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 7]
[12, 16]
[13, 17]
[15, 21]
[24, 26]
[27, 31]
[29, 35]
[41, 45]
[46, 50]
[40, 51]
[49, 54]
[55, 58]
[37, 61]
[61, 66]
[58, 70]
[71, 76]
[74, 83]
[79, 86]
[88, 94]
[100, 107]
[102, 111]
[106, 114]
[101, 116]
[119, 128]
[109, 129]
[127, 132]
[128, 133]
[131, 134]
[132, 135]
[134, 138]
[138, 142]
[139, 144]
[143, 148]
[144, 163]
[160, 165]
[162, 166]
[165, 168]
[167, 170]
[163, 171]
[136, 173]
[161, 175]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2276439666748047

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7] cc => I, Pos: [2, 7] cc => I, Pos: [3, 9, 13] ccc => cc, Pos: [7, 11, 15] ccc => cc, Pos: [10, 14, 18] ccc => cc, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [24, 26] cc => I, Pos: [24, 26] cc => I, Pos: [27, 31] cc => I, Pos: [27, 31] cc => I, Pos: [29, 35] cc => I, Pos: [29, 35] cc => I, Pos: [37, 61] cc => I, Pos: [37, 61] cc => I, Pos: [40, 51] cc => I, Pos: [40, 51] cc => I, Pos: [41, 45] cc => I, Pos: [41, 45] cc => I, Pos: [46, 50] cc => I, Pos: [46, 50] cc => I, Pos: [49, 54] cc => I, Pos: [49, 54] cc => I, Pos: [55, 58] cc => I, Pos: [55, 58] cc => I, Pos: [58, 70] cc => I, Pos: [58, 70] cc => I, Pos: [61, 66] cc => I, Pos: [61, 66] cc => I, Pos: [71, 76] cc => I, Pos: [71, 76] cc => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [79, 86] cc => I, Pos: [79, 86] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [100, 107] cc => I, Pos: [100, 107] cc => I, Pos: [101, 116] cc => I, Pos: [101, 116] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I, Pos: [109, 129] cc => I, Pos: [109, 129] cc => I, Pos: [119, 128] cc => I, Pos: [119, 128] cc => I, Pos: [120, 125, 131] ccc => cc, Pos: [127, 132] cc => I, Pos: [127, 132] cc => I, Pos: [128, 133] cc => I, Pos: [128, 133] cc => I, Pos: [131, 134] cc => I, Pos: [131, 134] cc => I, Pos: [132, 135] cc => I, Pos: [132, 135] cc => I, Pos: [134, 138] cc => I, Pos: [134, 138] cc => I, Pos: [136, 173] cc => I, Pos: [136, 173] cc => I, Pos: [137, 140, 143] ccc => cc, Pos: [138, 142] cc => I, Pos: [138, 142] cc => I, Pos: [139, 144] cc => I, Pos: [139, 144] cc => I, Pos: [143, 148] cc => I, Pos: [143, 148] cc => I, Pos: [144, 163] cc => I, Pos: [144, 163] cc => I, Pos: [150, 154, 156] ccc => cc, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [161, 175] cc => I, Pos: [161, 175] cc => I, Pos: [162, 166] cc => I, Pos: [162, 166] cc => I, Pos: [163, 171] cc => I, Pos: [163, 171] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [167, 170] cc => I, Pos: [167, 170] cc => I]

--------End Timer [Generate Plans]:  0.09374499320983887

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 7] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [10, 14, 18] ccc => cc,
 Pos: [12, 16] cc => I,
 Pos: [15, 21] cc => I,
 Pos: [24, 26] cc => I,
 Pos: [27, 31] cc => I,
 Pos: [29, 35] cc => I,
 Pos: [37, 61] cc => I,
 Pos: [40, 51] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [46, 50] cc => I,
 Pos: [49, 54] cc => I,
 Pos: [55, 58] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [101, 116] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [106, 114] cc => I,
 Pos: [109, 129] cc => I,
 Pos: [128, 133] cc => I,
 Pos: [120, 125, 131] ccc => cc,
 Pos: [127, 132] cc => I,
 Pos: [134, 138] cc => I,
 Pos: [136, 173] cc => I,
 Pos: [143, 148] cc => I,
 Pos: [144, 163] cc => I,
 Pos: [150, 154, 156] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [161, 175] cc => I,
 Pos: [162, 166] cc => I,
 Pos: [167, 170] cc => I]
Change: 35, Saving: 35

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 7] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [10, 14, 18] ccc => cc
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [15, 21] cc => I
Apply:  Pos: [24, 26] cc => I
Apply:  Pos: [27, 31] cc => I
Apply:  Pos: [29, 35] cc => I
Apply:  Pos: [37, 61] cc => I
Apply:  Pos: [40, 51] cc => I
Apply:  Pos: [41, 45] cc => I
Apply:  Pos: [46, 50] cc => I
Apply:  Pos: [49, 54] cc => I
Apply:  Pos: [55, 58] cc => I
Apply:  Pos: [71, 76] cc => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [79, 86] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [100, 107] cc => I
Apply:  Pos: [101, 116] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [106, 114] cc => I
Apply:  Pos: [109, 129] cc => I
Apply:  Pos: [128, 133] cc => I
Apply:  Pos: [120, 125, 131] ccc => cc
Apply:  Pos: [127, 132] cc => I
Apply:  Pos: [134, 138] cc => I
Apply:  Pos: [136, 173] cc => I
Apply:  Pos: [143, 148] cc => I
Apply:  Pos: [144, 163] cc => I
Apply:  Pos: [150, 154, 156] ccc => cc
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [161, 175] cc => I
Apply:  Pos: [162, 166] cc => I
Apply:  Pos: [167, 170] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [13, 2], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [13, 2], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [17, 5], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [1, 7], [11, 14], [13, 6], [14, 7], [1, 7], [9, 19], [3, 6], [4, 18], [17, 5], [13, 3], [17, 18], [14, 7], [11, 19], [15, 14], [4, 17], [18, 14], [13, 2], [13, 6], [4, 18], [6, 2], [4, 16], [11, 13], [18, 14], [16, 17], [3, 2], [0, 5], [11, 19], [4, 17], [18, 11], [14, 1], [8, 5], [15, 7], [4, 18], [17, 15], [18, 14], [9, 11], [17, 18], [15, 7], [0, 8], [17, 5], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 5], [5, 15], [6, 2], [16, 17], [9, 11], [8, 5], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  3.3213889598846436

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[13, 19]
[51, 54]
[40, 59]
[55, 62]
[63, 77]
[89, 94]
[86, 106]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[102, 103, 107]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[66, 69, 73]
[82, 84, 88]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[13, 19]
[51, 54]
[40, 59]
[55, 62]
[63, 77]
[89, 94]
[86, 106]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7513337135314941

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [13, 19] cc => I, Pos: [13, 19] cc => I, Pos: [40, 59] cc => I, Pos: [40, 59] cc => I, Pos: [51, 54] cc => I, Pos: [51, 54] cc => I, Pos: [55, 62] cc => I, Pos: [55, 62] cc => I, Pos: [63, 77] cc => I, Pos: [63, 77] cc => I, Pos: [66, 69, 73] ccc => cc, Pos: [82, 84, 88] ccc => cc, Pos: [86, 106] cc => I, Pos: [86, 106] cc => I, Pos: [89, 94] cc => I, Pos: [89, 94] cc => I, Pos: [102, 103, 107] ccc => cc]

--------End Timer [Generate Plans]:  0.031249523162841797

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [13, 19] cc => I,
 Pos: [40, 59] cc => I,
 Pos: [51, 54] cc => I,
 Pos: [55, 62] cc => I,
 Pos: [63, 77] cc => I,
 Pos: [66, 69, 73] ccc => cc,
 Pos: [82, 84, 88] ccc => cc,
 Pos: [86, 106] cc => I,
 Pos: [89, 94] cc => I,
 Pos: [102, 103, 107] ccc => cc]
Change: 10, Saving: 11

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [13, 19] cc => I
Apply:  Pos: [40, 59] cc => I
Apply:  Pos: [51, 54] cc => I
Apply:  Pos: [55, 62] cc => I
Apply:  Pos: [63, 77] cc => I
Apply:  Pos: [66, 69, 73] ccc => cc
Apply:  Pos: [82, 84, 88] ccc => cc
Apply:  Pos: [86, 106] cc => I
Apply:  Pos: [89, 94] cc => I
Apply:  Pos: [102, 103, 107] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [17, 18], [15, 14], [4, 17], [4, 18], [13, 6], [13, 2], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [0, 5], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [4, 18], [15, 7], [18, 14], [17, 18], [17, 5], [15, 1], [7, 6], [13, 2], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [5, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  1.782583236694336

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[54, 56, 57]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.3592698574066162

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [54, 56, 57] ccc => cc]

--------End Timer [Generate Plans]:  0.015622377395629883

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [54, 56, 57] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [54, 56, 57] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 2], [13, 6], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [0, 5], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [4, 18], [15, 7], [18, 14], [17, 5], [17, 18], [15, 1], [7, 6], [13, 2], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [5, 15], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  1.374892234802246

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[87, 94]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[87, 94]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.3442187309265137

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [87, 94] cc => I, Pos: [87, 94] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [87, 94] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [87, 94] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 6], [13, 2], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [0, 5], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [4, 18], [15, 7], [18, 14], [17, 18], [17, 5], [15, 1], [7, 6], [13, 2], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], ----End Timer [Execute Mapping]:  1.3442187309265137

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.281163215637207

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 2], [13, 6], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [0, 5], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [4, 18], [15, 7], [18, 14], [17, 5], [17, 18], [15, 1], [7, 6], [13, 2], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], ----End Timer [Execute Mapping]:  1.281163215637207

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [93] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 26 - (small)
 - circuit cycle: 186

Reduced: 
 - size: 87 (48.33%)
 - depth: 19 (42.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.06249570846557617

[6, 2], [13, 3], [15, 7], [17, 18], [0, 8], [3, 6], [11, 14], [15, 7], [10, 1], [16, 18], [6, 2], [8, 15], [19, 3], [16, 17], [13, 6], [15, 7], [19, 3], [16, 17], [6, 2], [18, 11], [9, 19], [15, 7], [13, 2], [0, 4], [18, 13], [12, 19], [18, 13], [8, 17], [7, 6], [4, 18], [16, 12], [8, 17], [15, 14], [13, 2], [9, 11], [4, 18], [1, 7], [19, 3], [0, 8], [18, 13], [8, 5], [12, 11], [4, 16], [16, 18], [4, 17], [12, 11], [16, 12], [14, 1], [4, 18], [13, 6], [16, 12], [8, 5], [10, 1], [18, 11], [13, 6], [16, 18], [5, 15], [13, 2], [16, 18], [12, 9], [5, 10], [19, 3], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [17, 5], [11, 13], [10, 1], [16, 18], [5, 10], [7, 6], [4, 16], [12, 19], [14, 1], [5, 10], [17, 15], [14, 13], [5, 15], [0, 4], [3, 2], [1, 7], [12, 19], [11, 14], [13, 6], [5, 15], [14, 7], [8, 15], [1, 7], [9, 19], [3, 6], [4, 18], [17, 5], [8, 15], [13, 3], [17, 18], [14, 7], [11, 19], [15, 14], [18, 11], [19, 3], [10, 1], [4, 17], [18, 14], [13, 2], [5, 15], [18, 11], [13, 6], [12, 9], [4, 18], [10, 1], [6, 2], [4, 16], [5, 15], [11, 13], [19, 3], [18, 14], [16, 17], [3, 2], [0, 8], [11, 19], [4, 17], [18, 11], [14, 1], [8, 5], [15, 7], [17, 15], [3, 2], [12, 9], [4, 18], [0, 8], [17, 15], [3, 2], [0, 8], [17, 15], [16, 12], [18, 14], [0, 8], [9, 11], [17, 18], [15, 7], [0, 8], [18, 14], [9, 11], [17, 5], [15, 1], [7, 6], [18, 14], [13, 2], [8, 15], [3, 6], [4, 17], [14, 7], [0, 8], [1, 7], [8, 15], [13, 3], [15, 7], [8, 5], [5, 15], [18, 14], [19, 3], [9, 11], [6, 2], [5, 15], [19, 3], [18, 13], [5, 15], [16, 17], [18, 13], [9, 11], [8, 5], [16, 12], [13, 6], [18, 14], [0, 8], [1, 7], [3, 6], [5, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 7]
[12, 16]
[13, 17]
[15, 21]
[24, 26]
[27, 31]
[29, 35]
[41, 45]
[46, 50]
[40, 51]
[49, 54]
[55, 58]
[37, 61]
[61, 66]
[58, 70]
[71, 76]
[74, 83]
[79, 86]
[88, 94]
[100, 107]
[102, 111]
[106, 114]
[101, 116]
[119, 128]
[109, 129]
[127, 132]
[128, 133]
[131, 134]
[132, 135]
[134, 138]
[138, 142]
[139, 144]
[143, 148]
[144, 163]
[160, 165]
[162, 166]
[165, 168]
[167, 170]
[163, 171]
[136, 173]
[161, 175]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[120, 125, 131]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[7, 11, 15]
[10, 14, 18]
[137, 140, 143]
[150, 154, 156]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 9, 13]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 7]
[12, 16]
[13, 17]
[15, 21]
[24, 26]
[27, 31]
[29, 35]
[41, 45]
[46, 50]
[40, 51]
[49, 54]
[55, 58]
[37, 61]
[61, 66]
[58, 70]
[71, 76]
[74, 83]
[79, 86]
[88, 94]
[100, 107]
[102, 111]
[106, 114]
[101, 116]
[119, 128]
[109, 129]
[127, 132]
[128, 133]
[131, 134]
[132, 135]
[134, 138]
[138, 142]
[139, 144]
[143, 148]
[144, 163]
[160, 165]
[162, 166]
[165, 168]
[167, 170]
[163, 171]
[136, 173]
[161, 175]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.234318971633911

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7] cc => I, Pos: [2, 7] cc => I, Pos: [3, 9, 13] ccc => cc, Pos: [7, 11, 15] ccc => cc, Pos: [10, 14, 18] ccc => cc, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [24, 26] cc => I, Pos: [24, 26] cc => I, Pos: [27, 31] cc => I, Pos: [27, 31] cc => I, Pos: [29, 35] cc => I, Pos: [29, 35] cc => I, Pos: [37, 61] cc => I, Pos: [37, 61] cc => I, Pos: [40, 51] cc => I, Pos: [40, 51] cc => I, Pos: [41, 45] cc => I, Pos: [41, 45] cc => I, Pos: [46, 50] cc => I, Pos: [46, 50] cc => I, Pos: [49, 54] cc => I, Pos: [49, 54] cc => I, Pos: [55, 58] cc => I, Pos: [55, 58] cc => I, Pos: [58, 70] cc => I, Pos: [58, 70] cc => I, Pos: [61, 66] cc => I, Pos: [61, 66] cc => I, Pos: [71, 76] cc => I, Pos: [71, 76] cc => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [79, 86] cc => I, Pos: [79, 86] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [100, 107] cc => I, Pos: [100, 107] cc => I, Pos: [101, 116] cc => I, Pos: [101, 116] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I, Pos: [109, 129] cc => I, Pos: [109, 129] cc => I, Pos: [119, 128] cc => I, Pos: [119, 128] cc => I, Pos: [120, 125, 131] ccc => cc, Pos: [127, 132] cc => I, Pos: [127, 132] cc => I, Pos: [128, 133] cc => I, Pos: [128, 133] cc => I, Pos: [131, 134] cc => I, Pos: [131, 134] cc => I, Pos: [132, 135] cc => I, Pos: [132, 135] cc => I, Pos: [134, 138] cc => I, Pos: [134, 138] cc => I, Pos: [136, 173] cc => I, Pos: [136, 173] cc => I, Pos: [137, 140, 143] ccc => cc, Pos: [138, 142] cc => I, Pos: [138, 142] cc => I, Pos: [139, 144] cc => I, Pos: [139, 144] cc => I, Pos: [143, 148] cc => I, Pos: [143, 148] cc => I, Pos: [144, 163] cc => I, Pos: [144, 163] cc => I, Pos: [150, 154, 156] ccc => cc, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [161, 175] cc => I, Pos: [161, 175] cc => I, Pos: [162, 166] cc => I, Pos: [162, 166] cc => I, Pos: [163, 171] cc => I, Pos: [163, 171] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [167, 170] cc => I, Pos: [167, 170] cc => I]

--------End Timer [Generate Plans]:  0.09374427795410156

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 7] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [10, 14, 18] ccc => cc,
 Pos: [12, 16] cc => I,
 Pos: [15, 21] cc => I,
 Pos: [24, 26] cc => I,
 Pos: [27, 31] cc => I,
 Pos: [29, 35] cc => I,
 Pos: [37, 61] cc => I,
 Pos: [40, 51] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [46, 50] cc => I,
 Pos: [49, 54] cc => I,
 Pos: [58, 70] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [101, 116] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [106, 114] cc => I,
 Pos: [109, 129] cc => I,
 Pos: [119, 128] cc => I,
 Pos: [131, 134] cc => I,
 Pos: [127, 132] cc => I,
 Pos: [136, 173] cc => I,
 Pos: [143, 148] cc => I,
 Pos: [138, 142] cc => I,
 Pos: [144, 163] cc => I,
 Pos: [150, 154, 156] ccc => cc,
 Pos: [160, 165] cc => I,
 Pos: [161, 175] cc => I,
 Pos: [162, 166] cc => I,
 Pos: [167, 170] cc => I]
Change: 35, Saving: 35

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 7] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [10, 14, 18] ccc => cc
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [15, 21] cc => I
Apply:  Pos: [24, 26] cc => I
Apply:  Pos: [27, 31] cc => I
Apply:  Pos: [29, 35] cc => I
Apply:  Pos: [37, 61] cc => I
Apply:  Pos: [40, 51] cc => I
Apply:  Pos: [41, 45] cc => I
Apply:  Pos: [46, 50] cc => I
Apply:  Pos: [49, 54] cc => I
Apply:  Pos: [58, 70] cc => I
Apply:  Pos: [71, 76] cc => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [79, 86] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [100, 107] cc => I
Apply:  Pos: [101, 116] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [106, 114] cc => I
Apply:  Pos: [109, 129] cc => I
Apply:  Pos: [119, 128] cc => I
Apply:  Pos: [131, 134] cc => I
Apply:  Pos: [127, 132] cc => I
Apply:  Pos: [136, 173] cc => I
Apply:  Pos: [143, 148] cc => I
Apply:  Pos: [138, 142] cc => I
Apply:  Pos: [144, 163] cc => I
Apply:  Pos: [150, 154, 156] ccc => cc
Apply:  Pos: [160, 165] cc => I
Apply:  Pos: [161, 175] cc => I
Apply:  Pos: [162, 166] cc => I
Apply:  Pos: [167, 170] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [13, 2], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [13, 2], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [16, 18], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [17, 5], [11, 13], [10, 1], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [1, 7], [11, 14], [13, 6], [14, 7], [1, 7], [9, 19], [3, 6], [4, 18], [17, 5], [13, 3], [17, 18], [14, 7], [11, 19], [15, 14], [4, 17], [18, 14], [13, 2], [13, 6], [4, 18], [6, 2], [4, 16], [11, 13], [18, 14], [16, 17], [0, 8], [11, 19], [4, 17], [18, 11], [14, 1], [8, 5], [15, 7], [4, 18], [3, 2], [17, 15], [18, 14], [9, 11], [17, 18], [15, 7], [17, 5], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 5], [6, 2], [5, 15], [16, 17], [9, 11], [8, 5], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  3.3280632495880127

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[13, 19]
[51, 54]
[41, 59]
[55, 62]
[63, 76]
[86, 105]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[101, 103, 106]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[66, 69, 73]
[81, 84, 88]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[13, 19]
[51, 54]
[41, 59]
[55, 62]
[63, 76]
[86, 105]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7024173736572266

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [13, 19] cc => I, Pos: [13, 19] cc => I, Pos: [41, 59] cc => I, Pos: [41, 59] cc => I, Pos: [51, 54] cc => I, Pos: [51, 54] cc => I, Pos: [55, 62] cc => I, Pos: [55, 62] cc => I, Pos: [63, 76] cc => I, Pos: [63, 76] cc => I, Pos: [66, 69, 73] ccc => cc, Pos: [81, 84, 88] ccc => cc, Pos: [86, 105] cc => I, Pos: [86, 105] cc => I, Pos: [101, 103, 106] ccc => cc]

--------End Timer [Generate Plans]:  0.03124713897705078

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [13, 19] cc => I,
 Pos: [41, 59] cc => I,
 Pos: [51, 54] cc => I,
 Pos: [55, 62] cc => I,
 Pos: [63, 76] cc => I,
 Pos: [66, 69, 73] ccc => cc,
 Pos: [81, 84, 88] ccc => cc,
 Pos: [86, 105] cc => I,
 Pos: [101, 103, 106] ccc => cc]
Change: 9, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [13, 19] cc => I
Apply:  Pos: [41, 59] cc => I
Apply:  Pos: [51, 54] cc => I
Apply:  Pos: [55, 62] cc => I
Apply:  Pos: [63, 76] cc => I
Apply:  Pos: [66, 69, 73] ccc => cc
Apply:  Pos: [81, 84, 88] ccc => cc
Apply:  Pos: [86, 105] cc => I
Apply:  Pos: [101, 103, 106] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [16, 18], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [11, 13], [10, 1], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [17, 18], [15, 14], [4, 17], [4, 18], [13, 6], [13, 2], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [0, 8], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [4, 18], [3, 2], [15, 7], [18, 14], [17, 18], [17, 5], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [5, 15], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  1.7336645126342773

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[90, 96]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 65, 69]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[54, 56, 57]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[90, 96]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.390645980834961

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 65, 69] ccc => cc, Pos: [54, 56, 57] ccc => cc, Pos: [90, 96] cc => I, Pos: [90, 96] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 65, 69] ccc => cc,
 Pos: [54, 56, 57] ccc => cc,
 Pos: [90, 96] cc => I]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 65, 69] ccc => cc
Apply:  Pos: [54, 56, 57] ccc => cc
Apply:  Pos: [90, 96] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [16, 18], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [0, 8], [19, 3], [11, 13], [10, 1], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 2], [13, 6], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [8, 5], [4, 17], [18, 11], [14, 1], [17, 15], [4, 18], [3, 2], [15, 7], [18, 14], [17, 5], [17, 18], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], ----End Timer [Execute Mapping]:  1.390645980834961

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 37]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[27, 33, 40]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 37]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.29661226272583

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 37] cc => I, Pos: [20, 37] cc => I, Pos: [27, 33, 40] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 37] cc => I, Pos: [27, 33, 40] ccc => cc]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 37] cc => I
Apply:  Pos: [27, 33, 40] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [5, 10], [18, 11], [16, 18], [5, 15], [13, 2], [12, 9], [10, 1], [11, 14], [16, 17], [14, 13], [19, 3], [11, 13], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 6], [13, 2], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [8, 5], [4, 17], [18, 11], [14, 1], [17, 15], [4, 18], [3, 2], [15, 7], [18, 14], [17, 18], [17, 5], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], ----End Timer [Execute Mapping]:  1.29661226272583

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2344069480895996

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [5, 10], [18, 11], [16, 18], [5, 15], [13, 2], [12, 9], [10, 1], [11, 14], [16, 17], [14, 13], [19, 3], [11, 13], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 2], [13, 6], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [8, 5], [4, 17], [18, 11], [14, 1], [17, 15], [4, 18], [3, 2], [15, 7], [18, 14], [17, 5], [17, 18], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], ----End Timer [Execute Mapping]:  1.2344069480895996

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [90] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 25 - (small)
 - circuit cycle: 180

Reduced: 
 - size: 90 (50.00%)
 - depth: 20 (44.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07810831069946289

[6, 2], [13, 3], [15, 7], [17, 18], [0, 8], [3, 6], [11, 14], [15, 7], [10, 1], [16, 18], [6, 2], [8, 15], [19, 3], [16, 17], [13, 6], [15, 7], [19, 3], [16, 17], [6, 2], [18, 11], [9, 19], [15, 7], [13, 2], [0, 4], [18, 13], [12, 19], [18, 13], [8, 17], [7, 6], [4, 18], [16, 12], [8, 17], [15, 14], [13, 2], [9, 11], [4, 18], [1, 7], [19, 3], [0, 8], [18, 13], [8, 5], [12, 11], [4, 16], [16, 18], [4, 17], [12, 11], [16, 12], [14, 1], [4, 18], [13, 6], [16, 12], [8, 5], [10, 1], [18, 11], [13, 6], [16, 18], [5, 15], [13, 2], [16, 18], [12, 9], [5, 10], [19, 3], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [17, 5], [11, 13], [10, 1], [16, 18], [5, 10], [7, 6], [4, 16], [12, 19], [14, 1], [5, 10], [17, 15], [14, 13], [5, 15], [0, 4], [3, 2], [1, 7], [12, 19], [11, 14], [13, 6], [5, 15], [14, 7], [8, 15], [1, 7], [9, 19], [3, 6], [4, 18], [17, 5], [8, 15], [13, 3], [17, 18], [14, 7], [11, 19], [15, 14], [18, 11], [19, 3], [10, 1], [4, 17], [18, 14], [13, 2], [5, 15], [18, 11], [13, 6], [12, 9], [4, 18], [10, 1], [6, 2], [4, 16], [5, 15], [11, 13], [19, 3], [18, 14], [16, 17], [3, 2], [0, 8], [11, 19], [4, 17], [18, 11], [14, 1], [8, 5], [15, 7], [17, 15], [3, 2], [12, 9], [4, 18], [0, 8], [17, 15], [3, 2], [0, 8], [17, 15], [16, 12], [18, 14], [0, 8], [9, 11], [17, 18], [15, 7], [0, 8], [18, 14], [9, 11], [17, 5], [15, 1], [7, 6], [18, 14], [13, 2], [8, 15], [3, 6], [4, 17], [14, 7], [0, 8], [1, 7], [8, 15], [13, 3], [15, 7], [8, 5], [5, 15], [18, 14], [19, 3], [9, 11], [6, 2], [5, 15], [19, 3], [18, 13], [5, 15], [16, 17], [18, 13], [9, 11], [8, 5], [16, 12], [13, 6], [18, 14], [0, 8], [1, 7], [3, 6], [5, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 7]
[12, 16]
[13, 17]
[15, 21]
[24, 26]
[27, 31]
[29, 35]
[41, 45]
[46, 50]
[40, 51]
[49, 54]
[55, 58]
[37, 61]
[61, 66]
[58, 70]
[71, 76]
[74, 83]
[79, 86]
[88, 94]
[100, 107]
[102, 111]
[106, 114]
[101, 116]
[119, 128]
[109, 129]
[127, 132]
[128, 133]
[131, 134]
[132, 135]
[134, 138]
[138, 142]
[139, 144]
[143, 148]
[144, 163]
[160, 165]
[162, 166]
[165, 168]
[167, 170]
[163, 171]
[136, 173]
[161, 175]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[120, 125, 131]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[7, 11, 15]
[10, 14, 18]
[137, 140, 143]
[150, 154, 156]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 9, 13]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 7]
[12, 16]
[13, 17]
[15, 21]
[24, 26]
[27, 31]
[29, 35]
[41, 45]
[46, 50]
[40, 51]
[49, 54]
[55, 58]
[37, 61]
[61, 66]
[58, 70]
[71, 76]
[74, 83]
[79, 86]
[88, 94]
[100, 107]
[102, 111]
[106, 114]
[101, 116]
[119, 128]
[109, 129]
[127, 132]
[128, 133]
[131, 134]
[132, 135]
[134, 138]
[138, 142]
[139, 144]
[143, 148]
[144, 163]
[160, 165]
[162, 166]
[165, 168]
[167, 170]
[163, 171]
[136, 173]
[161, 175]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.203075885772705

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7] cc => I, Pos: [2, 7] cc => I, Pos: [3, 9, 13] ccc => cc, Pos: [7, 11, 15] ccc => cc, Pos: [10, 14, 18] ccc => cc, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [24, 26] cc => I, Pos: [24, 26] cc => I, Pos: [27, 31] cc => I, Pos: [27, 31] cc => I, Pos: [29, 35] cc => I, Pos: [29, 35] cc => I, Pos: [37, 61] cc => I, Pos: [37, 61] cc => I, Pos: [40, 51] cc => I, Pos: [40, 51] cc => I, Pos: [41, 45] cc => I, Pos: [41, 45] cc => I, Pos: [46, 50] cc => I, Pos: [46, 50] cc => I, Pos: [49, 54] cc => I, Pos: [49, 54] cc => I, Pos: [55, 58] cc => I, Pos: [55, 58] cc => I, Pos: [58, 70] cc => I, Pos: [58, 70] cc => I, Pos: [61, 66] cc => I, Pos: [61, 66] cc => I, Pos: [71, 76] cc => I, Pos: [71, 76] cc => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [79, 86] cc => I, Pos: [79, 86] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [100, 107] cc => I, Pos: [100, 107] cc => I, Pos: [101, 116] cc => I, Pos: [101, 116] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I, Pos: [109, 129] cc => I, Pos: [109, 129] cc => I, Pos: [119, 128] cc => I, Pos: [119, 128] cc => I, Pos: [120, 125, 131] ccc => cc, Pos: [127, 132] cc => I, Pos: [127, 132] cc => I, Pos: [128, 133] cc => I, Pos: [128, 133] cc => I, Pos: [131, 134] cc => I, Pos: [131, 134] cc => I, Pos: [132, 135] cc => I, Pos: [132, 135] cc => I, Pos: [134, 138] cc => I, Pos: [134, 138] cc => I, Pos: [136, 173] cc => I, Pos: [136, 173] cc => I, Pos: [137, 140, 143] ccc => cc, Pos: [138, 142] cc => I, Pos: [138, 142] cc => I, Pos: [139, 144] cc => I, Pos: [139, 144] cc => I, Pos: [143, 148] cc => I, Pos: [143, 148] cc => I, Pos: [144, 163] cc => I, Pos: [144, 163] cc => I, Pos: [150, 154, 156] ccc => cc, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [161, 175] cc => I, Pos: [161, 175] cc => I, Pos: [162, 166] cc => I, Pos: [162, 166] cc => I, Pos: [163, 171] cc => I, Pos: [163, 171] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [167, 170] cc => I, Pos: [167, 170] cc => I]

--------End Timer [Generate Plans]:  0.09374856948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 7] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [10, 14, 18] ccc => cc,
 Pos: [12, 16] cc => I,
 Pos: [15, 21] cc => I,
 Pos: [24, 26] cc => I,
 Pos: [27, 31] cc => I,
 Pos: [29, 35] cc => I,
 Pos: [37, 61] cc => I,
 Pos: [40, 51] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [46, 50] cc => I,
 Pos: [49, 54] cc => I,
 Pos: [58, 70] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [101, 116] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [106, 114] cc => I,
 Pos: [109, 129] cc => I,
 Pos: [128, 133] cc => I,
 Pos: [131, 134] cc => I,
 Pos: [127, 132] cc => I,
 Pos: [136, 173] cc => I,
 Pos: [137, 140, 143] ccc => cc,
 Pos: [138, 142] cc => I,
 Pos: [139, 144] cc => I,
 Pos: [150, 154, 156] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [161, 175] cc => I,
 Pos: [162, 166] cc => I,
 Pos: [163, 171] cc => I,
 Pos: [167, 170] cc => I]
Change: 36, Saving: 37

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 7] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [10, 14, 18] ccc => cc
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [15, 21] cc => I
Apply:  Pos: [24, 26] cc => I
Apply:  Pos: [27, 31] cc => I
Apply:  Pos: [29, 35] cc => I
Apply:  Pos: [37, 61] cc => I
Apply:  Pos: [40, 51] cc => I
Apply:  Pos: [41, 45] cc => I
Apply:  Pos: [46, 50] cc => I
Apply:  Pos: [49, 54] cc => I
Apply:  Pos: [58, 70] cc => I
Apply:  Pos: [71, 76] cc => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [79, 86] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [100, 107] cc => I
Apply:  Pos: [101, 116] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [106, 114] cc => I
Apply:  Pos: [109, 129] cc => I
Apply:  Pos: [128, 133] cc => I
Apply:  Pos: [131, 134] cc => I
Apply:  Pos: [127, 132] cc => I
Apply:  Pos: [136, 173] cc => I
Apply:  Pos: [137, 140, 143] ccc => cc
Apply:  Pos: [138, 142] cc => I
Apply:  Pos: [139, 144] cc => I
Apply:  Pos: [150, 154, 156] ccc => cc
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [161, 175] cc => I
Apply:  Pos: [162, 166] cc => I
Apply:  Pos: [163, 171] cc => I
Apply:  Pos: [167, 170] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [13, 2], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [13, 2], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [16, 18], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [17, 5], [11, 13], [10, 1], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [1, 7], [11, 14], [13, 6], [14, 7], [1, 7], [9, 19], [3, 6], [4, 18], [17, 5], [13, 3], [17, 18], [14, 7], [11, 19], [15, 14], [4, 17], [18, 14], [13, 2], [13, 6], [4, 18], [6, 2], [4, 16], [11, 13], [18, 14], [16, 17], [3, 2], [0, 8], [11, 19], [4, 17], [18, 11], [14, 1], [8, 5], [15, 7], [4, 18], [17, 15], [17, 18], [18, 14], [15, 7], [17, 5], [15, 1], [7, 6], [18, 14], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 5], [5, 15], [6, 2], [16, 17], [8, 5], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  3.2968244552612305

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[13, 19]
[51, 54]
[41, 59]
[55, 62]
[63, 77]
[86, 91]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[101, 102, 105]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[66, 69, 73]
[82, 85, 87]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[13, 19]
[51, 54]
[41, 59]
[55, 62]
[63, 77]
[86, 91]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6875779628753662

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [13, 19] cc => I, Pos: [13, 19] cc => I, Pos: [41, 59] cc => I, Pos: [41, 59] cc => I, Pos: [51, 54] cc => I, Pos: [51, 54] cc => I, Pos: [55, 62] cc => I, Pos: [55, 62] cc => I, Pos: [63, 77] cc => I, Pos: [63, 77] cc => I, Pos: [66, 69, 73] ccc => cc, Pos: [82, 85, 87] ccc => cc, Pos: [86, 91] cc => I, Pos: [86, 91] cc => I, Pos: [101, 102, 105] ccc => cc]

--------End Timer [Generate Plans]:  0.015628814697265625

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [13, 19] cc => I,
 Pos: [41, 59] cc => I,
 Pos: [51, 54] cc => I,
 Pos: [55, 62] cc => I,
 Pos: [63, 77] cc => I,
 Pos: [66, 69, 73] ccc => cc,
 Pos: [82, 85, 87] ccc => cc,
 Pos: [86, 91] cc => I,
 Pos: [101, 102, 105] ccc => cc]
Change: 9, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [13, 19] cc => I
Apply:  Pos: [41, 59] cc => I
Apply:  Pos: [51, 54] cc => I
Apply:  Pos: [55, 62] cc => I
Apply:  Pos: [63, 77] cc => I
Apply:  Pos: [66, 69, 73] ccc => cc
Apply:  Pos: [82, 85, 87] ccc => cc
Apply:  Pos: [86, 91] cc => I
Apply:  Pos: [101, 102, 105] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [16, 18], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [11, 13], [10, 1], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [17, 18], [15, 14], [4, 17], [4, 18], [13, 6], [13, 2], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [0, 8], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [4, 18], [17, 18], [15, 7], [17, 5], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [5, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  1.7032067775726318

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 66, 70]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[54, 56, 57]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.3440806865692139

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 66, 70] ccc => cc, Pos: [54, 56, 57] ccc => cc]

--------End Timer [Generate Plans]:  0.015504837036132812

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 66, 70] ccc => cc, Pos: [54, 56, 57] ccc => cc]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 66, 70] ccc => cc
Apply:  Pos: [54, 56, 57] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [16, 18], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [0, 8], [19, 3], [11, 13], [10, 1], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 2], [13, 6], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [8, 5], [4, 17], [18, 11], [14, 1], [17, 15], [17, 18], [4, 18], [15, 7], [17, 5], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [5, 15], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  1.3595855236053467

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 37]
[86, 93]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[27, 33, 40]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 37]
[86, 93]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.3122458457946777

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 37] cc => I, Pos: [20, 37] cc => I, Pos: [27, 33, 40] ccc => cc, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I]

--------End Timer [Generate Plans]:  0.015623092651367188

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 37] cc => I, Pos: [27, 33, 40] ccc => cc, Pos: [86, 93] cc => I]
Change: 3, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 37] cc => I
Apply:  Pos: [27, 33, 40] ccc => cc
Apply:  Pos: [86, 93] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [5, 10], [18, 11], [16, 18], [5, 15], [13, 2], [12, 9], [10, 1], [11, 14], [16, 17], [14, 13], [19, 3], [11, 13], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 6], [13, 2], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [8, 5], [4, 17], [18, 11], [14, 1], [17, 18], [17, 15], [4, 18], [15, 7], [17, 5], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], ----End Timer [Execute Mapping]:  1.327868938446045

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.203106164932251

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [5, 10], [18, 11], [16, 18], [5, 15], [13, 2], [12, 9], [10, 1], [11, 14], [16, 17], [14, 13], [19, 3], [11, 13], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 2], [13, 6], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [8, 5], [4, 17], [18, 11], [14, 1], [17, 15], [4, 18], [17, 18], [15, 7], [17, 5], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], ----End Timer [Execute Mapping]:  1.203106164932251

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [89] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 24 - (small)
 - circuit cycle: 178

Reduced: 
 - size: 91 (50.56%)
 - depth: 21 (46.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07813334465026855

[6, 2], [13, 3], [15, 7], [17, 18], [0, 8], [3, 6], [11, 14], [15, 7], [10, 1], [16, 18], [6, 2], [8, 15], [19, 3], [16, 17], [13, 6], [15, 7], [19, 3], [16, 17], [6, 2], [18, 11], [9, 19], [15, 7], [13, 2], [0, 4], [18, 13], [12, 19], [18, 13], [8, 17], [7, 6], [4, 18], [16, 12], [8, 17], [15, 14], [13, 2], [9, 11], [4, 18], [1, 7], [19, 3], [0, 8], [18, 13], [8, 5], [12, 11], [4, 16], [16, 18], [4, 17], [12, 11], [16, 12], [14, 1], [4, 18], [13, 6], [16, 12], [8, 5], [10, 1], [18, 11], [13, 6], [16, 18], [5, 15], [13, 2], [16, 18], [12, 9], [5, 10], [19, 3], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [17, 5], [11, 13], [10, 1], [16, 18], [5, 10], [7, 6], [4, 16], [12, 19], [14, 1], [5, 10], [17, 15], [14, 13], [5, 15], [0, 4], [3, 2], [1, 7], [12, 19], [11, 14], [13, 6], [5, 15], [14, 7], [8, 15], [1, 7], [9, 19], [3, 6], [4, 18], [17, 5], [8, 15], [13, 3], [17, 18], [14, 7], [11, 19], [15, 14], [18, 11], [19, 3], [10, 1], [4, 17], [18, 14], [13, 2], [5, 15], [18, 11], [13, 6], [12, 9], [4, 18], [10, 1], [6, 2], [4, 16], [5, 15], [11, 13], [19, 3], [18, 14], [16, 17], [3, 2], [0, 8], [11, 19], [4, 17], [18, 11], [14, 1], [8, 5], [15, 7], [17, 15], [3, 2], [12, 9], [4, 18], [0, 8], [17, 15], [3, 2], [0, 8], [17, 15], [16, 12], [18, 14], [0, 8], [9, 11], [17, 18], [15, 7], [0, 8], [18, 14], [9, 11], [17, 5], [15, 1], [7, 6], [18, 14], [13, 2], [8, 15], [3, 6], [4, 17], [14, 7], [0, 8], [1, 7], [8, 15], [13, 3], [15, 7], [8, 5], [5, 15], [18, 14], [19, 3], [9, 11], [6, 2], [5, 15], [19, 3], [18, 13], [5, 15], [16, 17], [18, 13], [9, 11], [8, 5], [16, 12], [13, 6], [18, 14], [0, 8], [1, 7], [3, 6], [5, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 7]
[12, 16]
[13, 17]
[15, 21]
[24, 26]
[27, 31]
[29, 35]
[41, 45]
[46, 50]
[40, 51]
[49, 54]
[55, 58]
[37, 61]
[61, 66]
[58, 70]
[71, 76]
[74, 83]
[79, 86]
[88, 94]
[100, 107]
[102, 111]
[106, 114]
[101, 116]
[119, 128]
[109, 129]
[127, 132]
[128, 133]
[131, 134]
[132, 135]
[134, 138]
[138, 142]
[139, 144]
[143, 148]
[144, 163]
[160, 165]
[162, 166]
[165, 168]
[167, 170]
[163, 171]
[136, 173]
[161, 175]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[120, 125, 131]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[7, 11, 15]
[10, 14, 18]
[137, 140, 143]
[150, 154, 156]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 9, 13]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 7]
[12, 16]
[13, 17]
[15, 21]
[24, 26]
[27, 31]
[29, 35]
[41, 45]
[46, 50]
[40, 51]
[49, 54]
[55, 58]
[37, 61]
[61, 66]
[58, 70]
[71, 76]
[74, 83]
[79, 86]
[88, 94]
[100, 107]
[102, 111]
[106, 114]
[101, 116]
[119, 128]
[109, 129]
[127, 132]
[128, 133]
[131, 134]
[132, 135]
[134, 138]
[138, 142]
[139, 144]
[143, 148]
[144, 163]
[160, 165]
[162, 166]
[165, 168]
[167, 170]
[163, 171]
[136, 173]
[161, 175]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2642626762390137

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7] cc => I, Pos: [2, 7] cc => I, Pos: [3, 9, 13] ccc => cc, Pos: [7, 11, 15] ccc => cc, Pos: [10, 14, 18] ccc => cc, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [24, 26] cc => I, Pos: [24, 26] cc => I, Pos: [27, 31] cc => I, Pos: [27, 31] cc => I, Pos: [29, 35] cc => I, Pos: [29, 35] cc => I, Pos: [37, 61] cc => I, Pos: [37, 61] cc => I, Pos: [40, 51] cc => I, Pos: [40, 51] cc => I, Pos: [41, 45] cc => I, Pos: [41, 45] cc => I, Pos: [46, 50] cc => I, Pos: [46, 50] cc => I, Pos: [49, 54] cc => I, Pos: [49, 54] cc => I, Pos: [55, 58] cc => I, Pos: [55, 58] cc => I, Pos: [58, 70] cc => I, Pos: [58, 70] cc => I, Pos: [61, 66] cc => I, Pos: [61, 66] cc => I, Pos: [71, 76] cc => I, Pos: [71, 76] cc => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [79, 86] cc => I, Pos: [79, 86] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [100, 107] cc => I, Pos: [100, 107] cc => I, Pos: [101, 116] cc => I, Pos: [101, 116] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I, Pos: [109, 129] cc => I, Pos: [109, 129] cc => I, Pos: [119, 128] cc => I, Pos: [119, 128] cc => I, Pos: [120, 125, 131] ccc => cc, Pos: [127, 132] cc => I, Pos: [127, 132] cc => I, Pos: [128, 133] cc => I, Pos: [128, 133] cc => I, Pos: [131, 134] cc => I, Pos: [131, 134] cc => I, Pos: [132, 135] cc => I, Pos: [132, 135] cc => I, Pos: [134, 138] cc => I, Pos: [134, 138] cc => I, Pos: [136, 173] cc => I, Pos: [136, 173] cc => I, Pos: [137, 140, 143] ccc => cc, Pos: [138, 142] cc => I, Pos: [138, 142] cc => I, Pos: [139, 144] cc => I, Pos: [139, 144] cc => I, Pos: [143, 148] cc => I, Pos: [143, 148] cc => I, Pos: [144, 163] cc => I, Pos: [144, 163] cc => I, Pos: [150, 154, 156] ccc => cc, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [161, 175] cc => I, Pos: [161, 175] cc => I, Pos: [162, 166] cc => I, Pos: [162, 166] cc => I, Pos: [163, 171] cc => I, Pos: [163, 171] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [167, 170] cc => I, Pos: [167, 170] cc => I]

--------End Timer [Generate Plans]:  0.09375715255737305

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 11, 15] ccc => cc,
 Pos: [3, 9, 13] ccc => cc,
 Pos: [10, 14, 18] ccc => cc,
 Pos: [12, 16] cc => I,
 Pos: [24, 26] cc => I,
 Pos: [27, 31] cc => I,
 Pos: [29, 35] cc => I,
 Pos: [37, 61] cc => I,
 Pos: [40, 51] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [46, 50] cc => I,
 Pos: [49, 54] cc => I,
 Pos: [55, 58] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [101, 116] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [106, 114] cc => I,
 Pos: [109, 129] cc => I,
 Pos: [119, 128] cc => I,
 Pos: [120, 125, 131] ccc => cc,
 Pos: [132, 135] cc => I,
 Pos: [134, 138] cc => I,
 Pos: [136, 173] cc => I,
 Pos: [143, 148] cc => I,
 Pos: [144, 163] cc => I,
 Pos: [150, 154, 156] ccc => cc,
 Pos: [160, 165] cc => I,
 Pos: [161, 175] cc => I,
 Pos: [162, 166] cc => I,
 Pos: [167, 170] cc => I]
Change: 34, Saving: 34

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 11, 15] ccc => cc
Apply:  Pos: [3, 9, 13] ccc => cc
Apply:  Pos: [10, 14, 18] ccc => cc
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [24, 26] cc => I
Apply:  Pos: [27, 31] cc => I
Apply:  Pos: [29, 35] cc => I
Apply:  Pos: [37, 61] cc => I
Apply:  Pos: [40, 51] cc => I
Apply:  Pos: [41, 45] cc => I
Apply:  Pos: [46, 50] cc => I
Apply:  Pos: [49, 54] cc => I
Apply:  Pos: [55, 58] cc => I
Apply:  Pos: [71, 76] cc => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [79, 86] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [100, 107] cc => I
Apply:  Pos: [101, 116] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [106, 114] cc => I
Apply:  Pos: [109, 129] cc => I
Apply:  Pos: [119, 128] cc => I
Apply:  Pos: [120, 125, 131] ccc => cc
Apply:  Pos: [132, 135] cc => I
Apply:  Pos: [134, 138] cc => I
Apply:  Pos: [136, 173] cc => I
Apply:  Pos: [143, 148] cc => I
Apply:  Pos: [144, 163] cc => I
Apply:  Pos: [150, 154, 156] ccc => cc
Apply:  Pos: [160, 165] cc => I
Apply:  Pos: [161, 175] cc => I
Apply:  Pos: [162, 166] cc => I
Apply:  Pos: [167, 170] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [15, 7], [16, 17], [0, 8], [3, 6], [11, 14], [8, 15], [10, 1], [17, 18], [13, 6], [15, 7], [6, 2], [16, 17], [18, 11], [9, 19], [15, 7], [13, 2], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [13, 2], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [17, 5], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [1, 7], [11, 14], [13, 6], [14, 7], [1, 7], [9, 19], [3, 6], [4, 18], [17, 5], [13, 3], [17, 18], [14, 7], [11, 19], [15, 14], [4, 17], [18, 14], [13, 2], [13, 6], [4, 18], [6, 2], [4, 16], [11, 13], [18, 14], [16, 17], [0, 5], [11, 19], [4, 17], [18, 11], [14, 1], [8, 5], [15, 7], [17, 15], [4, 18], [3, 2], [18, 14], [9, 11], [17, 18], [15, 7], [0, 8], [17, 5], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 5], [6, 2], [5, 15], [16, 17], [9, 11], [8, 5], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  3.3580198287963867

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 16]
[17, 23]
[55, 58]
[44, 63]
[59, 66]
[67, 80]
[93, 98]
[90, 110]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[3, 9, 13]
[106, 108, 111]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[70, 73, 77]
[85, 86, 92]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 16]
[17, 23]
[55, 58]
[44, 63]
[59, 66]
[67, 80]
[93, 98]
[90, 110]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.844104528427124

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 9, 13] ccc => cc, Pos: [11, 16] cc => I, Pos: [11, 16] cc => I, Pos: [17, 23] cc => I, Pos: [17, 23] cc => I, Pos: [44, 63] cc => I, Pos: [44, 63] cc => I, Pos: [55, 58] cc => I, Pos: [55, 58] cc => I, Pos: [59, 66] cc => I, Pos: [59, 66] cc => I, Pos: [67, 80] cc => I, Pos: [67, 80] cc => I, Pos: [70, 73, 77] ccc => cc, Pos: [85, 86, 92] ccc => cc, Pos: [90, 110] cc => I, Pos: [90, 110] cc => I, Pos: [93, 98] cc => I, Pos: [93, 98] cc => I, Pos: [106, 108, 111] ccc => cc]

--------End Timer [Generate Plans]:  0.031233549118041992

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 9, 13] ccc => cc,
 Pos: [11, 16] cc => I,
 Pos: [17, 23] cc => I,
 Pos: [44, 63] cc => I,
 Pos: [55, 58] cc => I,
 Pos: [59, 66] cc => I,
 Pos: [67, 80] cc => I,
 Pos: [70, 73, 77] ccc => cc,
 Pos: [85, 86, 92] ccc => cc,
 Pos: [90, 110] cc => I,
 Pos: [93, 98] cc => I,
 Pos: [106, 108, 111] ccc => cc]
Change: 12, Saving: 13

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 9, 13] ccc => cc
Apply:  Pos: [11, 16] cc => I
Apply:  Pos: [17, 23] cc => I
Apply:  Pos: [44, 63] cc => I
Apply:  Pos: [55, 58] cc => I
Apply:  Pos: [59, 66] cc => I
Apply:  Pos: [67, 80] cc => I
Apply:  Pos: [70, 73, 77] ccc => cc
Apply:  Pos: [85, 86, 92] ccc => cc
Apply:  Pos: [90, 110] cc => I
Apply:  Pos: [93, 98] cc => I
Apply:  Pos: [106, 108, 111] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [15, 7], [16, 18], [0, 8], [3, 6], [11, 14], [8, 15], [10, 1], [17, 18], [13, 6], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [17, 18], [15, 14], [4, 17], [4, 18], [13, 6], [13, 2], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [0, 5], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [15, 7], [4, 18], [3, 2], [18, 14], [17, 18], [17, 5], [15, 1], [7, 6], [13, 2], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [5, 15], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  1.875338077545166

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[90, 96]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[55, 57, 58]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[90, 96]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4221348762512207

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [55, 57, 58] ccc => cc, Pos: [90, 96] cc => I, Pos: [90, 96] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [55, 57, 58] ccc => cc, Pos: [90, 96] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [55, 57, 58] ccc => cc
Apply:  Pos: [90, 96] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [15, 7], [16, 18], [0, 8], [3, 6], [11, 14], [8, 15], [10, 1], [17, 18], [13, 6], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 2], [13, 6], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [0, 5], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [15, 7], [4, 18], [3, 2], [18, 14], [17, 5], [17, 18], [15, 1], [7, 6], [13, 2], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], ----End Timer [Execute Mapping]:  1.4221348762512207

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.3436460494995117

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [15, 7], [16, 18], [0, 8], [3, 6], [11, 14], [8, 15], [10, 1], [17, 18], [13, 6], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 6], [13, 2], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [0, 5], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [15, 7], [4, 18], [3, 2], [18, 14], [17, 18], [17, 5], [15, 1], [7, 6], [13, 2], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], ----End Timer [Execute Mapping]:  1.3436460494995117

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [94] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 26 - (small)
 - circuit cycle: 188

Reduced: 
 - size: 86 (47.78%)
 - depth: 19 (42.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07813167572021484

[6, 2], [13, 3], [15, 7], [17, 18], [0, 8], [3, 6], [11, 14], [15, 7], [10, 1], [16, 18], [6, 2], [8, 15], [19, 3], [16, 17], [13, 6], [15, 7], [19, 3], [16, 17], [6, 2], [18, 11], [9, 19], [15, 7], [13, 2], [0, 4], [18, 13], [12, 19], [18, 13], [8, 17], [7, 6], [4, 18], [16, 12], [8, 17], [15, 14], [13, 2], [9, 11], [4, 18], [1, 7], [19, 3], [0, 8], [18, 13], [8, 5], [12, 11], [4, 16], [16, 18], [4, 17], [12, 11], [16, 12], [14, 1], [4, 18], [13, 6], [16, 12], [8, 5], [10, 1], [18, 11], [13, 6], [16, 18], [5, 15], [13, 2], [16, 18], [12, 9], [5, 10], [19, 3], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [17, 5], [11, 13], [10, 1], [16, 18], [5, 10], [7, 6], [4, 16], [12, 19], [14, 1], [5, 10], [17, 15], [14, 13], [5, 15], [0, 4], [3, 2], [1, 7], [12, 19], [11, 14], [13, 6], [5, 15], [14, 7], [8, 15], [1, 7], [9, 19], [3, 6], [4, 18], [17, 5], [8, 15], [13, 3], [17, 18], [14, 7], [11, 19], [15, 14], [18, 11], [19, 3], [10, 1], [4, 17], [18, 14], [13, 2], [5, 15], [18, 11], [13, 6], [12, 9], [4, 18], [10, 1], [6, 2], [4, 16], [5, 15], [11, 13], [19, 3], [18, 14], [16, 17], [3, 2], [0, 8], [11, 19], [4, 17], [18, 11], [14, 1], [8, 5], [15, 7], [17, 15], [3, 2], [12, 9], [4, 18], [0, 8], [17, 15], [3, 2], [0, 8], [17, 15], [16, 12], [18, 14], [0, 8], [9, 11], [17, 18], [15, 7], [0, 8], [18, 14], [9, 11], [17, 5], [15, 1], [7, 6], [18, 14], [13, 2], [8, 15], [3, 6], [4, 17], [14, 7], [0, 8], [1, 7], [8, 15], [13, 3], [15, 7], [8, 5], [5, 15], [18, 14], [19, 3], [9, 11], [6, 2], [5, 15], [19, 3], [18, 13], [5, 15], [16, 17], [18, 13], [9, 11], [8, 5], [16, 12], [13, 6], [18, 14], [0, 8], [1, 7], [3, 6], [5, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 7]
[12, 16]
[13, 17]
[15, 21]
[24, 26]
[27, 31]
[29, 35]
[41, 45]
[46, 50]
[40, 51]
[49, 54]
[55, 58]
[37, 61]
[61, 66]
[58, 70]
[71, 76]
[74, 83]
[79, 86]
[88, 94]
[100, 107]
[102, 111]
[106, 114]
[101, 116]
[119, 128]
[109, 129]
[127, 132]
[128, 133]
[131, 134]
[132, 135]
[134, 138]
[138, 142]
[139, 144]
[143, 148]
[144, 163]
[160, 165]
[162, 166]
[165, 168]
[167, 170]
[163, 171]
[136, 173]
[161, 175]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[120, 125, 131]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[7, 11, 15]
[10, 14, 18]
[137, 140, 143]
[150, 154, 156]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 9, 13]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 7]
[12, 16]
[13, 17]
[15, 21]
[24, 26]
[27, 31]
[29, 35]
[41, 45]
[46, 50]
[40, 51]
[49, 54]
[55, 58]
[37, 61]
[61, 66]
[58, 70]
[71, 76]
[74, 83]
[79, 86]
[88, 94]
[100, 107]
[102, 111]
[106, 114]
[101, 116]
[119, 128]
[109, 129]
[127, 132]
[128, 133]
[131, 134]
[132, 135]
[134, 138]
[138, 142]
[139, 144]
[143, 148]
[144, 163]
[160, 165]
[162, 166]
[165, 168]
[167, 170]
[163, 171]
[136, 173]
[161, 175]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.234435558319092

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7] cc => I, Pos: [2, 7] cc => I, Pos: [3, 9, 13] ccc => cc, Pos: [7, 11, 15] ccc => cc, Pos: [10, 14, 18] ccc => cc, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [24, 26] cc => I, Pos: [24, 26] cc => I, Pos: [27, 31] cc => I, Pos: [27, 31] cc => I, Pos: [29, 35] cc => I, Pos: [29, 35] cc => I, Pos: [37, 61] cc => I, Pos: [37, 61] cc => I, Pos: [40, 51] cc => I, Pos: [40, 51] cc => I, Pos: [41, 45] cc => I, Pos: [41, 45] cc => I, Pos: [46, 50] cc => I, Pos: [46, 50] cc => I, Pos: [49, 54] cc => I, Pos: [49, 54] cc => I, Pos: [55, 58] cc => I, Pos: [55, 58] cc => I, Pos: [58, 70] cc => I, Pos: [58, 70] cc => I, Pos: [61, 66] cc => I, Pos: [61, 66] cc => I, Pos: [71, 76] cc => I, Pos: [71, 76] cc => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [79, 86] cc => I, Pos: [79, 86] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [100, 107] cc => I, Pos: [100, 107] cc => I, Pos: [101, 116] cc => I, Pos: [101, 116] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I, Pos: [109, 129] cc => I, Pos: [109, 129] cc => I, Pos: [119, 128] cc => I, Pos: [119, 128] cc => I, Pos: [120, 125, 131] ccc => cc, Pos: [127, 132] cc => I, Pos: [127, 132] cc => I, Pos: [128, 133] cc => I, Pos: [128, 133] cc => I, Pos: [131, 134] cc => I, Pos: [131, 134] cc => I, Pos: [132, 135] cc => I, Pos: [132, 135] cc => I, Pos: [134, 138] cc => I, Pos: [134, 138] cc => I, Pos: [136, 173] cc => I, Pos: [136, 173] cc => I, Pos: [137, 140, 143] ccc => cc, Pos: [138, 142] cc => I, Pos: [138, 142] cc => I, Pos: [139, 144] cc => I, Pos: [139, 144] cc => I, Pos: [143, 148] cc => I, Pos: [143, 148] cc => I, Pos: [144, 163] cc => I, Pos: [144, 163] cc => I, Pos: [150, 154, 156] ccc => cc, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [161, 175] cc => I, Pos: [161, 175] cc => I, Pos: [162, 166] cc => I, Pos: [162, 166] cc => I, Pos: [163, 171] cc => I, Pos: [163, 171] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [167, 170] cc => I, Pos: [167, 170] cc => I]

--------End Timer [Generate Plans]:  0.09374356269836426

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 7] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [10, 14, 18] ccc => cc,
 Pos: [12, 16] cc => I,
 Pos: [15, 21] cc => I,
 Pos: [24, 26] cc => I,
 Pos: [27, 31] cc => I,
 Pos: [29, 35] cc => I,
 Pos: [61, 66] cc => I,
 Pos: [40, 51] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [46, 50] cc => I,
 Pos: [49, 54] cc => I,
 Pos: [55, 58] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [101, 116] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [106, 114] cc => I,
 Pos: [109, 129] cc => I,
 Pos: [128, 133] cc => I,
 Pos: [131, 134] cc => I,
 Pos: [132, 135] cc => I,
 Pos: [136, 173] cc => I,
 Pos: [143, 148] cc => I,
 Pos: [138, 142] cc => I,
 Pos: [144, 163] cc => I,
 Pos: [150, 154, 156] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [161, 175] cc => I,
 Pos: [162, 166] cc => I,
 Pos: [167, 170] cc => I]
Change: 35, Saving: 35

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 7] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [10, 14, 18] ccc => cc
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [15, 21] cc => I
Apply:  Pos: [24, 26] cc => I
Apply:  Pos: [27, 31] cc => I
Apply:  Pos: [29, 35] cc => I
Apply:  Pos: [61, 66] cc => I
Apply:  Pos: [40, 51] cc => I
Apply:  Pos: [41, 45] cc => I
Apply:  Pos: [46, 50] cc => I
Apply:  Pos: [49, 54] cc => I
Apply:  Pos: [55, 58] cc => I
Apply:  Pos: [71, 76] cc => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [79, 86] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [100, 107] cc => I
Apply:  Pos: [101, 116] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [106, 114] cc => I
Apply:  Pos: [109, 129] cc => I
Apply:  Pos: [128, 133] cc => I
Apply:  Pos: [131, 134] cc => I
Apply:  Pos: [132, 135] cc => I
Apply:  Pos: [136, 173] cc => I
Apply:  Pos: [143, 148] cc => I
Apply:  Pos: [138, 142] cc => I
Apply:  Pos: [144, 163] cc => I
Apply:  Pos: [150, 154, 156] ccc => cc
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [161, 175] cc => I
Apply:  Pos: [162, 166] cc => I
Apply:  Pos: [167, 170] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [13, 2], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [13, 2], [9, 11], [1, 7], [19, 3], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [17, 5], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [1, 7], [11, 14], [13, 6], [14, 7], [1, 7], [9, 19], [3, 6], [4, 18], [17, 5], [13, 3], [17, 18], [14, 7], [11, 19], [15, 14], [4, 17], [18, 14], [13, 2], [13, 6], [4, 18], [6, 2], [4, 16], [11, 13], [18, 14], [16, 17], [3, 2], [0, 8], [11, 19], [4, 17], [18, 11], [14, 1], [8, 5], [15, 7], [17, 15], [4, 18], [18, 14], [9, 11], [17, 18], [15, 7], [17, 5], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 5], [5, 15], [6, 2], [16, 17], [9, 11], [8, 5], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  3.328179121017456

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[13, 19]
[51, 54]
[55, 62]
[63, 77]
[86, 105]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[101, 102, 106]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[66, 69, 73]
[82, 83, 88]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[13, 19]
[51, 54]
[55, 62]
[63, 77]
[86, 105]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7187185287475586

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [13, 19] cc => I, Pos: [13, 19] cc => I, Pos: [51, 54] cc => I, Pos: [51, 54] cc => I, Pos: [55, 62] cc => I, Pos: [55, 62] cc => I, Pos: [63, 77] cc => I, Pos: [63, 77] cc => I, Pos: [66, 69, 73] ccc => cc, Pos: [82, 83, 88] ccc => cc, Pos: [86, 105] cc => I, Pos: [86, 105] cc => I, Pos: [101, 102, 106] ccc => cc]

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [13, 19] cc => I,
 Pos: [51, 54] cc => I,
 Pos: [55, 62] cc => I,
 Pos: [63, 77] cc => I,
 Pos: [66, 69, 73] ccc => cc,
 Pos: [82, 83, 88] ccc => cc,
 Pos: [86, 105] cc => I,
 Pos: [101, 102, 106] ccc => cc]
Change: 8, Saving: 9

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [13, 19] cc => I
Apply:  Pos: [51, 54] cc => I
Apply:  Pos: [55, 62] cc => I
Apply:  Pos: [63, 77] cc => I
Apply:  Pos: [66, 69, 73] ccc => cc
Apply:  Pos: [82, 83, 88] ccc => cc
Apply:  Pos: [86, 105] cc => I
Apply:  Pos: [101, 102, 106] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [19, 3], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [17, 5], [8, 5], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [17, 5], [13, 3], [17, 18], [15, 14], [4, 17], [4, 18], [13, 6], [13, 2], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [0, 8], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [15, 7], [4, 18], [18, 14], [17, 18], [17, 5], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [5, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  1.7343425750732422

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 54]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[56, 58, 59]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 54]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4531731605529785

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [38, 54] cc => I, Pos: [38, 54] cc => I, Pos: [56, 58, 59] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [38, 54] cc => I, Pos: [56, 58, 59] ccc => cc]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [38, 54] cc => I
Apply:  Pos: [56, 58, 59] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [19, 3], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 2], [13, 6], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [0, 8], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [15, 7], [4, 18], [18, 14], [17, 5], [17, 18], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [5, 15], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  1.4531731605529785

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 95]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 65, 69]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 95]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.374915361404419

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 65, 69] ccc => cc, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I]

--------End Timer [Generate Plans]:  0.015636444091796875

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 65, 69] ccc => cc, Pos: [88, 95] cc => I]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 65, 69] ccc => cc
Apply:  Pos: [88, 95] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [19, 3], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [0, 8], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 6], [13, 2], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [8, 5], [4, 17], [18, 11], [14, 1], [17, 15], [15, 7], [4, 18], [18, 14], [17, 18], [17, 5], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], ----End Timer [Execute Mapping]:  1.3905518054962158

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 37]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[28, 33, 39]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 37]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.3116545677185059

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [21, 37] cc => I, Pos: [21, 37] cc => I, Pos: [28, 33, 39] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [21, 37] cc => I, Pos: [28, 33, 39] ccc => cc]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [21, 37] cc => I
Apply:  Pos: [28, 33, 39] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [17, 18], [0, 8], [3, 6], [11, 14], [10, 1], [16, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [19, 3], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [5, 10], [18, 11], [5, 15], [13, 2], [12, 9], [10, 1], [11, 14], [16, 17], [14, 13], [11, 13], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 2], [13, 6], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [8, 5], [4, 17], [18, 11], [14, 1], [17, 15], [15, 7], [4, 18], [18, 14], [17, 5], [17, 18], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], ----End Timer [Execute Mapping]:  1.3116545677185059

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [90] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 25 - (small)
 - circuit cycle: 180

Reduced: 
 - size: 90 (50.00%)
 - depth: 20 (44.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.06250143051147461

[6, 2], [13, 3], [15, 7], [17, 18], [0, 8], [3, 6], [11, 14], [15, 7], [10, 1], [16, 18], [6, 2], [8, 15], [19, 3], [16, 17], [13, 6], [15, 7], [19, 3], [16, 17], [6, 2], [18, 11], [9, 19], [15, 7], [13, 2], [0, 4], [18, 13], [12, 19], [18, 13], [8, 17], [7, 6], [4, 18], [16, 12], [8, 17], [15, 14], [13, 2], [9, 11], [4, 18], [1, 7], [19, 3], [0, 8], [18, 13], [8, 5], [12, 11], [4, 16], [16, 18], [4, 17], [12, 11], [16, 12], [14, 1], [4, 18], [13, 6], [16, 12], [8, 5], [10, 1], [18, 11], [13, 6], [16, 18], [5, 15], [13, 2], [16, 18], [12, 9], [5, 10], [19, 3], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [17, 5], [11, 13], [10, 1], [16, 18], [5, 10], [7, 6], [4, 16], [12, 19], [14, 1], [5, 10], [17, 15], [14, 13], [5, 15], [0, 4], [3, 2], [1, 7], [12, 19], [11, 14], [13, 6], [5, 15], [14, 7], [8, 15], [1, 7], [9, 19], [3, 6], [4, 18], [17, 5], [8, 15], [13, 3], [17, 18], [14, 7], [11, 19], [15, 14], [18, 11], [19, 3], [10, 1], [4, 17], [18, 14], [13, 2], [5, 15], [18, 11], [13, 6], [12, 9], [4, 18], [10, 1], [6, 2], [4, 16], [5, 15], [11, 13], [19, 3], [18, 14], [16, 17], [3, 2], [0, 8], [11, 19], [4, 17], [18, 11], [14, 1], [8, 5], [15, 7], [17, 15], [3, 2], [12, 9], [4, 18], [0, 8], [17, 15], [3, 2], [0, 8], [17, 15], [16, 12], [18, 14], [0, 8], [9, 11], [17, 18], [15, 7], [0, 8], [18, 14], [9, 11], [17, 5], [15, 1], [7, 6], [18, 14], [13, 2], [8, 15], [3, 6], [4, 17], [14, 7], [0, 8], [1, 7], [8, 15], [13, 3], [15, 7], [8, 5], [5, 15], [18, 14], [19, 3], [9, 11], [6, 2], [5, 15], [19, 3], [18, 13], [5, 15], [16, 17], [18, 13], [9, 11], [8, 5], [16, 12], [13, 6], [18, 14], [0, 8], [1, 7], [3, 6], [5, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 7]
[12, 16]
[13, 17]
[15, 21]
[24, 26]
[27, 31]
[29, 35]
[41, 45]
[46, 50]
[40, 51]
[49, 54]
[55, 58]
[37, 61]
[61, 66]
[58, 70]
[71, 76]
[74, 83]
[79, 86]
[88, 94]
[100, 107]
[102, 111]
[106, 114]
[101, 116]
[119, 128]
[109, 129]
[127, 132]
[128, 133]
[131, 134]
[132, 135]
[134, 138]
[138, 142]
[139, 144]
[143, 148]
[144, 163]
[160, 165]
[162, 166]
[165, 168]
[167, 170]
[163, 171]
[136, 173]
[161, 175]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[120, 125, 131]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[7, 11, 15]
[10, 14, 18]
[137, 140, 143]
[150, 154, 156]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 9, 13]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 7]
[12, 16]
[13, 17]
[15, 21]
[24, 26]
[27, 31]
[29, 35]
[41, 45]
[46, 50]
[40, 51]
[49, 54]
[55, 58]
[37, 61]
[61, 66]
[58, 70]
[71, 76]
[74, 83]
[79, 86]
[88, 94]
[100, 107]
[102, 111]
[106, 114]
[101, 116]
[119, 128]
[109, 129]
[127, 132]
[128, 133]
[131, 134]
[132, 135]
[134, 138]
[138, 142]
[139, 144]
[143, 148]
[144, 163]
[160, 165]
[162, 166]
[165, 168]
[167, 170]
[163, 171]
[136, 173]
[161, 175]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.234450578689575

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7] cc => I, Pos: [2, 7] cc => I, Pos: [3, 9, 13] ccc => cc, Pos: [7, 11, 15] ccc => cc, Pos: [10, 14, 18] ccc => cc, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [24, 26] cc => I, Pos: [24, 26] cc => I, Pos: [27, 31] cc => I, Pos: [27, 31] cc => I, Pos: [29, 35] cc => I, Pos: [29, 35] cc => I, Pos: [37, 61] cc => I, Pos: [37, 61] cc => I, Pos: [40, 51] cc => I, Pos: [40, 51] cc => I, Pos: [41, 45] cc => I, Pos: [41, 45] cc => I, Pos: [46, 50] cc => I, Pos: [46, 50] cc => I, Pos: [49, 54] cc => I, Pos: [49, 54] cc => I, Pos: [55, 58] cc => I, Pos: [55, 58] cc => I, Pos: [58, 70] cc => I, Pos: [58, 70] cc => I, Pos: [61, 66] cc => I, Pos: [61, 66] cc => I, Pos: [71, 76] cc => I, Pos: [71, 76] cc => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [79, 86] cc => I, Pos: [79, 86] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [100, 107] cc => I, Pos: [100, 107] cc => I, Pos: [101, 116] cc => I, Pos: [101, 116] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I, Pos: [109, 129] cc => I, Pos: [109, 129] cc => I, Pos: [119, 128] cc => I, Pos: [119, 128] cc => I, Pos: [120, 125, 131] ccc => cc, Pos: [127, 132] cc => I, Pos: [127, 132] cc => I, Pos: [128, 133] cc => I, Pos: [128, 133] cc => I, Pos: [131, 134] cc => I, Pos: [131, 134] cc => I, Pos: [132, 135] cc => I, Pos: [132, 135] cc => I, Pos: [134, 138] cc => I, Pos: [134, 138] cc => I, Pos: [136, 173] cc => I, Pos: [136, 173] cc => I, Pos: [137, 140, 143] ccc => cc, Pos: [138, 142] cc => I, Pos: [138, 142] cc => I, Pos: [139, 144] cc => I, Pos: [139, 144] cc => I, Pos: [143, 148] cc => I, Pos: [143, 148] cc => I, Pos: [144, 163] cc => I, Pos: [144, 163] cc => I, Pos: [150, 154, 156] ccc => cc, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [161, 175] cc => I, Pos: [161, 175] cc => I, Pos: [162, 166] cc => I, Pos: [162, 166] cc => I, Pos: [163, 171] cc => I, Pos: [163, 171] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [167, 170] cc => I, Pos: [167, 170] cc => I]

--------End Timer [Generate Plans]:  0.09365606307983398

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 7] cc => I,
 Pos: [3, 9, 13] ccc => cc,
 Pos: [10, 14, 18] ccc => cc,
 Pos: [12, 16] cc => I,
 Pos: [15, 21] cc => I,
 Pos: [24, 26] cc => I,
 Pos: [27, 31] cc => I,
 Pos: [29, 35] cc => I,
 Pos: [61, 66] cc => I,
 Pos: [40, 51] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [46, 50] cc => I,
 Pos: [49, 54] cc => I,
 Pos: [58, 70] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [101, 116] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [106, 114] cc => I,
 Pos: [109, 129] cc => I,
 Pos: [128, 133] cc => I,
 Pos: [120, 125, 131] ccc => cc,
 Pos: [127, 132] cc => I,
 Pos: [138, 142] cc => I,
 Pos: [136, 173] cc => I,
 Pos: [137, 140, 143] ccc => cc,
 Pos: [139, 144] cc => I,
 Pos: [150, 154, 156] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [161, 175] cc => I,
 Pos: [162, 166] cc => I,
 Pos: [163, 171] cc => I,
 Pos: [167, 170] cc => I]
Change: 36, Saving: 37

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 7] cc => I
Apply:  Pos: [3, 9, 13] ccc => cc
Apply:  Pos: [10, 14, 18] ccc => cc
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [15, 21] cc => I
Apply:  Pos: [24, 26] cc => I
Apply:  Pos: [27, 31] cc => I
Apply:  Pos: [29, 35] cc => I
Apply:  Pos: [61, 66] cc => I
Apply:  Pos: [40, 51] cc => I
Apply:  Pos: [41, 45] cc => I
Apply:  Pos: [46, 50] cc => I
Apply:  Pos: [49, 54] cc => I
Apply:  Pos: [58, 70] cc => I
Apply:  Pos: [71, 76] cc => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [79, 86] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [100, 107] cc => I
Apply:  Pos: [101, 116] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [106, 114] cc => I
Apply:  Pos: [109, 129] cc => I
Apply:  Pos: [128, 133] cc => I
Apply:  Pos: [120, 125, 131] ccc => cc
Apply:  Pos: [127, 132] cc => I
Apply:  Pos: [138, 142] cc => I
Apply:  Pos: [136, 173] cc => I
Apply:  Pos: [137, 140, 143] ccc => cc
Apply:  Pos: [139, 144] cc => I
Apply:  Pos: [150, 154, 156] ccc => cc
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [161, 175] cc => I
Apply:  Pos: [162, 166] cc => I
Apply:  Pos: [163, 171] cc => I
Apply:  Pos: [167, 170] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [16, 17], [0, 8], [3, 6], [11, 14], [10, 1], [17, 18], [13, 6], [8, 15], [6, 2], [16, 17], [18, 11], [9, 19], [13, 2], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [13, 2], [9, 11], [1, 7], [19, 3], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [16, 18], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [17, 5], [11, 13], [10, 1], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [1, 7], [11, 14], [13, 6], [14, 7], [1, 7], [9, 19], [3, 6], [4, 18], [17, 5], [13, 3], [17, 18], [14, 7], [11, 19], [15, 14], [4, 17], [18, 14], [13, 2], [13, 6], [4, 18], [6, 2], [4, 16], [11, 13], [18, 14], [16, 17], [3, 2], [0, 5], [11, 19], [4, 17], [18, 11], [14, 1], [8, 5], [15, 7], [4, 18], [0, 8], [17, 15], [17, 18], [18, 14], [15, 7], [17, 5], [15, 1], [7, 6], [18, 14], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 5], [5, 15], [6, 2], [16, 17], [8, 5], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  3.328106641769409

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[52, 55]
[56, 63]
[64, 78]
[88, 93]
[85, 95]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[2, 7, 11]
[103, 104, 107]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[67, 70, 74]
[83, 87, 89]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[52, 55]
[56, 63]
[64, 78]
[88, 93]
[85, 95]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7343904972076416

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7, 11] ccc => cc, Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [52, 55] cc => I, Pos: [52, 55] cc => I, Pos: [56, 63] cc => I, Pos: [56, 63] cc => I, Pos: [64, 78] cc => I, Pos: [64, 78] cc => I, Pos: [67, 70, 74] ccc => cc, Pos: [83, 87, 89] ccc => cc, Pos: [85, 95] cc => I, Pos: [85, 95] cc => I, Pos: [88, 93] cc => I, Pos: [88, 93] cc => I, Pos: [103, 104, 107] ccc => cc]

--------End Timer [Generate Plans]:  0.031248807907104492

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 7, 11] ccc => cc,
 Pos: [14, 20] cc => I,
 Pos: [52, 55] cc => I,
 Pos: [56, 63] cc => I,
 Pos: [64, 78] cc => I,
 Pos: [67, 70, 74] ccc => cc,
 Pos: [83, 87, 89] ccc => cc,
 Pos: [85, 95] cc => I,
 Pos: [88, 93] cc => I,
 Pos: [103, 104, 107] ccc => cc]
Change: 10, Saving: 9

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 7, 11] ccc => cc
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [52, 55] cc => I
Apply:  Pos: [56, 63] cc => I
Apply:  Pos: [64, 78] cc => I
Apply:  Pos: [67, 70, 74] ccc => cc
Apply:  Pos: [83, 87, 89] ccc => cc
Apply:  Pos: [85, 95] cc => I
Apply:  Pos: [88, 93] cc => I
Apply:  Pos: [103, 104, 107] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [16, 18], [0, 8], [3, 6], [11, 14], [10, 1], [17, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [19, 3], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [16, 18], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [17, 5], [8, 5], [11, 13], [10, 1], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [17, 5], [13, 3], [17, 18], [15, 14], [4, 17], [4, 18], [13, 6], [13, 2], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [0, 5], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [4, 18], [17, 18], [15, 7], [17, 5], [15, 1], [7, 6], [13, 2], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [5, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  1.765639305114746

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 54]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[56, 58, 59]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 54]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.406294584274292

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [39, 54] cc => I, Pos: [39, 54] cc => I, Pos: [56, 58, 59] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [39, 54] cc => I, Pos: [56, 58, 59] ccc => cc]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [39, 54] cc => I
Apply:  Pos: [56, 58, 59] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [16, 18], [0, 8], [3, 6], [11, 14], [10, 1], [17, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [19, 3], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [16, 18], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [11, 13], [10, 1], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 2], [13, 6], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [0, 5], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [17, 18], [4, 18], [15, 7], [17, 5], [15, 1], [7, 6], [13, 2], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [5, 15], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  1.406294584274292

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[86, 93]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[86, 93]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.3123986721038818

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [86, 93] cc => I, Pos: [86, 93] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [86, 93] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [86, 93] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [16, 18], [0, 8], [3, 6], [11, 14], [10, 1], [17, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [19, 3], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [16, 18], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [11, 13], [10, 1], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 6], [13, 2], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [0, 5], [4, 17], [18, 11], [14, 1], [8, 5], [17, 18], [17, 15], [4, 18], [15, 7], [17, 5], [15, 1], [7, 6], [13, 2], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], ----End Timer [Execute Mapping]:  1.3123986721038818

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2656936645507812

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [16, 18], [0, 8], [3, 6], [11, 14], [10, 1], [17, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [19, 3], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [16, 18], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [11, 13], [10, 1], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 2], [13, 6], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [0, 5], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [4, 18], [17, 18], [15, 7], [17, 5], [15, 1], [7, 6], [13, 2], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], ----End Timer [Execute Mapping]:  1.2656936645507812

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [92] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 24 - (small)
 - circuit cycle: 184

Reduced: 
 - size: 88 (48.89%)
 - depth: 21 (46.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.06189584732055664

[6, 2], [13, 3], [15, 7], [17, 18], [0, 8], [3, 6], [11, 14], [15, 7], [10, 1], [16, 18], [6, 2], [8, 15], [19, 3], [16, 17], [13, 6], [15, 7], [19, 3], [16, 17], [6, 2], [18, 11], [9, 19], [15, 7], [13, 2], [0, 4], [18, 13], [12, 19], [18, 13], [8, 17], [7, 6], [4, 18], [16, 12], [8, 17], [15, 14], [13, 2], [9, 11], [4, 18], [1, 7], [19, 3], [0, 8], [18, 13], [8, 5], [12, 11], [4, 16], [16, 18], [4, 17], [12, 11], [16, 12], [14, 1], [4, 18], [13, 6], [16, 12], [8, 5], [10, 1], [18, 11], [13, 6], [16, 18], [5, 15], [13, 2], [16, 18], [12, 9], [5, 10], [19, 3], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [17, 5], [11, 13], [10, 1], [16, 18], [5, 10], [7, 6], [4, 16], [12, 19], [14, 1], [5, 10], [17, 15], [14, 13], [5, 15], [0, 4], [3, 2], [1, 7], [12, 19], [11, 14], [13, 6], [5, 15], [14, 7], [8, 15], [1, 7], [9, 19], [3, 6], [4, 18], [17, 5], [8, 15], [13, 3], [17, 18], [14, 7], [11, 19], [15, 14], [18, 11], [19, 3], [10, 1], [4, 17], [18, 14], [13, 2], [5, 15], [18, 11], [13, 6], [12, 9], [4, 18], [10, 1], [6, 2], [4, 16], [5, 15], [11, 13], [19, 3], [18, 14], [16, 17], [3, 2], [0, 8], [11, 19], [4, 17], [18, 11], [14, 1], [8, 5], [15, 7], [17, 15], [3, 2], [12, 9], [4, 18], [0, 8], [17, 15], [3, 2], [0, 8], [17, 15], [16, 12], [18, 14], [0, 8], [9, 11], [17, 18], [15, 7], [0, 8], [18, 14], [9, 11], [17, 5], [15, 1], [7, 6], [18, 14], [13, 2], [8, 15], [3, 6], [4, 17], [14, 7], [0, 8], [1, 7], [8, 15], [13, 3], [15, 7], [8, 5], [5, 15], [18, 14], [19, 3], [9, 11], [6, 2], [5, 15], [19, 3], [18, 13], [5, 15], [16, 17], [18, 13], [9, 11], [8, 5], [16, 12], [13, 6], [18, 14], [0, 8], [1, 7], [3, 6], [5, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 7]
[12, 16]
[13, 17]
[15, 21]
[24, 26]
[27, 31]
[29, 35]
[41, 45]
[46, 50]
[40, 51]
[49, 54]
[55, 58]
[37, 61]
[61, 66]
[58, 70]
[71, 76]
[74, 83]
[79, 86]
[88, 94]
[100, 107]
[102, 111]
[106, 114]
[101, 116]
[119, 128]
[109, 129]
[127, 132]
[128, 133]
[131, 134]
[132, 135]
[134, 138]
[138, 142]
[139, 144]
[143, 148]
[144, 163]
[160, 165]
[162, 166]
[165, 168]
[167, 170]
[163, 171]
[136, 173]
[161, 175]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[120, 125, 131]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[7, 11, 15]
[10, 14, 18]
[137, 140, 143]
[150, 154, 156]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 9, 13]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 7]
[12, 16]
[13, 17]
[15, 21]
[24, 26]
[27, 31]
[29, 35]
[41, 45]
[46, 50]
[40, 51]
[49, 54]
[55, 58]
[37, 61]
[61, 66]
[58, 70]
[71, 76]
[74, 83]
[79, 86]
[88, 94]
[100, 107]
[102, 111]
[106, 114]
[101, 116]
[119, 128]
[109, 129]
[127, 132]
[128, 133]
[131, 134]
[132, 135]
[134, 138]
[138, 142]
[139, 144]
[143, 148]
[144, 163]
[160, 165]
[162, 166]
[165, 168]
[167, 170]
[163, 171]
[136, 173]
[161, 175]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2812793254852295

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7] cc => I, Pos: [2, 7] cc => I, Pos: [3, 9, 13] ccc => cc, Pos: [7, 11, 15] ccc => cc, Pos: [10, 14, 18] ccc => cc, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [24, 26] cc => I, Pos: [24, 26] cc => I, Pos: [27, 31] cc => I, Pos: [27, 31] cc => I, Pos: [29, 35] cc => I, Pos: [29, 35] cc => I, Pos: [37, 61] cc => I, Pos: [37, 61] cc => I, Pos: [40, 51] cc => I, Pos: [40, 51] cc => I, Pos: [41, 45] cc => I, Pos: [41, 45] cc => I, Pos: [46, 50] cc => I, Pos: [46, 50] cc => I, Pos: [49, 54] cc => I, Pos: [49, 54] cc => I, Pos: [55, 58] cc => I, Pos: [55, 58] cc => I, Pos: [58, 70] cc => I, Pos: [58, 70] cc => I, Pos: [61, 66] cc => I, Pos: [61, 66] cc => I, Pos: [71, 76] cc => I, Pos: [71, 76] cc => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [79, 86] cc => I, Pos: [79, 86] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [100, 107] cc => I, Pos: [100, 107] cc => I, Pos: [101, 116] cc => I, Pos: [101, 116] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I, Pos: [109, 129] cc => I, Pos: [109, 129] cc => I, Pos: [119, 128] cc => I, Pos: [119, 128] cc => I, Pos: [120, 125, 131] ccc => cc, Pos: [127, 132] cc => I, Pos: [127, 132] cc => I, Pos: [128, 133] cc => I, Pos: [128, 133] cc => I, Pos: [131, 134] cc => I, Pos: [131, 134] cc => I, Pos: [132, 135] cc => I, Pos: [132, 135] cc => I, Pos: [134, 138] cc => I, Pos: [134, 138] cc => I, Pos: [136, 173] cc => I, Pos: [136, 173] cc => I, Pos: [137, 140, 143] ccc => cc, Pos: [138, 142] cc => I, Pos: [138, 142] cc => I, Pos: [139, 144] cc => I, Pos: [139, 144] cc => I, Pos: [143, 148] cc => I, Pos: [143, 148] cc => I, Pos: [144, 163] cc => I, Pos: [144, 163] cc => I, Pos: [150, 154, 156] ccc => cc, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [161, 175] cc => I, Pos: [161, 175] cc => I, Pos: [162, 166] cc => I, Pos: [162, 166] cc => I, Pos: [163, 171] cc => I, Pos: [163, 171] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [167, 170] cc => I, Pos: [167, 170] cc => I]

--------End Timer [Generate Plans]:  0.09374594688415527

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 7] cc => I,
 Pos: [3, 9, 13] ccc => cc,
 Pos: [10, 14, 18] ccc => cc,
 Pos: [12, 16] cc => I,
 Pos: [15, 21] cc => I,
 Pos: [24, 26] cc => I,
 Pos: [27, 31] cc => I,
 Pos: [29, 35] cc => I,
 Pos: [61, 66] cc => I,
 Pos: [40, 51] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [46, 50] cc => I,
 Pos: [49, 54] cc => I,
 Pos: [58, 70] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [101, 116] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [106, 114] cc => I,
 Pos: [109, 129] cc => I,
 Pos: [128, 133] cc => I,
 Pos: [131, 134] cc => I,
 Pos: [127, 132] cc => I,
 Pos: [136, 173] cc => I,
 Pos: [143, 148] cc => I,
 Pos: [138, 142] cc => I,
 Pos: [144, 163] cc => I,
 Pos: [150, 154, 156] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [161, 175] cc => I,
 Pos: [162, 166] cc => I,
 Pos: [167, 170] cc => I]
Change: 35, Saving: 35

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 7] cc => I
Apply:  Pos: [3, 9, 13] ccc => cc
Apply:  Pos: [10, 14, 18] ccc => cc
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [15, 21] cc => I
Apply:  Pos: [24, 26] cc => I
Apply:  Pos: [27, 31] cc => I
Apply:  Pos: [29, 35] cc => I
Apply:  Pos: [61, 66] cc => I
Apply:  Pos: [40, 51] cc => I
Apply:  Pos: [41, 45] cc => I
Apply:  Pos: [46, 50] cc => I
Apply:  Pos: [49, 54] cc => I
Apply:  Pos: [58, 70] cc => I
Apply:  Pos: [71, 76] cc => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [79, 86] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [100, 107] cc => I
Apply:  Pos: [101, 116] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [106, 114] cc => I
Apply:  Pos: [109, 129] cc => I
Apply:  Pos: [128, 133] cc => I
Apply:  Pos: [131, 134] cc => I
Apply:  Pos: [127, 132] cc => I
Apply:  Pos: [136, 173] cc => I
Apply:  Pos: [143, 148] cc => I
Apply:  Pos: [138, 142] cc => I
Apply:  Pos: [144, 163] cc => I
Apply:  Pos: [150, 154, 156] ccc => cc
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [161, 175] cc => I
Apply:  Pos: [162, 166] cc => I
Apply:  Pos: [167, 170] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [16, 17], [0, 8], [3, 6], [11, 14], [10, 1], [17, 18], [13, 6], [8, 15], [6, 2], [16, 17], [18, 11], [9, 19], [13, 2], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [13, 2], [9, 11], [1, 7], [19, 3], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [16, 18], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [17, 5], [11, 13], [10, 1], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [1, 7], [11, 14], [13, 6], [14, 7], [1, 7], [9, 19], [3, 6], [4, 18], [17, 5], [13, 3], [17, 18], [14, 7], [11, 19], [15, 14], [4, 17], [18, 14], [13, 2], [13, 6], [4, 18], [6, 2], [4, 16], [11, 13], [18, 14], [16, 17], [3, 2], [0, 8], [11, 19], [4, 17], [18, 11], [14, 1], [8, 5], [15, 7], [4, 18], [17, 15], [18, 14], [9, 11], [17, 18], [15, 7], [17, 5], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 5], [5, 15], [6, 2], [16, 17], [9, 11], [8, 5], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  3.3750252723693848

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[52, 55]
[56, 63]
[64, 78]
[87, 106]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[2, 7, 11]
[102, 103, 107]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[67, 70, 74]
[83, 85, 89]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[52, 55]
[56, 63]
[64, 78]
[87, 106]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7343664169311523

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7, 11] ccc => cc, Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [52, 55] cc => I, Pos: [52, 55] cc => I, Pos: [56, 63] cc => I, Pos: [56, 63] cc => I, Pos: [64, 78] cc => I, Pos: [64, 78] cc => I, Pos: [67, 70, 74] ccc => cc, Pos: [83, 85, 89] ccc => cc, Pos: [87, 106] cc => I, Pos: [87, 106] cc => I, Pos: [102, 103, 107] ccc => cc]

--------End Timer [Generate Plans]:  0.015624523162841797

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 7, 11] ccc => cc,
 Pos: [14, 20] cc => I,
 Pos: [52, 55] cc => I,
 Pos: [56, 63] cc => I,
 Pos: [64, 78] cc => I,
 Pos: [67, 70, 74] ccc => cc,
 Pos: [83, 85, 89] ccc => cc,
 Pos: [87, 106] cc => I,
 Pos: [102, 103, 107] ccc => cc]
Change: 9, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 7, 11] ccc => cc
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [52, 55] cc => I
Apply:  Pos: [56, 63] cc => I
Apply:  Pos: [64, 78] cc => I
Apply:  Pos: [67, 70, 74] ccc => cc
Apply:  Pos: [83, 85, 89] ccc => cc
Apply:  Pos: [87, 106] cc => I
Apply:  Pos: [102, 103, 107] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [16, 18], [0, 8], [3, 6], [11, 14], [10, 1], [17, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [19, 3], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [16, 18], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [17, 5], [8, 5], [11, 13], [10, 1], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [17, 5], [13, 3], [17, 18], [15, 14], [4, 17], [4, 18], [13, 6], [13, 2], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [0, 8], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [4, 18], [15, 7], [18, 14], [17, 18], [17, 5], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [5, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  1.7499909400939941

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 54]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[56, 58, 59]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 54]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.437476396560669

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [39, 54] cc => I, Pos: [39, 54] cc => I, Pos: [56, 58, 59] ccc => cc]

--------End Timer [Generate Plans]:  0.015609264373779297

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [39, 54] cc => I, Pos: [56, 58, 59] ccc => cc]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [39, 54] cc => I
Apply:  Pos: [56, 58, 59] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [16, 18], [0, 8], [3, 6], [11, 14], [10, 1], [17, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [19, 3], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [16, 18], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [11, 13], [10, 1], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 2], [13, 6], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [0, 8], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [4, 18], [15, 7], [18, 14], [17, 5], [17, 18], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [5, 15], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  1.4530856609344482

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 95]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[38, 65, 69]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 95]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.359548807144165

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [38, 65, 69] ccc => cc, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I]

--------End Timer [Generate Plans]:  0.015643835067749023

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [38, 65, 69] ccc => cc, Pos: [88, 95] cc => I]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [38, 65, 69] ccc => cc
Apply:  Pos: [88, 95] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [16, 18], [0, 8], [3, 6], [11, 14], [10, 1], [17, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [19, 3], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [16, 18], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [0, 8], [11, 13], [10, 1], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 6], [13, 2], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [8, 5], [4, 17], [18, 11], [14, 1], [17, 15], [4, 18], [15, 7], [18, 14], [17, 18], [17, 5], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], ----End Timer [Execute Mapping]:  1.375192642211914

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 38]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[28, 34, 40]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 38]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.3290176391601562

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [21, 38] cc => I, Pos: [21, 38] cc => I, Pos: [28, 34, 40] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [21, 38] cc => I, Pos: [28, 34, 40] ccc => cc]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [21, 38] cc => I
Apply:  Pos: [28, 34, 40] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [16, 18], [0, 8], [3, 6], [11, 14], [10, 1], [17, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [19, 3], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [5, 10], [18, 11], [16, 18], [5, 15], [13, 2], [12, 9], [10, 1], [11, 14], [16, 17], [14, 13], [11, 13], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 2], [13, 6], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [3, 2], [8, 5], [4, 17], [18, 11], [14, 1], [17, 15], [4, 18], [15, 7], [18, 14], [17, 5], [17, 18], [15, 1], [7, 6], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], ----End Timer [Execute Mapping]:  1.3290176391601562

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [90] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 25 - (small)
 - circuit cycle: 180

Reduced: 
 - size: 90 (50.00%)
 - depth: 20 (44.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07822823524475098

[6, 2], [13, 3], [15, 7], [17, 18], [0, 8], [3, 6], [11, 14], [15, 7], [10, 1], [16, 18], [6, 2], [8, 15], [19, 3], [16, 17], [13, 6], [15, 7], [19, 3], [16, 17], [6, 2], [18, 11], [9, 19], [15, 7], [13, 2], [0, 4], [18, 13], [12, 19], [18, 13], [8, 17], [7, 6], [4, 18], [16, 12], [8, 17], [15, 14], [13, 2], [9, 11], [4, 18], [1, 7], [19, 3], [0, 8], [18, 13], [8, 5], [12, 11], [4, 16], [16, 18], [4, 17], [12, 11], [16, 12], [14, 1], [4, 18], [13, 6], [16, 12], [8, 5], [10, 1], [18, 11], [13, 6], [16, 18], [5, 15], [13, 2], [16, 18], [12, 9], [5, 10], [19, 3], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [17, 5], [11, 13], [10, 1], [16, 18], [5, 10], [7, 6], [4, 16], [12, 19], [14, 1], [5, 10], [17, 15], [14, 13], [5, 15], [0, 4], [3, 2], [1, 7], [12, 19], [11, 14], [13, 6], [5, 15], [14, 7], [8, 15], [1, 7], [9, 19], [3, 6], [4, 18], [17, 5], [8, 15], [13, 3], [17, 18], [14, 7], [11, 19], [15, 14], [18, 11], [19, 3], [10, 1], [4, 17], [18, 14], [13, 2], [5, 15], [18, 11], [13, 6], [12, 9], [4, 18], [10, 1], [6, 2], [4, 16], [5, 15], [11, 13], [19, 3], [18, 14], [16, 17], [3, 2], [0, 8], [11, 19], [4, 17], [18, 11], [14, 1], [8, 5], [15, 7], [17, 15], [3, 2], [12, 9], [4, 18], [0, 8], [17, 15], [3, 2], [0, 8], [17, 15], [16, 12], [18, 14], [0, 8], [9, 11], [17, 18], [15, 7], [0, 8], [18, 14], [9, 11], [17, 5], [15, 1], [7, 6], [18, 14], [13, 2], [8, 15], [3, 6], [4, 17], [14, 7], [0, 8], [1, 7], [8, 15], [13, 3], [15, 7], [8, 5], [5, 15], [18, 14], [19, 3], [9, 11], [6, 2], [5, 15], [19, 3], [18, 13], [5, 15], [16, 17], [18, 13], [9, 11], [8, 5], [16, 12], [13, 6], [18, 14], [0, 8], [1, 7], [3, 6], [5, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 7]
[12, 16]
[13, 17]
[15, 21]
[24, 26]
[27, 31]
[29, 35]
[41, 45]
[46, 50]
[40, 51]
[49, 54]
[55, 58]
[37, 61]
[61, 66]
[58, 70]
[71, 76]
[74, 83]
[79, 86]
[88, 94]
[100, 107]
[102, 111]
[106, 114]
[101, 116]
[119, 128]
[109, 129]
[127, 132]
[128, 133]
[131, 134]
[132, 135]
[134, 138]
[138, 142]
[139, 144]
[143, 148]
[144, 163]
[160, 165]
[162, 166]
[165, 168]
[167, 170]
[163, 171]
[136, 173]
[161, 175]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[120, 125, 131]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[7, 11, 15]
[10, 14, 18]
[137, 140, 143]
[150, 154, 156]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 9, 13]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 7]
[12, 16]
[13, 17]
[15, 21]
[24, 26]
[27, 31]
[29, 35]
[41, 45]
[46, 50]
[40, 51]
[49, 54]
[55, 58]
[37, 61]
[61, 66]
[58, 70]
[71, 76]
[74, 83]
[79, 86]
[88, 94]
[100, 107]
[102, 111]
[106, 114]
[101, 116]
[119, 128]
[109, 129]
[127, 132]
[128, 133]
[131, 134]
[132, 135]
[134, 138]
[138, 142]
[139, 144]
[143, 148]
[144, 163]
[160, 165]
[162, 166]
[165, 168]
[167, 170]
[163, 171]
[136, 173]
[161, 175]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.1873912811279297

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7] cc => I, Pos: [2, 7] cc => I, Pos: [3, 9, 13] ccc => cc, Pos: [7, 11, 15] ccc => cc, Pos: [10, 14, 18] ccc => cc, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [24, 26] cc => I, Pos: [24, 26] cc => I, Pos: [27, 31] cc => I, Pos: [27, 31] cc => I, Pos: [29, 35] cc => I, Pos: [29, 35] cc => I, Pos: [37, 61] cc => I, Pos: [37, 61] cc => I, Pos: [40, 51] cc => I, Pos: [40, 51] cc => I, Pos: [41, 45] cc => I, Pos: [41, 45] cc => I, Pos: [46, 50] cc => I, Pos: [46, 50] cc => I, Pos: [49, 54] cc => I, Pos: [49, 54] cc => I, Pos: [55, 58] cc => I, Pos: [55, 58] cc => I, Pos: [58, 70] cc => I, Pos: [58, 70] cc => I, Pos: [61, 66] cc => I, Pos: [61, 66] cc => I, Pos: [71, 76] cc => I, Pos: [71, 76] cc => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [79, 86] cc => I, Pos: [79, 86] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [100, 107] cc => I, Pos: [100, 107] cc => I, Pos: [101, 116] cc => I, Pos: [101, 116] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I, Pos: [109, 129] cc => I, Pos: [109, 129] cc => I, Pos: [119, 128] cc => I, Pos: [119, 128] cc => I, Pos: [120, 125, 131] ccc => cc, Pos: [127, 132] cc => I, Pos: [127, 132] cc => I, Pos: [128, 133] cc => I, Pos: [128, 133] cc => I, Pos: [131, 134] cc => I, Pos: [131, 134] cc => I, Pos: [132, 135] cc => I, Pos: [132, 135] cc => I, Pos: [134, 138] cc => I, Pos: [134, 138] cc => I, Pos: [136, 173] cc => I, Pos: [136, 173] cc => I, Pos: [137, 140, 143] ccc => cc, Pos: [138, 142] cc => I, Pos: [138, 142] cc => I, Pos: [139, 144] cc => I, Pos: [139, 144] cc => I, Pos: [143, 148] cc => I, Pos: [143, 148] cc => I, Pos: [144, 163] cc => I, Pos: [144, 163] cc => I, Pos: [150, 154, 156] ccc => cc, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [161, 175] cc => I, Pos: [161, 175] cc => I, Pos: [162, 166] cc => I, Pos: [162, 166] cc => I, Pos: [163, 171] cc => I, Pos: [163, 171] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [167, 170] cc => I, Pos: [167, 170] cc => I]

Plan: 1
[Pos: [2, 7] cc => I,
 Pos: [3, 9, 13] ccc => cc,
 Pos: [10, 14, 18] ccc => cc,
 Pos: [12, 16] cc => I,
 Pos: [15, 21] cc => I,
 Pos: [24, 26] cc => I,
 Pos: [27, 31] cc => I,
 Pos: [29, 35] cc => I,
 Pos: [37, 61] cc => I,
 Pos: [40, 51] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [46, 50] cc => I,
 Pos: [49, 54] cc => I,
 Pos: [55, 58] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [101, 116] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [106, 114] cc => I,
 Pos: [109, 129] cc => I,
 Pos: [119, 128] cc => I,
 Pos: [120, 125, 131] ccc => cc,
 Pos: [127, 132] cc => I,
 Pos: [134, 138] cc => I,
 Pos: [136, 173] cc => I,
 Pos: [137, 140, 143] ccc => cc,
 Pos: [139, 144] cc => I,
 Pos: [150, 154, 156] ccc => cc,
 Pos: [160, 165] cc => I,
 Pos: [161, 175] cc => I,
 Pos: [162, 166] cc => I,
 Pos: [163, 171] cc => I,
 Pos: [167, 170] cc => I]
Change: 36, Saving: 37

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.09375715255737305

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 7] cc => I,
 Pos: [3, 9, 13] ccc => cc,
 Pos: [10, 14, 18] ccc => cc,
 Pos: [12, 16] cc => I,
 Pos: [15, 21] cc => I,
 Pos: [24, 26] cc => I,
 Pos: [27, 31] cc => I,
 Pos: [29, 35] cc => I,
 Pos: [37, 61] cc => I,
 Pos: [40, 51] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [46, 50] cc => I,
 Pos: [49, 54] cc => I,
 Pos: [55, 58] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [101, 116] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [106, 114] cc => I,
 Pos: [109, 129] cc => I,
 Pos: [119, 128] cc => I,
 Pos: [120, 125, 131] ccc => cc,
 Pos: [127, 132] cc => I,
 Pos: [134, 138] cc => I,
 Pos: [136, 173] cc => I,
 Pos: [137, 140, 143] ccc => cc,
 Pos: [139, 144] cc => I,
 Pos: [150, 154, 156] ccc => cc,
 Pos: [160, 165] cc => I,
 Pos: [161, 175] cc => I,
 Pos: [162, 166] cc => I,
 Pos: [163, 171] cc => I,
 Pos: [167, 170] cc => I]
Change: 36, Saving: 37

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 7] cc => I
Apply:  Pos: [3, 9, 13] ccc => cc
Apply:  Pos: [10, 14, 18] ccc => cc
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [15, 21] cc => I
Apply:  Pos: [24, 26] cc => I
Apply:  Pos: [27, 31] cc => I
Apply:  Pos: [29, 35] cc => I
Apply:  Pos: [37, 61] cc => I
Apply:  Pos: [40, 51] cc => I
Apply:  Pos: [41, 45] cc => I
Apply:  Pos: [46, 50] cc => I
Apply:  Pos: [49, 54] cc => I
Apply:  Pos: [55, 58] cc => I
Apply:  Pos: [71, 76] cc => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [79, 86] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [100, 107] cc => I
Apply:  Pos: [101, 116] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [106, 114] cc => I
Apply:  Pos: [109, 129] cc => I
Apply:  Pos: [119, 128] cc => I
Apply:  Pos: [120, 125, 131] ccc => cc
Apply:  Pos: [127, 132] cc => I
Apply:  Pos: [134, 138] cc => I
Apply:  Pos: [136, 173] cc => I
Apply:  Pos: [137, 140, 143] ccc => cc
Apply:  Pos: [139, 144] cc => I
Apply:  Pos: [150, 154, 156] ccc => cc
Apply:  Pos: [160, 165] cc => I
Apply:  Pos: [161, 175] cc => I
Apply:  Pos: [162, 166] cc => I
Apply:  Pos: [163, 171] cc => I
Apply:  Pos: [167, 170] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [16, 17], [0, 8], [3, 6], [11, 14], [10, 1], [17, 18], [13, 6], [8, 15], [6, 2], [16, 17], [18, 11], [9, 19], [13, 2], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [13, 2], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [17, 5], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [1, 7], [11, 14], [13, 6], [14, 7], [1, 7], [9, 19], [3, 6], [4, 18], [17, 5], [13, 3], [17, 18], [14, 7], [11, 19], [15, 14], [4, 17], [18, 14], [13, 2], [13, 6], [4, 18], [6, 2], [4, 16], [11, 13], [18, 14], [16, 17], [0, 5], [11, 19], [4, 17], [18, 11], [14, 1], [8, 5], [15, 7], [4, 18], [3, 2], [17, 15], [17, 18], [18, 14], [15, 7], [0, 8], [17, 5], [15, 1], [7, 6], [18, 14], [13, 2], [0, 8], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 5], [6, 2], [5, 15], [16, 17], [8, 5], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  3.2811484336853027

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[52, 55]
[41, 60]
[56, 63]
[64, 77]
[87, 93]
[89, 95]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[2, 7, 11]
[103, 105, 107]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[67, 70, 74]
[82, 86, 88]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[52, 55]
[41, 60]
[56, 63]
[64, 77]
[87, 93]
[89, 95]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7187719345092773

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7, 11] ccc => cc, Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [41, 60] cc => I, Pos: [41, 60] cc => I, Pos: [52, 55] cc => I, Pos: [52, 55] cc => I, Pos: [56, 63] cc => I, Pos: [56, 63] cc => I, Pos: [64, 77] cc => I, Pos: [64, 77] cc => I, Pos: [67, 70, 74] ccc => cc, Pos: [82, 86, 88] ccc => cc, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [89, 95] cc => I, Pos: [89, 95] cc => I, Pos: [103, 105, 107] ccc => cc]

Plan: 1
[Pos: [2, 7, 11] ccc => cc,
 Pos: [14, 20] cc => I,
 Pos: [41, 60] cc => I,
 Pos: [52, 55] cc => I,
 Pos: [56, 63] cc => I,
 Pos: [64, 77] cc => I,
 Pos: [67, 70, 74] ccc => cc,
 Pos: [82, 86, 88] ccc => cc,
 Pos: [87, 93] cc => I,
 Pos: [89, 95] cc => I,
 Pos: [103, 105, 107] ccc => cc]
Change: 11, Saving: 10

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.03124856948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 7, 11] ccc => cc,
 Pos: [14, 20] cc => I,
 Pos: [41, 60] cc => I,
 Pos: [52, 55] cc => I,
 Pos: [56, 63] cc => I,
 Pos: [64, 77] cc => I,
 Pos: [67, 70, 74] ccc => cc,
 Pos: [82, 86, 88] ccc => cc,
 Pos: [87, 93] cc => I,
 Pos: [89, 95] cc => I,
 Pos: [103, 105, 107] ccc => cc]
Change: 11, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 7, 11] ccc => cc
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [41, 60] cc => I
Apply:  Pos: [52, 55] cc => I
Apply:  Pos: [56, 63] cc => I
Apply:  Pos: [64, 77] cc => I
Apply:  Pos: [67, 70, 74] ccc => cc
Apply:  Pos: [82, 86, 88] ccc => cc
Apply:  Pos: [87, 93] cc => I
Apply:  Pos: [89, 95] cc => I
Apply:  Pos: [103, 105, 107] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [16, 18], [0, 8], [3, 6], [11, 14], [10, 1], [17, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [17, 18], [15, 14], [4, 17], [4, 18], [13, 6], [13, 2], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [0, 5], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [4, 18], [3, 2], [17, 18], [15, 7], [17, 5], [15, 1], [7, 6], [13, 2], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [5, 15], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], [5, 15], ----End Timer [Execute Mapping]:  1.7500205039978027

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 94]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[54, 56, 57]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 94]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.3116481304168701

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [54, 56, 57] ccc => cc, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I]

Plan: 1
[Pos: [54, 56, 57] ccc => cc, Pos: [88, 94] cc => I]
Change: 2, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.01563572883605957

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [54, 56, 57] ccc => cc, Pos: [88, 94] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [54, 56, 57] ccc => cc
Apply:  Pos: [88, 94] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 2], [13, 3], [16, 18], [0, 8], [3, 6], [11, 14], [10, 1], [17, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 2], [13, 6], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [0, 5], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [4, 18], [3, 2], [17, 18], [15, 7], [17, 5], [15, 1], [7, 6], [13, 2], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], ----End Timer [Execute Mapping]:  1.3272838592529297

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2661151885986328

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[6, 2], [13, 3], [16, 18], [0, 8], [3, 6], [11, 14], [10, 1], [17, 18], [13, 6], [8, 15], [6, 2], [18, 11], [9, 19], [0, 4], [12, 19], [7, 6], [16, 12], [15, 14], [9, 11], [1, 7], [0, 8], [18, 13], [4, 16], [16, 18], [4, 17], [14, 1], [4, 18], [10, 1], [18, 11], [5, 15], [13, 2], [12, 9], [5, 10], [11, 14], [16, 17], [14, 13], [8, 5], [19, 3], [11, 13], [10, 1], [16, 18], [7, 6], [4, 16], [14, 1], [17, 15], [14, 13], [0, 4], [3, 2], [11, 14], [13, 6], [9, 19], [3, 6], [4, 18], [13, 3], [4, 17], [15, 14], [17, 18], [13, 6], [13, 2], [18, 14], [6, 2], [4, 16], [11, 13], [16, 17], [0, 5], [4, 17], [18, 11], [14, 1], [8, 5], [17, 15], [4, 18], [3, 2], [17, 18], [15, 7], [17, 5], [15, 1], [7, 6], [13, 2], [3, 6], [4, 17], [14, 7], [8, 15], [1, 7], [13, 3], [15, 7], [8, 15], [6, 2], [16, 17], [13, 6], [0, 8], [1, 7], [3, 6], ----End Timer [Execute Mapping]:  1.2661151885986328

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [92] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 24 - (small)
 - circuit cycle: 184

Reduced: 
 - size: 88 (48.89%)
 - depth: 21 (46.67%)

