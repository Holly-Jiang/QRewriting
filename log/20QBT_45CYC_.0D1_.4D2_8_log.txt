----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.08030438423156738

[4, 14], [15, 8], [14, 11], [18, 0], [9, 10], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [15, 2], [5, 6], [13, 16], [15, 8], [17, 18], [3, 11], [9, 10], [7, 12], [15, 8], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [5, 8], [15, 0], [13, 16], [5, 8], [12, 19], [15, 2], [11, 17], [5, 8], [14, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [14, 17], [15, 0], [12, 19], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [19, 9], [16, 6], [17, 18], [12, 19], [3, 7], [13, 5], [8, 2], [16, 6], [19, 9], [1, 11], [15, 8], [5, 6], [2, 9], [12, 19], [13, 16], [14, 15], [17, 18], [1, 3], [8, 2], [19, 9], [15, 0], [7, 8], [4, 14], [12, 19], [7, 8], [2, 9], [13, 16], [17, 15], [3, 7], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [4, 1], [8, 0], [3, 13], [11, 15], [19, 10], [14, 17], [12, 9], [4, 1], [5, 6], [12, 19], [14, 17], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [3, 13], [8, 12], [7, 5], [19, 9], [3, 13], [5, 6], [14, 11], [8, 2], [13, 5], [15, 2], [18, 0], [19, 10], [3, 13], [15, 2], [8, 0], [17, 18], [4, 14], [13, 16], [3, 11], [7, 8], [13, 6], [4, 14], [16, 5], [16, 6], [7, 12], [13, 5], [15, 8], [19, 9], [16, 6], [5, 8], [11, 17], [0, 2], [16, 6], [12, 10], [1, 11], [8, 2], [16, 6], [3, 11], [12, 9], [7, 5], [19, 10], [0, 2], [15, 8], [13, 6], [7, 5], [14, 11], [13, 6], [1, 11], [9, 10], [4, 14], [12, 19], [8, 0], [13, 6], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [13, 16], [4, 14], [11, 7], [5, 12], [2, 9], [17, 15], [13, 16], [7, 8], [5, 6], [13, 6], [1, 3], [4, 14], [19, 9], [13, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 17]
[14, 19]
[25, 27]
[27, 30]
[11, 32]
[30, 34]
[34, 39]
[35, 41]
[50, 56]
[51, 65]
[70, 73]
[63, 75]
[85, 92]
[60, 93]
[90, 95]
[103, 107]
[112, 116]
[119, 124]
[106, 130]
[126, 131]
[131, 135]
[135, 139]
[142, 147]
[146, 149]
[149, 155]
[152, 167]
[166, 172]
[167, 177]
[175, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 20, 29]
[31, 36, 43]
[62, 68, 72]
[80, 81, 85]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[49, 52, 57]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 17]
[14, 19]
[25, 27]
[27, 30]
[11, 32]
[30, 34]
[34, 39]
[35, 41]
[50, 56]
[51, 65]
[70, 73]
[63, 75]
[85, 92]
[60, 93]
[90, 95]
[103, 107]
[112, 116]
[119, 124]
[106, 130]
[126, 131]
[131, 135]
[135, 139]
[142, 147]
[146, 149]
[149, 155]
[152, 167]
[166, 172]
[167, 177]
[175, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.232210874557495

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 17] cc => I, Pos: [4, 17] cc => I, Pos: [11, 32] cc => I, Pos: [11, 32] cc => I, Pos: [13, 20, 29] ccc => cc, Pos: [14, 19] cc => I, Pos: [14, 19] cc => I, Pos: [25, 27] cc => I, Pos: [25, 27] cc => I, Pos: [27, 30] cc => I, Pos: [27, 30] cc => I, Pos: [30, 34] cc => I, Pos: [30, 34] cc => I, Pos: [31, 36, 43] ccc => cc, Pos: [34, 39] cc => I, Pos: [34, 39] cc => I, Pos: [35, 41] cc => I, Pos: [35, 41] cc => I, Pos: [49, 52, 57] ccc => cc, Pos: [50, 56] cc => I, Pos: [50, 56] cc => I, Pos: [51, 65] cc => I, Pos: [51, 65] cc => I, Pos: [60, 93] cc => I, Pos: [60, 93] cc => I, Pos: [62, 68, 72] ccc => cc, Pos: [63, 75] cc => I, Pos: [63, 75] cc => I, Pos: [70, 73] cc => I, Pos: [70, 73] cc => I, Pos: [80, 81, 85] ccc => cc, Pos: [85, 92] cc => I, Pos: [85, 92] cc => I, Pos: [90, 95] cc => I, Pos: [90, 95] cc => I, Pos: [103, 107] cc => I, Pos: [103, 107] cc => I, Pos: [106, 130] cc => I, Pos: [106, 130] cc => I, Pos: [112, 116] cc => I, Pos: [112, 116] cc => I, Pos: [119, 124] cc => I, Pos: [119, 124] cc => I, Pos: [126, 131] cc => I, Pos: [126, 131] cc => I, Pos: [131, 135] cc => I, Pos: [131, 135] cc => I, Pos: [135, 139] cc => I, Pos: [135, 139] cc => I, Pos: [142, 147] cc => I, Pos: [142, 147] cc => I, Pos: [146, 149] cc => I, Pos: [146, 149] cc => I, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [152, 167] cc => I, Pos: [152, 167] cc => I, Pos: [166, 172] cc => I, Pos: [166, 172] cc => I, Pos: [167, 177] cc => I, Pos: [167, 177] cc => I, Pos: [175, 179] cc => I, Pos: [175, 179] cc => I]

Plan: 1
[Pos: [4, 17] cc => I,
 Pos: [11, 32] cc => I,
 Pos: [13, 20, 29] ccc => cc,
 Pos: [14, 19] cc => I,
 Pos: [25, 27] cc => I,
 Pos: [30, 34] cc => I,
 Pos: [31, 36, 43] ccc => cc,
 Pos: [35, 41] cc => I,
 Pos: [49, 52, 57] ccc => cc,
 Pos: [50, 56] cc => I,
 Pos: [51, 65] cc => I,
 Pos: [60, 93] cc => I,
 Pos: [62, 68, 72] ccc => cc,
 Pos: [63, 75] cc => I,
 Pos: [70, 73] cc => I,
 Pos: [80, 81, 85] ccc => cc,
 Pos: [90, 95] cc => I,
 Pos: [103, 107] cc => I,
 Pos: [106, 130] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 131] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [142, 147] cc => I,
 Pos: [146, 149] cc => I,
 Pos: [152, 167] cc => I,
 Pos: [166, 172] cc => I,
 Pos: [175, 179] cc => I]
Change: 28, Saving: 102

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 17] cc => I,
 Pos: [11, 32] cc => I,
 Pos: [13, 20, 29] ccc => cc,
 Pos: [14, 19] cc => I,
 Pos: [25, 27] cc => I,
 Pos: [30, 34] cc => I,
 Pos: [31, 36, 43] ccc => cc,
 Pos: [35, 41] cc => I,
 Pos: [49, 52, 57] ccc => cc,
 Pos: [50, 56] cc => I,
 Pos: [51, 65] cc => I,
 Pos: [60, 93] cc => I,
 Pos: [62, 68, 72] ccc => cc,
 Pos: [63, 75] cc => I,
 Pos: [70, 73] cc => I,
 Pos: [80, 81, 85] ccc => cc,
 Pos: [90, 95] cc => I,
 Pos: [103, 107] cc => I,
 Pos: [106, 130] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 131] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [142, 147] cc => I,
 Pos: [146, 149] cc => I,
 Pos: [152, 167] cc => I,
 Pos: [166, 172] cc => I,
 Pos: [175, 179] cc => I]
Change: 28, Saving: 102

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 17] cc => I
Apply:  Pos: [11, 32] cc => I
Apply:  Pos: [13, 20, 29] ccc => cc
Apply:  Pos: [14, 19] cc => I
Apply:  Pos: [25, 27] cc => I
Apply:  Pos: [30, 34] cc => I
Apply:  Pos: [31, 36, 43] ccc => cc
Apply:  Pos: [35, 41] cc => I
Apply:  Pos: [49, 52, 57] ccc => cc
Apply:  Pos: [50, 56] cc => I
Apply:  Pos: [51, 65] cc => I
Apply:  Pos: [60, 93] cc => I
Apply:  Pos: [62, 68, 72] ccc => cc
Apply:  Pos: [63, 75] cc => I
Apply:  Pos: [70, 73] cc => I
Apply:  Pos: [80, 81, 85] ccc => cc
Apply:  Pos: [90, 95] cc => I
Apply:  Pos: [103, 107] cc => I
Apply:  Pos: [106, 130] cc => I
Apply:  Pos: [112, 116] cc => I
Apply:  Pos: [119, 124] cc => I
Apply:  Pos: [126, 131] cc => I
Apply:  Pos: [135, 139] cc => I
Apply:  Pos: [142, 147] cc => I
Apply:  Pos: [146, 149] cc => I
Apply:  Pos: [152, 167] cc => I
Apply:  Pos: [166, 172] cc => I
Apply:  Pos: [175, 179] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [5, 6], [13, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [3, 7], [13, 5], [8, 2], [1, 11], [15, 8], [2, 9], [12, 9], [14, 15], [1, 3], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [3, 7], [8, 12], [15, 2], [4, 3], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [4, 1], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [13, 6], [16, 5], [7, 12], [13, 5], [15, 8], [5, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [14, 11], [1, 11], [9, 10], [12, 19], [8, 0], [13, 6], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [4, 14], [19, 9], ----End Timer [Execute Mapping]:  3.232210874557495

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 109]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[45, 52, 55]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 45, 52]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 109]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.093785047531128

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 45, 52] ccc => cc, Pos: [45, 52, 55] ccc => cc, Pos: [88, 109] cc => I, Pos: [88, 109] cc => I]

Plan: 1
[Pos: [37, 45, 52] ccc => cc, Pos: [88, 109] cc => I]
Change: 2, Saving: 6

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 45, 52] ccc => cc, Pos: [88, 109] cc => I]
Change: 2, Saving: 6

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 45, 52] ccc => cc
Apply:  Pos: [88, 109] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [13, 6], [5, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [1, 3], [13, 5], [8, 2], [1, 11], [15, 8], [12, 9], [2, 9], [14, 15], [3, 7], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [8, 12], [15, 2], [1, 3], [4, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [4, 1], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [16, 5], [7, 12], [13, 5], [5, 8], [15, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [1, 11], [14, 11], [9, 10], [12, 19], [8, 0], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [4, 14], [19, 9], ----End Timer [Execute Mapping]:  2.093785047531128

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.015606164932251

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [5, 6], [13, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [1, 3], [13, 5], [8, 2], [1, 11], [15, 8], [2, 9], [12, 9], [14, 15], [3, 7], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [8, 12], [15, 2], [4, 3], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [4, 1], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [16, 5], [7, 12], [13, 5], [15, 8], [5, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [14, 11], [1, 11], [9, 10], [12, 19], [18, 0], [8, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [4, 14], [19, 9], ----End Timer [Execute Mapping]:  2.015606164932251

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [126] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 252

Reduced: 
 - size: 54 (30.00%)
 - cycle: 108 (30.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07811808586120605

[4, 14], [15, 8], [14, 11], [18, 0], [9, 10], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [15, 2], [5, 6], [13, 16], [15, 8], [17, 18], [3, 11], [9, 10], [7, 12], [15, 8], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [5, 8], [15, 0], [13, 16], [5, 8], [12, 19], [15, 2], [11, 17], [5, 8], [14, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [14, 17], [15, 0], [12, 19], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [19, 9], [16, 6], [17, 18], [12, 19], [3, 7], [13, 5], [8, 2], [16, 6], [19, 9], [1, 11], [15, 8], [5, 6], [2, 9], [12, 19], [13, 16], [14, 15], [17, 18], [1, 3], [8, 2], [19, 9], [15, 0], [7, 8], [4, 14], [12, 19], [7, 8], [2, 9], [13, 16], [17, 15], [3, 7], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [4, 1], [8, 0], [3, 13], [11, 15], [19, 10], [14, 17], [12, 9], [4, 1], [5, 6], [12, 19], [14, 17], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [3, 13], [8, 12], [7, 5], [19, 9], [3, 13], [5, 6], [14, 11], [8, 2], [13, 5], [15, 2], [18, 0], [19, 10], [3, 13], [15, 2], [8, 0], [17, 18], [4, 14], [13, 16], [3, 11], [7, 8], [13, 6], [4, 14], [16, 5], [16, 6], [7, 12], [13, 5], [15, 8], [19, 9], [16, 6], [5, 8], [11, 17], [0, 2], [16, 6], [12, 10], [1, 11], [8, 2], [16, 6], [3, 11], [12, 9], [7, 5], [19, 10], [0, 2], [15, 8], [13, 6], [7, 5], [14, 11], [13, 6], [1, 11], [9, 10], [4, 14], [12, 19], [8, 0], [13, 6], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [13, 16], [4, 14], [11, 7], [5, 12], [2, 9], [17, 15], [13, 16], [7, 8], [5, 6], [13, 6], [1, 3], [4, 14], [19, 9], [13, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 17]
[14, 19]
[25, 27]
[27, 30]
[11, 32]
[30, 34]
[34, 39]
[35, 41]
[50, 56]
[51, 65]
[70, 73]
[63, 75]
[85, 92]
[60, 93]
[90, 95]
[103, 107]
[112, 116]
[119, 124]
[106, 130]
[126, 131]
[131, 135]
[135, 139]
[142, 147]
[146, 149]
[149, 155]
[152, 167]
[166, 172]
[167, 177]
[175, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 20, 29]
[31, 36, 43]
[62, 68, 72]
[80, 81, 85]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[49, 52, 57]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 17]
[14, 19]
[25, 27]
[27, 30]
[11, 32]
[30, 34]
[34, 39]
[35, 41]
[50, 56]
[51, 65]
[70, 73]
[63, 75]
[85, 92]
[60, 93]
[90, 95]
[103, 107]
[112, 116]
[119, 124]
[106, 130]
[126, 131]
[131, 135]
[135, 139]
[142, 147]
[146, 149]
[149, 155]
[152, 167]
[166, 172]
[167, 177]
[175, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.1718735694885254

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 17] cc => I, Pos: [4, 17] cc => I, Pos: [11, 32] cc => I, Pos: [11, 32] cc => I, Pos: [13, 20, 29] ccc => cc, Pos: [14, 19] cc => I, Pos: [14, 19] cc => I, Pos: [25, 27] cc => I, Pos: [25, 27] cc => I, Pos: [27, 30] cc => I, Pos: [27, 30] cc => I, Pos: [30, 34] cc => I, Pos: [30, 34] cc => I, Pos: [31, 36, 43] ccc => cc, Pos: [34, 39] cc => I, Pos: [34, 39] cc => I, Pos: [35, 41] cc => I, Pos: [35, 41] cc => I, Pos: [49, 52, 57] ccc => cc, Pos: [50, 56] cc => I, Pos: [50, 56] cc => I, Pos: [51, 65] cc => I, Pos: [51, 65] cc => I, Pos: [60, 93] cc => I, Pos: [60, 93] cc => I, Pos: [62, 68, 72] ccc => cc, Pos: [63, 75] cc => I, Pos: [63, 75] cc => I, Pos: [70, 73] cc => I, Pos: [70, 73] cc => I, Pos: [80, 81, 85] ccc => cc, Pos: [85, 92] cc => I, Pos: [85, 92] cc => I, Pos: [90, 95] cc => I, Pos: [90, 95] cc => I, Pos: [103, 107] cc => I, Pos: [103, 107] cc => I, Pos: [106, 130] cc => I, Pos: [106, 130] cc => I, Pos: [112, 116] cc => I, Pos: [112, 116] cc => I, Pos: [119, 124] cc => I, Pos: [119, 124] cc => I, Pos: [126, 131] cc => I, Pos: [126, 131] cc => I, Pos: [131, 135] cc => I, Pos: [131, 135] cc => I, Pos: [135, 139] cc => I, Pos: [135, 139] cc => I, Pos: [142, 147] cc => I, Pos: [142, 147] cc => I, Pos: [146, 149] cc => I, Pos: [146, 149] cc => I, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [152, 167] cc => I, Pos: [152, 167] cc => I, Pos: [166, 172] cc => I, Pos: [166, 172] cc => I, Pos: [167, 177] cc => I, Pos: [167, 177] cc => I, Pos: [175, 179] cc => I, Pos: [175, 179] cc => I]

Plan: 1
[Pos: [4, 17] cc => I,
 Pos: [11, 32] cc => I,
 Pos: [13, 20, 29] ccc => cc,
 Pos: [14, 19] cc => I,
 Pos: [25, 27] cc => I,
 Pos: [30, 34] cc => I,
 Pos: [31, 36, 43] ccc => cc,
 Pos: [35, 41] cc => I,
 Pos: [49, 52, 57] ccc => cc,
 Pos: [50, 56] cc => I,
 Pos: [51, 65] cc => I,
 Pos: [60, 93] cc => I,
 Pos: [62, 68, 72] ccc => cc,
 Pos: [63, 75] cc => I,
 Pos: [70, 73] cc => I,
 Pos: [80, 81, 85] ccc => cc,
 Pos: [90, 95] cc => I,
 Pos: [103, 107] cc => I,
 Pos: [106, 130] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 131] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [142, 147] cc => I,
 Pos: [146, 149] cc => I,
 Pos: [152, 167] cc => I,
 Pos: [166, 172] cc => I,
 Pos: [175, 179] cc => I]
Change: 28, Saving: 30

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.07811999320983887

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 17] cc => I,
 Pos: [11, 32] cc => I,
 Pos: [13, 20, 29] ccc => cc,
 Pos: [14, 19] cc => I,
 Pos: [25, 27] cc => I,
 Pos: [30, 34] cc => I,
 Pos: [31, 36, 43] ccc => cc,
 Pos: [35, 41] cc => I,
 Pos: [49, 52, 57] ccc => cc,
 Pos: [50, 56] cc => I,
 Pos: [51, 65] cc => I,
 Pos: [60, 93] cc => I,
 Pos: [62, 68, 72] ccc => cc,
 Pos: [63, 75] cc => I,
 Pos: [70, 73] cc => I,
 Pos: [80, 81, 85] ccc => cc,
 Pos: [90, 95] cc => I,
 Pos: [103, 107] cc => I,
 Pos: [106, 130] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 131] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [142, 147] cc => I,
 Pos: [146, 149] cc => I,
 Pos: [152, 167] cc => I,
 Pos: [166, 172] cc => I,
 Pos: [175, 179] cc => I]
Change: 28, Saving: 30

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 17] cc => I
Apply:  Pos: [11, 32] cc => I
Apply:  Pos: [13, 20, 29] ccc => cc
Apply:  Pos: [14, 19] cc => I
Apply:  Pos: [25, 27] cc => I
Apply:  Pos: [30, 34] cc => I
Apply:  Pos: [31, 36, 43] ccc => cc
Apply:  Pos: [35, 41] cc => I
Apply:  Pos: [49, 52, 57] ccc => cc
Apply:  Pos: [50, 56] cc => I
Apply:  Pos: [51, 65] cc => I
Apply:  Pos: [60, 93] cc => I
Apply:  Pos: [62, 68, 72] ccc => cc
Apply:  Pos: [63, 75] cc => I
Apply:  Pos: [70, 73] cc => I
Apply:  Pos: [80, 81, 85] ccc => cc
Apply:  Pos: [90, 95] cc => I
Apply:  Pos: [103, 107] cc => I
Apply:  Pos: [106, 130] cc => I
Apply:  Pos: [112, 116] cc => I
Apply:  Pos: [119, 124] cc => I
Apply:  Pos: [126, 131] cc => I
Apply:  Pos: [135, 139] cc => I
Apply:  Pos: [142, 147] cc => I
Apply:  Pos: [146, 149] cc => I
Apply:  Pos: [152, 167] cc => I
Apply:  Pos: [166, 172] cc => I
Apply:  Pos: [175, 179] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [5, 6], [13, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [3, 7], [13, 5], [8, 2], [1, 11], [15, 8], [2, 9], [12, 9], [14, 15], [1, 3], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [3, 7], [8, 12], [15, 2], [4, 3], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [4, 1], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [13, 6], [16, 5], [7, 12], [13, 5], [15, 8], [5, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [14, 11], [1, 11], [9, 10], [12, 19], [8, 0], [13, 6], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [4, 14], [19, 9], ----End Timer [Execute Mapping]:  3.2499935626983643

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 109]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[45, 52, 55]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 45, 52]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 109]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.062549114227295

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 45, 52] ccc => cc, Pos: [45, 52, 55] ccc => cc, Pos: [88, 109] cc => I, Pos: [88, 109] cc => I]

Plan: 1
[Pos: [37, 45, 52] ccc => cc, Pos: [88, 109] cc => I]
Change: 2, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 45, 52] ccc => cc, Pos: [88, 109] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 45, 52] ccc => cc
Apply:  Pos: [88, 109] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [13, 6], [5, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [1, 3], [13, 5], [8, 2], [1, 11], [15, 8], [12, 9], [2, 9], [14, 15], [3, 7], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [8, 12], [15, 2], [1, 3], [4, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [4, 1], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [16, 5], [7, 12], [13, 5], [5, 8], [15, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [1, 11], [14, 11], [9, 10], [12, 19], [8, 0], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [4, 14], [19, 9], ----End Timer [Execute Mapping]:  2.062549114227295

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0001657009124756

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [5, 6], [13, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [1, 3], [13, 5], [8, 2], [1, 11], [15, 8], [2, 9], [12, 9], [14, 15], [3, 7], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [8, 12], [15, 2], [4, 3], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [4, 1], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [16, 5], [7, 12], [13, 5], [15, 8], [5, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [14, 11], [1, 11], [9, 10], [12, 19], [18, 0], [8, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [4, 14], [19, 9], ----End Timer [Execute Mapping]:  2.0001657009124756

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [126] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 252

Reduced: 
 - size: 54 (30.00%)
 - depth: 11 (24.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07811951637268066

[4, 14], [15, 8], [14, 11], [18, 0], [9, 10], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [15, 2], [5, 6], [13, 16], [15, 8], [17, 18], [3, 11], [9, 10], [7, 12], [15, 8], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [5, 8], [15, 0], [13, 16], [5, 8], [12, 19], [15, 2], [11, 17], [5, 8], [14, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [14, 17], [15, 0], [12, 19], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [19, 9], [16, 6], [17, 18], [12, 19], [3, 7], [13, 5], [8, 2], [16, 6], [19, 9], [1, 11], [15, 8], [5, 6], [2, 9], [12, 19], [13, 16], [14, 15], [17, 18], [1, 3], [8, 2], [19, 9], [15, 0], [7, 8], [4, 14], [12, 19], [7, 8], [2, 9], [13, 16], [17, 15], [3, 7], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [4, 1], [8, 0], [3, 13], [11, 15], [19, 10], [14, 17], [12, 9], [4, 1], [5, 6], [12, 19], [14, 17], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [3, 13], [8, 12], [7, 5], [19, 9], [3, 13], [5, 6], [14, 11], [8, 2], [13, 5], [15, 2], [18, 0], [19, 10], [3, 13], [15, 2], [8, 0], [17, 18], [4, 14], [13, 16], [3, 11], [7, 8], [13, 6], [4, 14], [16, 5], [16, 6], [7, 12], [13, 5], [15, 8], [19, 9], [16, 6], [5, 8], [11, 17], [0, 2], [16, 6], [12, 10], [1, 11], [8, 2], [16, 6], [3, 11], [12, 9], [7, 5], [19, 10], [0, 2], [15, 8], [13, 6], [7, 5], [14, 11], [13, 6], [1, 11], [9, 10], [4, 14], [12, 19], [8, 0], [13, 6], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [13, 16], [4, 14], [11, 7], [5, 12], [2, 9], [17, 15], [13, 16], [7, 8], [5, 6], [13, 6], [1, 3], [4, 14], [19, 9], [13, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 17]
[14, 19]
[25, 27]
[27, 30]
[11, 32]
[30, 34]
[34, 39]
[35, 41]
[50, 56]
[51, 65]
[70, 73]
[63, 75]
[85, 92]
[60, 93]
[90, 95]
[103, 107]
[112, 116]
[119, 124]
[106, 130]
[126, 131]
[131, 135]
[135, 139]
[142, 147]
[146, 149]
[149, 155]
[152, 167]
[166, 172]
[167, 177]
[175, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 20, 29]
[31, 36, 43]
[62, 68, 72]
[80, 81, 85]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[49, 52, 57]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 17]
[14, 19]
[25, 27]
[27, 30]
[11, 32]
[30, 34]
[34, 39]
[35, 41]
[50, 56]
[51, 65]
[70, 73]
[63, 75]
[85, 92]
[60, 93]
[90, 95]
[103, 107]
[112, 116]
[119, 124]
[106, 130]
[126, 131]
[131, 135]
[135, 139]
[142, 147]
[146, 149]
[149, 155]
[152, 167]
[166, 172]
[167, 177]
[175, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.16998028755188

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 17] cc => I, Pos: [4, 17] cc => I, Pos: [11, 32] cc => I, Pos: [11, 32] cc => I, Pos: [13, 20, 29] ccc => cc, Pos: [14, 19] cc => I, Pos: [14, 19] cc => I, Pos: [25, 27] cc => I, Pos: [25, 27] cc => I, Pos: [27, 30] cc => I, Pos: [27, 30] cc => I, Pos: [30, 34] cc => I, Pos: [30, 34] cc => I, Pos: [31, 36, 43] ccc => cc, Pos: [34, 39] cc => I, Pos: [34, 39] cc => I, Pos: [35, 41] cc => I, Pos: [35, 41] cc => I, Pos: [49, 52, 57] ccc => cc, Pos: [50, 56] cc => I, Pos: [50, 56] cc => I, Pos: [51, 65] cc => I, Pos: [51, 65] cc => I, Pos: [60, 93] cc => I, Pos: [60, 93] cc => I, Pos: [62, 68, 72] ccc => cc, Pos: [63, 75] cc => I, Pos: [63, 75] cc => I, Pos: [70, 73] cc => I, Pos: [70, 73] cc => I, Pos: [80, 81, 85] ccc => cc, Pos: [85, 92] cc => I, Pos: [85, 92] cc => I, Pos: [90, 95] cc => I, Pos: [90, 95] cc => I, Pos: [103, 107] cc => I, Pos: [103, 107] cc => I, Pos: [106, 130] cc => I, Pos: [106, 130] cc => I, Pos: [112, 116] cc => I, Pos: [112, 116] cc => I, Pos: [119, 124] cc => I, Pos: [119, 124] cc => I, Pos: [126, 131] cc => I, Pos: [126, 131] cc => I, Pos: [131, 135] cc => I, Pos: [131, 135] cc => I, Pos: [135, 139] cc => I, Pos: [135, 139] cc => I, Pos: [142, 147] cc => I, Pos: [142, 147] cc => I, Pos: [146, 149] cc => I, Pos: [146, 149] cc => I, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [152, 167] cc => I, Pos: [152, 167] cc => I, Pos: [166, 172] cc => I, Pos: [166, 172] cc => I, Pos: [167, 177] cc => I, Pos: [167, 177] cc => I, Pos: [175, 179] cc => I, Pos: [175, 179] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 17] cc => I,
 Pos: [11, 32] cc => I,
 Pos: [13, 20, 29] ccc => cc,
 Pos: [14, 19] cc => I,
 Pos: [27, 30] cc => I,
 Pos: [31, 36, 43] ccc => cc,
 Pos: [34, 39] cc => I,
 Pos: [35, 41] cc => I,
 Pos: [49, 52, 57] ccc => cc,
 Pos: [50, 56] cc => I,
 Pos: [51, 65] cc => I,
 Pos: [60, 93] cc => I,
 Pos: [62, 68, 72] ccc => cc,
 Pos: [63, 75] cc => I,
 Pos: [70, 73] cc => I,
 Pos: [80, 81, 85] ccc => cc,
 Pos: [90, 95] cc => I,
 Pos: [103, 107] cc => I,
 Pos: [106, 130] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 131] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [142, 147] cc => I,
 Pos: [149, 155] cc => I,
 Pos: [167, 177] cc => I,
 Pos: [166, 172] cc => I,
 Pos: [175, 179] cc => I]
Change: 28, Saving: 102

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 17] cc => I
Apply:  Pos: [11, 32] cc => I
Apply:  Pos: [13, 20, 29] ccc => cc
Apply:  Pos: [14, 19] cc => I
Apply:  Pos: [27, 30] cc => I
Apply:  Pos: [31, 36, 43] ccc => cc
Apply:  Pos: [34, 39] cc => I
Apply:  Pos: [35, 41] cc => I
Apply:  Pos: [49, 52, 57] ccc => cc
Apply:  Pos: [50, 56] cc => I
Apply:  Pos: [51, 65] cc => I
Apply:  Pos: [60, 93] cc => I
Apply:  Pos: [62, 68, 72] ccc => cc
Apply:  Pos: [63, 75] cc => I
Apply:  Pos: [70, 73] cc => I
Apply:  Pos: [80, 81, 85] ccc => cc
Apply:  Pos: [90, 95] cc => I
Apply:  Pos: [103, 107] cc => I
Apply:  Pos: [106, 130] cc => I
Apply:  Pos: [112, 116] cc => I
Apply:  Pos: [119, 124] cc => I
Apply:  Pos: [126, 131] cc => I
Apply:  Pos: [135, 139] cc => I
Apply:  Pos: [142, 147] cc => I
Apply:  Pos: [149, 155] cc => I
Apply:  Pos: [167, 177] cc => I
Apply:  Pos: [166, 172] cc => I
Apply:  Pos: [175, 179] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [5, 6], [13, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [3, 7], [13, 5], [8, 2], [1, 11], [15, 8], [2, 9], [12, 9], [14, 15], [1, 3], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [3, 7], [8, 12], [15, 2], [4, 3], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [4, 1], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [13, 6], [16, 5], [7, 12], [13, 5], [15, 8], [5, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [13, 6], [14, 11], [1, 11], [9, 10], [4, 14], [12, 19], [8, 0], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [19, 9], ----End Timer [Execute Mapping]:  3.16998028755188

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 104]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[45, 52, 55]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 45, 52]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 104]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0787549018859863

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 45, 52] ccc => cc, Pos: [45, 52, 55] ccc => cc, Pos: [88, 104] cc => I, Pos: [88, 104] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 45, 52] ccc => cc, Pos: [88, 104] cc => I]
Change: 2, Saving: 6

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 45, 52] ccc => cc
Apply:  Pos: [88, 104] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [13, 6], [5, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [1, 3], [13, 5], [8, 2], [1, 11], [15, 8], [12, 9], [2, 9], [14, 15], [3, 7], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [8, 12], [15, 2], [1, 3], [4, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [4, 1], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [16, 5], [7, 12], [13, 5], [5, 8], [15, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [1, 11], [14, 11], [9, 10], [4, 14], [12, 19], [18, 0], [8, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [19, 9], ----End Timer [Execute Mapping]:  2.0787549018859863

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0313920974731445

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [5, 6], [13, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [1, 3], [13, 5], [8, 2], [1, 11], [15, 8], [2, 9], [12, 9], [14, 15], [3, 7], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [8, 12], [15, 2], [4, 3], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [4, 1], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [16, 5], [7, 12], [13, 5], [15, 8], [5, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [14, 11], [1, 11], [9, 10], [4, 14], [12, 19], [8, 0], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [19, 9], ----End Timer [Execute Mapping]:  2.0313920974731445

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [126] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 252

Reduced: 
 - size: 54 (30.00%)
 - cycle: 108 (30.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07812047004699707

[4, 14], [15, 8], [14, 11], [18, 0], [9, 10], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [15, 2], [5, 6], [13, 16], [15, 8], [17, 18], [3, 11], [9, 10], [7, 12], [15, 8], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [5, 8], [15, 0], [13, 16], [5, 8], [12, 19], [15, 2], [11, 17], [5, 8], [14, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [14, 17], [15, 0], [12, 19], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [19, 9], [16, 6], [17, 18], [12, 19], [3, 7], [13, 5], [8, 2], [16, 6], [19, 9], [1, 11], [15, 8], [5, 6], [2, 9], [12, 19], [13, 16], [14, 15], [17, 18], [1, 3], [8, 2], [19, 9], [15, 0], [7, 8], [4, 14], [12, 19], [7, 8], [2, 9], [13, 16], [17, 15], [3, 7], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [4, 1], [8, 0], [3, 13], [11, 15], [19, 10], [14, 17], [12, 9], [4, 1], [5, 6], [12, 19], [14, 17], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [3, 13], [8, 12], [7, 5], [19, 9], [3, 13], [5, 6], [14, 11], [8, 2], [13, 5], [15, 2], [18, 0], [19, 10], [3, 13], [15, 2], [8, 0], [17, 18], [4, 14], [13, 16], [3, 11], [7, 8], [13, 6], [4, 14], [16, 5], [16, 6], [7, 12], [13, 5], [15, 8], [19, 9], [16, 6], [5, 8], [11, 17], [0, 2], [16, 6], [12, 10], [1, 11], [8, 2], [16, 6], [3, 11], [12, 9], [7, 5], [19, 10], [0, 2], [15, 8], [13, 6], [7, 5], [14, 11], [13, 6], [1, 11], [9, 10], [4, 14], [12, 19], [8, 0], [13, 6], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [13, 16], [4, 14], [11, 7], [5, 12], [2, 9], [17, 15], [13, 16], [7, 8], [5, 6], [13, 6], [1, 3], [4, 14], [19, 9], [13, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 17]
[14, 19]
[25, 27]
[27, 30]
[11, 32]
[30, 34]
[34, 39]
[35, 41]
[50, 56]
[51, 65]
[70, 73]
[63, 75]
[85, 92]
[60, 93]
[90, 95]
[103, 107]
[112, 116]
[119, 124]
[106, 130]
[126, 131]
[131, 135]
[135, 139]
[142, 147]
[146, 149]
[149, 155]
[152, 167]
[166, 172]
[167, 177]
[175, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 20, 29]
[31, 36, 43]
[62, 68, 72]
[80, 81, 85]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[49, 52, 57]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 17]
[14, 19]
[25, 27]
[27, 30]
[11, 32]
[30, 34]
[34, 39]
[35, 41]
[50, 56]
[51, 65]
[70, 73]
[63, 75]
[85, 92]
[60, 93]
[90, 95]
[103, 107]
[112, 116]
[119, 124]
[106, 130]
[126, 131]
[131, 135]
[135, 139]
[142, 147]
[146, 149]
[149, 155]
[152, 167]
[166, 172]
[167, 177]
[175, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.215284585952759

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 17] cc => I, Pos: [4, 17] cc => I, Pos: [11, 32] cc => I, Pos: [11, 32] cc => I, Pos: [13, 20, 29] ccc => cc, Pos: [14, 19] cc => I, Pos: [14, 19] cc => I, Pos: [25, 27] cc => I, Pos: [25, 27] cc => I, Pos: [27, 30] cc => I, Pos: [27, 30] cc => I, Pos: [30, 34] cc => I, Pos: [30, 34] cc => I, Pos: [31, 36, 43] ccc => cc, Pos: [34, 39] cc => I, Pos: [34, 39] cc => I, Pos: [35, 41] cc => I, Pos: [35, 41] cc => I, Pos: [49, 52, 57] ccc => cc, Pos: [50, 56] cc => I, Pos: [50, 56] cc => I, Pos: [51, 65] cc => I, Pos: [51, 65] cc => I, Pos: [60, 93] cc => I, Pos: [60, 93] cc => I, Pos: [62, 68, 72] ccc => cc, Pos: [63, 75] cc => I, Pos: [63, 75] cc => I, Pos: [70, 73] cc => I, Pos: [70, 73] cc => I, Pos: [80, 81, 85] ccc => cc, Pos: [85, 92] cc => I, Pos: [85, 92] cc => I, Pos: [90, 95] cc => I, Pos: [90, 95] cc => I, Pos: [103, 107] cc => I, Pos: [103, 107] cc => I, Pos: [106, 130] cc => I, Pos: [106, 130] cc => I, Pos: [112, 116] cc => I, Pos: [112, 116] cc => I, Pos: [119, 124] cc => I, Pos: [119, 124] cc => I, Pos: [126, 131] cc => I, Pos: [126, 131] cc => I, Pos: [131, 135] cc => I, Pos: [131, 135] cc => I, Pos: [135, 139] cc => I, Pos: [135, 139] cc => I, Pos: [142, 147] cc => I, Pos: [142, 147] cc => I, Pos: [146, 149] cc => I, Pos: [146, 149] cc => I, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [152, 167] cc => I, Pos: [152, 167] cc => I, Pos: [166, 172] cc => I, Pos: [166, 172] cc => I, Pos: [167, 177] cc => I, Pos: [167, 177] cc => I, Pos: [175, 179] cc => I, Pos: [175, 179] cc => I]

--------End Timer [Generate Plans]:  0.07811999320983887

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 17] cc => I,
 Pos: [11, 32] cc => I,
 Pos: [13, 20, 29] ccc => cc,
 Pos: [14, 19] cc => I,
 Pos: [27, 30] cc => I,
 Pos: [31, 36, 43] ccc => cc,
 Pos: [34, 39] cc => I,
 Pos: [35, 41] cc => I,
 Pos: [49, 52, 57] ccc => cc,
 Pos: [50, 56] cc => I,
 Pos: [51, 65] cc => I,
 Pos: [60, 93] cc => I,
 Pos: [62, 68, 72] ccc => cc,
 Pos: [63, 75] cc => I,
 Pos: [70, 73] cc => I,
 Pos: [85, 92] cc => I,
 Pos: [90, 95] cc => I,
 Pos: [103, 107] cc => I,
 Pos: [106, 130] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 131] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [142, 147] cc => I,
 Pos: [149, 155] cc => I,
 Pos: [167, 177] cc => I,
 Pos: [166, 172] cc => I,
 Pos: [175, 179] cc => I]
Change: 28, Saving: 29

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 17] cc => I
Apply:  Pos: [11, 32] cc => I
Apply:  Pos: [13, 20, 29] ccc => cc
Apply:  Pos: [14, 19] cc => I
Apply:  Pos: [27, 30] cc => I
Apply:  Pos: [31, 36, 43] ccc => cc
Apply:  Pos: [34, 39] cc => I
Apply:  Pos: [35, 41] cc => I
Apply:  Pos: [49, 52, 57] ccc => cc
Apply:  Pos: [50, 56] cc => I
Apply:  Pos: [51, 65] cc => I
Apply:  Pos: [60, 93] cc => I
Apply:  Pos: [62, 68, 72] ccc => cc
Apply:  Pos: [63, 75] cc => I
Apply:  Pos: [70, 73] cc => I
Apply:  Pos: [85, 92] cc => I
Apply:  Pos: [90, 95] cc => I
Apply:  Pos: [103, 107] cc => I
Apply:  Pos: [106, 130] cc => I
Apply:  Pos: [112, 116] cc => I
Apply:  Pos: [119, 124] cc => I
Apply:  Pos: [126, 131] cc => I
Apply:  Pos: [135, 139] cc => I
Apply:  Pos: [142, 147] cc => I
Apply:  Pos: [149, 155] cc => I
Apply:  Pos: [167, 177] cc => I
Apply:  Pos: [166, 172] cc => I
Apply:  Pos: [175, 179] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [5, 6], [13, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [3, 7], [13, 5], [8, 2], [1, 11], [15, 8], [2, 9], [12, 9], [14, 15], [1, 3], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [3, 7], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [13, 6], [16, 5], [7, 12], [13, 5], [15, 8], [5, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [13, 6], [14, 11], [1, 11], [9, 10], [4, 14], [12, 19], [8, 0], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [19, 9], ----End Timer [Execute Mapping]:  3.2934045791625977

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[87, 103]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 45, 52]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[87, 103]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0629076957702637

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 45, 52] ccc => cc, Pos: [87, 103] cc => I, Pos: [87, 103] cc => I]

--------End Timer [Generate Plans]:  0.015624761581420898

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 45, 52] ccc => cc, Pos: [87, 103] cc => I]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 45, 52] ccc => cc
Apply:  Pos: [87, 103] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [13, 6], [5, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [1, 3], [13, 5], [8, 2], [1, 11], [15, 8], [12, 9], [2, 9], [14, 15], [3, 7], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 19], [12, 9], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [16, 5], [7, 12], [13, 5], [5, 8], [15, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [1, 11], [14, 11], [9, 10], [4, 14], [12, 19], [18, 0], [8, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [19, 9], ----End Timer [Execute Mapping]:  2.0785324573516846

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.015909433364868

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [5, 6], [13, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [1, 3], [13, 5], [8, 2], [1, 11], [15, 8], [2, 9], [12, 9], [14, 15], [3, 7], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [16, 5], [7, 12], [13, 5], [15, 8], [5, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [14, 11], [1, 11], [9, 10], [4, 14], [12, 19], [8, 0], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [19, 9], ----End Timer [Execute Mapping]:  2.015909433364868

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [125] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 250

Reduced: 
 - size: 55 (30.56%)
 - depth: 11 (24.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07811427116394043

[4, 14], [15, 8], [14, 11], [18, 0], [9, 10], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [15, 2], [5, 6], [13, 16], [15, 8], [17, 18], [3, 11], [9, 10], [7, 12], [15, 8], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [5, 8], [15, 0], [13, 16], [5, 8], [12, 19], [15, 2], [11, 17], [5, 8], [14, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [14, 17], [15, 0], [12, 19], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [19, 9], [16, 6], [17, 18], [12, 19], [3, 7], [13, 5], [8, 2], [16, 6], [19, 9], [1, 11], [15, 8], [5, 6], [2, 9], [12, 19], [13, 16], [14, 15], [17, 18], [1, 3], [8, 2], [19, 9], [15, 0], [7, 8], [4, 14], [12, 19], [7, 8], [2, 9], [13, 16], [17, 15], [3, 7], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [4, 1], [8, 0], [3, 13], [11, 15], [19, 10], [14, 17], [12, 9], [4, 1], [5, 6], [12, 19], [14, 17], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [3, 13], [8, 12], [7, 5], [19, 9], [3, 13], [5, 6], [14, 11], [8, 2], [13, 5], [15, 2], [18, 0], [19, 10], [3, 13], [15, 2], [8, 0], [17, 18], [4, 14], [13, 16], [3, 11], [7, 8], [13, 6], [4, 14], [16, 5], [16, 6], [7, 12], [13, 5], [15, 8], [19, 9], [16, 6], [5, 8], [11, 17], [0, 2], [16, 6], [12, 10], [1, 11], [8, 2], [16, 6], [3, 11], [12, 9], [7, 5], [19, 10], [0, 2], [15, 8], [13, 6], [7, 5], [14, 11], [13, 6], [1, 11], [9, 10], [4, 14], [12, 19], [8, 0], [13, 6], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [13, 16], [4, 14], [11, 7], [5, 12], [2, 9], [17, 15], [13, 16], [7, 8], [5, 6], [13, 6], [1, 3], [4, 14], [19, 9], [13, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 17]
[14, 19]
[25, 27]
[27, 30]
[11, 32]
[30, 34]
[34, 39]
[35, 41]
[50, 56]
[51, 65]
[70, 73]
[63, 75]
[85, 92]
[60, 93]
[90, 95]
[103, 107]
[112, 116]
[119, 124]
[106, 130]
[126, 131]
[131, 135]
[135, 139]
[142, 147]
[146, 149]
[149, 155]
[152, 167]
[166, 172]
[167, 177]
[175, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 20, 29]
[31, 36, 43]
[62, 68, 72]
[80, 81, 85]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[49, 52, 57]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 17]
[14, 19]
[25, 27]
[27, 30]
[11, 32]
[30, 34]
[34, 39]
[35, 41]
[50, 56]
[51, 65]
[70, 73]
[63, 75]
[85, 92]
[60, 93]
[90, 95]
[103, 107]
[112, 116]
[119, 124]
[106, 130]
[126, 131]
[131, 135]
[135, 139]
[142, 147]
[146, 149]
[149, 155]
[152, 167]
[166, 172]
[167, 177]
[175, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.234403371810913

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 17] cc => I, Pos: [4, 17] cc => I, Pos: [11, 32] cc => I, Pos: [11, 32] cc => I, Pos: [13, 20, 29] ccc => cc, Pos: [14, 19] cc => I, Pos: [14, 19] cc => I, Pos: [25, 27] cc => I, Pos: [25, 27] cc => I, Pos: [27, 30] cc => I, Pos: [27, 30] cc => I, Pos: [30, 34] cc => I, Pos: [30, 34] cc => I, Pos: [31, 36, 43] ccc => cc, Pos: [34, 39] cc => I, Pos: [34, 39] cc => I, Pos: [35, 41] cc => I, Pos: [35, 41] cc => I, Pos: [49, 52, 57] ccc => cc, Pos: [50, 56] cc => I, Pos: [50, 56] cc => I, Pos: [51, 65] cc => I, Pos: [51, 65] cc => I, Pos: [60, 93] cc => I, Pos: [60, 93] cc => I, Pos: [62, 68, 72] ccc => cc, Pos: [63, 75] cc => I, Pos: [63, 75] cc => I, Pos: [70, 73] cc => I, Pos: [70, 73] cc => I, Pos: [80, 81, 85] ccc => cc, Pos: [85, 92] cc => I, Pos: [85, 92] cc => I, Pos: [90, 95] cc => I, Pos: [90, 95] cc => I, Pos: [103, 107] cc => I, Pos: [103, 107] cc => I, Pos: [106, 130] cc => I, Pos: [106, 130] cc => I, Pos: [112, 116] cc => I, Pos: [112, 116] cc => I, Pos: [119, 124] cc => I, Pos: [119, 124] cc => I, Pos: [126, 131] cc => I, Pos: [126, 131] cc => I, Pos: [131, 135] cc => I, Pos: [131, 135] cc => I, Pos: [135, 139] cc => I, Pos: [135, 139] cc => I, Pos: [142, 147] cc => I, Pos: [142, 147] cc => I, Pos: [146, 149] cc => I, Pos: [146, 149] cc => I, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [152, 167] cc => I, Pos: [152, 167] cc => I, Pos: [166, 172] cc => I, Pos: [166, 172] cc => I, Pos: [167, 177] cc => I, Pos: [167, 177] cc => I, Pos: [175, 179] cc => I, Pos: [175, 179] cc => I]

--------End Timer [Generate Plans]:  0.06249642372131348

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 17] cc => I,
 Pos: [11, 32] cc => I,
 Pos: [13, 20, 29] ccc => cc,
 Pos: [14, 19] cc => I,
 Pos: [27, 30] cc => I,
 Pos: [31, 36, 43] ccc => cc,
 Pos: [34, 39] cc => I,
 Pos: [35, 41] cc => I,
 Pos: [49, 52, 57] ccc => cc,
 Pos: [50, 56] cc => I,
 Pos: [51, 65] cc => I,
 Pos: [60, 93] cc => I,
 Pos: [62, 68, 72] ccc => cc,
 Pos: [63, 75] cc => I,
 Pos: [70, 73] cc => I,
 Pos: [80, 81, 85] ccc => cc,
 Pos: [90, 95] cc => I,
 Pos: [103, 107] cc => I,
 Pos: [106, 130] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [131, 135] cc => I,
 Pos: [142, 147] cc => I,
 Pos: [149, 155] cc => I,
 Pos: [167, 177] cc => I,
 Pos: [166, 172] cc => I,
 Pos: [175, 179] cc => I]
Change: 27, Saving: 29

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 17] cc => I
Apply:  Pos: [11, 32] cc => I
Apply:  Pos: [13, 20, 29] ccc => cc
Apply:  Pos: [14, 19] cc => I
Apply:  Pos: [27, 30] cc => I
Apply:  Pos: [31, 36, 43] ccc => cc
Apply:  Pos: [34, 39] cc => I
Apply:  Pos: [35, 41] cc => I
Apply:  Pos: [49, 52, 57] ccc => cc
Apply:  Pos: [50, 56] cc => I
Apply:  Pos: [51, 65] cc => I
Apply:  Pos: [60, 93] cc => I
Apply:  Pos: [62, 68, 72] ccc => cc
Apply:  Pos: [63, 75] cc => I
Apply:  Pos: [70, 73] cc => I
Apply:  Pos: [80, 81, 85] ccc => cc
Apply:  Pos: [90, 95] cc => I
Apply:  Pos: [103, 107] cc => I
Apply:  Pos: [106, 130] cc => I
Apply:  Pos: [112, 116] cc => I
Apply:  Pos: [119, 124] cc => I
Apply:  Pos: [131, 135] cc => I
Apply:  Pos: [142, 147] cc => I
Apply:  Pos: [149, 155] cc => I
Apply:  Pos: [167, 177] cc => I
Apply:  Pos: [166, 172] cc => I
Apply:  Pos: [175, 179] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [5, 6], [13, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [3, 7], [13, 5], [8, 2], [1, 11], [15, 8], [2, 9], [12, 9], [14, 15], [1, 3], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [3, 7], [8, 12], [15, 2], [4, 3], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [4, 1], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [13, 6], [16, 5], [16, 6], [7, 12], [13, 5], [15, 8], [5, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [16, 6], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [13, 6], [14, 11], [1, 11], [9, 10], [4, 14], [12, 19], [8, 0], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [19, 9], ----End Timer [Execute Mapping]:  3.2968997955322266

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[89, 100]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[45, 52, 55]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 45, 52]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 106, 116]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[89, 100]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.1249797344207764

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 45, 52] ccc => cc, Pos: [45, 52, 55] ccc => cc, Pos: [89, 100] cc => I, Pos: [89, 100] cc => I, Pos: [100, 106, 116] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 45, 52] ccc => cc, Pos: [100, 106, 116] ccc => cc]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 45, 52] ccc => cc
Apply:  Pos: [100, 106, 116] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [13, 6], [5, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [1, 3], [13, 5], [8, 2], [1, 11], [15, 8], [12, 9], [2, 9], [14, 15], [3, 7], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [8, 12], [15, 2], [1, 3], [4, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [4, 1], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [13, 6], [16, 6], [16, 5], [7, 12], [13, 5], [5, 8], [15, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [13, 16], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [16, 6], [1, 11], [14, 11], [9, 10], [4, 14], [12, 19], [18, 0], [8, 0], [3, 11], [7, 12], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [19, 9], ----End Timer [Execute Mapping]:  2.1249797344207764

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0781500339508057

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [5, 6], [13, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [1, 3], [13, 5], [8, 2], [1, 11], [15, 8], [2, 9], [12, 9], [14, 15], [3, 7], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [8, 12], [15, 2], [4, 3], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [4, 1], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [16, 6], [13, 6], [16, 5], [7, 12], [13, 5], [15, 8], [5, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [13, 16], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [16, 6], [14, 11], [1, 11], [9, 10], [4, 14], [12, 19], [8, 0], [18, 0], [3, 11], [7, 12], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [19, 9], ----End Timer [Execute Mapping]:  2.0781500339508057

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [129] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 258

Reduced: 
 - size: 51 (28.33%)
 - depth: 11 (24.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.06249570846557617

[4, 14], [15, 8], [14, 11], [18, 0], [9, 10], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [15, 2], [5, 6], [13, 16], [15, 8], [17, 18], [3, 11], [9, 10], [7, 12], [15, 8], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [5, 8], [15, 0], [13, 16], [5, 8], [12, 19], [15, 2], [11, 17], [5, 8], [14, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [14, 17], [15, 0], [12, 19], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [19, 9], [16, 6], [17, 18], [12, 19], [3, 7], [13, 5], [8, 2], [16, 6], [19, 9], [1, 11], [15, 8], [5, 6], [2, 9], [12, 19], [13, 16], [14, 15], [17, 18], [1, 3], [8, 2], [19, 9], [15, 0], [7, 8], [4, 14], [12, 19], [7, 8], [2, 9], [13, 16], [17, 15], [3, 7], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [4, 1], [8, 0], [3, 13], [11, 15], [19, 10], [14, 17], [12, 9], [4, 1], [5, 6], [12, 19], [14, 17], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [3, 13], [8, 12], [7, 5], [19, 9], [3, 13], [5, 6], [14, 11], [8, 2], [13, 5], [15, 2], [18, 0], [19, 10], [3, 13], [15, 2], [8, 0], [17, 18], [4, 14], [13, 16], [3, 11], [7, 8], [13, 6], [4, 14], [16, 5], [16, 6], [7, 12], [13, 5], [15, 8], [19, 9], [16, 6], [5, 8], [11, 17], [0, 2], [16, 6], [12, 10], [1, 11], [8, 2], [16, 6], [3, 11], [12, 9], [7, 5], [19, 10], [0, 2], [15, 8], [13, 6], [7, 5], [14, 11], [13, 6], [1, 11], [9, 10], [4, 14], [12, 19], [8, 0], [13, 6], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [13, 16], [4, 14], [11, 7], [5, 12], [2, 9], [17, 15], [13, 16], [7, 8], [5, 6], [13, 6], [1, 3], [4, 14], [19, 9], [13, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 17]
[14, 19]
[25, 27]
[27, 30]
[11, 32]
[30, 34]
[34, 39]
[35, 41]
[50, 56]
[51, 65]
[70, 73]
[63, 75]
[85, 92]
[60, 93]
[90, 95]
[103, 107]
[112, 116]
[119, 124]
[106, 130]
[126, 131]
[131, 135]
[135, 139]
[142, 147]
[146, 149]
[149, 155]
[152, 167]
[166, 172]
[167, 177]
[175, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 20, 29]
[31, 36, 43]
[62, 68, 72]
[80, 81, 85]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[49, 52, 57]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 17]
[14, 19]
[25, 27]
[27, 30]
[11, 32]
[30, 34]
[34, 39]
[35, 41]
[50, 56]
[51, 65]
[70, 73]
[63, 75]
[85, 92]
[60, 93]
[90, 95]
[103, 107]
[112, 116]
[119, 124]
[106, 130]
[126, 131]
[131, 135]
[135, 139]
[142, 147]
[146, 149]
[149, 155]
[152, 167]
[166, 172]
[167, 177]
[175, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.1875240802764893

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 17] cc => I, Pos: [4, 17] cc => I, Pos: [11, 32] cc => I, Pos: [11, 32] cc => I, Pos: [13, 20, 29] ccc => cc, Pos: [14, 19] cc => I, Pos: [14, 19] cc => I, Pos: [25, 27] cc => I, Pos: [25, 27] cc => I, Pos: [27, 30] cc => I, Pos: [27, 30] cc => I, Pos: [30, 34] cc => I, Pos: [30, 34] cc => I, Pos: [31, 36, 43] ccc => cc, Pos: [34, 39] cc => I, Pos: [34, 39] cc => I, Pos: [35, 41] cc => I, Pos: [35, 41] cc => I, Pos: [49, 52, 57] ccc => cc, Pos: [50, 56] cc => I, Pos: [50, 56] cc => I, Pos: [51, 65] cc => I, Pos: [51, 65] cc => I, Pos: [60, 93] cc => I, Pos: [60, 93] cc => I, Pos: [62, 68, 72] ccc => cc, Pos: [63, 75] cc => I, Pos: [63, 75] cc => I, Pos: [70, 73] cc => I, Pos: [70, 73] cc => I, Pos: [80, 81, 85] ccc => cc, Pos: [85, 92] cc => I, Pos: [85, 92] cc => I, Pos: [90, 95] cc => I, Pos: [90, 95] cc => I, Pos: [103, 107] cc => I, Pos: [103, 107] cc => I, Pos: [106, 130] cc => I, Pos: [106, 130] cc => I, Pos: [112, 116] cc => I, Pos: [112, 116] cc => I, Pos: [119, 124] cc => I, Pos: [119, 124] cc => I, Pos: [126, 131] cc => I, Pos: [126, 131] cc => I, Pos: [131, 135] cc => I, Pos: [131, 135] cc => I, Pos: [135, 139] cc => I, Pos: [135, 139] cc => I, Pos: [142, 147] cc => I, Pos: [142, 147] cc => I, Pos: [146, 149] cc => I, Pos: [146, 149] cc => I, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [152, 167] cc => I, Pos: [152, 167] cc => I, Pos: [166, 172] cc => I, Pos: [166, 172] cc => I, Pos: [167, 177] cc => I, Pos: [167, 177] cc => I, Pos: [175, 179] cc => I, Pos: [175, 179] cc => I]

--------End Timer [Generate Plans]:  0.06249642372131348

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 17] cc => I,
 Pos: [11, 32] cc => I,
 Pos: [13, 20, 29] ccc => cc,
 Pos: [14, 19] cc => I,
 Pos: [25, 27] cc => I,
 Pos: [30, 34] cc => I,
 Pos: [31, 36, 43] ccc => cc,
 Pos: [35, 41] cc => I,
 Pos: [49, 52, 57] ccc => cc,
 Pos: [50, 56] cc => I,
 Pos: [51, 65] cc => I,
 Pos: [60, 93] cc => I,
 Pos: [62, 68, 72] ccc => cc,
 Pos: [63, 75] cc => I,
 Pos: [70, 73] cc => I,
 Pos: [85, 92] cc => I,
 Pos: [90, 95] cc => I,
 Pos: [103, 107] cc => I,
 Pos: [106, 130] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [131, 135] cc => I,
 Pos: [142, 147] cc => I,
 Pos: [149, 155] cc => I,
 Pos: [152, 167] cc => I,
 Pos: [166, 172] cc => I,
 Pos: [175, 179] cc => I]
Change: 27, Saving: 28

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 17] cc => I
Apply:  Pos: [11, 32] cc => I
Apply:  Pos: [13, 20, 29] ccc => cc
Apply:  Pos: [14, 19] cc => I
Apply:  Pos: [25, 27] cc => I
Apply:  Pos: [30, 34] cc => I
Apply:  Pos: [31, 36, 43] ccc => cc
Apply:  Pos: [35, 41] cc => I
Apply:  Pos: [49, 52, 57] ccc => cc
Apply:  Pos: [50, 56] cc => I
Apply:  Pos: [51, 65] cc => I
Apply:  Pos: [60, 93] cc => I
Apply:  Pos: [62, 68, 72] ccc => cc
Apply:  Pos: [63, 75] cc => I
Apply:  Pos: [70, 73] cc => I
Apply:  Pos: [85, 92] cc => I
Apply:  Pos: [90, 95] cc => I
Apply:  Pos: [103, 107] cc => I
Apply:  Pos: [106, 130] cc => I
Apply:  Pos: [112, 116] cc => I
Apply:  Pos: [119, 124] cc => I
Apply:  Pos: [131, 135] cc => I
Apply:  Pos: [142, 147] cc => I
Apply:  Pos: [149, 155] cc => I
Apply:  Pos: [152, 167] cc => I
Apply:  Pos: [166, 172] cc => I
Apply:  Pos: [175, 179] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [5, 6], [13, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [3, 7], [13, 5], [8, 2], [1, 11], [15, 8], [2, 9], [12, 9], [14, 15], [1, 3], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [3, 7], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [13, 6], [16, 5], [16, 6], [7, 12], [13, 5], [15, 8], [5, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [16, 6], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [13, 6], [14, 11], [1, 11], [9, 10], [12, 19], [8, 0], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [4, 14], [19, 9], ----End Timer [Execute Mapping]:  3.2500205039978027

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 99]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 45, 52]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[99, 105, 114]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 99]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.078099250793457

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 45, 52] ccc => cc, Pos: [88, 99] cc => I, Pos: [88, 99] cc => I, Pos: [99, 105, 114] ccc => cc]

--------End Timer [Generate Plans]:  0.015625

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 45, 52] ccc => cc, Pos: [88, 99] cc => I]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 45, 52] ccc => cc
Apply:  Pos: [88, 99] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [13, 6], [5, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [1, 3], [13, 5], [8, 2], [1, 11], [15, 8], [12, 9], [2, 9], [14, 15], [3, 7], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 19], [12, 9], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [13, 6], [16, 5], [7, 12], [13, 5], [5, 8], [15, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [13, 6], [1, 11], [14, 11], [9, 10], [12, 19], [18, 0], [8, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [4, 14], [19, 9], ----End Timer [Execute Mapping]:  2.093724250793457

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[86, 102]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[86, 102]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0156219005584717

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [86, 102] cc => I, Pos: [86, 102] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [86, 102] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [86, 102] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [5, 6], [13, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [1, 3], [13, 5], [8, 2], [1, 11], [15, 8], [2, 9], [12, 9], [14, 15], [3, 7], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [16, 5], [7, 12], [13, 5], [15, 8], [5, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [14, 11], [1, 11], [9, 10], [12, 19], [8, 0], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [4, 14], [19, 9], ----End Timer [Execute Mapping]:  2.0156219005584717

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9844372272491455

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [13, 6], [5, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [1, 3], [13, 5], [8, 2], [1, 11], [15, 8], [12, 9], [2, 9], [14, 15], [3, 7], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 19], [12, 9], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [16, 5], [7, 12], [13, 5], [5, 8], [15, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [1, 11], [14, 11], [9, 10], [12, 19], [18, 0], [8, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [4, 14], [19, 9], ----End Timer [Execute Mapping]:  1.9844372272491455

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [125] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 250

Reduced: 
 - size: 55 (30.56%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.06249499320983887

[4, 14], [15, 8], [14, 11], [18, 0], [9, 10], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [15, 2], [5, 6], [13, 16], [15, 8], [17, 18], [3, 11], [9, 10], [7, 12], [15, 8], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [5, 8], [15, 0], [13, 16], [5, 8], [12, 19], [15, 2], [11, 17], [5, 8], [14, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [14, 17], [15, 0], [12, 19], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [19, 9], [16, 6], [17, 18], [12, 19], [3, 7], [13, 5], [8, 2], [16, 6], [19, 9], [1, 11], [15, 8], [5, 6], [2, 9], [12, 19], [13, 16], [14, 15], [17, 18], [1, 3], [8, 2], [19, 9], [15, 0], [7, 8], [4, 14], [12, 19], [7, 8], [2, 9], [13, 16], [17, 15], [3, 7], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [4, 1], [8, 0], [3, 13], [11, 15], [19, 10], [14, 17], [12, 9], [4, 1], [5, 6], [12, 19], [14, 17], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [3, 13], [8, 12], [7, 5], [19, 9], [3, 13], [5, 6], [14, 11], [8, 2], [13, 5], [15, 2], [18, 0], [19, 10], [3, 13], [15, 2], [8, 0], [17, 18], [4, 14], [13, 16], [3, 11], [7, 8], [13, 6], [4, 14], [16, 5], [16, 6], [7, 12], [13, 5], [15, 8], [19, 9], [16, 6], [5, 8], [11, 17], [0, 2], [16, 6], [12, 10], [1, 11], [8, 2], [16, 6], [3, 11], [12, 9], [7, 5], [19, 10], [0, 2], [15, 8], [13, 6], [7, 5], [14, 11], [13, 6], [1, 11], [9, 10], [4, 14], [12, 19], [8, 0], [13, 6], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [13, 16], [4, 14], [11, 7], [5, 12], [2, 9], [17, 15], [13, 16], [7, 8], [5, 6], [13, 6], [1, 3], [4, 14], [19, 9], [13, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 17]
[14, 19]
[25, 27]
[27, 30]
[11, 32]
[30, 34]
[34, 39]
[35, 41]
[50, 56]
[51, 65]
[70, 73]
[63, 75]
[85, 92]
[60, 93]
[90, 95]
[103, 107]
[112, 116]
[119, 124]
[106, 130]
[126, 131]
[131, 135]
[135, 139]
[142, 147]
[146, 149]
[149, 155]
[152, 167]
[166, 172]
[167, 177]
[175, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 20, 29]
[31, 36, 43]
[62, 68, 72]
[80, 81, 85]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[49, 52, 57]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 17]
[14, 19]
[25, 27]
[27, 30]
[11, 32]
[30, 34]
[34, 39]
[35, 41]
[50, 56]
[51, 65]
[70, 73]
[63, 75]
[85, 92]
[60, 93]
[90, 95]
[103, 107]
[112, 116]
[119, 124]
[106, 130]
[126, 131]
[131, 135]
[135, 139]
[142, 147]
[146, 149]
[149, 155]
[152, 167]
[166, 172]
[167, 177]
[175, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.265920639038086

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 17] cc => I, Pos: [4, 17] cc => I, Pos: [11, 32] cc => I, Pos: [11, 32] cc => I, Pos: [13, 20, 29] ccc => cc, Pos: [14, 19] cc => I, Pos: [14, 19] cc => I, Pos: [25, 27] cc => I, Pos: [25, 27] cc => I, Pos: [27, 30] cc => I, Pos: [27, 30] cc => I, Pos: [30, 34] cc => I, Pos: [30, 34] cc => I, Pos: [31, 36, 43] ccc => cc, Pos: [34, 39] cc => I, Pos: [34, 39] cc => I, Pos: [35, 41] cc => I, Pos: [35, 41] cc => I, Pos: [49, 52, 57] ccc => cc, Pos: [50, 56] cc => I, Pos: [50, 56] cc => I, Pos: [51, 65] cc => I, Pos: [51, 65] cc => I, Pos: [60, 93] cc => I, Pos: [60, 93] cc => I, Pos: [62, 68, 72] ccc => cc, Pos: [63, 75] cc => I, Pos: [63, 75] cc => I, Pos: [70, 73] cc => I, Pos: [70, 73] cc => I, Pos: [80, 81, 85] ccc => cc, Pos: [85, 92] cc => I, Pos: [85, 92] cc => I, Pos: [90, 95] cc => I, Pos: [90, 95] cc => I, Pos: [103, 107] cc => I, Pos: [103, 107] cc => I, Pos: [106, 130] cc => I, Pos: [106, 130] cc => I, Pos: [112, 116] cc => I, Pos: [112, 116] cc => I, Pos: [119, 124] cc => I, Pos: [119, 124] cc => I, Pos: [126, 131] cc => I, Pos: [126, 131] cc => I, Pos: [131, 135] cc => I, Pos: [131, 135] cc => I, Pos: [135, 139] cc => I, Pos: [135, 139] cc => I, Pos: [142, 147] cc => I, Pos: [142, 147] cc => I, Pos: [146, 149] cc => I, Pos: [146, 149] cc => I, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [152, 167] cc => I, Pos: [152, 167] cc => I, Pos: [166, 172] cc => I, Pos: [166, 172] cc => I, Pos: [167, 177] cc => I, Pos: [167, 177] cc => I, Pos: [175, 179] cc => I, Pos: [175, 179] cc => I]

--------End Timer [Generate Plans]:  0.07813477516174316

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 17] cc => I,
 Pos: [11, 32] cc => I,
 Pos: [13, 20, 29] ccc => cc,
 Pos: [14, 19] cc => I,
 Pos: [25, 27] cc => I,
 Pos: [34, 39] cc => I,
 Pos: [31, 36, 43] ccc => cc,
 Pos: [35, 41] cc => I,
 Pos: [49, 52, 57] ccc => cc,
 Pos: [50, 56] cc => I,
 Pos: [51, 65] cc => I,
 Pos: [60, 93] cc => I,
 Pos: [62, 68, 72] ccc => cc,
 Pos: [63, 75] cc => I,
 Pos: [70, 73] cc => I,
 Pos: [80, 81, 85] ccc => cc,
 Pos: [90, 95] cc => I,
 Pos: [103, 107] cc => I,
 Pos: [106, 130] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 131] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [142, 147] cc => I,
 Pos: [149, 155] cc => I,
 Pos: [167, 177] cc => I,
 Pos: [166, 172] cc => I,
 Pos: [175, 179] cc => I]
Change: 28, Saving: 30

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 17] cc => I
Apply:  Pos: [11, 32] cc => I
Apply:  Pos: [13, 20, 29] ccc => cc
Apply:  Pos: [14, 19] cc => I
Apply:  Pos: [25, 27] cc => I
Apply:  Pos: [34, 39] cc => I
Apply:  Pos: [31, 36, 43] ccc => cc
Apply:  Pos: [35, 41] cc => I
Apply:  Pos: [49, 52, 57] ccc => cc
Apply:  Pos: [50, 56] cc => I
Apply:  Pos: [51, 65] cc => I
Apply:  Pos: [60, 93] cc => I
Apply:  Pos: [62, 68, 72] ccc => cc
Apply:  Pos: [63, 75] cc => I
Apply:  Pos: [70, 73] cc => I
Apply:  Pos: [80, 81, 85] ccc => cc
Apply:  Pos: [90, 95] cc => I
Apply:  Pos: [103, 107] cc => I
Apply:  Pos: [106, 130] cc => I
Apply:  Pos: [112, 116] cc => I
Apply:  Pos: [119, 124] cc => I
Apply:  Pos: [126, 131] cc => I
Apply:  Pos: [135, 139] cc => I
Apply:  Pos: [142, 147] cc => I
Apply:  Pos: [149, 155] cc => I
Apply:  Pos: [167, 177] cc => I
Apply:  Pos: [166, 172] cc => I
Apply:  Pos: [175, 179] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [5, 6], [13, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [3, 7], [15, 0], [5, 8], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [3, 7], [13, 5], [8, 2], [1, 11], [15, 8], [2, 9], [12, 9], [14, 15], [1, 3], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [3, 7], [8, 12], [15, 2], [4, 3], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [4, 1], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [13, 6], [16, 5], [7, 12], [13, 5], [15, 8], [5, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [13, 6], [14, 11], [1, 11], [9, 10], [4, 14], [12, 19], [8, 0], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [19, 9], ----End Timer [Execute Mapping]:  3.344055414199829

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 104]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[45, 52, 55]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 45, 52]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 104]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.094012498855591

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 45, 52] ccc => cc, Pos: [45, 52, 55] ccc => cc, Pos: [88, 104] cc => I, Pos: [88, 104] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [45, 52, 55] ccc => cc, Pos: [88, 104] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [45, 52, 55] ccc => cc
Apply:  Pos: [88, 104] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [13, 6], [5, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [3, 7], [15, 0], [5, 8], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [3, 7], [13, 5], [8, 2], [1, 11], [15, 8], [12, 9], [2, 9], [14, 15], [1, 7], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [3, 7], [8, 12], [15, 2], [4, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [4, 1], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [16, 5], [7, 12], [13, 5], [5, 8], [15, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [1, 11], [14, 11], [9, 10], [4, 14], [12, 19], [18, 0], [8, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [19, 9], ----End Timer [Execute Mapping]:  2.094012498855591

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0313966274261475

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [5, 6], [13, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [3, 7], [15, 0], [5, 8], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [3, 7], [13, 5], [8, 2], [1, 11], [15, 8], [2, 9], [12, 9], [14, 15], [1, 7], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [3, 7], [8, 12], [15, 2], [4, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [4, 1], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [16, 5], [7, 12], [13, 5], [15, 8], [5, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [14, 11], [1, 11], [9, 10], [4, 14], [12, 19], [8, 0], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [19, 9], ----End Timer [Execute Mapping]:  2.0313966274261475

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [126] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 252

Reduced: 
 - size: 54 (30.00%)
 - depth: 11 (24.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.0783088207244873

[4, 14], [15, 8], [14, 11], [18, 0], [9, 10], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [15, 2], [5, 6], [13, 16], [15, 8], [17, 18], [3, 11], [9, 10], [7, 12], [15, 8], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [5, 8], [15, 0], [13, 16], [5, 8], [12, 19], [15, 2], [11, 17], [5, 8], [14, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [14, 17], [15, 0], [12, 19], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [19, 9], [16, 6], [17, 18], [12, 19], [3, 7], [13, 5], [8, 2], [16, 6], [19, 9], [1, 11], [15, 8], [5, 6], [2, 9], [12, 19], [13, 16], [14, 15], [17, 18], [1, 3], [8, 2], [19, 9], [15, 0], [7, 8], [4, 14], [12, 19], [7, 8], [2, 9], [13, 16], [17, 15], [3, 7], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [4, 1], [8, 0], [3, 13], [11, 15], [19, 10], [14, 17], [12, 9], [4, 1], [5, 6], [12, 19], [14, 17], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [3, 13], [8, 12], [7, 5], [19, 9], [3, 13], [5, 6], [14, 11], [8, 2], [13, 5], [15, 2], [18, 0], [19, 10], [3, 13], [15, 2], [8, 0], [17, 18], [4, 14], [13, 16], [3, 11], [7, 8], [13, 6], [4, 14], [16, 5], [16, 6], [7, 12], [13, 5], [15, 8], [19, 9], [16, 6], [5, 8], [11, 17], [0, 2], [16, 6], [12, 10], [1, 11], [8, 2], [16, 6], [3, 11], [12, 9], [7, 5], [19, 10], [0, 2], [15, 8], [13, 6], [7, 5], [14, 11], [13, 6], [1, 11], [9, 10], [4, 14], [12, 19], [8, 0], [13, 6], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [13, 16], [4, 14], [11, 7], [5, 12], [2, 9], [17, 15], [13, 16], [7, 8], [5, 6], [13, 6], [1, 3], [4, 14], [19, 9], [13, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 17]
[14, 19]
[25, 27]
[27, 30]
[11, 32]
[30, 34]
[34, 39]
[35, 41]
[50, 56]
[51, 65]
[70, 73]
[63, 75]
[85, 92]
[60, 93]
[90, 95]
[103, 107]
[112, 116]
[119, 124]
[106, 130]
[126, 131]
[131, 135]
[135, 139]
[142, 147]
[146, 149]
[149, 155]
[152, 167]
[166, 172]
[167, 177]
[175, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 20, 29]
[31, 36, 43]
[62, 68, 72]
[80, 81, 85]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[49, 52, 57]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 17]
[14, 19]
[25, 27]
[27, 30]
[11, 32]
[30, 34]
[34, 39]
[35, 41]
[50, 56]
[51, 65]
[70, 73]
[63, 75]
[85, 92]
[60, 93]
[90, 95]
[103, 107]
[112, 116]
[119, 124]
[106, 130]
[126, 131]
[131, 135]
[135, 139]
[142, 147]
[146, 149]
[149, 155]
[152, 167]
[166, 172]
[167, 177]
[175, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2341837882995605

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 17] cc => I, Pos: [4, 17] cc => I, Pos: [11, 32] cc => I, Pos: [11, 32] cc => I, Pos: [13, 20, 29] ccc => cc, Pos: [14, 19] cc => I, Pos: [14, 19] cc => I, Pos: [25, 27] cc => I, Pos: [25, 27] cc => I, Pos: [27, 30] cc => I, Pos: [27, 30] cc => I, Pos: [30, 34] cc => I, Pos: [30, 34] cc => I, Pos: [31, 36, 43] ccc => cc, Pos: [34, 39] cc => I, Pos: [34, 39] cc => I, Pos: [35, 41] cc => I, Pos: [35, 41] cc => I, Pos: [49, 52, 57] ccc => cc, Pos: [50, 56] cc => I, Pos: [50, 56] cc => I, Pos: [51, 65] cc => I, Pos: [51, 65] cc => I, Pos: [60, 93] cc => I, Pos: [60, 93] cc => I, Pos: [62, 68, 72] ccc => cc, Pos: [63, 75] cc => I, Pos: [63, 75] cc => I, Pos: [70, 73] cc => I, Pos: [70, 73] cc => I, Pos: [80, 81, 85] ccc => cc, Pos: [85, 92] cc => I, Pos: [85, 92] cc => I, Pos: [90, 95] cc => I, Pos: [90, 95] cc => I, Pos: [103, 107] cc => I, Pos: [103, 107] cc => I, Pos: [106, 130] cc => I, Pos: [106, 130] cc => I, Pos: [112, 116] cc => I, Pos: [112, 116] cc => I, Pos: [119, 124] cc => I, Pos: [119, 124] cc => I, Pos: [126, 131] cc => I, Pos: [126, 131] cc => I, Pos: [131, 135] cc => I, Pos: [131, 135] cc => I, Pos: [135, 139] cc => I, Pos: [135, 139] cc => I, Pos: [142, 147] cc => I, Pos: [142, 147] cc => I, Pos: [146, 149] cc => I, Pos: [146, 149] cc => I, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [152, 167] cc => I, Pos: [152, 167] cc => I, Pos: [166, 172] cc => I, Pos: [166, 172] cc => I, Pos: [167, 177] cc => I, Pos: [167, 177] cc => I, Pos: [175, 179] cc => I, Pos: [175, 179] cc => I]

--------End Timer [Generate Plans]:  0.07813358306884766

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 17] cc => I,
 Pos: [11, 32] cc => I,
 Pos: [13, 20, 29] ccc => cc,
 Pos: [14, 19] cc => I,
 Pos: [25, 27] cc => I,
 Pos: [34, 39] cc => I,
 Pos: [31, 36, 43] ccc => cc,
 Pos: [35, 41] cc => I,
 Pos: [49, 52, 57] ccc => cc,
 Pos: [50, 56] cc => I,
 Pos: [51, 65] cc => I,
 Pos: [60, 93] cc => I,
 Pos: [62, 68, 72] ccc => cc,
 Pos: [63, 75] cc => I,
 Pos: [70, 73] cc => I,
 Pos: [80, 81, 85] ccc => cc,
 Pos: [90, 95] cc => I,
 Pos: [103, 107] cc => I,
 Pos: [106, 130] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 131] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [142, 147] cc => I,
 Pos: [149, 155] cc => I,
 Pos: [152, 167] cc => I,
 Pos: [166, 172] cc => I,
 Pos: [175, 179] cc => I]
Change: 28, Saving: 30

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 17] cc => I
Apply:  Pos: [11, 32] cc => I
Apply:  Pos: [13, 20, 29] ccc => cc
Apply:  Pos: [14, 19] cc => I
Apply:  Pos: [25, 27] cc => I
Apply:  Pos: [34, 39] cc => I
Apply:  Pos: [31, 36, 43] ccc => cc
Apply:  Pos: [35, 41] cc => I
Apply:  Pos: [49, 52, 57] ccc => cc
Apply:  Pos: [50, 56] cc => I
Apply:  Pos: [51, 65] cc => I
Apply:  Pos: [60, 93] cc => I
Apply:  Pos: [62, 68, 72] ccc => cc
Apply:  Pos: [63, 75] cc => I
Apply:  Pos: [70, 73] cc => I
Apply:  Pos: [80, 81, 85] ccc => cc
Apply:  Pos: [90, 95] cc => I
Apply:  Pos: [103, 107] cc => I
Apply:  Pos: [106, 130] cc => I
Apply:  Pos: [112, 116] cc => I
Apply:  Pos: [119, 124] cc => I
Apply:  Pos: [126, 131] cc => I
Apply:  Pos: [135, 139] cc => I
Apply:  Pos: [142, 147] cc => I
Apply:  Pos: [149, 155] cc => I
Apply:  Pos: [152, 167] cc => I
Apply:  Pos: [166, 172] cc => I
Apply:  Pos: [175, 179] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [5, 6], [13, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [3, 7], [15, 0], [5, 8], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [3, 7], [13, 5], [8, 2], [1, 11], [15, 8], [2, 9], [12, 9], [14, 15], [1, 3], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [3, 7], [8, 12], [15, 2], [4, 3], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [4, 1], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [13, 6], [16, 5], [7, 12], [13, 5], [15, 8], [5, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [13, 6], [14, 11], [1, 11], [9, 10], [12, 19], [8, 0], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [4, 14], [19, 9], ----End Timer [Execute Mapping]:  3.312317371368408

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 104]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[45, 52, 55]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 45, 52]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 104]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0937716960906982

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 45, 52] ccc => cc, Pos: [45, 52, 55] ccc => cc, Pos: [88, 104] cc => I, Pos: [88, 104] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 45, 52] ccc => cc, Pos: [88, 104] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 45, 52] ccc => cc
Apply:  Pos: [88, 104] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [13, 6], [5, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [3, 7], [15, 0], [5, 8], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [1, 3], [13, 5], [8, 2], [1, 11], [15, 8], [12, 9], [2, 9], [14, 15], [3, 7], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [8, 12], [15, 2], [1, 3], [4, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [4, 1], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [16, 5], [7, 12], [13, 5], [5, 8], [15, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [1, 11], [14, 11], [9, 10], [12, 19], [18, 0], [8, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [4, 14], [19, 9], ----End Timer [Execute Mapping]:  2.0937716960906982

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.015655040740967

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [5, 6], [13, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [3, 7], [15, 0], [5, 8], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [1, 3], [13, 5], [8, 2], [1, 11], [15, 8], [2, 9], [12, 9], [14, 15], [3, 7], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [8, 12], [15, 2], [4, 3], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [4, 1], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [16, 5], [7, 12], [13, 5], [15, 8], [5, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [14, 11], [1, 11], [9, 10], [12, 19], [8, 0], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [4, 14], [19, 9], ----End Timer [Execute Mapping]:  2.015655040740967

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [126] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 252

Reduced: 
 - size: 54 (30.00%)
 - depth: 11 (24.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07813239097595215

[4, 14], [15, 8], [14, 11], [18, 0], [9, 10], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [15, 2], [5, 6], [13, 16], [15, 8], [17, 18], [3, 11], [9, 10], [7, 12], [15, 8], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [5, 8], [15, 0], [13, 16], [5, 8], [12, 19], [15, 2], [11, 17], [5, 8], [14, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [14, 17], [15, 0], [12, 19], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [19, 9], [16, 6], [17, 18], [12, 19], [3, 7], [13, 5], [8, 2], [16, 6], [19, 9], [1, 11], [15, 8], [5, 6], [2, 9], [12, 19], [13, 16], [14, 15], [17, 18], [1, 3], [8, 2], [19, 9], [15, 0], [7, 8], [4, 14], [12, 19], [7, 8], [2, 9], [13, 16], [17, 15], [3, 7], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [4, 1], [8, 0], [3, 13], [11, 15], [19, 10], [14, 17], [12, 9], [4, 1], [5, 6], [12, 19], [14, 17], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [3, 13], [8, 12], [7, 5], [19, 9], [3, 13], [5, 6], [14, 11], [8, 2], [13, 5], [15, 2], [18, 0], [19, 10], [3, 13], [15, 2], [8, 0], [17, 18], [4, 14], [13, 16], [3, 11], [7, 8], [13, 6], [4, 14], [16, 5], [16, 6], [7, 12], [13, 5], [15, 8], [19, 9], [16, 6], [5, 8], [11, 17], [0, 2], [16, 6], [12, 10], [1, 11], [8, 2], [16, 6], [3, 11], [12, 9], [7, 5], [19, 10], [0, 2], [15, 8], [13, 6], [7, 5], [14, 11], [13, 6], [1, 11], [9, 10], [4, 14], [12, 19], [8, 0], [13, 6], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [13, 16], [4, 14], [11, 7], [5, 12], [2, 9], [17, 15], [13, 16], [7, 8], [5, 6], [13, 6], [1, 3], [4, 14], [19, 9], [13, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 17]
[14, 19]
[25, 27]
[27, 30]
[11, 32]
[30, 34]
[34, 39]
[35, 41]
[50, 56]
[51, 65]
[70, 73]
[63, 75]
[85, 92]
[60, 93]
[90, 95]
[103, 107]
[112, 116]
[119, 124]
[106, 130]
[126, 131]
[131, 135]
[135, 139]
[142, 147]
[146, 149]
[149, 155]
[152, 167]
[166, 172]
[167, 177]
[175, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 20, 29]
[31, 36, 43]
[62, 68, 72]
[80, 81, 85]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[49, 52, 57]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 17]
[14, 19]
[25, 27]
[27, 30]
[11, 32]
[30, 34]
[34, 39]
[35, 41]
[50, 56]
[51, 65]
[70, 73]
[63, 75]
[85, 92]
[60, 93]
[90, 95]
[103, 107]
[112, 116]
[119, 124]
[106, 130]
[126, 131]
[131, 135]
[135, 139]
[142, 147]
[146, 149]
[149, 155]
[152, 167]
[166, 172]
[167, 177]
[175, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2031896114349365

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 17] cc => I, Pos: [4, 17] cc => I, Pos: [11, 32] cc => I, Pos: [11, 32] cc => I, Pos: [13, 20, 29] ccc => cc, Pos: [14, 19] cc => I, Pos: [14, 19] cc => I, Pos: [25, 27] cc => I, Pos: [25, 27] cc => I, Pos: [27, 30] cc => I, Pos: [27, 30] cc => I, Pos: [30, 34] cc => I, Pos: [30, 34] cc => I, Pos: [31, 36, 43] ccc => cc, Pos: [34, 39] cc => I, Pos: [34, 39] cc => I, Pos: [35, 41] cc => I, Pos: [35, 41] cc => I, Pos: [49, 52, 57] ccc => cc, Pos: [50, 56] cc => I, Pos: [50, 56] cc => I, Pos: [51, 65] cc => I, Pos: [51, 65] cc => I, Pos: [60, 93] cc => I, Pos: [60, 93] cc => I, Pos: [62, 68, 72] ccc => cc, Pos: [63, 75] cc => I, Pos: [63, 75] cc => I, Pos: [70, 73] cc => I, Pos: [70, 73] cc => I, Pos: [80, 81, 85] ccc => cc, Pos: [85, 92] cc => I, Pos: [85, 92] cc => I, Pos: [90, 95] cc => I, Pos: [90, 95] cc => I, Pos: [103, 107] cc => I, Pos: [103, 107] cc => I, Pos: [106, 130] cc => I, Pos: [106, 130] cc => I, Pos: [112, 116] cc => I, Pos: [112, 116] cc => I, Pos: [119, 124] cc => I, Pos: [119, 124] cc => I, Pos: [126, 131] cc => I, Pos: [126, 131] cc => I, Pos: [131, 135] cc => I, Pos: [131, 135] cc => I, Pos: [135, 139] cc => I, Pos: [135, 139] cc => I, Pos: [142, 147] cc => I, Pos: [142, 147] cc => I, Pos: [146, 149] cc => I, Pos: [146, 149] cc => I, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [152, 167] cc => I, Pos: [152, 167] cc => I, Pos: [166, 172] cc => I, Pos: [166, 172] cc => I, Pos: [167, 177] cc => I, Pos: [167, 177] cc => I, Pos: [175, 179] cc => I, Pos: [175, 179] cc => I]

--------End Timer [Generate Plans]:  0.0781245231628418

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 17] cc => I,
 Pos: [11, 32] cc => I,
 Pos: [13, 20, 29] ccc => cc,
 Pos: [14, 19] cc => I,
 Pos: [27, 30] cc => I,
 Pos: [31, 36, 43] ccc => cc,
 Pos: [34, 39] cc => I,
 Pos: [35, 41] cc => I,
 Pos: [49, 52, 57] ccc => cc,
 Pos: [50, 56] cc => I,
 Pos: [51, 65] cc => I,
 Pos: [60, 93] cc => I,
 Pos: [62, 68, 72] ccc => cc,
 Pos: [63, 75] cc => I,
 Pos: [70, 73] cc => I,
 Pos: [85, 92] cc => I,
 Pos: [90, 95] cc => I,
 Pos: [103, 107] cc => I,
 Pos: [106, 130] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 131] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [142, 147] cc => I,
 Pos: [146, 149] cc => I,
 Pos: [152, 167] cc => I,
 Pos: [166, 172] cc => I,
 Pos: [175, 179] cc => I]
Change: 28, Saving: 29

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 17] cc => I
Apply:  Pos: [11, 32] cc => I
Apply:  Pos: [13, 20, 29] ccc => cc
Apply:  Pos: [14, 19] cc => I
Apply:  Pos: [27, 30] cc => I
Apply:  Pos: [31, 36, 43] ccc => cc
Apply:  Pos: [34, 39] cc => I
Apply:  Pos: [35, 41] cc => I
Apply:  Pos: [49, 52, 57] ccc => cc
Apply:  Pos: [50, 56] cc => I
Apply:  Pos: [51, 65] cc => I
Apply:  Pos: [60, 93] cc => I
Apply:  Pos: [62, 68, 72] ccc => cc
Apply:  Pos: [63, 75] cc => I
Apply:  Pos: [70, 73] cc => I
Apply:  Pos: [85, 92] cc => I
Apply:  Pos: [90, 95] cc => I
Apply:  Pos: [103, 107] cc => I
Apply:  Pos: [106, 130] cc => I
Apply:  Pos: [112, 116] cc => I
Apply:  Pos: [119, 124] cc => I
Apply:  Pos: [126, 131] cc => I
Apply:  Pos: [135, 139] cc => I
Apply:  Pos: [142, 147] cc => I
Apply:  Pos: [146, 149] cc => I
Apply:  Pos: [152, 167] cc => I
Apply:  Pos: [166, 172] cc => I
Apply:  Pos: [175, 179] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [5, 6], [13, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [3, 7], [13, 5], [8, 2], [1, 11], [15, 8], [2, 9], [12, 9], [14, 15], [1, 3], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [3, 7], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [13, 6], [16, 5], [7, 12], [13, 5], [15, 8], [5, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [14, 11], [1, 11], [9, 10], [12, 19], [8, 0], [13, 6], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [4, 14], [19, 9], ----End Timer [Execute Mapping]:  3.2813141345977783

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[87, 108]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 45, 52]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[87, 108]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0468525886535645

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 45, 52] ccc => cc, Pos: [87, 108] cc => I, Pos: [87, 108] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 45, 52] ccc => cc, Pos: [87, 108] cc => I]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 45, 52] ccc => cc
Apply:  Pos: [87, 108] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [13, 6], [5, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [1, 3], [13, 5], [8, 2], [1, 11], [15, 8], [12, 9], [2, 9], [14, 15], [3, 7], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 19], [12, 9], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [16, 5], [7, 12], [13, 5], [5, 8], [15, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [1, 11], [14, 11], [9, 10], [12, 19], [8, 0], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [4, 14], [19, 9], ----End Timer [Execute Mapping]:  2.0468525886535645

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.00003719329834

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [5, 6], [13, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [1, 3], [13, 5], [8, 2], [1, 11], [15, 8], [2, 9], [12, 9], [14, 15], [3, 7], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [16, 5], [7, 12], [13, 5], [15, 8], [5, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [14, 11], [1, 11], [9, 10], [12, 19], [18, 0], [8, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [4, 14], [19, 9], ----End Timer [Execute Mapping]:  2.00003719329834

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [125] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 250

Reduced: 
 - size: 55 (30.56%)
 - depth: 11 (24.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.062482357025146484

[4, 14], [15, 8], [14, 11], [18, 0], [9, 10], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [15, 2], [5, 6], [13, 16], [15, 8], [17, 18], [3, 11], [9, 10], [7, 12], [15, 8], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [5, 8], [15, 0], [13, 16], [5, 8], [12, 19], [15, 2], [11, 17], [5, 8], [14, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [14, 17], [15, 0], [12, 19], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [19, 9], [16, 6], [17, 18], [12, 19], [3, 7], [13, 5], [8, 2], [16, 6], [19, 9], [1, 11], [15, 8], [5, 6], [2, 9], [12, 19], [13, 16], [14, 15], [17, 18], [1, 3], [8, 2], [19, 9], [15, 0], [7, 8], [4, 14], [12, 19], [7, 8], [2, 9], [13, 16], [17, 15], [3, 7], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [4, 1], [8, 0], [3, 13], [11, 15], [19, 10], [14, 17], [12, 9], [4, 1], [5, 6], [12, 19], [14, 17], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [3, 13], [8, 12], [7, 5], [19, 9], [3, 13], [5, 6], [14, 11], [8, 2], [13, 5], [15, 2], [18, 0], [19, 10], [3, 13], [15, 2], [8, 0], [17, 18], [4, 14], [13, 16], [3, 11], [7, 8], [13, 6], [4, 14], [16, 5], [16, 6], [7, 12], [13, 5], [15, 8], [19, 9], [16, 6], [5, 8], [11, 17], [0, 2], [16, 6], [12, 10], [1, 11], [8, 2], [16, 6], [3, 11], [12, 9], [7, 5], [19, 10], [0, 2], [15, 8], [13, 6], [7, 5], [14, 11], [13, 6], [1, 11], [9, 10], [4, 14], [12, 19], [8, 0], [13, 6], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [13, 16], [4, 14], [11, 7], [5, 12], [2, 9], [17, 15], [13, 16], [7, 8], [5, 6], [13, 6], [1, 3], [4, 14], [19, 9], [13, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 17]
[14, 19]
[25, 27]
[27, 30]
[11, 32]
[30, 34]
[34, 39]
[35, 41]
[50, 56]
[51, 65]
[70, 73]
[63, 75]
[85, 92]
[60, 93]
[90, 95]
[103, 107]
[112, 116]
[119, 124]
[106, 130]
[126, 131]
[131, 135]
[135, 139]
[142, 147]
[146, 149]
[149, 155]
[152, 167]
[166, 172]
[167, 177]
[175, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 20, 29]
[31, 36, 43]
[62, 68, 72]
[80, 81, 85]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[49, 52, 57]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 17]
[14, 19]
[25, 27]
[27, 30]
[11, 32]
[30, 34]
[34, 39]
[35, 41]
[50, 56]
[51, 65]
[70, 73]
[63, 75]
[85, 92]
[60, 93]
[90, 95]
[103, 107]
[112, 116]
[119, 124]
[106, 130]
[126, 131]
[131, 135]
[135, 139]
[142, 147]
[146, 149]
[149, 155]
[152, 167]
[166, 172]
[167, 177]
[175, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2188310623168945

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 17] cc => I, Pos: [4, 17] cc => I, Pos: [11, 32] cc => I, Pos: [11, 32] cc => I, Pos: [13, 20, 29] ccc => cc, Pos: [14, 19] cc => I, Pos: [14, 19] cc => I, Pos: [25, 27] cc => I, Pos: [25, 27] cc => I, Pos: [27, 30] cc => I, Pos: [27, 30] cc => I, Pos: [30, 34] cc => I, Pos: [30, 34] cc => I, Pos: [31, 36, 43] ccc => cc, Pos: [34, 39] cc => I, Pos: [34, 39] cc => I, Pos: [35, 41] cc => I, Pos: [35, 41] cc => I, Pos: [49, 52, 57] ccc => cc, Pos: [50, 56] cc => I, Pos: [50, 56] cc => I, Pos: [51, 65] cc => I, Pos: [51, 65] cc => I, Pos: [60, 93] cc => I, Pos: [60, 93] cc => I, Pos: [62, 68, 72] ccc => cc, Pos: [63, 75] cc => I, Pos: [63, 75] cc => I, Pos: [70, 73] cc => I, Pos: [70, 73] cc => I, Pos: [80, 81, 85] ccc => cc, Pos: [85, 92] cc => I, Pos: [85, 92] cc => I, Pos: [90, 95] cc => I, Pos: [90, 95] cc => I, Pos: [103, 107] cc => I, Pos: [103, 107] cc => I, Pos: [106, 130] cc => I, Pos: [106, 130] cc => I, Pos: [112, 116] cc => I, Pos: [112, 116] cc => I, Pos: [119, 124] cc => I, Pos: [119, 124] cc => I, Pos: [126, 131] cc => I, Pos: [126, 131] cc => I, Pos: [131, 135] cc => I, Pos: [131, 135] cc => I, Pos: [135, 139] cc => I, Pos: [135, 139] cc => I, Pos: [142, 147] cc => I, Pos: [142, 147] cc => I, Pos: [146, 149] cc => I, Pos: [146, 149] cc => I, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [152, 167] cc => I, Pos: [152, 167] cc => I, Pos: [166, 172] cc => I, Pos: [166, 172] cc => I, Pos: [167, 177] cc => I, Pos: [167, 177] cc => I, Pos: [175, 179] cc => I, Pos: [175, 179] cc => I]

--------End Timer [Generate Plans]:  0.07812070846557617

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 17] cc => I,
 Pos: [11, 32] cc => I,
 Pos: [13, 20, 29] ccc => cc,
 Pos: [14, 19] cc => I,
 Pos: [27, 30] cc => I,
 Pos: [31, 36, 43] ccc => cc,
 Pos: [34, 39] cc => I,
 Pos: [35, 41] cc => I,
 Pos: [49, 52, 57] ccc => cc,
 Pos: [50, 56] cc => I,
 Pos: [51, 65] cc => I,
 Pos: [60, 93] cc => I,
 Pos: [62, 68, 72] ccc => cc,
 Pos: [63, 75] cc => I,
 Pos: [70, 73] cc => I,
 Pos: [85, 92] cc => I,
 Pos: [90, 95] cc => I,
 Pos: [103, 107] cc => I,
 Pos: [106, 130] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 131] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [142, 147] cc => I,
 Pos: [146, 149] cc => I,
 Pos: [152, 167] cc => I,
 Pos: [166, 172] cc => I,
 Pos: [175, 179] cc => I]
Change: 28, Saving: 29

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 17] cc => I
Apply:  Pos: [11, 32] cc => I
Apply:  Pos: [13, 20, 29] ccc => cc
Apply:  Pos: [14, 19] cc => I
Apply:  Pos: [27, 30] cc => I
Apply:  Pos: [31, 36, 43] ccc => cc
Apply:  Pos: [34, 39] cc => I
Apply:  Pos: [35, 41] cc => I
Apply:  Pos: [49, 52, 57] ccc => cc
Apply:  Pos: [50, 56] cc => I
Apply:  Pos: [51, 65] cc => I
Apply:  Pos: [60, 93] cc => I
Apply:  Pos: [62, 68, 72] ccc => cc
Apply:  Pos: [63, 75] cc => I
Apply:  Pos: [70, 73] cc => I
Apply:  Pos: [85, 92] cc => I
Apply:  Pos: [90, 95] cc => I
Apply:  Pos: [103, 107] cc => I
Apply:  Pos: [106, 130] cc => I
Apply:  Pos: [112, 116] cc => I
Apply:  Pos: [119, 124] cc => I
Apply:  Pos: [126, 131] cc => I
Apply:  Pos: [135, 139] cc => I
Apply:  Pos: [142, 147] cc => I
Apply:  Pos: [146, 149] cc => I
Apply:  Pos: [152, 167] cc => I
Apply:  Pos: [166, 172] cc => I
Apply:  Pos: [175, 179] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [5, 6], [13, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [3, 7], [13, 5], [8, 2], [1, 11], [15, 8], [2, 9], [12, 9], [14, 15], [1, 3], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [3, 7], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [13, 6], [16, 5], [7, 12], [13, 5], [15, 8], [5, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [14, 11], [1, 11], [9, 10], [12, 19], [8, 0], [13, 6], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [4, 14], [19, 9], ----End Timer [Execute Mapping]:  3.2969517707824707

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[87, 108]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 45, 52]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[87, 108]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0781302452087402

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 45, 52] ccc => cc, Pos: [87, 108] cc => I, Pos: [87, 108] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 45, 52] ccc => cc, Pos: [87, 108] cc => I]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 45, 52] ccc => cc
Apply:  Pos: [87, 108] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [13, 6], [5, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [1, 3], [13, 5], [8, 2], [1, 11], [15, 8], [12, 9], [2, 9], [14, 15], [3, 7], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 19], [12, 9], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [16, 5], [7, 12], [13, 5], [5, 8], [15, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [1, 11], [14, 11], [9, 10], [12, 19], [8, 0], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [4, 14], [19, 9], ----End Timer [Execute Mapping]:  2.0781302452087402

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0001285076141357

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [5, 6], [13, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [1, 3], [13, 5], [8, 2], [1, 11], [15, 8], [2, 9], [12, 9], [14, 15], [3, 7], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [16, 5], [7, 12], [13, 5], [15, 8], [5, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [14, 11], [1, 11], [9, 10], [12, 19], [18, 0], [8, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [4, 14], [19, 9], ----End Timer [Execute Mapping]:  2.0001285076141357

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [125] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 250

Reduced: 
 - size: 55 (30.56%)
 - depth: 11 (24.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07810616493225098

[4, 14], [15, 8], [14, 11], [18, 0], [9, 10], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [15, 2], [5, 6], [13, 16], [15, 8], [17, 18], [3, 11], [9, 10], [7, 12], [15, 8], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [5, 8], [3, 7], [5, 8], [15, 0], [13, 16], [5, 8], [12, 19], [15, 2], [11, 17], [5, 8], [14, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [14, 17], [15, 0], [12, 19], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [19, 9], [16, 6], [17, 18], [12, 19], [3, 7], [13, 5], [8, 2], [16, 6], [19, 9], [1, 11], [15, 8], [5, 6], [2, 9], [12, 19], [13, 16], [14, 15], [17, 18], [1, 3], [8, 2], [19, 9], [15, 0], [7, 8], [4, 14], [12, 19], [7, 8], [2, 9], [13, 16], [17, 15], [3, 7], [8, 12], [15, 2], [4, 1], [1, 3], [11, 17], [15, 0], [12, 10], [4, 1], [8, 0], [3, 13], [11, 15], [19, 10], [14, 17], [12, 9], [4, 1], [5, 6], [12, 19], [14, 17], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [3, 13], [8, 12], [7, 5], [19, 9], [3, 13], [5, 6], [14, 11], [8, 2], [13, 5], [15, 2], [18, 0], [19, 10], [3, 13], [15, 2], [8, 0], [17, 18], [4, 14], [13, 16], [3, 11], [7, 8], [13, 6], [4, 14], [16, 5], [16, 6], [7, 12], [13, 5], [15, 8], [19, 9], [16, 6], [5, 8], [11, 17], [0, 2], [16, 6], [12, 10], [1, 11], [8, 2], [16, 6], [3, 11], [12, 9], [7, 5], [19, 10], [0, 2], [15, 8], [13, 6], [7, 5], [14, 11], [13, 6], [1, 11], [9, 10], [4, 14], [12, 19], [8, 0], [13, 6], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [13, 16], [4, 14], [11, 7], [5, 12], [2, 9], [17, 15], [13, 16], [7, 8], [5, 6], [13, 6], [1, 3], [4, 14], [19, 9], [13, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 17]
[14, 19]
[25, 27]
[27, 30]
[11, 32]
[30, 34]
[34, 39]
[35, 41]
[50, 56]
[51, 65]
[70, 73]
[63, 75]
[85, 92]
[60, 93]
[90, 95]
[103, 107]
[112, 116]
[119, 124]
[106, 130]
[126, 131]
[131, 135]
[135, 139]
[142, 147]
[146, 149]
[149, 155]
[152, 167]
[166, 172]
[167, 177]
[175, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 20, 29]
[31, 36, 43]
[62, 68, 72]
[80, 81, 85]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[49, 52, 57]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 17]
[14, 19]
[25, 27]
[27, 30]
[11, 32]
[30, 34]
[34, 39]
[35, 41]
[50, 56]
[51, 65]
[70, 73]
[63, 75]
[85, 92]
[60, 93]
[90, 95]
[103, 107]
[112, 116]
[119, 124]
[106, 130]
[126, 131]
[131, 135]
[135, 139]
[142, 147]
[146, 149]
[149, 155]
[152, 167]
[166, 172]
[167, 177]
[175, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.21876859664917

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 17] cc => I, Pos: [4, 17] cc => I, Pos: [11, 32] cc => I, Pos: [11, 32] cc => I, Pos: [13, 20, 29] ccc => cc, Pos: [14, 19] cc => I, Pos: [14, 19] cc => I, Pos: [25, 27] cc => I, Pos: [25, 27] cc => I, Pos: [27, 30] cc => I, Pos: [27, 30] cc => I, Pos: [30, 34] cc => I, Pos: [30, 34] cc => I, Pos: [31, 36, 43] ccc => cc, Pos: [34, 39] cc => I, Pos: [34, 39] cc => I, Pos: [35, 41] cc => I, Pos: [35, 41] cc => I, Pos: [49, 52, 57] ccc => cc, Pos: [50, 56] cc => I, Pos: [50, 56] cc => I, Pos: [51, 65] cc => I, Pos: [51, 65] cc => I, Pos: [60, 93] cc => I, Pos: [60, 93] cc => I, Pos: [62, 68, 72] ccc => cc, Pos: [63, 75] cc => I, Pos: [63, 75] cc => I, Pos: [70, 73] cc => I, Pos: [70, 73] cc => I, Pos: [80, 81, 85] ccc => cc, Pos: [85, 92] cc => I, Pos: [85, 92] cc => I, Pos: [90, 95] cc => I, Pos: [90, 95] cc => I, Pos: [103, 107] cc => I, Pos: [103, 107] cc => I, Pos: [106, 130] cc => I, Pos: [106, 130] cc => I, Pos: [112, 116] cc => I, Pos: [112, 116] cc => I, Pos: [119, 124] cc => I, Pos: [119, 124] cc => I, Pos: [126, 131] cc => I, Pos: [126, 131] cc => I, Pos: [131, 135] cc => I, Pos: [131, 135] cc => I, Pos: [135, 139] cc => I, Pos: [135, 139] cc => I, Pos: [142, 147] cc => I, Pos: [142, 147] cc => I, Pos: [146, 149] cc => I, Pos: [146, 149] cc => I, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [152, 167] cc => I, Pos: [152, 167] cc => I, Pos: [166, 172] cc => I, Pos: [166, 172] cc => I, Pos: [167, 177] cc => I, Pos: [167, 177] cc => I, Pos: [175, 179] cc => I, Pos: [175, 179] cc => I]

Plan: 1
[Pos: [4, 17] cc => I,
 Pos: [11, 32] cc => I,
 Pos: [13, 20, 29] ccc => cc,
 Pos: [14, 19] cc => I,
 Pos: [25, 27] cc => I,
 Pos: [30, 34] cc => I,
 Pos: [31, 36, 43] ccc => cc,
 Pos: [35, 41] cc => I,
 Pos: [49, 52, 57] ccc => cc,
 Pos: [50, 56] cc => I,
 Pos: [51, 65] cc => I,
 Pos: [60, 93] cc => I,
 Pos: [62, 68, 72] ccc => cc,
 Pos: [63, 75] cc => I,
 Pos: [70, 73] cc => I,
 Pos: [80, 81, 85] ccc => cc,
 Pos: [90, 95] cc => I,
 Pos: [103, 107] cc => I,
 Pos: [106, 130] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 131] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [142, 147] cc => I,
 Pos: [146, 149] cc => I,
 Pos: [152, 167] cc => I,
 Pos: [166, 172] cc => I,
 Pos: [175, 179] cc => I]
Change: 28, Saving: 30

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.07850456237792969

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 17] cc => I,
 Pos: [11, 32] cc => I,
 Pos: [13, 20, 29] ccc => cc,
 Pos: [14, 19] cc => I,
 Pos: [25, 27] cc => I,
 Pos: [30, 34] cc => I,
 Pos: [31, 36, 43] ccc => cc,
 Pos: [35, 41] cc => I,
 Pos: [49, 52, 57] ccc => cc,
 Pos: [50, 56] cc => I,
 Pos: [51, 65] cc => I,
 Pos: [60, 93] cc => I,
 Pos: [62, 68, 72] ccc => cc,
 Pos: [63, 75] cc => I,
 Pos: [70, 73] cc => I,
 Pos: [80, 81, 85] ccc => cc,
 Pos: [90, 95] cc => I,
 Pos: [103, 107] cc => I,
 Pos: [106, 130] cc => I,
 Pos: [112, 116] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 131] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [142, 147] cc => I,
 Pos: [146, 149] cc => I,
 Pos: [152, 167] cc => I,
 Pos: [166, 172] cc => I,
 Pos: [175, 179] cc => I]
Change: 28, Saving: 30

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 17] cc => I
Apply:  Pos: [11, 32] cc => I
Apply:  Pos: [13, 20, 29] ccc => cc
Apply:  Pos: [14, 19] cc => I
Apply:  Pos: [25, 27] cc => I
Apply:  Pos: [30, 34] cc => I
Apply:  Pos: [31, 36, 43] ccc => cc
Apply:  Pos: [35, 41] cc => I
Apply:  Pos: [49, 52, 57] ccc => cc
Apply:  Pos: [50, 56] cc => I
Apply:  Pos: [51, 65] cc => I
Apply:  Pos: [60, 93] cc => I
Apply:  Pos: [62, 68, 72] ccc => cc
Apply:  Pos: [63, 75] cc => I
Apply:  Pos: [70, 73] cc => I
Apply:  Pos: [80, 81, 85] ccc => cc
Apply:  Pos: [90, 95] cc => I
Apply:  Pos: [103, 107] cc => I
Apply:  Pos: [106, 130] cc => I
Apply:  Pos: [112, 116] cc => I
Apply:  Pos: [119, 124] cc => I
Apply:  Pos: [126, 131] cc => I
Apply:  Pos: [135, 139] cc => I
Apply:  Pos: [142, 147] cc => I
Apply:  Pos: [146, 149] cc => I
Apply:  Pos: [152, 167] cc => I
Apply:  Pos: [166, 172] cc => I
Apply:  Pos: [175, 179] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [5, 6], [13, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [3, 7], [13, 5], [8, 2], [1, 11], [15, 8], [2, 9], [12, 9], [14, 15], [1, 3], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [3, 7], [8, 12], [15, 2], [4, 3], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [4, 1], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [13, 6], [16, 5], [7, 12], [13, 5], [15, 8], [5, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [14, 11], [1, 11], [9, 10], [12, 19], [8, 0], [13, 6], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [4, 14], [19, 9], ----End Timer [Execute Mapping]:  3.2972731590270996

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 109]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[45, 52, 55]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 45, 52]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[88, 109]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0777883529663086

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 45, 52] ccc => cc, Pos: [45, 52, 55] ccc => cc, Pos: [88, 109] cc => I, Pos: [88, 109] cc => I]

Plan: 1
[Pos: [37, 45, 52] ccc => cc, Pos: [88, 109] cc => I]
Change: 2, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 45, 52] ccc => cc, Pos: [88, 109] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 45, 52] ccc => cc
Apply:  Pos: [88, 109] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [13, 6], [5, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [1, 3], [13, 5], [8, 2], [1, 11], [15, 8], [12, 9], [2, 9], [14, 15], [3, 7], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [8, 12], [15, 2], [1, 3], [4, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [4, 1], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [16, 5], [7, 12], [13, 5], [5, 8], [15, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [1, 11], [14, 11], [9, 10], [12, 19], [8, 0], [18, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [4, 14], [19, 9], ----End Timer [Execute Mapping]:  2.0777883529663086

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9999704360961914

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[4, 14], [15, 8], [14, 11], [18, 0], [17, 15], [5, 8], [11, 7], [4, 14], [3, 13], [7, 8], [5, 6], [13, 6], [17, 18], [3, 11], [7, 12], [16, 6], [11, 7], [14, 17], [8, 12], [1, 11], [3, 7], [15, 0], [12, 10], [11, 17], [19, 10], [3, 11], [0, 2], [5, 8], [2, 9], [15, 0], [16, 5], [17, 15], [12, 10], [1, 7], [5, 12], [12, 19], [19, 9], [1, 3], [13, 5], [8, 2], [1, 11], [15, 8], [2, 9], [12, 9], [14, 15], [3, 7], [8, 2], [19, 9], [15, 0], [4, 14], [2, 9], [17, 15], [8, 12], [15, 2], [4, 3], [1, 3], [11, 17], [15, 0], [12, 10], [8, 0], [3, 13], [11, 15], [19, 10], [12, 9], [4, 1], [12, 19], [1, 11], [7, 12], [13, 5], [17, 15], [3, 11], [0, 2], [7, 8], [8, 12], [7, 5], [5, 6], [14, 11], [8, 2], [13, 5], [18, 0], [19, 10], [3, 13], [8, 0], [17, 18], [13, 16], [3, 11], [7, 8], [16, 5], [7, 12], [13, 5], [15, 8], [5, 8], [11, 17], [0, 2], [12, 10], [1, 11], [8, 2], [3, 11], [12, 9], [19, 10], [0, 2], [15, 8], [14, 11], [1, 11], [9, 10], [12, 19], [18, 0], [8, 0], [3, 11], [7, 12], [13, 16], [11, 15], [4, 1], [12, 9], [16, 5], [15, 8], [3, 13], [11, 7], [5, 12], [2, 9], [17, 15], [7, 8], [5, 6], [1, 3], [4, 14], [19, 9], ----End Timer [Execute Mapping]:  1.9999704360961914

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [126] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 252

Reduced: 
 - size: 54 (30.00%)
 - depth: 11 (24.44%)

