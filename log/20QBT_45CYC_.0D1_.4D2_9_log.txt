----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07809329032897949

[6, 16], [18, 3], [17, 4], [13, 12], [6, 4], [11, 2], [6, 4], [11, 3], [14, 9], [10, 15], [4, 13], [11, 16], [15, 5], [14, 9], [13, 12], [0, 5], [16, 3], [1, 13], [8, 11], [15, 5], [1, 13], [5, 6], [11, 16], [4, 13], [11, 2], [17, 6], [14, 8], [12, 7], [4, 13], [11, 16], [1, 12], [0, 8], [17, 19], [6, 4], [3, 2], [8, 11], [4, 13], [16, 2], [11, 3], [14, 9], [4, 13], [8, 11], [0, 17], [18, 3], [10, 15], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [10, 15], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [15, 0], [13, 7], [3, 2], [19, 6], [13, 7], [0, 5], [6, 16], [10, 14], [12, 7], [19, 4], [11, 3], [0, 5], [16, 2], [13, 7], [14, 8], [15, 5], [0, 17], [1, 13], [5, 16], [2, 12], [10, 14], [17, 19], [1, 12], [17, 6], [14, 8], [18, 3], [15, 5], [13, 7], [1, 7], [9, 11], [14, 8], [4, 13], [17, 6], [13, 7], [15, 8], [5, 1], [17, 19], [13, 7], [8, 9], [17, 19], [11, 16], [1, 7], [17, 6], [15, 8], [9, 11], [1, 7], [6, 4], [10, 15], [17, 19], [1, 12], [14, 9], [16, 2], [13, 12], [10, 15], [5, 6], [0, 17], [1, 13], [6, 4], [3, 2], [11, 16], [13, 7], [17, 4], [15, 5], [14, 8], [4, 13], [1, 12], [3, 2], [19, 6], [9, 18], [10, 15], [4, 13], [6, 1], [13, 7], [16, 3], [15, 0], [5, 1], [4, 13], [15, 5], [10, 14], [6, 4], [14, 8], [5, 1], [6, 16], [11, 3], [19, 6], [10, 14], [15, 8], [19, 4], [11, 3], [13, 7], [16, 2], [17, 19], [6, 4], [10, 14], [15, 5], [19, 6], [1, 12], [0, 5], [10, 15], [11, 3], [16, 2], [19, 6], [9, 18], [4, 13], [16, 1], [10, 14], [19, 6], [11, 2], [14, 9], [13, 7], [16, 1], [17, 19], [14, 9], [16, 3], [4, 13], [8, 11], [2, 12], [19, 6], [1, 12], [15, 5], [16, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]
[8, 13]
[17, 20]
[23, 28]
[22, 29]
[13, 39]
[36, 40]
[44, 52]
[60, 63]
[64, 70]
[83, 89]
[82, 91]
[80, 95]
[92, 96]
[95, 98]
[91, 101]
[100, 104]
[98, 107]
[106, 112]
[117, 125]
[123, 129]
[142, 147]
[144, 152]
[147, 158]
[149, 159]
[154, 160]
[127, 161]
[152, 164]
[160, 165]
[163, 169]
[167, 171]
[172, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[35, 38, 41]
[66, 73, 79]
[74, 77, 85]
[93, 97, 102]
[129, 131, 135]
[137, 139, 144]
[136, 140, 153]
[162, 168, 173]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[28, 33, 36]
[73, 79, 83]
[72, 76, 86]
[105, 113, 116]
[122, 137, 139]
[134, 136, 140]
[165, 170, 176]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]
[8, 13]
[17, 20]
[23, 28]
[22, 29]
[13, 39]
[36, 40]
[44, 52]
[60, 63]
[64, 70]
[83, 89]
[82, 91]
[80, 95]
[92, 96]
[95, 98]
[91, 101]
[100, 104]
[98, 107]
[106, 112]
[117, 125]
[123, 129]
[142, 147]
[144, 152]
[147, 158]
[149, 159]
[154, 160]
[127, 161]
[152, 164]
[160, 165]
[163, 169]
[167, 171]
[172, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2187323570251465

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 6] cc => I, Pos: [4, 6] cc => I, Pos: [8, 13] cc => I, Pos: [8, 13] cc => I, Pos: [13, 39] cc => I, Pos: [13, 39] cc => I, Pos: [17, 20] cc => I, Pos: [17, 20] cc => I, Pos: [22, 29] cc => I, Pos: [22, 29] cc => I, Pos: [23, 28] cc => I, Pos: [23, 28] cc => I, Pos: [28, 33, 36] ccc => cc, Pos: [35, 38, 41] ccc => cc, Pos: [36, 40] cc => I, Pos: [36, 40] cc => I, Pos: [44, 52] cc => I, Pos: [44, 52] cc => I, Pos: [60, 63] cc => I, Pos: [60, 63] cc => I, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [66, 73, 79] ccc => cc, Pos: [72, 76, 86] ccc => cc, Pos: [73, 79, 83] ccc => cc, Pos: [74, 77, 85] ccc => cc, Pos: [80, 95] cc => I, Pos: [80, 95] cc => I, Pos: [82, 91] cc => I, Pos: [82, 91] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [91, 101] cc => I, Pos: [91, 101] cc => I, Pos: [92, 96] cc => I, Pos: [92, 96] cc => I, Pos: [93, 97, 102] ccc => cc, Pos: [95, 98] cc => I, Pos: [95, 98] cc => I, Pos: [98, 107] cc => I, Pos: [98, 107] cc => I, Pos: [100, 104] cc => I, Pos: [100, 104] cc => I, Pos: [105, 113, 116] ccc => cc, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [122, 137, 139] ccc => cc, Pos: [123, 129] cc => I, Pos: [123, 129] cc => I, Pos: [127, 161] cc => I, Pos: [127, 161] cc => I, Pos: [129, 131, 135] ccc => cc, Pos: [134, 136, 140] ccc => cc, Pos: [136, 140, 153] ccc => cc, Pos: [137, 139, 144] ccc => cc, Pos: [142, 147] cc => I, Pos: [142, 147] cc => I, Pos: [144, 152] cc => I, Pos: [144, 152] cc => I, Pos: [147, 158] cc => I, Pos: [147, 158] cc => I, Pos: [149, 159] cc => I, Pos: [149, 159] cc => I, Pos: [152, 164] cc => I, Pos: [152, 164] cc => I, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [162, 168, 173] ccc => cc, Pos: [163, 169] cc => I, Pos: [163, 169] cc => I, Pos: [165, 170, 176] ccc => cc, Pos: [167, 171] cc => I, Pos: [167, 171] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I]

Plan: 1
[Pos: [4, 6] cc => I,
 Pos: [8, 13] cc => I,
 Pos: [17, 20] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [23, 28] cc => I,
 Pos: [35, 38, 41] ccc => cc,
 Pos: [36, 40] cc => I,
 Pos: [44, 52] cc => I,
 Pos: [60, 63] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [66, 73, 79] ccc => cc,
 Pos: [72, 76, 86] ccc => cc,
 Pos: [74, 77, 85] ccc => cc,
 Pos: [80, 95] cc => I,
 Pos: [82, 91] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [92, 96] cc => I,
 Pos: [93, 97, 102] ccc => cc,
 Pos: [98, 107] cc => I,
 Pos: [100, 104] cc => I,
 Pos: [105, 113, 116] ccc => cc,
 Pos: [106, 112] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [122, 137, 139] ccc => cc,
 Pos: [123, 129] cc => I,
 Pos: [127, 161] cc => I,
 Pos: [134, 136, 140] ccc => cc,
 Pos: [142, 147] cc => I,
 Pos: [144, 152] cc => I,
 Pos: [149, 159] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 169] cc => I,
 Pos: [165, 170, 176] ccc => cc,
 Pos: [167, 171] cc => I,
 Pos: [172, 179] cc => I]
Change: 36, Saving: 124

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 6] cc => I,
 Pos: [8, 13] cc => I,
 Pos: [17, 20] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [23, 28] cc => I,
 Pos: [35, 38, 41] ccc => cc,
 Pos: [36, 40] cc => I,
 Pos: [44, 52] cc => I,
 Pos: [60, 63] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [66, 73, 79] ccc => cc,
 Pos: [72, 76, 86] ccc => cc,
 Pos: [74, 77, 85] ccc => cc,
 Pos: [80, 95] cc => I,
 Pos: [82, 91] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [92, 96] cc => I,
 Pos: [93, 97, 102] ccc => cc,
 Pos: [98, 107] cc => I,
 Pos: [100, 104] cc => I,
 Pos: [105, 113, 116] ccc => cc,
 Pos: [106, 112] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [122, 137, 139] ccc => cc,
 Pos: [123, 129] cc => I,
 Pos: [127, 161] cc => I,
 Pos: [134, 136, 140] ccc => cc,
 Pos: [142, 147] cc => I,
 Pos: [144, 152] cc => I,
 Pos: [149, 159] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 169] cc => I,
 Pos: [165, 170, 176] ccc => cc,
 Pos: [167, 171] cc => I,
 Pos: [172, 179] cc => I]
Change: 36, Saving: 124

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [8, 13] cc => I
Apply:  Pos: [17, 20] cc => I
Apply:  Pos: [22, 29] cc => I
Apply:  Pos: [23, 28] cc => I
Apply:  Pos: [35, 38, 41] ccc => cc
Apply:  Pos: [36, 40] cc => I
Apply:  Pos: [44, 52] cc => I
Apply:  Pos: [60, 63] cc => I
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [66, 73, 79] ccc => cc
Apply:  Pos: [72, 76, 86] ccc => cc
Apply:  Pos: [74, 77, 85] ccc => cc
Apply:  Pos: [80, 95] cc => I
Apply:  Pos: [82, 91] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [92, 96] cc => I
Apply:  Pos: [93, 97, 102] ccc => cc
Apply:  Pos: [98, 107] cc => I
Apply:  Pos: [100, 104] cc => I
Apply:  Pos: [105, 113, 116] ccc => cc
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [122, 137, 139] ccc => cc
Apply:  Pos: [123, 129] cc => I
Apply:  Pos: [127, 161] cc => I
Apply:  Pos: [134, 136, 140] ccc => cc
Apply:  Pos: [142, 147] cc => I
Apply:  Pos: [144, 152] cc => I
Apply:  Pos: [149, 159] cc => I
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [162, 168, 173] ccc => cc
Apply:  Pos: [163, 169] cc => I
Apply:  Pos: [165, 170, 176] ccc => cc
Apply:  Pos: [167, 171] cc => I
Apply:  Pos: [172, 179] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [13, 12], [11, 2], [11, 3], [10, 15], [4, 13], [11, 16], [15, 5], [13, 12], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [6, 4], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [0, 17], [18, 3], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [15, 0], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [0, 17], [13, 7], [5, 16], [2, 12], [1, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [13, 7], [17, 4], [15, 5], [10, 14], [1, 12], [19, 6], [10, 15], [6, 1], [13, 7], [16, 3], [15, 0], [15, 5], [4, 13], [5, 1], [14, 8], [6, 4], [6, 16], [19, 6], [15, 8], [19, 4], [13, 7], [17, 19], [6, 4], [15, 5], [1, 12], [0, 5], [10, 15], [11, 3], [4, 7], [10, 14], [17, 19], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [1, 12], [15, 5], ----End Timer [Execute Mapping]:  3.2187323570251465

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[23, 32]
[80, 88]
[101, 110]
[104, 115]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[90, 93, 103]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 7, 10]
[29, 44, 56]
[82, 86, 90]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[23, 32]
[80, 88]
[101, 110]
[104, 115]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.8437254428863525

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 7, 10] ccc => cc, Pos: [23, 32] cc => I, Pos: [23, 32] cc => I, Pos: [29, 44, 56] ccc => cc, Pos: [80, 88] cc => I, Pos: [80, 88] cc => I, Pos: [82, 86, 90] ccc => cc, Pos: [90, 93, 103] ccc => cc, Pos: [101, 110] cc => I, Pos: [101, 110] cc => I, Pos: [104, 115] cc => I, Pos: [104, 115] cc => I]

Plan: 1
[Pos: [3, 7, 10] ccc => cc,
 Pos: [23, 32] cc => I,
 Pos: [29, 44, 56] ccc => cc,
 Pos: [80, 88] cc => I,
 Pos: [82, 86, 90] ccc => cc,
 Pos: [101, 110] cc => I,
 Pos: [104, 115] cc => I]
Change: 7, Saving: 22

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 7, 10] ccc => cc,
 Pos: [23, 32] cc => I,
 Pos: [29, 44, 56] ccc => cc,
 Pos: [80, 88] cc => I,
 Pos: [82, 86, 90] ccc => cc,
 Pos: [101, 110] cc => I,
 Pos: [104, 115] cc => I]
Change: 7, Saving: 22

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 7, 10] ccc => cc
Apply:  Pos: [23, 32] cc => I
Apply:  Pos: [29, 44, 56] ccc => cc
Apply:  Pos: [80, 88] cc => I
Apply:  Pos: [82, 86, 90] ccc => cc
Apply:  Pos: [101, 110] cc => I
Apply:  Pos: [104, 115] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 13], [11, 3], [11, 2], [10, 15], [13, 12], [11, 16], [15, 5], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 7], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [1, 12], [2, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [10, 15], [10, 14], [1, 12], [19, 6], [15, 5], [6, 1], [16, 3], [15, 0], [4, 13], [5, 1], [14, 8], [6, 16], [6, 4], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [15, 5], [0, 5], [10, 15], [11, 3], [4, 7], [10, 14], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [15, 5], ----End Timer [Execute Mapping]:  1.8437254428863525

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[96, 97, 106]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5938076972961426

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [96, 97, 106] ccc => cc]

Plan: 1
[Pos: [10, 13] cc => I, Pos: [96, 97, 106] ccc => cc]
Change: 2, Saving: 6

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [10, 13] cc => I, Pos: [96, 97, 106] ccc => cc]
Change: 2, Saving: 6

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [10, 13] cc => I
Apply:  Pos: [96, 97, 106] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 13], [11, 2], [11, 3], [10, 15], [13, 12], [11, 16], [0, 5], [16, 3], [8, 11], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 12], [13, 7], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [2, 12], [1, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [10, 14], [10, 15], [1, 12], [19, 6], [15, 5], [6, 1], [16, 3], [15, 0], [4, 13], [5, 1], [14, 8], [6, 4], [6, 16], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [0, 5], [10, 15], [15, 5], [11, 3], [4, 7], [10, 14], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], ----End Timer [Execute Mapping]:  1.5938076972961426

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5312047004699707

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[6, 16], [18, 3], [17, 4], [4, 13], [11, 3], [11, 2], [10, 15], [13, 12], [11, 16], [0, 5], [16, 3], [8, 11], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 7], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [1, 12], [2, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [10, 15], [10, 14], [1, 12], [19, 6], [15, 5], [6, 1], [16, 3], [15, 0], [4, 13], [5, 1], [14, 8], [6, 16], [6, 4], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [0, 5], [10, 15], [15, 5], [11, 3], [4, 7], [10, 14], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], ----End Timer [Execute Mapping]:  1.5312047004699707

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [104] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 29 - (small)
 - circuit cycle: 208

Reduced: 
 - size: 76 (42.22%)
 - cycle: 152 (42.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07794713973999023

[6, 16], [18, 3], [17, 4], [13, 12], [6, 4], [11, 2], [6, 4], [11, 3], [14, 9], [10, 15], [4, 13], [11, 16], [15, 5], [14, 9], [13, 12], [0, 5], [16, 3], [1, 13], [8, 11], [15, 5], [1, 13], [5, 6], [11, 16], [4, 13], [11, 2], [17, 6], [14, 8], [12, 7], [4, 13], [11, 16], [1, 12], [0, 8], [17, 19], [6, 4], [3, 2], [8, 11], [4, 13], [16, 2], [11, 3], [14, 9], [4, 13], [8, 11], [0, 17], [18, 3], [10, 15], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [10, 15], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [15, 0], [13, 7], [3, 2], [19, 6], [13, 7], [0, 5], [6, 16], [10, 14], [12, 7], [19, 4], [11, 3], [0, 5], [16, 2], [13, 7], [14, 8], [15, 5], [0, 17], [1, 13], [5, 16], [2, 12], [10, 14], [17, 19], [1, 12], [17, 6], [14, 8], [18, 3], [15, 5], [13, 7], [1, 7], [9, 11], [14, 8], [4, 13], [17, 6], [13, 7], [15, 8], [5, 1], [17, 19], [13, 7], [8, 9], [17, 19], [11, 16], [1, 7], [17, 6], [15, 8], [9, 11], [1, 7], [6, 4], [10, 15], [17, 19], [1, 12], [14, 9], [16, 2], [13, 12], [10, 15], [5, 6], [0, 17], [1, 13], [6, 4], [3, 2], [11, 16], [13, 7], [17, 4], [15, 5], [14, 8], [4, 13], [1, 12], [3, 2], [19, 6], [9, 18], [10, 15], [4, 13], [6, 1], [13, 7], [16, 3], [15, 0], [5, 1], [4, 13], [15, 5], [10, 14], [6, 4], [14, 8], [5, 1], [6, 16], [11, 3], [19, 6], [10, 14], [15, 8], [19, 4], [11, 3], [13, 7], [16, 2], [17, 19], [6, 4], [10, 14], [15, 5], [19, 6], [1, 12], [0, 5], [10, 15], [11, 3], [16, 2], [19, 6], [9, 18], [4, 13], [16, 1], [10, 14], [19, 6], [11, 2], [14, 9], [13, 7], [16, 1], [17, 19], [14, 9], [16, 3], [4, 13], [8, 11], [2, 12], [19, 6], [1, 12], [15, 5], [16, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]
[8, 13]
[17, 20]
[23, 28]
[22, 29]
[13, 39]
[36, 40]
[44, 52]
[60, 63]
[64, 70]
[83, 89]
[82, 91]
[80, 95]
[92, 96]
[95, 98]
[91, 101]
[100, 104]
[98, 107]
[106, 112]
[117, 125]
[123, 129]
[142, 147]
[144, 152]
[147, 158]
[149, 159]
[154, 160]
[127, 161]
[152, 164]
[160, 165]
[163, 169]
[167, 171]
[172, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[35, 38, 41]
[66, 73, 79]
[74, 77, 85]
[93, 97, 102]
[129, 131, 135]
[137, 139, 144]
[136, 140, 153]
[162, 168, 173]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[28, 33, 36]
[73, 79, 83]
[72, 76, 86]
[105, 113, 116]
[122, 137, 139]
[134, 136, 140]
[165, 170, 176]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]
[8, 13]
[17, 20]
[23, 28]
[22, 29]
[13, 39]
[36, 40]
[44, 52]
[60, 63]
[64, 70]
[83, 89]
[82, 91]
[80, 95]
[92, 96]
[95, 98]
[91, 101]
[100, 104]
[98, 107]
[106, 112]
[117, 125]
[123, 129]
[142, 147]
[144, 152]
[147, 158]
[149, 159]
[154, 160]
[127, 161]
[152, 164]
[160, 165]
[163, 169]
[167, 171]
[172, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.1562607288360596

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 6] cc => I, Pos: [4, 6] cc => I, Pos: [8, 13] cc => I, Pos: [8, 13] cc => I, Pos: [13, 39] cc => I, Pos: [13, 39] cc => I, Pos: [17, 20] cc => I, Pos: [17, 20] cc => I, Pos: [22, 29] cc => I, Pos: [22, 29] cc => I, Pos: [23, 28] cc => I, Pos: [23, 28] cc => I, Pos: [28, 33, 36] ccc => cc, Pos: [35, 38, 41] ccc => cc, Pos: [36, 40] cc => I, Pos: [36, 40] cc => I, Pos: [44, 52] cc => I, Pos: [44, 52] cc => I, Pos: [60, 63] cc => I, Pos: [60, 63] cc => I, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [66, 73, 79] ccc => cc, Pos: [72, 76, 86] ccc => cc, Pos: [73, 79, 83] ccc => cc, Pos: [74, 77, 85] ccc => cc, Pos: [80, 95] cc => I, Pos: [80, 95] cc => I, Pos: [82, 91] cc => I, Pos: [82, 91] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [91, 101] cc => I, Pos: [91, 101] cc => I, Pos: [92, 96] cc => I, Pos: [92, 96] cc => I, Pos: [93, 97, 102] ccc => cc, Pos: [95, 98] cc => I, Pos: [95, 98] cc => I, Pos: [98, 107] cc => I, Pos: [98, 107] cc => I, Pos: [100, 104] cc => I, Pos: [100, 104] cc => I, Pos: [105, 113, 116] ccc => cc, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [122, 137, 139] ccc => cc, Pos: [123, 129] cc => I, Pos: [123, 129] cc => I, Pos: [127, 161] cc => I, Pos: [127, 161] cc => I, Pos: [129, 131, 135] ccc => cc, Pos: [134, 136, 140] ccc => cc, Pos: [136, 140, 153] ccc => cc, Pos: [137, 139, 144] ccc => cc, Pos: [142, 147] cc => I, Pos: [142, 147] cc => I, Pos: [144, 152] cc => I, Pos: [144, 152] cc => I, Pos: [147, 158] cc => I, Pos: [147, 158] cc => I, Pos: [149, 159] cc => I, Pos: [149, 159] cc => I, Pos: [152, 164] cc => I, Pos: [152, 164] cc => I, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [162, 168, 173] ccc => cc, Pos: [163, 169] cc => I, Pos: [163, 169] cc => I, Pos: [165, 170, 176] ccc => cc, Pos: [167, 171] cc => I, Pos: [167, 171] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I]

Plan: 1
[Pos: [4, 6] cc => I,
 Pos: [8, 13] cc => I,
 Pos: [17, 20] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [23, 28] cc => I,
 Pos: [35, 38, 41] ccc => cc,
 Pos: [36, 40] cc => I,
 Pos: [44, 52] cc => I,
 Pos: [60, 63] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [66, 73, 79] ccc => cc,
 Pos: [72, 76, 86] ccc => cc,
 Pos: [74, 77, 85] ccc => cc,
 Pos: [80, 95] cc => I,
 Pos: [82, 91] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [92, 96] cc => I,
 Pos: [93, 97, 102] ccc => cc,
 Pos: [98, 107] cc => I,
 Pos: [100, 104] cc => I,
 Pos: [105, 113, 116] ccc => cc,
 Pos: [106, 112] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [122, 137, 139] ccc => cc,
 Pos: [123, 129] cc => I,
 Pos: [127, 161] cc => I,
 Pos: [134, 136, 140] ccc => cc,
 Pos: [142, 147] cc => I,
 Pos: [144, 152] cc => I,
 Pos: [149, 159] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 169] cc => I,
 Pos: [165, 170, 176] ccc => cc,
 Pos: [167, 171] cc => I,
 Pos: [172, 179] cc => I]
Change: 36, Saving: 36

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.09372973442077637

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 6] cc => I,
 Pos: [8, 13] cc => I,
 Pos: [17, 20] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [23, 28] cc => I,
 Pos: [35, 38, 41] ccc => cc,
 Pos: [36, 40] cc => I,
 Pos: [44, 52] cc => I,
 Pos: [60, 63] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [66, 73, 79] ccc => cc,
 Pos: [72, 76, 86] ccc => cc,
 Pos: [74, 77, 85] ccc => cc,
 Pos: [80, 95] cc => I,
 Pos: [82, 91] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [92, 96] cc => I,
 Pos: [93, 97, 102] ccc => cc,
 Pos: [98, 107] cc => I,
 Pos: [100, 104] cc => I,
 Pos: [105, 113, 116] ccc => cc,
 Pos: [106, 112] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [122, 137, 139] ccc => cc,
 Pos: [123, 129] cc => I,
 Pos: [127, 161] cc => I,
 Pos: [134, 136, 140] ccc => cc,
 Pos: [142, 147] cc => I,
 Pos: [144, 152] cc => I,
 Pos: [149, 159] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 169] cc => I,
 Pos: [165, 170, 176] ccc => cc,
 Pos: [167, 171] cc => I,
 Pos: [172, 179] cc => I]
Change: 36, Saving: 36

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [8, 13] cc => I
Apply:  Pos: [17, 20] cc => I
Apply:  Pos: [22, 29] cc => I
Apply:  Pos: [23, 28] cc => I
Apply:  Pos: [35, 38, 41] ccc => cc
Apply:  Pos: [36, 40] cc => I
Apply:  Pos: [44, 52] cc => I
Apply:  Pos: [60, 63] cc => I
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [66, 73, 79] ccc => cc
Apply:  Pos: [72, 76, 86] ccc => cc
Apply:  Pos: [74, 77, 85] ccc => cc
Apply:  Pos: [80, 95] cc => I
Apply:  Pos: [82, 91] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [92, 96] cc => I
Apply:  Pos: [93, 97, 102] ccc => cc
Apply:  Pos: [98, 107] cc => I
Apply:  Pos: [100, 104] cc => I
Apply:  Pos: [105, 113, 116] ccc => cc
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [122, 137, 139] ccc => cc
Apply:  Pos: [123, 129] cc => I
Apply:  Pos: [127, 161] cc => I
Apply:  Pos: [134, 136, 140] ccc => cc
Apply:  Pos: [142, 147] cc => I
Apply:  Pos: [144, 152] cc => I
Apply:  Pos: [149, 159] cc => I
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [162, 168, 173] ccc => cc
Apply:  Pos: [163, 169] cc => I
Apply:  Pos: [165, 170, 176] ccc => cc
Apply:  Pos: [167, 171] cc => I
Apply:  Pos: [172, 179] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [13, 12], [11, 2], [11, 3], [10, 15], [4, 13], [11, 16], [15, 5], [13, 12], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [6, 4], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [0, 17], [18, 3], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [15, 0], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [0, 17], [13, 7], [5, 16], [2, 12], [1, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [13, 7], [17, 4], [15, 5], [10, 14], [1, 12], [19, 6], [10, 15], [6, 1], [13, 7], [16, 3], [15, 0], [15, 5], [4, 13], [5, 1], [14, 8], [6, 4], [6, 16], [19, 6], [15, 8], [19, 4], [13, 7], [17, 19], [6, 4], [15, 5], [1, 12], [0, 5], [10, 15], [11, 3], [4, 7], [10, 14], [17, 19], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [1, 12], [15, 5], ----End Timer [Execute Mapping]:  3.249990463256836

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[23, 32]
[80, 88]
[101, 110]
[104, 115]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[90, 93, 103]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 7, 10]
[29, 44, 56]
[82, 86, 90]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[23, 32]
[80, 88]
[101, 110]
[104, 115]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.8284618854522705

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 7, 10] ccc => cc, Pos: [23, 32] cc => I, Pos: [23, 32] cc => I, Pos: [29, 44, 56] ccc => cc, Pos: [80, 88] cc => I, Pos: [80, 88] cc => I, Pos: [82, 86, 90] ccc => cc, Pos: [90, 93, 103] ccc => cc, Pos: [101, 110] cc => I, Pos: [101, 110] cc => I, Pos: [104, 115] cc => I, Pos: [104, 115] cc => I]

Plan: 1
[Pos: [3, 7, 10] ccc => cc,
 Pos: [23, 32] cc => I,
 Pos: [29, 44, 56] ccc => cc,
 Pos: [80, 88] cc => I,
 Pos: [82, 86, 90] ccc => cc,
 Pos: [101, 110] cc => I,
 Pos: [104, 115] cc => I]
Change: 7, Saving: 7

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015628337860107422

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 7, 10] ccc => cc,
 Pos: [23, 32] cc => I,
 Pos: [29, 44, 56] ccc => cc,
 Pos: [80, 88] cc => I,
 Pos: [82, 86, 90] ccc => cc,
 Pos: [101, 110] cc => I,
 Pos: [104, 115] cc => I]
Change: 7, Saving: 7

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 7, 10] ccc => cc
Apply:  Pos: [23, 32] cc => I
Apply:  Pos: [29, 44, 56] ccc => cc
Apply:  Pos: [80, 88] cc => I
Apply:  Pos: [82, 86, 90] ccc => cc
Apply:  Pos: [101, 110] cc => I
Apply:  Pos: [104, 115] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 13], [11, 3], [11, 2], [10, 15], [13, 12], [11, 16], [15, 5], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 7], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [1, 12], [2, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [10, 15], [10, 14], [1, 12], [19, 6], [15, 5], [6, 1], [16, 3], [15, 0], [4, 13], [5, 1], [14, 8], [6, 16], [6, 4], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [15, 5], [0, 5], [10, 15], [11, 3], [4, 7], [10, 14], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [15, 5], ----End Timer [Execute Mapping]:  1.844090223312378

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[96, 97, 106]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5778930187225342

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [96, 97, 106] ccc => cc]

Plan: 1
[Pos: [10, 13] cc => I, Pos: [96, 97, 106] ccc => cc]
Change: 2, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015620946884155273

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [10, 13] cc => I, Pos: [96, 97, 106] ccc => cc]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [10, 13] cc => I
Apply:  Pos: [96, 97, 106] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 13], [11, 2], [11, 3], [10, 15], [13, 12], [11, 16], [0, 5], [16, 3], [8, 11], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 12], [13, 7], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [2, 12], [1, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [10, 14], [10, 15], [1, 12], [19, 6], [15, 5], [6, 1], [16, 3], [15, 0], [4, 13], [5, 1], [14, 8], [6, 4], [6, 16], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [0, 5], [10, 15], [15, 5], [11, 3], [4, 7], [10, 14], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], ----End Timer [Execute Mapping]:  1.5935139656066895

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5625874996185303

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[6, 16], [18, 3], [17, 4], [4, 13], [11, 3], [11, 2], [10, 15], [13, 12], [11, 16], [0, 5], [16, 3], [8, 11], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 7], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [1, 12], [2, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [10, 15], [10, 14], [1, 12], [19, 6], [15, 5], [6, 1], [16, 3], [15, 0], [4, 13], [5, 1], [14, 8], [6, 16], [6, 4], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [0, 5], [10, 15], [15, 5], [11, 3], [4, 7], [10, 14], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], ----End Timer [Execute Mapping]:  1.5625874996185303

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [104] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 29 - (small)
 - circuit cycle: 208

Reduced: 
 - size: 76 (42.22%)
 - depth: 16 (35.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07811522483825684

[6, 16], [18, 3], [17, 4], [13, 12], [6, 4], [11, 2], [6, 4], [11, 3], [14, 9], [10, 15], [4, 13], [11, 16], [15, 5], [14, 9], [13, 12], [0, 5], [16, 3], [1, 13], [8, 11], [15, 5], [1, 13], [5, 6], [11, 16], [4, 13], [11, 2], [17, 6], [14, 8], [12, 7], [4, 13], [11, 16], [1, 12], [0, 8], [17, 19], [6, 4], [3, 2], [8, 11], [4, 13], [16, 2], [11, 3], [14, 9], [4, 13], [8, 11], [0, 17], [18, 3], [10, 15], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [10, 15], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [15, 0], [13, 7], [3, 2], [19, 6], [13, 7], [0, 5], [6, 16], [10, 14], [12, 7], [19, 4], [11, 3], [0, 5], [16, 2], [13, 7], [14, 8], [15, 5], [0, 17], [1, 13], [5, 16], [2, 12], [10, 14], [17, 19], [1, 12], [17, 6], [14, 8], [18, 3], [15, 5], [13, 7], [1, 7], [9, 11], [14, 8], [4, 13], [17, 6], [13, 7], [15, 8], [5, 1], [17, 19], [13, 7], [8, 9], [17, 19], [11, 16], [1, 7], [17, 6], [15, 8], [9, 11], [1, 7], [6, 4], [10, 15], [17, 19], [1, 12], [14, 9], [16, 2], [13, 12], [10, 15], [5, 6], [0, 17], [1, 13], [6, 4], [3, 2], [11, 16], [13, 7], [17, 4], [15, 5], [14, 8], [4, 13], [1, 12], [3, 2], [19, 6], [9, 18], [10, 15], [4, 13], [6, 1], [13, 7], [16, 3], [15, 0], [5, 1], [4, 13], [15, 5], [10, 14], [6, 4], [14, 8], [5, 1], [6, 16], [11, 3], [19, 6], [10, 14], [15, 8], [19, 4], [11, 3], [13, 7], [16, 2], [17, 19], [6, 4], [10, 14], [15, 5], [19, 6], [1, 12], [0, 5], [10, 15], [11, 3], [16, 2], [19, 6], [9, 18], [4, 13], [16, 1], [10, 14], [19, 6], [11, 2], [14, 9], [13, 7], [16, 1], [17, 19], [14, 9], [16, 3], [4, 13], [8, 11], [2, 12], [19, 6], [1, 12], [15, 5], [16, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]
[8, 13]
[17, 20]
[23, 28]
[22, 29]
[13, 39]
[36, 40]
[44, 52]
[60, 63]
[64, 70]
[83, 89]
[82, 91]
[80, 95]
[92, 96]
[95, 98]
[91, 101]
[100, 104]
[98, 107]
[106, 112]
[117, 125]
[123, 129]
[142, 147]
[144, 152]
[147, 158]
[149, 159]
[154, 160]
[127, 161]
[152, 164]
[160, 165]
[163, 169]
[167, 171]
[172, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[35, 38, 41]
[66, 73, 79]
[74, 77, 85]
[93, 97, 102]
[129, 131, 135]
[137, 139, 144]
[136, 140, 153]
[162, 168, 173]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[28, 33, 36]
[73, 79, 83]
[72, 76, 86]
[105, 113, 116]
[122, 137, 139]
[134, 136, 140]
[165, 170, 176]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]
[8, 13]
[17, 20]
[23, 28]
[22, 29]
[13, 39]
[36, 40]
[44, 52]
[60, 63]
[64, 70]
[83, 89]
[82, 91]
[80, 95]
[92, 96]
[95, 98]
[91, 101]
[100, 104]
[98, 107]
[106, 112]
[117, 125]
[123, 129]
[142, 147]
[144, 152]
[147, 158]
[149, 159]
[154, 160]
[127, 161]
[152, 164]
[160, 165]
[163, 169]
[167, 171]
[172, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.186697006225586

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 6] cc => I, Pos: [4, 6] cc => I, Pos: [8, 13] cc => I, Pos: [8, 13] cc => I, Pos: [13, 39] cc => I, Pos: [13, 39] cc => I, Pos: [17, 20] cc => I, Pos: [17, 20] cc => I, Pos: [22, 29] cc => I, Pos: [22, 29] cc => I, Pos: [23, 28] cc => I, Pos: [23, 28] cc => I, Pos: [28, 33, 36] ccc => cc, Pos: [35, 38, 41] ccc => cc, Pos: [36, 40] cc => I, Pos: [36, 40] cc => I, Pos: [44, 52] cc => I, Pos: [44, 52] cc => I, Pos: [60, 63] cc => I, Pos: [60, 63] cc => I, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [66, 73, 79] ccc => cc, Pos: [72, 76, 86] ccc => cc, Pos: [73, 79, 83] ccc => cc, Pos: [74, 77, 85] ccc => cc, Pos: [80, 95] cc => I, Pos: [80, 95] cc => I, Pos: [82, 91] cc => I, Pos: [82, 91] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [91, 101] cc => I, Pos: [91, 101] cc => I, Pos: [92, 96] cc => I, Pos: [92, 96] cc => I, Pos: [93, 97, 102] ccc => cc, Pos: [95, 98] cc => I, Pos: [95, 98] cc => I, Pos: [98, 107] cc => I, Pos: [98, 107] cc => I, Pos: [100, 104] cc => I, Pos: [100, 104] cc => I, Pos: [105, 113, 116] ccc => cc, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [122, 137, 139] ccc => cc, Pos: [123, 129] cc => I, Pos: [123, 129] cc => I, Pos: [127, 161] cc => I, Pos: [127, 161] cc => I, Pos: [129, 131, 135] ccc => cc, Pos: [134, 136, 140] ccc => cc, Pos: [136, 140, 153] ccc => cc, Pos: [137, 139, 144] ccc => cc, Pos: [142, 147] cc => I, Pos: [142, 147] cc => I, Pos: [144, 152] cc => I, Pos: [144, 152] cc => I, Pos: [147, 158] cc => I, Pos: [147, 158] cc => I, Pos: [149, 159] cc => I, Pos: [149, 159] cc => I, Pos: [152, 164] cc => I, Pos: [152, 164] cc => I, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [162, 168, 173] ccc => cc, Pos: [163, 169] cc => I, Pos: [163, 169] cc => I, Pos: [165, 170, 176] ccc => cc, Pos: [167, 171] cc => I, Pos: [167, 171] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 6] cc => I,
 Pos: [8, 13] cc => I,
 Pos: [17, 20] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [28, 33, 36] ccc => cc,
 Pos: [35, 38, 41] ccc => cc,
 Pos: [44, 52] cc => I,
 Pos: [60, 63] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [66, 73, 79] ccc => cc,
 Pos: [72, 76, 86] ccc => cc,
 Pos: [74, 77, 85] ccc => cc,
 Pos: [95, 98] cc => I,
 Pos: [82, 91] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [92, 96] cc => I,
 Pos: [93, 97, 102] ccc => cc,
 Pos: [100, 104] cc => I,
 Pos: [105, 113, 116] ccc => cc,
 Pos: [106, 112] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [137, 139, 144] ccc => cc,
 Pos: [129, 131, 135] ccc => cc,
 Pos: [127, 161] cc => I,
 Pos: [136, 140, 153] ccc => cc,
 Pos: [142, 147] cc => I,
 Pos: [149, 159] cc => I,
 Pos: [152, 164] cc => I,
 Pos: [160, 165] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 169] cc => I,
 Pos: [167, 171] cc => I,
 Pos: [172, 179] cc => I]
Change: 33, Saving: 110

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [8, 13] cc => I
Apply:  Pos: [17, 20] cc => I
Apply:  Pos: [22, 29] cc => I
Apply:  Pos: [28, 33, 36] ccc => cc
Apply:  Pos: [35, 38, 41] ccc => cc
Apply:  Pos: [44, 52] cc => I
Apply:  Pos: [60, 63] cc => I
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [66, 73, 79] ccc => cc
Apply:  Pos: [72, 76, 86] ccc => cc
Apply:  Pos: [74, 77, 85] ccc => cc
Apply:  Pos: [95, 98] cc => I
Apply:  Pos: [82, 91] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [92, 96] cc => I
Apply:  Pos: [93, 97, 102] ccc => cc
Apply:  Pos: [100, 104] cc => I
Apply:  Pos: [105, 113, 116] ccc => cc
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [137, 139, 144] ccc => cc
Apply:  Pos: [129, 131, 135] ccc => cc
Apply:  Pos: [127, 161] cc => I
Apply:  Pos: [136, 140, 153] ccc => cc
Apply:  Pos: [142, 147] cc => I
Apply:  Pos: [149, 159] cc => I
Apply:  Pos: [152, 164] cc => I
Apply:  Pos: [160, 165] cc => I
Apply:  Pos: [162, 168, 173] ccc => cc
Apply:  Pos: [163, 169] cc => I
Apply:  Pos: [167, 171] cc => I
Apply:  Pos: [172, 179] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [13, 12], [11, 2], [11, 3], [10, 15], [4, 13], [11, 16], [15, 5], [13, 12], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [4, 13], [11, 2], [17, 6], [14, 8], [12, 7], [6, 4], [1, 12], [0, 8], [17, 19], [4, 13], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [4, 13], [0, 17], [18, 3], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [15, 0], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [0, 17], [13, 7], [5, 16], [2, 12], [17, 19], [1, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [17, 19], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [13, 7], [17, 4], [15, 5], [14, 8], [4, 13], [1, 12], [19, 6], [10, 15], [4, 7], [6, 1], [13, 7], [16, 3], [15, 0], [5, 1], [15, 1], [10, 8], [6, 4], [14, 8], [5, 1], [6, 16], [19, 6], [15, 8], [19, 4], [13, 7], [17, 19], [6, 4], [19, 6], [1, 12], [0, 5], [10, 15], [11, 3], [4, 7], [11, 2], [13, 7], [17, 19], [8, 11], [2, 12], [19, 6], [1, 12], [15, 5], ----End Timer [Execute Mapping]:  3.186697006225586

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[25, 31]
[63, 76]
[99, 103]
[95, 108]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[7, 10, 16]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 7, 10]
[32, 47, 59]
[111, 119, 122]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[25, 31]
[63, 76]
[99, 103]
[95, 108]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0003435611724854

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 7, 10] ccc => cc, Pos: [7, 10, 16] ccc => cc, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [32, 47, 59] ccc => cc, Pos: [63, 76] cc => I, Pos: [63, 76] cc => I, Pos: [95, 108] cc => I, Pos: [95, 108] cc => I, Pos: [99, 103] cc => I, Pos: [99, 103] cc => I, Pos: [111, 119, 122] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 10, 16] ccc => cc,
 Pos: [25, 31] cc => I,
 Pos: [32, 47, 59] ccc => cc,
 Pos: [63, 76] cc => I,
 Pos: [95, 108] cc => I,
 Pos: [99, 103] cc => I,
 Pos: [111, 119, 122] ccc => cc]
Change: 7, Saving: 22

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 10, 16] ccc => cc
Apply:  Pos: [25, 31] cc => I
Apply:  Pos: [32, 47, 59] ccc => cc
Apply:  Pos: [63, 76] cc => I
Apply:  Pos: [95, 108] cc => I
Apply:  Pos: [99, 103] cc => I
Apply:  Pos: [111, 119, 122] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [13, 12], [11, 3], [11, 2], [10, 15], [4, 12], [11, 16], [15, 5], [13, 12], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [6, 4], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [2, 12], [1, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [13, 7], [17, 4], [15, 5], [14, 8], [4, 13], [1, 12], [19, 6], [10, 15], [4, 7], [6, 1], [16, 3], [15, 0], [15, 1], [10, 8], [6, 4], [14, 8], [6, 16], [19, 6], [15, 8], [19, 4], [17, 19], [6, 4], [17, 19], [1, 12], [0, 5], [10, 15], [11, 3], [4, 7], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [1, 12], [15, 5], ----End Timer [Execute Mapping]:  2.0003435611724854

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 32]
[99, 101]
[102, 111]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 32]
[99, 101]
[102, 111]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7347192764282227

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 32] cc => I, Pos: [20, 32] cc => I, Pos: [99, 101] cc => I, Pos: [99, 101] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 32] cc => I, Pos: [99, 101] cc => I, Pos: [102, 111] cc => I]
Change: 3, Saving: 12

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 32] cc => I
Apply:  Pos: [99, 101] cc => I
Apply:  Pos: [102, 111] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [13, 12], [11, 2], [11, 3], [10, 15], [4, 12], [11, 16], [15, 5], [13, 12], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 7], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [1, 12], [2, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [13, 7], [17, 4], [15, 5], [14, 8], [4, 13], [1, 12], [19, 6], [10, 15], [4, 7], [6, 1], [16, 3], [15, 1], [15, 0], [10, 8], [6, 4], [14, 8], [6, 16], [19, 6], [15, 8], [19, 4], [6, 4], [0, 5], [10, 15], [11, 3], [4, 7], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [15, 5], ----End Timer [Execute Mapping]:  1.7347192764282227

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5942816734313965

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [13, 12], [11, 3], [11, 2], [10, 15], [4, 12], [11, 16], [15, 5], [13, 12], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 12], [13, 7], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [2, 12], [1, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [13, 7], [17, 4], [15, 5], [14, 8], [4, 13], [1, 12], [19, 6], [10, 15], [4, 7], [6, 1], [16, 3], [15, 0], [15, 1], [10, 8], [6, 4], [14, 8], [6, 16], [19, 6], [15, 8], [6, 4], [19, 4], [0, 5], [10, 15], [11, 3], [4, 7], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [15, 5], ----End Timer [Execute Mapping]:  1.5942816734313965

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [108] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 31 - (small)
 - circuit cycle: 216

Reduced: 
 - size: 72 (40.00%)
 - cycle: 144 (40.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.062482595443725586

[6, 16], [18, 3], [17, 4], [13, 12], [6, 4], [11, 2], [6, 4], [11, 3], [14, 9], [10, 15], [4, 13], [11, 16], [15, 5], [14, 9], [13, 12], [0, 5], [16, 3], [1, 13], [8, 11], [15, 5], [1, 13], [5, 6], [11, 16], [4, 13], [11, 2], [17, 6], [14, 8], [12, 7], [4, 13], [11, 16], [1, 12], [0, 8], [17, 19], [6, 4], [3, 2], [8, 11], [4, 13], [16, 2], [11, 3], [14, 9], [4, 13], [8, 11], [0, 17], [18, 3], [10, 15], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [10, 15], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [15, 0], [13, 7], [3, 2], [19, 6], [13, 7], [0, 5], [6, 16], [10, 14], [12, 7], [19, 4], [11, 3], [0, 5], [16, 2], [13, 7], [14, 8], [15, 5], [0, 17], [1, 13], [5, 16], [2, 12], [10, 14], [17, 19], [1, 12], [17, 6], [14, 8], [18, 3], [15, 5], [13, 7], [1, 7], [9, 11], [14, 8], [4, 13], [17, 6], [13, 7], [15, 8], [5, 1], [17, 19], [13, 7], [8, 9], [17, 19], [11, 16], [1, 7], [17, 6], [15, 8], [9, 11], [1, 7], [6, 4], [10, 15], [17, 19], [1, 12], [14, 9], [16, 2], [13, 12], [10, 15], [5, 6], [0, 17], [1, 13], [6, 4], [3, 2], [11, 16], [13, 7], [17, 4], [15, 5], [14, 8], [4, 13], [1, 12], [3, 2], [19, 6], [9, 18], [10, 15], [4, 13], [6, 1], [13, 7], [16, 3], [15, 0], [5, 1], [4, 13], [15, 5], [10, 14], [6, 4], [14, 8], [5, 1], [6, 16], [11, 3], [19, 6], [10, 14], [15, 8], [19, 4], [11, 3], [13, 7], [16, 2], [17, 19], [6, 4], [10, 14], [15, 5], [19, 6], [1, 12], [0, 5], [10, 15], [11, 3], [16, 2], [19, 6], [9, 18], [4, 13], [16, 1], [10, 14], [19, 6], [11, 2], [14, 9], [13, 7], [16, 1], [17, 19], [14, 9], [16, 3], [4, 13], [8, 11], [2, 12], [19, 6], [1, 12], [15, 5], [16, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]
[8, 13]
[17, 20]
[23, 28]
[22, 29]
[13, 39]
[36, 40]
[44, 52]
[60, 63]
[64, 70]
[83, 89]
[82, 91]
[80, 95]
[92, 96]
[95, 98]
[91, 101]
[100, 104]
[98, 107]
[106, 112]
[117, 125]
[123, 129]
[142, 147]
[144, 152]
[147, 158]
[149, 159]
[154, 160]
[127, 161]
[152, 164]
[160, 165]
[163, 169]
[167, 171]
[172, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[35, 38, 41]
[66, 73, 79]
[74, 77, 85]
[93, 97, 102]
[129, 131, 135]
[137, 139, 144]
[136, 140, 153]
[162, 168, 173]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[28, 33, 36]
[73, 79, 83]
[72, 76, 86]
[105, 113, 116]
[122, 137, 139]
[134, 136, 140]
[165, 170, 176]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]
[8, 13]
[17, 20]
[23, 28]
[22, 29]
[13, 39]
[36, 40]
[44, 52]
[60, 63]
[64, 70]
[83, 89]
[82, 91]
[80, 95]
[92, 96]
[95, 98]
[91, 101]
[100, 104]
[98, 107]
[106, 112]
[117, 125]
[123, 129]
[142, 147]
[144, 152]
[147, 158]
[149, 159]
[154, 160]
[127, 161]
[152, 164]
[160, 165]
[163, 169]
[167, 171]
[172, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.234682083129883

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 6] cc => I, Pos: [4, 6] cc => I, Pos: [8, 13] cc => I, Pos: [8, 13] cc => I, Pos: [13, 39] cc => I, Pos: [13, 39] cc => I, Pos: [17, 20] cc => I, Pos: [17, 20] cc => I, Pos: [22, 29] cc => I, Pos: [22, 29] cc => I, Pos: [23, 28] cc => I, Pos: [23, 28] cc => I, Pos: [28, 33, 36] ccc => cc, Pos: [35, 38, 41] ccc => cc, Pos: [36, 40] cc => I, Pos: [36, 40] cc => I, Pos: [44, 52] cc => I, Pos: [44, 52] cc => I, Pos: [60, 63] cc => I, Pos: [60, 63] cc => I, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [66, 73, 79] ccc => cc, Pos: [72, 76, 86] ccc => cc, Pos: [73, 79, 83] ccc => cc, Pos: [74, 77, 85] ccc => cc, Pos: [80, 95] cc => I, Pos: [80, 95] cc => I, Pos: [82, 91] cc => I, Pos: [82, 91] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [91, 101] cc => I, Pos: [91, 101] cc => I, Pos: [92, 96] cc => I, Pos: [92, 96] cc => I, Pos: [93, 97, 102] ccc => cc, Pos: [95, 98] cc => I, Pos: [95, 98] cc => I, Pos: [98, 107] cc => I, Pos: [98, 107] cc => I, Pos: [100, 104] cc => I, Pos: [100, 104] cc => I, Pos: [105, 113, 116] ccc => cc, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [122, 137, 139] ccc => cc, Pos: [123, 129] cc => I, Pos: [123, 129] cc => I, Pos: [127, 161] cc => I, Pos: [127, 161] cc => I, Pos: [129, 131, 135] ccc => cc, Pos: [134, 136, 140] ccc => cc, Pos: [136, 140, 153] ccc => cc, Pos: [137, 139, 144] ccc => cc, Pos: [142, 147] cc => I, Pos: [142, 147] cc => I, Pos: [144, 152] cc => I, Pos: [144, 152] cc => I, Pos: [147, 158] cc => I, Pos: [147, 158] cc => I, Pos: [149, 159] cc => I, Pos: [149, 159] cc => I, Pos: [152, 164] cc => I, Pos: [152, 164] cc => I, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [162, 168, 173] ccc => cc, Pos: [163, 169] cc => I, Pos: [163, 169] cc => I, Pos: [165, 170, 176] ccc => cc, Pos: [167, 171] cc => I, Pos: [167, 171] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I]

--------End Timer [Generate Plans]:  0.07812094688415527

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 6] cc => I,
 Pos: [8, 13] cc => I,
 Pos: [17, 20] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [28, 33, 36] ccc => cc,
 Pos: [35, 38, 41] ccc => cc,
 Pos: [44, 52] cc => I,
 Pos: [60, 63] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [66, 73, 79] ccc => cc,
 Pos: [72, 76, 86] ccc => cc,
 Pos: [74, 77, 85] ccc => cc,
 Pos: [95, 98] cc => I,
 Pos: [82, 91] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [92, 96] cc => I,
 Pos: [93, 97, 102] ccc => cc,
 Pos: [100, 104] cc => I,
 Pos: [105, 113, 116] ccc => cc,
 Pos: [106, 112] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [122, 137, 139] ccc => cc,
 Pos: [129, 131, 135] ccc => cc,
 Pos: [127, 161] cc => I,
 Pos: [134, 136, 140] ccc => cc,
 Pos: [147, 158] cc => I,
 Pos: [144, 152] cc => I,
 Pos: [149, 159] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 169] cc => I,
 Pos: [165, 170, 176] ccc => cc,
 Pos: [167, 171] cc => I,
 Pos: [172, 179] cc => I]
Change: 34, Saving: 35

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [8, 13] cc => I
Apply:  Pos: [17, 20] cc => I
Apply:  Pos: [22, 29] cc => I
Apply:  Pos: [28, 33, 36] ccc => cc
Apply:  Pos: [35, 38, 41] ccc => cc
Apply:  Pos: [44, 52] cc => I
Apply:  Pos: [60, 63] cc => I
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [66, 73, 79] ccc => cc
Apply:  Pos: [72, 76, 86] ccc => cc
Apply:  Pos: [74, 77, 85] ccc => cc
Apply:  Pos: [95, 98] cc => I
Apply:  Pos: [82, 91] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [92, 96] cc => I
Apply:  Pos: [93, 97, 102] ccc => cc
Apply:  Pos: [100, 104] cc => I
Apply:  Pos: [105, 113, 116] ccc => cc
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [122, 137, 139] ccc => cc
Apply:  Pos: [129, 131, 135] ccc => cc
Apply:  Pos: [127, 161] cc => I
Apply:  Pos: [134, 136, 140] ccc => cc
Apply:  Pos: [147, 158] cc => I
Apply:  Pos: [144, 152] cc => I
Apply:  Pos: [149, 159] cc => I
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [162, 168, 173] ccc => cc
Apply:  Pos: [163, 169] cc => I
Apply:  Pos: [165, 170, 176] ccc => cc
Apply:  Pos: [167, 171] cc => I
Apply:  Pos: [172, 179] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [13, 12], [11, 2], [11, 3], [10, 15], [4, 13], [11, 16], [15, 5], [13, 12], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [4, 13], [11, 2], [17, 6], [14, 8], [12, 7], [6, 4], [1, 12], [0, 8], [17, 19], [4, 13], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [4, 13], [0, 17], [18, 3], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [15, 0], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [0, 17], [13, 7], [5, 16], [2, 12], [17, 19], [1, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [17, 19], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [13, 7], [17, 4], [15, 5], [10, 14], [4, 13], [1, 12], [19, 6], [10, 15], [4, 7], [6, 1], [13, 7], [16, 3], [15, 0], [15, 5], [5, 1], [14, 8], [6, 4], [6, 16], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [17, 19], [6, 4], [15, 5], [1, 12], [0, 5], [10, 15], [4, 7], [10, 14], [17, 19], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [1, 12], [15, 5], ----End Timer [Execute Mapping]:  3.312803030014038

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[25, 31]
[63, 76]
[95, 107]
[108, 116]
[111, 121]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[7, 10, 16]
[97, 99, 110]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 7, 10]
[32, 47, 59]
[87, 92, 97]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[25, 31]
[63, 76]
[95, 107]
[108, 116]
[111, 121]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9845807552337646

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 7, 10] ccc => cc, Pos: [7, 10, 16] ccc => cc, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [32, 47, 59] ccc => cc, Pos: [63, 76] cc => I, Pos: [63, 76] cc => I, Pos: [87, 92, 97] ccc => cc, Pos: [95, 107] cc => I, Pos: [95, 107] cc => I, Pos: [97, 99, 110] ccc => cc, Pos: [108, 116] cc => I, Pos: [108, 116] cc => I, Pos: [111, 121] cc => I, Pos: [111, 121] cc => I]

--------End Timer [Generate Plans]:  0.03124856948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 10, 16] ccc => cc,
 Pos: [25, 31] cc => I,
 Pos: [32, 47, 59] ccc => cc,
 Pos: [63, 76] cc => I,
 Pos: [87, 92, 97] ccc => cc,
 Pos: [95, 107] cc => I,
 Pos: [108, 116] cc => I,
 Pos: [111, 121] cc => I]
Change: 8, Saving: 7

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 10, 16] ccc => cc
Apply:  Pos: [25, 31] cc => I
Apply:  Pos: [32, 47, 59] ccc => cc
Apply:  Pos: [63, 76] cc => I
Apply:  Pos: [87, 92, 97] ccc => cc
Apply:  Pos: [95, 107] cc => I
Apply:  Pos: [108, 116] cc => I
Apply:  Pos: [111, 121] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [13, 12], [11, 3], [11, 2], [10, 15], [4, 12], [11, 16], [15, 5], [13, 12], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [6, 4], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [2, 12], [1, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [13, 7], [17, 4], [10, 15], [10, 14], [4, 13], [1, 12], [19, 6], [15, 5], [4, 7], [6, 1], [16, 3], [15, 0], [5, 1], [14, 8], [6, 16], [6, 4], [11, 3], [19, 6], [15, 8], [19, 4], [6, 4], [15, 5], [0, 5], [10, 15], [4, 7], [10, 14], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [15, 5], ----End Timer [Execute Mapping]:  2.01582932472229

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 32]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[101, 102, 110]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 32]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.703394889831543

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 32] cc => I, Pos: [20, 32] cc => I, Pos: [101, 102, 110] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 32] cc => I, Pos: [101, 102, 110] ccc => cc]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 32] cc => I
Apply:  Pos: [101, 102, 110] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [13, 12], [11, 2], [11, 3], [10, 15], [4, 12], [11, 16], [15, 5], [13, 12], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 7], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [1, 12], [2, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [13, 7], [17, 4], [10, 14], [10, 15], [4, 13], [1, 12], [19, 6], [15, 5], [4, 7], [6, 1], [16, 3], [15, 0], [5, 1], [14, 8], [6, 4], [6, 16], [11, 3], [19, 6], [15, 8], [6, 4], [19, 4], [0, 5], [10, 15], [15, 5], [4, 7], [10, 14], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], ----End Timer [Execute Mapping]:  1.703394889831543

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6252098083496094

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [13, 12], [11, 3], [11, 2], [10, 15], [4, 12], [11, 16], [15, 5], [13, 12], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 12], [13, 7], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [2, 12], [1, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [13, 7], [17, 4], [10, 15], [10, 14], [4, 13], [1, 12], [19, 6], [15, 5], [4, 7], [6, 1], [16, 3], [15, 0], [5, 1], [14, 8], [6, 16], [6, 4], [11, 3], [19, 6], [15, 8], [19, 4], [6, 4], [0, 5], [10, 15], [15, 5], [4, 7], [10, 14], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], ----End Timer [Execute Mapping]:  1.6252098083496094

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [108] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 30 - (small)
 - circuit cycle: 216

Reduced: 
 - size: 72 (40.00%)
 - depth: 15 (33.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07812380790710449

[6, 16], [18, 3], [17, 4], [13, 12], [6, 4], [11, 2], [6, 4], [11, 3], [14, 9], [10, 15], [4, 13], [11, 16], [15, 5], [14, 9], [13, 12], [0, 5], [16, 3], [1, 13], [8, 11], [15, 5], [1, 13], [5, 6], [11, 16], [4, 13], [11, 2], [17, 6], [14, 8], [12, 7], [4, 13], [11, 16], [1, 12], [0, 8], [17, 19], [6, 4], [3, 2], [8, 11], [4, 13], [16, 2], [11, 3], [14, 9], [4, 13], [8, 11], [0, 17], [18, 3], [10, 15], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [10, 15], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [15, 0], [13, 7], [3, 2], [19, 6], [13, 7], [0, 5], [6, 16], [10, 14], [12, 7], [19, 4], [11, 3], [0, 5], [16, 2], [13, 7], [14, 8], [15, 5], [0, 17], [1, 13], [5, 16], [2, 12], [10, 14], [17, 19], [1, 12], [17, 6], [14, 8], [18, 3], [15, 5], [13, 7], [1, 7], [9, 11], [14, 8], [4, 13], [17, 6], [13, 7], [15, 8], [5, 1], [17, 19], [13, 7], [8, 9], [17, 19], [11, 16], [1, 7], [17, 6], [15, 8], [9, 11], [1, 7], [6, 4], [10, 15], [17, 19], [1, 12], [14, 9], [16, 2], [13, 12], [10, 15], [5, 6], [0, 17], [1, 13], [6, 4], [3, 2], [11, 16], [13, 7], [17, 4], [15, 5], [14, 8], [4, 13], [1, 12], [3, 2], [19, 6], [9, 18], [10, 15], [4, 13], [6, 1], [13, 7], [16, 3], [15, 0], [5, 1], [4, 13], [15, 5], [10, 14], [6, 4], [14, 8], [5, 1], [6, 16], [11, 3], [19, 6], [10, 14], [15, 8], [19, 4], [11, 3], [13, 7], [16, 2], [17, 19], [6, 4], [10, 14], [15, 5], [19, 6], [1, 12], [0, 5], [10, 15], [11, 3], [16, 2], [19, 6], [9, 18], [4, 13], [16, 1], [10, 14], [19, 6], [11, 2], [14, 9], [13, 7], [16, 1], [17, 19], [14, 9], [16, 3], [4, 13], [8, 11], [2, 12], [19, 6], [1, 12], [15, 5], [16, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]
[8, 13]
[17, 20]
[23, 28]
[22, 29]
[13, 39]
[36, 40]
[44, 52]
[60, 63]
[64, 70]
[83, 89]
[82, 91]
[80, 95]
[92, 96]
[95, 98]
[91, 101]
[100, 104]
[98, 107]
[106, 112]
[117, 125]
[123, 129]
[142, 147]
[144, 152]
[147, 158]
[149, 159]
[154, 160]
[127, 161]
[152, 164]
[160, 165]
[163, 169]
[167, 171]
[172, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[35, 38, 41]
[66, 73, 79]
[74, 77, 85]
[93, 97, 102]
[129, 131, 135]
[137, 139, 144]
[136, 140, 153]
[162, 168, 173]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[28, 33, 36]
[73, 79, 83]
[72, 76, 86]
[105, 113, 116]
[122, 137, 139]
[134, 136, 140]
[165, 170, 176]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]
[8, 13]
[17, 20]
[23, 28]
[22, 29]
[13, 39]
[36, 40]
[44, 52]
[60, 63]
[64, 70]
[83, 89]
[82, 91]
[80, 95]
[92, 96]
[95, 98]
[91, 101]
[100, 104]
[98, 107]
[106, 112]
[117, 125]
[123, 129]
[142, 147]
[144, 152]
[147, 158]
[149, 159]
[154, 160]
[127, 161]
[152, 164]
[160, 165]
[163, 169]
[167, 171]
[172, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2031359672546387

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 6] cc => I, Pos: [4, 6] cc => I, Pos: [8, 13] cc => I, Pos: [8, 13] cc => I, Pos: [13, 39] cc => I, Pos: [13, 39] cc => I, Pos: [17, 20] cc => I, Pos: [17, 20] cc => I, Pos: [22, 29] cc => I, Pos: [22, 29] cc => I, Pos: [23, 28] cc => I, Pos: [23, 28] cc => I, Pos: [28, 33, 36] ccc => cc, Pos: [35, 38, 41] ccc => cc, Pos: [36, 40] cc => I, Pos: [36, 40] cc => I, Pos: [44, 52] cc => I, Pos: [44, 52] cc => I, Pos: [60, 63] cc => I, Pos: [60, 63] cc => I, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [66, 73, 79] ccc => cc, Pos: [72, 76, 86] ccc => cc, Pos: [73, 79, 83] ccc => cc, Pos: [74, 77, 85] ccc => cc, Pos: [80, 95] cc => I, Pos: [80, 95] cc => I, Pos: [82, 91] cc => I, Pos: [82, 91] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [91, 101] cc => I, Pos: [91, 101] cc => I, Pos: [92, 96] cc => I, Pos: [92, 96] cc => I, Pos: [93, 97, 102] ccc => cc, Pos: [95, 98] cc => I, Pos: [95, 98] cc => I, Pos: [98, 107] cc => I, Pos: [98, 107] cc => I, Pos: [100, 104] cc => I, Pos: [100, 104] cc => I, Pos: [105, 113, 116] ccc => cc, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [122, 137, 139] ccc => cc, Pos: [123, 129] cc => I, Pos: [123, 129] cc => I, Pos: [127, 161] cc => I, Pos: [127, 161] cc => I, Pos: [129, 131, 135] ccc => cc, Pos: [134, 136, 140] ccc => cc, Pos: [136, 140, 153] ccc => cc, Pos: [137, 139, 144] ccc => cc, Pos: [142, 147] cc => I, Pos: [142, 147] cc => I, Pos: [144, 152] cc => I, Pos: [144, 152] cc => I, Pos: [147, 158] cc => I, Pos: [147, 158] cc => I, Pos: [149, 159] cc => I, Pos: [149, 159] cc => I, Pos: [152, 164] cc => I, Pos: [152, 164] cc => I, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [162, 168, 173] ccc => cc, Pos: [163, 169] cc => I, Pos: [163, 169] cc => I, Pos: [165, 170, 176] ccc => cc, Pos: [167, 171] cc => I, Pos: [167, 171] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I]

--------End Timer [Generate Plans]:  0.09374856948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 6] cc => I,
 Pos: [8, 13] cc => I,
 Pos: [17, 20] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [23, 28] cc => I,
 Pos: [35, 38, 41] ccc => cc,
 Pos: [36, 40] cc => I,
 Pos: [44, 52] cc => I,
 Pos: [60, 63] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [66, 73, 79] ccc => cc,
 Pos: [72, 76, 86] ccc => cc,
 Pos: [74, 77, 85] ccc => cc,
 Pos: [95, 98] cc => I,
 Pos: [82, 91] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [92, 96] cc => I,
 Pos: [93, 97, 102] ccc => cc,
 Pos: [100, 104] cc => I,
 Pos: [105, 113, 116] ccc => cc,
 Pos: [106, 112] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [137, 139, 144] ccc => cc,
 Pos: [123, 129] cc => I,
 Pos: [127, 161] cc => I,
 Pos: [136, 140, 153] ccc => cc,
 Pos: [147, 158] cc => I,
 Pos: [149, 159] cc => I,
 Pos: [152, 164] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 169] cc => I,
 Pos: [165, 170, 176] ccc => cc,
 Pos: [167, 171] cc => I,
 Pos: [172, 179] cc => I]
Change: 35, Saving: 35

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [8, 13] cc => I
Apply:  Pos: [17, 20] cc => I
Apply:  Pos: [22, 29] cc => I
Apply:  Pos: [23, 28] cc => I
Apply:  Pos: [35, 38, 41] ccc => cc
Apply:  Pos: [36, 40] cc => I
Apply:  Pos: [44, 52] cc => I
Apply:  Pos: [60, 63] cc => I
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [66, 73, 79] ccc => cc
Apply:  Pos: [72, 76, 86] ccc => cc
Apply:  Pos: [74, 77, 85] ccc => cc
Apply:  Pos: [95, 98] cc => I
Apply:  Pos: [82, 91] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [92, 96] cc => I
Apply:  Pos: [93, 97, 102] ccc => cc
Apply:  Pos: [100, 104] cc => I
Apply:  Pos: [105, 113, 116] ccc => cc
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [137, 139, 144] ccc => cc
Apply:  Pos: [123, 129] cc => I
Apply:  Pos: [127, 161] cc => I
Apply:  Pos: [136, 140, 153] ccc => cc
Apply:  Pos: [147, 158] cc => I
Apply:  Pos: [149, 159] cc => I
Apply:  Pos: [152, 164] cc => I
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [162, 168, 173] ccc => cc
Apply:  Pos: [163, 169] cc => I
Apply:  Pos: [165, 170, 176] ccc => cc
Apply:  Pos: [167, 171] cc => I
Apply:  Pos: [172, 179] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [13, 12], [11, 2], [11, 3], [10, 15], [4, 13], [11, 16], [15, 5], [13, 12], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [6, 4], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [0, 17], [18, 3], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [15, 0], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [0, 17], [13, 7], [5, 16], [2, 12], [17, 19], [1, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [17, 19], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [13, 7], [17, 4], [15, 5], [14, 8], [1, 12], [19, 6], [10, 15], [6, 1], [13, 7], [16, 3], [15, 0], [5, 1], [4, 13], [15, 1], [10, 8], [6, 4], [14, 8], [5, 1], [6, 16], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [17, 19], [6, 4], [1, 12], [0, 5], [10, 15], [4, 7], [17, 19], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [1, 12], [15, 5], ----End Timer [Execute Mapping]:  3.296884536743164

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[23, 32]
[60, 73]
[82, 90]
[106, 112]
[108, 117]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 7, 10]
[29, 44, 56]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[23, 32]
[60, 73]
[82, 90]
[106, 112]
[108, 117]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.8749959468841553

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 7, 10] ccc => cc, Pos: [23, 32] cc => I, Pos: [23, 32] cc => I, Pos: [29, 44, 56] ccc => cc, Pos: [60, 73] cc => I, Pos: [60, 73] cc => I, Pos: [82, 90] cc => I, Pos: [82, 90] cc => I, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [108, 117] cc => I, Pos: [108, 117] cc => I]

--------End Timer [Generate Plans]:  0.016581058502197266

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 7, 10] ccc => cc,
 Pos: [23, 32] cc => I,
 Pos: [29, 44, 56] ccc => cc,
 Pos: [60, 73] cc => I,
 Pos: [82, 90] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [108, 117] cc => I]
Change: 7, Saving: 7

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 7, 10] ccc => cc
Apply:  Pos: [23, 32] cc => I
Apply:  Pos: [29, 44, 56] ccc => cc
Apply:  Pos: [60, 73] cc => I
Apply:  Pos: [82, 90] cc => I
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [108, 117] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 13], [11, 3], [11, 2], [10, 15], [13, 12], [11, 16], [15, 5], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 7], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [2, 12], [1, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [15, 5], [14, 8], [1, 12], [19, 6], [10, 15], [6, 1], [16, 3], [15, 0], [5, 1], [4, 13], [15, 1], [10, 8], [6, 4], [14, 8], [5, 1], [6, 16], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [0, 5], [10, 15], [4, 7], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [15, 5], ----End Timer [Execute Mapping]:  1.8915770053863525

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.609022617340088

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [10, 13] cc => I, Pos: [10, 13] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [10, 13] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [10, 13] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 13], [11, 2], [11, 3], [10, 15], [13, 12], [11, 16], [0, 5], [16, 3], [8, 11], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 12], [13, 7], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [1, 12], [2, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [15, 5], [14, 8], [1, 12], [19, 6], [10, 15], [6, 1], [16, 3], [15, 0], [5, 1], [4, 13], [15, 1], [10, 8], [6, 4], [14, 8], [5, 1], [6, 16], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [0, 5], [10, 15], [4, 7], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [15, 5], ----End Timer [Execute Mapping]:  1.609022617340088

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.562561273574829

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 13], [11, 3], [11, 2], [10, 15], [13, 12], [11, 16], [0, 5], [16, 3], [8, 11], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 7], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [2, 12], [1, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [15, 5], [14, 8], [1, 12], [19, 6], [10, 15], [6, 1], [16, 3], [15, 0], [5, 1], [4, 13], [15, 1], [10, 8], [6, 4], [14, 8], [5, 1], [6, 16], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [0, 5], [10, 15], [4, 7], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [15, 5], ----End Timer [Execute Mapping]:  1.562561273574829

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [106] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 30 - (small)
 - circuit cycle: 212

Reduced: 
 - size: 74 (41.11%)
 - depth: 15 (33.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07812070846557617

[6, 16], [18, 3], [17, 4], [13, 12], [6, 4], [11, 2], [6, 4], [11, 3], [14, 9], [10, 15], [4, 13], [11, 16], [15, 5], [14, 9], [13, 12], [0, 5], [16, 3], [1, 13], [8, 11], [15, 5], [1, 13], [5, 6], [11, 16], [4, 13], [11, 2], [17, 6], [14, 8], [12, 7], [4, 13], [11, 16], [1, 12], [0, 8], [17, 19], [6, 4], [3, 2], [8, 11], [4, 13], [16, 2], [11, 3], [14, 9], [4, 13], [8, 11], [0, 17], [18, 3], [10, 15], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [10, 15], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [15, 0], [13, 7], [3, 2], [19, 6], [13, 7], [0, 5], [6, 16], [10, 14], [12, 7], [19, 4], [11, 3], [0, 5], [16, 2], [13, 7], [14, 8], [15, 5], [0, 17], [1, 13], [5, 16], [2, 12], [10, 14], [17, 19], [1, 12], [17, 6], [14, 8], [18, 3], [15, 5], [13, 7], [1, 7], [9, 11], [14, 8], [4, 13], [17, 6], [13, 7], [15, 8], [5, 1], [17, 19], [13, 7], [8, 9], [17, 19], [11, 16], [1, 7], [17, 6], [15, 8], [9, 11], [1, 7], [6, 4], [10, 15], [17, 19], [1, 12], [14, 9], [16, 2], [13, 12], [10, 15], [5, 6], [0, 17], [1, 13], [6, 4], [3, 2], [11, 16], [13, 7], [17, 4], [15, 5], [14, 8], [4, 13], [1, 12], [3, 2], [19, 6], [9, 18], [10, 15], [4, 13], [6, 1], [13, 7], [16, 3], [15, 0], [5, 1], [4, 13], [15, 5], [10, 14], [6, 4], [14, 8], [5, 1], [6, 16], [11, 3], [19, 6], [10, 14], [15, 8], [19, 4], [11, 3], [13, 7], [16, 2], [17, 19], [6, 4], [10, 14], [15, 5], [19, 6], [1, 12], [0, 5], [10, 15], [11, 3], [16, 2], [19, 6], [9, 18], [4, 13], [16, 1], [10, 14], [19, 6], [11, 2], [14, 9], [13, 7], [16, 1], [17, 19], [14, 9], [16, 3], [4, 13], [8, 11], [2, 12], [19, 6], [1, 12], [15, 5], [16, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]
[8, 13]
[17, 20]
[23, 28]
[22, 29]
[13, 39]
[36, 40]
[44, 52]
[60, 63]
[64, 70]
[83, 89]
[82, 91]
[80, 95]
[92, 96]
[95, 98]
[91, 101]
[100, 104]
[98, 107]
[106, 112]
[117, 125]
[123, 129]
[142, 147]
[144, 152]
[147, 158]
[149, 159]
[154, 160]
[127, 161]
[152, 164]
[160, 165]
[163, 169]
[167, 171]
[172, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[35, 38, 41]
[66, 73, 79]
[74, 77, 85]
[93, 97, 102]
[129, 131, 135]
[137, 139, 144]
[136, 140, 153]
[162, 168, 173]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[28, 33, 36]
[73, 79, 83]
[72, 76, 86]
[105, 113, 116]
[122, 137, 139]
[134, 136, 140]
[165, 170, 176]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]
[8, 13]
[17, 20]
[23, 28]
[22, 29]
[13, 39]
[36, 40]
[44, 52]
[60, 63]
[64, 70]
[83, 89]
[82, 91]
[80, 95]
[92, 96]
[95, 98]
[91, 101]
[100, 104]
[98, 107]
[106, 112]
[117, 125]
[123, 129]
[142, 147]
[144, 152]
[147, 158]
[149, 159]
[154, 160]
[127, 161]
[152, 164]
[160, 165]
[163, 169]
[167, 171]
[172, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.171861171722412

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 6] cc => I, Pos: [4, 6] cc => I, Pos: [8, 13] cc => I, Pos: [8, 13] cc => I, Pos: [13, 39] cc => I, Pos: [13, 39] cc => I, Pos: [17, 20] cc => I, Pos: [17, 20] cc => I, Pos: [22, 29] cc => I, Pos: [22, 29] cc => I, Pos: [23, 28] cc => I, Pos: [23, 28] cc => I, Pos: [28, 33, 36] ccc => cc, Pos: [35, 38, 41] ccc => cc, Pos: [36, 40] cc => I, Pos: [36, 40] cc => I, Pos: [44, 52] cc => I, Pos: [44, 52] cc => I, Pos: [60, 63] cc => I, Pos: [60, 63] cc => I, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [66, 73, 79] ccc => cc, Pos: [72, 76, 86] ccc => cc, Pos: [73, 79, 83] ccc => cc, Pos: [74, 77, 85] ccc => cc, Pos: [80, 95] cc => I, Pos: [80, 95] cc => I, Pos: [82, 91] cc => I, Pos: [82, 91] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [91, 101] cc => I, Pos: [91, 101] cc => I, Pos: [92, 96] cc => I, Pos: [92, 96] cc => I, Pos: [93, 97, 102] ccc => cc, Pos: [95, 98] cc => I, Pos: [95, 98] cc => I, Pos: [98, 107] cc => I, Pos: [98, 107] cc => I, Pos: [100, 104] cc => I, Pos: [100, 104] cc => I, Pos: [105, 113, 116] ccc => cc, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [122, 137, 139] ccc => cc, Pos: [123, 129] cc => I, Pos: [123, 129] cc => I, Pos: [127, 161] cc => I, Pos: [127, 161] cc => I, Pos: [129, 131, 135] ccc => cc, Pos: [134, 136, 140] ccc => cc, Pos: [136, 140, 153] ccc => cc, Pos: [137, 139, 144] ccc => cc, Pos: [142, 147] cc => I, Pos: [142, 147] cc => I, Pos: [144, 152] cc => I, Pos: [144, 152] cc => I, Pos: [147, 158] cc => I, Pos: [147, 158] cc => I, Pos: [149, 159] cc => I, Pos: [149, 159] cc => I, Pos: [152, 164] cc => I, Pos: [152, 164] cc => I, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [162, 168, 173] ccc => cc, Pos: [163, 169] cc => I, Pos: [163, 169] cc => I, Pos: [165, 170, 176] ccc => cc, Pos: [167, 171] cc => I, Pos: [167, 171] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I]

--------End Timer [Generate Plans]:  0.0937495231628418

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 6] cc => I,
 Pos: [13, 39] cc => I,
 Pos: [17, 20] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [23, 28] cc => I,
 Pos: [35, 38, 41] ccc => cc,
 Pos: [36, 40] cc => I,
 Pos: [44, 52] cc => I,
 Pos: [60, 63] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [66, 73, 79] ccc => cc,
 Pos: [72, 76, 86] ccc => cc,
 Pos: [74, 77, 85] ccc => cc,
 Pos: [95, 98] cc => I,
 Pos: [82, 91] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [92, 96] cc => I,
 Pos: [93, 97, 102] ccc => cc,
 Pos: [100, 104] cc => I,
 Pos: [105, 113, 116] ccc => cc,
 Pos: [106, 112] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [137, 139, 144] ccc => cc,
 Pos: [123, 129] cc => I,
 Pos: [127, 161] cc => I,
 Pos: [134, 136, 140] ccc => cc,
 Pos: [147, 158] cc => I,
 Pos: [149, 159] cc => I,
 Pos: [152, 164] cc => I,
 Pos: [160, 165] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 169] cc => I,
 Pos: [167, 171] cc => I,
 Pos: [172, 179] cc => I]
Change: 34, Saving: 34

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [13, 39] cc => I
Apply:  Pos: [17, 20] cc => I
Apply:  Pos: [22, 29] cc => I
Apply:  Pos: [23, 28] cc => I
Apply:  Pos: [35, 38, 41] ccc => cc
Apply:  Pos: [36, 40] cc => I
Apply:  Pos: [44, 52] cc => I
Apply:  Pos: [60, 63] cc => I
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [66, 73, 79] ccc => cc
Apply:  Pos: [72, 76, 86] ccc => cc
Apply:  Pos: [74, 77, 85] ccc => cc
Apply:  Pos: [95, 98] cc => I
Apply:  Pos: [82, 91] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [92, 96] cc => I
Apply:  Pos: [93, 97, 102] ccc => cc
Apply:  Pos: [100, 104] cc => I
Apply:  Pos: [105, 113, 116] ccc => cc
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [137, 139, 144] ccc => cc
Apply:  Pos: [123, 129] cc => I
Apply:  Pos: [127, 161] cc => I
Apply:  Pos: [134, 136, 140] ccc => cc
Apply:  Pos: [147, 158] cc => I
Apply:  Pos: [149, 159] cc => I
Apply:  Pos: [152, 164] cc => I
Apply:  Pos: [160, 165] cc => I
Apply:  Pos: [162, 168, 173] ccc => cc
Apply:  Pos: [163, 169] cc => I
Apply:  Pos: [167, 171] cc => I
Apply:  Pos: [172, 179] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [13, 12], [11, 2], [11, 3], [14, 9], [10, 15], [4, 13], [11, 16], [15, 5], [13, 12], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [6, 4], [3, 2], [8, 3], [16, 2], [11, 3], [0, 17], [18, 3], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [15, 0], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [0, 17], [13, 7], [5, 16], [2, 12], [17, 19], [1, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [17, 19], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [13, 7], [17, 4], [15, 5], [14, 8], [1, 12], [19, 6], [10, 15], [6, 1], [13, 7], [16, 3], [15, 0], [15, 5], [4, 13], [5, 1], [10, 8], [6, 4], [14, 8], [6, 16], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [17, 19], [6, 4], [15, 5], [19, 6], [1, 12], [0, 5], [10, 15], [4, 7], [11, 2], [13, 7], [17, 19], [8, 11], [2, 12], [19, 6], [1, 12], [15, 5], ----End Timer [Execute Mapping]:  3.265610694885254

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[24, 32]
[60, 73]
[82, 90]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[92, 95, 107]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 8, 11]
[29, 44, 56]
[84, 88, 92]
[108, 115, 118]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[24, 32]
[60, 73]
[82, 90]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.8906011581420898

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 8, 11] ccc => cc, Pos: [24, 32] cc => I, Pos: [24, 32] cc => I, Pos: [29, 44, 56] ccc => cc, Pos: [60, 73] cc => I, Pos: [60, 73] cc => I, Pos: [82, 90] cc => I, Pos: [82, 90] cc => I, Pos: [84, 88, 92] ccc => cc, Pos: [92, 95, 107] ccc => cc, Pos: [108, 115, 118] ccc => cc]

--------End Timer [Generate Plans]:  0.031229257583618164

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 8, 11] ccc => cc,
 Pos: [24, 32] cc => I,
 Pos: [29, 44, 56] ccc => cc,
 Pos: [60, 73] cc => I,
 Pos: [82, 90] cc => I,
 Pos: [84, 88, 92] ccc => cc,
 Pos: [108, 115, 118] ccc => cc]
Change: 7, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 8, 11] ccc => cc
Apply:  Pos: [24, 32] cc => I
Apply:  Pos: [29, 44, 56] ccc => cc
Apply:  Pos: [60, 73] cc => I
Apply:  Pos: [82, 90] cc => I
Apply:  Pos: [84, 88, 92] ccc => cc
Apply:  Pos: [108, 115, 118] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 13], [11, 3], [11, 2], [14, 9], [10, 15], [13, 12], [11, 16], [15, 5], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [15, 0], [18, 3], [13, 7], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [2, 12], [1, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [10, 15], [14, 8], [1, 12], [19, 6], [15, 5], [6, 1], [16, 3], [15, 0], [4, 13], [5, 1], [10, 8], [6, 4], [14, 8], [6, 16], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [17, 19], [6, 4], [15, 5], [17, 19], [1, 12], [0, 5], [10, 15], [4, 7], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [1, 12], [15, 5], ----End Timer [Execute Mapping]:  1.921830415725708

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 14]
[96, 99]
[100, 108]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 14]
[96, 99]
[100, 108]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7343955039978027

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 14] cc => I, Pos: [11, 14] cc => I, Pos: [96, 99] cc => I, Pos: [96, 99] cc => I, Pos: [100, 108] cc => I, Pos: [100, 108] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 14] cc => I, Pos: [96, 99] cc => I, Pos: [100, 108] cc => I]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 14] cc => I
Apply:  Pos: [96, 99] cc => I
Apply:  Pos: [100, 108] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 13], [11, 2], [11, 3], [14, 9], [10, 15], [13, 12], [11, 16], [0, 5], [16, 3], [8, 11], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [15, 0], [18, 3], [13, 12], [13, 7], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [1, 12], [2, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [10, 15], [14, 8], [1, 12], [19, 6], [15, 5], [6, 1], [16, 3], [15, 0], [4, 13], [5, 1], [10, 8], [6, 4], [14, 8], [6, 16], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [15, 5], [0, 5], [10, 15], [4, 7], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [15, 5], ----End Timer [Execute Mapping]:  1.7343955039978027

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[96, 97, 104]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.546821117401123

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [96, 97, 104] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [96, 97, 104] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [96, 97, 104] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 13], [11, 3], [11, 2], [14, 9], [10, 15], [13, 12], [11, 16], [0, 5], [16, 3], [8, 11], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [15, 0], [18, 3], [13, 7], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [2, 12], [1, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [10, 15], [14, 8], [1, 12], [19, 6], [15, 5], [6, 1], [16, 3], [15, 0], [4, 13], [5, 1], [10, 8], [6, 4], [14, 8], [6, 16], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [0, 5], [10, 15], [15, 5], [4, 7], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], ----End Timer [Execute Mapping]:  1.546821117401123

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5160250663757324

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 13], [11, 2], [11, 3], [14, 9], [10, 15], [13, 12], [11, 16], [0, 5], [16, 3], [8, 11], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [15, 0], [18, 3], [13, 12], [13, 7], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [1, 12], [2, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [10, 15], [14, 8], [1, 12], [19, 6], [15, 5], [6, 1], [16, 3], [15, 0], [4, 13], [5, 1], [10, 8], [6, 4], [14, 8], [6, 16], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [0, 5], [10, 15], [15, 5], [4, 7], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], ----End Timer [Execute Mapping]:  1.5160250663757324

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [104] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 28 - (small)
 - circuit cycle: 208

Reduced: 
 - size: 76 (42.22%)
 - depth: 17 (37.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07810616493225098

[6, 16], [18, 3], [17, 4], [13, 12], [6, 4], [11, 2], [6, 4], [11, 3], [14, 9], [10, 15], [4, 13], [11, 16], [15, 5], [14, 9], [13, 12], [0, 5], [16, 3], [1, 13], [8, 11], [15, 5], [1, 13], [5, 6], [11, 16], [4, 13], [11, 2], [17, 6], [14, 8], [12, 7], [4, 13], [11, 16], [1, 12], [0, 8], [17, 19], [6, 4], [3, 2], [8, 11], [4, 13], [16, 2], [11, 3], [14, 9], [4, 13], [8, 11], [0, 17], [18, 3], [10, 15], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [10, 15], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [15, 0], [13, 7], [3, 2], [19, 6], [13, 7], [0, 5], [6, 16], [10, 14], [12, 7], [19, 4], [11, 3], [0, 5], [16, 2], [13, 7], [14, 8], [15, 5], [0, 17], [1, 13], [5, 16], [2, 12], [10, 14], [17, 19], [1, 12], [17, 6], [14, 8], [18, 3], [15, 5], [13, 7], [1, 7], [9, 11], [14, 8], [4, 13], [17, 6], [13, 7], [15, 8], [5, 1], [17, 19], [13, 7], [8, 9], [17, 19], [11, 16], [1, 7], [17, 6], [15, 8], [9, 11], [1, 7], [6, 4], [10, 15], [17, 19], [1, 12], [14, 9], [16, 2], [13, 12], [10, 15], [5, 6], [0, 17], [1, 13], [6, 4], [3, 2], [11, 16], [13, 7], [17, 4], [15, 5], [14, 8], [4, 13], [1, 12], [3, 2], [19, 6], [9, 18], [10, 15], [4, 13], [6, 1], [13, 7], [16, 3], [15, 0], [5, 1], [4, 13], [15, 5], [10, 14], [6, 4], [14, 8], [5, 1], [6, 16], [11, 3], [19, 6], [10, 14], [15, 8], [19, 4], [11, 3], [13, 7], [16, 2], [17, 19], [6, 4], [10, 14], [15, 5], [19, 6], [1, 12], [0, 5], [10, 15], [11, 3], [16, 2], [19, 6], [9, 18], [4, 13], [16, 1], [10, 14], [19, 6], [11, 2], [14, 9], [13, 7], [16, 1], [17, 19], [14, 9], [16, 3], [4, 13], [8, 11], [2, 12], [19, 6], [1, 12], [15, 5], [16, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]
[8, 13]
[17, 20]
[23, 28]
[22, 29]
[13, 39]
[36, 40]
[44, 52]
[60, 63]
[64, 70]
[83, 89]
[82, 91]
[80, 95]
[92, 96]
[95, 98]
[91, 101]
[100, 104]
[98, 107]
[106, 112]
[117, 125]
[123, 129]
[142, 147]
[144, 152]
[147, 158]
[149, 159]
[154, 160]
[127, 161]
[152, 164]
[160, 165]
[163, 169]
[167, 171]
[172, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[35, 38, 41]
[66, 73, 79]
[74, 77, 85]
[93, 97, 102]
[129, 131, 135]
[137, 139, 144]
[136, 140, 153]
[162, 168, 173]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[28, 33, 36]
[73, 79, 83]
[72, 76, 86]
[105, 113, 116]
[122, 137, 139]
[134, 136, 140]
[165, 170, 176]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]
[8, 13]
[17, 20]
[23, 28]
[22, 29]
[13, 39]
[36, 40]
[44, 52]
[60, 63]
[64, 70]
[83, 89]
[82, 91]
[80, 95]
[92, 96]
[95, 98]
[91, 101]
[100, 104]
[98, 107]
[106, 112]
[117, 125]
[123, 129]
[142, 147]
[144, 152]
[147, 158]
[149, 159]
[154, 160]
[127, 161]
[152, 164]
[160, 165]
[163, 169]
[167, 171]
[172, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.248708963394165

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 6] cc => I, Pos: [4, 6] cc => I, Pos: [8, 13] cc => I, Pos: [8, 13] cc => I, Pos: [13, 39] cc => I, Pos: [13, 39] cc => I, Pos: [17, 20] cc => I, Pos: [17, 20] cc => I, Pos: [22, 29] cc => I, Pos: [22, 29] cc => I, Pos: [23, 28] cc => I, Pos: [23, 28] cc => I, Pos: [28, 33, 36] ccc => cc, Pos: [35, 38, 41] ccc => cc, Pos: [36, 40] cc => I, Pos: [36, 40] cc => I, Pos: [44, 52] cc => I, Pos: [44, 52] cc => I, Pos: [60, 63] cc => I, Pos: [60, 63] cc => I, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [66, 73, 79] ccc => cc, Pos: [72, 76, 86] ccc => cc, Pos: [73, 79, 83] ccc => cc, Pos: [74, 77, 85] ccc => cc, Pos: [80, 95] cc => I, Pos: [80, 95] cc => I, Pos: [82, 91] cc => I, Pos: [82, 91] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [91, 101] cc => I, Pos: [91, 101] cc => I, Pos: [92, 96] cc => I, Pos: [92, 96] cc => I, Pos: [93, 97, 102] ccc => cc, Pos: [95, 98] cc => I, Pos: [95, 98] cc => I, Pos: [98, 107] cc => I, Pos: [98, 107] cc => I, Pos: [100, 104] cc => I, Pos: [100, 104] cc => I, Pos: [105, 113, 116] ccc => cc, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [122, 137, 139] ccc => cc, Pos: [123, 129] cc => I, Pos: [123, 129] cc => I, Pos: [127, 161] cc => I, Pos: [127, 161] cc => I, Pos: [129, 131, 135] ccc => cc, Pos: [134, 136, 140] ccc => cc, Pos: [136, 140, 153] ccc => cc, Pos: [137, 139, 144] ccc => cc, Pos: [142, 147] cc => I, Pos: [142, 147] cc => I, Pos: [144, 152] cc => I, Pos: [144, 152] cc => I, Pos: [147, 158] cc => I, Pos: [147, 158] cc => I, Pos: [149, 159] cc => I, Pos: [149, 159] cc => I, Pos: [152, 164] cc => I, Pos: [152, 164] cc => I, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [162, 168, 173] ccc => cc, Pos: [163, 169] cc => I, Pos: [163, 169] cc => I, Pos: [165, 170, 176] ccc => cc, Pos: [167, 171] cc => I, Pos: [167, 171] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I]

--------End Timer [Generate Plans]:  0.07813405990600586

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 6] cc => I,
 Pos: [13, 39] cc => I,
 Pos: [17, 20] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [28, 33, 36] ccc => cc,
 Pos: [35, 38, 41] ccc => cc,
 Pos: [44, 52] cc => I,
 Pos: [60, 63] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [73, 79, 83] ccc => cc,
 Pos: [72, 76, 86] ccc => cc,
 Pos: [74, 77, 85] ccc => cc,
 Pos: [95, 98] cc => I,
 Pos: [82, 91] cc => I,
 Pos: [92, 96] cc => I,
 Pos: [93, 97, 102] ccc => cc,
 Pos: [100, 104] cc => I,
 Pos: [105, 113, 116] ccc => cc,
 Pos: [106, 112] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [122, 137, 139] ccc => cc,
 Pos: [123, 129] cc => I,
 Pos: [127, 161] cc => I,
 Pos: [134, 136, 140] ccc => cc,
 Pos: [147, 158] cc => I,
 Pos: [152, 164] cc => I,
 Pos: [149, 159] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 169] cc => I,
 Pos: [165, 170, 176] ccc => cc,
 Pos: [167, 171] cc => I,
 Pos: [172, 179] cc => I]
Change: 33, Saving: 34

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [13, 39] cc => I
Apply:  Pos: [17, 20] cc => I
Apply:  Pos: [22, 29] cc => I
Apply:  Pos: [28, 33, 36] ccc => cc
Apply:  Pos: [35, 38, 41] ccc => cc
Apply:  Pos: [44, 52] cc => I
Apply:  Pos: [60, 63] cc => I
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [73, 79, 83] ccc => cc
Apply:  Pos: [72, 76, 86] ccc => cc
Apply:  Pos: [74, 77, 85] ccc => cc
Apply:  Pos: [95, 98] cc => I
Apply:  Pos: [82, 91] cc => I
Apply:  Pos: [92, 96] cc => I
Apply:  Pos: [93, 97, 102] ccc => cc
Apply:  Pos: [100, 104] cc => I
Apply:  Pos: [105, 113, 116] ccc => cc
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [122, 137, 139] ccc => cc
Apply:  Pos: [123, 129] cc => I
Apply:  Pos: [127, 161] cc => I
Apply:  Pos: [134, 136, 140] ccc => cc
Apply:  Pos: [147, 158] cc => I
Apply:  Pos: [152, 164] cc => I
Apply:  Pos: [149, 159] cc => I
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [162, 168, 173] ccc => cc
Apply:  Pos: [163, 169] cc => I
Apply:  Pos: [165, 170, 176] ccc => cc
Apply:  Pos: [167, 171] cc => I
Apply:  Pos: [172, 179] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [13, 12], [11, 2], [11, 3], [14, 9], [10, 15], [4, 13], [11, 16], [15, 5], [13, 12], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [4, 13], [11, 2], [17, 6], [14, 8], [12, 7], [6, 4], [1, 12], [0, 8], [17, 19], [4, 13], [3, 2], [8, 3], [16, 2], [11, 3], [4, 13], [0, 17], [18, 3], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [15, 0], [3, 2], [19, 6], [6, 16], [10, 14], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [10, 14], [15, 16], [0, 17], [13, 7], [5, 16], [2, 12], [14, 8], [17, 19], [1, 12], [18, 3], [1, 7], [9, 11], [14, 8], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [17, 19], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [13, 7], [17, 4], [15, 5], [10, 14], [1, 12], [19, 6], [10, 15], [6, 1], [13, 7], [16, 3], [15, 0], [15, 5], [4, 13], [5, 1], [14, 8], [6, 4], [6, 16], [11, 3], [19, 6], [10, 14], [15, 8], [19, 4], [13, 7], [17, 19], [6, 4], [15, 5], [1, 12], [0, 5], [10, 15], [4, 7], [17, 19], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [1, 12], [15, 5], ----End Timer [Execute Mapping]:  3.326843023300171

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 31]
[51, 57]
[63, 69]
[64, 78]
[87, 95]
[110, 117]
[113, 122]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[8, 11, 17]
[90, 101, 106]
[97, 100, 112]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 8, 11]
[32, 47, 59]
[89, 93, 97]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 31]
[51, 57]
[63, 69]
[64, 78]
[87, 95]
[110, 117]
[113, 122]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.015810966491699

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 8, 11] ccc => cc, Pos: [8, 11, 17] ccc => cc, Pos: [26, 31] cc => I, Pos: [26, 31] cc => I, Pos: [32, 47, 59] ccc => cc, Pos: [51, 57] cc => I, Pos: [51, 57] cc => I, Pos: [63, 69] cc => I, Pos: [63, 69] cc => I, Pos: [64, 78] cc => I, Pos: [64, 78] cc => I, Pos: [87, 95] cc => I, Pos: [87, 95] cc => I, Pos: [89, 93, 97] ccc => cc, Pos: [90, 101, 106] ccc => cc, Pos: [97, 100, 112] ccc => cc, Pos: [110, 117] cc => I, Pos: [110, 117] cc => I, Pos: [113, 122] cc => I, Pos: [113, 122] cc => I]

--------End Timer [Generate Plans]:  0.031235933303833008

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 8, 11] ccc => cc,
 Pos: [26, 31] cc => I,
 Pos: [32, 47, 59] ccc => cc,
 Pos: [51, 57] cc => I,
 Pos: [63, 69] cc => I,
 Pos: [64, 78] cc => I,
 Pos: [87, 95] cc => I,
 Pos: [97, 100, 112] ccc => cc,
 Pos: [90, 101, 106] ccc => cc,
 Pos: [110, 117] cc => I,
 Pos: [113, 122] cc => I]
Change: 11, Saving: 11

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 8, 11] ccc => cc
Apply:  Pos: [26, 31] cc => I
Apply:  Pos: [32, 47, 59] ccc => cc
Apply:  Pos: [51, 57] cc => I
Apply:  Pos: [63, 69] cc => I
Apply:  Pos: [64, 78] cc => I
Apply:  Pos: [87, 95] cc => I
Apply:  Pos: [97, 100, 112] ccc => cc
Apply:  Pos: [90, 101, 106] ccc => cc
Apply:  Pos: [110, 117] cc => I
Apply:  Pos: [113, 122] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 13], [11, 3], [11, 2], [14, 9], [10, 15], [13, 12], [11, 16], [15, 5], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [4, 13], [11, 2], [17, 6], [14, 8], [12, 7], [6, 4], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [15, 0], [18, 3], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [15, 16], [13, 7], [5, 16], [2, 12], [1, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [15, 5], [10, 8], [1, 12], [19, 6], [10, 15], [6, 1], [16, 3], [15, 1], [15, 0], [4, 13], [5, 1], [14, 8], [6, 16], [6, 4], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [0, 5], [10, 15], [4, 7], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [15, 5], ----End Timer [Execute Mapping]:  2.0470468997955322

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 14]
[21, 32]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[3, 8, 16]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 14]
[21, 32]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6253106594085693

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 8, 16] ccc => cc, Pos: [11, 14] cc => I, Pos: [11, 14] cc => I, Pos: [21, 32] cc => I, Pos: [21, 32] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 8, 16] ccc => cc, Pos: [11, 14] cc => I, Pos: [21, 32] cc => I]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 8, 16] ccc => cc
Apply:  Pos: [11, 14] cc => I
Apply:  Pos: [21, 32] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 12], [11, 2], [11, 3], [14, 9], [10, 15], [13, 12], [11, 16], [0, 5], [16, 3], [8, 11], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [15, 0], [18, 3], [13, 7], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [15, 16], [13, 7], [5, 16], [1, 12], [2, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [15, 5], [10, 8], [1, 12], [19, 6], [10, 15], [6, 1], [16, 3], [15, 0], [15, 1], [4, 13], [5, 1], [14, 8], [6, 4], [6, 16], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [0, 5], [10, 15], [4, 7], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [15, 5], ----End Timer [Execute Mapping]:  1.6253106594085693

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5314950942993164

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 12], [11, 3], [11, 2], [14, 9], [10, 15], [13, 12], [11, 16], [0, 5], [16, 3], [8, 11], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [15, 0], [18, 3], [13, 12], [13, 7], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [15, 16], [13, 7], [5, 16], [2, 12], [1, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [15, 5], [10, 8], [1, 12], [19, 6], [10, 15], [6, 1], [16, 3], [15, 1], [15, 0], [4, 13], [5, 1], [14, 8], [6, 16], [6, 4], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [0, 5], [10, 15], [4, 7], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [15, 5], ----End Timer [Execute Mapping]:  1.5314950942993164

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [102] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 30 - (small)
 - circuit cycle: 204

Reduced: 
 - size: 78 (43.33%)
 - depth: 15 (33.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07813286781311035

[6, 16], [18, 3], [17, 4], [13, 12], [6, 4], [11, 2], [6, 4], [11, 3], [14, 9], [10, 15], [4, 13], [11, 16], [15, 5], [14, 9], [13, 12], [0, 5], [16, 3], [1, 13], [8, 11], [15, 5], [1, 13], [5, 6], [11, 16], [4, 13], [11, 2], [17, 6], [14, 8], [12, 7], [4, 13], [11, 16], [1, 12], [0, 8], [17, 19], [6, 4], [3, 2], [8, 11], [4, 13], [16, 2], [11, 3], [14, 9], [4, 13], [8, 11], [0, 17], [18, 3], [10, 15], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [10, 15], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [15, 0], [13, 7], [3, 2], [19, 6], [13, 7], [0, 5], [6, 16], [10, 14], [12, 7], [19, 4], [11, 3], [0, 5], [16, 2], [13, 7], [14, 8], [15, 5], [0, 17], [1, 13], [5, 16], [2, 12], [10, 14], [17, 19], [1, 12], [17, 6], [14, 8], [18, 3], [15, 5], [13, 7], [1, 7], [9, 11], [14, 8], [4, 13], [17, 6], [13, 7], [15, 8], [5, 1], [17, 19], [13, 7], [8, 9], [17, 19], [11, 16], [1, 7], [17, 6], [15, 8], [9, 11], [1, 7], [6, 4], [10, 15], [17, 19], [1, 12], [14, 9], [16, 2], [13, 12], [10, 15], [5, 6], [0, 17], [1, 13], [6, 4], [3, 2], [11, 16], [13, 7], [17, 4], [15, 5], [14, 8], [4, 13], [1, 12], [3, 2], [19, 6], [9, 18], [10, 15], [4, 13], [6, 1], [13, 7], [16, 3], [15, 0], [5, 1], [4, 13], [15, 5], [10, 14], [6, 4], [14, 8], [5, 1], [6, 16], [11, 3], [19, 6], [10, 14], [15, 8], [19, 4], [11, 3], [13, 7], [16, 2], [17, 19], [6, 4], [10, 14], [15, 5], [19, 6], [1, 12], [0, 5], [10, 15], [11, 3], [16, 2], [19, 6], [9, 18], [4, 13], [16, 1], [10, 14], [19, 6], [11, 2], [14, 9], [13, 7], [16, 1], [17, 19], [14, 9], [16, 3], [4, 13], [8, 11], [2, 12], [19, 6], [1, 12], [15, 5], [16, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]
[8, 13]
[17, 20]
[23, 28]
[22, 29]
[13, 39]
[36, 40]
[44, 52]
[60, 63]
[64, 70]
[83, 89]
[82, 91]
[80, 95]
[92, 96]
[95, 98]
[91, 101]
[100, 104]
[98, 107]
[106, 112]
[117, 125]
[123, 129]
[142, 147]
[144, 152]
[147, 158]
[149, 159]
[154, 160]
[127, 161]
[152, 164]
[160, 165]
[163, 169]
[167, 171]
[172, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[35, 38, 41]
[66, 73, 79]
[74, 77, 85]
[93, 97, 102]
[129, 131, 135]
[137, 139, 144]
[136, 140, 153]
[162, 168, 173]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[28, 33, 36]
[73, 79, 83]
[72, 76, 86]
[105, 113, 116]
[122, 137, 139]
[134, 136, 140]
[165, 170, 176]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]
[8, 13]
[17, 20]
[23, 28]
[22, 29]
[13, 39]
[36, 40]
[44, 52]
[60, 63]
[64, 70]
[83, 89]
[82, 91]
[80, 95]
[92, 96]
[95, 98]
[91, 101]
[100, 104]
[98, 107]
[106, 112]
[117, 125]
[123, 129]
[142, 147]
[144, 152]
[147, 158]
[149, 159]
[154, 160]
[127, 161]
[152, 164]
[160, 165]
[163, 169]
[167, 171]
[172, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.249950647354126

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 6] cc => I, Pos: [4, 6] cc => I, Pos: [8, 13] cc => I, Pos: [8, 13] cc => I, Pos: [13, 39] cc => I, Pos: [13, 39] cc => I, Pos: [17, 20] cc => I, Pos: [17, 20] cc => I, Pos: [22, 29] cc => I, Pos: [22, 29] cc => I, Pos: [23, 28] cc => I, Pos: [23, 28] cc => I, Pos: [28, 33, 36] ccc => cc, Pos: [35, 38, 41] ccc => cc, Pos: [36, 40] cc => I, Pos: [36, 40] cc => I, Pos: [44, 52] cc => I, Pos: [44, 52] cc => I, Pos: [60, 63] cc => I, Pos: [60, 63] cc => I, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [66, 73, 79] ccc => cc, Pos: [72, 76, 86] ccc => cc, Pos: [73, 79, 83] ccc => cc, Pos: [74, 77, 85] ccc => cc, Pos: [80, 95] cc => I, Pos: [80, 95] cc => I, Pos: [82, 91] cc => I, Pos: [82, 91] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [91, 101] cc => I, Pos: [91, 101] cc => I, Pos: [92, 96] cc => I, Pos: [92, 96] cc => I, Pos: [93, 97, 102] ccc => cc, Pos: [95, 98] cc => I, Pos: [95, 98] cc => I, Pos: [98, 107] cc => I, Pos: [98, 107] cc => I, Pos: [100, 104] cc => I, Pos: [100, 104] cc => I, Pos: [105, 113, 116] ccc => cc, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [122, 137, 139] ccc => cc, Pos: [123, 129] cc => I, Pos: [123, 129] cc => I, Pos: [127, 161] cc => I, Pos: [127, 161] cc => I, Pos: [129, 131, 135] ccc => cc, Pos: [134, 136, 140] ccc => cc, Pos: [136, 140, 153] ccc => cc, Pos: [137, 139, 144] ccc => cc, Pos: [142, 147] cc => I, Pos: [142, 147] cc => I, Pos: [144, 152] cc => I, Pos: [144, 152] cc => I, Pos: [147, 158] cc => I, Pos: [147, 158] cc => I, Pos: [149, 159] cc => I, Pos: [149, 159] cc => I, Pos: [152, 164] cc => I, Pos: [152, 164] cc => I, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [162, 168, 173] ccc => cc, Pos: [163, 169] cc => I, Pos: [163, 169] cc => I, Pos: [165, 170, 176] ccc => cc, Pos: [167, 171] cc => I, Pos: [167, 171] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I]

--------End Timer [Generate Plans]:  0.09375691413879395

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 6] cc => I,
 Pos: [8, 13] cc => I,
 Pos: [17, 20] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [23, 28] cc => I,
 Pos: [35, 38, 41] ccc => cc,
 Pos: [36, 40] cc => I,
 Pos: [44, 52] cc => I,
 Pos: [60, 63] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [73, 79, 83] ccc => cc,
 Pos: [72, 76, 86] ccc => cc,
 Pos: [74, 77, 85] ccc => cc,
 Pos: [80, 95] cc => I,
 Pos: [82, 91] cc => I,
 Pos: [92, 96] cc => I,
 Pos: [93, 97, 102] ccc => cc,
 Pos: [98, 107] cc => I,
 Pos: [100, 104] cc => I,
 Pos: [105, 113, 116] ccc => cc,
 Pos: [106, 112] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [122, 137, 139] ccc => cc,
 Pos: [123, 129] cc => I,
 Pos: [127, 161] cc => I,
 Pos: [136, 140, 153] ccc => cc,
 Pos: [147, 158] cc => I,
 Pos: [144, 152] cc => I,
 Pos: [149, 159] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 169] cc => I,
 Pos: [165, 170, 176] ccc => cc,
 Pos: [167, 171] cc => I,
 Pos: [172, 179] cc => I]
Change: 35, Saving: 35

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [8, 13] cc => I
Apply:  Pos: [17, 20] cc => I
Apply:  Pos: [22, 29] cc => I
Apply:  Pos: [23, 28] cc => I
Apply:  Pos: [35, 38, 41] ccc => cc
Apply:  Pos: [36, 40] cc => I
Apply:  Pos: [44, 52] cc => I
Apply:  Pos: [60, 63] cc => I
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [73, 79, 83] ccc => cc
Apply:  Pos: [72, 76, 86] ccc => cc
Apply:  Pos: [74, 77, 85] ccc => cc
Apply:  Pos: [80, 95] cc => I
Apply:  Pos: [82, 91] cc => I
Apply:  Pos: [92, 96] cc => I
Apply:  Pos: [93, 97, 102] ccc => cc
Apply:  Pos: [98, 107] cc => I
Apply:  Pos: [100, 104] cc => I
Apply:  Pos: [105, 113, 116] ccc => cc
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [122, 137, 139] ccc => cc
Apply:  Pos: [123, 129] cc => I
Apply:  Pos: [127, 161] cc => I
Apply:  Pos: [136, 140, 153] ccc => cc
Apply:  Pos: [147, 158] cc => I
Apply:  Pos: [144, 152] cc => I
Apply:  Pos: [149, 159] cc => I
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [162, 168, 173] ccc => cc
Apply:  Pos: [163, 169] cc => I
Apply:  Pos: [165, 170, 176] ccc => cc
Apply:  Pos: [167, 171] cc => I
Apply:  Pos: [172, 179] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [13, 12], [11, 2], [11, 3], [10, 15], [4, 13], [11, 16], [15, 5], [13, 12], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [6, 4], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [0, 17], [18, 3], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [15, 0], [3, 2], [19, 6], [6, 16], [10, 14], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [10, 14], [15, 16], [0, 17], [13, 7], [5, 16], [2, 12], [14, 8], [1, 12], [18, 3], [1, 7], [9, 11], [14, 8], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [13, 7], [17, 4], [15, 5], [10, 14], [1, 12], [19, 6], [10, 15], [6, 1], [13, 7], [16, 3], [15, 0], [5, 1], [4, 13], [15, 1], [14, 8], [6, 4], [5, 1], [6, 16], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [17, 19], [6, 4], [1, 12], [0, 5], [10, 15], [4, 7], [10, 14], [17, 19], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [1, 12], [15, 5], ----End Timer [Execute Mapping]:  3.34370756149292

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[23, 32]
[48, 54]
[60, 65]
[82, 90]
[105, 112]
[107, 117]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 7, 10]
[29, 44, 56]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[23, 32]
[48, 54]
[60, 65]
[82, 90]
[105, 112]
[107, 117]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9062964916229248

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 7, 10] ccc => cc, Pos: [23, 32] cc => I, Pos: [23, 32] cc => I, Pos: [29, 44, 56] ccc => cc, Pos: [48, 54] cc => I, Pos: [48, 54] cc => I, Pos: [60, 65] cc => I, Pos: [60, 65] cc => I, Pos: [82, 90] cc => I, Pos: [82, 90] cc => I, Pos: [105, 112] cc => I, Pos: [105, 112] cc => I, Pos: [107, 117] cc => I, Pos: [107, 117] cc => I]

--------End Timer [Generate Plans]:  0.015624284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 7, 10] ccc => cc,
 Pos: [23, 32] cc => I,
 Pos: [29, 44, 56] ccc => cc,
 Pos: [48, 54] cc => I,
 Pos: [60, 65] cc => I,
 Pos: [82, 90] cc => I,
 Pos: [105, 112] cc => I,
 Pos: [107, 117] cc => I]
Change: 8, Saving: 8

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 7, 10] ccc => cc
Apply:  Pos: [23, 32] cc => I
Apply:  Pos: [29, 44, 56] ccc => cc
Apply:  Pos: [48, 54] cc => I
Apply:  Pos: [60, 65] cc => I
Apply:  Pos: [82, 90] cc => I
Apply:  Pos: [105, 112] cc => I
Apply:  Pos: [107, 117] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 13], [11, 3], [11, 2], [10, 15], [13, 12], [11, 16], [15, 5], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 7], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [15, 16], [13, 7], [5, 16], [2, 12], [1, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [15, 5], [10, 14], [1, 12], [19, 6], [10, 15], [6, 1], [16, 3], [15, 0], [5, 1], [4, 13], [15, 1], [14, 8], [6, 4], [5, 1], [6, 16], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [0, 5], [10, 15], [4, 7], [10, 14], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [15, 5], ----End Timer [Execute Mapping]:  1.9219207763671875

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5938036441802979

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [10, 13] cc => I, Pos: [10, 13] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [10, 13] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [10, 13] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015624761581420898

[6, 16], [18, 3], [17, 4], [4, 13], [11, 2], [11, 3], [10, 15], [13, 12], [11, 16], [0, 5], [16, 3], [8, 11], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 12], [13, 7], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [15, 16], [13, 7], [5, 16], [1, 12], [2, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [15, 5], [10, 14], [1, 12], [19, 6], [10, 15], [6, 1], [16, 3], [15, 0], [5, 1], [4, 13], [15, 1], [14, 8], [6, 4], [5, 1], [6, 16], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [0, 5], [10, 15], [4, 7], [10, 14], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [15, 5], ----End Timer [Execute Mapping]:  1.6094284057617188

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5468227863311768

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 13], [11, 3], [11, 2], [10, 15], [13, 12], [11, 16], [0, 5], [16, 3], [8, 11], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 7], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [15, 16], [13, 7], [5, 16], [2, 12], [1, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [15, 5], [10, 14], [1, 12], [19, 6], [10, 15], [6, 1], [16, 3], [15, 0], [5, 1], [4, 13], [15, 1], [14, 8], [6, 4], [5, 1], [6, 16], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [0, 5], [10, 15], [4, 7], [10, 14], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [15, 5], ----End Timer [Execute Mapping]:  1.5468227863311768

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [104] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 30 - (small)
 - circuit cycle: 208

Reduced: 
 - size: 76 (42.22%)
 - depth: 15 (33.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.06249594688415527

[6, 16], [18, 3], [17, 4], [13, 12], [6, 4], [11, 2], [6, 4], [11, 3], [14, 9], [10, 15], [4, 13], [11, 16], [15, 5], [14, 9], [13, 12], [0, 5], [16, 3], [1, 13], [8, 11], [15, 5], [1, 13], [5, 6], [11, 16], [4, 13], [11, 2], [17, 6], [14, 8], [12, 7], [4, 13], [11, 16], [1, 12], [0, 8], [17, 19], [6, 4], [3, 2], [8, 11], [4, 13], [16, 2], [11, 3], [14, 9], [4, 13], [8, 11], [0, 17], [18, 3], [10, 15], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [10, 15], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [15, 0], [13, 7], [3, 2], [19, 6], [13, 7], [0, 5], [6, 16], [10, 14], [12, 7], [19, 4], [11, 3], [0, 5], [16, 2], [13, 7], [14, 8], [15, 5], [0, 17], [1, 13], [5, 16], [2, 12], [10, 14], [17, 19], [1, 12], [17, 6], [14, 8], [18, 3], [15, 5], [13, 7], [1, 7], [9, 11], [14, 8], [4, 13], [17, 6], [13, 7], [15, 8], [5, 1], [17, 19], [13, 7], [8, 9], [17, 19], [11, 16], [1, 7], [17, 6], [15, 8], [9, 11], [1, 7], [6, 4], [10, 15], [17, 19], [1, 12], [14, 9], [16, 2], [13, 12], [10, 15], [5, 6], [0, 17], [1, 13], [6, 4], [3, 2], [11, 16], [13, 7], [17, 4], [15, 5], [14, 8], [4, 13], [1, 12], [3, 2], [19, 6], [9, 18], [10, 15], [4, 13], [6, 1], [13, 7], [16, 3], [15, 0], [5, 1], [4, 13], [15, 5], [10, 14], [6, 4], [14, 8], [5, 1], [6, 16], [11, 3], [19, 6], [10, 14], [15, 8], [19, 4], [11, 3], [13, 7], [16, 2], [17, 19], [6, 4], [10, 14], [15, 5], [19, 6], [1, 12], [0, 5], [10, 15], [11, 3], [16, 2], [19, 6], [9, 18], [4, 13], [16, 1], [10, 14], [19, 6], [11, 2], [14, 9], [13, 7], [16, 1], [17, 19], [14, 9], [16, 3], [4, 13], [8, 11], [2, 12], [19, 6], [1, 12], [15, 5], [16, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]
[8, 13]
[17, 20]
[23, 28]
[22, 29]
[13, 39]
[36, 40]
[44, 52]
[60, 63]
[64, 70]
[83, 89]
[82, 91]
[80, 95]
[92, 96]
[95, 98]
[91, 101]
[100, 104]
[98, 107]
[106, 112]
[117, 125]
[123, 129]
[142, 147]
[144, 152]
[147, 158]
[149, 159]
[154, 160]
[127, 161]
[152, 164]
[160, 165]
[163, 169]
[167, 171]
[172, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[35, 38, 41]
[66, 73, 79]
[74, 77, 85]
[93, 97, 102]
[129, 131, 135]
[137, 139, 144]
[136, 140, 153]
[162, 168, 173]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[28, 33, 36]
[73, 79, 83]
[72, 76, 86]
[105, 113, 116]
[122, 137, 139]
[134, 136, 140]
[165, 170, 176]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]
[8, 13]
[17, 20]
[23, 28]
[22, 29]
[13, 39]
[36, 40]
[44, 52]
[60, 63]
[64, 70]
[83, 89]
[82, 91]
[80, 95]
[92, 96]
[95, 98]
[91, 101]
[100, 104]
[98, 107]
[106, 112]
[117, 125]
[123, 129]
[142, 147]
[144, 152]
[147, 158]
[149, 159]
[154, 160]
[127, 161]
[152, 164]
[160, 165]
[163, 169]
[167, 171]
[172, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.219024181365967

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 6] cc => I, Pos: [4, 6] cc => I, Pos: [8, 13] cc => I, Pos: [8, 13] cc => I, Pos: [13, 39] cc => I, Pos: [13, 39] cc => I, Pos: [17, 20] cc => I, Pos: [17, 20] cc => I, Pos: [22, 29] cc => I, Pos: [22, 29] cc => I, Pos: [23, 28] cc => I, Pos: [23, 28] cc => I, Pos: [28, 33, 36] ccc => cc, Pos: [35, 38, 41] ccc => cc, Pos: [36, 40] cc => I, Pos: [36, 40] cc => I, Pos: [44, 52] cc => I, Pos: [44, 52] cc => I, Pos: [60, 63] cc => I, Pos: [60, 63] cc => I, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [66, 73, 79] ccc => cc, Pos: [72, 76, 86] ccc => cc, Pos: [73, 79, 83] ccc => cc, Pos: [74, 77, 85] ccc => cc, Pos: [80, 95] cc => I, Pos: [80, 95] cc => I, Pos: [82, 91] cc => I, Pos: [82, 91] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [91, 101] cc => I, Pos: [91, 101] cc => I, Pos: [92, 96] cc => I, Pos: [92, 96] cc => I, Pos: [93, 97, 102] ccc => cc, Pos: [95, 98] cc => I, Pos: [95, 98] cc => I, Pos: [98, 107] cc => I, Pos: [98, 107] cc => I, Pos: [100, 104] cc => I, Pos: [100, 104] cc => I, Pos: [105, 113, 116] ccc => cc, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [122, 137, 139] ccc => cc, Pos: [123, 129] cc => I, Pos: [123, 129] cc => I, Pos: [127, 161] cc => I, Pos: [127, 161] cc => I, Pos: [129, 131, 135] ccc => cc, Pos: [134, 136, 140] ccc => cc, Pos: [136, 140, 153] ccc => cc, Pos: [137, 139, 144] ccc => cc, Pos: [142, 147] cc => I, Pos: [142, 147] cc => I, Pos: [144, 152] cc => I, Pos: [144, 152] cc => I, Pos: [147, 158] cc => I, Pos: [147, 158] cc => I, Pos: [149, 159] cc => I, Pos: [149, 159] cc => I, Pos: [152, 164] cc => I, Pos: [152, 164] cc => I, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [162, 168, 173] ccc => cc, Pos: [163, 169] cc => I, Pos: [163, 169] cc => I, Pos: [165, 170, 176] ccc => cc, Pos: [167, 171] cc => I, Pos: [167, 171] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I]

--------End Timer [Generate Plans]:  0.09346652030944824

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 6] cc => I,
 Pos: [8, 13] cc => I,
 Pos: [17, 20] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [23, 28] cc => I,
 Pos: [35, 38, 41] ccc => cc,
 Pos: [36, 40] cc => I,
 Pos: [44, 52] cc => I,
 Pos: [60, 63] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [66, 73, 79] ccc => cc,
 Pos: [72, 76, 86] ccc => cc,
 Pos: [74, 77, 85] ccc => cc,
 Pos: [95, 98] cc => I,
 Pos: [91, 101] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [92, 96] cc => I,
 Pos: [93, 97, 102] ccc => cc,
 Pos: [100, 104] cc => I,
 Pos: [105, 113, 116] ccc => cc,
 Pos: [106, 112] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [122, 137, 139] ccc => cc,
 Pos: [123, 129] cc => I,
 Pos: [127, 161] cc => I,
 Pos: [134, 136, 140] ccc => cc,
 Pos: [147, 158] cc => I,
 Pos: [152, 164] cc => I,
 Pos: [149, 159] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 169] cc => I,
 Pos: [165, 170, 176] ccc => cc,
 Pos: [167, 171] cc => I,
 Pos: [172, 179] cc => I]
Change: 35, Saving: 35

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [8, 13] cc => I
Apply:  Pos: [17, 20] cc => I
Apply:  Pos: [22, 29] cc => I
Apply:  Pos: [23, 28] cc => I
Apply:  Pos: [35, 38, 41] ccc => cc
Apply:  Pos: [36, 40] cc => I
Apply:  Pos: [44, 52] cc => I
Apply:  Pos: [60, 63] cc => I
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [66, 73, 79] ccc => cc
Apply:  Pos: [72, 76, 86] ccc => cc
Apply:  Pos: [74, 77, 85] ccc => cc
Apply:  Pos: [95, 98] cc => I
Apply:  Pos: [91, 101] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [92, 96] cc => I
Apply:  Pos: [93, 97, 102] ccc => cc
Apply:  Pos: [100, 104] cc => I
Apply:  Pos: [105, 113, 116] ccc => cc
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [122, 137, 139] ccc => cc
Apply:  Pos: [123, 129] cc => I
Apply:  Pos: [127, 161] cc => I
Apply:  Pos: [134, 136, 140] ccc => cc
Apply:  Pos: [147, 158] cc => I
Apply:  Pos: [152, 164] cc => I
Apply:  Pos: [149, 159] cc => I
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [162, 168, 173] ccc => cc
Apply:  Pos: [163, 169] cc => I
Apply:  Pos: [165, 170, 176] ccc => cc
Apply:  Pos: [167, 171] cc => I
Apply:  Pos: [172, 179] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [13, 12], [11, 2], [11, 3], [10, 15], [4, 13], [11, 16], [15, 5], [13, 12], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [6, 4], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [0, 17], [18, 3], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [15, 0], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [0, 17], [13, 7], [5, 16], [2, 12], [17, 19], [1, 12], [17, 6], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [9, 11], [5, 6], [17, 19], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [13, 7], [17, 4], [15, 5], [10, 14], [1, 12], [19, 6], [10, 15], [6, 1], [13, 7], [16, 3], [15, 0], [15, 5], [4, 13], [5, 1], [14, 8], [6, 4], [6, 16], [11, 3], [19, 6], [10, 14], [15, 8], [19, 4], [13, 7], [17, 19], [6, 4], [15, 5], [1, 12], [0, 5], [10, 15], [4, 7], [17, 19], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [1, 12], [15, 5], ----End Timer [Execute Mapping]:  3.312490701675415

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[23, 32]
[60, 73]
[82, 90]
[105, 112]
[108, 117]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[85, 96, 101]
[92, 95, 107]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 7, 10]
[29, 44, 56]
[84, 88, 92]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[23, 32]
[60, 73]
[82, 90]
[105, 112]
[108, 117]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.8752155303955078

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 7, 10] ccc => cc, Pos: [23, 32] cc => I, Pos: [23, 32] cc => I, Pos: [29, 44, 56] ccc => cc, Pos: [60, 73] cc => I, Pos: [60, 73] cc => I, Pos: [82, 90] cc => I, Pos: [82, 90] cc => I, Pos: [84, 88, 92] ccc => cc, Pos: [85, 96, 101] ccc => cc, Pos: [92, 95, 107] ccc => cc, Pos: [105, 112] cc => I, Pos: [105, 112] cc => I, Pos: [108, 117] cc => I, Pos: [108, 117] cc => I]

--------End Timer [Generate Plans]:  0.031164169311523438

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 7, 10] ccc => cc,
 Pos: [23, 32] cc => I,
 Pos: [29, 44, 56] ccc => cc,
 Pos: [60, 73] cc => I,
 Pos: [82, 90] cc => I,
 Pos: [84, 88, 92] ccc => cc,
 Pos: [85, 96, 101] ccc => cc,
 Pos: [105, 112] cc => I,
 Pos: [108, 117] cc => I]
Change: 9, Saving: 9

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 7, 10] ccc => cc
Apply:  Pos: [23, 32] cc => I
Apply:  Pos: [29, 44, 56] ccc => cc
Apply:  Pos: [60, 73] cc => I
Apply:  Pos: [82, 90] cc => I
Apply:  Pos: [84, 88, 92] ccc => cc
Apply:  Pos: [85, 96, 101] ccc => cc
Apply:  Pos: [105, 112] cc => I
Apply:  Pos: [108, 117] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 13], [11, 3], [11, 2], [10, 15], [13, 12], [11, 16], [15, 5], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 7], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [2, 12], [1, 12], [17, 6], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [10, 15], [10, 8], [1, 12], [19, 6], [15, 5], [6, 1], [16, 3], [15, 0], [4, 13], [5, 1], [14, 8], [6, 16], [6, 4], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [15, 5], [0, 5], [10, 15], [4, 7], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [15, 5], ----End Timer [Execute Mapping]:  1.9063796997070312

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[97, 98, 105]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5780715942382812

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [97, 98, 105] ccc => cc]

--------End Timer [Generate Plans]:  0.015623807907104492

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [10, 13] cc => I, Pos: [97, 98, 105] ccc => cc]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [10, 13] cc => I
Apply:  Pos: [97, 98, 105] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 13], [11, 2], [11, 3], [10, 15], [13, 12], [11, 16], [0, 5], [16, 3], [8, 11], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 12], [13, 7], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [1, 12], [2, 12], [17, 6], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [10, 8], [10, 15], [1, 12], [19, 6], [15, 5], [6, 1], [16, 3], [15, 0], [4, 13], [5, 1], [14, 8], [6, 4], [6, 16], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [0, 5], [10, 15], [15, 5], [4, 7], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], ----End Timer [Execute Mapping]:  1.5936954021453857

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5156140327453613

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 13], [11, 3], [11, 2], [10, 15], [13, 12], [11, 16], [0, 5], [16, 3], [8, 11], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 7], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [2, 12], [1, 12], [17, 6], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [10, 15], [10, 8], [1, 12], [19, 6], [15, 5], [6, 1], [16, 3], [15, 0], [4, 13], [5, 1], [14, 8], [6, 16], [6, 4], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [0, 5], [10, 15], [15, 5], [4, 7], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], ----End Timer [Execute Mapping]:  1.5156140327453613

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [103] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 30 - (small)
 - circuit cycle: 206

Reduced: 
 - size: 77 (42.78%)
 - depth: 15 (33.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.062279462814331055

[6, 16], [18, 3], [17, 4], [13, 12], [6, 4], [11, 2], [6, 4], [11, 3], [14, 9], [10, 15], [4, 13], [11, 16], [15, 5], [14, 9], [13, 12], [0, 5], [16, 3], [1, 13], [8, 11], [15, 5], [1, 13], [5, 6], [11, 16], [4, 13], [11, 2], [17, 6], [14, 8], [12, 7], [4, 13], [11, 16], [1, 12], [0, 8], [17, 19], [6, 4], [3, 2], [8, 11], [4, 13], [16, 2], [11, 3], [14, 9], [4, 13], [8, 11], [0, 17], [18, 3], [10, 15], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [10, 15], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [15, 0], [13, 7], [3, 2], [19, 6], [13, 7], [0, 5], [6, 16], [10, 14], [12, 7], [19, 4], [11, 3], [0, 5], [16, 2], [13, 7], [14, 8], [15, 5], [0, 17], [1, 13], [5, 16], [2, 12], [10, 14], [17, 19], [1, 12], [17, 6], [14, 8], [18, 3], [15, 5], [13, 7], [1, 7], [9, 11], [14, 8], [4, 13], [17, 6], [13, 7], [15, 8], [5, 1], [17, 19], [13, 7], [8, 9], [17, 19], [11, 16], [1, 7], [17, 6], [15, 8], [9, 11], [1, 7], [6, 4], [10, 15], [17, 19], [1, 12], [14, 9], [16, 2], [13, 12], [10, 15], [5, 6], [0, 17], [1, 13], [6, 4], [3, 2], [11, 16], [13, 7], [17, 4], [15, 5], [14, 8], [4, 13], [1, 12], [3, 2], [19, 6], [9, 18], [10, 15], [4, 13], [6, 1], [13, 7], [16, 3], [15, 0], [5, 1], [4, 13], [15, 5], [10, 14], [6, 4], [14, 8], [5, 1], [6, 16], [11, 3], [19, 6], [10, 14], [15, 8], [19, 4], [11, 3], [13, 7], [16, 2], [17, 19], [6, 4], [10, 14], [15, 5], [19, 6], [1, 12], [0, 5], [10, 15], [11, 3], [16, 2], [19, 6], [9, 18], [4, 13], [16, 1], [10, 14], [19, 6], [11, 2], [14, 9], [13, 7], [16, 1], [17, 19], [14, 9], [16, 3], [4, 13], [8, 11], [2, 12], [19, 6], [1, 12], [15, 5], [16, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]
[8, 13]
[17, 20]
[23, 28]
[22, 29]
[13, 39]
[36, 40]
[44, 52]
[60, 63]
[64, 70]
[83, 89]
[82, 91]
[80, 95]
[92, 96]
[95, 98]
[91, 101]
[100, 104]
[98, 107]
[106, 112]
[117, 125]
[123, 129]
[142, 147]
[144, 152]
[147, 158]
[149, 159]
[154, 160]
[127, 161]
[152, 164]
[160, 165]
[163, 169]
[167, 171]
[172, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[35, 38, 41]
[66, 73, 79]
[74, 77, 85]
[93, 97, 102]
[129, 131, 135]
[137, 139, 144]
[136, 140, 153]
[162, 168, 173]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[28, 33, 36]
[73, 79, 83]
[72, 76, 86]
[105, 113, 116]
[122, 137, 139]
[134, 136, 140]
[165, 170, 176]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]
[8, 13]
[17, 20]
[23, 28]
[22, 29]
[13, 39]
[36, 40]
[44, 52]
[60, 63]
[64, 70]
[83, 89]
[82, 91]
[80, 95]
[92, 96]
[95, 98]
[91, 101]
[100, 104]
[98, 107]
[106, 112]
[117, 125]
[123, 129]
[142, 147]
[144, 152]
[147, 158]
[149, 159]
[154, 160]
[127, 161]
[152, 164]
[160, 165]
[163, 169]
[167, 171]
[172, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2341535091400146

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 6] cc => I, Pos: [4, 6] cc => I, Pos: [8, 13] cc => I, Pos: [8, 13] cc => I, Pos: [13, 39] cc => I, Pos: [13, 39] cc => I, Pos: [17, 20] cc => I, Pos: [17, 20] cc => I, Pos: [22, 29] cc => I, Pos: [22, 29] cc => I, Pos: [23, 28] cc => I, Pos: [23, 28] cc => I, Pos: [28, 33, 36] ccc => cc, Pos: [35, 38, 41] ccc => cc, Pos: [36, 40] cc => I, Pos: [36, 40] cc => I, Pos: [44, 52] cc => I, Pos: [44, 52] cc => I, Pos: [60, 63] cc => I, Pos: [60, 63] cc => I, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [66, 73, 79] ccc => cc, Pos: [72, 76, 86] ccc => cc, Pos: [73, 79, 83] ccc => cc, Pos: [74, 77, 85] ccc => cc, Pos: [80, 95] cc => I, Pos: [80, 95] cc => I, Pos: [82, 91] cc => I, Pos: [82, 91] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [91, 101] cc => I, Pos: [91, 101] cc => I, Pos: [92, 96] cc => I, Pos: [92, 96] cc => I, Pos: [93, 97, 102] ccc => cc, Pos: [95, 98] cc => I, Pos: [95, 98] cc => I, Pos: [98, 107] cc => I, Pos: [98, 107] cc => I, Pos: [100, 104] cc => I, Pos: [100, 104] cc => I, Pos: [105, 113, 116] ccc => cc, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [122, 137, 139] ccc => cc, Pos: [123, 129] cc => I, Pos: [123, 129] cc => I, Pos: [127, 161] cc => I, Pos: [127, 161] cc => I, Pos: [129, 131, 135] ccc => cc, Pos: [134, 136, 140] ccc => cc, Pos: [136, 140, 153] ccc => cc, Pos: [137, 139, 144] ccc => cc, Pos: [142, 147] cc => I, Pos: [142, 147] cc => I, Pos: [144, 152] cc => I, Pos: [144, 152] cc => I, Pos: [147, 158] cc => I, Pos: [147, 158] cc => I, Pos: [149, 159] cc => I, Pos: [149, 159] cc => I, Pos: [152, 164] cc => I, Pos: [152, 164] cc => I, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [162, 168, 173] ccc => cc, Pos: [163, 169] cc => I, Pos: [163, 169] cc => I, Pos: [165, 170, 176] ccc => cc, Pos: [167, 171] cc => I, Pos: [167, 171] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I]

--------End Timer [Generate Plans]:  0.09375691413879395

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 6] cc => I,
 Pos: [8, 13] cc => I,
 Pos: [17, 20] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [23, 28] cc => I,
 Pos: [35, 38, 41] ccc => cc,
 Pos: [36, 40] cc => I,
 Pos: [44, 52] cc => I,
 Pos: [60, 63] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [73, 79, 83] ccc => cc,
 Pos: [72, 76, 86] ccc => cc,
 Pos: [74, 77, 85] ccc => cc,
 Pos: [80, 95] cc => I,
 Pos: [91, 101] cc => I,
 Pos: [92, 96] cc => I,
 Pos: [93, 97, 102] ccc => cc,
 Pos: [98, 107] cc => I,
 Pos: [100, 104] cc => I,
 Pos: [105, 113, 116] ccc => cc,
 Pos: [106, 112] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [137, 139, 144] ccc => cc,
 Pos: [123, 129] cc => I,
 Pos: [127, 161] cc => I,
 Pos: [134, 136, 140] ccc => cc,
 Pos: [147, 158] cc => I,
 Pos: [149, 159] cc => I,
 Pos: [152, 164] cc => I,
 Pos: [160, 165] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 169] cc => I,
 Pos: [167, 171] cc => I,
 Pos: [172, 179] cc => I]
Change: 34, Saving: 34

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [8, 13] cc => I
Apply:  Pos: [17, 20] cc => I
Apply:  Pos: [22, 29] cc => I
Apply:  Pos: [23, 28] cc => I
Apply:  Pos: [35, 38, 41] ccc => cc
Apply:  Pos: [36, 40] cc => I
Apply:  Pos: [44, 52] cc => I
Apply:  Pos: [60, 63] cc => I
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [73, 79, 83] ccc => cc
Apply:  Pos: [72, 76, 86] ccc => cc
Apply:  Pos: [74, 77, 85] ccc => cc
Apply:  Pos: [80, 95] cc => I
Apply:  Pos: [91, 101] cc => I
Apply:  Pos: [92, 96] cc => I
Apply:  Pos: [93, 97, 102] ccc => cc
Apply:  Pos: [98, 107] cc => I
Apply:  Pos: [100, 104] cc => I
Apply:  Pos: [105, 113, 116] ccc => cc
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [137, 139, 144] ccc => cc
Apply:  Pos: [123, 129] cc => I
Apply:  Pos: [127, 161] cc => I
Apply:  Pos: [134, 136, 140] ccc => cc
Apply:  Pos: [147, 158] cc => I
Apply:  Pos: [149, 159] cc => I
Apply:  Pos: [152, 164] cc => I
Apply:  Pos: [160, 165] cc => I
Apply:  Pos: [162, 168, 173] ccc => cc
Apply:  Pos: [163, 169] cc => I
Apply:  Pos: [167, 171] cc => I
Apply:  Pos: [172, 179] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [13, 12], [11, 2], [11, 3], [10, 15], [4, 13], [11, 16], [15, 5], [13, 12], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [6, 4], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [0, 17], [18, 3], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [15, 0], [3, 2], [19, 6], [6, 16], [10, 14], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [10, 14], [15, 16], [0, 17], [13, 7], [5, 16], [2, 12], [14, 8], [1, 12], [17, 6], [18, 3], [1, 7], [9, 11], [14, 8], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [13, 7], [17, 4], [15, 5], [14, 8], [1, 12], [19, 6], [10, 15], [6, 1], [13, 7], [16, 3], [15, 0], [15, 5], [4, 13], [5, 1], [10, 8], [6, 4], [14, 8], [6, 16], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [17, 19], [6, 4], [15, 5], [19, 6], [1, 12], [0, 5], [10, 15], [4, 7], [11, 2], [13, 7], [17, 19], [8, 11], [2, 12], [19, 6], [1, 12], [15, 5], ----End Timer [Execute Mapping]:  3.3279104232788086

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[23, 32]
[48, 54]
[60, 66]
[82, 90]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[92, 95, 107]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 7, 10]
[29, 44, 56]
[84, 88, 92]
[108, 115, 118]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[23, 32]
[48, 54]
[60, 66]
[82, 90]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9374926090240479

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 7, 10] ccc => cc, Pos: [23, 32] cc => I, Pos: [23, 32] cc => I, Pos: [29, 44, 56] ccc => cc, Pos: [48, 54] cc => I, Pos: [48, 54] cc => I, Pos: [60, 66] cc => I, Pos: [60, 66] cc => I, Pos: [82, 90] cc => I, Pos: [82, 90] cc => I, Pos: [84, 88, 92] ccc => cc, Pos: [92, 95, 107] ccc => cc, Pos: [108, 115, 118] ccc => cc]

--------End Timer [Generate Plans]:  0.01562976837158203

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 7, 10] ccc => cc,
 Pos: [23, 32] cc => I,
 Pos: [29, 44, 56] ccc => cc,
 Pos: [48, 54] cc => I,
 Pos: [60, 66] cc => I,
 Pos: [82, 90] cc => I,
 Pos: [84, 88, 92] ccc => cc,
 Pos: [108, 115, 118] ccc => cc]
Change: 8, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 7, 10] ccc => cc
Apply:  Pos: [23, 32] cc => I
Apply:  Pos: [29, 44, 56] ccc => cc
Apply:  Pos: [48, 54] cc => I
Apply:  Pos: [60, 66] cc => I
Apply:  Pos: [82, 90] cc => I
Apply:  Pos: [84, 88, 92] ccc => cc
Apply:  Pos: [108, 115, 118] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 13], [11, 3], [11, 2], [10, 15], [13, 12], [11, 16], [15, 5], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 7], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [15, 16], [13, 7], [5, 16], [2, 12], [1, 12], [17, 6], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [10, 15], [14, 8], [1, 12], [19, 6], [15, 5], [6, 1], [16, 3], [15, 0], [4, 13], [5, 1], [10, 8], [6, 4], [14, 8], [6, 16], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [17, 19], [6, 4], [15, 5], [17, 19], [1, 12], [0, 5], [10, 15], [4, 7], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [1, 12], [15, 5], ----End Timer [Execute Mapping]:  1.9531223773956299

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[94, 97]
[98, 106]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[94, 97]
[98, 106]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6564671993255615

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [94, 97] cc => I, Pos: [94, 97] cc => I, Pos: [98, 106] cc => I, Pos: [98, 106] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [10, 13] cc => I, Pos: [94, 97] cc => I, Pos: [98, 106] cc => I]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [10, 13] cc => I
Apply:  Pos: [94, 97] cc => I
Apply:  Pos: [98, 106] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 13], [11, 2], [11, 3], [10, 15], [13, 12], [11, 16], [0, 5], [16, 3], [8, 11], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 12], [13, 7], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [15, 16], [13, 7], [5, 16], [1, 12], [2, 12], [17, 6], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [10, 15], [14, 8], [1, 12], [19, 6], [15, 5], [6, 1], [16, 3], [15, 0], [4, 13], [5, 1], [10, 8], [6, 4], [14, 8], [6, 16], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [15, 5], [0, 5], [10, 15], [4, 7], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [15, 5], ----End Timer [Execute Mapping]:  1.6564671993255615

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[94, 95, 102]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5156240463256836

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [94, 95, 102] ccc => cc]

--------End Timer [Generate Plans]:  0.015517950057983398

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [94, 95, 102] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [94, 95, 102] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 13], [11, 3], [11, 2], [10, 15], [13, 12], [11, 16], [0, 5], [16, 3], [8, 11], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 7], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [15, 16], [13, 7], [5, 16], [2, 12], [1, 12], [17, 6], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [10, 15], [14, 8], [1, 12], [19, 6], [15, 5], [6, 1], [16, 3], [15, 0], [4, 13], [5, 1], [10, 8], [6, 4], [14, 8], [6, 16], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [0, 5], [10, 15], [15, 5], [4, 7], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], ----End Timer [Execute Mapping]:  1.531141996383667

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5000526905059814

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 13], [11, 2], [11, 3], [10, 15], [13, 12], [11, 16], [0, 5], [16, 3], [8, 11], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 12], [13, 7], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [15, 16], [13, 7], [5, 16], [1, 12], [2, 12], [17, 6], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [10, 15], [14, 8], [1, 12], [19, 6], [15, 5], [6, 1], [16, 3], [15, 0], [4, 13], [5, 1], [10, 8], [6, 4], [14, 8], [6, 16], [11, 3], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [0, 5], [10, 15], [15, 5], [4, 7], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], ----End Timer [Execute Mapping]:  1.5000526905059814

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [102] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 28 - (small)
 - circuit cycle: 204

Reduced: 
 - size: 78 (43.33%)
 - depth: 17 (37.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07811999320983887

[6, 16], [18, 3], [17, 4], [13, 12], [6, 4], [11, 2], [6, 4], [11, 3], [14, 9], [10, 15], [4, 13], [11, 16], [15, 5], [14, 9], [13, 12], [0, 5], [16, 3], [1, 13], [8, 11], [15, 5], [1, 13], [5, 6], [11, 16], [4, 13], [11, 2], [17, 6], [14, 8], [12, 7], [4, 13], [11, 16], [1, 12], [0, 8], [17, 19], [6, 4], [3, 2], [8, 11], [4, 13], [16, 2], [11, 3], [14, 9], [4, 13], [8, 11], [0, 17], [18, 3], [10, 15], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [10, 15], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [15, 0], [13, 7], [3, 2], [19, 6], [13, 7], [0, 5], [6, 16], [10, 14], [12, 7], [19, 4], [11, 3], [0, 5], [16, 2], [13, 7], [14, 8], [15, 5], [0, 17], [1, 13], [5, 16], [2, 12], [10, 14], [17, 19], [1, 12], [17, 6], [14, 8], [18, 3], [15, 5], [13, 7], [1, 7], [9, 11], [14, 8], [4, 13], [17, 6], [13, 7], [15, 8], [5, 1], [17, 19], [13, 7], [8, 9], [17, 19], [11, 16], [1, 7], [17, 6], [15, 8], [9, 11], [1, 7], [6, 4], [10, 15], [17, 19], [1, 12], [14, 9], [16, 2], [13, 12], [10, 15], [5, 6], [0, 17], [1, 13], [6, 4], [3, 2], [11, 16], [13, 7], [17, 4], [15, 5], [14, 8], [4, 13], [1, 12], [3, 2], [19, 6], [9, 18], [10, 15], [4, 13], [6, 1], [13, 7], [16, 3], [15, 0], [5, 1], [4, 13], [15, 5], [10, 14], [6, 4], [14, 8], [5, 1], [6, 16], [11, 3], [19, 6], [10, 14], [15, 8], [19, 4], [11, 3], [13, 7], [16, 2], [17, 19], [6, 4], [10, 14], [15, 5], [19, 6], [1, 12], [0, 5], [10, 15], [11, 3], [16, 2], [19, 6], [9, 18], [4, 13], [16, 1], [10, 14], [19, 6], [11, 2], [14, 9], [13, 7], [16, 1], [17, 19], [14, 9], [16, 3], [4, 13], [8, 11], [2, 12], [19, 6], [1, 12], [15, 5], [16, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]
[8, 13]
[17, 20]
[23, 28]
[22, 29]
[13, 39]
[36, 40]
[44, 52]
[60, 63]
[64, 70]
[83, 89]
[82, 91]
[80, 95]
[92, 96]
[95, 98]
[91, 101]
[100, 104]
[98, 107]
[106, 112]
[117, 125]
[123, 129]
[142, 147]
[144, 152]
[147, 158]
[149, 159]
[154, 160]
[127, 161]
[152, 164]
[160, 165]
[163, 169]
[167, 171]
[172, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[35, 38, 41]
[66, 73, 79]
[74, 77, 85]
[93, 97, 102]
[129, 131, 135]
[137, 139, 144]
[136, 140, 153]
[162, 168, 173]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[28, 33, 36]
[73, 79, 83]
[72, 76, 86]
[105, 113, 116]
[122, 137, 139]
[134, 136, 140]
[165, 170, 176]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]
[8, 13]
[17, 20]
[23, 28]
[22, 29]
[13, 39]
[36, 40]
[44, 52]
[60, 63]
[64, 70]
[83, 89]
[82, 91]
[80, 95]
[92, 96]
[95, 98]
[91, 101]
[100, 104]
[98, 107]
[106, 112]
[117, 125]
[123, 129]
[142, 147]
[144, 152]
[147, 158]
[149, 159]
[154, 160]
[127, 161]
[152, 164]
[160, 165]
[163, 169]
[167, 171]
[172, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.203077554702759

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 6] cc => I, Pos: [4, 6] cc => I, Pos: [8, 13] cc => I, Pos: [8, 13] cc => I, Pos: [13, 39] cc => I, Pos: [13, 39] cc => I, Pos: [17, 20] cc => I, Pos: [17, 20] cc => I, Pos: [22, 29] cc => I, Pos: [22, 29] cc => I, Pos: [23, 28] cc => I, Pos: [23, 28] cc => I, Pos: [28, 33, 36] ccc => cc, Pos: [35, 38, 41] ccc => cc, Pos: [36, 40] cc => I, Pos: [36, 40] cc => I, Pos: [44, 52] cc => I, Pos: [44, 52] cc => I, Pos: [60, 63] cc => I, Pos: [60, 63] cc => I, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [66, 73, 79] ccc => cc, Pos: [72, 76, 86] ccc => cc, Pos: [73, 79, 83] ccc => cc, Pos: [74, 77, 85] ccc => cc, Pos: [80, 95] cc => I, Pos: [80, 95] cc => I, Pos: [82, 91] cc => I, Pos: [82, 91] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [91, 101] cc => I, Pos: [91, 101] cc => I, Pos: [92, 96] cc => I, Pos: [92, 96] cc => I, Pos: [93, 97, 102] ccc => cc, Pos: [95, 98] cc => I, Pos: [95, 98] cc => I, Pos: [98, 107] cc => I, Pos: [98, 107] cc => I, Pos: [100, 104] cc => I, Pos: [100, 104] cc => I, Pos: [105, 113, 116] ccc => cc, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [122, 137, 139] ccc => cc, Pos: [123, 129] cc => I, Pos: [123, 129] cc => I, Pos: [127, 161] cc => I, Pos: [127, 161] cc => I, Pos: [129, 131, 135] ccc => cc, Pos: [134, 136, 140] ccc => cc, Pos: [136, 140, 153] ccc => cc, Pos: [137, 139, 144] ccc => cc, Pos: [142, 147] cc => I, Pos: [142, 147] cc => I, Pos: [144, 152] cc => I, Pos: [144, 152] cc => I, Pos: [147, 158] cc => I, Pos: [147, 158] cc => I, Pos: [149, 159] cc => I, Pos: [149, 159] cc => I, Pos: [152, 164] cc => I, Pos: [152, 164] cc => I, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [162, 168, 173] ccc => cc, Pos: [163, 169] cc => I, Pos: [163, 169] cc => I, Pos: [165, 170, 176] ccc => cc, Pos: [167, 171] cc => I, Pos: [167, 171] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I]

Plan: 1
[Pos: [4, 6] cc => I,
 Pos: [8, 13] cc => I,
 Pos: [17, 20] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [23, 28] cc => I,
 Pos: [35, 38, 41] ccc => cc,
 Pos: [36, 40] cc => I,
 Pos: [44, 52] cc => I,
 Pos: [60, 63] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [66, 73, 79] ccc => cc,
 Pos: [72, 76, 86] ccc => cc,
 Pos: [74, 77, 85] ccc => cc,
 Pos: [80, 95] cc => I,
 Pos: [82, 91] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [92, 96] cc => I,
 Pos: [93, 97, 102] ccc => cc,
 Pos: [98, 107] cc => I,
 Pos: [100, 104] cc => I,
 Pos: [105, 113, 116] ccc => cc,
 Pos: [106, 112] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [122, 137, 139] ccc => cc,
 Pos: [123, 129] cc => I,
 Pos: [127, 161] cc => I,
 Pos: [134, 136, 140] ccc => cc,
 Pos: [142, 147] cc => I,
 Pos: [144, 152] cc => I,
 Pos: [149, 159] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 169] cc => I,
 Pos: [165, 170, 176] ccc => cc,
 Pos: [167, 171] cc => I,
 Pos: [172, 179] cc => I]
Change: 36, Saving: 36

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.09375786781311035

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 6] cc => I,
 Pos: [8, 13] cc => I,
 Pos: [17, 20] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [23, 28] cc => I,
 Pos: [35, 38, 41] ccc => cc,
 Pos: [36, 40] cc => I,
 Pos: [44, 52] cc => I,
 Pos: [60, 63] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [66, 73, 79] ccc => cc,
 Pos: [72, 76, 86] ccc => cc,
 Pos: [74, 77, 85] ccc => cc,
 Pos: [80, 95] cc => I,
 Pos: [82, 91] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [92, 96] cc => I,
 Pos: [93, 97, 102] ccc => cc,
 Pos: [98, 107] cc => I,
 Pos: [100, 104] cc => I,
 Pos: [105, 113, 116] ccc => cc,
 Pos: [106, 112] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [122, 137, 139] ccc => cc,
 Pos: [123, 129] cc => I,
 Pos: [127, 161] cc => I,
 Pos: [134, 136, 140] ccc => cc,
 Pos: [142, 147] cc => I,
 Pos: [144, 152] cc => I,
 Pos: [149, 159] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 169] cc => I,
 Pos: [165, 170, 176] ccc => cc,
 Pos: [167, 171] cc => I,
 Pos: [172, 179] cc => I]
Change: 36, Saving: 36

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [8, 13] cc => I
Apply:  Pos: [17, 20] cc => I
Apply:  Pos: [22, 29] cc => I
Apply:  Pos: [23, 28] cc => I
Apply:  Pos: [35, 38, 41] ccc => cc
Apply:  Pos: [36, 40] cc => I
Apply:  Pos: [44, 52] cc => I
Apply:  Pos: [60, 63] cc => I
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [66, 73, 79] ccc => cc
Apply:  Pos: [72, 76, 86] ccc => cc
Apply:  Pos: [74, 77, 85] ccc => cc
Apply:  Pos: [80, 95] cc => I
Apply:  Pos: [82, 91] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [92, 96] cc => I
Apply:  Pos: [93, 97, 102] ccc => cc
Apply:  Pos: [98, 107] cc => I
Apply:  Pos: [100, 104] cc => I
Apply:  Pos: [105, 113, 116] ccc => cc
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [122, 137, 139] ccc => cc
Apply:  Pos: [123, 129] cc => I
Apply:  Pos: [127, 161] cc => I
Apply:  Pos: [134, 136, 140] ccc => cc
Apply:  Pos: [142, 147] cc => I
Apply:  Pos: [144, 152] cc => I
Apply:  Pos: [149, 159] cc => I
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [162, 168, 173] ccc => cc
Apply:  Pos: [163, 169] cc => I
Apply:  Pos: [165, 170, 176] ccc => cc
Apply:  Pos: [167, 171] cc => I
Apply:  Pos: [172, 179] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [13, 12], [11, 2], [11, 3], [10, 15], [4, 13], [11, 16], [15, 5], [13, 12], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [6, 4], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [0, 17], [18, 3], [13, 7], [6, 4], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [15, 0], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [0, 17], [13, 7], [5, 16], [2, 12], [1, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [13, 7], [17, 4], [15, 5], [10, 14], [1, 12], [19, 6], [10, 15], [6, 1], [13, 7], [16, 3], [15, 0], [15, 5], [4, 13], [5, 1], [14, 8], [6, 4], [6, 16], [19, 6], [15, 8], [19, 4], [13, 7], [17, 19], [6, 4], [15, 5], [1, 12], [0, 5], [10, 15], [11, 3], [4, 7], [10, 14], [17, 19], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [1, 12], [15, 5], ----End Timer [Execute Mapping]:  3.296835422515869

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[23, 32]
[80, 88]
[101, 110]
[104, 115]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[90, 93, 103]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 7, 10]
[29, 44, 56]
[82, 86, 90]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[23, 32]
[80, 88]
[101, 110]
[104, 115]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.8594162464141846

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 7, 10] ccc => cc, Pos: [23, 32] cc => I, Pos: [23, 32] cc => I, Pos: [29, 44, 56] ccc => cc, Pos: [80, 88] cc => I, Pos: [80, 88] cc => I, Pos: [82, 86, 90] ccc => cc, Pos: [90, 93, 103] ccc => cc, Pos: [101, 110] cc => I, Pos: [101, 110] cc => I, Pos: [104, 115] cc => I, Pos: [104, 115] cc => I]

Plan: 1
[Pos: [3, 7, 10] ccc => cc,
 Pos: [23, 32] cc => I,
 Pos: [29, 44, 56] ccc => cc,
 Pos: [80, 88] cc => I,
 Pos: [82, 86, 90] ccc => cc,
 Pos: [101, 110] cc => I,
 Pos: [104, 115] cc => I]
Change: 7, Saving: 7

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.01561117172241211

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 7, 10] ccc => cc,
 Pos: [23, 32] cc => I,
 Pos: [29, 44, 56] ccc => cc,
 Pos: [80, 88] cc => I,
 Pos: [82, 86, 90] ccc => cc,
 Pos: [101, 110] cc => I,
 Pos: [104, 115] cc => I]
Change: 7, Saving: 7

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 7, 10] ccc => cc
Apply:  Pos: [23, 32] cc => I
Apply:  Pos: [29, 44, 56] ccc => cc
Apply:  Pos: [80, 88] cc => I
Apply:  Pos: [82, 86, 90] ccc => cc
Apply:  Pos: [101, 110] cc => I
Apply:  Pos: [104, 115] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015624284744262695

[6, 16], [18, 3], [17, 4], [4, 13], [11, 3], [11, 2], [10, 15], [13, 12], [11, 16], [15, 5], [0, 5], [16, 3], [8, 11], [15, 5], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 7], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [1, 12], [2, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [10, 15], [10, 14], [1, 12], [19, 6], [15, 5], [6, 1], [16, 3], [15, 0], [4, 13], [5, 1], [14, 8], [6, 16], [6, 4], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [15, 5], [0, 5], [10, 15], [11, 3], [4, 7], [10, 14], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], [15, 5], ----End Timer [Execute Mapping]:  1.8906517028808594

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[96, 97, 106]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5937421321868896

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [96, 97, 106] ccc => cc]

Plan: 1
[Pos: [10, 13] cc => I, Pos: [96, 97, 106] ccc => cc]
Change: 2, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.01562786102294922

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [10, 13] cc => I, Pos: [96, 97, 106] ccc => cc]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [10, 13] cc => I
Apply:  Pos: [96, 97, 106] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 16], [18, 3], [17, 4], [4, 13], [11, 2], [11, 3], [10, 15], [13, 12], [11, 16], [0, 5], [16, 3], [8, 11], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 12], [13, 7], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [2, 12], [1, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [10, 14], [10, 15], [1, 12], [19, 6], [15, 5], [6, 1], [16, 3], [15, 0], [4, 13], [5, 1], [14, 8], [6, 4], [6, 16], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [0, 5], [10, 15], [15, 5], [11, 3], [4, 7], [10, 14], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], ----End Timer [Execute Mapping]:  1.6093699932098389

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5469229221343994

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[6, 16], [18, 3], [17, 4], [4, 13], [11, 3], [11, 2], [10, 15], [13, 12], [11, 16], [0, 5], [16, 3], [8, 11], [5, 6], [11, 2], [17, 6], [14, 8], [12, 7], [1, 12], [0, 8], [17, 19], [3, 2], [8, 3], [16, 2], [11, 3], [14, 9], [15, 0], [18, 3], [13, 7], [13, 12], [3, 2], [6, 1], [1, 12], [4, 13], [8, 5], [16, 2], [13, 12], [14, 11], [1, 7], [8, 9], [0, 17], [3, 2], [19, 6], [6, 16], [10, 8], [12, 7], [19, 4], [11, 3], [16, 2], [1, 13], [14, 8], [15, 16], [13, 7], [5, 16], [1, 12], [2, 12], [18, 3], [1, 7], [9, 11], [4, 13], [15, 9], [5, 1], [8, 9], [11, 16], [17, 6], [9, 11], [5, 6], [1, 12], [14, 9], [16, 2], [13, 12], [6, 4], [0, 17], [1, 13], [11, 16], [17, 4], [10, 15], [10, 14], [1, 12], [19, 6], [15, 5], [6, 1], [16, 3], [15, 0], [4, 13], [5, 1], [14, 8], [6, 16], [6, 4], [19, 6], [15, 8], [19, 4], [13, 7], [6, 4], [0, 5], [10, 15], [15, 5], [11, 3], [4, 7], [10, 14], [11, 2], [13, 7], [19, 6], [8, 11], [2, 12], ----End Timer [Execute Mapping]:  1.5469229221343994

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [104] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 29 - (small)
 - circuit cycle: 208

Reduced: 
 - size: 76 (42.22%)
 - depth: 16 (35.56%)

