----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374737739562988

[17, 3], [19, 15], [18, 4], [11, 10], [8, 9], [16, 7], [10, 17], [14, 0], [8, 9], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [17, 3], [18, 7], [13, 11], [0, 15], [17, 3], [19, 15], [18, 7], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [17, 3], [13, 18], [19, 15], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [19, 15], [17, 6], [8, 9], [12, 11], [16, 4], [17, 6], [18, 4], [3, 9], [12, 10], [19, 17], [5, 12], [16, 4], [19, 15], [5, 12], [10, 4], [6, 8], [14, 0], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [6, 8], [5, 12], [1, 19], [0, 15], [3, 9], [2, 8], [5, 1], [2, 8], [18, 4], [17, 6], [14, 19], [3, 9], [5, 12], [18, 16], [11, 19], [3, 9], [12, 11], [3, 9], [5, 1], [16, 7], [14, 0], [4, 17], [11, 14], [16, 7], [2, 8], [19, 6], [10, 4], [5, 1], [17, 3], [11, 14], [10, 3], [19, 15], [6, 8], [5, 1], [14, 19], [0, 15], [16, 7], [8, 9], [13, 18], [10, 17], [4, 3], [14, 19], [18, 16], [0, 15], [4, 7], [10, 17], [2, 8], [1, 14], [13, 10], [19, 6], [4, 7], [3, 8], [1, 14], [6, 8], [12, 10], [13, 18], [1, 14], [2, 9], [10, 4], [17, 15], [13, 18], [12, 11], [5, 1], [7, 2], [11, 14], [17, 15], [4, 3], [5, 12], [4, 3], [11, 14], [18, 16], [5, 1], [11, 19], [7, 2], [17, 6], [4, 3], [18, 16], [1, 14], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 18], [12, 11], [1, 11], [17, 15], [3, 9], [5, 12], [14, 19], [1, 11], [10, 3], [2, 9], [5, 12], [4, 7], [1, 11], [18, 16], [1, 11], [13, 18], [6, 8], [10, 4], [3, 2], [17, 15], [1, 11], [16, 7], [18, 4], [12, 13], [19, 15], [2, 8], [1, 11], [3, 9], [17, 6], [14, 19], [4, 7], [2, 8], [13, 11], [17, 6], [0, 15], [2, 9], [13, 11], [18, 4], [19, 17], [0, 15], [12, 13], [17, 3], [7, 2], [18, 16], [13, 18], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [13, 18], [3, 8], [4, 17], [11, 10], [18, 7], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [2, 9], [14, 0], [1, 11], [18, 7], [15, 6], [2, 9], [5, 1], [13, 18], [0, 15], [14, 19], [16, 7], [5, 12], [1, 11], [4, 3], [13, 18], [17, 3], [1, 14], [16, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 8]
[17, 21]
[18, 23]
[21, 29]
[22, 31]
[31, 38]
[39, 43]
[38, 50]
[48, 51]
[50, 55]
[53, 61]
[51, 62]
[66, 68]
[65, 72]
[62, 73]
[72, 76]
[76, 78]
[67, 79]
[80, 84]
[68, 85]
[79, 88]
[83, 90]
[88, 94]
[84, 97]
[95, 102]
[96, 104]
[100, 106]
[105, 111]
[108, 113]
[113, 117]
[116, 121]
[120, 126]
[127, 129]
[125, 130]
[123, 132]
[124, 134]
[129, 136]
[131, 137]
[134, 144]
[147, 152]
[150, 155]
[152, 157]
[157, 159]
[148, 164]
[159, 165]
[165, 171]
[170, 176]
[173, 178]
[177, 181]
[179, 184]
[189, 196]
[200, 210]
[207, 212]
[214, 221]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[99, 103, 116]
[132, 138, 141]
[145, 158, 160]
[167, 175, 182]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[209, 213, 219]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[89, 91, 100]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 8]
[17, 21]
[18, 23]
[21, 29]
[22, 31]
[31, 38]
[39, 43]
[38, 50]
[48, 51]
[50, 55]
[53, 61]
[51, 62]
[66, 68]
[65, 72]
[62, 73]
[72, 76]
[76, 78]
[67, 79]
[80, 84]
[68, 85]
[79, 88]
[83, 90]
[88, 94]
[84, 97]
[95, 102]
[96, 104]
[100, 106]
[105, 111]
[108, 113]
[113, 117]
[116, 121]
[120, 126]
[127, 129]
[125, 130]
[123, 132]
[124, 134]
[129, 136]
[131, 137]
[134, 144]
[147, 152]
[150, 155]
[152, 157]
[157, 159]
[148, 164]
[159, 165]
[165, 171]
[170, 176]
[173, 178]
[177, 181]
[179, 184]
[189, 196]
[200, 210]
[207, 212]
[214, 221]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.187814474105835

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 8] cc => I, Pos: [4, 8] cc => I, Pos: [17, 21] cc => I, Pos: [17, 21] cc => I, Pos: [18, 23] cc => I, Pos: [18, 23] cc => I, Pos: [21, 29] cc => I, Pos: [21, 29] cc => I, Pos: [22, 31] cc => I, Pos: [22, 31] cc => I, Pos: [31, 38] cc => I, Pos: [31, 38] cc => I, Pos: [38, 50] cc => I, Pos: [38, 50] cc => I, Pos: [39, 43] cc => I, Pos: [39, 43] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [50, 55] cc => I, Pos: [50, 55] cc => I, Pos: [51, 62] cc => I, Pos: [51, 62] cc => I, Pos: [53, 61] cc => I, Pos: [53, 61] cc => I, Pos: [62, 73] cc => I, Pos: [62, 73] cc => I, Pos: [65, 72] cc => I, Pos: [65, 72] cc => I, Pos: [66, 68] cc => I, Pos: [66, 68] cc => I, Pos: [67, 79] cc => I, Pos: [67, 79] cc => I, Pos: [68, 85] cc => I, Pos: [68, 85] cc => I, Pos: [72, 76] cc => I, Pos: [72, 76] cc => I, Pos: [76, 78] cc => I, Pos: [76, 78] cc => I, Pos: [79, 88] cc => I, Pos: [79, 88] cc => I, Pos: [80, 84] cc => I, Pos: [80, 84] cc => I, Pos: [83, 90] cc => I, Pos: [83, 90] cc => I, Pos: [84, 97] cc => I, Pos: [84, 97] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 91, 100] ccc => cc, Pos: [95, 102] cc => I, Pos: [95, 102] cc => I, Pos: [96, 104] cc => I, Pos: [96, 104] cc => I, Pos: [99, 103, 116] ccc => cc, Pos: [100, 106] cc => I, Pos: [100, 106] cc => I, Pos: [105, 111] cc => I, Pos: [105, 111] cc => I, Pos: [108, 113] cc => I, Pos: [108, 113] cc => I, Pos: [113, 117] cc => I, Pos: [113, 117] cc => I, Pos: [116, 121] cc => I, Pos: [116, 121] cc => I, Pos: [120, 126] cc => I, Pos: [120, 126] cc => I, Pos: [123, 132] cc => I, Pos: [123, 132] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [125, 130] cc => I, Pos: [125, 130] cc => I, Pos: [127, 129] cc => I, Pos: [127, 129] cc => I, Pos: [129, 136] cc => I, Pos: [129, 136] cc => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [132, 138, 141] ccc => cc, Pos: [134, 144] cc => I, Pos: [134, 144] cc => I, Pos: [145, 158, 160] ccc => cc, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [150, 155] cc => I, Pos: [150, 155] cc => I, Pos: [152, 157] cc => I, Pos: [152, 157] cc => I, Pos: [157, 159] cc => I, Pos: [157, 159] cc => I, Pos: [159, 165] cc => I, Pos: [159, 165] cc => I, Pos: [165, 171] cc => I, Pos: [165, 171] cc => I, Pos: [167, 175, 182] ccc => cc, Pos: [170, 176] cc => I, Pos: [170, 176] cc => I, Pos: [173, 178] cc => I, Pos: [173, 178] cc => I, Pos: [177, 181] cc => I, Pos: [177, 181] cc => I, Pos: [179, 184] cc => I, Pos: [179, 184] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [200, 210] cc => I, Pos: [200, 210] cc => I, Pos: [207, 212] cc => I, Pos: [207, 212] cc => I, Pos: [209, 213, 219] ccc => cc, Pos: [214, 221] cc => I, Pos: [214, 221] cc => I]

Plan: 1
[Pos: [4, 8] cc => I,
 Pos: [17, 21] cc => I,
 Pos: [18, 23] cc => I,
 Pos: [22, 31] cc => I,
 Pos: [38, 50] cc => I,
 Pos: [39, 43] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [53, 61] cc => I,
 Pos: [62, 73] cc => I,
 Pos: [65, 72] cc => I,
 Pos: [66, 68] cc => I,
 Pos: [67, 79] cc => I,
 Pos: [76, 78] cc => I,
 Pos: [80, 84] cc => I,
 Pos: [83, 90] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [89, 91, 100] ccc => cc,
 Pos: [95, 102] cc => I,
 Pos: [96, 104] cc => I,
 Pos: [99, 103, 116] ccc => cc,
 Pos: [105, 111] cc => I,
 Pos: [108, 113] cc => I,
 Pos: [120, 126] cc => I,
 Pos: [123, 132] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [125, 130] cc => I,
 Pos: [127, 129] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [145, 158, 160] ccc => cc,
 Pos: [147, 152] cc => I,
 Pos: [148, 164] cc => I,
 Pos: [150, 155] cc => I,
 Pos: [157, 159] cc => I,
 Pos: [165, 171] cc => I,
 Pos: [167, 175, 182] ccc => cc,
 Pos: [170, 176] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 181] cc => I,
 Pos: [179, 184] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [207, 212] cc => I,
 Pos: [209, 213, 219] ccc => cc,
 Pos: [214, 221] cc => I]
Change: 44, Saving: 166

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 8] cc => I,
 Pos: [17, 21] cc => I,
 Pos: [18, 23] cc => I,
 Pos: [22, 31] cc => I,
 Pos: [38, 50] cc => I,
 Pos: [39, 43] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [53, 61] cc => I,
 Pos: [62, 73] cc => I,
 Pos: [65, 72] cc => I,
 Pos: [66, 68] cc => I,
 Pos: [67, 79] cc => I,
 Pos: [76, 78] cc => I,
 Pos: [80, 84] cc => I,
 Pos: [83, 90] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [89, 91, 100] ccc => cc,
 Pos: [95, 102] cc => I,
 Pos: [96, 104] cc => I,
 Pos: [99, 103, 116] ccc => cc,
 Pos: [105, 111] cc => I,
 Pos: [108, 113] cc => I,
 Pos: [120, 126] cc => I,
 Pos: [123, 132] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [125, 130] cc => I,
 Pos: [127, 129] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [145, 158, 160] ccc => cc,
 Pos: [147, 152] cc => I,
 Pos: [148, 164] cc => I,
 Pos: [150, 155] cc => I,
 Pos: [157, 159] cc => I,
 Pos: [165, 171] cc => I,
 Pos: [167, 175, 182] ccc => cc,
 Pos: [170, 176] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 181] cc => I,
 Pos: [179, 184] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [207, 212] cc => I,
 Pos: [209, 213, 219] ccc => cc,
 Pos: [214, 221] cc => I]
Change: 44, Saving: 166

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 8] cc => I
Apply:  Pos: [17, 21] cc => I
Apply:  Pos: [18, 23] cc => I
Apply:  Pos: [22, 31] cc => I
Apply:  Pos: [38, 50] cc => I
Apply:  Pos: [39, 43] cc => I
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [53, 61] cc => I
Apply:  Pos: [62, 73] cc => I
Apply:  Pos: [65, 72] cc => I
Apply:  Pos: [66, 68] cc => I
Apply:  Pos: [67, 79] cc => I
Apply:  Pos: [76, 78] cc => I
Apply:  Pos: [80, 84] cc => I
Apply:  Pos: [83, 90] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [89, 91, 100] ccc => cc
Apply:  Pos: [95, 102] cc => I
Apply:  Pos: [96, 104] cc => I
Apply:  Pos: [99, 103, 116] ccc => cc
Apply:  Pos: [105, 111] cc => I
Apply:  Pos: [108, 113] cc => I
Apply:  Pos: [120, 126] cc => I
Apply:  Pos: [123, 132] cc => I
Apply:  Pos: [124, 134] cc => I
Apply:  Pos: [125, 130] cc => I
Apply:  Pos: [127, 129] cc => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [145, 158, 160] ccc => cc
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [148, 164] cc => I
Apply:  Pos: [150, 155] cc => I
Apply:  Pos: [157, 159] cc => I
Apply:  Pos: [165, 171] cc => I
Apply:  Pos: [167, 175, 182] ccc => cc
Apply:  Pos: [170, 176] cc => I
Apply:  Pos: [173, 178] cc => I
Apply:  Pos: [177, 181] cc => I
Apply:  Pos: [179, 184] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [200, 210] cc => I
Apply:  Pos: [207, 212] cc => I
Apply:  Pos: [209, 213, 219] ccc => cc
Apply:  Pos: [214, 221] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [8, 9], [12, 11], [16, 4], [18, 4], [3, 9], [12, 10], [19, 17], [16, 4], [10, 4], [14, 0], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [12, 11], [14, 0], [4, 17], [2, 8], [19, 6], [10, 4], [10, 17], [17, 3], [19, 15], [6, 8], [16, 7], [8, 9], [13, 16], [4, 3], [18, 16], [10, 17], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [1, 14], [2, 9], [10, 4], [13, 18], [12, 11], [5, 12], [11, 19], [17, 6], [4, 3], [1, 14], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 16], [12, 11], [3, 9], [14, 19], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [12, 13], [19, 15], [3, 9], [14, 19], [4, 7], [2, 9], [19, 17], [12, 13], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  4.187814474105835

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 29]
[30, 34]
[53, 79]
[75, 84]
[104, 111]
[92, 118]
[111, 128]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 16, 39]
[94, 105, 107]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[55, 58, 59]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 29]
[30, 34]
[53, 79]
[75, 84]
[104, 111]
[92, 118]
[111, 128]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.374310255050659

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 16, 39] ccc => cc, Pos: [21, 29] cc => I, Pos: [21, 29] cc => I, Pos: [30, 34] cc => I, Pos: [30, 34] cc => I, Pos: [53, 79] cc => I, Pos: [53, 79] cc => I, Pos: [55, 58, 59] ccc => cc, Pos: [75, 84] cc => I, Pos: [75, 84] cc => I, Pos: [92, 118] cc => I, Pos: [92, 118] cc => I, Pos: [94, 105, 107] ccc => cc, Pos: [104, 111] cc => I, Pos: [104, 111] cc => I, Pos: [111, 128] cc => I, Pos: [111, 128] cc => I]

Plan: 1
[Pos: [6, 16, 39] ccc => cc,
 Pos: [21, 29] cc => I,
 Pos: [30, 34] cc => I,
 Pos: [53, 79] cc => I,
 Pos: [55, 58, 59] ccc => cc,
 Pos: [75, 84] cc => I,
 Pos: [92, 118] cc => I,
 Pos: [94, 105, 107] ccc => cc,
 Pos: [104, 111] cc => I]
Change: 9, Saving: 30

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 16, 39] ccc => cc,
 Pos: [21, 29] cc => I,
 Pos: [30, 34] cc => I,
 Pos: [53, 79] cc => I,
 Pos: [55, 58, 59] ccc => cc,
 Pos: [75, 84] cc => I,
 Pos: [92, 118] cc => I,
 Pos: [94, 105, 107] ccc => cc,
 Pos: [104, 111] cc => I]
Change: 9, Saving: 30

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 16, 39] ccc => cc
Apply:  Pos: [21, 29] cc => I
Apply:  Pos: [30, 34] cc => I
Apply:  Pos: [53, 79] cc => I
Apply:  Pos: [55, 58, 59] ccc => cc
Apply:  Pos: [75, 84] cc => I
Apply:  Pos: [92, 118] cc => I
Apply:  Pos: [94, 105, 107] ccc => cc
Apply:  Pos: [104, 111] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 15], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [18, 4], [16, 4], [12, 10], [19, 17], [10, 4], [16, 4], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [14, 0], [10, 4], [2, 8], [19, 6], [4, 17], [17, 3], [19, 15], [6, 8], [16, 7], [8, 9], [13, 16], [4, 3], [18, 16], [10, 17], [2, 8], [13, 10], [19, 6], [6, 8], [3, 8], [12, 10], [2, 9], [10, 4], [13, 18], [5, 12], [11, 19], [17, 6], [4, 3], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [18, 7], [16, 7], [19, 15], [3, 9], [4, 7], [2, 9], [19, 17], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [17, 3], [4, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.374310255050659

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[78, 97]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[78, 97]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.03214955329895

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [78, 97] cc => I, Pos: [78, 97] cc => I]

Plan: 1
[Pos: [78, 97] cc => I]
Change: 1, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [78, 97] cc => I]
Change: 1, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [78, 97] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 15], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [16, 4], [18, 4], [12, 10], [19, 17], [16, 4], [10, 4], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [14, 0], [10, 4], [2, 8], [19, 6], [4, 17], [17, 3], [19, 15], [6, 8], [16, 7], [8, 9], [13, 16], [4, 3], [18, 16], [10, 17], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [2, 9], [10, 4], [13, 18], [5, 12], [11, 19], [17, 6], [17, 3], [4, 3], [15, 6], [5, 1], [16, 4], [7, 2], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.03214955329895

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9997210502624512

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 15], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [18, 4], [16, 4], [12, 10], [19, 17], [10, 4], [16, 4], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [14, 0], [10, 4], [2, 8], [19, 6], [4, 17], [17, 3], [19, 15], [6, 8], [16, 7], [8, 9], [13, 16], [4, 3], [18, 16], [10, 17], [2, 8], [13, 10], [19, 6], [6, 8], [3, 8], [12, 10], [2, 9], [10, 4], [13, 18], [5, 12], [11, 19], [17, 3], [17, 6], [4, 3], [15, 6], [5, 1], [16, 4], [7, 2], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [18, 7], [16, 7], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [17, 3], [4, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  1.9997210502624512

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [125] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 250

Reduced: 
 - size: 100 (44.44%)
 - cycle: 200 (44.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10960626602172852

[17, 3], [19, 15], [18, 4], [11, 10], [8, 9], [16, 7], [10, 17], [14, 0], [8, 9], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [17, 3], [18, 7], [13, 11], [0, 15], [17, 3], [19, 15], [18, 7], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [17, 3], [13, 18], [19, 15], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [19, 15], [17, 6], [8, 9], [12, 11], [16, 4], [17, 6], [18, 4], [3, 9], [12, 10], [19, 17], [5, 12], [16, 4], [19, 15], [5, 12], [10, 4], [6, 8], [14, 0], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [6, 8], [5, 12], [1, 19], [0, 15], [3, 9], [2, 8], [5, 1], [2, 8], [18, 4], [17, 6], [14, 19], [3, 9], [5, 12], [18, 16], [11, 19], [3, 9], [12, 11], [3, 9], [5, 1], [16, 7], [14, 0], [4, 17], [11, 14], [16, 7], [2, 8], [19, 6], [10, 4], [5, 1], [17, 3], [11, 14], [10, 3], [19, 15], [6, 8], [5, 1], [14, 19], [0, 15], [16, 7], [8, 9], [13, 18], [10, 17], [4, 3], [14, 19], [18, 16], [0, 15], [4, 7], [10, 17], [2, 8], [1, 14], [13, 10], [19, 6], [4, 7], [3, 8], [1, 14], [6, 8], [12, 10], [13, 18], [1, 14], [2, 9], [10, 4], [17, 15], [13, 18], [12, 11], [5, 1], [7, 2], [11, 14], [17, 15], [4, 3], [5, 12], [4, 3], [11, 14], [18, 16], [5, 1], [11, 19], [7, 2], [17, 6], [4, 3], [18, 16], [1, 14], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 18], [12, 11], [1, 11], [17, 15], [3, 9], [5, 12], [14, 19], [1, 11], [10, 3], [2, 9], [5, 12], [4, 7], [1, 11], [18, 16], [1, 11], [13, 18], [6, 8], [10, 4], [3, 2], [17, 15], [1, 11], [16, 7], [18, 4], [12, 13], [19, 15], [2, 8], [1, 11], [3, 9], [17, 6], [14, 19], [4, 7], [2, 8], [13, 11], [17, 6], [0, 15], [2, 9], [13, 11], [18, 4], [19, 17], [0, 15], [12, 13], [17, 3], [7, 2], [18, 16], [13, 18], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [13, 18], [3, 8], [4, 17], [11, 10], [18, 7], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [2, 9], [14, 0], [1, 11], [18, 7], [15, 6], [2, 9], [5, 1], [13, 18], [0, 15], [14, 19], [16, 7], [5, 12], [1, 11], [4, 3], [13, 18], [17, 3], [1, 14], [16, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 8]
[17, 21]
[18, 23]
[21, 29]
[22, 31]
[31, 38]
[39, 43]
[38, 50]
[48, 51]
[50, 55]
[53, 61]
[51, 62]
[66, 68]
[65, 72]
[62, 73]
[72, 76]
[76, 78]
[67, 79]
[80, 84]
[68, 85]
[79, 88]
[83, 90]
[88, 94]
[84, 97]
[95, 102]
[96, 104]
[100, 106]
[105, 111]
[108, 113]
[113, 117]
[116, 121]
[120, 126]
[127, 129]
[125, 130]
[123, 132]
[124, 134]
[129, 136]
[131, 137]
[134, 144]
[147, 152]
[150, 155]
[152, 157]
[157, 159]
[148, 164]
[159, 165]
[165, 171]
[170, 176]
[173, 178]
[177, 181]
[179, 184]
[189, 196]
[200, 210]
[207, 212]
[214, 221]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[99, 103, 116]
[132, 138, 141]
[145, 158, 160]
[167, 175, 182]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[209, 213, 219]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[89, 91, 100]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 8]
[17, 21]
[18, 23]
[21, 29]
[22, 31]
[31, 38]
[39, 43]
[38, 50]
[48, 51]
[50, 55]
[53, 61]
[51, 62]
[66, 68]
[65, 72]
[62, 73]
[72, 76]
[76, 78]
[67, 79]
[80, 84]
[68, 85]
[79, 88]
[83, 90]
[88, 94]
[84, 97]
[95, 102]
[96, 104]
[100, 106]
[105, 111]
[108, 113]
[113, 117]
[116, 121]
[120, 126]
[127, 129]
[125, 130]
[123, 132]
[124, 134]
[129, 136]
[131, 137]
[134, 144]
[147, 152]
[150, 155]
[152, 157]
[157, 159]
[148, 164]
[159, 165]
[165, 171]
[170, 176]
[173, 178]
[177, 181]
[179, 184]
[189, 196]
[200, 210]
[207, 212]
[214, 221]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.218411207199097

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 8] cc => I, Pos: [4, 8] cc => I, Pos: [17, 21] cc => I, Pos: [17, 21] cc => I, Pos: [18, 23] cc => I, Pos: [18, 23] cc => I, Pos: [21, 29] cc => I, Pos: [21, 29] cc => I, Pos: [22, 31] cc => I, Pos: [22, 31] cc => I, Pos: [31, 38] cc => I, Pos: [31, 38] cc => I, Pos: [38, 50] cc => I, Pos: [38, 50] cc => I, Pos: [39, 43] cc => I, Pos: [39, 43] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [50, 55] cc => I, Pos: [50, 55] cc => I, Pos: [51, 62] cc => I, Pos: [51, 62] cc => I, Pos: [53, 61] cc => I, Pos: [53, 61] cc => I, Pos: [62, 73] cc => I, Pos: [62, 73] cc => I, Pos: [65, 72] cc => I, Pos: [65, 72] cc => I, Pos: [66, 68] cc => I, Pos: [66, 68] cc => I, Pos: [67, 79] cc => I, Pos: [67, 79] cc => I, Pos: [68, 85] cc => I, Pos: [68, 85] cc => I, Pos: [72, 76] cc => I, Pos: [72, 76] cc => I, Pos: [76, 78] cc => I, Pos: [76, 78] cc => I, Pos: [79, 88] cc => I, Pos: [79, 88] cc => I, Pos: [80, 84] cc => I, Pos: [80, 84] cc => I, Pos: [83, 90] cc => I, Pos: [83, 90] cc => I, Pos: [84, 97] cc => I, Pos: [84, 97] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 91, 100] ccc => cc, Pos: [95, 102] cc => I, Pos: [95, 102] cc => I, Pos: [96, 104] cc => I, Pos: [96, 104] cc => I, Pos: [99, 103, 116] ccc => cc, Pos: [100, 106] cc => I, Pos: [100, 106] cc => I, Pos: [105, 111] cc => I, Pos: [105, 111] cc => I, Pos: [108, 113] cc => I, Pos: [108, 113] cc => I, Pos: [113, 117] cc => I, Pos: [113, 117] cc => I, Pos: [116, 121] cc => I, Pos: [116, 121] cc => I, Pos: [120, 126] cc => I, Pos: [120, 126] cc => I, Pos: [123, 132] cc => I, Pos: [123, 132] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [125, 130] cc => I, Pos: [125, 130] cc => I, Pos: [127, 129] cc => I, Pos: [127, 129] cc => I, Pos: [129, 136] cc => I, Pos: [129, 136] cc => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [132, 138, 141] ccc => cc, Pos: [134, 144] cc => I, Pos: [134, 144] cc => I, Pos: [145, 158, 160] ccc => cc, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [150, 155] cc => I, Pos: [150, 155] cc => I, Pos: [152, 157] cc => I, Pos: [152, 157] cc => I, Pos: [157, 159] cc => I, Pos: [157, 159] cc => I, Pos: [159, 165] cc => I, Pos: [159, 165] cc => I, Pos: [165, 171] cc => I, Pos: [165, 171] cc => I, Pos: [167, 175, 182] ccc => cc, Pos: [170, 176] cc => I, Pos: [170, 176] cc => I, Pos: [173, 178] cc => I, Pos: [173, 178] cc => I, Pos: [177, 181] cc => I, Pos: [177, 181] cc => I, Pos: [179, 184] cc => I, Pos: [179, 184] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [200, 210] cc => I, Pos: [200, 210] cc => I, Pos: [207, 212] cc => I, Pos: [207, 212] cc => I, Pos: [209, 213, 219] ccc => cc, Pos: [214, 221] cc => I, Pos: [214, 221] cc => I]

Plan: 1
[Pos: [4, 8] cc => I,
 Pos: [17, 21] cc => I,
 Pos: [18, 23] cc => I,
 Pos: [22, 31] cc => I,
 Pos: [38, 50] cc => I,
 Pos: [39, 43] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [53, 61] cc => I,
 Pos: [62, 73] cc => I,
 Pos: [65, 72] cc => I,
 Pos: [66, 68] cc => I,
 Pos: [67, 79] cc => I,
 Pos: [76, 78] cc => I,
 Pos: [80, 84] cc => I,
 Pos: [83, 90] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [89, 91, 100] ccc => cc,
 Pos: [95, 102] cc => I,
 Pos: [96, 104] cc => I,
 Pos: [99, 103, 116] ccc => cc,
 Pos: [105, 111] cc => I,
 Pos: [108, 113] cc => I,
 Pos: [120, 126] cc => I,
 Pos: [123, 132] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [125, 130] cc => I,
 Pos: [127, 129] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [145, 158, 160] ccc => cc,
 Pos: [147, 152] cc => I,
 Pos: [148, 164] cc => I,
 Pos: [150, 155] cc => I,
 Pos: [157, 159] cc => I,
 Pos: [165, 171] cc => I,
 Pos: [167, 175, 182] ccc => cc,
 Pos: [170, 176] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 181] cc => I,
 Pos: [179, 184] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [207, 212] cc => I,
 Pos: [209, 213, 219] ccc => cc,
 Pos: [214, 221] cc => I]
Change: 44, Saving: 44

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.10941410064697266

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 8] cc => I,
 Pos: [17, 21] cc => I,
 Pos: [18, 23] cc => I,
 Pos: [22, 31] cc => I,
 Pos: [38, 50] cc => I,
 Pos: [39, 43] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [53, 61] cc => I,
 Pos: [62, 73] cc => I,
 Pos: [65, 72] cc => I,
 Pos: [66, 68] cc => I,
 Pos: [67, 79] cc => I,
 Pos: [76, 78] cc => I,
 Pos: [80, 84] cc => I,
 Pos: [83, 90] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [89, 91, 100] ccc => cc,
 Pos: [95, 102] cc => I,
 Pos: [96, 104] cc => I,
 Pos: [99, 103, 116] ccc => cc,
 Pos: [105, 111] cc => I,
 Pos: [108, 113] cc => I,
 Pos: [120, 126] cc => I,
 Pos: [123, 132] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [125, 130] cc => I,
 Pos: [127, 129] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [145, 158, 160] ccc => cc,
 Pos: [147, 152] cc => I,
 Pos: [148, 164] cc => I,
 Pos: [150, 155] cc => I,
 Pos: [157, 159] cc => I,
 Pos: [165, 171] cc => I,
 Pos: [167, 175, 182] ccc => cc,
 Pos: [170, 176] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 181] cc => I,
 Pos: [179, 184] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [207, 212] cc => I,
 Pos: [209, 213, 219] ccc => cc,
 Pos: [214, 221] cc => I]
Change: 44, Saving: 44

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 8] cc => I
Apply:  Pos: [17, 21] cc => I
Apply:  Pos: [18, 23] cc => I
Apply:  Pos: [22, 31] cc => I
Apply:  Pos: [38, 50] cc => I
Apply:  Pos: [39, 43] cc => I
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [53, 61] cc => I
Apply:  Pos: [62, 73] cc => I
Apply:  Pos: [65, 72] cc => I
Apply:  Pos: [66, 68] cc => I
Apply:  Pos: [67, 79] cc => I
Apply:  Pos: [76, 78] cc => I
Apply:  Pos: [80, 84] cc => I
Apply:  Pos: [83, 90] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [89, 91, 100] ccc => cc
Apply:  Pos: [95, 102] cc => I
Apply:  Pos: [96, 104] cc => I
Apply:  Pos: [99, 103, 116] ccc => cc
Apply:  Pos: [105, 111] cc => I
Apply:  Pos: [108, 113] cc => I
Apply:  Pos: [120, 126] cc => I
Apply:  Pos: [123, 132] cc => I
Apply:  Pos: [124, 134] cc => I
Apply:  Pos: [125, 130] cc => I
Apply:  Pos: [127, 129] cc => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [145, 158, 160] ccc => cc
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [148, 164] cc => I
Apply:  Pos: [150, 155] cc => I
Apply:  Pos: [157, 159] cc => I
Apply:  Pos: [165, 171] cc => I
Apply:  Pos: [167, 175, 182] ccc => cc
Apply:  Pos: [170, 176] cc => I
Apply:  Pos: [173, 178] cc => I
Apply:  Pos: [177, 181] cc => I
Apply:  Pos: [179, 184] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [200, 210] cc => I
Apply:  Pos: [207, 212] cc => I
Apply:  Pos: [209, 213, 219] ccc => cc
Apply:  Pos: [214, 221] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [8, 9], [12, 11], [16, 4], [18, 4], [3, 9], [12, 10], [19, 17], [16, 4], [10, 4], [14, 0], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [12, 11], [14, 0], [4, 17], [2, 8], [19, 6], [10, 4], [10, 17], [17, 3], [19, 15], [6, 8], [16, 7], [8, 9], [13, 16], [4, 3], [18, 16], [10, 17], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [1, 14], [2, 9], [10, 4], [13, 18], [12, 11], [5, 12], [11, 19], [17, 6], [4, 3], [1, 14], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 16], [12, 11], [3, 9], [14, 19], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [12, 13], [19, 15], [3, 9], [14, 19], [4, 7], [2, 9], [19, 17], [12, 13], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  4.327825307846069

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 29]
[30, 34]
[53, 79]
[75, 84]
[104, 111]
[92, 118]
[111, 128]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 16, 39]
[94, 105, 107]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[55, 58, 59]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 29]
[30, 34]
[53, 79]
[75, 84]
[104, 111]
[92, 118]
[111, 128]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3437323570251465

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 16, 39] ccc => cc, Pos: [21, 29] cc => I, Pos: [21, 29] cc => I, Pos: [30, 34] cc => I, Pos: [30, 34] cc => I, Pos: [53, 79] cc => I, Pos: [53, 79] cc => I, Pos: [55, 58, 59] ccc => cc, Pos: [75, 84] cc => I, Pos: [75, 84] cc => I, Pos: [92, 118] cc => I, Pos: [92, 118] cc => I, Pos: [94, 105, 107] ccc => cc, Pos: [104, 111] cc => I, Pos: [104, 111] cc => I, Pos: [111, 128] cc => I, Pos: [111, 128] cc => I]

Plan: 1
[Pos: [6, 16, 39] ccc => cc,
 Pos: [21, 29] cc => I,
 Pos: [30, 34] cc => I,
 Pos: [53, 79] cc => I,
 Pos: [55, 58, 59] ccc => cc,
 Pos: [75, 84] cc => I,
 Pos: [92, 118] cc => I,
 Pos: [94, 105, 107] ccc => cc,
 Pos: [104, 111] cc => I]
Change: 9, Saving: 9

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.031603097915649414

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 16, 39] ccc => cc,
 Pos: [21, 29] cc => I,
 Pos: [30, 34] cc => I,
 Pos: [53, 79] cc => I,
 Pos: [55, 58, 59] ccc => cc,
 Pos: [75, 84] cc => I,
 Pos: [92, 118] cc => I,
 Pos: [94, 105, 107] ccc => cc,
 Pos: [104, 111] cc => I]
Change: 9, Saving: 9

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 16, 39] ccc => cc
Apply:  Pos: [21, 29] cc => I
Apply:  Pos: [30, 34] cc => I
Apply:  Pos: [53, 79] cc => I
Apply:  Pos: [55, 58, 59] ccc => cc
Apply:  Pos: [75, 84] cc => I
Apply:  Pos: [92, 118] cc => I
Apply:  Pos: [94, 105, 107] ccc => cc
Apply:  Pos: [104, 111] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 15], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [18, 4], [16, 4], [12, 10], [19, 17], [10, 4], [16, 4], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [14, 0], [10, 4], [2, 8], [19, 6], [4, 17], [17, 3], [19, 15], [6, 8], [16, 7], [8, 9], [13, 16], [4, 3], [18, 16], [10, 17], [2, 8], [13, 10], [19, 6], [6, 8], [3, 8], [12, 10], [2, 9], [10, 4], [13, 18], [5, 12], [11, 19], [17, 6], [4, 3], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [18, 7], [16, 7], [19, 15], [3, 9], [4, 7], [2, 9], [19, 17], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [17, 3], [4, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.375335454940796

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[78, 97]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[78, 97]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.016209602355957

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [78, 97] cc => I, Pos: [78, 97] cc => I]

Plan: 1
[Pos: [78, 97] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [78, 97] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [78, 97] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 15], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [16, 4], [18, 4], [12, 10], [19, 17], [16, 4], [10, 4], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [14, 0], [10, 4], [2, 8], [19, 6], [4, 17], [17, 3], [19, 15], [6, 8], [16, 7], [8, 9], [13, 16], [4, 3], [18, 16], [10, 17], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [2, 9], [10, 4], [13, 18], [5, 12], [11, 19], [17, 6], [17, 3], [4, 3], [15, 6], [5, 1], [16, 4], [7, 2], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.016209602355957

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9685497283935547

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 15], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [18, 4], [16, 4], [12, 10], [19, 17], [10, 4], [16, 4], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [14, 0], [10, 4], [2, 8], [19, 6], [4, 17], [17, 3], [19, 15], [6, 8], [16, 7], [8, 9], [13, 16], [4, 3], [18, 16], [10, 17], [2, 8], [13, 10], [19, 6], [6, 8], [3, 8], [12, 10], [2, 9], [10, 4], [13, 18], [5, 12], [11, 19], [17, 3], [17, 6], [4, 3], [15, 6], [5, 1], [16, 4], [7, 2], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [18, 7], [16, 7], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [17, 3], [4, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  1.9685497283935547

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [125] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 250

Reduced: 
 - size: 100 (44.44%)
 - depth: 13 (28.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374403953552246

[17, 3], [19, 15], [18, 4], [11, 10], [8, 9], [16, 7], [10, 17], [14, 0], [8, 9], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [17, 3], [18, 7], [13, 11], [0, 15], [17, 3], [19, 15], [18, 7], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [17, 3], [13, 18], [19, 15], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [19, 15], [17, 6], [8, 9], [12, 11], [16, 4], [17, 6], [18, 4], [3, 9], [12, 10], [19, 17], [5, 12], [16, 4], [19, 15], [5, 12], [10, 4], [6, 8], [14, 0], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [6, 8], [5, 12], [1, 19], [0, 15], [3, 9], [2, 8], [5, 1], [2, 8], [18, 4], [17, 6], [14, 19], [3, 9], [5, 12], [18, 16], [11, 19], [3, 9], [12, 11], [3, 9], [5, 1], [16, 7], [14, 0], [4, 17], [11, 14], [16, 7], [2, 8], [19, 6], [10, 4], [5, 1], [17, 3], [11, 14], [10, 3], [19, 15], [6, 8], [5, 1], [14, 19], [0, 15], [16, 7], [8, 9], [13, 18], [10, 17], [4, 3], [14, 19], [18, 16], [0, 15], [4, 7], [10, 17], [2, 8], [1, 14], [13, 10], [19, 6], [4, 7], [3, 8], [1, 14], [6, 8], [12, 10], [13, 18], [1, 14], [2, 9], [10, 4], [17, 15], [13, 18], [12, 11], [5, 1], [7, 2], [11, 14], [17, 15], [4, 3], [5, 12], [4, 3], [11, 14], [18, 16], [5, 1], [11, 19], [7, 2], [17, 6], [4, 3], [18, 16], [1, 14], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 18], [12, 11], [1, 11], [17, 15], [3, 9], [5, 12], [14, 19], [1, 11], [10, 3], [2, 9], [5, 12], [4, 7], [1, 11], [18, 16], [1, 11], [13, 18], [6, 8], [10, 4], [3, 2], [17, 15], [1, 11], [16, 7], [18, 4], [12, 13], [19, 15], [2, 8], [1, 11], [3, 9], [17, 6], [14, 19], [4, 7], [2, 8], [13, 11], [17, 6], [0, 15], [2, 9], [13, 11], [18, 4], [19, 17], [0, 15], [12, 13], [17, 3], [7, 2], [18, 16], [13, 18], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [13, 18], [3, 8], [4, 17], [11, 10], [18, 7], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [2, 9], [14, 0], [1, 11], [18, 7], [15, 6], [2, 9], [5, 1], [13, 18], [0, 15], [14, 19], [16, 7], [5, 12], [1, 11], [4, 3], [13, 18], [17, 3], [1, 14], [16, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 8]
[17, 21]
[18, 23]
[21, 29]
[22, 31]
[31, 38]
[39, 43]
[38, 50]
[48, 51]
[50, 55]
[53, 61]
[51, 62]
[66, 68]
[65, 72]
[62, 73]
[72, 76]
[76, 78]
[67, 79]
[80, 84]
[68, 85]
[79, 88]
[83, 90]
[88, 94]
[84, 97]
[95, 102]
[96, 104]
[100, 106]
[105, 111]
[108, 113]
[113, 117]
[116, 121]
[120, 126]
[127, 129]
[125, 130]
[123, 132]
[124, 134]
[129, 136]
[131, 137]
[134, 144]
[147, 152]
[150, 155]
[152, 157]
[157, 159]
[148, 164]
[159, 165]
[165, 171]
[170, 176]
[173, 178]
[177, 181]
[179, 184]
[189, 196]
[200, 210]
[207, 212]
[214, 221]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[99, 103, 116]
[132, 138, 141]
[145, 158, 160]
[167, 175, 182]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[209, 213, 219]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[89, 91, 100]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 8]
[17, 21]
[18, 23]
[21, 29]
[22, 31]
[31, 38]
[39, 43]
[38, 50]
[48, 51]
[50, 55]
[53, 61]
[51, 62]
[66, 68]
[65, 72]
[62, 73]
[72, 76]
[76, 78]
[67, 79]
[80, 84]
[68, 85]
[79, 88]
[83, 90]
[88, 94]
[84, 97]
[95, 102]
[96, 104]
[100, 106]
[105, 111]
[108, 113]
[113, 117]
[116, 121]
[120, 126]
[127, 129]
[125, 130]
[123, 132]
[124, 134]
[129, 136]
[131, 137]
[134, 144]
[147, 152]
[150, 155]
[152, 157]
[157, 159]
[148, 164]
[159, 165]
[165, 171]
[170, 176]
[173, 178]
[177, 181]
[179, 184]
[189, 196]
[200, 210]
[207, 212]
[214, 221]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.155033111572266

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 8] cc => I, Pos: [4, 8] cc => I, Pos: [17, 21] cc => I, Pos: [17, 21] cc => I, Pos: [18, 23] cc => I, Pos: [18, 23] cc => I, Pos: [21, 29] cc => I, Pos: [21, 29] cc => I, Pos: [22, 31] cc => I, Pos: [22, 31] cc => I, Pos: [31, 38] cc => I, Pos: [31, 38] cc => I, Pos: [38, 50] cc => I, Pos: [38, 50] cc => I, Pos: [39, 43] cc => I, Pos: [39, 43] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [50, 55] cc => I, Pos: [50, 55] cc => I, Pos: [51, 62] cc => I, Pos: [51, 62] cc => I, Pos: [53, 61] cc => I, Pos: [53, 61] cc => I, Pos: [62, 73] cc => I, Pos: [62, 73] cc => I, Pos: [65, 72] cc => I, Pos: [65, 72] cc => I, Pos: [66, 68] cc => I, Pos: [66, 68] cc => I, Pos: [67, 79] cc => I, Pos: [67, 79] cc => I, Pos: [68, 85] cc => I, Pos: [68, 85] cc => I, Pos: [72, 76] cc => I, Pos: [72, 76] cc => I, Pos: [76, 78] cc => I, Pos: [76, 78] cc => I, Pos: [79, 88] cc => I, Pos: [79, 88] cc => I, Pos: [80, 84] cc => I, Pos: [80, 84] cc => I, Pos: [83, 90] cc => I, Pos: [83, 90] cc => I, Pos: [84, 97] cc => I, Pos: [84, 97] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 91, 100] ccc => cc, Pos: [95, 102] cc => I, Pos: [95, 102] cc => I, Pos: [96, 104] cc => I, Pos: [96, 104] cc => I, Pos: [99, 103, 116] ccc => cc, Pos: [100, 106] cc => I, Pos: [100, 106] cc => I, Pos: [105, 111] cc => I, Pos: [105, 111] cc => I, Pos: [108, 113] cc => I, Pos: [108, 113] cc => I, Pos: [113, 117] cc => I, Pos: [113, 117] cc => I, Pos: [116, 121] cc => I, Pos: [116, 121] cc => I, Pos: [120, 126] cc => I, Pos: [120, 126] cc => I, Pos: [123, 132] cc => I, Pos: [123, 132] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [125, 130] cc => I, Pos: [125, 130] cc => I, Pos: [127, 129] cc => I, Pos: [127, 129] cc => I, Pos: [129, 136] cc => I, Pos: [129, 136] cc => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [132, 138, 141] ccc => cc, Pos: [134, 144] cc => I, Pos: [134, 144] cc => I, Pos: [145, 158, 160] ccc => cc, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [150, 155] cc => I, Pos: [150, 155] cc => I, Pos: [152, 157] cc => I, Pos: [152, 157] cc => I, Pos: [157, 159] cc => I, Pos: [157, 159] cc => I, Pos: [159, 165] cc => I, Pos: [159, 165] cc => I, Pos: [165, 171] cc => I, Pos: [165, 171] cc => I, Pos: [167, 175, 182] ccc => cc, Pos: [170, 176] cc => I, Pos: [170, 176] cc => I, Pos: [173, 178] cc => I, Pos: [173, 178] cc => I, Pos: [177, 181] cc => I, Pos: [177, 181] cc => I, Pos: [179, 184] cc => I, Pos: [179, 184] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [200, 210] cc => I, Pos: [200, 210] cc => I, Pos: [207, 212] cc => I, Pos: [207, 212] cc => I, Pos: [209, 213, 219] ccc => cc, Pos: [214, 221] cc => I, Pos: [214, 221] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 8] cc => I,
 Pos: [17, 21] cc => I,
 Pos: [18, 23] cc => I,
 Pos: [31, 38] cc => I,
 Pos: [39, 43] cc => I,
 Pos: [51, 62] cc => I,
 Pos: [50, 55] cc => I,
 Pos: [53, 61] cc => I,
 Pos: [65, 72] cc => I,
 Pos: [68, 85] cc => I,
 Pos: [67, 79] cc => I,
 Pos: [76, 78] cc => I,
 Pos: [84, 97] cc => I,
 Pos: [83, 90] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [100, 106] cc => I,
 Pos: [95, 102] cc => I,
 Pos: [96, 104] cc => I,
 Pos: [116, 121] cc => I,
 Pos: [105, 111] cc => I,
 Pos: [108, 113] cc => I,
 Pos: [120, 126] cc => I,
 Pos: [123, 132] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [125, 130] cc => I,
 Pos: [129, 136] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [145, 158, 160] ccc => cc,
 Pos: [147, 152] cc => I,
 Pos: [148, 164] cc => I,
 Pos: [150, 155] cc => I,
 Pos: [159, 165] cc => I,
 Pos: [167, 175, 182] ccc => cc,
 Pos: [170, 176] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 181] cc => I,
 Pos: [179, 184] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [207, 212] cc => I,
 Pos: [209, 213, 219] ccc => cc,
 Pos: [214, 221] cc => I]
Change: 42, Saving: 162

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 8] cc => I
Apply:  Pos: [17, 21] cc => I
Apply:  Pos: [18, 23] cc => I
Apply:  Pos: [31, 38] cc => I
Apply:  Pos: [39, 43] cc => I
Apply:  Pos: [51, 62] cc => I
Apply:  Pos: [50, 55] cc => I
Apply:  Pos: [53, 61] cc => I
Apply:  Pos: [65, 72] cc => I
Apply:  Pos: [68, 85] cc => I
Apply:  Pos: [67, 79] cc => I
Apply:  Pos: [76, 78] cc => I
Apply:  Pos: [84, 97] cc => I
Apply:  Pos: [83, 90] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [100, 106] cc => I
Apply:  Pos: [95, 102] cc => I
Apply:  Pos: [96, 104] cc => I
Apply:  Pos: [116, 121] cc => I
Apply:  Pos: [105, 111] cc => I
Apply:  Pos: [108, 113] cc => I
Apply:  Pos: [120, 126] cc => I
Apply:  Pos: [123, 132] cc => I
Apply:  Pos: [124, 134] cc => I
Apply:  Pos: [125, 130] cc => I
Apply:  Pos: [129, 136] cc => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [145, 158, 160] ccc => cc
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [148, 164] cc => I
Apply:  Pos: [150, 155] cc => I
Apply:  Pos: [159, 165] cc => I
Apply:  Pos: [167, 175, 182] ccc => cc
Apply:  Pos: [170, 176] cc => I
Apply:  Pos: [173, 178] cc => I
Apply:  Pos: [177, 181] cc => I
Apply:  Pos: [179, 184] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [200, 210] cc => I
Apply:  Pos: [207, 212] cc => I
Apply:  Pos: [209, 213, 219] ccc => cc
Apply:  Pos: [214, 221] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [19, 15], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [8, 9], [12, 11], [16, 4], [18, 4], [3, 9], [12, 10], [19, 17], [5, 12], [16, 4], [10, 4], [14, 0], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [2, 8], [18, 4], [17, 6], [14, 19], [5, 12], [18, 16], [11, 19], [12, 11], [16, 7], [14, 0], [4, 17], [19, 6], [10, 4], [17, 3], [10, 3], [19, 15], [6, 8], [8, 9], [13, 18], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [1, 14], [2, 9], [10, 4], [12, 11], [4, 3], [5, 12], [11, 19], [17, 6], [1, 14], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 16], [12, 11], [3, 9], [14, 19], [10, 3], [2, 9], [4, 7], [1, 11], [18, 16], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [12, 13], [19, 15], [1, 11], [3, 9], [14, 19], [4, 7], [2, 9], [19, 17], [12, 13], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  4.155033111572266

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[22, 30]
[31, 35]
[38, 53]
[43, 62]
[56, 79]
[76, 84]
[98, 107]
[105, 113]
[113, 130]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[94, 106, 109]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[22, 30]
[31, 35]
[38, 53]
[43, 62]
[56, 79]
[76, 84]
[98, 107]
[105, 113]
[113, 130]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4063565731048584

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [22, 30] cc => I, Pos: [22, 30] cc => I, Pos: [31, 35] cc => I, Pos: [31, 35] cc => I, Pos: [38, 53] cc => I, Pos: [38, 53] cc => I, Pos: [43, 62] cc => I, Pos: [43, 62] cc => I, Pos: [56, 79] cc => I, Pos: [56, 79] cc => I, Pos: [76, 84] cc => I, Pos: [76, 84] cc => I, Pos: [94, 106, 109] ccc => cc, Pos: [98, 107] cc => I, Pos: [98, 107] cc => I, Pos: [105, 113] cc => I, Pos: [105, 113] cc => I, Pos: [113, 130] cc => I, Pos: [113, 130] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 30] cc => I,
 Pos: [31, 35] cc => I,
 Pos: [38, 53] cc => I,
 Pos: [43, 62] cc => I,
 Pos: [56, 79] cc => I,
 Pos: [76, 84] cc => I,
 Pos: [94, 106, 109] ccc => cc,
 Pos: [98, 107] cc => I,
 Pos: [113, 130] cc => I]
Change: 9, Saving: 34

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 30] cc => I
Apply:  Pos: [31, 35] cc => I
Apply:  Pos: [38, 53] cc => I
Apply:  Pos: [43, 62] cc => I
Apply:  Pos: [56, 79] cc => I
Apply:  Pos: [76, 84] cc => I
Apply:  Pos: [94, 106, 109] ccc => cc
Apply:  Pos: [98, 107] cc => I
Apply:  Pos: [113, 130] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [19, 15], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [18, 4], [16, 4], [12, 10], [19, 17], [10, 4], [16, 4], [14, 0], [4, 17], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [2, 8], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [16, 7], [14, 0], [4, 17], [19, 6], [10, 4], [17, 3], [19, 15], [6, 8], [8, 9], [13, 18], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [6, 8], [3, 8], [12, 10], [2, 9], [10, 4], [4, 3], [5, 12], [11, 19], [17, 6], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 16], [12, 11], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [18, 7], [16, 7], [12, 13], [19, 15], [3, 9], [4, 7], [2, 9], [19, 17], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [17, 3], [4, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.4063565731048584

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[76, 97]
[80, 104]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[76, 97]
[80, 104]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0776822566986084

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [76, 97] cc => I, Pos: [76, 97] cc => I, Pos: [80, 104] cc => I, Pos: [80, 104] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [76, 97] cc => I, Pos: [80, 104] cc => I]
Change: 2, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [76, 97] cc => I
Apply:  Pos: [80, 104] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [19, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [16, 4], [18, 4], [12, 10], [19, 17], [16, 4], [10, 4], [14, 0], [4, 17], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [2, 8], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [16, 7], [14, 0], [4, 17], [19, 6], [10, 4], [17, 3], [19, 15], [6, 8], [8, 9], [13, 18], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [2, 9], [10, 4], [4, 3], [5, 12], [11, 19], [17, 3], [15, 6], [17, 6], [5, 1], [16, 4], [7, 2], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [12, 13], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.0776822566986084

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.937382459640503

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [19, 15], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [18, 4], [16, 4], [12, 10], [19, 17], [10, 4], [16, 4], [14, 0], [4, 17], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [2, 8], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [16, 7], [14, 0], [4, 17], [19, 6], [10, 4], [17, 3], [19, 15], [6, 8], [8, 9], [13, 18], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [6, 8], [3, 8], [12, 10], [2, 9], [10, 4], [4, 3], [5, 12], [11, 19], [17, 3], [17, 6], [15, 6], [5, 1], [16, 4], [7, 2], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [18, 7], [16, 7], [12, 13], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [17, 3], [4, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  1.937382459640503

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [123] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 31 - (small)
 - circuit cycle: 246

Reduced: 
 - size: 102 (45.33%)
 - cycle: 204 (45.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09375596046447754

[17, 3], [19, 15], [18, 4], [11, 10], [8, 9], [16, 7], [10, 17], [14, 0], [8, 9], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [17, 3], [18, 7], [13, 11], [0, 15], [17, 3], [19, 15], [18, 7], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [17, 3], [13, 18], [19, 15], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [19, 15], [17, 6], [8, 9], [12, 11], [16, 4], [17, 6], [18, 4], [3, 9], [12, 10], [19, 17], [5, 12], [16, 4], [19, 15], [5, 12], [10, 4], [6, 8], [14, 0], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [6, 8], [5, 12], [1, 19], [0, 15], [3, 9], [2, 8], [5, 1], [2, 8], [18, 4], [17, 6], [14, 19], [3, 9], [5, 12], [18, 16], [11, 19], [3, 9], [12, 11], [3, 9], [5, 1], [16, 7], [14, 0], [4, 17], [11, 14], [16, 7], [2, 8], [19, 6], [10, 4], [5, 1], [17, 3], [11, 14], [10, 3], [19, 15], [6, 8], [5, 1], [14, 19], [0, 15], [16, 7], [8, 9], [13, 18], [10, 17], [4, 3], [14, 19], [18, 16], [0, 15], [4, 7], [10, 17], [2, 8], [1, 14], [13, 10], [19, 6], [4, 7], [3, 8], [1, 14], [6, 8], [12, 10], [13, 18], [1, 14], [2, 9], [10, 4], [17, 15], [13, 18], [12, 11], [5, 1], [7, 2], [11, 14], [17, 15], [4, 3], [5, 12], [4, 3], [11, 14], [18, 16], [5, 1], [11, 19], [7, 2], [17, 6], [4, 3], [18, 16], [1, 14], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 18], [12, 11], [1, 11], [17, 15], [3, 9], [5, 12], [14, 19], [1, 11], [10, 3], [2, 9], [5, 12], [4, 7], [1, 11], [18, 16], [1, 11], [13, 18], [6, 8], [10, 4], [3, 2], [17, 15], [1, 11], [16, 7], [18, 4], [12, 13], [19, 15], [2, 8], [1, 11], [3, 9], [17, 6], [14, 19], [4, 7], [2, 8], [13, 11], [17, 6], [0, 15], [2, 9], [13, 11], [18, 4], [19, 17], [0, 15], [12, 13], [17, 3], [7, 2], [18, 16], [13, 18], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [13, 18], [3, 8], [4, 17], [11, 10], [18, 7], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [2, 9], [14, 0], [1, 11], [18, 7], [15, 6], [2, 9], [5, 1], [13, 18], [0, 15], [14, 19], [16, 7], [5, 12], [1, 11], [4, 3], [13, 18], [17, 3], [1, 14], [16, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 8]
[17, 21]
[18, 23]
[21, 29]
[22, 31]
[31, 38]
[39, 43]
[38, 50]
[48, 51]
[50, 55]
[53, 61]
[51, 62]
[66, 68]
[65, 72]
[62, 73]
[72, 76]
[76, 78]
[67, 79]
[80, 84]
[68, 85]
[79, 88]
[83, 90]
[88, 94]
[84, 97]
[95, 102]
[96, 104]
[100, 106]
[105, 111]
[108, 113]
[113, 117]
[116, 121]
[120, 126]
[127, 129]
[125, 130]
[123, 132]
[124, 134]
[129, 136]
[131, 137]
[134, 144]
[147, 152]
[150, 155]
[152, 157]
[157, 159]
[148, 164]
[159, 165]
[165, 171]
[170, 176]
[173, 178]
[177, 181]
[179, 184]
[189, 196]
[200, 210]
[207, 212]
[214, 221]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[99, 103, 116]
[132, 138, 141]
[145, 158, 160]
[167, 175, 182]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[209, 213, 219]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[89, 91, 100]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 8]
[17, 21]
[18, 23]
[21, 29]
[22, 31]
[31, 38]
[39, 43]
[38, 50]
[48, 51]
[50, 55]
[53, 61]
[51, 62]
[66, 68]
[65, 72]
[62, 73]
[72, 76]
[76, 78]
[67, 79]
[80, 84]
[68, 85]
[79, 88]
[83, 90]
[88, 94]
[84, 97]
[95, 102]
[96, 104]
[100, 106]
[105, 111]
[108, 113]
[113, 117]
[116, 121]
[120, 126]
[127, 129]
[125, 130]
[123, 132]
[124, 134]
[129, 136]
[131, 137]
[134, 144]
[147, 152]
[150, 155]
[152, 157]
[157, 159]
[148, 164]
[159, 165]
[165, 171]
[170, 176]
[173, 178]
[177, 181]
[179, 184]
[189, 196]
[200, 210]
[207, 212]
[214, 221]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.2345192432403564

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 8] cc => I, Pos: [4, 8] cc => I, Pos: [17, 21] cc => I, Pos: [17, 21] cc => I, Pos: [18, 23] cc => I, Pos: [18, 23] cc => I, Pos: [21, 29] cc => I, Pos: [21, 29] cc => I, Pos: [22, 31] cc => I, Pos: [22, 31] cc => I, Pos: [31, 38] cc => I, Pos: [31, 38] cc => I, Pos: [38, 50] cc => I, Pos: [38, 50] cc => I, Pos: [39, 43] cc => I, Pos: [39, 43] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [50, 55] cc => I, Pos: [50, 55] cc => I, Pos: [51, 62] cc => I, Pos: [51, 62] cc => I, Pos: [53, 61] cc => I, Pos: [53, 61] cc => I, Pos: [62, 73] cc => I, Pos: [62, 73] cc => I, Pos: [65, 72] cc => I, Pos: [65, 72] cc => I, Pos: [66, 68] cc => I, Pos: [66, 68] cc => I, Pos: [67, 79] cc => I, Pos: [67, 79] cc => I, Pos: [68, 85] cc => I, Pos: [68, 85] cc => I, Pos: [72, 76] cc => I, Pos: [72, 76] cc => I, Pos: [76, 78] cc => I, Pos: [76, 78] cc => I, Pos: [79, 88] cc => I, Pos: [79, 88] cc => I, Pos: [80, 84] cc => I, Pos: [80, 84] cc => I, Pos: [83, 90] cc => I, Pos: [83, 90] cc => I, Pos: [84, 97] cc => I, Pos: [84, 97] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 91, 100] ccc => cc, Pos: [95, 102] cc => I, Pos: [95, 102] cc => I, Pos: [96, 104] cc => I, Pos: [96, 104] cc => I, Pos: [99, 103, 116] ccc => cc, Pos: [100, 106] cc => I, Pos: [100, 106] cc => I, Pos: [105, 111] cc => I, Pos: [105, 111] cc => I, Pos: [108, 113] cc => I, Pos: [108, 113] cc => I, Pos: [113, 117] cc => I, Pos: [113, 117] cc => I, Pos: [116, 121] cc => I, Pos: [116, 121] cc => I, Pos: [120, 126] cc => I, Pos: [120, 126] cc => I, Pos: [123, 132] cc => I, Pos: [123, 132] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [125, 130] cc => I, Pos: [125, 130] cc => I, Pos: [127, 129] cc => I, Pos: [127, 129] cc => I, Pos: [129, 136] cc => I, Pos: [129, 136] cc => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [132, 138, 141] ccc => cc, Pos: [134, 144] cc => I, Pos: [134, 144] cc => I, Pos: [145, 158, 160] ccc => cc, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [150, 155] cc => I, Pos: [150, 155] cc => I, Pos: [152, 157] cc => I, Pos: [152, 157] cc => I, Pos: [157, 159] cc => I, Pos: [157, 159] cc => I, Pos: [159, 165] cc => I, Pos: [159, 165] cc => I, Pos: [165, 171] cc => I, Pos: [165, 171] cc => I, Pos: [167, 175, 182] ccc => cc, Pos: [170, 176] cc => I, Pos: [170, 176] cc => I, Pos: [173, 178] cc => I, Pos: [173, 178] cc => I, Pos: [177, 181] cc => I, Pos: [177, 181] cc => I, Pos: [179, 184] cc => I, Pos: [179, 184] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [200, 210] cc => I, Pos: [200, 210] cc => I, Pos: [207, 212] cc => I, Pos: [207, 212] cc => I, Pos: [209, 213, 219] ccc => cc, Pos: [214, 221] cc => I, Pos: [214, 221] cc => I]

--------End Timer [Generate Plans]:  0.10936832427978516

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 8] cc => I,
 Pos: [17, 21] cc => I,
 Pos: [18, 23] cc => I,
 Pos: [22, 31] cc => I,
 Pos: [50, 55] cc => I,
 Pos: [39, 43] cc => I,
 Pos: [51, 62] cc => I,
 Pos: [53, 61] cc => I,
 Pos: [72, 76] cc => I,
 Pos: [68, 85] cc => I,
 Pos: [67, 79] cc => I,
 Pos: [84, 97] cc => I,
 Pos: [83, 90] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [100, 106] cc => I,
 Pos: [95, 102] cc => I,
 Pos: [96, 104] cc => I,
 Pos: [116, 121] cc => I,
 Pos: [105, 111] cc => I,
 Pos: [108, 113] cc => I,
 Pos: [120, 126] cc => I,
 Pos: [123, 132] cc => I,
 Pos: [134, 144] cc => I,
 Pos: [125, 130] cc => I,
 Pos: [127, 129] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [145, 158, 160] ccc => cc,
 Pos: [147, 152] cc => I,
 Pos: [148, 164] cc => I,
 Pos: [150, 155] cc => I,
 Pos: [159, 165] cc => I,
 Pos: [167, 175, 182] ccc => cc,
 Pos: [170, 176] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 181] cc => I,
 Pos: [179, 184] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [207, 212] cc => I,
 Pos: [209, 213, 219] ccc => cc,
 Pos: [214, 221] cc => I]
Change: 41, Saving: 41

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 8] cc => I
Apply:  Pos: [17, 21] cc => I
Apply:  Pos: [18, 23] cc => I
Apply:  Pos: [22, 31] cc => I
Apply:  Pos: [50, 55] cc => I
Apply:  Pos: [39, 43] cc => I
Apply:  Pos: [51, 62] cc => I
Apply:  Pos: [53, 61] cc => I
Apply:  Pos: [72, 76] cc => I
Apply:  Pos: [68, 85] cc => I
Apply:  Pos: [67, 79] cc => I
Apply:  Pos: [84, 97] cc => I
Apply:  Pos: [83, 90] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [100, 106] cc => I
Apply:  Pos: [95, 102] cc => I
Apply:  Pos: [96, 104] cc => I
Apply:  Pos: [116, 121] cc => I
Apply:  Pos: [105, 111] cc => I
Apply:  Pos: [108, 113] cc => I
Apply:  Pos: [120, 126] cc => I
Apply:  Pos: [123, 132] cc => I
Apply:  Pos: [134, 144] cc => I
Apply:  Pos: [125, 130] cc => I
Apply:  Pos: [127, 129] cc => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [145, 158, 160] ccc => cc
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [148, 164] cc => I
Apply:  Pos: [150, 155] cc => I
Apply:  Pos: [159, 165] cc => I
Apply:  Pos: [167, 175, 182] ccc => cc
Apply:  Pos: [170, 176] cc => I
Apply:  Pos: [173, 178] cc => I
Apply:  Pos: [177, 181] cc => I
Apply:  Pos: [179, 184] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [200, 210] cc => I
Apply:  Pos: [207, 212] cc => I
Apply:  Pos: [209, 213, 219] ccc => cc
Apply:  Pos: [214, 221] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [19, 15], [8, 9], [12, 11], [16, 4], [18, 4], [3, 9], [12, 10], [19, 17], [5, 12], [16, 4], [10, 4], [14, 0], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [3, 9], [2, 8], [18, 4], [17, 6], [14, 19], [5, 12], [18, 16], [11, 19], [12, 11], [3, 9], [16, 7], [14, 0], [4, 17], [19, 6], [10, 4], [17, 3], [10, 3], [19, 15], [6, 8], [8, 9], [13, 18], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [1, 14], [2, 9], [10, 4], [12, 11], [7, 2], [5, 12], [11, 19], [17, 6], [4, 3], [1, 14], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [13, 16], [12, 11], [3, 9], [14, 19], [10, 3], [2, 9], [4, 7], [1, 11], [18, 16], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [12, 13], [19, 15], [1, 11], [3, 9], [14, 19], [4, 7], [2, 9], [19, 17], [12, 13], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  4.343887567520142

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 54]
[49, 58]
[57, 81]
[78, 87]
[100, 109]
[107, 115]
[115, 132]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[96, 108, 111]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 54]
[49, 58]
[57, 81]
[78, 87]
[100, 109]
[107, 115]
[115, 132]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.469046115875244

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [38, 54] cc => I, Pos: [38, 54] cc => I, Pos: [49, 58] cc => I, Pos: [49, 58] cc => I, Pos: [57, 81] cc => I, Pos: [57, 81] cc => I, Pos: [78, 87] cc => I, Pos: [78, 87] cc => I, Pos: [96, 108, 111] ccc => cc, Pos: [100, 109] cc => I, Pos: [100, 109] cc => I, Pos: [107, 115] cc => I, Pos: [107, 115] cc => I, Pos: [115, 132] cc => I, Pos: [115, 132] cc => I]

--------End Timer [Generate Plans]:  0.015624761581420898

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [38, 54] cc => I,
 Pos: [49, 58] cc => I,
 Pos: [57, 81] cc => I,
 Pos: [78, 87] cc => I,
 Pos: [96, 108, 111] ccc => cc,
 Pos: [100, 109] cc => I,
 Pos: [115, 132] cc => I]
Change: 7, Saving: 7

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [38, 54] cc => I
Apply:  Pos: [49, 58] cc => I
Apply:  Pos: [57, 81] cc => I
Apply:  Pos: [78, 87] cc => I
Apply:  Pos: [96, 108, 111] ccc => cc
Apply:  Pos: [100, 109] cc => I
Apply:  Pos: [115, 132] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [19, 15], [8, 9], [12, 11], [18, 4], [16, 4], [3, 9], [12, 10], [19, 17], [10, 4], [16, 4], [14, 0], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [2, 8], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [16, 7], [14, 0], [4, 17], [19, 6], [10, 4], [10, 3], [17, 3], [19, 15], [6, 8], [8, 9], [13, 18], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [6, 8], [3, 8], [12, 10], [2, 9], [10, 4], [7, 2], [5, 12], [11, 19], [17, 6], [4, 3], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [13, 16], [12, 11], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [18, 7], [16, 7], [12, 13], [19, 15], [3, 9], [4, 7], [2, 9], [19, 17], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [17, 3], [4, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.484670877456665

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[42, 58]
[83, 103]
[86, 110]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[42, 58]
[83, 103]
[86, 110]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.1878480911254883

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [42, 58] cc => I, Pos: [42, 58] cc => I, Pos: [83, 103] cc => I, Pos: [83, 103] cc => I, Pos: [86, 110] cc => I, Pos: [86, 110] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [42, 58] cc => I, Pos: [83, 103] cc => I, Pos: [86, 110] cc => I]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [42, 58] cc => I
Apply:  Pos: [83, 103] cc => I
Apply:  Pos: [86, 110] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [19, 15], [8, 9], [12, 11], [16, 4], [18, 4], [3, 9], [12, 10], [19, 17], [16, 4], [10, 4], [14, 0], [4, 17], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [2, 8], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [16, 7], [14, 0], [4, 17], [19, 6], [10, 4], [17, 3], [19, 15], [6, 8], [8, 9], [13, 18], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [2, 9], [10, 4], [7, 2], [5, 12], [11, 19], [17, 6], [17, 3], [4, 3], [15, 6], [5, 1], [16, 4], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [12, 13], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.1878480911254883

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0472047328948975

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [19, 15], [8, 9], [12, 11], [18, 4], [16, 4], [3, 9], [12, 10], [19, 17], [10, 4], [16, 4], [14, 0], [4, 17], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [2, 8], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [16, 7], [14, 0], [4, 17], [19, 6], [10, 4], [17, 3], [19, 15], [6, 8], [8, 9], [13, 18], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [6, 8], [3, 8], [12, 10], [2, 9], [10, 4], [7, 2], [5, 12], [11, 19], [17, 3], [17, 6], [4, 3], [15, 6], [5, 1], [16, 4], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [18, 7], [16, 7], [12, 13], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [17, 3], [4, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.0472047328948975

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [127] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 254

Reduced: 
 - size: 98 (43.56%)
 - depth: 13 (28.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374356269836426

[17, 3], [19, 15], [18, 4], [11, 10], [8, 9], [16, 7], [10, 17], [14, 0], [8, 9], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [17, 3], [18, 7], [13, 11], [0, 15], [17, 3], [19, 15], [18, 7], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [17, 3], [13, 18], [19, 15], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [19, 15], [17, 6], [8, 9], [12, 11], [16, 4], [17, 6], [18, 4], [3, 9], [12, 10], [19, 17], [5, 12], [16, 4], [19, 15], [5, 12], [10, 4], [6, 8], [14, 0], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [6, 8], [5, 12], [1, 19], [0, 15], [3, 9], [2, 8], [5, 1], [2, 8], [18, 4], [17, 6], [14, 19], [3, 9], [5, 12], [18, 16], [11, 19], [3, 9], [12, 11], [3, 9], [5, 1], [16, 7], [14, 0], [4, 17], [11, 14], [16, 7], [2, 8], [19, 6], [10, 4], [5, 1], [17, 3], [11, 14], [10, 3], [19, 15], [6, 8], [5, 1], [14, 19], [0, 15], [16, 7], [8, 9], [13, 18], [10, 17], [4, 3], [14, 19], [18, 16], [0, 15], [4, 7], [10, 17], [2, 8], [1, 14], [13, 10], [19, 6], [4, 7], [3, 8], [1, 14], [6, 8], [12, 10], [13, 18], [1, 14], [2, 9], [10, 4], [17, 15], [13, 18], [12, 11], [5, 1], [7, 2], [11, 14], [17, 15], [4, 3], [5, 12], [4, 3], [11, 14], [18, 16], [5, 1], [11, 19], [7, 2], [17, 6], [4, 3], [18, 16], [1, 14], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 18], [12, 11], [1, 11], [17, 15], [3, 9], [5, 12], [14, 19], [1, 11], [10, 3], [2, 9], [5, 12], [4, 7], [1, 11], [18, 16], [1, 11], [13, 18], [6, 8], [10, 4], [3, 2], [17, 15], [1, 11], [16, 7], [18, 4], [12, 13], [19, 15], [2, 8], [1, 11], [3, 9], [17, 6], [14, 19], [4, 7], [2, 8], [13, 11], [17, 6], [0, 15], [2, 9], [13, 11], [18, 4], [19, 17], [0, 15], [12, 13], [17, 3], [7, 2], [18, 16], [13, 18], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [13, 18], [3, 8], [4, 17], [11, 10], [18, 7], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [2, 9], [14, 0], [1, 11], [18, 7], [15, 6], [2, 9], [5, 1], [13, 18], [0, 15], [14, 19], [16, 7], [5, 12], [1, 11], [4, 3], [13, 18], [17, 3], [1, 14], [16, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 8]
[17, 21]
[18, 23]
[21, 29]
[22, 31]
[31, 38]
[39, 43]
[38, 50]
[48, 51]
[50, 55]
[53, 61]
[51, 62]
[66, 68]
[65, 72]
[62, 73]
[72, 76]
[76, 78]
[67, 79]
[80, 84]
[68, 85]
[79, 88]
[83, 90]
[88, 94]
[84, 97]
[95, 102]
[96, 104]
[100, 106]
[105, 111]
[108, 113]
[113, 117]
[116, 121]
[120, 126]
[127, 129]
[125, 130]
[123, 132]
[124, 134]
[129, 136]
[131, 137]
[134, 144]
[147, 152]
[150, 155]
[152, 157]
[157, 159]
[148, 164]
[159, 165]
[165, 171]
[170, 176]
[173, 178]
[177, 181]
[179, 184]
[189, 196]
[200, 210]
[207, 212]
[214, 221]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[99, 103, 116]
[132, 138, 141]
[145, 158, 160]
[167, 175, 182]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[209, 213, 219]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[89, 91, 100]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 8]
[17, 21]
[18, 23]
[21, 29]
[22, 31]
[31, 38]
[39, 43]
[38, 50]
[48, 51]
[50, 55]
[53, 61]
[51, 62]
[66, 68]
[65, 72]
[62, 73]
[72, 76]
[76, 78]
[67, 79]
[80, 84]
[68, 85]
[79, 88]
[83, 90]
[88, 94]
[84, 97]
[95, 102]
[96, 104]
[100, 106]
[105, 111]
[108, 113]
[113, 117]
[116, 121]
[120, 126]
[127, 129]
[125, 130]
[123, 132]
[124, 134]
[129, 136]
[131, 137]
[134, 144]
[147, 152]
[150, 155]
[152, 157]
[157, 159]
[148, 164]
[159, 165]
[165, 171]
[170, 176]
[173, 178]
[177, 181]
[179, 184]
[189, 196]
[200, 210]
[207, 212]
[214, 221]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.2030792236328125

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 8] cc => I, Pos: [4, 8] cc => I, Pos: [17, 21] cc => I, Pos: [17, 21] cc => I, Pos: [18, 23] cc => I, Pos: [18, 23] cc => I, Pos: [21, 29] cc => I, Pos: [21, 29] cc => I, Pos: [22, 31] cc => I, Pos: [22, 31] cc => I, Pos: [31, 38] cc => I, Pos: [31, 38] cc => I, Pos: [38, 50] cc => I, Pos: [38, 50] cc => I, Pos: [39, 43] cc => I, Pos: [39, 43] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [50, 55] cc => I, Pos: [50, 55] cc => I, Pos: [51, 62] cc => I, Pos: [51, 62] cc => I, Pos: [53, 61] cc => I, Pos: [53, 61] cc => I, Pos: [62, 73] cc => I, Pos: [62, 73] cc => I, Pos: [65, 72] cc => I, Pos: [65, 72] cc => I, Pos: [66, 68] cc => I, Pos: [66, 68] cc => I, Pos: [67, 79] cc => I, Pos: [67, 79] cc => I, Pos: [68, 85] cc => I, Pos: [68, 85] cc => I, Pos: [72, 76] cc => I, Pos: [72, 76] cc => I, Pos: [76, 78] cc => I, Pos: [76, 78] cc => I, Pos: [79, 88] cc => I, Pos: [79, 88] cc => I, Pos: [80, 84] cc => I, Pos: [80, 84] cc => I, Pos: [83, 90] cc => I, Pos: [83, 90] cc => I, Pos: [84, 97] cc => I, Pos: [84, 97] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 91, 100] ccc => cc, Pos: [95, 102] cc => I, Pos: [95, 102] cc => I, Pos: [96, 104] cc => I, Pos: [96, 104] cc => I, Pos: [99, 103, 116] ccc => cc, Pos: [100, 106] cc => I, Pos: [100, 106] cc => I, Pos: [105, 111] cc => I, Pos: [105, 111] cc => I, Pos: [108, 113] cc => I, Pos: [108, 113] cc => I, Pos: [113, 117] cc => I, Pos: [113, 117] cc => I, Pos: [116, 121] cc => I, Pos: [116, 121] cc => I, Pos: [120, 126] cc => I, Pos: [120, 126] cc => I, Pos: [123, 132] cc => I, Pos: [123, 132] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [125, 130] cc => I, Pos: [125, 130] cc => I, Pos: [127, 129] cc => I, Pos: [127, 129] cc => I, Pos: [129, 136] cc => I, Pos: [129, 136] cc => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [132, 138, 141] ccc => cc, Pos: [134, 144] cc => I, Pos: [134, 144] cc => I, Pos: [145, 158, 160] ccc => cc, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [150, 155] cc => I, Pos: [150, 155] cc => I, Pos: [152, 157] cc => I, Pos: [152, 157] cc => I, Pos: [157, 159] cc => I, Pos: [157, 159] cc => I, Pos: [159, 165] cc => I, Pos: [159, 165] cc => I, Pos: [165, 171] cc => I, Pos: [165, 171] cc => I, Pos: [167, 175, 182] ccc => cc, Pos: [170, 176] cc => I, Pos: [170, 176] cc => I, Pos: [173, 178] cc => I, Pos: [173, 178] cc => I, Pos: [177, 181] cc => I, Pos: [177, 181] cc => I, Pos: [179, 184] cc => I, Pos: [179, 184] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [200, 210] cc => I, Pos: [200, 210] cc => I, Pos: [207, 212] cc => I, Pos: [207, 212] cc => I, Pos: [209, 213, 219] ccc => cc, Pos: [214, 221] cc => I, Pos: [214, 221] cc => I]

--------End Timer [Generate Plans]:  0.10936665534973145

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 8] cc => I,
 Pos: [17, 21] cc => I,
 Pos: [18, 23] cc => I,
 Pos: [31, 38] cc => I,
 Pos: [39, 43] cc => I,
 Pos: [51, 62] cc => I,
 Pos: [50, 55] cc => I,
 Pos: [53, 61] cc => I,
 Pos: [72, 76] cc => I,
 Pos: [66, 68] cc => I,
 Pos: [67, 79] cc => I,
 Pos: [84, 97] cc => I,
 Pos: [83, 90] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [100, 106] cc => I,
 Pos: [95, 102] cc => I,
 Pos: [96, 104] cc => I,
 Pos: [99, 103, 116] ccc => cc,
 Pos: [105, 111] cc => I,
 Pos: [113, 117] cc => I,
 Pos: [120, 126] cc => I,
 Pos: [123, 132] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [125, 130] cc => I,
 Pos: [129, 136] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [145, 158, 160] ccc => cc,
 Pos: [152, 157] cc => I,
 Pos: [148, 164] cc => I,
 Pos: [150, 155] cc => I,
 Pos: [165, 171] cc => I,
 Pos: [167, 175, 182] ccc => cc,
 Pos: [170, 176] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 181] cc => I,
 Pos: [179, 184] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [207, 212] cc => I,
 Pos: [209, 213, 219] ccc => cc,
 Pos: [214, 221] cc => I]
Change: 41, Saving: 41

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 8] cc => I
Apply:  Pos: [17, 21] cc => I
Apply:  Pos: [18, 23] cc => I
Apply:  Pos: [31, 38] cc => I
Apply:  Pos: [39, 43] cc => I
Apply:  Pos: [51, 62] cc => I
Apply:  Pos: [50, 55] cc => I
Apply:  Pos: [53, 61] cc => I
Apply:  Pos: [72, 76] cc => I
Apply:  Pos: [66, 68] cc => I
Apply:  Pos: [67, 79] cc => I
Apply:  Pos: [84, 97] cc => I
Apply:  Pos: [83, 90] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [100, 106] cc => I
Apply:  Pos: [95, 102] cc => I
Apply:  Pos: [96, 104] cc => I
Apply:  Pos: [99, 103, 116] ccc => cc
Apply:  Pos: [105, 111] cc => I
Apply:  Pos: [113, 117] cc => I
Apply:  Pos: [120, 126] cc => I
Apply:  Pos: [123, 132] cc => I
Apply:  Pos: [124, 134] cc => I
Apply:  Pos: [125, 130] cc => I
Apply:  Pos: [129, 136] cc => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [145, 158, 160] ccc => cc
Apply:  Pos: [152, 157] cc => I
Apply:  Pos: [148, 164] cc => I
Apply:  Pos: [150, 155] cc => I
Apply:  Pos: [165, 171] cc => I
Apply:  Pos: [167, 175, 182] ccc => cc
Apply:  Pos: [170, 176] cc => I
Apply:  Pos: [173, 178] cc => I
Apply:  Pos: [177, 181] cc => I
Apply:  Pos: [179, 184] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [200, 210] cc => I
Apply:  Pos: [207, 212] cc => I
Apply:  Pos: [209, 213, 219] ccc => cc
Apply:  Pos: [214, 221] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [19, 15], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [8, 9], [12, 11], [16, 4], [18, 4], [3, 9], [12, 10], [19, 17], [5, 12], [16, 4], [10, 4], [14, 0], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [3, 9], [18, 4], [17, 6], [14, 19], [5, 12], [18, 16], [11, 19], [12, 11], [3, 9], [16, 7], [14, 0], [4, 17], [2, 8], [19, 6], [10, 4], [17, 3], [10, 3], [19, 15], [6, 8], [8, 9], [13, 16], [4, 3], [18, 16], [2, 8], [1, 14], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [2, 9], [10, 4], [13, 18], [12, 11], [4, 3], [5, 12], [11, 19], [17, 6], [1, 14], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 16], [12, 11], [1, 11], [3, 9], [14, 19], [10, 3], [2, 9], [4, 7], [18, 16], [1, 11], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [12, 13], [19, 15], [3, 9], [14, 19], [4, 7], [2, 9], [19, 17], [12, 13], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  4.312445878982544

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[22, 30]
[31, 35]
[38, 53]
[49, 57]
[56, 82]
[73, 87]
[109, 116]
[116, 133]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[98, 110, 112]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[22, 30]
[31, 35]
[38, 53]
[49, 57]
[56, 82]
[73, 87]
[109, 116]
[116, 133]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.484365224838257

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [22, 30] cc => I, Pos: [22, 30] cc => I, Pos: [31, 35] cc => I, Pos: [31, 35] cc => I, Pos: [38, 53] cc => I, Pos: [38, 53] cc => I, Pos: [49, 57] cc => I, Pos: [49, 57] cc => I, Pos: [56, 82] cc => I, Pos: [56, 82] cc => I, Pos: [73, 87] cc => I, Pos: [73, 87] cc => I, Pos: [98, 110, 112] ccc => cc, Pos: [109, 116] cc => I, Pos: [109, 116] cc => I, Pos: [116, 133] cc => I, Pos: [116, 133] cc => I]

--------End Timer [Generate Plans]:  0.01563858985900879

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 30] cc => I,
 Pos: [31, 35] cc => I,
 Pos: [38, 53] cc => I,
 Pos: [49, 57] cc => I,
 Pos: [56, 82] cc => I,
 Pos: [73, 87] cc => I,
 Pos: [98, 110, 112] ccc => cc,
 Pos: [109, 116] cc => I]
Change: 8, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 30] cc => I
Apply:  Pos: [31, 35] cc => I
Apply:  Pos: [38, 53] cc => I
Apply:  Pos: [49, 57] cc => I
Apply:  Pos: [56, 82] cc => I
Apply:  Pos: [73, 87] cc => I
Apply:  Pos: [98, 110, 112] ccc => cc
Apply:  Pos: [109, 116] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [19, 15], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [18, 4], [16, 4], [12, 10], [19, 17], [10, 4], [16, 4], [14, 0], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [16, 7], [14, 0], [4, 17], [2, 8], [19, 6], [10, 4], [10, 3], [17, 3], [19, 15], [6, 8], [8, 9], [13, 16], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [6, 8], [3, 8], [12, 10], [2, 9], [10, 4], [13, 18], [4, 3], [5, 12], [11, 19], [17, 6], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 16], [1, 11], [12, 11], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [1, 11], [6, 8], [10, 4], [3, 2], [18, 7], [16, 7], [19, 15], [3, 9], [4, 7], [2, 9], [19, 17], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [17, 3], [4, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.5000038146972656

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 54]
[84, 91]
[79, 101]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 54]
[84, 91]
[79, 101]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.1406564712524414

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [38, 54] cc => I, Pos: [38, 54] cc => I, Pos: [79, 101] cc => I, Pos: [79, 101] cc => I, Pos: [84, 91] cc => I, Pos: [84, 91] cc => I]

--------End Timer [Generate Plans]:  0.015638113021850586

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [38, 54] cc => I, Pos: [79, 101] cc => I, Pos: [84, 91] cc => I]
Change: 3, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [38, 54] cc => I
Apply:  Pos: [79, 101] cc => I
Apply:  Pos: [84, 91] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [19, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [16, 4], [18, 4], [12, 10], [19, 17], [16, 4], [10, 4], [14, 0], [4, 17], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [16, 7], [14, 0], [4, 17], [2, 8], [19, 6], [10, 4], [17, 3], [19, 15], [6, 8], [8, 9], [13, 16], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [2, 9], [10, 4], [13, 18], [4, 3], [5, 12], [11, 19], [17, 3], [15, 6], [17, 6], [5, 1], [16, 4], [7, 2], [13, 16], [12, 11], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.156294584274292

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[80, 102]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[80, 102]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0147950649261475

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [80, 102] cc => I, Pos: [80, 102] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [80, 102] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [80, 102] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [19, 15], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [18, 4], [16, 4], [12, 10], [19, 17], [10, 4], [16, 4], [14, 0], [4, 17], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [16, 7], [14, 0], [4, 17], [2, 8], [19, 6], [10, 4], [17, 3], [19, 15], [6, 8], [8, 9], [13, 16], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [6, 8], [3, 8], [12, 10], [2, 9], [10, 4], [13, 18], [4, 3], [5, 12], [11, 19], [17, 3], [17, 6], [15, 6], [5, 1], [16, 4], [7, 2], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [18, 7], [16, 7], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [17, 3], [4, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.0147950649261475

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9687199592590332

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [19, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [16, 4], [18, 4], [12, 10], [19, 17], [16, 4], [10, 4], [14, 0], [4, 17], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [16, 7], [14, 0], [4, 17], [2, 8], [19, 6], [10, 4], [17, 3], [19, 15], [6, 8], [8, 9], [13, 16], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [2, 9], [10, 4], [13, 18], [4, 3], [5, 12], [11, 19], [17, 6], [17, 3], [15, 6], [5, 1], [16, 4], [7, 2], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  1.9687199592590332

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [124] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 31 - (small)
 - circuit cycle: 248

Reduced: 
 - size: 101 (44.89%)
 - depth: 14 (31.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07783746719360352

[17, 3], [19, 15], [18, 4], [11, 10], [8, 9], [16, 7], [10, 17], [14, 0], [8, 9], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [17, 3], [18, 7], [13, 11], [0, 15], [17, 3], [19, 15], [18, 7], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [17, 3], [13, 18], [19, 15], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [19, 15], [17, 6], [8, 9], [12, 11], [16, 4], [17, 6], [18, 4], [3, 9], [12, 10], [19, 17], [5, 12], [16, 4], [19, 15], [5, 12], [10, 4], [6, 8], [14, 0], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [6, 8], [5, 12], [1, 19], [0, 15], [3, 9], [2, 8], [5, 1], [2, 8], [18, 4], [17, 6], [14, 19], [3, 9], [5, 12], [18, 16], [11, 19], [3, 9], [12, 11], [3, 9], [5, 1], [16, 7], [14, 0], [4, 17], [11, 14], [16, 7], [2, 8], [19, 6], [10, 4], [5, 1], [17, 3], [11, 14], [10, 3], [19, 15], [6, 8], [5, 1], [14, 19], [0, 15], [16, 7], [8, 9], [13, 18], [10, 17], [4, 3], [14, 19], [18, 16], [0, 15], [4, 7], [10, 17], [2, 8], [1, 14], [13, 10], [19, 6], [4, 7], [3, 8], [1, 14], [6, 8], [12, 10], [13, 18], [1, 14], [2, 9], [10, 4], [17, 15], [13, 18], [12, 11], [5, 1], [7, 2], [11, 14], [17, 15], [4, 3], [5, 12], [4, 3], [11, 14], [18, 16], [5, 1], [11, 19], [7, 2], [17, 6], [4, 3], [18, 16], [1, 14], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 18], [12, 11], [1, 11], [17, 15], [3, 9], [5, 12], [14, 19], [1, 11], [10, 3], [2, 9], [5, 12], [4, 7], [1, 11], [18, 16], [1, 11], [13, 18], [6, 8], [10, 4], [3, 2], [17, 15], [1, 11], [16, 7], [18, 4], [12, 13], [19, 15], [2, 8], [1, 11], [3, 9], [17, 6], [14, 19], [4, 7], [2, 8], [13, 11], [17, 6], [0, 15], [2, 9], [13, 11], [18, 4], [19, 17], [0, 15], [12, 13], [17, 3], [7, 2], [18, 16], [13, 18], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [13, 18], [3, 8], [4, 17], [11, 10], [18, 7], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [2, 9], [14, 0], [1, 11], [18, 7], [15, 6], [2, 9], [5, 1], [13, 18], [0, 15], [14, 19], [16, 7], [5, 12], [1, 11], [4, 3], [13, 18], [17, 3], [1, 14], [16, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 8]
[17, 21]
[18, 23]
[21, 29]
[22, 31]
[31, 38]
[39, 43]
[38, 50]
[48, 51]
[50, 55]
[53, 61]
[51, 62]
[66, 68]
[65, 72]
[62, 73]
[72, 76]
[76, 78]
[67, 79]
[80, 84]
[68, 85]
[79, 88]
[83, 90]
[88, 94]
[84, 97]
[95, 102]
[96, 104]
[100, 106]
[105, 111]
[108, 113]
[113, 117]
[116, 121]
[120, 126]
[127, 129]
[125, 130]
[123, 132]
[124, 134]
[129, 136]
[131, 137]
[134, 144]
[147, 152]
[150, 155]
[152, 157]
[157, 159]
[148, 164]
[159, 165]
[165, 171]
[170, 176]
[173, 178]
[177, 181]
[179, 184]
[189, 196]
[200, 210]
[207, 212]
[214, 221]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[99, 103, 116]
[132, 138, 141]
[145, 158, 160]
[167, 175, 182]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[209, 213, 219]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[89, 91, 100]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 8]
[17, 21]
[18, 23]
[21, 29]
[22, 31]
[31, 38]
[39, 43]
[38, 50]
[48, 51]
[50, 55]
[53, 61]
[51, 62]
[66, 68]
[65, 72]
[62, 73]
[72, 76]
[76, 78]
[67, 79]
[80, 84]
[68, 85]
[79, 88]
[83, 90]
[88, 94]
[84, 97]
[95, 102]
[96, 104]
[100, 106]
[105, 111]
[108, 113]
[113, 117]
[116, 121]
[120, 126]
[127, 129]
[125, 130]
[123, 132]
[124, 134]
[129, 136]
[131, 137]
[134, 144]
[147, 152]
[150, 155]
[152, 157]
[157, 159]
[148, 164]
[159, 165]
[165, 171]
[170, 176]
[173, 178]
[177, 181]
[179, 184]
[189, 196]
[200, 210]
[207, 212]
[214, 221]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.187401056289673

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 8] cc => I, Pos: [4, 8] cc => I, Pos: [17, 21] cc => I, Pos: [17, 21] cc => I, Pos: [18, 23] cc => I, Pos: [18, 23] cc => I, Pos: [21, 29] cc => I, Pos: [21, 29] cc => I, Pos: [22, 31] cc => I, Pos: [22, 31] cc => I, Pos: [31, 38] cc => I, Pos: [31, 38] cc => I, Pos: [38, 50] cc => I, Pos: [38, 50] cc => I, Pos: [39, 43] cc => I, Pos: [39, 43] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [50, 55] cc => I, Pos: [50, 55] cc => I, Pos: [51, 62] cc => I, Pos: [51, 62] cc => I, Pos: [53, 61] cc => I, Pos: [53, 61] cc => I, Pos: [62, 73] cc => I, Pos: [62, 73] cc => I, Pos: [65, 72] cc => I, Pos: [65, 72] cc => I, Pos: [66, 68] cc => I, Pos: [66, 68] cc => I, Pos: [67, 79] cc => I, Pos: [67, 79] cc => I, Pos: [68, 85] cc => I, Pos: [68, 85] cc => I, Pos: [72, 76] cc => I, Pos: [72, 76] cc => I, Pos: [76, 78] cc => I, Pos: [76, 78] cc => I, Pos: [79, 88] cc => I, Pos: [79, 88] cc => I, Pos: [80, 84] cc => I, Pos: [80, 84] cc => I, Pos: [83, 90] cc => I, Pos: [83, 90] cc => I, Pos: [84, 97] cc => I, Pos: [84, 97] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 91, 100] ccc => cc, Pos: [95, 102] cc => I, Pos: [95, 102] cc => I, Pos: [96, 104] cc => I, Pos: [96, 104] cc => I, Pos: [99, 103, 116] ccc => cc, Pos: [100, 106] cc => I, Pos: [100, 106] cc => I, Pos: [105, 111] cc => I, Pos: [105, 111] cc => I, Pos: [108, 113] cc => I, Pos: [108, 113] cc => I, Pos: [113, 117] cc => I, Pos: [113, 117] cc => I, Pos: [116, 121] cc => I, Pos: [116, 121] cc => I, Pos: [120, 126] cc => I, Pos: [120, 126] cc => I, Pos: [123, 132] cc => I, Pos: [123, 132] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [125, 130] cc => I, Pos: [125, 130] cc => I, Pos: [127, 129] cc => I, Pos: [127, 129] cc => I, Pos: [129, 136] cc => I, Pos: [129, 136] cc => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [132, 138, 141] ccc => cc, Pos: [134, 144] cc => I, Pos: [134, 144] cc => I, Pos: [145, 158, 160] ccc => cc, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [150, 155] cc => I, Pos: [150, 155] cc => I, Pos: [152, 157] cc => I, Pos: [152, 157] cc => I, Pos: [157, 159] cc => I, Pos: [157, 159] cc => I, Pos: [159, 165] cc => I, Pos: [159, 165] cc => I, Pos: [165, 171] cc => I, Pos: [165, 171] cc => I, Pos: [167, 175, 182] ccc => cc, Pos: [170, 176] cc => I, Pos: [170, 176] cc => I, Pos: [173, 178] cc => I, Pos: [173, 178] cc => I, Pos: [177, 181] cc => I, Pos: [177, 181] cc => I, Pos: [179, 184] cc => I, Pos: [179, 184] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [200, 210] cc => I, Pos: [200, 210] cc => I, Pos: [207, 212] cc => I, Pos: [207, 212] cc => I, Pos: [209, 213, 219] ccc => cc, Pos: [214, 221] cc => I, Pos: [214, 221] cc => I]

--------End Timer [Generate Plans]:  0.1093909740447998

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 8] cc => I,
 Pos: [21, 29] cc => I,
 Pos: [18, 23] cc => I,
 Pos: [22, 31] cc => I,
 Pos: [38, 50] cc => I,
 Pos: [39, 43] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [53, 61] cc => I,
 Pos: [62, 73] cc => I,
 Pos: [65, 72] cc => I,
 Pos: [68, 85] cc => I,
 Pos: [67, 79] cc => I,
 Pos: [76, 78] cc => I,
 Pos: [84, 97] cc => I,
 Pos: [83, 90] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [100, 106] cc => I,
 Pos: [95, 102] cc => I,
 Pos: [96, 104] cc => I,
 Pos: [116, 121] cc => I,
 Pos: [105, 111] cc => I,
 Pos: [108, 113] cc => I,
 Pos: [120, 126] cc => I,
 Pos: [132, 138, 141] ccc => cc,
 Pos: [124, 134] cc => I,
 Pos: [125, 130] cc => I,
 Pos: [127, 129] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [145, 158, 160] ccc => cc,
 Pos: [147, 152] cc => I,
 Pos: [148, 164] cc => I,
 Pos: [150, 155] cc => I,
 Pos: [157, 159] cc => I,
 Pos: [165, 171] cc => I,
 Pos: [167, 175, 182] ccc => cc,
 Pos: [170, 176] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 181] cc => I,
 Pos: [179, 184] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [207, 212] cc => I,
 Pos: [209, 213, 219] ccc => cc,
 Pos: [214, 221] cc => I]
Change: 44, Saving: 44

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 8] cc => I
Apply:  Pos: [21, 29] cc => I
Apply:  Pos: [18, 23] cc => I
Apply:  Pos: [22, 31] cc => I
Apply:  Pos: [38, 50] cc => I
Apply:  Pos: [39, 43] cc => I
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [53, 61] cc => I
Apply:  Pos: [62, 73] cc => I
Apply:  Pos: [65, 72] cc => I
Apply:  Pos: [68, 85] cc => I
Apply:  Pos: [67, 79] cc => I
Apply:  Pos: [76, 78] cc => I
Apply:  Pos: [84, 97] cc => I
Apply:  Pos: [83, 90] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [100, 106] cc => I
Apply:  Pos: [95, 102] cc => I
Apply:  Pos: [96, 104] cc => I
Apply:  Pos: [116, 121] cc => I
Apply:  Pos: [105, 111] cc => I
Apply:  Pos: [108, 113] cc => I
Apply:  Pos: [120, 126] cc => I
Apply:  Pos: [132, 138, 141] ccc => cc
Apply:  Pos: [124, 134] cc => I
Apply:  Pos: [125, 130] cc => I
Apply:  Pos: [127, 129] cc => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [145, 158, 160] ccc => cc
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [148, 164] cc => I
Apply:  Pos: [150, 155] cc => I
Apply:  Pos: [157, 159] cc => I
Apply:  Pos: [165, 171] cc => I
Apply:  Pos: [167, 175, 182] ccc => cc
Apply:  Pos: [170, 176] cc => I
Apply:  Pos: [173, 178] cc => I
Apply:  Pos: [177, 181] cc => I
Apply:  Pos: [179, 184] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [200, 210] cc => I
Apply:  Pos: [207, 212] cc => I
Apply:  Pos: [209, 213, 219] ccc => cc
Apply:  Pos: [214, 221] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [17, 3], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [8, 9], [12, 11], [16, 4], [18, 4], [3, 9], [12, 10], [19, 17], [16, 4], [10, 4], [14, 0], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [2, 8], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [12, 11], [16, 7], [14, 0], [4, 17], [19, 6], [10, 4], [17, 3], [10, 3], [19, 15], [6, 8], [8, 9], [13, 18], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [1, 14], [2, 9], [10, 4], [12, 11], [5, 1], [5, 12], [5, 14], [11, 19], [17, 6], [4, 3], [1, 14], [17, 3], [15, 6], [19, 17], [16, 4], [7, 2], [13, 16], [12, 11], [3, 9], [14, 19], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [12, 13], [19, 15], [3, 9], [14, 19], [4, 7], [2, 9], [19, 17], [12, 13], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  4.296792030334473

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[22, 29]
[30, 34]
[42, 60]
[54, 77]
[103, 110]
[91, 117]
[110, 127]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 17, 39]
[93, 104, 106]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[74, 79, 80]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[22, 29]
[30, 34]
[42, 60]
[54, 77]
[103, 110]
[91, 117]
[110, 127]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3438501358032227

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 17, 39] ccc => cc, Pos: [22, 29] cc => I, Pos: [22, 29] cc => I, Pos: [30, 34] cc => I, Pos: [30, 34] cc => I, Pos: [42, 60] cc => I, Pos: [42, 60] cc => I, Pos: [54, 77] cc => I, Pos: [54, 77] cc => I, Pos: [74, 79, 80] ccc => cc, Pos: [91, 117] cc => I, Pos: [91, 117] cc => I, Pos: [93, 104, 106] ccc => cc, Pos: [103, 110] cc => I, Pos: [103, 110] cc => I, Pos: [110, 127] cc => I, Pos: [110, 127] cc => I]

--------End Timer [Generate Plans]:  0.01550436019897461

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 17, 39] ccc => cc,
 Pos: [22, 29] cc => I,
 Pos: [30, 34] cc => I,
 Pos: [42, 60] cc => I,
 Pos: [54, 77] cc => I,
 Pos: [74, 79, 80] ccc => cc,
 Pos: [91, 117] cc => I,
 Pos: [93, 104, 106] ccc => cc,
 Pos: [110, 127] cc => I]
Change: 9, Saving: 9

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 17, 39] ccc => cc
Apply:  Pos: [22, 29] cc => I
Apply:  Pos: [30, 34] cc => I
Apply:  Pos: [42, 60] cc => I
Apply:  Pos: [54, 77] cc => I
Apply:  Pos: [74, 79, 80] ccc => cc
Apply:  Pos: [91, 117] cc => I
Apply:  Pos: [93, 104, 106] ccc => cc
Apply:  Pos: [110, 127] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 15], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [17, 3], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [18, 4], [16, 4], [12, 10], [19, 17], [10, 4], [16, 4], [19, 15], [4, 17], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [2, 8], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [16, 7], [14, 0], [4, 17], [19, 6], [10, 4], [17, 3], [19, 15], [6, 8], [8, 9], [13, 18], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [6, 8], [3, 8], [12, 10], [5, 1], [2, 9], [10, 4], [5, 12], [1, 14], [11, 19], [17, 6], [4, 3], [1, 14], [17, 3], [15, 6], [19, 17], [16, 4], [7, 2], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [18, 7], [16, 7], [12, 13], [19, 15], [3, 9], [4, 7], [2, 9], [19, 17], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [17, 3], [4, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.3593544960021973

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[70, 74]
[77, 97]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[70, 74]
[77, 97]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9999830722808838

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [70, 74] cc => I, Pos: [70, 74] cc => I, Pos: [77, 97] cc => I, Pos: [77, 97] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [70, 74] cc => I, Pos: [77, 97] cc => I]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [70, 74] cc => I
Apply:  Pos: [77, 97] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015620231628417969

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 15], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [17, 3], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [16, 4], [18, 4], [12, 10], [19, 17], [16, 4], [10, 4], [19, 15], [4, 17], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [2, 8], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [16, 7], [14, 0], [4, 17], [19, 6], [10, 4], [17, 3], [19, 15], [6, 8], [8, 9], [13, 18], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [5, 1], [2, 9], [10, 4], [5, 12], [11, 19], [17, 6], [4, 3], [17, 3], [15, 6], [16, 4], [7, 2], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [12, 13], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.0156033039093018

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9218761920928955

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 15], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [17, 3], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [18, 4], [16, 4], [12, 10], [19, 17], [10, 4], [16, 4], [19, 15], [4, 17], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [2, 8], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [16, 7], [14, 0], [4, 17], [19, 6], [10, 4], [17, 3], [19, 15], [6, 8], [8, 9], [13, 18], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [6, 8], [3, 8], [12, 10], [5, 1], [2, 9], [10, 4], [5, 12], [11, 19], [17, 6], [17, 3], [4, 3], [15, 6], [16, 4], [7, 2], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [18, 7], [16, 7], [12, 13], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [17, 3], [4, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  1.9218761920928955

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [122] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 244

Reduced: 
 - size: 103 (45.78%)
 - depth: 13 (28.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07811999320983887

[17, 3], [19, 15], [18, 4], [11, 10], [8, 9], [16, 7], [10, 17], [14, 0], [8, 9], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [17, 3], [18, 7], [13, 11], [0, 15], [17, 3], [19, 15], [18, 7], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [17, 3], [13, 18], [19, 15], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [19, 15], [17, 6], [8, 9], [12, 11], [16, 4], [17, 6], [18, 4], [3, 9], [12, 10], [19, 17], [5, 12], [16, 4], [19, 15], [5, 12], [10, 4], [6, 8], [14, 0], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [6, 8], [5, 12], [1, 19], [0, 15], [3, 9], [2, 8], [5, 1], [2, 8], [18, 4], [17, 6], [14, 19], [3, 9], [5, 12], [18, 16], [11, 19], [3, 9], [12, 11], [3, 9], [5, 1], [16, 7], [14, 0], [4, 17], [11, 14], [16, 7], [2, 8], [19, 6], [10, 4], [5, 1], [17, 3], [11, 14], [10, 3], [19, 15], [6, 8], [5, 1], [14, 19], [0, 15], [16, 7], [8, 9], [13, 18], [10, 17], [4, 3], [14, 19], [18, 16], [0, 15], [4, 7], [10, 17], [2, 8], [1, 14], [13, 10], [19, 6], [4, 7], [3, 8], [1, 14], [6, 8], [12, 10], [13, 18], [1, 14], [2, 9], [10, 4], [17, 15], [13, 18], [12, 11], [5, 1], [7, 2], [11, 14], [17, 15], [4, 3], [5, 12], [4, 3], [11, 14], [18, 16], [5, 1], [11, 19], [7, 2], [17, 6], [4, 3], [18, 16], [1, 14], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 18], [12, 11], [1, 11], [17, 15], [3, 9], [5, 12], [14, 19], [1, 11], [10, 3], [2, 9], [5, 12], [4, 7], [1, 11], [18, 16], [1, 11], [13, 18], [6, 8], [10, 4], [3, 2], [17, 15], [1, 11], [16, 7], [18, 4], [12, 13], [19, 15], [2, 8], [1, 11], [3, 9], [17, 6], [14, 19], [4, 7], [2, 8], [13, 11], [17, 6], [0, 15], [2, 9], [13, 11], [18, 4], [19, 17], [0, 15], [12, 13], [17, 3], [7, 2], [18, 16], [13, 18], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [13, 18], [3, 8], [4, 17], [11, 10], [18, 7], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [2, 9], [14, 0], [1, 11], [18, 7], [15, 6], [2, 9], [5, 1], [13, 18], [0, 15], [14, 19], [16, 7], [5, 12], [1, 11], [4, 3], [13, 18], [17, 3], [1, 14], [16, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 8]
[17, 21]
[18, 23]
[21, 29]
[22, 31]
[31, 38]
[39, 43]
[38, 50]
[48, 51]
[50, 55]
[53, 61]
[51, 62]
[66, 68]
[65, 72]
[62, 73]
[72, 76]
[76, 78]
[67, 79]
[80, 84]
[68, 85]
[79, 88]
[83, 90]
[88, 94]
[84, 97]
[95, 102]
[96, 104]
[100, 106]
[105, 111]
[108, 113]
[113, 117]
[116, 121]
[120, 126]
[127, 129]
[125, 130]
[123, 132]
[124, 134]
[129, 136]
[131, 137]
[134, 144]
[147, 152]
[150, 155]
[152, 157]
[157, 159]
[148, 164]
[159, 165]
[165, 171]
[170, 176]
[173, 178]
[177, 181]
[179, 184]
[189, 196]
[200, 210]
[207, 212]
[214, 221]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[99, 103, 116]
[132, 138, 141]
[145, 158, 160]
[167, 175, 182]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[209, 213, 219]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[89, 91, 100]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 8]
[17, 21]
[18, 23]
[21, 29]
[22, 31]
[31, 38]
[39, 43]
[38, 50]
[48, 51]
[50, 55]
[53, 61]
[51, 62]
[66, 68]
[65, 72]
[62, 73]
[72, 76]
[76, 78]
[67, 79]
[80, 84]
[68, 85]
[79, 88]
[83, 90]
[88, 94]
[84, 97]
[95, 102]
[96, 104]
[100, 106]
[105, 111]
[108, 113]
[113, 117]
[116, 121]
[120, 126]
[127, 129]
[125, 130]
[123, 132]
[124, 134]
[129, 136]
[131, 137]
[134, 144]
[147, 152]
[150, 155]
[152, 157]
[157, 159]
[148, 164]
[159, 165]
[165, 171]
[170, 176]
[173, 178]
[177, 181]
[179, 184]
[189, 196]
[200, 210]
[207, 212]
[214, 221]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.281792402267456

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 8] cc => I, Pos: [4, 8] cc => I, Pos: [17, 21] cc => I, Pos: [17, 21] cc => I, Pos: [18, 23] cc => I, Pos: [18, 23] cc => I, Pos: [21, 29] cc => I, Pos: [21, 29] cc => I, Pos: [22, 31] cc => I, Pos: [22, 31] cc => I, Pos: [31, 38] cc => I, Pos: [31, 38] cc => I, Pos: [38, 50] cc => I, Pos: [38, 50] cc => I, Pos: [39, 43] cc => I, Pos: [39, 43] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [50, 55] cc => I, Pos: [50, 55] cc => I, Pos: [51, 62] cc => I, Pos: [51, 62] cc => I, Pos: [53, 61] cc => I, Pos: [53, 61] cc => I, Pos: [62, 73] cc => I, Pos: [62, 73] cc => I, Pos: [65, 72] cc => I, Pos: [65, 72] cc => I, Pos: [66, 68] cc => I, Pos: [66, 68] cc => I, Pos: [67, 79] cc => I, Pos: [67, 79] cc => I, Pos: [68, 85] cc => I, Pos: [68, 85] cc => I, Pos: [72, 76] cc => I, Pos: [72, 76] cc => I, Pos: [76, 78] cc => I, Pos: [76, 78] cc => I, Pos: [79, 88] cc => I, Pos: [79, 88] cc => I, Pos: [80, 84] cc => I, Pos: [80, 84] cc => I, Pos: [83, 90] cc => I, Pos: [83, 90] cc => I, Pos: [84, 97] cc => I, Pos: [84, 97] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 91, 100] ccc => cc, Pos: [95, 102] cc => I, Pos: [95, 102] cc => I, Pos: [96, 104] cc => I, Pos: [96, 104] cc => I, Pos: [99, 103, 116] ccc => cc, Pos: [100, 106] cc => I, Pos: [100, 106] cc => I, Pos: [105, 111] cc => I, Pos: [105, 111] cc => I, Pos: [108, 113] cc => I, Pos: [108, 113] cc => I, Pos: [113, 117] cc => I, Pos: [113, 117] cc => I, Pos: [116, 121] cc => I, Pos: [116, 121] cc => I, Pos: [120, 126] cc => I, Pos: [120, 126] cc => I, Pos: [123, 132] cc => I, Pos: [123, 132] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [125, 130] cc => I, Pos: [125, 130] cc => I, Pos: [127, 129] cc => I, Pos: [127, 129] cc => I, Pos: [129, 136] cc => I, Pos: [129, 136] cc => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [132, 138, 141] ccc => cc, Pos: [134, 144] cc => I, Pos: [134, 144] cc => I, Pos: [145, 158, 160] ccc => cc, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [150, 155] cc => I, Pos: [150, 155] cc => I, Pos: [152, 157] cc => I, Pos: [152, 157] cc => I, Pos: [157, 159] cc => I, Pos: [157, 159] cc => I, Pos: [159, 165] cc => I, Pos: [159, 165] cc => I, Pos: [165, 171] cc => I, Pos: [165, 171] cc => I, Pos: [167, 175, 182] ccc => cc, Pos: [170, 176] cc => I, Pos: [170, 176] cc => I, Pos: [173, 178] cc => I, Pos: [173, 178] cc => I, Pos: [177, 181] cc => I, Pos: [177, 181] cc => I, Pos: [179, 184] cc => I, Pos: [179, 184] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [200, 210] cc => I, Pos: [200, 210] cc => I, Pos: [207, 212] cc => I, Pos: [207, 212] cc => I, Pos: [209, 213, 219] ccc => cc, Pos: [214, 221] cc => I, Pos: [214, 221] cc => I]

--------End Timer [Generate Plans]:  0.10936832427978516

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 8] cc => I,
 Pos: [17, 21] cc => I,
 Pos: [18, 23] cc => I,
 Pos: [31, 38] cc => I,
 Pos: [39, 43] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [50, 55] cc => I,
 Pos: [53, 61] cc => I,
 Pos: [62, 73] cc => I,
 Pos: [65, 72] cc => I,
 Pos: [68, 85] cc => I,
 Pos: [79, 88] cc => I,
 Pos: [76, 78] cc => I,
 Pos: [84, 97] cc => I,
 Pos: [83, 90] cc => I,
 Pos: [100, 106] cc => I,
 Pos: [95, 102] cc => I,
 Pos: [96, 104] cc => I,
 Pos: [116, 121] cc => I,
 Pos: [105, 111] cc => I,
 Pos: [108, 113] cc => I,
 Pos: [120, 126] cc => I,
 Pos: [132, 138, 141] ccc => cc,
 Pos: [134, 144] cc => I,
 Pos: [125, 130] cc => I,
 Pos: [127, 129] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [145, 158, 160] ccc => cc,
 Pos: [152, 157] cc => I,
 Pos: [148, 164] cc => I,
 Pos: [150, 155] cc => I,
 Pos: [159, 165] cc => I,
 Pos: [167, 175, 182] ccc => cc,
 Pos: [170, 176] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 181] cc => I,
 Pos: [179, 184] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [207, 212] cc => I,
 Pos: [209, 213, 219] ccc => cc,
 Pos: [214, 221] cc => I]
Change: 42, Saving: 42

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 8] cc => I
Apply:  Pos: [17, 21] cc => I
Apply:  Pos: [18, 23] cc => I
Apply:  Pos: [31, 38] cc => I
Apply:  Pos: [39, 43] cc => I
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [50, 55] cc => I
Apply:  Pos: [53, 61] cc => I
Apply:  Pos: [62, 73] cc => I
Apply:  Pos: [65, 72] cc => I
Apply:  Pos: [68, 85] cc => I
Apply:  Pos: [79, 88] cc => I
Apply:  Pos: [76, 78] cc => I
Apply:  Pos: [84, 97] cc => I
Apply:  Pos: [83, 90] cc => I
Apply:  Pos: [100, 106] cc => I
Apply:  Pos: [95, 102] cc => I
Apply:  Pos: [96, 104] cc => I
Apply:  Pos: [116, 121] cc => I
Apply:  Pos: [105, 111] cc => I
Apply:  Pos: [108, 113] cc => I
Apply:  Pos: [120, 126] cc => I
Apply:  Pos: [132, 138, 141] ccc => cc
Apply:  Pos: [134, 144] cc => I
Apply:  Pos: [125, 130] cc => I
Apply:  Pos: [127, 129] cc => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [145, 158, 160] ccc => cc
Apply:  Pos: [152, 157] cc => I
Apply:  Pos: [148, 164] cc => I
Apply:  Pos: [150, 155] cc => I
Apply:  Pos: [159, 165] cc => I
Apply:  Pos: [167, 175, 182] ccc => cc
Apply:  Pos: [170, 176] cc => I
Apply:  Pos: [173, 178] cc => I
Apply:  Pos: [177, 181] cc => I
Apply:  Pos: [179, 184] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [200, 210] cc => I
Apply:  Pos: [207, 212] cc => I
Apply:  Pos: [209, 213, 219] ccc => cc
Apply:  Pos: [214, 221] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [19, 15], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [8, 9], [12, 11], [16, 4], [18, 4], [3, 9], [12, 10], [19, 17], [16, 4], [10, 4], [14, 0], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [2, 8], [5, 1], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [12, 11], [16, 7], [14, 0], [4, 17], [19, 6], [10, 4], [17, 3], [10, 3], [19, 15], [6, 8], [5, 1], [8, 9], [13, 18], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [1, 14], [2, 9], [10, 4], [12, 11], [5, 1], [7, 2], [5, 12], [5, 14], [11, 19], [17, 6], [4, 3], [1, 14], [17, 3], [15, 6], [19, 17], [16, 4], [13, 16], [12, 11], [1, 11], [3, 9], [14, 19], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [12, 13], [19, 15], [1, 11], [3, 9], [14, 19], [4, 7], [2, 9], [19, 17], [12, 13], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  4.391160726547241

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[22, 30]
[31, 35]
[42, 61]
[49, 65]
[55, 79]
[106, 114]
[114, 131]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[65, 76, 80]
[96, 107, 110]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[22, 30]
[31, 35]
[42, 61]
[49, 65]
[55, 79]
[106, 114]
[114, 131]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4675116539001465

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [22, 30] cc => I, Pos: [22, 30] cc => I, Pos: [31, 35] cc => I, Pos: [31, 35] cc => I, Pos: [42, 61] cc => I, Pos: [42, 61] cc => I, Pos: [49, 65] cc => I, Pos: [49, 65] cc => I, Pos: [55, 79] cc => I, Pos: [55, 79] cc => I, Pos: [65, 76, 80] ccc => cc, Pos: [96, 107, 110] ccc => cc, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I, Pos: [114, 131] cc => I, Pos: [114, 131] cc => I]

--------End Timer [Generate Plans]:  0.031247854232788086

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 30] cc => I,
 Pos: [31, 35] cc => I,
 Pos: [42, 61] cc => I,
 Pos: [49, 65] cc => I,
 Pos: [55, 79] cc => I,
 Pos: [96, 107, 110] ccc => cc,
 Pos: [114, 131] cc => I]
Change: 7, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 30] cc => I
Apply:  Pos: [31, 35] cc => I
Apply:  Pos: [42, 61] cc => I
Apply:  Pos: [49, 65] cc => I
Apply:  Pos: [55, 79] cc => I
Apply:  Pos: [96, 107, 110] ccc => cc
Apply:  Pos: [114, 131] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [19, 15], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [18, 4], [16, 4], [12, 10], [19, 17], [10, 4], [16, 4], [14, 0], [4, 17], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [2, 8], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [16, 7], [14, 0], [4, 17], [19, 6], [10, 4], [17, 3], [19, 15], [6, 8], [8, 9], [13, 18], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [6, 8], [3, 8], [12, 10], [1, 14], [2, 9], [10, 4], [5, 1], [7, 2], [5, 14], [5, 12], [11, 19], [17, 6], [4, 3], [1, 14], [17, 3], [15, 6], [19, 17], [16, 4], [13, 16], [1, 11], [12, 11], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [18, 7], [16, 7], [12, 13], [19, 15], [1, 11], [3, 9], [4, 7], [2, 9], [19, 17], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [17, 3], [4, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.4987595081329346

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[84, 98]
[80, 102]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[84, 98]
[80, 102]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.1564154624938965

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [80, 102] cc => I, Pos: [80, 102] cc => I, Pos: [84, 98] cc => I, Pos: [84, 98] cc => I]

--------End Timer [Generate Plans]:  0.015630006790161133

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [80, 102] cc => I, Pos: [84, 98] cc => I]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [80, 102] cc => I
Apply:  Pos: [84, 98] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [19, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [16, 4], [18, 4], [12, 10], [19, 17], [16, 4], [10, 4], [14, 0], [4, 17], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [2, 8], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [16, 7], [14, 0], [4, 17], [19, 6], [10, 4], [17, 3], [19, 15], [6, 8], [8, 9], [13, 18], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [1, 14], [2, 9], [10, 4], [5, 1], [7, 2], [5, 12], [5, 14], [11, 19], [17, 6], [4, 3], [1, 14], [17, 3], [15, 6], [16, 4], [13, 16], [12, 11], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [12, 13], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.1720454692840576

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[82, 105]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[82, 105]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0938057899475098

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [82, 105] cc => I, Pos: [82, 105] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [82, 105] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [82, 105] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [19, 15], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [18, 4], [16, 4], [12, 10], [19, 17], [10, 4], [16, 4], [14, 0], [4, 17], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [2, 8], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [16, 7], [14, 0], [4, 17], [19, 6], [10, 4], [17, 3], [19, 15], [6, 8], [8, 9], [13, 18], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [6, 8], [3, 8], [12, 10], [1, 14], [2, 9], [10, 4], [5, 1], [7, 2], [5, 14], [5, 12], [11, 19], [17, 6], [4, 3], [1, 14], [17, 3], [15, 6], [16, 4], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [18, 7], [16, 7], [12, 13], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [17, 3], [4, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.0938057899475098

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.031524419784546

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [19, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [16, 4], [18, 4], [12, 10], [19, 17], [16, 4], [10, 4], [14, 0], [4, 17], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [2, 8], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [16, 7], [14, 0], [4, 17], [19, 6], [10, 4], [17, 3], [19, 15], [6, 8], [8, 9], [13, 18], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [1, 14], [2, 9], [10, 4], [5, 1], [7, 2], [5, 12], [5, 14], [11, 19], [17, 6], [4, 3], [1, 14], [17, 3], [15, 6], [16, 4], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [12, 13], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.031524419784546

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [126] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 31 - (small)
 - circuit cycle: 252

Reduced: 
 - size: 99 (44.00%)
 - depth: 14 (31.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374213218688965

[17, 3], [19, 15], [18, 4], [11, 10], [8, 9], [16, 7], [10, 17], [14, 0], [8, 9], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [17, 3], [18, 7], [13, 11], [0, 15], [17, 3], [19, 15], [18, 7], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [17, 3], [13, 18], [19, 15], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [19, 15], [17, 6], [8, 9], [12, 11], [16, 4], [17, 6], [18, 4], [3, 9], [12, 10], [19, 17], [5, 12], [16, 4], [19, 15], [5, 12], [10, 4], [6, 8], [14, 0], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [6, 8], [5, 12], [1, 19], [0, 15], [3, 9], [2, 8], [5, 1], [2, 8], [18, 4], [17, 6], [14, 19], [3, 9], [5, 12], [18, 16], [11, 19], [3, 9], [12, 11], [3, 9], [5, 1], [16, 7], [14, 0], [4, 17], [11, 14], [16, 7], [2, 8], [19, 6], [10, 4], [5, 1], [17, 3], [11, 14], [10, 3], [19, 15], [6, 8], [5, 1], [14, 19], [0, 15], [16, 7], [8, 9], [13, 18], [10, 17], [4, 3], [14, 19], [18, 16], [0, 15], [4, 7], [10, 17], [2, 8], [1, 14], [13, 10], [19, 6], [4, 7], [3, 8], [1, 14], [6, 8], [12, 10], [13, 18], [1, 14], [2, 9], [10, 4], [17, 15], [13, 18], [12, 11], [5, 1], [7, 2], [11, 14], [17, 15], [4, 3], [5, 12], [4, 3], [11, 14], [18, 16], [5, 1], [11, 19], [7, 2], [17, 6], [4, 3], [18, 16], [1, 14], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 18], [12, 11], [1, 11], [17, 15], [3, 9], [5, 12], [14, 19], [1, 11], [10, 3], [2, 9], [5, 12], [4, 7], [1, 11], [18, 16], [1, 11], [13, 18], [6, 8], [10, 4], [3, 2], [17, 15], [1, 11], [16, 7], [18, 4], [12, 13], [19, 15], [2, 8], [1, 11], [3, 9], [17, 6], [14, 19], [4, 7], [2, 8], [13, 11], [17, 6], [0, 15], [2, 9], [13, 11], [18, 4], [19, 17], [0, 15], [12, 13], [17, 3], [7, 2], [18, 16], [13, 18], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [13, 18], [3, 8], [4, 17], [11, 10], [18, 7], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [2, 9], [14, 0], [1, 11], [18, 7], [15, 6], [2, 9], [5, 1], [13, 18], [0, 15], [14, 19], [16, 7], [5, 12], [1, 11], [4, 3], [13, 18], [17, 3], [1, 14], [16, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 8]
[17, 21]
[18, 23]
[21, 29]
[22, 31]
[31, 38]
[39, 43]
[38, 50]
[48, 51]
[50, 55]
[53, 61]
[51, 62]
[66, 68]
[65, 72]
[62, 73]
[72, 76]
[76, 78]
[67, 79]
[80, 84]
[68, 85]
[79, 88]
[83, 90]
[88, 94]
[84, 97]
[95, 102]
[96, 104]
[100, 106]
[105, 111]
[108, 113]
[113, 117]
[116, 121]
[120, 126]
[127, 129]
[125, 130]
[123, 132]
[124, 134]
[129, 136]
[131, 137]
[134, 144]
[147, 152]
[150, 155]
[152, 157]
[157, 159]
[148, 164]
[159, 165]
[165, 171]
[170, 176]
[173, 178]
[177, 181]
[179, 184]
[189, 196]
[200, 210]
[207, 212]
[214, 221]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[99, 103, 116]
[132, 138, 141]
[145, 158, 160]
[167, 175, 182]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[209, 213, 219]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[89, 91, 100]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 8]
[17, 21]
[18, 23]
[21, 29]
[22, 31]
[31, 38]
[39, 43]
[38, 50]
[48, 51]
[50, 55]
[53, 61]
[51, 62]
[66, 68]
[65, 72]
[62, 73]
[72, 76]
[76, 78]
[67, 79]
[80, 84]
[68, 85]
[79, 88]
[83, 90]
[88, 94]
[84, 97]
[95, 102]
[96, 104]
[100, 106]
[105, 111]
[108, 113]
[113, 117]
[116, 121]
[120, 126]
[127, 129]
[125, 130]
[123, 132]
[124, 134]
[129, 136]
[131, 137]
[134, 144]
[147, 152]
[150, 155]
[152, 157]
[157, 159]
[148, 164]
[159, 165]
[165, 171]
[170, 176]
[173, 178]
[177, 181]
[179, 184]
[189, 196]
[200, 210]
[207, 212]
[214, 221]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.218728303909302

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 8] cc => I, Pos: [4, 8] cc => I, Pos: [17, 21] cc => I, Pos: [17, 21] cc => I, Pos: [18, 23] cc => I, Pos: [18, 23] cc => I, Pos: [21, 29] cc => I, Pos: [21, 29] cc => I, Pos: [22, 31] cc => I, Pos: [22, 31] cc => I, Pos: [31, 38] cc => I, Pos: [31, 38] cc => I, Pos: [38, 50] cc => I, Pos: [38, 50] cc => I, Pos: [39, 43] cc => I, Pos: [39, 43] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [50, 55] cc => I, Pos: [50, 55] cc => I, Pos: [51, 62] cc => I, Pos: [51, 62] cc => I, Pos: [53, 61] cc => I, Pos: [53, 61] cc => I, Pos: [62, 73] cc => I, Pos: [62, 73] cc => I, Pos: [65, 72] cc => I, Pos: [65, 72] cc => I, Pos: [66, 68] cc => I, Pos: [66, 68] cc => I, Pos: [67, 79] cc => I, Pos: [67, 79] cc => I, Pos: [68, 85] cc => I, Pos: [68, 85] cc => I, Pos: [72, 76] cc => I, Pos: [72, 76] cc => I, Pos: [76, 78] cc => I, Pos: [76, 78] cc => I, Pos: [79, 88] cc => I, Pos: [79, 88] cc => I, Pos: [80, 84] cc => I, Pos: [80, 84] cc => I, Pos: [83, 90] cc => I, Pos: [83, 90] cc => I, Pos: [84, 97] cc => I, Pos: [84, 97] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 91, 100] ccc => cc, Pos: [95, 102] cc => I, Pos: [95, 102] cc => I, Pos: [96, 104] cc => I, Pos: [96, 104] cc => I, Pos: [99, 103, 116] ccc => cc, Pos: [100, 106] cc => I, Pos: [100, 106] cc => I, Pos: [105, 111] cc => I, Pos: [105, 111] cc => I, Pos: [108, 113] cc => I, Pos: [108, 113] cc => I, Pos: [113, 117] cc => I, Pos: [113, 117] cc => I, Pos: [116, 121] cc => I, Pos: [116, 121] cc => I, Pos: [120, 126] cc => I, Pos: [120, 126] cc => I, Pos: [123, 132] cc => I, Pos: [123, 132] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [125, 130] cc => I, Pos: [125, 130] cc => I, Pos: [127, 129] cc => I, Pos: [127, 129] cc => I, Pos: [129, 136] cc => I, Pos: [129, 136] cc => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [132, 138, 141] ccc => cc, Pos: [134, 144] cc => I, Pos: [134, 144] cc => I, Pos: [145, 158, 160] ccc => cc, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [150, 155] cc => I, Pos: [150, 155] cc => I, Pos: [152, 157] cc => I, Pos: [152, 157] cc => I, Pos: [157, 159] cc => I, Pos: [157, 159] cc => I, Pos: [159, 165] cc => I, Pos: [159, 165] cc => I, Pos: [165, 171] cc => I, Pos: [165, 171] cc => I, Pos: [167, 175, 182] ccc => cc, Pos: [170, 176] cc => I, Pos: [170, 176] cc => I, Pos: [173, 178] cc => I, Pos: [173, 178] cc => I, Pos: [177, 181] cc => I, Pos: [177, 181] cc => I, Pos: [179, 184] cc => I, Pos: [179, 184] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [200, 210] cc => I, Pos: [200, 210] cc => I, Pos: [207, 212] cc => I, Pos: [207, 212] cc => I, Pos: [209, 213, 219] ccc => cc, Pos: [214, 221] cc => I, Pos: [214, 221] cc => I]

--------End Timer [Generate Plans]:  0.10936784744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 8] cc => I,
 Pos: [17, 21] cc => I,
 Pos: [18, 23] cc => I,
 Pos: [31, 38] cc => I,
 Pos: [39, 43] cc => I,
 Pos: [51, 62] cc => I,
 Pos: [50, 55] cc => I,
 Pos: [53, 61] cc => I,
 Pos: [65, 72] cc => I,
 Pos: [66, 68] cc => I,
 Pos: [79, 88] cc => I,
 Pos: [76, 78] cc => I,
 Pos: [80, 84] cc => I,
 Pos: [83, 90] cc => I,
 Pos: [89, 91, 100] ccc => cc,
 Pos: [95, 102] cc => I,
 Pos: [96, 104] cc => I,
 Pos: [99, 103, 116] ccc => cc,
 Pos: [105, 111] cc => I,
 Pos: [108, 113] cc => I,
 Pos: [120, 126] cc => I,
 Pos: [123, 132] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [125, 130] cc => I,
 Pos: [129, 136] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [145, 158, 160] ccc => cc,
 Pos: [152, 157] cc => I,
 Pos: [148, 164] cc => I,
 Pos: [150, 155] cc => I,
 Pos: [165, 171] cc => I,
 Pos: [167, 175, 182] ccc => cc,
 Pos: [170, 176] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 181] cc => I,
 Pos: [179, 184] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [207, 212] cc => I,
 Pos: [209, 213, 219] ccc => cc,
 Pos: [214, 221] cc => I]
Change: 41, Saving: 41

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 8] cc => I
Apply:  Pos: [17, 21] cc => I
Apply:  Pos: [18, 23] cc => I
Apply:  Pos: [31, 38] cc => I
Apply:  Pos: [39, 43] cc => I
Apply:  Pos: [51, 62] cc => I
Apply:  Pos: [50, 55] cc => I
Apply:  Pos: [53, 61] cc => I
Apply:  Pos: [65, 72] cc => I
Apply:  Pos: [66, 68] cc => I
Apply:  Pos: [79, 88] cc => I
Apply:  Pos: [76, 78] cc => I
Apply:  Pos: [80, 84] cc => I
Apply:  Pos: [83, 90] cc => I
Apply:  Pos: [89, 91, 100] ccc => cc
Apply:  Pos: [95, 102] cc => I
Apply:  Pos: [96, 104] cc => I
Apply:  Pos: [99, 103, 116] ccc => cc
Apply:  Pos: [105, 111] cc => I
Apply:  Pos: [108, 113] cc => I
Apply:  Pos: [120, 126] cc => I
Apply:  Pos: [123, 132] cc => I
Apply:  Pos: [124, 134] cc => I
Apply:  Pos: [125, 130] cc => I
Apply:  Pos: [129, 136] cc => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [145, 158, 160] ccc => cc
Apply:  Pos: [152, 157] cc => I
Apply:  Pos: [148, 164] cc => I
Apply:  Pos: [150, 155] cc => I
Apply:  Pos: [165, 171] cc => I
Apply:  Pos: [167, 175, 182] ccc => cc
Apply:  Pos: [170, 176] cc => I
Apply:  Pos: [173, 178] cc => I
Apply:  Pos: [177, 181] cc => I
Apply:  Pos: [179, 184] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [200, 210] cc => I
Apply:  Pos: [207, 212] cc => I
Apply:  Pos: [209, 213, 219] ccc => cc
Apply:  Pos: [214, 221] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [19, 15], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [8, 9], [12, 11], [16, 4], [18, 4], [3, 9], [12, 10], [19, 17], [5, 12], [16, 4], [10, 4], [14, 0], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [5, 1], [18, 4], [17, 6], [14, 19], [5, 12], [18, 16], [11, 19], [12, 11], [14, 0], [4, 17], [2, 8], [19, 6], [10, 4], [10, 17], [17, 3], [19, 15], [6, 8], [5, 1], [16, 7], [8, 9], [13, 16], [4, 3], [18, 16], [10, 17], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [1, 14], [2, 9], [10, 4], [13, 18], [12, 11], [4, 3], [5, 12], [11, 19], [17, 6], [1, 14], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 16], [12, 11], [1, 11], [3, 9], [14, 19], [10, 3], [2, 9], [4, 7], [18, 16], [1, 11], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [12, 13], [19, 15], [3, 9], [14, 19], [4, 7], [2, 9], [19, 17], [12, 13], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  4.328096151351929

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[22, 30]
[31, 35]
[38, 53]
[49, 66]
[56, 83]
[79, 88]
[110, 117]
[117, 134]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[99, 111, 113]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[58, 61, 62]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[22, 30]
[31, 35]
[38, 53]
[49, 66]
[56, 83]
[79, 88]
[110, 117]
[117, 134]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.5312418937683105

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [22, 30] cc => I, Pos: [22, 30] cc => I, Pos: [31, 35] cc => I, Pos: [31, 35] cc => I, Pos: [38, 53] cc => I, Pos: [38, 53] cc => I, Pos: [49, 66] cc => I, Pos: [49, 66] cc => I, Pos: [56, 83] cc => I, Pos: [56, 83] cc => I, Pos: [58, 61, 62] ccc => cc, Pos: [79, 88] cc => I, Pos: [79, 88] cc => I, Pos: [99, 111, 113] ccc => cc, Pos: [110, 117] cc => I, Pos: [110, 117] cc => I, Pos: [117, 134] cc => I, Pos: [117, 134] cc => I]

--------End Timer [Generate Plans]:  0.03197145462036133

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 30] cc => I,
 Pos: [31, 35] cc => I,
 Pos: [38, 53] cc => I,
 Pos: [49, 66] cc => I,
 Pos: [56, 83] cc => I,
 Pos: [58, 61, 62] ccc => cc,
 Pos: [79, 88] cc => I,
 Pos: [99, 111, 113] ccc => cc,
 Pos: [117, 134] cc => I]
Change: 9, Saving: 9

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 30] cc => I
Apply:  Pos: [31, 35] cc => I
Apply:  Pos: [38, 53] cc => I
Apply:  Pos: [49, 66] cc => I
Apply:  Pos: [56, 83] cc => I
Apply:  Pos: [58, 61, 62] ccc => cc
Apply:  Pos: [79, 88] cc => I
Apply:  Pos: [99, 111, 113] ccc => cc
Apply:  Pos: [117, 134] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [19, 15], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [18, 4], [16, 4], [12, 10], [19, 17], [10, 4], [16, 4], [14, 0], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [14, 0], [10, 4], [2, 8], [19, 6], [4, 17], [17, 3], [19, 15], [6, 8], [16, 7], [8, 9], [13, 16], [4, 3], [18, 16], [10, 17], [2, 8], [13, 10], [19, 6], [6, 8], [3, 8], [12, 10], [2, 9], [10, 4], [13, 18], [4, 3], [5, 12], [11, 19], [17, 6], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 16], [1, 11], [12, 11], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [1, 11], [6, 8], [10, 4], [3, 2], [18, 7], [16, 7], [12, 13], [19, 15], [3, 9], [4, 7], [2, 9], [19, 17], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [17, 3], [4, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.563213348388672

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[84, 91]
[79, 102]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[84, 91]
[79, 102]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.171828508377075

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [79, 102] cc => I, Pos: [79, 102] cc => I, Pos: [84, 91] cc => I, Pos: [84, 91] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [79, 102] cc => I, Pos: [84, 91] cc => I]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [79, 102] cc => I
Apply:  Pos: [84, 91] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [19, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [16, 4], [18, 4], [12, 10], [19, 17], [16, 4], [10, 4], [14, 0], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [14, 0], [10, 4], [2, 8], [19, 6], [4, 17], [17, 3], [19, 15], [6, 8], [16, 7], [8, 9], [13, 16], [4, 3], [18, 16], [10, 17], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [2, 9], [10, 4], [13, 18], [4, 3], [5, 12], [11, 19], [17, 3], [15, 6], [17, 6], [5, 1], [16, 4], [7, 2], [13, 16], [12, 11], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [12, 13], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.171828508377075

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[82, 105]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[82, 105]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.062511682510376

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [82, 105] cc => I, Pos: [82, 105] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [82, 105] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [82, 105] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [19, 15], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [18, 4], [16, 4], [12, 10], [19, 17], [10, 4], [16, 4], [14, 0], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [14, 0], [10, 4], [2, 8], [19, 6], [4, 17], [17, 3], [19, 15], [6, 8], [16, 7], [8, 9], [13, 16], [4, 3], [18, 16], [10, 17], [2, 8], [13, 10], [19, 6], [6, 8], [3, 8], [12, 10], [2, 9], [10, 4], [13, 18], [4, 3], [5, 12], [11, 19], [17, 3], [17, 6], [15, 6], [5, 1], [16, 4], [7, 2], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [18, 7], [16, 7], [12, 13], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [17, 3], [4, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.062511682510376

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0155539512634277

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [19, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [16, 4], [18, 4], [12, 10], [19, 17], [16, 4], [10, 4], [14, 0], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [14, 0], [10, 4], [2, 8], [19, 6], [4, 17], [17, 3], [19, 15], [6, 8], [16, 7], [8, 9], [13, 16], [4, 3], [18, 16], [10, 17], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [2, 9], [10, 4], [13, 18], [4, 3], [5, 12], [11, 19], [17, 6], [17, 3], [15, 6], [5, 1], [16, 4], [7, 2], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [12, 13], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.0155539512634277

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [126] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 252

Reduced: 
 - size: 99 (44.00%)
 - depth: 13 (28.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09376287460327148

[17, 3], [19, 15], [18, 4], [11, 10], [8, 9], [16, 7], [10, 17], [14, 0], [8, 9], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [17, 3], [18, 7], [13, 11], [0, 15], [17, 3], [19, 15], [18, 7], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [17, 3], [13, 18], [19, 15], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [19, 15], [17, 6], [8, 9], [12, 11], [16, 4], [17, 6], [18, 4], [3, 9], [12, 10], [19, 17], [5, 12], [16, 4], [19, 15], [5, 12], [10, 4], [6, 8], [14, 0], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [6, 8], [5, 12], [1, 19], [0, 15], [3, 9], [2, 8], [5, 1], [2, 8], [18, 4], [17, 6], [14, 19], [3, 9], [5, 12], [18, 16], [11, 19], [3, 9], [12, 11], [3, 9], [5, 1], [16, 7], [14, 0], [4, 17], [11, 14], [16, 7], [2, 8], [19, 6], [10, 4], [5, 1], [17, 3], [11, 14], [10, 3], [19, 15], [6, 8], [5, 1], [14, 19], [0, 15], [16, 7], [8, 9], [13, 18], [10, 17], [4, 3], [14, 19], [18, 16], [0, 15], [4, 7], [10, 17], [2, 8], [1, 14], [13, 10], [19, 6], [4, 7], [3, 8], [1, 14], [6, 8], [12, 10], [13, 18], [1, 14], [2, 9], [10, 4], [17, 15], [13, 18], [12, 11], [5, 1], [7, 2], [11, 14], [17, 15], [4, 3], [5, 12], [4, 3], [11, 14], [18, 16], [5, 1], [11, 19], [7, 2], [17, 6], [4, 3], [18, 16], [1, 14], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 18], [12, 11], [1, 11], [17, 15], [3, 9], [5, 12], [14, 19], [1, 11], [10, 3], [2, 9], [5, 12], [4, 7], [1, 11], [18, 16], [1, 11], [13, 18], [6, 8], [10, 4], [3, 2], [17, 15], [1, 11], [16, 7], [18, 4], [12, 13], [19, 15], [2, 8], [1, 11], [3, 9], [17, 6], [14, 19], [4, 7], [2, 8], [13, 11], [17, 6], [0, 15], [2, 9], [13, 11], [18, 4], [19, 17], [0, 15], [12, 13], [17, 3], [7, 2], [18, 16], [13, 18], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [13, 18], [3, 8], [4, 17], [11, 10], [18, 7], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [2, 9], [14, 0], [1, 11], [18, 7], [15, 6], [2, 9], [5, 1], [13, 18], [0, 15], [14, 19], [16, 7], [5, 12], [1, 11], [4, 3], [13, 18], [17, 3], [1, 14], [16, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 8]
[17, 21]
[18, 23]
[21, 29]
[22, 31]
[31, 38]
[39, 43]
[38, 50]
[48, 51]
[50, 55]
[53, 61]
[51, 62]
[66, 68]
[65, 72]
[62, 73]
[72, 76]
[76, 78]
[67, 79]
[80, 84]
[68, 85]
[79, 88]
[83, 90]
[88, 94]
[84, 97]
[95, 102]
[96, 104]
[100, 106]
[105, 111]
[108, 113]
[113, 117]
[116, 121]
[120, 126]
[127, 129]
[125, 130]
[123, 132]
[124, 134]
[129, 136]
[131, 137]
[134, 144]
[147, 152]
[150, 155]
[152, 157]
[157, 159]
[148, 164]
[159, 165]
[165, 171]
[170, 176]
[173, 178]
[177, 181]
[179, 184]
[189, 196]
[200, 210]
[207, 212]
[214, 221]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[99, 103, 116]
[132, 138, 141]
[145, 158, 160]
[167, 175, 182]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[209, 213, 219]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[89, 91, 100]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 8]
[17, 21]
[18, 23]
[21, 29]
[22, 31]
[31, 38]
[39, 43]
[38, 50]
[48, 51]
[50, 55]
[53, 61]
[51, 62]
[66, 68]
[65, 72]
[62, 73]
[72, 76]
[76, 78]
[67, 79]
[80, 84]
[68, 85]
[79, 88]
[83, 90]
[88, 94]
[84, 97]
[95, 102]
[96, 104]
[100, 106]
[105, 111]
[108, 113]
[113, 117]
[116, 121]
[120, 126]
[127, 129]
[125, 130]
[123, 132]
[124, 134]
[129, 136]
[131, 137]
[134, 144]
[147, 152]
[150, 155]
[152, 157]
[157, 159]
[148, 164]
[159, 165]
[165, 171]
[170, 176]
[173, 178]
[177, 181]
[179, 184]
[189, 196]
[200, 210]
[207, 212]
[214, 221]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.20313024520874

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 8] cc => I, Pos: [4, 8] cc => I, Pos: [17, 21] cc => I, Pos: [17, 21] cc => I, Pos: [18, 23] cc => I, Pos: [18, 23] cc => I, Pos: [21, 29] cc => I, Pos: [21, 29] cc => I, Pos: [22, 31] cc => I, Pos: [22, 31] cc => I, Pos: [31, 38] cc => I, Pos: [31, 38] cc => I, Pos: [38, 50] cc => I, Pos: [38, 50] cc => I, Pos: [39, 43] cc => I, Pos: [39, 43] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [50, 55] cc => I, Pos: [50, 55] cc => I, Pos: [51, 62] cc => I, Pos: [51, 62] cc => I, Pos: [53, 61] cc => I, Pos: [53, 61] cc => I, Pos: [62, 73] cc => I, Pos: [62, 73] cc => I, Pos: [65, 72] cc => I, Pos: [65, 72] cc => I, Pos: [66, 68] cc => I, Pos: [66, 68] cc => I, Pos: [67, 79] cc => I, Pos: [67, 79] cc => I, Pos: [68, 85] cc => I, Pos: [68, 85] cc => I, Pos: [72, 76] cc => I, Pos: [72, 76] cc => I, Pos: [76, 78] cc => I, Pos: [76, 78] cc => I, Pos: [79, 88] cc => I, Pos: [79, 88] cc => I, Pos: [80, 84] cc => I, Pos: [80, 84] cc => I, Pos: [83, 90] cc => I, Pos: [83, 90] cc => I, Pos: [84, 97] cc => I, Pos: [84, 97] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 91, 100] ccc => cc, Pos: [95, 102] cc => I, Pos: [95, 102] cc => I, Pos: [96, 104] cc => I, Pos: [96, 104] cc => I, Pos: [99, 103, 116] ccc => cc, Pos: [100, 106] cc => I, Pos: [100, 106] cc => I, Pos: [105, 111] cc => I, Pos: [105, 111] cc => I, Pos: [108, 113] cc => I, Pos: [108, 113] cc => I, Pos: [113, 117] cc => I, Pos: [113, 117] cc => I, Pos: [116, 121] cc => I, Pos: [116, 121] cc => I, Pos: [120, 126] cc => I, Pos: [120, 126] cc => I, Pos: [123, 132] cc => I, Pos: [123, 132] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [125, 130] cc => I, Pos: [125, 130] cc => I, Pos: [127, 129] cc => I, Pos: [127, 129] cc => I, Pos: [129, 136] cc => I, Pos: [129, 136] cc => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [132, 138, 141] ccc => cc, Pos: [134, 144] cc => I, Pos: [134, 144] cc => I, Pos: [145, 158, 160] ccc => cc, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [150, 155] cc => I, Pos: [150, 155] cc => I, Pos: [152, 157] cc => I, Pos: [152, 157] cc => I, Pos: [157, 159] cc => I, Pos: [157, 159] cc => I, Pos: [159, 165] cc => I, Pos: [159, 165] cc => I, Pos: [165, 171] cc => I, Pos: [165, 171] cc => I, Pos: [167, 175, 182] ccc => cc, Pos: [170, 176] cc => I, Pos: [170, 176] cc => I, Pos: [173, 178] cc => I, Pos: [173, 178] cc => I, Pos: [177, 181] cc => I, Pos: [177, 181] cc => I, Pos: [179, 184] cc => I, Pos: [179, 184] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [200, 210] cc => I, Pos: [200, 210] cc => I, Pos: [207, 212] cc => I, Pos: [207, 212] cc => I, Pos: [209, 213, 219] ccc => cc, Pos: [214, 221] cc => I, Pos: [214, 221] cc => I]

--------End Timer [Generate Plans]:  0.09374499320983887

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 8] cc => I,
 Pos: [17, 21] cc => I,
 Pos: [18, 23] cc => I,
 Pos: [22, 31] cc => I,
 Pos: [38, 50] cc => I,
 Pos: [39, 43] cc => I,
 Pos: [51, 62] cc => I,
 Pos: [53, 61] cc => I,
 Pos: [72, 76] cc => I,
 Pos: [66, 68] cc => I,
 Pos: [67, 79] cc => I,
 Pos: [84, 97] cc => I,
 Pos: [83, 90] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [89, 91, 100] ccc => cc,
 Pos: [95, 102] cc => I,
 Pos: [96, 104] cc => I,
 Pos: [116, 121] cc => I,
 Pos: [105, 111] cc => I,
 Pos: [108, 113] cc => I,
 Pos: [120, 126] cc => I,
 Pos: [123, 132] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [125, 130] cc => I,
 Pos: [129, 136] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [145, 158, 160] ccc => cc,
 Pos: [152, 157] cc => I,
 Pos: [148, 164] cc => I,
 Pos: [150, 155] cc => I,
 Pos: [165, 171] cc => I,
 Pos: [167, 175, 182] ccc => cc,
 Pos: [170, 176] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 181] cc => I,
 Pos: [179, 184] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [207, 212] cc => I,
 Pos: [209, 213, 219] ccc => cc,
 Pos: [214, 221] cc => I]
Change: 41, Saving: 41

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 8] cc => I
Apply:  Pos: [17, 21] cc => I
Apply:  Pos: [18, 23] cc => I
Apply:  Pos: [22, 31] cc => I
Apply:  Pos: [38, 50] cc => I
Apply:  Pos: [39, 43] cc => I
Apply:  Pos: [51, 62] cc => I
Apply:  Pos: [53, 61] cc => I
Apply:  Pos: [72, 76] cc => I
Apply:  Pos: [66, 68] cc => I
Apply:  Pos: [67, 79] cc => I
Apply:  Pos: [84, 97] cc => I
Apply:  Pos: [83, 90] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [89, 91, 100] ccc => cc
Apply:  Pos: [95, 102] cc => I
Apply:  Pos: [96, 104] cc => I
Apply:  Pos: [116, 121] cc => I
Apply:  Pos: [105, 111] cc => I
Apply:  Pos: [108, 113] cc => I
Apply:  Pos: [120, 126] cc => I
Apply:  Pos: [123, 132] cc => I
Apply:  Pos: [124, 134] cc => I
Apply:  Pos: [125, 130] cc => I
Apply:  Pos: [129, 136] cc => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [145, 158, 160] ccc => cc
Apply:  Pos: [152, 157] cc => I
Apply:  Pos: [148, 164] cc => I
Apply:  Pos: [150, 155] cc => I
Apply:  Pos: [165, 171] cc => I
Apply:  Pos: [167, 175, 182] ccc => cc
Apply:  Pos: [170, 176] cc => I
Apply:  Pos: [173, 178] cc => I
Apply:  Pos: [177, 181] cc => I
Apply:  Pos: [179, 184] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [200, 210] cc => I
Apply:  Pos: [207, 212] cc => I
Apply:  Pos: [209, 213, 219] ccc => cc
Apply:  Pos: [214, 221] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [8, 9], [12, 11], [16, 4], [18, 4], [3, 9], [12, 10], [19, 17], [5, 12], [16, 4], [10, 4], [14, 0], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [3, 9], [18, 4], [17, 6], [14, 19], [5, 12], [18, 16], [11, 19], [12, 11], [3, 9], [16, 7], [14, 0], [4, 17], [2, 8], [19, 6], [10, 4], [10, 17], [17, 3], [19, 15], [6, 8], [8, 9], [13, 18], [4, 3], [18, 16], [10, 17], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [1, 14], [2, 9], [10, 4], [12, 11], [4, 3], [5, 12], [11, 19], [17, 6], [1, 14], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 16], [12, 11], [1, 11], [3, 9], [14, 19], [10, 3], [2, 9], [4, 7], [18, 16], [1, 11], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [12, 13], [19, 15], [3, 9], [14, 19], [4, 7], [2, 9], [19, 17], [12, 13], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  4.312498092651367

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 29]
[30, 34]
[37, 53]
[49, 57]
[56, 82]
[79, 87]
[109, 116]
[116, 133]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 16, 40]
[98, 110, 112]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[60, 63, 64]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 29]
[30, 34]
[37, 53]
[49, 57]
[56, 82]
[79, 87]
[109, 116]
[116, 133]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4687976837158203

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 16, 40] ccc => cc, Pos: [21, 29] cc => I, Pos: [21, 29] cc => I, Pos: [30, 34] cc => I, Pos: [30, 34] cc => I, Pos: [37, 53] cc => I, Pos: [37, 53] cc => I, Pos: [49, 57] cc => I, Pos: [49, 57] cc => I, Pos: [56, 82] cc => I, Pos: [56, 82] cc => I, Pos: [60, 63, 64] ccc => cc, Pos: [79, 87] cc => I, Pos: [79, 87] cc => I, Pos: [98, 110, 112] ccc => cc, Pos: [109, 116] cc => I, Pos: [109, 116] cc => I, Pos: [116, 133] cc => I, Pos: [116, 133] cc => I]

--------End Timer [Generate Plans]:  0.031265974044799805

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 16, 40] ccc => cc,
 Pos: [21, 29] cc => I,
 Pos: [30, 34] cc => I,
 Pos: [37, 53] cc => I,
 Pos: [49, 57] cc => I,
 Pos: [56, 82] cc => I,
 Pos: [60, 63, 64] ccc => cc,
 Pos: [79, 87] cc => I,
 Pos: [98, 110, 112] ccc => cc,
 Pos: [109, 116] cc => I]
Change: 10, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 16, 40] ccc => cc
Apply:  Pos: [21, 29] cc => I
Apply:  Pos: [30, 34] cc => I
Apply:  Pos: [37, 53] cc => I
Apply:  Pos: [49, 57] cc => I
Apply:  Pos: [56, 82] cc => I
Apply:  Pos: [60, 63, 64] ccc => cc
Apply:  Pos: [79, 87] cc => I
Apply:  Pos: [98, 110, 112] ccc => cc
Apply:  Pos: [109, 116] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 15], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [18, 4], [16, 4], [12, 10], [19, 17], [10, 4], [16, 4], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [16, 7], [14, 0], [10, 4], [2, 8], [19, 6], [4, 17], [17, 3], [19, 15], [6, 8], [8, 9], [13, 18], [4, 3], [18, 16], [10, 17], [2, 8], [13, 10], [19, 6], [6, 8], [3, 8], [12, 10], [2, 9], [10, 4], [4, 3], [5, 12], [11, 19], [17, 6], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 16], [1, 11], [12, 11], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [1, 11], [6, 8], [10, 4], [3, 2], [18, 7], [16, 7], [19, 15], [3, 9], [4, 7], [2, 9], [19, 17], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [17, 3], [4, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.50006365776062

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[82, 89]
[77, 99]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[82, 89]
[77, 99]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0936925411224365

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [77, 99] cc => I, Pos: [77, 99] cc => I, Pos: [82, 89] cc => I, Pos: [82, 89] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [77, 99] cc => I, Pos: [82, 89] cc => I]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [77, 99] cc => I
Apply:  Pos: [82, 89] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 15], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [16, 4], [18, 4], [12, 10], [19, 17], [16, 4], [10, 4], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [16, 7], [14, 0], [10, 4], [2, 8], [19, 6], [4, 17], [17, 3], [19, 15], [6, 8], [8, 9], [13, 18], [4, 3], [18, 16], [10, 17], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [2, 9], [10, 4], [4, 3], [5, 12], [11, 19], [17, 3], [15, 6], [17, 6], [5, 1], [16, 4], [7, 2], [13, 16], [12, 11], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.0936925411224365

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[80, 102]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[80, 102]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.015716314315796

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [80, 102] cc => I, Pos: [80, 102] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [80, 102] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [80, 102] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 15], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [18, 4], [16, 4], [12, 10], [19, 17], [10, 4], [16, 4], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [16, 7], [14, 0], [10, 4], [2, 8], [19, 6], [4, 17], [17, 3], [19, 15], [6, 8], [8, 9], [13, 18], [4, 3], [18, 16], [10, 17], [2, 8], [13, 10], [19, 6], [6, 8], [3, 8], [12, 10], [2, 9], [10, 4], [4, 3], [5, 12], [11, 19], [17, 3], [17, 6], [15, 6], [5, 1], [16, 4], [7, 2], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [18, 7], [16, 7], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [17, 3], [4, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.015716314315796

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9843122959136963

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 15], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [16, 4], [18, 4], [12, 10], [19, 17], [16, 4], [10, 4], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [16, 7], [14, 0], [10, 4], [2, 8], [19, 6], [4, 17], [17, 3], [19, 15], [6, 8], [8, 9], [13, 18], [4, 3], [18, 16], [10, 17], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [2, 9], [10, 4], [4, 3], [5, 12], [11, 19], [17, 6], [17, 3], [15, 6], [5, 1], [16, 4], [7, 2], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  1.9843122959136963

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [124] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 248

Reduced: 
 - size: 101 (44.89%)
 - depth: 13 (28.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07812023162841797

[17, 3], [19, 15], [18, 4], [11, 10], [8, 9], [16, 7], [10, 17], [14, 0], [8, 9], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [17, 3], [18, 7], [13, 11], [0, 15], [17, 3], [19, 15], [18, 7], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [17, 3], [13, 18], [19, 15], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [19, 15], [17, 6], [8, 9], [12, 11], [16, 4], [17, 6], [18, 4], [3, 9], [12, 10], [19, 17], [5, 12], [16, 4], [19, 15], [5, 12], [10, 4], [6, 8], [14, 0], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [6, 8], [5, 12], [1, 19], [0, 15], [3, 9], [2, 8], [5, 1], [2, 8], [18, 4], [17, 6], [14, 19], [3, 9], [5, 12], [18, 16], [11, 19], [3, 9], [12, 11], [3, 9], [5, 1], [16, 7], [14, 0], [4, 17], [11, 14], [16, 7], [2, 8], [19, 6], [10, 4], [5, 1], [17, 3], [11, 14], [10, 3], [19, 15], [6, 8], [5, 1], [14, 19], [0, 15], [16, 7], [8, 9], [13, 18], [10, 17], [4, 3], [14, 19], [18, 16], [0, 15], [4, 7], [10, 17], [2, 8], [1, 14], [13, 10], [19, 6], [4, 7], [3, 8], [1, 14], [6, 8], [12, 10], [13, 18], [1, 14], [2, 9], [10, 4], [17, 15], [13, 18], [12, 11], [5, 1], [7, 2], [11, 14], [17, 15], [4, 3], [5, 12], [4, 3], [11, 14], [18, 16], [5, 1], [11, 19], [7, 2], [17, 6], [4, 3], [18, 16], [1, 14], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 18], [12, 11], [1, 11], [17, 15], [3, 9], [5, 12], [14, 19], [1, 11], [10, 3], [2, 9], [5, 12], [4, 7], [1, 11], [18, 16], [1, 11], [13, 18], [6, 8], [10, 4], [3, 2], [17, 15], [1, 11], [16, 7], [18, 4], [12, 13], [19, 15], [2, 8], [1, 11], [3, 9], [17, 6], [14, 19], [4, 7], [2, 8], [13, 11], [17, 6], [0, 15], [2, 9], [13, 11], [18, 4], [19, 17], [0, 15], [12, 13], [17, 3], [7, 2], [18, 16], [13, 18], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [13, 18], [3, 8], [4, 17], [11, 10], [18, 7], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [2, 9], [14, 0], [1, 11], [18, 7], [15, 6], [2, 9], [5, 1], [13, 18], [0, 15], [14, 19], [16, 7], [5, 12], [1, 11], [4, 3], [13, 18], [17, 3], [1, 14], [16, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 8]
[17, 21]
[18, 23]
[21, 29]
[22, 31]
[31, 38]
[39, 43]
[38, 50]
[48, 51]
[50, 55]
[53, 61]
[51, 62]
[66, 68]
[65, 72]
[62, 73]
[72, 76]
[76, 78]
[67, 79]
[80, 84]
[68, 85]
[79, 88]
[83, 90]
[88, 94]
[84, 97]
[95, 102]
[96, 104]
[100, 106]
[105, 111]
[108, 113]
[113, 117]
[116, 121]
[120, 126]
[127, 129]
[125, 130]
[123, 132]
[124, 134]
[129, 136]
[131, 137]
[134, 144]
[147, 152]
[150, 155]
[152, 157]
[157, 159]
[148, 164]
[159, 165]
[165, 171]
[170, 176]
[173, 178]
[177, 181]
[179, 184]
[189, 196]
[200, 210]
[207, 212]
[214, 221]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[99, 103, 116]
[132, 138, 141]
[145, 158, 160]
[167, 175, 182]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[209, 213, 219]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[89, 91, 100]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 8]
[17, 21]
[18, 23]
[21, 29]
[22, 31]
[31, 38]
[39, 43]
[38, 50]
[48, 51]
[50, 55]
[53, 61]
[51, 62]
[66, 68]
[65, 72]
[62, 73]
[72, 76]
[76, 78]
[67, 79]
[80, 84]
[68, 85]
[79, 88]
[83, 90]
[88, 94]
[84, 97]
[95, 102]
[96, 104]
[100, 106]
[105, 111]
[108, 113]
[113, 117]
[116, 121]
[120, 126]
[127, 129]
[125, 130]
[123, 132]
[124, 134]
[129, 136]
[131, 137]
[134, 144]
[147, 152]
[150, 155]
[152, 157]
[157, 159]
[148, 164]
[159, 165]
[165, 171]
[170, 176]
[173, 178]
[177, 181]
[179, 184]
[189, 196]
[200, 210]
[207, 212]
[214, 221]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.234314680099487

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 8] cc => I, Pos: [4, 8] cc => I, Pos: [17, 21] cc => I, Pos: [17, 21] cc => I, Pos: [18, 23] cc => I, Pos: [18, 23] cc => I, Pos: [21, 29] cc => I, Pos: [21, 29] cc => I, Pos: [22, 31] cc => I, Pos: [22, 31] cc => I, Pos: [31, 38] cc => I, Pos: [31, 38] cc => I, Pos: [38, 50] cc => I, Pos: [38, 50] cc => I, Pos: [39, 43] cc => I, Pos: [39, 43] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [50, 55] cc => I, Pos: [50, 55] cc => I, Pos: [51, 62] cc => I, Pos: [51, 62] cc => I, Pos: [53, 61] cc => I, Pos: [53, 61] cc => I, Pos: [62, 73] cc => I, Pos: [62, 73] cc => I, Pos: [65, 72] cc => I, Pos: [65, 72] cc => I, Pos: [66, 68] cc => I, Pos: [66, 68] cc => I, Pos: [67, 79] cc => I, Pos: [67, 79] cc => I, Pos: [68, 85] cc => I, Pos: [68, 85] cc => I, Pos: [72, 76] cc => I, Pos: [72, 76] cc => I, Pos: [76, 78] cc => I, Pos: [76, 78] cc => I, Pos: [79, 88] cc => I, Pos: [79, 88] cc => I, Pos: [80, 84] cc => I, Pos: [80, 84] cc => I, Pos: [83, 90] cc => I, Pos: [83, 90] cc => I, Pos: [84, 97] cc => I, Pos: [84, 97] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 91, 100] ccc => cc, Pos: [95, 102] cc => I, Pos: [95, 102] cc => I, Pos: [96, 104] cc => I, Pos: [96, 104] cc => I, Pos: [99, 103, 116] ccc => cc, Pos: [100, 106] cc => I, Pos: [100, 106] cc => I, Pos: [105, 111] cc => I, Pos: [105, 111] cc => I, Pos: [108, 113] cc => I, Pos: [108, 113] cc => I, Pos: [113, 117] cc => I, Pos: [113, 117] cc => I, Pos: [116, 121] cc => I, Pos: [116, 121] cc => I, Pos: [120, 126] cc => I, Pos: [120, 126] cc => I, Pos: [123, 132] cc => I, Pos: [123, 132] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [125, 130] cc => I, Pos: [125, 130] cc => I, Pos: [127, 129] cc => I, Pos: [127, 129] cc => I, Pos: [129, 136] cc => I, Pos: [129, 136] cc => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [132, 138, 141] ccc => cc, Pos: [134, 144] cc => I, Pos: [134, 144] cc => I, Pos: [145, 158, 160] ccc => cc, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [150, 155] cc => I, Pos: [150, 155] cc => I, Pos: [152, 157] cc => I, Pos: [152, 157] cc => I, Pos: [157, 159] cc => I, Pos: [157, 159] cc => I, Pos: [159, 165] cc => I, Pos: [159, 165] cc => I, Pos: [165, 171] cc => I, Pos: [165, 171] cc => I, Pos: [167, 175, 182] ccc => cc, Pos: [170, 176] cc => I, Pos: [170, 176] cc => I, Pos: [173, 178] cc => I, Pos: [173, 178] cc => I, Pos: [177, 181] cc => I, Pos: [177, 181] cc => I, Pos: [179, 184] cc => I, Pos: [179, 184] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [200, 210] cc => I, Pos: [200, 210] cc => I, Pos: [207, 212] cc => I, Pos: [207, 212] cc => I, Pos: [209, 213, 219] ccc => cc, Pos: [214, 221] cc => I, Pos: [214, 221] cc => I]

--------End Timer [Generate Plans]:  0.10936856269836426

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 8] cc => I,
 Pos: [21, 29] cc => I,
 Pos: [18, 23] cc => I,
 Pos: [31, 38] cc => I,
 Pos: [39, 43] cc => I,
 Pos: [51, 62] cc => I,
 Pos: [50, 55] cc => I,
 Pos: [53, 61] cc => I,
 Pos: [72, 76] cc => I,
 Pos: [66, 68] cc => I,
 Pos: [79, 88] cc => I,
 Pos: [80, 84] cc => I,
 Pos: [83, 90] cc => I,
 Pos: [100, 106] cc => I,
 Pos: [95, 102] cc => I,
 Pos: [96, 104] cc => I,
 Pos: [116, 121] cc => I,
 Pos: [105, 111] cc => I,
 Pos: [108, 113] cc => I,
 Pos: [120, 126] cc => I,
 Pos: [123, 132] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [125, 130] cc => I,
 Pos: [127, 129] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [145, 158, 160] ccc => cc,
 Pos: [147, 152] cc => I,
 Pos: [148, 164] cc => I,
 Pos: [150, 155] cc => I,
 Pos: [159, 165] cc => I,
 Pos: [167, 175, 182] ccc => cc,
 Pos: [170, 176] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 181] cc => I,
 Pos: [179, 184] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [207, 212] cc => I,
 Pos: [209, 213, 219] ccc => cc,
 Pos: [214, 221] cc => I]
Change: 40, Saving: 40

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 8] cc => I
Apply:  Pos: [21, 29] cc => I
Apply:  Pos: [18, 23] cc => I
Apply:  Pos: [31, 38] cc => I
Apply:  Pos: [39, 43] cc => I
Apply:  Pos: [51, 62] cc => I
Apply:  Pos: [50, 55] cc => I
Apply:  Pos: [53, 61] cc => I
Apply:  Pos: [72, 76] cc => I
Apply:  Pos: [66, 68] cc => I
Apply:  Pos: [79, 88] cc => I
Apply:  Pos: [80, 84] cc => I
Apply:  Pos: [83, 90] cc => I
Apply:  Pos: [100, 106] cc => I
Apply:  Pos: [95, 102] cc => I
Apply:  Pos: [96, 104] cc => I
Apply:  Pos: [116, 121] cc => I
Apply:  Pos: [105, 111] cc => I
Apply:  Pos: [108, 113] cc => I
Apply:  Pos: [120, 126] cc => I
Apply:  Pos: [123, 132] cc => I
Apply:  Pos: [124, 134] cc => I
Apply:  Pos: [125, 130] cc => I
Apply:  Pos: [127, 129] cc => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [145, 158, 160] ccc => cc
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [148, 164] cc => I
Apply:  Pos: [150, 155] cc => I
Apply:  Pos: [159, 165] cc => I
Apply:  Pos: [167, 175, 182] ccc => cc
Apply:  Pos: [170, 176] cc => I
Apply:  Pos: [173, 178] cc => I
Apply:  Pos: [177, 181] cc => I
Apply:  Pos: [179, 184] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [200, 210] cc => I
Apply:  Pos: [207, 212] cc => I
Apply:  Pos: [209, 213, 219] ccc => cc
Apply:  Pos: [214, 221] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [17, 3], [13, 11], [0, 15], [19, 15], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [8, 9], [12, 11], [16, 4], [18, 4], [3, 9], [12, 10], [19, 17], [5, 12], [16, 4], [10, 4], [14, 0], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [3, 9], [5, 1], [18, 4], [17, 6], [14, 19], [5, 12], [18, 16], [11, 19], [12, 11], [3, 9], [14, 0], [4, 17], [2, 8], [19, 6], [10, 4], [17, 3], [10, 3], [19, 15], [6, 8], [5, 1], [16, 7], [8, 9], [13, 18], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [1, 14], [2, 9], [10, 4], [12, 11], [5, 12], [11, 19], [17, 6], [4, 3], [1, 14], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 16], [12, 11], [3, 9], [14, 19], [10, 3], [2, 9], [4, 7], [1, 11], [18, 16], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [12, 13], [19, 15], [1, 11], [3, 9], [14, 19], [4, 7], [2, 9], [19, 17], [12, 13], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  4.343683242797852

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[23, 30]
[31, 35]
[38, 54]
[49, 58]
[50, 68]
[57, 83]
[80, 88]
[102, 111]
[109, 117]
[117, 134]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[98, 110, 113]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[23, 30]
[31, 35]
[38, 54]
[49, 58]
[50, 68]
[57, 83]
[80, 88]
[102, 111]
[109, 117]
[117, 134]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.515591621398926

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [23, 30] cc => I, Pos: [23, 30] cc => I, Pos: [31, 35] cc => I, Pos: [31, 35] cc => I, Pos: [38, 54] cc => I, Pos: [38, 54] cc => I, Pos: [49, 58] cc => I, Pos: [49, 58] cc => I, Pos: [50, 68] cc => I, Pos: [50, 68] cc => I, Pos: [57, 83] cc => I, Pos: [57, 83] cc => I, Pos: [80, 88] cc => I, Pos: [80, 88] cc => I, Pos: [98, 110, 113] ccc => cc, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [109, 117] cc => I, Pos: [109, 117] cc => I, Pos: [117, 134] cc => I, Pos: [117, 134] cc => I]

--------End Timer [Generate Plans]:  0.03124856948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [23, 30] cc => I,
 Pos: [31, 35] cc => I,
 Pos: [38, 54] cc => I,
 Pos: [49, 58] cc => I,
 Pos: [50, 68] cc => I,
 Pos: [57, 83] cc => I,
 Pos: [80, 88] cc => I,
 Pos: [98, 110, 113] ccc => cc,
 Pos: [102, 111] cc => I,
 Pos: [117, 134] cc => I]
Change: 10, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [23, 30] cc => I
Apply:  Pos: [31, 35] cc => I
Apply:  Pos: [38, 54] cc => I
Apply:  Pos: [49, 58] cc => I
Apply:  Pos: [50, 68] cc => I
Apply:  Pos: [57, 83] cc => I
Apply:  Pos: [80, 88] cc => I
Apply:  Pos: [98, 110, 113] ccc => cc
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [117, 134] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [17, 3], [13, 11], [19, 15], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [18, 4], [16, 4], [12, 10], [19, 17], [10, 4], [16, 4], [14, 0], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [14, 0], [4, 17], [2, 8], [19, 6], [10, 4], [10, 3], [17, 3], [19, 15], [6, 8], [16, 7], [8, 9], [13, 18], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [6, 8], [3, 8], [12, 10], [2, 9], [10, 4], [5, 12], [11, 19], [17, 6], [4, 3], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 16], [12, 11], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [18, 7], [16, 7], [12, 13], [19, 15], [3, 9], [4, 7], [2, 9], [19, 17], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [17, 3], [4, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.546840190887451

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 53]
[78, 99]
[82, 106]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 53]
[78, 99]
[82, 106]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.078181505203247

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [38, 53] cc => I, Pos: [38, 53] cc => I, Pos: [78, 99] cc => I, Pos: [78, 99] cc => I, Pos: [82, 106] cc => I, Pos: [82, 106] cc => I]

--------End Timer [Generate Plans]:  0.016501426696777344

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [38, 53] cc => I, Pos: [78, 99] cc => I, Pos: [82, 106] cc => I]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [38, 53] cc => I
Apply:  Pos: [78, 99] cc => I
Apply:  Pos: [82, 106] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [17, 3], [13, 11], [0, 15], [19, 15], [12, 13], [17, 6], [18, 4], [11, 10], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [16, 4], [18, 4], [12, 10], [19, 17], [16, 4], [10, 4], [14, 0], [4, 17], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [14, 0], [4, 17], [2, 8], [19, 6], [10, 4], [17, 3], [19, 15], [6, 8], [16, 7], [8, 9], [13, 18], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [2, 9], [10, 4], [5, 12], [11, 19], [17, 6], [17, 3], [4, 3], [15, 6], [5, 1], [16, 4], [7, 2], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [12, 13], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.0946829319000244

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9684734344482422

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [17, 3], [13, 11], [19, 15], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [18, 4], [16, 4], [12, 10], [19, 17], [10, 4], [16, 4], [14, 0], [4, 17], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [14, 0], [4, 17], [2, 8], [19, 6], [10, 4], [17, 3], [19, 15], [6, 8], [16, 7], [8, 9], [13, 18], [4, 3], [18, 16], [2, 8], [13, 10], [19, 6], [6, 8], [3, 8], [12, 10], [2, 9], [10, 4], [5, 12], [11, 19], [17, 3], [17, 6], [4, 3], [15, 6], [5, 1], [16, 4], [7, 2], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [18, 7], [16, 7], [12, 13], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [17, 3], [4, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  1.9684734344482422

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [123] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 246

Reduced: 
 - size: 102 (45.33%)
 - depth: 13 (28.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09372973442077637

[17, 3], [19, 15], [18, 4], [11, 10], [8, 9], [16, 7], [10, 17], [14, 0], [8, 9], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [17, 3], [18, 7], [13, 11], [0, 15], [17, 3], [19, 15], [18, 7], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [17, 3], [13, 18], [19, 15], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [19, 15], [17, 6], [8, 9], [12, 11], [16, 4], [17, 6], [18, 4], [3, 9], [12, 10], [19, 17], [5, 12], [16, 4], [19, 15], [5, 12], [10, 4], [6, 8], [14, 0], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [6, 8], [5, 12], [1, 19], [0, 15], [3, 9], [2, 8], [5, 1], [2, 8], [18, 4], [17, 6], [14, 19], [3, 9], [5, 12], [18, 16], [11, 19], [3, 9], [12, 11], [3, 9], [5, 1], [16, 7], [14, 0], [4, 17], [11, 14], [16, 7], [2, 8], [19, 6], [10, 4], [5, 1], [17, 3], [11, 14], [10, 3], [19, 15], [6, 8], [5, 1], [14, 19], [0, 15], [16, 7], [8, 9], [13, 18], [10, 17], [4, 3], [14, 19], [18, 16], [0, 15], [4, 7], [10, 17], [2, 8], [1, 14], [13, 10], [19, 6], [4, 7], [3, 8], [1, 14], [6, 8], [12, 10], [13, 18], [1, 14], [2, 9], [10, 4], [17, 15], [13, 18], [12, 11], [5, 1], [7, 2], [11, 14], [17, 15], [4, 3], [5, 12], [4, 3], [11, 14], [18, 16], [5, 1], [11, 19], [7, 2], [17, 6], [4, 3], [18, 16], [1, 14], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 18], [12, 11], [1, 11], [17, 15], [3, 9], [5, 12], [14, 19], [1, 11], [10, 3], [2, 9], [5, 12], [4, 7], [1, 11], [18, 16], [1, 11], [13, 18], [6, 8], [10, 4], [3, 2], [17, 15], [1, 11], [16, 7], [18, 4], [12, 13], [19, 15], [2, 8], [1, 11], [3, 9], [17, 6], [14, 19], [4, 7], [2, 8], [13, 11], [17, 6], [0, 15], [2, 9], [13, 11], [18, 4], [19, 17], [0, 15], [12, 13], [17, 3], [7, 2], [18, 16], [13, 18], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [13, 18], [3, 8], [4, 17], [11, 10], [18, 7], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [2, 9], [14, 0], [1, 11], [18, 7], [15, 6], [2, 9], [5, 1], [13, 18], [0, 15], [14, 19], [16, 7], [5, 12], [1, 11], [4, 3], [13, 18], [17, 3], [1, 14], [16, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 8]
[17, 21]
[18, 23]
[21, 29]
[22, 31]
[31, 38]
[39, 43]
[38, 50]
[48, 51]
[50, 55]
[53, 61]
[51, 62]
[66, 68]
[65, 72]
[62, 73]
[72, 76]
[76, 78]
[67, 79]
[80, 84]
[68, 85]
[79, 88]
[83, 90]
[88, 94]
[84, 97]
[95, 102]
[96, 104]
[100, 106]
[105, 111]
[108, 113]
[113, 117]
[116, 121]
[120, 126]
[127, 129]
[125, 130]
[123, 132]
[124, 134]
[129, 136]
[131, 137]
[134, 144]
[147, 152]
[150, 155]
[152, 157]
[157, 159]
[148, 164]
[159, 165]
[165, 171]
[170, 176]
[173, 178]
[177, 181]
[179, 184]
[189, 196]
[200, 210]
[207, 212]
[214, 221]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[99, 103, 116]
[132, 138, 141]
[145, 158, 160]
[167, 175, 182]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[209, 213, 219]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[89, 91, 100]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 8]
[17, 21]
[18, 23]
[21, 29]
[22, 31]
[31, 38]
[39, 43]
[38, 50]
[48, 51]
[50, 55]
[53, 61]
[51, 62]
[66, 68]
[65, 72]
[62, 73]
[72, 76]
[76, 78]
[67, 79]
[80, 84]
[68, 85]
[79, 88]
[83, 90]
[88, 94]
[84, 97]
[95, 102]
[96, 104]
[100, 106]
[105, 111]
[108, 113]
[113, 117]
[116, 121]
[120, 126]
[127, 129]
[125, 130]
[123, 132]
[124, 134]
[129, 136]
[131, 137]
[134, 144]
[147, 152]
[150, 155]
[152, 157]
[157, 159]
[148, 164]
[159, 165]
[165, 171]
[170, 176]
[173, 178]
[177, 181]
[179, 184]
[189, 196]
[200, 210]
[207, 212]
[214, 221]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.2187299728393555

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 8] cc => I, Pos: [4, 8] cc => I, Pos: [17, 21] cc => I, Pos: [17, 21] cc => I, Pos: [18, 23] cc => I, Pos: [18, 23] cc => I, Pos: [21, 29] cc => I, Pos: [21, 29] cc => I, Pos: [22, 31] cc => I, Pos: [22, 31] cc => I, Pos: [31, 38] cc => I, Pos: [31, 38] cc => I, Pos: [38, 50] cc => I, Pos: [38, 50] cc => I, Pos: [39, 43] cc => I, Pos: [39, 43] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [50, 55] cc => I, Pos: [50, 55] cc => I, Pos: [51, 62] cc => I, Pos: [51, 62] cc => I, Pos: [53, 61] cc => I, Pos: [53, 61] cc => I, Pos: [62, 73] cc => I, Pos: [62, 73] cc => I, Pos: [65, 72] cc => I, Pos: [65, 72] cc => I, Pos: [66, 68] cc => I, Pos: [66, 68] cc => I, Pos: [67, 79] cc => I, Pos: [67, 79] cc => I, Pos: [68, 85] cc => I, Pos: [68, 85] cc => I, Pos: [72, 76] cc => I, Pos: [72, 76] cc => I, Pos: [76, 78] cc => I, Pos: [76, 78] cc => I, Pos: [79, 88] cc => I, Pos: [79, 88] cc => I, Pos: [80, 84] cc => I, Pos: [80, 84] cc => I, Pos: [83, 90] cc => I, Pos: [83, 90] cc => I, Pos: [84, 97] cc => I, Pos: [84, 97] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 91, 100] ccc => cc, Pos: [95, 102] cc => I, Pos: [95, 102] cc => I, Pos: [96, 104] cc => I, Pos: [96, 104] cc => I, Pos: [99, 103, 116] ccc => cc, Pos: [100, 106] cc => I, Pos: [100, 106] cc => I, Pos: [105, 111] cc => I, Pos: [105, 111] cc => I, Pos: [108, 113] cc => I, Pos: [108, 113] cc => I, Pos: [113, 117] cc => I, Pos: [113, 117] cc => I, Pos: [116, 121] cc => I, Pos: [116, 121] cc => I, Pos: [120, 126] cc => I, Pos: [120, 126] cc => I, Pos: [123, 132] cc => I, Pos: [123, 132] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [125, 130] cc => I, Pos: [125, 130] cc => I, Pos: [127, 129] cc => I, Pos: [127, 129] cc => I, Pos: [129, 136] cc => I, Pos: [129, 136] cc => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [132, 138, 141] ccc => cc, Pos: [134, 144] cc => I, Pos: [134, 144] cc => I, Pos: [145, 158, 160] ccc => cc, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [150, 155] cc => I, Pos: [150, 155] cc => I, Pos: [152, 157] cc => I, Pos: [152, 157] cc => I, Pos: [157, 159] cc => I, Pos: [157, 159] cc => I, Pos: [159, 165] cc => I, Pos: [159, 165] cc => I, Pos: [165, 171] cc => I, Pos: [165, 171] cc => I, Pos: [167, 175, 182] ccc => cc, Pos: [170, 176] cc => I, Pos: [170, 176] cc => I, Pos: [173, 178] cc => I, Pos: [173, 178] cc => I, Pos: [177, 181] cc => I, Pos: [177, 181] cc => I, Pos: [179, 184] cc => I, Pos: [179, 184] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [200, 210] cc => I, Pos: [200, 210] cc => I, Pos: [207, 212] cc => I, Pos: [207, 212] cc => I, Pos: [209, 213, 219] ccc => cc, Pos: [214, 221] cc => I, Pos: [214, 221] cc => I]

Plan: 1
[Pos: [4, 8] cc => I,
 Pos: [17, 21] cc => I,
 Pos: [18, 23] cc => I,
 Pos: [22, 31] cc => I,
 Pos: [38, 50] cc => I,
 Pos: [39, 43] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [53, 61] cc => I,
 Pos: [62, 73] cc => I,
 Pos: [65, 72] cc => I,
 Pos: [66, 68] cc => I,
 Pos: [67, 79] cc => I,
 Pos: [76, 78] cc => I,
 Pos: [80, 84] cc => I,
 Pos: [83, 90] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [89, 91, 100] ccc => cc,
 Pos: [95, 102] cc => I,
 Pos: [96, 104] cc => I,
 Pos: [99, 103, 116] ccc => cc,
 Pos: [105, 111] cc => I,
 Pos: [108, 113] cc => I,
 Pos: [120, 126] cc => I,
 Pos: [123, 132] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [125, 130] cc => I,
 Pos: [127, 129] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [145, 158, 160] ccc => cc,
 Pos: [147, 152] cc => I,
 Pos: [148, 164] cc => I,
 Pos: [150, 155] cc => I,
 Pos: [157, 159] cc => I,
 Pos: [165, 171] cc => I,
 Pos: [167, 175, 182] ccc => cc,
 Pos: [170, 176] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 181] cc => I,
 Pos: [179, 184] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [207, 212] cc => I,
 Pos: [209, 213, 219] ccc => cc,
 Pos: [214, 221] cc => I]
Change: 44, Saving: 44

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.10935497283935547

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 8] cc => I,
 Pos: [17, 21] cc => I,
 Pos: [18, 23] cc => I,
 Pos: [22, 31] cc => I,
 Pos: [38, 50] cc => I,
 Pos: [39, 43] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [53, 61] cc => I,
 Pos: [62, 73] cc => I,
 Pos: [65, 72] cc => I,
 Pos: [66, 68] cc => I,
 Pos: [67, 79] cc => I,
 Pos: [76, 78] cc => I,
 Pos: [80, 84] cc => I,
 Pos: [83, 90] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [89, 91, 100] ccc => cc,
 Pos: [95, 102] cc => I,
 Pos: [96, 104] cc => I,
 Pos: [99, 103, 116] ccc => cc,
 Pos: [105, 111] cc => I,
 Pos: [108, 113] cc => I,
 Pos: [120, 126] cc => I,
 Pos: [123, 132] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [125, 130] cc => I,
 Pos: [127, 129] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [145, 158, 160] ccc => cc,
 Pos: [147, 152] cc => I,
 Pos: [148, 164] cc => I,
 Pos: [150, 155] cc => I,
 Pos: [157, 159] cc => I,
 Pos: [165, 171] cc => I,
 Pos: [167, 175, 182] ccc => cc,
 Pos: [170, 176] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 181] cc => I,
 Pos: [179, 184] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [207, 212] cc => I,
 Pos: [209, 213, 219] ccc => cc,
 Pos: [214, 221] cc => I]
Change: 44, Saving: 44

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 8] cc => I
Apply:  Pos: [17, 21] cc => I
Apply:  Pos: [18, 23] cc => I
Apply:  Pos: [22, 31] cc => I
Apply:  Pos: [38, 50] cc => I
Apply:  Pos: [39, 43] cc => I
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [53, 61] cc => I
Apply:  Pos: [62, 73] cc => I
Apply:  Pos: [65, 72] cc => I
Apply:  Pos: [66, 68] cc => I
Apply:  Pos: [67, 79] cc => I
Apply:  Pos: [76, 78] cc => I
Apply:  Pos: [80, 84] cc => I
Apply:  Pos: [83, 90] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [89, 91, 100] ccc => cc
Apply:  Pos: [95, 102] cc => I
Apply:  Pos: [96, 104] cc => I
Apply:  Pos: [99, 103, 116] ccc => cc
Apply:  Pos: [105, 111] cc => I
Apply:  Pos: [108, 113] cc => I
Apply:  Pos: [120, 126] cc => I
Apply:  Pos: [123, 132] cc => I
Apply:  Pos: [124, 134] cc => I
Apply:  Pos: [125, 130] cc => I
Apply:  Pos: [127, 129] cc => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [145, 158, 160] ccc => cc
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [148, 164] cc => I
Apply:  Pos: [150, 155] cc => I
Apply:  Pos: [157, 159] cc => I
Apply:  Pos: [165, 171] cc => I
Apply:  Pos: [167, 175, 182] ccc => cc
Apply:  Pos: [170, 176] cc => I
Apply:  Pos: [173, 178] cc => I
Apply:  Pos: [177, 181] cc => I
Apply:  Pos: [179, 184] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [200, 210] cc => I
Apply:  Pos: [207, 212] cc => I
Apply:  Pos: [209, 213, 219] ccc => cc
Apply:  Pos: [214, 221] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 0], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [8, 9], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [3, 9], [8, 9], [12, 11], [16, 4], [18, 4], [3, 9], [12, 10], [19, 17], [16, 4], [10, 4], [14, 0], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [12, 11], [14, 0], [4, 17], [2, 8], [19, 6], [10, 4], [10, 17], [17, 3], [19, 15], [6, 8], [16, 7], [8, 9], [13, 16], [4, 3], [18, 16], [10, 17], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [1, 14], [2, 9], [10, 4], [13, 18], [12, 11], [5, 12], [11, 19], [17, 6], [4, 3], [1, 14], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 16], [12, 11], [3, 9], [14, 19], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [12, 13], [19, 15], [3, 9], [14, 19], [4, 7], [2, 9], [19, 17], [12, 13], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [12, 11], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  4.328084945678711

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 29]
[30, 34]
[53, 79]
[75, 84]
[104, 111]
[92, 118]
[111, 128]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 16, 39]
[94, 105, 107]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[55, 58, 59]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 29]
[30, 34]
[53, 79]
[75, 84]
[104, 111]
[92, 118]
[111, 128]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.359429359436035

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 16, 39] ccc => cc, Pos: [21, 29] cc => I, Pos: [21, 29] cc => I, Pos: [30, 34] cc => I, Pos: [30, 34] cc => I, Pos: [53, 79] cc => I, Pos: [53, 79] cc => I, Pos: [55, 58, 59] ccc => cc, Pos: [75, 84] cc => I, Pos: [75, 84] cc => I, Pos: [92, 118] cc => I, Pos: [92, 118] cc => I, Pos: [94, 105, 107] ccc => cc, Pos: [104, 111] cc => I, Pos: [104, 111] cc => I, Pos: [111, 128] cc => I, Pos: [111, 128] cc => I]

Plan: 1
[Pos: [6, 16, 39] ccc => cc,
 Pos: [21, 29] cc => I,
 Pos: [30, 34] cc => I,
 Pos: [53, 79] cc => I,
 Pos: [55, 58, 59] ccc => cc,
 Pos: [75, 84] cc => I,
 Pos: [92, 118] cc => I,
 Pos: [94, 105, 107] ccc => cc,
 Pos: [104, 111] cc => I]
Change: 9, Saving: 9

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.031248092651367188

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 16, 39] ccc => cc,
 Pos: [21, 29] cc => I,
 Pos: [30, 34] cc => I,
 Pos: [53, 79] cc => I,
 Pos: [55, 58, 59] ccc => cc,
 Pos: [75, 84] cc => I,
 Pos: [92, 118] cc => I,
 Pos: [94, 105, 107] ccc => cc,
 Pos: [104, 111] cc => I]
Change: 9, Saving: 9

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 16, 39] ccc => cc
Apply:  Pos: [21, 29] cc => I
Apply:  Pos: [30, 34] cc => I
Apply:  Pos: [53, 79] cc => I
Apply:  Pos: [55, 58, 59] ccc => cc
Apply:  Pos: [75, 84] cc => I
Apply:  Pos: [92, 118] cc => I
Apply:  Pos: [94, 105, 107] ccc => cc
Apply:  Pos: [104, 111] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 15], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [18, 4], [16, 4], [12, 10], [19, 17], [10, 4], [16, 4], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [14, 0], [10, 4], [2, 8], [19, 6], [4, 17], [17, 3], [19, 15], [6, 8], [16, 7], [8, 9], [13, 16], [4, 3], [18, 16], [10, 17], [2, 8], [13, 10], [19, 6], [6, 8], [3, 8], [12, 10], [2, 9], [10, 4], [13, 18], [5, 12], [11, 19], [17, 6], [4, 3], [17, 3], [15, 6], [5, 1], [19, 17], [16, 4], [7, 2], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [18, 7], [16, 7], [19, 15], [3, 9], [4, 7], [2, 9], [19, 17], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [17, 3], [4, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.3906774520874023

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[78, 97]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[78, 97]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0312492847442627

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [78, 97] cc => I, Pos: [78, 97] cc => I]

Plan: 1
[Pos: [78, 97] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [78, 97] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [78, 97] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 15], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [16, 4], [18, 4], [12, 10], [19, 17], [16, 4], [10, 4], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [14, 0], [10, 4], [2, 8], [19, 6], [4, 17], [17, 3], [19, 15], [6, 8], [16, 7], [8, 9], [13, 16], [4, 3], [18, 16], [10, 17], [2, 8], [13, 10], [19, 6], [3, 8], [6, 8], [12, 10], [2, 9], [10, 4], [13, 18], [5, 12], [11, 19], [17, 6], [17, 3], [4, 3], [15, 6], [5, 1], [16, 4], [7, 2], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [16, 7], [18, 7], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [4, 3], [17, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  2.0312492847442627

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.968533992767334

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[17, 3], [19, 15], [18, 4], [11, 10], [16, 7], [10, 17], [14, 15], [1, 19], [3, 2], [10, 3], [14, 19], [4, 17], [13, 18], [7, 2], [6, 8], [13, 11], [0, 15], [12, 13], [17, 6], [18, 4], [11, 10], [17, 3], [13, 18], [1, 11], [4, 17], [18, 7], [13, 10], [5, 12], [12, 11], [18, 4], [16, 4], [12, 10], [19, 17], [10, 4], [16, 4], [19, 15], [4, 17], [10, 3], [7, 2], [11, 14], [13, 18], [1, 19], [0, 15], [18, 4], [17, 6], [14, 19], [18, 16], [11, 19], [14, 0], [10, 4], [2, 8], [19, 6], [4, 17], [17, 3], [19, 15], [6, 8], [16, 7], [8, 9], [13, 16], [4, 3], [18, 16], [10, 17], [2, 8], [13, 10], [19, 6], [6, 8], [3, 8], [12, 10], [2, 9], [10, 4], [13, 18], [5, 12], [11, 19], [17, 3], [17, 6], [4, 3], [15, 6], [5, 1], [16, 4], [7, 2], [13, 16], [3, 9], [14, 15], [10, 3], [2, 9], [4, 7], [18, 16], [6, 8], [10, 4], [3, 2], [18, 7], [16, 7], [19, 15], [3, 9], [4, 7], [2, 9], [17, 3], [7, 2], [18, 16], [3, 2], [15, 6], [1, 14], [8, 9], [16, 7], [3, 8], [4, 17], [11, 10], [16, 4], [12, 10], [6, 8], [18, 16], [12, 13], [19, 17], [14, 0], [5, 1], [15, 6], [1, 11], [0, 15], [14, 19], [16, 7], [5, 12], [17, 3], [4, 3], [1, 14], [16, 4], ----End Timer [Execute Mapping]:  1.968533992767334

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [125] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 250

Reduced: 
 - size: 100 (44.44%)
 - depth: 13 (28.89%)

