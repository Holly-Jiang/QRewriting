----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09370541572570801

[15, 7], [13, 5], [10, 16], [11, 17], [19, 6], [7, 1], [18, 2], [8, 11], [6, 12], [10, 16], [1, 18], [10, 16], [8, 13], [17, 0], [14, 15], [7, 1], [19, 6], [17, 0], [16, 2], [8, 7], [10, 16], [5, 17], [15, 11], [14, 3], [8, 13], [18, 2], [15, 7], [17, 19], [3, 1], [10, 16], [13, 17], [5, 0], [15, 8], [3, 1], [10, 19], [16, 2], [8, 13], [18, 16], [9, 6], [8, 13], [14, 3], [18, 2], [7, 1], [0, 9], [13, 5], [3, 7], [16, 2], [1, 18], [13, 0], [1, 4], [8, 7], [16, 2], [13, 5], [18, 16], [0, 9], [15, 8], [13, 0], [15, 7], [3, 18], [10, 19], [9, 12], [13, 17], [19, 12], [1, 4], [5, 0], [18, 16], [3, 7], [13, 0], [11, 19], [3, 18], [15, 8], [13, 0], [1, 4], [2, 6], [11, 17], [10, 19], [3, 7], [8, 13], [1, 18], [11, 17], [10, 16], [19, 6], [14, 15], [8, 13], [18, 16], [17, 10], [9, 12], [3, 1], [15, 11], [8, 13], [1, 4], [15, 11], [5, 0], [16, 2], [8, 13], [5, 17], [7, 18], [9, 12], [4, 16], [11, 10], [8, 13], [9, 6], [11, 10], [17, 19], [3, 7], [13, 0], [1, 18], [11, 17], [17, 0], [13, 5], [6, 12], [18, 2], [15, 11], [19, 9], [3, 7], [11, 17], [9, 6], [7, 1], [15, 8], [10, 16], [15, 11], [10, 19], [9, 6], [16, 2], [3, 7], [13, 0], [11, 10], [16, 2], [17, 19], [3, 18], [14, 15], [18, 10], [8, 11], [1, 4], [3, 7], [16, 2], [19, 9], [7, 18], [10, 16], [13, 5], [7, 11], [3, 1], [18, 2], [8, 13], [7, 11], [14, 3], [10, 16], [17, 19], [8, 13], [8, 11], [4, 16], [1, 18], [13, 5], [19, 6], [14, 3], [8, 11], [19, 9], [5, 17], [1, 4], [6, 12], [18, 10], [8, 11], [17, 0], [10, 2], [19, 12], [14, 15], [8, 11], [10, 19], [3, 18], [17, 0], [16, 2], [9, 6], [8, 13], [6, 12], [18, 2], [11, 19], [5, 17], [8, 13], [15, 11], [18, 10], [8, 13], [6, 12], [11, 17], [19, 9], [18, 16], [3, 7], [14, 15], [13, 0], [17, 19], [7, 11], [10, 2], [13, 0], [7, 1], [10, 19], [18, 2], [17, 0], [4, 16], [15, 8], [10, 19], [13, 0], [3, 18], [7, 1], [15, 11], [17, 10], [13, 0], [8, 11], [19, 9], [17, 10], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [14, 3], [11, 10], [15, 8], [4, 16], [5, 0], [10, 2], [18, 16], [14, 3], [1, 4], [19, 12], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 9]
[9, 11]
[13, 17]
[12, 24]
[20, 29]
[28, 33]
[36, 39]
[46, 51]
[44, 52]
[34, 59]
[49, 63]
[55, 70]
[67, 71]
[63, 72]
[66, 76]
[74, 79]
[77, 83]
[83, 89]
[88, 91]
[89, 94]
[86, 97]
[94, 100]
[99, 102]
[104, 114]
[116, 122]
[123, 127]
[124, 134]
[127, 135]
[109, 139]
[140, 144]
[138, 146]
[143, 148]
[145, 154]
[149, 155]
[155, 161]
[130, 165]
[161, 166]
[162, 169]
[172, 177]
[177, 180]
[173, 181]
[187, 191]
[193, 198]
[192, 201]
[199, 204]
[203, 207]
[207, 213]
[196, 218]
[215, 222]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 8, 16]
[11, 18, 20]
[48, 54, 56]
[58, 65, 69]
[112, 115, 120]
[114, 117, 124]
[128, 136, 147]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[43, 48, 54]
[53, 58, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[170, 174, 184]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 9]
[9, 11]
[13, 17]
[12, 24]
[20, 29]
[28, 33]
[36, 39]
[46, 51]
[44, 52]
[34, 59]
[49, 63]
[55, 70]
[67, 71]
[63, 72]
[66, 76]
[74, 79]
[77, 83]
[83, 89]
[88, 91]
[89, 94]
[86, 97]
[94, 100]
[99, 102]
[104, 114]
[116, 122]
[123, 127]
[124, 134]
[127, 135]
[109, 139]
[140, 144]
[138, 146]
[143, 148]
[145, 154]
[149, 155]
[155, 161]
[130, 165]
[161, 166]
[162, 169]
[172, 177]
[177, 180]
[173, 181]
[187, 191]
[193, 198]
[192, 201]
[199, 204]
[203, 207]
[207, 213]
[196, 218]
[215, 222]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.234426498413086

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 9] cc => I, Pos: [2, 9] cc => I, Pos: [4, 8, 16] ccc => cc, Pos: [9, 11] cc => I, Pos: [9, 11] cc => I, Pos: [11, 18, 20] ccc => cc, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [28, 33] cc => I, Pos: [28, 33] cc => I, Pos: [34, 59] cc => I, Pos: [34, 59] cc => I, Pos: [36, 39] cc => I, Pos: [36, 39] cc => I, Pos: [43, 48, 54] ccc => cc, Pos: [44, 52] cc => I, Pos: [44, 52] cc => I, Pos: [46, 51] cc => I, Pos: [46, 51] cc => I, Pos: [48, 54, 56] ccc => cc, Pos: [49, 63] cc => I, Pos: [49, 63] cc => I, Pos: [53, 58, 65] ccc => cc, Pos: [55, 70] cc => I, Pos: [55, 70] cc => I, Pos: [58, 65, 69] ccc => cc, Pos: [63, 72] cc => I, Pos: [63, 72] cc => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [67, 71] cc => I, Pos: [67, 71] cc => I, Pos: [74, 79] cc => I, Pos: [74, 79] cc => I, Pos: [77, 83] cc => I, Pos: [77, 83] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [86, 97] cc => I, Pos: [86, 97] cc => I, Pos: [88, 91] cc => I, Pos: [88, 91] cc => I, Pos: [89, 94] cc => I, Pos: [89, 94] cc => I, Pos: [94, 100] cc => I, Pos: [94, 100] cc => I, Pos: [99, 102] cc => I, Pos: [99, 102] cc => I, Pos: [104, 114] cc => I, Pos: [104, 114] cc => I, Pos: [109, 139] cc => I, Pos: [109, 139] cc => I, Pos: [112, 115, 120] ccc => cc, Pos: [114, 117, 124] ccc => cc, Pos: [116, 122] cc => I, Pos: [116, 122] cc => I, Pos: [123, 127] cc => I, Pos: [123, 127] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [128, 136, 147] ccc => cc, Pos: [130, 165] cc => I, Pos: [130, 165] cc => I, Pos: [138, 146] cc => I, Pos: [138, 146] cc => I, Pos: [140, 144] cc => I, Pos: [140, 144] cc => I, Pos: [143, 148] cc => I, Pos: [143, 148] cc => I, Pos: [145, 154] cc => I, Pos: [145, 154] cc => I, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [161, 166] cc => I, Pos: [161, 166] cc => I, Pos: [162, 169] cc => I, Pos: [162, 169] cc => I, Pos: [170, 174, 184] ccc => cc, Pos: [172, 177] cc => I, Pos: [172, 177] cc => I, Pos: [173, 181] cc => I, Pos: [173, 181] cc => I, Pos: [177, 180] cc => I, Pos: [177, 180] cc => I, Pos: [187, 191] cc => I, Pos: [187, 191] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [193, 198] cc => I, Pos: [193, 198] cc => I, Pos: [196, 218] cc => I, Pos: [196, 218] cc => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [203, 207] cc => I, Pos: [203, 207] cc => I, Pos: [207, 213] cc => I, Pos: [207, 213] cc => I, Pos: [215, 222] cc => I, Pos: [215, 222] cc => I]

Plan: 1
[Pos: [2, 9] cc => I,
 Pos: [4, 8, 16] ccc => cc,
 Pos: [11, 18, 20] ccc => cc,
 Pos: [12, 24] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [28, 33] cc => I,
 Pos: [34, 59] cc => I,
 Pos: [36, 39] cc => I,
 Pos: [43, 48, 54] ccc => cc,
 Pos: [44, 52] cc => I,
 Pos: [46, 51] cc => I,
 Pos: [49, 63] cc => I,
 Pos: [53, 58, 65] ccc => cc,
 Pos: [55, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [67, 71] cc => I,
 Pos: [74, 79] cc => I,
 Pos: [77, 83] cc => I,
 Pos: [86, 97] cc => I,
 Pos: [88, 91] cc => I,
 Pos: [89, 94] cc => I,
 Pos: [99, 102] cc => I,
 Pos: [104, 114] cc => I,
 Pos: [109, 139] cc => I,
 Pos: [112, 115, 120] ccc => cc,
 Pos: [116, 122] cc => I,
 Pos: [123, 127] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [128, 136, 147] ccc => cc,
 Pos: [130, 165] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 148] cc => I,
 Pos: [145, 154] cc => I,
 Pos: [149, 155] cc => I,
 Pos: [161, 166] cc => I,
 Pos: [162, 169] cc => I,
 Pos: [170, 174, 184] ccc => cc,
 Pos: [172, 177] cc => I,
 Pos: [173, 181] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 198] cc => I,
 Pos: [196, 218] cc => I,
 Pos: [199, 204] cc => I,
 Pos: [203, 207] cc => I,
 Pos: [215, 222] cc => I]
Change: 47, Saving: 174

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 9] cc => I,
 Pos: [4, 8, 16] ccc => cc,
 Pos: [11, 18, 20] ccc => cc,
 Pos: [12, 24] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [28, 33] cc => I,
 Pos: [34, 59] cc => I,
 Pos: [36, 39] cc => I,
 Pos: [43, 48, 54] ccc => cc,
 Pos: [44, 52] cc => I,
 Pos: [46, 51] cc => I,
 Pos: [49, 63] cc => I,
 Pos: [53, 58, 65] ccc => cc,
 Pos: [55, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [67, 71] cc => I,
 Pos: [74, 79] cc => I,
 Pos: [77, 83] cc => I,
 Pos: [86, 97] cc => I,
 Pos: [88, 91] cc => I,
 Pos: [89, 94] cc => I,
 Pos: [99, 102] cc => I,
 Pos: [104, 114] cc => I,
 Pos: [109, 139] cc => I,
 Pos: [112, 115, 120] ccc => cc,
 Pos: [116, 122] cc => I,
 Pos: [123, 127] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [128, 136, 147] ccc => cc,
 Pos: [130, 165] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 148] cc => I,
 Pos: [145, 154] cc => I,
 Pos: [149, 155] cc => I,
 Pos: [161, 166] cc => I,
 Pos: [162, 169] cc => I,
 Pos: [170, 174, 184] ccc => cc,
 Pos: [172, 177] cc => I,
 Pos: [173, 181] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 198] cc => I,
 Pos: [196, 218] cc => I,
 Pos: [199, 204] cc => I,
 Pos: [203, 207] cc => I,
 Pos: [215, 222] cc => I]
Change: 47, Saving: 174

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 9] cc => I
Apply:  Pos: [4, 8, 16] ccc => cc
Apply:  Pos: [11, 18, 20] ccc => cc
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [28, 33] cc => I
Apply:  Pos: [34, 59] cc => I
Apply:  Pos: [36, 39] cc => I
Apply:  Pos: [43, 48, 54] ccc => cc
Apply:  Pos: [44, 52] cc => I
Apply:  Pos: [46, 51] cc => I
Apply:  Pos: [49, 63] cc => I
Apply:  Pos: [53, 58, 65] ccc => cc
Apply:  Pos: [55, 70] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [67, 71] cc => I
Apply:  Pos: [74, 79] cc => I
Apply:  Pos: [77, 83] cc => I
Apply:  Pos: [86, 97] cc => I
Apply:  Pos: [88, 91] cc => I
Apply:  Pos: [89, 94] cc => I
Apply:  Pos: [99, 102] cc => I
Apply:  Pos: [104, 114] cc => I
Apply:  Pos: [109, 139] cc => I
Apply:  Pos: [112, 115, 120] ccc => cc
Apply:  Pos: [116, 122] cc => I
Apply:  Pos: [123, 127] cc => I
Apply:  Pos: [124, 134] cc => I
Apply:  Pos: [128, 136, 147] ccc => cc
Apply:  Pos: [130, 165] cc => I
Apply:  Pos: [138, 146] cc => I
Apply:  Pos: [140, 144] cc => I
Apply:  Pos: [143, 148] cc => I
Apply:  Pos: [145, 154] cc => I
Apply:  Pos: [149, 155] cc => I
Apply:  Pos: [161, 166] cc => I
Apply:  Pos: [162, 169] cc => I
Apply:  Pos: [170, 174, 184] ccc => cc
Apply:  Pos: [172, 177] cc => I
Apply:  Pos: [173, 181] cc => I
Apply:  Pos: [187, 191] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [193, 198] cc => I
Apply:  Pos: [196, 218] cc => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [203, 207] cc => I
Apply:  Pos: [215, 222] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 2], [14, 15], [7, 1], [16, 2], [8, 7], [5, 17], [15, 11], [14, 3], [18, 2], [15, 7], [17, 19], [10, 16], [13, 17], [5, 0], [15, 8], [16, 2], [18, 16], [9, 6], [14, 3], [18, 2], [7, 1], [13, 0], [3, 7], [1, 18], [0, 9], [8, 7], [3, 18], [13, 0], [15, 7], [18, 16], [9, 12], [13, 17], [19, 12], [5, 0], [11, 19], [3, 18], [1, 4], [2, 6], [10, 19], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [5, 0], [16, 2], [5, 17], [7, 18], [4, 16], [8, 13], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 16], [10, 19], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [16, 2], [19, 9], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [19, 9], [5, 17], [1, 4], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [16, 2], [11, 19], [5, 17], [15, 11], [18, 10], [8, 13], [11, 17], [19, 9], [3, 7], [14, 15], [17, 19], [7, 11], [10, 2], [18, 2], [17, 0], [15, 8], [3, 18], [15, 11], [8, 11], [19, 9], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [1, 4], [19, 12], ----End Timer [Execute Mapping]:  4.234426498413086

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[16, 27]
[21, 40]
[42, 56]
[85, 92]
[94, 106]
[95, 136]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[30, 33, 36]
[35, 38, 44]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[111, 114, 123]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[13, 18, 23]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[16, 27]
[21, 40]
[42, 56]
[85, 92]
[94, 106]
[95, 136]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.2968385219573975

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [13, 18, 23] ccc => cc, Pos: [16, 27] cc => I, Pos: [16, 27] cc => I, Pos: [21, 40] cc => I, Pos: [21, 40] cc => I, Pos: [30, 33, 36] ccc => cc, Pos: [35, 38, 44] ccc => cc, Pos: [42, 56] cc => I, Pos: [42, 56] cc => I, Pos: [85, 92] cc => I, Pos: [85, 92] cc => I, Pos: [94, 106] cc => I, Pos: [94, 106] cc => I, Pos: [95, 136] cc => I, Pos: [95, 136] cc => I, Pos: [111, 114, 123] ccc => cc]

Plan: 1
[Pos: [13, 18, 23] ccc => cc,
 Pos: [16, 27] cc => I,
 Pos: [21, 40] cc => I,
 Pos: [30, 33, 36] ccc => cc,
 Pos: [35, 38, 44] ccc => cc,
 Pos: [42, 56] cc => I,
 Pos: [85, 92] cc => I,
 Pos: [94, 106] cc => I,
 Pos: [95, 136] cc => I,
 Pos: [111, 114, 123] ccc => cc]
Change: 10, Saving: 32

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [13, 18, 23] ccc => cc,
 Pos: [16, 27] cc => I,
 Pos: [21, 40] cc => I,
 Pos: [30, 33, 36] ccc => cc,
 Pos: [35, 38, 44] ccc => cc,
 Pos: [42, 56] cc => I,
 Pos: [85, 92] cc => I,
 Pos: [94, 106] cc => I,
 Pos: [95, 136] cc => I,
 Pos: [111, 114, 123] ccc => cc]
Change: 10, Saving: 32

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [13, 18, 23] ccc => cc
Apply:  Pos: [16, 27] cc => I
Apply:  Pos: [21, 40] cc => I
Apply:  Pos: [30, 33, 36] ccc => cc
Apply:  Pos: [35, 38, 44] ccc => cc
Apply:  Pos: [42, 56] cc => I
Apply:  Pos: [85, 92] cc => I
Apply:  Pos: [94, 106] cc => I
Apply:  Pos: [95, 136] cc => I
Apply:  Pos: [111, 114, 123] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 2], [14, 15], [7, 1], [16, 2], [15, 8], [5, 17], [15, 11], [18, 2], [8, 7], [17, 19], [10, 16], [5, 0], [16, 2], [18, 16], [9, 6], [18, 2], [7, 1], [13, 9], [3, 7], [1, 18], [0, 9], [8, 7], [3, 16], [15, 7], [18, 16], [9, 12], [19, 12], [11, 19], [1, 4], [2, 6], [10, 19], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [16, 2], [5, 17], [7, 18], [4, 16], [8, 13], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 19], [10, 16], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [16, 2], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [16, 2], [11, 19], [15, 11], [18, 10], [8, 13], [11, 17], [17, 19], [3, 7], [14, 15], [19, 9], [7, 11], [18, 2], [10, 2], [17, 0], [15, 8], [3, 18], [8, 11], [15, 11], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [19, 12], ----End Timer [Execute Mapping]:  2.2968385219573975

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9531481266021729

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 2], [14, 15], [7, 1], [16, 2], [15, 8], [5, 17], [15, 11], [18, 2], [8, 7], [17, 19], [10, 16], [5, 0], [16, 2], [18, 16], [9, 6], [18, 2], [7, 1], [13, 9], [3, 7], [1, 18], [0, 9], [8, 7], [3, 16], [15, 7], [18, 16], [19, 12], [9, 12], [11, 19], [1, 4], [2, 6], [10, 19], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [16, 2], [5, 17], [7, 18], [4, 16], [8, 13], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 16], [10, 19], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [16, 2], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [16, 2], [11, 19], [15, 11], [18, 10], [8, 13], [11, 17], [17, 19], [3, 7], [14, 15], [19, 9], [7, 11], [10, 2], [18, 2], [17, 0], [15, 8], [3, 18], [15, 11], [8, 11], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [19, 12], ----End Timer [Execute Mapping]:  1.9531481266021729

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [122] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 244

Reduced: 
 - size: 103 (45.78%)
 - cycle: 206 (45.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09399294853210449

[15, 7], [13, 5], [10, 16], [11, 17], [19, 6], [7, 1], [18, 2], [8, 11], [6, 12], [10, 16], [1, 18], [10, 16], [8, 13], [17, 0], [14, 15], [7, 1], [19, 6], [17, 0], [16, 2], [8, 7], [10, 16], [5, 17], [15, 11], [14, 3], [8, 13], [18, 2], [15, 7], [17, 19], [3, 1], [10, 16], [13, 17], [5, 0], [15, 8], [3, 1], [10, 19], [16, 2], [8, 13], [18, 16], [9, 6], [8, 13], [14, 3], [18, 2], [7, 1], [0, 9], [13, 5], [3, 7], [16, 2], [1, 18], [13, 0], [1, 4], [8, 7], [16, 2], [13, 5], [18, 16], [0, 9], [15, 8], [13, 0], [15, 7], [3, 18], [10, 19], [9, 12], [13, 17], [19, 12], [1, 4], [5, 0], [18, 16], [3, 7], [13, 0], [11, 19], [3, 18], [15, 8], [13, 0], [1, 4], [2, 6], [11, 17], [10, 19], [3, 7], [8, 13], [1, 18], [11, 17], [10, 16], [19, 6], [14, 15], [8, 13], [18, 16], [17, 10], [9, 12], [3, 1], [15, 11], [8, 13], [1, 4], [15, 11], [5, 0], [16, 2], [8, 13], [5, 17], [7, 18], [9, 12], [4, 16], [11, 10], [8, 13], [9, 6], [11, 10], [17, 19], [3, 7], [13, 0], [1, 18], [11, 17], [17, 0], [13, 5], [6, 12], [18, 2], [15, 11], [19, 9], [3, 7], [11, 17], [9, 6], [7, 1], [15, 8], [10, 16], [15, 11], [10, 19], [9, 6], [16, 2], [3, 7], [13, 0], [11, 10], [16, 2], [17, 19], [3, 18], [14, 15], [18, 10], [8, 11], [1, 4], [3, 7], [16, 2], [19, 9], [7, 18], [10, 16], [13, 5], [7, 11], [3, 1], [18, 2], [8, 13], [7, 11], [14, 3], [10, 16], [17, 19], [8, 13], [8, 11], [4, 16], [1, 18], [13, 5], [19, 6], [14, 3], [8, 11], [19, 9], [5, 17], [1, 4], [6, 12], [18, 10], [8, 11], [17, 0], [10, 2], [19, 12], [14, 15], [8, 11], [10, 19], [3, 18], [17, 0], [16, 2], [9, 6], [8, 13], [6, 12], [18, 2], [11, 19], [5, 17], [8, 13], [15, 11], [18, 10], [8, 13], [6, 12], [11, 17], [19, 9], [18, 16], [3, 7], [14, 15], [13, 0], [17, 19], [7, 11], [10, 2], [13, 0], [7, 1], [10, 19], [18, 2], [17, 0], [4, 16], [15, 8], [10, 19], [13, 0], [3, 18], [7, 1], [15, 11], [17, 10], [13, 0], [8, 11], [19, 9], [17, 10], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [14, 3], [11, 10], [15, 8], [4, 16], [5, 0], [10, 2], [18, 16], [14, 3], [1, 4], [19, 12], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 9]
[9, 11]
[13, 17]
[12, 24]
[20, 29]
[28, 33]
[36, 39]
[46, 51]
[44, 52]
[34, 59]
[49, 63]
[55, 70]
[67, 71]
[63, 72]
[66, 76]
[74, 79]
[77, 83]
[83, 89]
[88, 91]
[89, 94]
[86, 97]
[94, 100]
[99, 102]
[104, 114]
[116, 122]
[123, 127]
[124, 134]
[127, 135]
[109, 139]
[140, 144]
[138, 146]
[143, 148]
[145, 154]
[149, 155]
[155, 161]
[130, 165]
[161, 166]
[162, 169]
[172, 177]
[177, 180]
[173, 181]
[187, 191]
[193, 198]
[192, 201]
[199, 204]
[203, 207]
[207, 213]
[196, 218]
[215, 222]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 8, 16]
[11, 18, 20]
[48, 54, 56]
[58, 65, 69]
[112, 115, 120]
[114, 117, 124]
[128, 136, 147]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[43, 48, 54]
[53, 58, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[170, 174, 184]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 9]
[9, 11]
[13, 17]
[12, 24]
[20, 29]
[28, 33]
[36, 39]
[46, 51]
[44, 52]
[34, 59]
[49, 63]
[55, 70]
[67, 71]
[63, 72]
[66, 76]
[74, 79]
[77, 83]
[83, 89]
[88, 91]
[89, 94]
[86, 97]
[94, 100]
[99, 102]
[104, 114]
[116, 122]
[123, 127]
[124, 134]
[127, 135]
[109, 139]
[140, 144]
[138, 146]
[143, 148]
[145, 154]
[149, 155]
[155, 161]
[130, 165]
[161, 166]
[162, 169]
[172, 177]
[177, 180]
[173, 181]
[187, 191]
[193, 198]
[192, 201]
[199, 204]
[203, 207]
[207, 213]
[196, 218]
[215, 222]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.187288045883179

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 9] cc => I, Pos: [2, 9] cc => I, Pos: [4, 8, 16] ccc => cc, Pos: [9, 11] cc => I, Pos: [9, 11] cc => I, Pos: [11, 18, 20] ccc => cc, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [28, 33] cc => I, Pos: [28, 33] cc => I, Pos: [34, 59] cc => I, Pos: [34, 59] cc => I, Pos: [36, 39] cc => I, Pos: [36, 39] cc => I, Pos: [43, 48, 54] ccc => cc, Pos: [44, 52] cc => I, Pos: [44, 52] cc => I, Pos: [46, 51] cc => I, Pos: [46, 51] cc => I, Pos: [48, 54, 56] ccc => cc, Pos: [49, 63] cc => I, Pos: [49, 63] cc => I, Pos: [53, 58, 65] ccc => cc, Pos: [55, 70] cc => I, Pos: [55, 70] cc => I, Pos: [58, 65, 69] ccc => cc, Pos: [63, 72] cc => I, Pos: [63, 72] cc => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [67, 71] cc => I, Pos: [67, 71] cc => I, Pos: [74, 79] cc => I, Pos: [74, 79] cc => I, Pos: [77, 83] cc => I, Pos: [77, 83] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [86, 97] cc => I, Pos: [86, 97] cc => I, Pos: [88, 91] cc => I, Pos: [88, 91] cc => I, Pos: [89, 94] cc => I, Pos: [89, 94] cc => I, Pos: [94, 100] cc => I, Pos: [94, 100] cc => I, Pos: [99, 102] cc => I, Pos: [99, 102] cc => I, Pos: [104, 114] cc => I, Pos: [104, 114] cc => I, Pos: [109, 139] cc => I, Pos: [109, 139] cc => I, Pos: [112, 115, 120] ccc => cc, Pos: [114, 117, 124] ccc => cc, Pos: [116, 122] cc => I, Pos: [116, 122] cc => I, Pos: [123, 127] cc => I, Pos: [123, 127] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [128, 136, 147] ccc => cc, Pos: [130, 165] cc => I, Pos: [130, 165] cc => I, Pos: [138, 146] cc => I, Pos: [138, 146] cc => I, Pos: [140, 144] cc => I, Pos: [140, 144] cc => I, Pos: [143, 148] cc => I, Pos: [143, 148] cc => I, Pos: [145, 154] cc => I, Pos: [145, 154] cc => I, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [161, 166] cc => I, Pos: [161, 166] cc => I, Pos: [162, 169] cc => I, Pos: [162, 169] cc => I, Pos: [170, 174, 184] ccc => cc, Pos: [172, 177] cc => I, Pos: [172, 177] cc => I, Pos: [173, 181] cc => I, Pos: [173, 181] cc => I, Pos: [177, 180] cc => I, Pos: [177, 180] cc => I, Pos: [187, 191] cc => I, Pos: [187, 191] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [193, 198] cc => I, Pos: [193, 198] cc => I, Pos: [196, 218] cc => I, Pos: [196, 218] cc => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [203, 207] cc => I, Pos: [203, 207] cc => I, Pos: [207, 213] cc => I, Pos: [207, 213] cc => I, Pos: [215, 222] cc => I, Pos: [215, 222] cc => I]

Plan: 1
[Pos: [2, 9] cc => I,
 Pos: [4, 8, 16] ccc => cc,
 Pos: [11, 18, 20] ccc => cc,
 Pos: [12, 24] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [28, 33] cc => I,
 Pos: [34, 59] cc => I,
 Pos: [36, 39] cc => I,
 Pos: [43, 48, 54] ccc => cc,
 Pos: [44, 52] cc => I,
 Pos: [46, 51] cc => I,
 Pos: [49, 63] cc => I,
 Pos: [53, 58, 65] ccc => cc,
 Pos: [55, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [67, 71] cc => I,
 Pos: [74, 79] cc => I,
 Pos: [77, 83] cc => I,
 Pos: [86, 97] cc => I,
 Pos: [88, 91] cc => I,
 Pos: [89, 94] cc => I,
 Pos: [99, 102] cc => I,
 Pos: [104, 114] cc => I,
 Pos: [109, 139] cc => I,
 Pos: [112, 115, 120] ccc => cc,
 Pos: [116, 122] cc => I,
 Pos: [123, 127] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [128, 136, 147] ccc => cc,
 Pos: [130, 165] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 148] cc => I,
 Pos: [145, 154] cc => I,
 Pos: [149, 155] cc => I,
 Pos: [161, 166] cc => I,
 Pos: [162, 169] cc => I,
 Pos: [170, 174, 184] ccc => cc,
 Pos: [172, 177] cc => I,
 Pos: [173, 181] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 198] cc => I,
 Pos: [196, 218] cc => I,
 Pos: [199, 204] cc => I,
 Pos: [203, 207] cc => I,
 Pos: [215, 222] cc => I]
Change: 47, Saving: 48

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.10961031913757324

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 9] cc => I,
 Pos: [4, 8, 16] ccc => cc,
 Pos: [11, 18, 20] ccc => cc,
 Pos: [12, 24] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [28, 33] cc => I,
 Pos: [34, 59] cc => I,
 Pos: [36, 39] cc => I,
 Pos: [43, 48, 54] ccc => cc,
 Pos: [44, 52] cc => I,
 Pos: [46, 51] cc => I,
 Pos: [49, 63] cc => I,
 Pos: [53, 58, 65] ccc => cc,
 Pos: [55, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [67, 71] cc => I,
 Pos: [74, 79] cc => I,
 Pos: [77, 83] cc => I,
 Pos: [86, 97] cc => I,
 Pos: [88, 91] cc => I,
 Pos: [89, 94] cc => I,
 Pos: [99, 102] cc => I,
 Pos: [104, 114] cc => I,
 Pos: [109, 139] cc => I,
 Pos: [112, 115, 120] ccc => cc,
 Pos: [116, 122] cc => I,
 Pos: [123, 127] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [128, 136, 147] ccc => cc,
 Pos: [130, 165] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 148] cc => I,
 Pos: [145, 154] cc => I,
 Pos: [149, 155] cc => I,
 Pos: [161, 166] cc => I,
 Pos: [162, 169] cc => I,
 Pos: [170, 174, 184] ccc => cc,
 Pos: [172, 177] cc => I,
 Pos: [173, 181] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 198] cc => I,
 Pos: [196, 218] cc => I,
 Pos: [199, 204] cc => I,
 Pos: [203, 207] cc => I,
 Pos: [215, 222] cc => I]
Change: 47, Saving: 48

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 9] cc => I
Apply:  Pos: [4, 8, 16] ccc => cc
Apply:  Pos: [11, 18, 20] ccc => cc
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [28, 33] cc => I
Apply:  Pos: [34, 59] cc => I
Apply:  Pos: [36, 39] cc => I
Apply:  Pos: [43, 48, 54] ccc => cc
Apply:  Pos: [44, 52] cc => I
Apply:  Pos: [46, 51] cc => I
Apply:  Pos: [49, 63] cc => I
Apply:  Pos: [53, 58, 65] ccc => cc
Apply:  Pos: [55, 70] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [67, 71] cc => I
Apply:  Pos: [74, 79] cc => I
Apply:  Pos: [77, 83] cc => I
Apply:  Pos: [86, 97] cc => I
Apply:  Pos: [88, 91] cc => I
Apply:  Pos: [89, 94] cc => I
Apply:  Pos: [99, 102] cc => I
Apply:  Pos: [104, 114] cc => I
Apply:  Pos: [109, 139] cc => I
Apply:  Pos: [112, 115, 120] ccc => cc
Apply:  Pos: [116, 122] cc => I
Apply:  Pos: [123, 127] cc => I
Apply:  Pos: [124, 134] cc => I
Apply:  Pos: [128, 136, 147] ccc => cc
Apply:  Pos: [130, 165] cc => I
Apply:  Pos: [138, 146] cc => I
Apply:  Pos: [140, 144] cc => I
Apply:  Pos: [143, 148] cc => I
Apply:  Pos: [145, 154] cc => I
Apply:  Pos: [149, 155] cc => I
Apply:  Pos: [161, 166] cc => I
Apply:  Pos: [162, 169] cc => I
Apply:  Pos: [170, 174, 184] ccc => cc
Apply:  Pos: [172, 177] cc => I
Apply:  Pos: [173, 181] cc => I
Apply:  Pos: [187, 191] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [193, 198] cc => I
Apply:  Pos: [196, 218] cc => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [203, 207] cc => I
Apply:  Pos: [215, 222] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 2], [14, 15], [7, 1], [16, 2], [8, 7], [5, 17], [15, 11], [14, 3], [18, 2], [15, 7], [17, 19], [10, 16], [13, 17], [5, 0], [15, 8], [16, 2], [18, 16], [9, 6], [14, 3], [18, 2], [7, 1], [13, 0], [3, 7], [1, 18], [0, 9], [8, 7], [3, 18], [13, 0], [15, 7], [18, 16], [9, 12], [13, 17], [19, 12], [5, 0], [11, 19], [3, 18], [1, 4], [2, 6], [10, 19], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [5, 0], [16, 2], [5, 17], [7, 18], [4, 16], [8, 13], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 16], [10, 19], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [16, 2], [19, 9], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [19, 9], [5, 17], [1, 4], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [16, 2], [11, 19], [5, 17], [15, 11], [18, 10], [8, 13], [11, 17], [19, 9], [3, 7], [14, 15], [17, 19], [7, 11], [10, 2], [18, 2], [17, 0], [15, 8], [3, 18], [15, 11], [8, 11], [19, 9], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [1, 4], [19, 12], ----End Timer [Execute Mapping]:  4.296898365020752

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[16, 27]
[21, 40]
[42, 56]
[85, 92]
[94, 106]
[95, 136]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[30, 33, 36]
[35, 38, 44]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[111, 114, 123]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[13, 18, 23]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[16, 27]
[21, 40]
[42, 56]
[85, 92]
[94, 106]
[95, 136]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.2810752391815186

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [13, 18, 23] ccc => cc, Pos: [16, 27] cc => I, Pos: [16, 27] cc => I, Pos: [21, 40] cc => I, Pos: [21, 40] cc => I, Pos: [30, 33, 36] ccc => cc, Pos: [35, 38, 44] ccc => cc, Pos: [42, 56] cc => I, Pos: [42, 56] cc => I, Pos: [85, 92] cc => I, Pos: [85, 92] cc => I, Pos: [94, 106] cc => I, Pos: [94, 106] cc => I, Pos: [95, 136] cc => I, Pos: [95, 136] cc => I, Pos: [111, 114, 123] ccc => cc]

Plan: 1
[Pos: [13, 18, 23] ccc => cc,
 Pos: [16, 27] cc => I,
 Pos: [21, 40] cc => I,
 Pos: [30, 33, 36] ccc => cc,
 Pos: [35, 38, 44] ccc => cc,
 Pos: [42, 56] cc => I,
 Pos: [85, 92] cc => I,
 Pos: [94, 106] cc => I,
 Pos: [95, 136] cc => I,
 Pos: [111, 114, 123] ccc => cc]
Change: 10, Saving: 10

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015623807907104492

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [13, 18, 23] ccc => cc,
 Pos: [16, 27] cc => I,
 Pos: [21, 40] cc => I,
 Pos: [30, 33, 36] ccc => cc,
 Pos: [35, 38, 44] ccc => cc,
 Pos: [42, 56] cc => I,
 Pos: [85, 92] cc => I,
 Pos: [94, 106] cc => I,
 Pos: [95, 136] cc => I,
 Pos: [111, 114, 123] ccc => cc]
Change: 10, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [13, 18, 23] ccc => cc
Apply:  Pos: [16, 27] cc => I
Apply:  Pos: [21, 40] cc => I
Apply:  Pos: [30, 33, 36] ccc => cc
Apply:  Pos: [35, 38, 44] ccc => cc
Apply:  Pos: [42, 56] cc => I
Apply:  Pos: [85, 92] cc => I
Apply:  Pos: [94, 106] cc => I
Apply:  Pos: [95, 136] cc => I
Apply:  Pos: [111, 114, 123] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 2], [14, 15], [7, 1], [16, 2], [15, 8], [5, 17], [15, 11], [18, 2], [8, 7], [17, 19], [10, 16], [5, 0], [16, 2], [18, 16], [9, 6], [18, 2], [7, 1], [13, 9], [3, 7], [1, 18], [0, 9], [8, 7], [3, 16], [15, 7], [18, 16], [9, 12], [19, 12], [11, 19], [1, 4], [2, 6], [10, 19], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [16, 2], [5, 17], [7, 18], [4, 16], [8, 13], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 19], [10, 16], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [16, 2], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [16, 2], [11, 19], [15, 11], [18, 10], [8, 13], [11, 17], [17, 19], [3, 7], [14, 15], [19, 9], [7, 11], [18, 2], [10, 2], [17, 0], [15, 8], [3, 18], [8, 11], [15, 11], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [19, 12], ----End Timer [Execute Mapping]:  2.296699047088623

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9053993225097656

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 2], [14, 15], [7, 1], [16, 2], [15, 8], [5, 17], [15, 11], [18, 2], [8, 7], [17, 19], [10, 16], [5, 0], [16, 2], [18, 16], [9, 6], [18, 2], [7, 1], [13, 9], [3, 7], [1, 18], [0, 9], [8, 7], [3, 16], [15, 7], [18, 16], [19, 12], [9, 12], [11, 19], [1, 4], [2, 6], [10, 19], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [16, 2], [5, 17], [7, 18], [4, 16], [8, 13], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 16], [10, 19], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [16, 2], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [16, 2], [11, 19], [15, 11], [18, 10], [8, 13], [11, 17], [17, 19], [3, 7], [14, 15], [19, 9], [7, 11], [10, 2], [18, 2], [17, 0], [15, 8], [3, 18], [15, 11], [8, 11], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [19, 12], ----End Timer [Execute Mapping]:  1.9053993225097656

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [122] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 244

Reduced: 
 - size: 103 (45.78%)
 - depth: 11 (24.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09401941299438477

[15, 7], [13, 5], [10, 16], [11, 17], [19, 6], [7, 1], [18, 2], [8, 11], [6, 12], [10, 16], [1, 18], [10, 16], [8, 13], [17, 0], [14, 15], [7, 1], [19, 6], [17, 0], [16, 2], [8, 7], [10, 16], [5, 17], [15, 11], [14, 3], [8, 13], [18, 2], [15, 7], [17, 19], [3, 1], [10, 16], [13, 17], [5, 0], [15, 8], [3, 1], [10, 19], [16, 2], [8, 13], [18, 16], [9, 6], [8, 13], [14, 3], [18, 2], [7, 1], [0, 9], [13, 5], [3, 7], [16, 2], [1, 18], [13, 0], [1, 4], [8, 7], [16, 2], [13, 5], [18, 16], [0, 9], [15, 8], [13, 0], [15, 7], [3, 18], [10, 19], [9, 12], [13, 17], [19, 12], [1, 4], [5, 0], [18, 16], [3, 7], [13, 0], [11, 19], [3, 18], [15, 8], [13, 0], [1, 4], [2, 6], [11, 17], [10, 19], [3, 7], [8, 13], [1, 18], [11, 17], [10, 16], [19, 6], [14, 15], [8, 13], [18, 16], [17, 10], [9, 12], [3, 1], [15, 11], [8, 13], [1, 4], [15, 11], [5, 0], [16, 2], [8, 13], [5, 17], [7, 18], [9, 12], [4, 16], [11, 10], [8, 13], [9, 6], [11, 10], [17, 19], [3, 7], [13, 0], [1, 18], [11, 17], [17, 0], [13, 5], [6, 12], [18, 2], [15, 11], [19, 9], [3, 7], [11, 17], [9, 6], [7, 1], [15, 8], [10, 16], [15, 11], [10, 19], [9, 6], [16, 2], [3, 7], [13, 0], [11, 10], [16, 2], [17, 19], [3, 18], [14, 15], [18, 10], [8, 11], [1, 4], [3, 7], [16, 2], [19, 9], [7, 18], [10, 16], [13, 5], [7, 11], [3, 1], [18, 2], [8, 13], [7, 11], [14, 3], [10, 16], [17, 19], [8, 13], [8, 11], [4, 16], [1, 18], [13, 5], [19, 6], [14, 3], [8, 11], [19, 9], [5, 17], [1, 4], [6, 12], [18, 10], [8, 11], [17, 0], [10, 2], [19, 12], [14, 15], [8, 11], [10, 19], [3, 18], [17, 0], [16, 2], [9, 6], [8, 13], [6, 12], [18, 2], [11, 19], [5, 17], [8, 13], [15, 11], [18, 10], [8, 13], [6, 12], [11, 17], [19, 9], [18, 16], [3, 7], [14, 15], [13, 0], [17, 19], [7, 11], [10, 2], [13, 0], [7, 1], [10, 19], [18, 2], [17, 0], [4, 16], [15, 8], [10, 19], [13, 0], [3, 18], [7, 1], [15, 11], [17, 10], [13, 0], [8, 11], [19, 9], [17, 10], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [14, 3], [11, 10], [15, 8], [4, 16], [5, 0], [10, 2], [18, 16], [14, 3], [1, 4], [19, 12], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 9]
[9, 11]
[13, 17]
[12, 24]
[20, 29]
[28, 33]
[36, 39]
[46, 51]
[44, 52]
[34, 59]
[49, 63]
[55, 70]
[67, 71]
[63, 72]
[66, 76]
[74, 79]
[77, 83]
[83, 89]
[88, 91]
[89, 94]
[86, 97]
[94, 100]
[99, 102]
[104, 114]
[116, 122]
[123, 127]
[124, 134]
[127, 135]
[109, 139]
[140, 144]
[138, 146]
[143, 148]
[145, 154]
[149, 155]
[155, 161]
[130, 165]
[161, 166]
[162, 169]
[172, 177]
[177, 180]
[173, 181]
[187, 191]
[193, 198]
[192, 201]
[199, 204]
[203, 207]
[207, 213]
[196, 218]
[215, 222]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 8, 16]
[11, 18, 20]
[48, 54, 56]
[58, 65, 69]
[112, 115, 120]
[114, 117, 124]
[128, 136, 147]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[43, 48, 54]
[53, 58, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[170, 174, 184]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 9]
[9, 11]
[13, 17]
[12, 24]
[20, 29]
[28, 33]
[36, 39]
[46, 51]
[44, 52]
[34, 59]
[49, 63]
[55, 70]
[67, 71]
[63, 72]
[66, 76]
[74, 79]
[77, 83]
[83, 89]
[88, 91]
[89, 94]
[86, 97]
[94, 100]
[99, 102]
[104, 114]
[116, 122]
[123, 127]
[124, 134]
[127, 135]
[109, 139]
[140, 144]
[138, 146]
[143, 148]
[145, 154]
[149, 155]
[155, 161]
[130, 165]
[161, 166]
[162, 169]
[172, 177]
[177, 180]
[173, 181]
[187, 191]
[193, 198]
[192, 201]
[199, 204]
[203, 207]
[207, 213]
[196, 218]
[215, 222]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.173139333724976

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 9] cc => I, Pos: [2, 9] cc => I, Pos: [4, 8, 16] ccc => cc, Pos: [9, 11] cc => I, Pos: [9, 11] cc => I, Pos: [11, 18, 20] ccc => cc, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [28, 33] cc => I, Pos: [28, 33] cc => I, Pos: [34, 59] cc => I, Pos: [34, 59] cc => I, Pos: [36, 39] cc => I, Pos: [36, 39] cc => I, Pos: [43, 48, 54] ccc => cc, Pos: [44, 52] cc => I, Pos: [44, 52] cc => I, Pos: [46, 51] cc => I, Pos: [46, 51] cc => I, Pos: [48, 54, 56] ccc => cc, Pos: [49, 63] cc => I, Pos: [49, 63] cc => I, Pos: [53, 58, 65] ccc => cc, Pos: [55, 70] cc => I, Pos: [55, 70] cc => I, Pos: [58, 65, 69] ccc => cc, Pos: [63, 72] cc => I, Pos: [63, 72] cc => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [67, 71] cc => I, Pos: [67, 71] cc => I, Pos: [74, 79] cc => I, Pos: [74, 79] cc => I, Pos: [77, 83] cc => I, Pos: [77, 83] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [86, 97] cc => I, Pos: [86, 97] cc => I, Pos: [88, 91] cc => I, Pos: [88, 91] cc => I, Pos: [89, 94] cc => I, Pos: [89, 94] cc => I, Pos: [94, 100] cc => I, Pos: [94, 100] cc => I, Pos: [99, 102] cc => I, Pos: [99, 102] cc => I, Pos: [104, 114] cc => I, Pos: [104, 114] cc => I, Pos: [109, 139] cc => I, Pos: [109, 139] cc => I, Pos: [112, 115, 120] ccc => cc, Pos: [114, 117, 124] ccc => cc, Pos: [116, 122] cc => I, Pos: [116, 122] cc => I, Pos: [123, 127] cc => I, Pos: [123, 127] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [128, 136, 147] ccc => cc, Pos: [130, 165] cc => I, Pos: [130, 165] cc => I, Pos: [138, 146] cc => I, Pos: [138, 146] cc => I, Pos: [140, 144] cc => I, Pos: [140, 144] cc => I, Pos: [143, 148] cc => I, Pos: [143, 148] cc => I, Pos: [145, 154] cc => I, Pos: [145, 154] cc => I, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [161, 166] cc => I, Pos: [161, 166] cc => I, Pos: [162, 169] cc => I, Pos: [162, 169] cc => I, Pos: [170, 174, 184] ccc => cc, Pos: [172, 177] cc => I, Pos: [172, 177] cc => I, Pos: [173, 181] cc => I, Pos: [173, 181] cc => I, Pos: [177, 180] cc => I, Pos: [177, 180] cc => I, Pos: [187, 191] cc => I, Pos: [187, 191] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [193, 198] cc => I, Pos: [193, 198] cc => I, Pos: [196, 218] cc => I, Pos: [196, 218] cc => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [203, 207] cc => I, Pos: [203, 207] cc => I, Pos: [207, 213] cc => I, Pos: [207, 213] cc => I, Pos: [215, 222] cc => I, Pos: [215, 222] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 11] cc => I,
 Pos: [4, 8, 16] ccc => cc,
 Pos: [12, 24] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [20, 29] cc => I,
 Pos: [28, 33] cc => I,
 Pos: [34, 59] cc => I,
 Pos: [36, 39] cc => I,
 Pos: [43, 48, 54] ccc => cc,
 Pos: [44, 52] cc => I,
 Pos: [46, 51] cc => I,
 Pos: [63, 72] cc => I,
 Pos: [58, 65, 69] ccc => cc,
 Pos: [55, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [67, 71] cc => I,
 Pos: [74, 79] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [86, 97] cc => I,
 Pos: [88, 91] cc => I,
 Pos: [94, 100] cc => I,
 Pos: [99, 102] cc => I,
 Pos: [104, 114] cc => I,
 Pos: [109, 139] cc => I,
 Pos: [112, 115, 120] ccc => cc,
 Pos: [116, 122] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [128, 136, 147] ccc => cc,
 Pos: [130, 165] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 148] cc => I,
 Pos: [145, 154] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [162, 169] cc => I,
 Pos: [170, 174, 184] ccc => cc,
 Pos: [172, 177] cc => I,
 Pos: [173, 181] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 198] cc => I,
 Pos: [196, 218] cc => I,
 Pos: [199, 204] cc => I,
 Pos: [207, 213] cc => I,
 Pos: [215, 222] cc => I]
Change: 46, Saving: 172

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 11] cc => I
Apply:  Pos: [4, 8, 16] ccc => cc
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [28, 33] cc => I
Apply:  Pos: [34, 59] cc => I
Apply:  Pos: [36, 39] cc => I
Apply:  Pos: [43, 48, 54] ccc => cc
Apply:  Pos: [44, 52] cc => I
Apply:  Pos: [46, 51] cc => I
Apply:  Pos: [63, 72] cc => I
Apply:  Pos: [58, 65, 69] ccc => cc
Apply:  Pos: [55, 70] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [67, 71] cc => I
Apply:  Pos: [74, 79] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [86, 97] cc => I
Apply:  Pos: [88, 91] cc => I
Apply:  Pos: [94, 100] cc => I
Apply:  Pos: [99, 102] cc => I
Apply:  Pos: [104, 114] cc => I
Apply:  Pos: [109, 139] cc => I
Apply:  Pos: [112, 115, 120] ccc => cc
Apply:  Pos: [116, 122] cc => I
Apply:  Pos: [127, 135] cc => I
Apply:  Pos: [124, 134] cc => I
Apply:  Pos: [128, 136, 147] ccc => cc
Apply:  Pos: [130, 165] cc => I
Apply:  Pos: [138, 146] cc => I
Apply:  Pos: [140, 144] cc => I
Apply:  Pos: [143, 148] cc => I
Apply:  Pos: [145, 154] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [162, 169] cc => I
Apply:  Pos: [170, 174, 184] ccc => cc
Apply:  Pos: [172, 177] cc => I
Apply:  Pos: [173, 181] cc => I
Apply:  Pos: [187, 191] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [193, 198] cc => I
Apply:  Pos: [196, 218] cc => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [207, 213] cc => I
Apply:  Pos: [215, 222] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [10, 16], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [14, 15], [7, 1], [16, 2], [8, 7], [5, 17], [15, 11], [14, 3], [18, 2], [15, 7], [17, 19], [13, 17], [5, 0], [15, 8], [16, 2], [18, 16], [9, 6], [14, 3], [18, 2], [7, 1], [13, 0], [3, 7], [1, 18], [0, 9], [1, 4], [8, 7], [18, 16], [13, 0], [15, 7], [3, 16], [9, 12], [13, 17], [19, 12], [5, 0], [18, 16], [11, 19], [2, 6], [10, 19], [8, 13], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [5, 0], [16, 2], [5, 17], [7, 18], [4, 16], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 16], [10, 19], [16, 2], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [19, 9], [7, 18], [3, 1], [18, 2], [8, 11], [4, 16], [1, 18], [13, 5], [19, 6], [19, 9], [5, 17], [1, 4], [6, 12], [18, 10], [10, 2], [19, 12], [8, 11], [10, 19], [3, 18], [18, 16], [9, 6], [16, 2], [11, 19], [5, 17], [15, 11], [18, 10], [8, 13], [11, 17], [19, 9], [3, 7], [14, 15], [17, 19], [7, 11], [10, 2], [18, 2], [17, 0], [15, 8], [3, 18], [15, 11], [17, 10], [8, 11], [19, 9], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [1, 4], [19, 12], ----End Timer [Execute Mapping]:  4.173139333724976

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[16, 26]
[20, 40]
[42, 56]
[82, 88]
[84, 92]
[88, 100]
[94, 107]
[95, 137]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[29, 32, 36]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[112, 115, 125]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[13, 18, 22]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[16, 26]
[20, 40]
[42, 56]
[82, 88]
[84, 92]
[88, 100]
[94, 107]
[95, 137]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.26578426361084

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [13, 18, 22] ccc => cc, Pos: [16, 26] cc => I, Pos: [16, 26] cc => I, Pos: [20, 40] cc => I, Pos: [20, 40] cc => I, Pos: [29, 32, 36] ccc => cc, Pos: [42, 56] cc => I, Pos: [42, 56] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [84, 92] cc => I, Pos: [84, 92] cc => I, Pos: [88, 100] cc => I, Pos: [88, 100] cc => I, Pos: [94, 107] cc => I, Pos: [94, 107] cc => I, Pos: [95, 137] cc => I, Pos: [95, 137] cc => I, Pos: [112, 115, 125] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [13, 18, 22] ccc => cc,
 Pos: [16, 26] cc => I,
 Pos: [20, 40] cc => I,
 Pos: [29, 32, 36] ccc => cc,
 Pos: [42, 56] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [84, 92] cc => I,
 Pos: [94, 107] cc => I,
 Pos: [95, 137] cc => I,
 Pos: [112, 115, 125] ccc => cc]
Change: 10, Saving: 34

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [13, 18, 22] ccc => cc
Apply:  Pos: [16, 26] cc => I
Apply:  Pos: [20, 40] cc => I
Apply:  Pos: [29, 32, 36] ccc => cc
Apply:  Pos: [42, 56] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [84, 92] cc => I
Apply:  Pos: [94, 107] cc => I
Apply:  Pos: [95, 137] cc => I
Apply:  Pos: [112, 115, 125] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [10, 16], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [14, 15], [7, 1], [16, 2], [15, 8], [5, 17], [15, 11], [18, 2], [8, 7], [17, 19], [5, 0], [16, 2], [18, 16], [9, 6], [18, 2], [7, 1], [13, 9], [3, 7], [1, 18], [0, 9], [1, 4], [8, 7], [18, 16], [15, 7], [3, 16], [9, 12], [19, 12], [18, 16], [11, 19], [2, 6], [10, 19], [8, 13], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [16, 2], [5, 17], [7, 18], [4, 16], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 19], [10, 16], [16, 2], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [1, 4], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [6, 12], [18, 10], [10, 2], [19, 12], [8, 11], [10, 19], [3, 18], [18, 16], [9, 6], [16, 2], [11, 19], [15, 11], [18, 10], [8, 13], [11, 17], [17, 19], [3, 7], [14, 15], [19, 9], [7, 11], [18, 2], [10, 2], [17, 0], [15, 8], [3, 18], [15, 11], [17, 10], [8, 11], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [19, 12], ----End Timer [Execute Mapping]:  2.26578426361084

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9227724075317383

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [10, 16], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [14, 15], [7, 1], [16, 2], [15, 8], [5, 17], [15, 11], [18, 2], [8, 7], [17, 19], [5, 0], [16, 2], [18, 16], [9, 6], [18, 2], [7, 1], [13, 9], [3, 7], [1, 18], [0, 9], [1, 4], [8, 7], [18, 16], [15, 7], [3, 16], [19, 12], [9, 12], [18, 16], [11, 19], [2, 6], [10, 19], [8, 13], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [16, 2], [5, 17], [7, 18], [4, 16], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 16], [10, 19], [16, 2], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [1, 4], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [6, 12], [18, 10], [10, 2], [19, 12], [8, 11], [10, 19], [3, 18], [18, 16], [9, 6], [16, 2], [11, 19], [15, 11], [18, 10], [8, 13], [11, 17], [17, 19], [3, 7], [14, 15], [19, 9], [7, 11], [10, 2], [18, 2], [17, 0], [15, 8], [3, 18], [15, 11], [17, 10], [8, 11], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [19, 12], ----End Timer [Execute Mapping]:  1.9227724075317383

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [122] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 244

Reduced: 
 - size: 103 (45.78%)
 - cycle: 206 (45.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07810592651367188

[15, 7], [13, 5], [10, 16], [11, 17], [19, 6], [7, 1], [18, 2], [8, 11], [6, 12], [10, 16], [1, 18], [10, 16], [8, 13], [17, 0], [14, 15], [7, 1], [19, 6], [17, 0], [16, 2], [8, 7], [10, 16], [5, 17], [15, 11], [14, 3], [8, 13], [18, 2], [15, 7], [17, 19], [3, 1], [10, 16], [13, 17], [5, 0], [15, 8], [3, 1], [10, 19], [16, 2], [8, 13], [18, 16], [9, 6], [8, 13], [14, 3], [18, 2], [7, 1], [0, 9], [13, 5], [3, 7], [16, 2], [1, 18], [13, 0], [1, 4], [8, 7], [16, 2], [13, 5], [18, 16], [0, 9], [15, 8], [13, 0], [15, 7], [3, 18], [10, 19], [9, 12], [13, 17], [19, 12], [1, 4], [5, 0], [18, 16], [3, 7], [13, 0], [11, 19], [3, 18], [15, 8], [13, 0], [1, 4], [2, 6], [11, 17], [10, 19], [3, 7], [8, 13], [1, 18], [11, 17], [10, 16], [19, 6], [14, 15], [8, 13], [18, 16], [17, 10], [9, 12], [3, 1], [15, 11], [8, 13], [1, 4], [15, 11], [5, 0], [16, 2], [8, 13], [5, 17], [7, 18], [9, 12], [4, 16], [11, 10], [8, 13], [9, 6], [11, 10], [17, 19], [3, 7], [13, 0], [1, 18], [11, 17], [17, 0], [13, 5], [6, 12], [18, 2], [15, 11], [19, 9], [3, 7], [11, 17], [9, 6], [7, 1], [15, 8], [10, 16], [15, 11], [10, 19], [9, 6], [16, 2], [3, 7], [13, 0], [11, 10], [16, 2], [17, 19], [3, 18], [14, 15], [18, 10], [8, 11], [1, 4], [3, 7], [16, 2], [19, 9], [7, 18], [10, 16], [13, 5], [7, 11], [3, 1], [18, 2], [8, 13], [7, 11], [14, 3], [10, 16], [17, 19], [8, 13], [8, 11], [4, 16], [1, 18], [13, 5], [19, 6], [14, 3], [8, 11], [19, 9], [5, 17], [1, 4], [6, 12], [18, 10], [8, 11], [17, 0], [10, 2], [19, 12], [14, 15], [8, 11], [10, 19], [3, 18], [17, 0], [16, 2], [9, 6], [8, 13], [6, 12], [18, 2], [11, 19], [5, 17], [8, 13], [15, 11], [18, 10], [8, 13], [6, 12], [11, 17], [19, 9], [18, 16], [3, 7], [14, 15], [13, 0], [17, 19], [7, 11], [10, 2], [13, 0], [7, 1], [10, 19], [18, 2], [17, 0], [4, 16], [15, 8], [10, 19], [13, 0], [3, 18], [7, 1], [15, 11], [17, 10], [13, 0], [8, 11], [19, 9], [17, 10], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [14, 3], [11, 10], [15, 8], [4, 16], [5, 0], [10, 2], [18, 16], [14, 3], [1, 4], [19, 12], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 9]
[9, 11]
[13, 17]
[12, 24]
[20, 29]
[28, 33]
[36, 39]
[46, 51]
[44, 52]
[34, 59]
[49, 63]
[55, 70]
[67, 71]
[63, 72]
[66, 76]
[74, 79]
[77, 83]
[83, 89]
[88, 91]
[89, 94]
[86, 97]
[94, 100]
[99, 102]
[104, 114]
[116, 122]
[123, 127]
[124, 134]
[127, 135]
[109, 139]
[140, 144]
[138, 146]
[143, 148]
[145, 154]
[149, 155]
[155, 161]
[130, 165]
[161, 166]
[162, 169]
[172, 177]
[177, 180]
[173, 181]
[187, 191]
[193, 198]
[192, 201]
[199, 204]
[203, 207]
[207, 213]
[196, 218]
[215, 222]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 8, 16]
[11, 18, 20]
[48, 54, 56]
[58, 65, 69]
[112, 115, 120]
[114, 117, 124]
[128, 136, 147]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[43, 48, 54]
[53, 58, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[170, 174, 184]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 9]
[9, 11]
[13, 17]
[12, 24]
[20, 29]
[28, 33]
[36, 39]
[46, 51]
[44, 52]
[34, 59]
[49, 63]
[55, 70]
[67, 71]
[63, 72]
[66, 76]
[74, 79]
[77, 83]
[83, 89]
[88, 91]
[89, 94]
[86, 97]
[94, 100]
[99, 102]
[104, 114]
[116, 122]
[123, 127]
[124, 134]
[127, 135]
[109, 139]
[140, 144]
[138, 146]
[143, 148]
[145, 154]
[149, 155]
[155, 161]
[130, 165]
[161, 166]
[162, 169]
[172, 177]
[177, 180]
[173, 181]
[187, 191]
[193, 198]
[192, 201]
[199, 204]
[203, 207]
[207, 213]
[196, 218]
[215, 222]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.21622633934021

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 9] cc => I, Pos: [2, 9] cc => I, Pos: [4, 8, 16] ccc => cc, Pos: [9, 11] cc => I, Pos: [9, 11] cc => I, Pos: [11, 18, 20] ccc => cc, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [28, 33] cc => I, Pos: [28, 33] cc => I, Pos: [34, 59] cc => I, Pos: [34, 59] cc => I, Pos: [36, 39] cc => I, Pos: [36, 39] cc => I, Pos: [43, 48, 54] ccc => cc, Pos: [44, 52] cc => I, Pos: [44, 52] cc => I, Pos: [46, 51] cc => I, Pos: [46, 51] cc => I, Pos: [48, 54, 56] ccc => cc, Pos: [49, 63] cc => I, Pos: [49, 63] cc => I, Pos: [53, 58, 65] ccc => cc, Pos: [55, 70] cc => I, Pos: [55, 70] cc => I, Pos: [58, 65, 69] ccc => cc, Pos: [63, 72] cc => I, Pos: [63, 72] cc => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [67, 71] cc => I, Pos: [67, 71] cc => I, Pos: [74, 79] cc => I, Pos: [74, 79] cc => I, Pos: [77, 83] cc => I, Pos: [77, 83] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [86, 97] cc => I, Pos: [86, 97] cc => I, Pos: [88, 91] cc => I, Pos: [88, 91] cc => I, Pos: [89, 94] cc => I, Pos: [89, 94] cc => I, Pos: [94, 100] cc => I, Pos: [94, 100] cc => I, Pos: [99, 102] cc => I, Pos: [99, 102] cc => I, Pos: [104, 114] cc => I, Pos: [104, 114] cc => I, Pos: [109, 139] cc => I, Pos: [109, 139] cc => I, Pos: [112, 115, 120] ccc => cc, Pos: [114, 117, 124] ccc => cc, Pos: [116, 122] cc => I, Pos: [116, 122] cc => I, Pos: [123, 127] cc => I, Pos: [123, 127] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [128, 136, 147] ccc => cc, Pos: [130, 165] cc => I, Pos: [130, 165] cc => I, Pos: [138, 146] cc => I, Pos: [138, 146] cc => I, Pos: [140, 144] cc => I, Pos: [140, 144] cc => I, Pos: [143, 148] cc => I, Pos: [143, 148] cc => I, Pos: [145, 154] cc => I, Pos: [145, 154] cc => I, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [161, 166] cc => I, Pos: [161, 166] cc => I, Pos: [162, 169] cc => I, Pos: [162, 169] cc => I, Pos: [170, 174, 184] ccc => cc, Pos: [172, 177] cc => I, Pos: [172, 177] cc => I, Pos: [173, 181] cc => I, Pos: [173, 181] cc => I, Pos: [177, 180] cc => I, Pos: [177, 180] cc => I, Pos: [187, 191] cc => I, Pos: [187, 191] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [193, 198] cc => I, Pos: [193, 198] cc => I, Pos: [196, 218] cc => I, Pos: [196, 218] cc => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [203, 207] cc => I, Pos: [203, 207] cc => I, Pos: [207, 213] cc => I, Pos: [207, 213] cc => I, Pos: [215, 222] cc => I, Pos: [215, 222] cc => I]

--------End Timer [Generate Plans]:  0.10936808586120605

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 9] cc => I,
 Pos: [4, 8, 16] ccc => cc,
 Pos: [20, 29] cc => I,
 Pos: [12, 24] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [28, 33] cc => I,
 Pos: [34, 59] cc => I,
 Pos: [36, 39] cc => I,
 Pos: [48, 54, 56] ccc => cc,
 Pos: [44, 52] cc => I,
 Pos: [46, 51] cc => I,
 Pos: [63, 72] cc => I,
 Pos: [53, 58, 65] ccc => cc,
 Pos: [55, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [67, 71] cc => I,
 Pos: [74, 79] cc => I,
 Pos: [77, 83] cc => I,
 Pos: [86, 97] cc => I,
 Pos: [88, 91] cc => I,
 Pos: [89, 94] cc => I,
 Pos: [99, 102] cc => I,
 Pos: [104, 114] cc => I,
 Pos: [109, 139] cc => I,
 Pos: [112, 115, 120] ccc => cc,
 Pos: [116, 122] cc => I,
 Pos: [123, 127] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [128, 136, 147] ccc => cc,
 Pos: [130, 165] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 148] cc => I,
 Pos: [145, 154] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [162, 169] cc => I,
 Pos: [170, 174, 184] ccc => cc,
 Pos: [177, 180] cc => I,
 Pos: [173, 181] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 198] cc => I,
 Pos: [196, 218] cc => I,
 Pos: [199, 204] cc => I,
 Pos: [203, 207] cc => I,
 Pos: [215, 222] cc => I]
Change: 46, Saving: 47

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 9] cc => I
Apply:  Pos: [4, 8, 16] ccc => cc
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [28, 33] cc => I
Apply:  Pos: [34, 59] cc => I
Apply:  Pos: [36, 39] cc => I
Apply:  Pos: [48, 54, 56] ccc => cc
Apply:  Pos: [44, 52] cc => I
Apply:  Pos: [46, 51] cc => I
Apply:  Pos: [63, 72] cc => I
Apply:  Pos: [53, 58, 65] ccc => cc
Apply:  Pos: [55, 70] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [67, 71] cc => I
Apply:  Pos: [74, 79] cc => I
Apply:  Pos: [77, 83] cc => I
Apply:  Pos: [86, 97] cc => I
Apply:  Pos: [88, 91] cc => I
Apply:  Pos: [89, 94] cc => I
Apply:  Pos: [99, 102] cc => I
Apply:  Pos: [104, 114] cc => I
Apply:  Pos: [109, 139] cc => I
Apply:  Pos: [112, 115, 120] ccc => cc
Apply:  Pos: [116, 122] cc => I
Apply:  Pos: [123, 127] cc => I
Apply:  Pos: [124, 134] cc => I
Apply:  Pos: [128, 136, 147] ccc => cc
Apply:  Pos: [130, 165] cc => I
Apply:  Pos: [138, 146] cc => I
Apply:  Pos: [140, 144] cc => I
Apply:  Pos: [143, 148] cc => I
Apply:  Pos: [145, 154] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [162, 169] cc => I
Apply:  Pos: [170, 174, 184] ccc => cc
Apply:  Pos: [177, 180] cc => I
Apply:  Pos: [173, 181] cc => I
Apply:  Pos: [187, 191] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [193, 198] cc => I
Apply:  Pos: [196, 218] cc => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [203, 207] cc => I
Apply:  Pos: [215, 222] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015638351440429688

[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 16], [14, 15], [7, 1], [16, 2], [8, 7], [5, 17], [15, 11], [14, 3], [18, 2], [15, 7], [17, 19], [13, 17], [5, 0], [15, 8], [16, 2], [18, 16], [9, 6], [14, 3], [18, 2], [7, 1], [0, 9], [3, 7], [1, 18], [13, 9], [1, 4], [8, 7], [3, 18], [0, 9], [15, 7], [18, 16], [9, 12], [13, 17], [19, 12], [5, 0], [11, 19], [3, 18], [2, 6], [10, 19], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [5, 0], [16, 2], [5, 17], [7, 18], [4, 16], [8, 13], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 16], [10, 19], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [16, 2], [19, 9], [7, 18], [3, 1], [18, 2], [8, 11], [4, 16], [1, 18], [13, 5], [19, 6], [19, 9], [5, 17], [1, 4], [6, 12], [18, 10], [10, 2], [19, 12], [8, 11], [10, 19], [3, 18], [18, 16], [9, 6], [8, 13], [16, 2], [11, 19], [5, 17], [15, 11], [18, 10], [11, 17], [19, 9], [3, 7], [14, 15], [17, 19], [7, 11], [10, 2], [18, 2], [17, 0], [15, 8], [3, 18], [15, 11], [8, 11], [19, 9], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [1, 4], [19, 12], ----End Timer [Execute Mapping]:  4.341232776641846

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[16, 26]
[20, 40]
[42, 55]
[81, 88]
[84, 92]
[88, 100]
[94, 108]
[95, 137]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[35, 38, 44]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[112, 115, 124]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[13, 18, 22]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[16, 26]
[20, 40]
[42, 55]
[81, 88]
[84, 92]
[88, 100]
[94, 108]
[95, 137]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3080031871795654

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [13, 18, 22] ccc => cc, Pos: [16, 26] cc => I, Pos: [16, 26] cc => I, Pos: [20, 40] cc => I, Pos: [20, 40] cc => I, Pos: [35, 38, 44] ccc => cc, Pos: [42, 55] cc => I, Pos: [42, 55] cc => I, Pos: [81, 88] cc => I, Pos: [81, 88] cc => I, Pos: [84, 92] cc => I, Pos: [84, 92] cc => I, Pos: [88, 100] cc => I, Pos: [88, 100] cc => I, Pos: [94, 108] cc => I, Pos: [94, 108] cc => I, Pos: [95, 137] cc => I, Pos: [95, 137] cc => I, Pos: [112, 115, 124] ccc => cc]

--------End Timer [Generate Plans]:  0.03126645088195801

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [13, 18, 22] ccc => cc,
 Pos: [16, 26] cc => I,
 Pos: [20, 40] cc => I,
 Pos: [35, 38, 44] ccc => cc,
 Pos: [42, 55] cc => I,
 Pos: [88, 100] cc => I,
 Pos: [84, 92] cc => I,
 Pos: [94, 108] cc => I,
 Pos: [95, 137] cc => I,
 Pos: [112, 115, 124] ccc => cc]
Change: 10, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [13, 18, 22] ccc => cc
Apply:  Pos: [16, 26] cc => I
Apply:  Pos: [20, 40] cc => I
Apply:  Pos: [35, 38, 44] ccc => cc
Apply:  Pos: [42, 55] cc => I
Apply:  Pos: [88, 100] cc => I
Apply:  Pos: [84, 92] cc => I
Apply:  Pos: [94, 108] cc => I
Apply:  Pos: [95, 137] cc => I
Apply:  Pos: [112, 115, 124] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 16], [14, 15], [7, 1], [16, 2], [15, 8], [5, 17], [15, 11], [18, 2], [8, 7], [17, 19], [5, 0], [16, 2], [18, 16], [9, 6], [18, 2], [7, 1], [0, 9], [3, 7], [1, 18], [13, 9], [1, 4], [8, 7], [3, 16], [0, 9], [15, 7], [18, 16], [9, 12], [19, 12], [11, 19], [2, 6], [10, 19], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [16, 2], [5, 17], [7, 18], [4, 16], [8, 13], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 19], [10, 16], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [16, 2], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [8, 13], [16, 2], [11, 19], [15, 11], [18, 10], [11, 17], [17, 19], [3, 7], [14, 15], [19, 9], [7, 11], [18, 2], [10, 2], [17, 0], [15, 8], [3, 18], [8, 11], [15, 11], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [19, 12], ----End Timer [Execute Mapping]:  2.3392696380615234

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.955068826675415

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 16], [14, 15], [7, 1], [16, 2], [15, 8], [5, 17], [15, 11], [18, 2], [8, 7], [17, 19], [5, 0], [16, 2], [18, 16], [9, 6], [18, 2], [7, 1], [0, 9], [3, 7], [1, 18], [13, 9], [1, 4], [8, 7], [3, 16], [0, 9], [15, 7], [18, 16], [19, 12], [9, 12], [11, 19], [2, 6], [10, 19], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [16, 2], [5, 17], [7, 18], [4, 16], [8, 13], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 16], [10, 19], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [16, 2], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [8, 13], [16, 2], [11, 19], [15, 11], [18, 10], [11, 17], [17, 19], [3, 7], [14, 15], [19, 9], [7, 11], [10, 2], [18, 2], [17, 0], [15, 8], [3, 18], [15, 11], [8, 11], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [19, 12], ----End Timer [Execute Mapping]:  1.955068826675415

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [122] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 244

Reduced: 
 - size: 103 (45.78%)
 - depth: 11 (24.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09394121170043945

[15, 7], [13, 5], [10, 16], [11, 17], [19, 6], [7, 1], [18, 2], [8, 11], [6, 12], [10, 16], [1, 18], [10, 16], [8, 13], [17, 0], [14, 15], [7, 1], [19, 6], [17, 0], [16, 2], [8, 7], [10, 16], [5, 17], [15, 11], [14, 3], [8, 13], [18, 2], [15, 7], [17, 19], [3, 1], [10, 16], [13, 17], [5, 0], [15, 8], [3, 1], [10, 19], [16, 2], [8, 13], [18, 16], [9, 6], [8, 13], [14, 3], [18, 2], [7, 1], [0, 9], [13, 5], [3, 7], [16, 2], [1, 18], [13, 0], [1, 4], [8, 7], [16, 2], [13, 5], [18, 16], [0, 9], [15, 8], [13, 0], [15, 7], [3, 18], [10, 19], [9, 12], [13, 17], [19, 12], [1, 4], [5, 0], [18, 16], [3, 7], [13, 0], [11, 19], [3, 18], [15, 8], [13, 0], [1, 4], [2, 6], [11, 17], [10, 19], [3, 7], [8, 13], [1, 18], [11, 17], [10, 16], [19, 6], [14, 15], [8, 13], [18, 16], [17, 10], [9, 12], [3, 1], [15, 11], [8, 13], [1, 4], [15, 11], [5, 0], [16, 2], [8, 13], [5, 17], [7, 18], [9, 12], [4, 16], [11, 10], [8, 13], [9, 6], [11, 10], [17, 19], [3, 7], [13, 0], [1, 18], [11, 17], [17, 0], [13, 5], [6, 12], [18, 2], [15, 11], [19, 9], [3, 7], [11, 17], [9, 6], [7, 1], [15, 8], [10, 16], [15, 11], [10, 19], [9, 6], [16, 2], [3, 7], [13, 0], [11, 10], [16, 2], [17, 19], [3, 18], [14, 15], [18, 10], [8, 11], [1, 4], [3, 7], [16, 2], [19, 9], [7, 18], [10, 16], [13, 5], [7, 11], [3, 1], [18, 2], [8, 13], [7, 11], [14, 3], [10, 16], [17, 19], [8, 13], [8, 11], [4, 16], [1, 18], [13, 5], [19, 6], [14, 3], [8, 11], [19, 9], [5, 17], [1, 4], [6, 12], [18, 10], [8, 11], [17, 0], [10, 2], [19, 12], [14, 15], [8, 11], [10, 19], [3, 18], [17, 0], [16, 2], [9, 6], [8, 13], [6, 12], [18, 2], [11, 19], [5, 17], [8, 13], [15, 11], [18, 10], [8, 13], [6, 12], [11, 17], [19, 9], [18, 16], [3, 7], [14, 15], [13, 0], [17, 19], [7, 11], [10, 2], [13, 0], [7, 1], [10, 19], [18, 2], [17, 0], [4, 16], [15, 8], [10, 19], [13, 0], [3, 18], [7, 1], [15, 11], [17, 10], [13, 0], [8, 11], [19, 9], [17, 10], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [14, 3], [11, 10], [15, 8], [4, 16], [5, 0], [10, 2], [18, 16], [14, 3], [1, 4], [19, 12], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 9]
[9, 11]
[13, 17]
[12, 24]
[20, 29]
[28, 33]
[36, 39]
[46, 51]
[44, 52]
[34, 59]
[49, 63]
[55, 70]
[67, 71]
[63, 72]
[66, 76]
[74, 79]
[77, 83]
[83, 89]
[88, 91]
[89, 94]
[86, 97]
[94, 100]
[99, 102]
[104, 114]
[116, 122]
[123, 127]
[124, 134]
[127, 135]
[109, 139]
[140, 144]
[138, 146]
[143, 148]
[145, 154]
[149, 155]
[155, 161]
[130, 165]
[161, 166]
[162, 169]
[172, 177]
[177, 180]
[173, 181]
[187, 191]
[193, 198]
[192, 201]
[199, 204]
[203, 207]
[207, 213]
[196, 218]
[215, 222]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 8, 16]
[11, 18, 20]
[48, 54, 56]
[58, 65, 69]
[112, 115, 120]
[114, 117, 124]
[128, 136, 147]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[43, 48, 54]
[53, 58, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[170, 174, 184]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 9]
[9, 11]
[13, 17]
[12, 24]
[20, 29]
[28, 33]
[36, 39]
[46, 51]
[44, 52]
[34, 59]
[49, 63]
[55, 70]
[67, 71]
[63, 72]
[66, 76]
[74, 79]
[77, 83]
[83, 89]
[88, 91]
[89, 94]
[86, 97]
[94, 100]
[99, 102]
[104, 114]
[116, 122]
[123, 127]
[124, 134]
[127, 135]
[109, 139]
[140, 144]
[138, 146]
[143, 148]
[145, 154]
[149, 155]
[155, 161]
[130, 165]
[161, 166]
[162, 169]
[172, 177]
[177, 180]
[173, 181]
[187, 191]
[193, 198]
[192, 201]
[199, 204]
[203, 207]
[207, 213]
[196, 218]
[215, 222]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.23417592048645

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 9] cc => I, Pos: [2, 9] cc => I, Pos: [4, 8, 16] ccc => cc, Pos: [9, 11] cc => I, Pos: [9, 11] cc => I, Pos: [11, 18, 20] ccc => cc, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [28, 33] cc => I, Pos: [28, 33] cc => I, Pos: [34, 59] cc => I, Pos: [34, 59] cc => I, Pos: [36, 39] cc => I, Pos: [36, 39] cc => I, Pos: [43, 48, 54] ccc => cc, Pos: [44, 52] cc => I, Pos: [44, 52] cc => I, Pos: [46, 51] cc => I, Pos: [46, 51] cc => I, Pos: [48, 54, 56] ccc => cc, Pos: [49, 63] cc => I, Pos: [49, 63] cc => I, Pos: [53, 58, 65] ccc => cc, Pos: [55, 70] cc => I, Pos: [55, 70] cc => I, Pos: [58, 65, 69] ccc => cc, Pos: [63, 72] cc => I, Pos: [63, 72] cc => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [67, 71] cc => I, Pos: [67, 71] cc => I, Pos: [74, 79] cc => I, Pos: [74, 79] cc => I, Pos: [77, 83] cc => I, Pos: [77, 83] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [86, 97] cc => I, Pos: [86, 97] cc => I, Pos: [88, 91] cc => I, Pos: [88, 91] cc => I, Pos: [89, 94] cc => I, Pos: [89, 94] cc => I, Pos: [94, 100] cc => I, Pos: [94, 100] cc => I, Pos: [99, 102] cc => I, Pos: [99, 102] cc => I, Pos: [104, 114] cc => I, Pos: [104, 114] cc => I, Pos: [109, 139] cc => I, Pos: [109, 139] cc => I, Pos: [112, 115, 120] ccc => cc, Pos: [114, 117, 124] ccc => cc, Pos: [116, 122] cc => I, Pos: [116, 122] cc => I, Pos: [123, 127] cc => I, Pos: [123, 127] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [128, 136, 147] ccc => cc, Pos: [130, 165] cc => I, Pos: [130, 165] cc => I, Pos: [138, 146] cc => I, Pos: [138, 146] cc => I, Pos: [140, 144] cc => I, Pos: [140, 144] cc => I, Pos: [143, 148] cc => I, Pos: [143, 148] cc => I, Pos: [145, 154] cc => I, Pos: [145, 154] cc => I, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [161, 166] cc => I, Pos: [161, 166] cc => I, Pos: [162, 169] cc => I, Pos: [162, 169] cc => I, Pos: [170, 174, 184] ccc => cc, Pos: [172, 177] cc => I, Pos: [172, 177] cc => I, Pos: [173, 181] cc => I, Pos: [173, 181] cc => I, Pos: [177, 180] cc => I, Pos: [177, 180] cc => I, Pos: [187, 191] cc => I, Pos: [187, 191] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [193, 198] cc => I, Pos: [193, 198] cc => I, Pos: [196, 218] cc => I, Pos: [196, 218] cc => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [203, 207] cc => I, Pos: [203, 207] cc => I, Pos: [207, 213] cc => I, Pos: [207, 213] cc => I, Pos: [215, 222] cc => I, Pos: [215, 222] cc => I]

--------End Timer [Generate Plans]:  0.12500476837158203

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 9] cc => I,
 Pos: [4, 8, 16] ccc => cc,
 Pos: [20, 29] cc => I,
 Pos: [12, 24] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [28, 33] cc => I,
 Pos: [34, 59] cc => I,
 Pos: [36, 39] cc => I,
 Pos: [43, 48, 54] ccc => cc,
 Pos: [44, 52] cc => I,
 Pos: [46, 51] cc => I,
 Pos: [49, 63] cc => I,
 Pos: [58, 65, 69] ccc => cc,
 Pos: [55, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [67, 71] cc => I,
 Pos: [74, 79] cc => I,
 Pos: [77, 83] cc => I,
 Pos: [86, 97] cc => I,
 Pos: [88, 91] cc => I,
 Pos: [94, 100] cc => I,
 Pos: [99, 102] cc => I,
 Pos: [104, 114] cc => I,
 Pos: [109, 139] cc => I,
 Pos: [112, 115, 120] ccc => cc,
 Pos: [116, 122] cc => I,
 Pos: [123, 127] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [128, 136, 147] ccc => cc,
 Pos: [130, 165] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 148] cc => I,
 Pos: [145, 154] cc => I,
 Pos: [149, 155] cc => I,
 Pos: [161, 166] cc => I,
 Pos: [162, 169] cc => I,
 Pos: [170, 174, 184] ccc => cc,
 Pos: [177, 180] cc => I,
 Pos: [173, 181] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 198] cc => I,
 Pos: [196, 218] cc => I,
 Pos: [199, 204] cc => I,
 Pos: [203, 207] cc => I,
 Pos: [215, 222] cc => I]
Change: 47, Saving: 48

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 9] cc => I
Apply:  Pos: [4, 8, 16] ccc => cc
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [28, 33] cc => I
Apply:  Pos: [34, 59] cc => I
Apply:  Pos: [36, 39] cc => I
Apply:  Pos: [43, 48, 54] ccc => cc
Apply:  Pos: [44, 52] cc => I
Apply:  Pos: [46, 51] cc => I
Apply:  Pos: [49, 63] cc => I
Apply:  Pos: [58, 65, 69] ccc => cc
Apply:  Pos: [55, 70] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [67, 71] cc => I
Apply:  Pos: [74, 79] cc => I
Apply:  Pos: [77, 83] cc => I
Apply:  Pos: [86, 97] cc => I
Apply:  Pos: [88, 91] cc => I
Apply:  Pos: [94, 100] cc => I
Apply:  Pos: [99, 102] cc => I
Apply:  Pos: [104, 114] cc => I
Apply:  Pos: [109, 139] cc => I
Apply:  Pos: [112, 115, 120] ccc => cc
Apply:  Pos: [116, 122] cc => I
Apply:  Pos: [123, 127] cc => I
Apply:  Pos: [124, 134] cc => I
Apply:  Pos: [128, 136, 147] ccc => cc
Apply:  Pos: [130, 165] cc => I
Apply:  Pos: [138, 146] cc => I
Apply:  Pos: [140, 144] cc => I
Apply:  Pos: [143, 148] cc => I
Apply:  Pos: [145, 154] cc => I
Apply:  Pos: [149, 155] cc => I
Apply:  Pos: [161, 166] cc => I
Apply:  Pos: [162, 169] cc => I
Apply:  Pos: [170, 174, 184] ccc => cc
Apply:  Pos: [177, 180] cc => I
Apply:  Pos: [173, 181] cc => I
Apply:  Pos: [187, 191] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [193, 198] cc => I
Apply:  Pos: [196, 218] cc => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [203, 207] cc => I
Apply:  Pos: [215, 222] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 16], [14, 15], [7, 1], [16, 2], [8, 7], [5, 17], [15, 11], [14, 3], [18, 2], [15, 7], [17, 19], [13, 17], [5, 0], [15, 8], [16, 2], [18, 16], [9, 6], [14, 3], [18, 2], [7, 1], [13, 0], [3, 7], [1, 18], [0, 9], [8, 7], [18, 16], [13, 0], [15, 7], [3, 16], [9, 12], [13, 17], [19, 12], [5, 0], [18, 16], [11, 19], [1, 4], [2, 6], [10, 19], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [8, 13], [1, 4], [5, 0], [16, 2], [5, 17], [7, 18], [4, 16], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 16], [10, 19], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [16, 2], [19, 9], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [19, 9], [5, 17], [1, 4], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [8, 13], [16, 2], [11, 19], [5, 17], [15, 11], [18, 10], [11, 17], [19, 9], [3, 7], [14, 15], [17, 19], [7, 11], [10, 2], [18, 2], [17, 0], [15, 8], [3, 18], [15, 11], [8, 11], [19, 9], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [1, 4], [19, 12], ----End Timer [Execute Mapping]:  4.359180688858032

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[16, 26]
[20, 39]
[41, 56]
[84, 91]
[93, 106]
[94, 135]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[29, 32, 35]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[110, 113, 122]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[13, 18, 22]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[16, 26]
[20, 39]
[41, 56]
[84, 91]
[93, 106]
[94, 135]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.2656266689300537

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [13, 18, 22] ccc => cc, Pos: [16, 26] cc => I, Pos: [16, 26] cc => I, Pos: [20, 39] cc => I, Pos: [20, 39] cc => I, Pos: [29, 32, 35] ccc => cc, Pos: [41, 56] cc => I, Pos: [41, 56] cc => I, Pos: [84, 91] cc => I, Pos: [84, 91] cc => I, Pos: [93, 106] cc => I, Pos: [93, 106] cc => I, Pos: [94, 135] cc => I, Pos: [94, 135] cc => I, Pos: [110, 113, 122] ccc => cc]

--------End Timer [Generate Plans]:  0.03124547004699707

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [13, 18, 22] ccc => cc,
 Pos: [16, 26] cc => I,
 Pos: [20, 39] cc => I,
 Pos: [29, 32, 35] ccc => cc,
 Pos: [41, 56] cc => I,
 Pos: [84, 91] cc => I,
 Pos: [93, 106] cc => I,
 Pos: [94, 135] cc => I,
 Pos: [110, 113, 122] ccc => cc]
Change: 9, Saving: 9

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [13, 18, 22] ccc => cc
Apply:  Pos: [16, 26] cc => I
Apply:  Pos: [20, 39] cc => I
Apply:  Pos: [29, 32, 35] ccc => cc
Apply:  Pos: [41, 56] cc => I
Apply:  Pos: [84, 91] cc => I
Apply:  Pos: [93, 106] cc => I
Apply:  Pos: [94, 135] cc => I
Apply:  Pos: [110, 113, 122] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 16], [14, 15], [7, 1], [16, 2], [15, 8], [5, 17], [15, 11], [18, 2], [8, 7], [17, 19], [5, 0], [16, 2], [18, 16], [9, 6], [18, 2], [7, 1], [13, 9], [3, 7], [1, 18], [0, 9], [8, 7], [18, 16], [15, 7], [3, 16], [9, 12], [19, 12], [18, 16], [11, 19], [1, 4], [2, 6], [10, 19], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [8, 13], [1, 4], [16, 2], [5, 17], [7, 18], [4, 16], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 19], [10, 16], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [16, 2], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [8, 13], [16, 2], [11, 19], [15, 11], [18, 10], [11, 17], [17, 19], [3, 7], [14, 15], [19, 9], [7, 11], [18, 2], [10, 2], [17, 0], [15, 8], [3, 18], [8, 11], [15, 11], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [19, 12], ----End Timer [Execute Mapping]:  2.296872138977051

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9218566417694092

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 16], [14, 15], [7, 1], [16, 2], [15, 8], [5, 17], [15, 11], [18, 2], [8, 7], [17, 19], [5, 0], [16, 2], [18, 16], [9, 6], [18, 2], [7, 1], [13, 9], [3, 7], [1, 18], [0, 9], [8, 7], [18, 16], [15, 7], [3, 16], [19, 12], [9, 12], [18, 16], [11, 19], [1, 4], [2, 6], [10, 19], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [8, 13], [1, 4], [16, 2], [5, 17], [7, 18], [4, 16], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 16], [10, 19], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [16, 2], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [8, 13], [16, 2], [11, 19], [15, 11], [18, 10], [11, 17], [17, 19], [3, 7], [14, 15], [19, 9], [7, 11], [10, 2], [18, 2], [17, 0], [15, 8], [3, 18], [15, 11], [8, 11], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [19, 12], ----End Timer [Execute Mapping]:  1.9218566417694092

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [122] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 244

Reduced: 
 - size: 103 (45.78%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07862257957458496

[15, 7], [13, 5], [10, 16], [11, 17], [19, 6], [7, 1], [18, 2], [8, 11], [6, 12], [10, 16], [1, 18], [10, 16], [8, 13], [17, 0], [14, 15], [7, 1], [19, 6], [17, 0], [16, 2], [8, 7], [10, 16], [5, 17], [15, 11], [14, 3], [8, 13], [18, 2], [15, 7], [17, 19], [3, 1], [10, 16], [13, 17], [5, 0], [15, 8], [3, 1], [10, 19], [16, 2], [8, 13], [18, 16], [9, 6], [8, 13], [14, 3], [18, 2], [7, 1], [0, 9], [13, 5], [3, 7], [16, 2], [1, 18], [13, 0], [1, 4], [8, 7], [16, 2], [13, 5], [18, 16], [0, 9], [15, 8], [13, 0], [15, 7], [3, 18], [10, 19], [9, 12], [13, 17], [19, 12], [1, 4], [5, 0], [18, 16], [3, 7], [13, 0], [11, 19], [3, 18], [15, 8], [13, 0], [1, 4], [2, 6], [11, 17], [10, 19], [3, 7], [8, 13], [1, 18], [11, 17], [10, 16], [19, 6], [14, 15], [8, 13], [18, 16], [17, 10], [9, 12], [3, 1], [15, 11], [8, 13], [1, 4], [15, 11], [5, 0], [16, 2], [8, 13], [5, 17], [7, 18], [9, 12], [4, 16], [11, 10], [8, 13], [9, 6], [11, 10], [17, 19], [3, 7], [13, 0], [1, 18], [11, 17], [17, 0], [13, 5], [6, 12], [18, 2], [15, 11], [19, 9], [3, 7], [11, 17], [9, 6], [7, 1], [15, 8], [10, 16], [15, 11], [10, 19], [9, 6], [16, 2], [3, 7], [13, 0], [11, 10], [16, 2], [17, 19], [3, 18], [14, 15], [18, 10], [8, 11], [1, 4], [3, 7], [16, 2], [19, 9], [7, 18], [10, 16], [13, 5], [7, 11], [3, 1], [18, 2], [8, 13], [7, 11], [14, 3], [10, 16], [17, 19], [8, 13], [8, 11], [4, 16], [1, 18], [13, 5], [19, 6], [14, 3], [8, 11], [19, 9], [5, 17], [1, 4], [6, 12], [18, 10], [8, 11], [17, 0], [10, 2], [19, 12], [14, 15], [8, 11], [10, 19], [3, 18], [17, 0], [16, 2], [9, 6], [8, 13], [6, 12], [18, 2], [11, 19], [5, 17], [8, 13], [15, 11], [18, 10], [8, 13], [6, 12], [11, 17], [19, 9], [18, 16], [3, 7], [14, 15], [13, 0], [17, 19], [7, 11], [10, 2], [13, 0], [7, 1], [10, 19], [18, 2], [17, 0], [4, 16], [15, 8], [10, 19], [13, 0], [3, 18], [7, 1], [15, 11], [17, 10], [13, 0], [8, 11], [19, 9], [17, 10], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [14, 3], [11, 10], [15, 8], [4, 16], [5, 0], [10, 2], [18, 16], [14, 3], [1, 4], [19, 12], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 9]
[9, 11]
[13, 17]
[12, 24]
[20, 29]
[28, 33]
[36, 39]
[46, 51]
[44, 52]
[34, 59]
[49, 63]
[55, 70]
[67, 71]
[63, 72]
[66, 76]
[74, 79]
[77, 83]
[83, 89]
[88, 91]
[89, 94]
[86, 97]
[94, 100]
[99, 102]
[104, 114]
[116, 122]
[123, 127]
[124, 134]
[127, 135]
[109, 139]
[140, 144]
[138, 146]
[143, 148]
[145, 154]
[149, 155]
[155, 161]
[130, 165]
[161, 166]
[162, 169]
[172, 177]
[177, 180]
[173, 181]
[187, 191]
[193, 198]
[192, 201]
[199, 204]
[203, 207]
[207, 213]
[196, 218]
[215, 222]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 8, 16]
[11, 18, 20]
[48, 54, 56]
[58, 65, 69]
[112, 115, 120]
[114, 117, 124]
[128, 136, 147]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[43, 48, 54]
[53, 58, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[170, 174, 184]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 9]
[9, 11]
[13, 17]
[12, 24]
[20, 29]
[28, 33]
[36, 39]
[46, 51]
[44, 52]
[34, 59]
[49, 63]
[55, 70]
[67, 71]
[63, 72]
[66, 76]
[74, 79]
[77, 83]
[83, 89]
[88, 91]
[89, 94]
[86, 97]
[94, 100]
[99, 102]
[104, 114]
[116, 122]
[123, 127]
[124, 134]
[127, 135]
[109, 139]
[140, 144]
[138, 146]
[143, 148]
[145, 154]
[149, 155]
[155, 161]
[130, 165]
[161, 166]
[162, 169]
[172, 177]
[177, 180]
[173, 181]
[187, 191]
[193, 198]
[192, 201]
[199, 204]
[203, 207]
[207, 213]
[196, 218]
[215, 222]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.18706488609314

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 9] cc => I, Pos: [2, 9] cc => I, Pos: [4, 8, 16] ccc => cc, Pos: [9, 11] cc => I, Pos: [9, 11] cc => I, Pos: [11, 18, 20] ccc => cc, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [28, 33] cc => I, Pos: [28, 33] cc => I, Pos: [34, 59] cc => I, Pos: [34, 59] cc => I, Pos: [36, 39] cc => I, Pos: [36, 39] cc => I, Pos: [43, 48, 54] ccc => cc, Pos: [44, 52] cc => I, Pos: [44, 52] cc => I, Pos: [46, 51] cc => I, Pos: [46, 51] cc => I, Pos: [48, 54, 56] ccc => cc, Pos: [49, 63] cc => I, Pos: [49, 63] cc => I, Pos: [53, 58, 65] ccc => cc, Pos: [55, 70] cc => I, Pos: [55, 70] cc => I, Pos: [58, 65, 69] ccc => cc, Pos: [63, 72] cc => I, Pos: [63, 72] cc => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [67, 71] cc => I, Pos: [67, 71] cc => I, Pos: [74, 79] cc => I, Pos: [74, 79] cc => I, Pos: [77, 83] cc => I, Pos: [77, 83] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [86, 97] cc => I, Pos: [86, 97] cc => I, Pos: [88, 91] cc => I, Pos: [88, 91] cc => I, Pos: [89, 94] cc => I, Pos: [89, 94] cc => I, Pos: [94, 100] cc => I, Pos: [94, 100] cc => I, Pos: [99, 102] cc => I, Pos: [99, 102] cc => I, Pos: [104, 114] cc => I, Pos: [104, 114] cc => I, Pos: [109, 139] cc => I, Pos: [109, 139] cc => I, Pos: [112, 115, 120] ccc => cc, Pos: [114, 117, 124] ccc => cc, Pos: [116, 122] cc => I, Pos: [116, 122] cc => I, Pos: [123, 127] cc => I, Pos: [123, 127] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [128, 136, 147] ccc => cc, Pos: [130, 165] cc => I, Pos: [130, 165] cc => I, Pos: [138, 146] cc => I, Pos: [138, 146] cc => I, Pos: [140, 144] cc => I, Pos: [140, 144] cc => I, Pos: [143, 148] cc => I, Pos: [143, 148] cc => I, Pos: [145, 154] cc => I, Pos: [145, 154] cc => I, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [161, 166] cc => I, Pos: [161, 166] cc => I, Pos: [162, 169] cc => I, Pos: [162, 169] cc => I, Pos: [170, 174, 184] ccc => cc, Pos: [172, 177] cc => I, Pos: [172, 177] cc => I, Pos: [173, 181] cc => I, Pos: [173, 181] cc => I, Pos: [177, 180] cc => I, Pos: [177, 180] cc => I, Pos: [187, 191] cc => I, Pos: [187, 191] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [193, 198] cc => I, Pos: [193, 198] cc => I, Pos: [196, 218] cc => I, Pos: [196, 218] cc => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [203, 207] cc => I, Pos: [203, 207] cc => I, Pos: [207, 213] cc => I, Pos: [207, 213] cc => I, Pos: [215, 222] cc => I, Pos: [215, 222] cc => I]

--------End Timer [Generate Plans]:  0.12499094009399414

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 9] cc => I,
 Pos: [4, 8, 16] ccc => cc,
 Pos: [20, 29] cc => I,
 Pos: [12, 24] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [28, 33] cc => I,
 Pos: [34, 59] cc => I,
 Pos: [36, 39] cc => I,
 Pos: [48, 54, 56] ccc => cc,
 Pos: [44, 52] cc => I,
 Pos: [46, 51] cc => I,
 Pos: [49, 63] cc => I,
 Pos: [58, 65, 69] ccc => cc,
 Pos: [55, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [67, 71] cc => I,
 Pos: [74, 79] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [86, 97] cc => I,
 Pos: [88, 91] cc => I,
 Pos: [94, 100] cc => I,
 Pos: [99, 102] cc => I,
 Pos: [104, 114] cc => I,
 Pos: [109, 139] cc => I,
 Pos: [112, 115, 120] ccc => cc,
 Pos: [116, 122] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [128, 136, 147] ccc => cc,
 Pos: [130, 165] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 148] cc => I,
 Pos: [145, 154] cc => I,
 Pos: [149, 155] cc => I,
 Pos: [161, 166] cc => I,
 Pos: [162, 169] cc => I,
 Pos: [170, 174, 184] ccc => cc,
 Pos: [177, 180] cc => I,
 Pos: [173, 181] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 198] cc => I,
 Pos: [196, 218] cc => I,
 Pos: [199, 204] cc => I,
 Pos: [207, 213] cc => I,
 Pos: [215, 222] cc => I]
Change: 47, Saving: 48

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 9] cc => I
Apply:  Pos: [4, 8, 16] ccc => cc
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [28, 33] cc => I
Apply:  Pos: [34, 59] cc => I
Apply:  Pos: [36, 39] cc => I
Apply:  Pos: [48, 54, 56] ccc => cc
Apply:  Pos: [44, 52] cc => I
Apply:  Pos: [46, 51] cc => I
Apply:  Pos: [49, 63] cc => I
Apply:  Pos: [58, 65, 69] ccc => cc
Apply:  Pos: [55, 70] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [67, 71] cc => I
Apply:  Pos: [74, 79] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [86, 97] cc => I
Apply:  Pos: [88, 91] cc => I
Apply:  Pos: [94, 100] cc => I
Apply:  Pos: [99, 102] cc => I
Apply:  Pos: [104, 114] cc => I
Apply:  Pos: [109, 139] cc => I
Apply:  Pos: [112, 115, 120] ccc => cc
Apply:  Pos: [116, 122] cc => I
Apply:  Pos: [127, 135] cc => I
Apply:  Pos: [124, 134] cc => I
Apply:  Pos: [128, 136, 147] ccc => cc
Apply:  Pos: [130, 165] cc => I
Apply:  Pos: [138, 146] cc => I
Apply:  Pos: [140, 144] cc => I
Apply:  Pos: [143, 148] cc => I
Apply:  Pos: [145, 154] cc => I
Apply:  Pos: [149, 155] cc => I
Apply:  Pos: [161, 166] cc => I
Apply:  Pos: [162, 169] cc => I
Apply:  Pos: [170, 174, 184] ccc => cc
Apply:  Pos: [177, 180] cc => I
Apply:  Pos: [173, 181] cc => I
Apply:  Pos: [187, 191] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [193, 198] cc => I
Apply:  Pos: [196, 218] cc => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [207, 213] cc => I
Apply:  Pos: [215, 222] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 16], [14, 15], [7, 1], [16, 2], [8, 7], [5, 17], [15, 11], [14, 3], [18, 2], [15, 7], [17, 19], [13, 17], [5, 0], [15, 8], [16, 2], [18, 16], [9, 6], [14, 3], [18, 2], [7, 1], [0, 9], [3, 7], [1, 18], [13, 9], [8, 7], [18, 16], [0, 9], [15, 7], [3, 16], [9, 12], [13, 17], [19, 12], [5, 0], [18, 16], [11, 19], [1, 4], [2, 6], [10, 19], [8, 13], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [5, 0], [16, 2], [5, 17], [7, 18], [4, 16], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 16], [10, 19], [16, 2], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [19, 9], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [19, 9], [5, 17], [1, 4], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [8, 13], [16, 2], [11, 19], [5, 17], [15, 11], [18, 10], [11, 17], [19, 9], [3, 7], [14, 15], [17, 19], [7, 11], [10, 2], [18, 2], [17, 0], [15, 8], [3, 18], [15, 11], [17, 10], [8, 11], [19, 9], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [1, 4], [19, 12], ----End Timer [Execute Mapping]:  4.312055826187134

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[16, 26]
[20, 39]
[41, 56]
[84, 91]
[93, 106]
[94, 135]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[110, 113, 123]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[13, 18, 22]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[16, 26]
[20, 39]
[41, 56]
[84, 91]
[93, 106]
[94, 135]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.2500486373901367

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [13, 18, 22] ccc => cc, Pos: [16, 26] cc => I, Pos: [16, 26] cc => I, Pos: [20, 39] cc => I, Pos: [20, 39] cc => I, Pos: [41, 56] cc => I, Pos: [41, 56] cc => I, Pos: [84, 91] cc => I, Pos: [84, 91] cc => I, Pos: [93, 106] cc => I, Pos: [93, 106] cc => I, Pos: [94, 135] cc => I, Pos: [94, 135] cc => I, Pos: [110, 113, 123] ccc => cc]

--------End Timer [Generate Plans]:  0.015624523162841797

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [13, 18, 22] ccc => cc,
 Pos: [16, 26] cc => I,
 Pos: [20, 39] cc => I,
 Pos: [41, 56] cc => I,
 Pos: [84, 91] cc => I,
 Pos: [93, 106] cc => I,
 Pos: [94, 135] cc => I,
 Pos: [110, 113, 123] ccc => cc]
Change: 8, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [13, 18, 22] ccc => cc
Apply:  Pos: [16, 26] cc => I
Apply:  Pos: [20, 39] cc => I
Apply:  Pos: [41, 56] cc => I
Apply:  Pos: [84, 91] cc => I
Apply:  Pos: [93, 106] cc => I
Apply:  Pos: [94, 135] cc => I
Apply:  Pos: [110, 113, 123] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 16], [14, 15], [7, 1], [16, 2], [15, 8], [5, 17], [15, 11], [18, 2], [8, 7], [17, 19], [5, 0], [16, 2], [18, 16], [9, 6], [18, 2], [7, 1], [0, 9], [3, 7], [1, 18], [13, 9], [8, 7], [18, 16], [0, 9], [15, 7], [3, 16], [9, 12], [19, 12], [18, 16], [11, 19], [1, 4], [2, 6], [10, 19], [8, 13], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [16, 2], [5, 17], [7, 18], [4, 16], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 19], [10, 16], [16, 2], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [8, 13], [16, 2], [11, 19], [15, 11], [18, 10], [11, 17], [17, 19], [3, 7], [14, 15], [19, 9], [7, 11], [18, 2], [10, 2], [17, 0], [15, 8], [3, 18], [15, 11], [17, 10], [8, 11], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [19, 12], ----End Timer [Execute Mapping]:  2.2656731605529785

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9363303184509277

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 16], [14, 15], [7, 1], [16, 2], [15, 8], [5, 17], [15, 11], [18, 2], [8, 7], [17, 19], [5, 0], [16, 2], [18, 16], [9, 6], [18, 2], [7, 1], [0, 9], [3, 7], [1, 18], [13, 9], [8, 7], [18, 16], [0, 9], [15, 7], [3, 16], [19, 12], [9, 12], [18, 16], [11, 19], [1, 4], [2, 6], [10, 19], [8, 13], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [16, 2], [5, 17], [7, 18], [4, 16], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 16], [10, 19], [16, 2], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [8, 13], [16, 2], [11, 19], [15, 11], [18, 10], [11, 17], [17, 19], [3, 7], [14, 15], [19, 9], [7, 11], [10, 2], [18, 2], [17, 0], [15, 8], [3, 18], [15, 11], [17, 10], [8, 11], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [19, 12], ----End Timer [Execute Mapping]:  1.9363303184509277

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [123] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 246

Reduced: 
 - size: 102 (45.33%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374356269836426

[15, 7], [13, 5], [10, 16], [11, 17], [19, 6], [7, 1], [18, 2], [8, 11], [6, 12], [10, 16], [1, 18], [10, 16], [8, 13], [17, 0], [14, 15], [7, 1], [19, 6], [17, 0], [16, 2], [8, 7], [10, 16], [5, 17], [15, 11], [14, 3], [8, 13], [18, 2], [15, 7], [17, 19], [3, 1], [10, 16], [13, 17], [5, 0], [15, 8], [3, 1], [10, 19], [16, 2], [8, 13], [18, 16], [9, 6], [8, 13], [14, 3], [18, 2], [7, 1], [0, 9], [13, 5], [3, 7], [16, 2], [1, 18], [13, 0], [1, 4], [8, 7], [16, 2], [13, 5], [18, 16], [0, 9], [15, 8], [13, 0], [15, 7], [3, 18], [10, 19], [9, 12], [13, 17], [19, 12], [1, 4], [5, 0], [18, 16], [3, 7], [13, 0], [11, 19], [3, 18], [15, 8], [13, 0], [1, 4], [2, 6], [11, 17], [10, 19], [3, 7], [8, 13], [1, 18], [11, 17], [10, 16], [19, 6], [14, 15], [8, 13], [18, 16], [17, 10], [9, 12], [3, 1], [15, 11], [8, 13], [1, 4], [15, 11], [5, 0], [16, 2], [8, 13], [5, 17], [7, 18], [9, 12], [4, 16], [11, 10], [8, 13], [9, 6], [11, 10], [17, 19], [3, 7], [13, 0], [1, 18], [11, 17], [17, 0], [13, 5], [6, 12], [18, 2], [15, 11], [19, 9], [3, 7], [11, 17], [9, 6], [7, 1], [15, 8], [10, 16], [15, 11], [10, 19], [9, 6], [16, 2], [3, 7], [13, 0], [11, 10], [16, 2], [17, 19], [3, 18], [14, 15], [18, 10], [8, 11], [1, 4], [3, 7], [16, 2], [19, 9], [7, 18], [10, 16], [13, 5], [7, 11], [3, 1], [18, 2], [8, 13], [7, 11], [14, 3], [10, 16], [17, 19], [8, 13], [8, 11], [4, 16], [1, 18], [13, 5], [19, 6], [14, 3], [8, 11], [19, 9], [5, 17], [1, 4], [6, 12], [18, 10], [8, 11], [17, 0], [10, 2], [19, 12], [14, 15], [8, 11], [10, 19], [3, 18], [17, 0], [16, 2], [9, 6], [8, 13], [6, 12], [18, 2], [11, 19], [5, 17], [8, 13], [15, 11], [18, 10], [8, 13], [6, 12], [11, 17], [19, 9], [18, 16], [3, 7], [14, 15], [13, 0], [17, 19], [7, 11], [10, 2], [13, 0], [7, 1], [10, 19], [18, 2], [17, 0], [4, 16], [15, 8], [10, 19], [13, 0], [3, 18], [7, 1], [15, 11], [17, 10], [13, 0], [8, 11], [19, 9], [17, 10], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [14, 3], [11, 10], [15, 8], [4, 16], [5, 0], [10, 2], [18, 16], [14, 3], [1, 4], [19, 12], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 9]
[9, 11]
[13, 17]
[12, 24]
[20, 29]
[28, 33]
[36, 39]
[46, 51]
[44, 52]
[34, 59]
[49, 63]
[55, 70]
[67, 71]
[63, 72]
[66, 76]
[74, 79]
[77, 83]
[83, 89]
[88, 91]
[89, 94]
[86, 97]
[94, 100]
[99, 102]
[104, 114]
[116, 122]
[123, 127]
[124, 134]
[127, 135]
[109, 139]
[140, 144]
[138, 146]
[143, 148]
[145, 154]
[149, 155]
[155, 161]
[130, 165]
[161, 166]
[162, 169]
[172, 177]
[177, 180]
[173, 181]
[187, 191]
[193, 198]
[192, 201]
[199, 204]
[203, 207]
[207, 213]
[196, 218]
[215, 222]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 8, 16]
[11, 18, 20]
[48, 54, 56]
[58, 65, 69]
[112, 115, 120]
[114, 117, 124]
[128, 136, 147]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[43, 48, 54]
[53, 58, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[170, 174, 184]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 9]
[9, 11]
[13, 17]
[12, 24]
[20, 29]
[28, 33]
[36, 39]
[46, 51]
[44, 52]
[34, 59]
[49, 63]
[55, 70]
[67, 71]
[63, 72]
[66, 76]
[74, 79]
[77, 83]
[83, 89]
[88, 91]
[89, 94]
[86, 97]
[94, 100]
[99, 102]
[104, 114]
[116, 122]
[123, 127]
[124, 134]
[127, 135]
[109, 139]
[140, 144]
[138, 146]
[143, 148]
[145, 154]
[149, 155]
[155, 161]
[130, 165]
[161, 166]
[162, 169]
[172, 177]
[177, 180]
[173, 181]
[187, 191]
[193, 198]
[192, 201]
[199, 204]
[203, 207]
[207, 213]
[196, 218]
[215, 222]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.26593017578125

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 9] cc => I, Pos: [2, 9] cc => I, Pos: [4, 8, 16] ccc => cc, Pos: [9, 11] cc => I, Pos: [9, 11] cc => I, Pos: [11, 18, 20] ccc => cc, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [28, 33] cc => I, Pos: [28, 33] cc => I, Pos: [34, 59] cc => I, Pos: [34, 59] cc => I, Pos: [36, 39] cc => I, Pos: [36, 39] cc => I, Pos: [43, 48, 54] ccc => cc, Pos: [44, 52] cc => I, Pos: [44, 52] cc => I, Pos: [46, 51] cc => I, Pos: [46, 51] cc => I, Pos: [48, 54, 56] ccc => cc, Pos: [49, 63] cc => I, Pos: [49, 63] cc => I, Pos: [53, 58, 65] ccc => cc, Pos: [55, 70] cc => I, Pos: [55, 70] cc => I, Pos: [58, 65, 69] ccc => cc, Pos: [63, 72] cc => I, Pos: [63, 72] cc => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [67, 71] cc => I, Pos: [67, 71] cc => I, Pos: [74, 79] cc => I, Pos: [74, 79] cc => I, Pos: [77, 83] cc => I, Pos: [77, 83] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [86, 97] cc => I, Pos: [86, 97] cc => I, Pos: [88, 91] cc => I, Pos: [88, 91] cc => I, Pos: [89, 94] cc => I, Pos: [89, 94] cc => I, Pos: [94, 100] cc => I, Pos: [94, 100] cc => I, Pos: [99, 102] cc => I, Pos: [99, 102] cc => I, Pos: [104, 114] cc => I, Pos: [104, 114] cc => I, Pos: [109, 139] cc => I, Pos: [109, 139] cc => I, Pos: [112, 115, 120] ccc => cc, Pos: [114, 117, 124] ccc => cc, Pos: [116, 122] cc => I, Pos: [116, 122] cc => I, Pos: [123, 127] cc => I, Pos: [123, 127] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [128, 136, 147] ccc => cc, Pos: [130, 165] cc => I, Pos: [130, 165] cc => I, Pos: [138, 146] cc => I, Pos: [138, 146] cc => I, Pos: [140, 144] cc => I, Pos: [140, 144] cc => I, Pos: [143, 148] cc => I, Pos: [143, 148] cc => I, Pos: [145, 154] cc => I, Pos: [145, 154] cc => I, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [161, 166] cc => I, Pos: [161, 166] cc => I, Pos: [162, 169] cc => I, Pos: [162, 169] cc => I, Pos: [170, 174, 184] ccc => cc, Pos: [172, 177] cc => I, Pos: [172, 177] cc => I, Pos: [173, 181] cc => I, Pos: [173, 181] cc => I, Pos: [177, 180] cc => I, Pos: [177, 180] cc => I, Pos: [187, 191] cc => I, Pos: [187, 191] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [193, 198] cc => I, Pos: [193, 198] cc => I, Pos: [196, 218] cc => I, Pos: [196, 218] cc => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [203, 207] cc => I, Pos: [203, 207] cc => I, Pos: [207, 213] cc => I, Pos: [207, 213] cc => I, Pos: [215, 222] cc => I, Pos: [215, 222] cc => I]

--------End Timer [Generate Plans]:  0.12499189376831055

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 9] cc => I,
 Pos: [4, 8, 16] ccc => cc,
 Pos: [11, 18, 20] ccc => cc,
 Pos: [12, 24] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [28, 33] cc => I,
 Pos: [34, 59] cc => I,
 Pos: [36, 39] cc => I,
 Pos: [48, 54, 56] ccc => cc,
 Pos: [44, 52] cc => I,
 Pos: [46, 51] cc => I,
 Pos: [63, 72] cc => I,
 Pos: [53, 58, 65] ccc => cc,
 Pos: [55, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [67, 71] cc => I,
 Pos: [74, 79] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [86, 97] cc => I,
 Pos: [88, 91] cc => I,
 Pos: [94, 100] cc => I,
 Pos: [99, 102] cc => I,
 Pos: [104, 114] cc => I,
 Pos: [109, 139] cc => I,
 Pos: [112, 115, 120] ccc => cc,
 Pos: [116, 122] cc => I,
 Pos: [123, 127] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [128, 136, 147] ccc => cc,
 Pos: [130, 165] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 148] cc => I,
 Pos: [145, 154] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [162, 169] cc => I,
 Pos: [170, 174, 184] ccc => cc,
 Pos: [177, 180] cc => I,
 Pos: [173, 181] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 198] cc => I,
 Pos: [196, 218] cc => I,
 Pos: [199, 204] cc => I,
 Pos: [203, 207] cc => I,
 Pos: [215, 222] cc => I]
Change: 46, Saving: 47

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 9] cc => I
Apply:  Pos: [4, 8, 16] ccc => cc
Apply:  Pos: [11, 18, 20] ccc => cc
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [28, 33] cc => I
Apply:  Pos: [34, 59] cc => I
Apply:  Pos: [36, 39] cc => I
Apply:  Pos: [48, 54, 56] ccc => cc
Apply:  Pos: [44, 52] cc => I
Apply:  Pos: [46, 51] cc => I
Apply:  Pos: [63, 72] cc => I
Apply:  Pos: [53, 58, 65] ccc => cc
Apply:  Pos: [55, 70] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [67, 71] cc => I
Apply:  Pos: [74, 79] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [86, 97] cc => I
Apply:  Pos: [88, 91] cc => I
Apply:  Pos: [94, 100] cc => I
Apply:  Pos: [99, 102] cc => I
Apply:  Pos: [104, 114] cc => I
Apply:  Pos: [109, 139] cc => I
Apply:  Pos: [112, 115, 120] ccc => cc
Apply:  Pos: [116, 122] cc => I
Apply:  Pos: [123, 127] cc => I
Apply:  Pos: [124, 134] cc => I
Apply:  Pos: [128, 136, 147] ccc => cc
Apply:  Pos: [130, 165] cc => I
Apply:  Pos: [138, 146] cc => I
Apply:  Pos: [140, 144] cc => I
Apply:  Pos: [143, 148] cc => I
Apply:  Pos: [145, 154] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [162, 169] cc => I
Apply:  Pos: [170, 174, 184] ccc => cc
Apply:  Pos: [177, 180] cc => I
Apply:  Pos: [173, 181] cc => I
Apply:  Pos: [187, 191] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [193, 198] cc => I
Apply:  Pos: [196, 218] cc => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [203, 207] cc => I
Apply:  Pos: [215, 222] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 2], [14, 15], [7, 1], [16, 2], [8, 7], [5, 17], [15, 11], [14, 3], [18, 2], [15, 7], [17, 19], [10, 16], [13, 17], [5, 0], [15, 8], [16, 2], [18, 16], [9, 6], [14, 3], [18, 2], [7, 1], [0, 9], [3, 7], [1, 18], [13, 9], [1, 4], [8, 7], [3, 18], [0, 9], [15, 7], [18, 16], [9, 12], [13, 17], [19, 12], [5, 0], [11, 19], [3, 18], [2, 6], [10, 19], [8, 13], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [5, 0], [16, 2], [5, 17], [7, 18], [4, 16], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 16], [10, 19], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [16, 2], [19, 9], [7, 18], [3, 1], [18, 2], [8, 11], [4, 16], [1, 18], [13, 5], [19, 6], [19, 9], [5, 17], [1, 4], [6, 12], [18, 10], [10, 2], [19, 12], [8, 11], [10, 19], [3, 18], [18, 16], [9, 6], [8, 13], [16, 2], [11, 19], [5, 17], [15, 11], [18, 10], [11, 17], [19, 9], [3, 7], [14, 15], [17, 19], [7, 11], [10, 2], [18, 2], [17, 0], [15, 8], [3, 18], [15, 11], [8, 11], [19, 9], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [1, 4], [19, 12], ----End Timer [Execute Mapping]:  4.3909220695495605

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[16, 27]
[21, 41]
[43, 57]
[82, 89]
[85, 93]
[89, 101]
[95, 109]
[96, 138]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[36, 39, 45]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 116, 125]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[13, 18, 23]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[16, 27]
[21, 41]
[43, 57]
[82, 89]
[85, 93]
[89, 101]
[95, 109]
[96, 138]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3596301078796387

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [13, 18, 23] ccc => cc, Pos: [16, 27] cc => I, Pos: [16, 27] cc => I, Pos: [21, 41] cc => I, Pos: [21, 41] cc => I, Pos: [36, 39, 45] ccc => cc, Pos: [43, 57] cc => I, Pos: [43, 57] cc => I, Pos: [82, 89] cc => I, Pos: [82, 89] cc => I, Pos: [85, 93] cc => I, Pos: [85, 93] cc => I, Pos: [89, 101] cc => I, Pos: [89, 101] cc => I, Pos: [95, 109] cc => I, Pos: [95, 109] cc => I, Pos: [96, 138] cc => I, Pos: [96, 138] cc => I, Pos: [113, 116, 125] ccc => cc]

--------End Timer [Generate Plans]:  0.03125309944152832

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [13, 18, 23] ccc => cc,
 Pos: [16, 27] cc => I,
 Pos: [21, 41] cc => I,
 Pos: [36, 39, 45] ccc => cc,
 Pos: [43, 57] cc => I,
 Pos: [89, 101] cc => I,
 Pos: [85, 93] cc => I,
 Pos: [95, 109] cc => I,
 Pos: [96, 138] cc => I,
 Pos: [113, 116, 125] ccc => cc]
Change: 10, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [13, 18, 23] ccc => cc
Apply:  Pos: [16, 27] cc => I
Apply:  Pos: [21, 41] cc => I
Apply:  Pos: [36, 39, 45] ccc => cc
Apply:  Pos: [43, 57] cc => I
Apply:  Pos: [89, 101] cc => I
Apply:  Pos: [85, 93] cc => I
Apply:  Pos: [95, 109] cc => I
Apply:  Pos: [96, 138] cc => I
Apply:  Pos: [113, 116, 125] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 2], [14, 15], [7, 1], [16, 2], [15, 8], [5, 17], [15, 11], [18, 2], [8, 7], [17, 19], [10, 16], [5, 0], [16, 2], [18, 16], [9, 6], [18, 2], [7, 1], [0, 9], [3, 7], [1, 18], [13, 9], [1, 4], [8, 7], [3, 16], [0, 9], [15, 7], [18, 16], [9, 12], [19, 12], [11, 19], [2, 6], [10, 19], [8, 13], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [16, 2], [5, 17], [7, 18], [4, 16], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 19], [10, 16], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [16, 2], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [8, 13], [16, 2], [11, 19], [15, 11], [18, 10], [11, 17], [17, 19], [3, 7], [14, 15], [19, 9], [7, 11], [18, 2], [10, 2], [17, 0], [15, 8], [3, 18], [8, 11], [15, 11], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [19, 12], ----End Timer [Execute Mapping]:  2.390883207321167

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.984544277191162

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 2], [14, 15], [7, 1], [16, 2], [15, 8], [5, 17], [15, 11], [18, 2], [8, 7], [17, 19], [10, 16], [5, 0], [16, 2], [18, 16], [9, 6], [18, 2], [7, 1], [0, 9], [3, 7], [1, 18], [13, 9], [1, 4], [8, 7], [3, 16], [0, 9], [15, 7], [18, 16], [19, 12], [9, 12], [11, 19], [2, 6], [10, 19], [8, 13], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [16, 2], [5, 17], [7, 18], [4, 16], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 16], [10, 19], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [16, 2], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [8, 13], [16, 2], [11, 19], [15, 11], [18, 10], [11, 17], [17, 19], [3, 7], [14, 15], [19, 9], [7, 11], [10, 2], [18, 2], [17, 0], [15, 8], [3, 18], [15, 11], [8, 11], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [19, 12], ----End Timer [Execute Mapping]:  1.984544277191162

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [123] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 246

Reduced: 
 - size: 102 (45.33%)
 - depth: 11 (24.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09373068809509277

[15, 7], [13, 5], [10, 16], [11, 17], [19, 6], [7, 1], [18, 2], [8, 11], [6, 12], [10, 16], [1, 18], [10, 16], [8, 13], [17, 0], [14, 15], [7, 1], [19, 6], [17, 0], [16, 2], [8, 7], [10, 16], [5, 17], [15, 11], [14, 3], [8, 13], [18, 2], [15, 7], [17, 19], [3, 1], [10, 16], [13, 17], [5, 0], [15, 8], [3, 1], [10, 19], [16, 2], [8, 13], [18, 16], [9, 6], [8, 13], [14, 3], [18, 2], [7, 1], [0, 9], [13, 5], [3, 7], [16, 2], [1, 18], [13, 0], [1, 4], [8, 7], [16, 2], [13, 5], [18, 16], [0, 9], [15, 8], [13, 0], [15, 7], [3, 18], [10, 19], [9, 12], [13, 17], [19, 12], [1, 4], [5, 0], [18, 16], [3, 7], [13, 0], [11, 19], [3, 18], [15, 8], [13, 0], [1, 4], [2, 6], [11, 17], [10, 19], [3, 7], [8, 13], [1, 18], [11, 17], [10, 16], [19, 6], [14, 15], [8, 13], [18, 16], [17, 10], [9, 12], [3, 1], [15, 11], [8, 13], [1, 4], [15, 11], [5, 0], [16, 2], [8, 13], [5, 17], [7, 18], [9, 12], [4, 16], [11, 10], [8, 13], [9, 6], [11, 10], [17, 19], [3, 7], [13, 0], [1, 18], [11, 17], [17, 0], [13, 5], [6, 12], [18, 2], [15, 11], [19, 9], [3, 7], [11, 17], [9, 6], [7, 1], [15, 8], [10, 16], [15, 11], [10, 19], [9, 6], [16, 2], [3, 7], [13, 0], [11, 10], [16, 2], [17, 19], [3, 18], [14, 15], [18, 10], [8, 11], [1, 4], [3, 7], [16, 2], [19, 9], [7, 18], [10, 16], [13, 5], [7, 11], [3, 1], [18, 2], [8, 13], [7, 11], [14, 3], [10, 16], [17, 19], [8, 13], [8, 11], [4, 16], [1, 18], [13, 5], [19, 6], [14, 3], [8, 11], [19, 9], [5, 17], [1, 4], [6, 12], [18, 10], [8, 11], [17, 0], [10, 2], [19, 12], [14, 15], [8, 11], [10, 19], [3, 18], [17, 0], [16, 2], [9, 6], [8, 13], [6, 12], [18, 2], [11, 19], [5, 17], [8, 13], [15, 11], [18, 10], [8, 13], [6, 12], [11, 17], [19, 9], [18, 16], [3, 7], [14, 15], [13, 0], [17, 19], [7, 11], [10, 2], [13, 0], [7, 1], [10, 19], [18, 2], [17, 0], [4, 16], [15, 8], [10, 19], [13, 0], [3, 18], [7, 1], [15, 11], [17, 10], [13, 0], [8, 11], [19, 9], [17, 10], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [14, 3], [11, 10], [15, 8], [4, 16], [5, 0], [10, 2], [18, 16], [14, 3], [1, 4], [19, 12], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 9]
[9, 11]
[13, 17]
[12, 24]
[20, 29]
[28, 33]
[36, 39]
[46, 51]
[44, 52]
[34, 59]
[49, 63]
[55, 70]
[67, 71]
[63, 72]
[66, 76]
[74, 79]
[77, 83]
[83, 89]
[88, 91]
[89, 94]
[86, 97]
[94, 100]
[99, 102]
[104, 114]
[116, 122]
[123, 127]
[124, 134]
[127, 135]
[109, 139]
[140, 144]
[138, 146]
[143, 148]
[145, 154]
[149, 155]
[155, 161]
[130, 165]
[161, 166]
[162, 169]
[172, 177]
[177, 180]
[173, 181]
[187, 191]
[193, 198]
[192, 201]
[199, 204]
[203, 207]
[207, 213]
[196, 218]
[215, 222]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 8, 16]
[11, 18, 20]
[48, 54, 56]
[58, 65, 69]
[112, 115, 120]
[114, 117, 124]
[128, 136, 147]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[43, 48, 54]
[53, 58, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[170, 174, 184]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 9]
[9, 11]
[13, 17]
[12, 24]
[20, 29]
[28, 33]
[36, 39]
[46, 51]
[44, 52]
[34, 59]
[49, 63]
[55, 70]
[67, 71]
[63, 72]
[66, 76]
[74, 79]
[77, 83]
[83, 89]
[88, 91]
[89, 94]
[86, 97]
[94, 100]
[99, 102]
[104, 114]
[116, 122]
[123, 127]
[124, 134]
[127, 135]
[109, 139]
[140, 144]
[138, 146]
[143, 148]
[145, 154]
[149, 155]
[155, 161]
[130, 165]
[161, 166]
[162, 169]
[172, 177]
[177, 180]
[173, 181]
[187, 191]
[193, 198]
[192, 201]
[199, 204]
[203, 207]
[207, 213]
[196, 218]
[215, 222]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.203159332275391

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 9] cc => I, Pos: [2, 9] cc => I, Pos: [4, 8, 16] ccc => cc, Pos: [9, 11] cc => I, Pos: [9, 11] cc => I, Pos: [11, 18, 20] ccc => cc, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [28, 33] cc => I, Pos: [28, 33] cc => I, Pos: [34, 59] cc => I, Pos: [34, 59] cc => I, Pos: [36, 39] cc => I, Pos: [36, 39] cc => I, Pos: [43, 48, 54] ccc => cc, Pos: [44, 52] cc => I, Pos: [44, 52] cc => I, Pos: [46, 51] cc => I, Pos: [46, 51] cc => I, Pos: [48, 54, 56] ccc => cc, Pos: [49, 63] cc => I, Pos: [49, 63] cc => I, Pos: [53, 58, 65] ccc => cc, Pos: [55, 70] cc => I, Pos: [55, 70] cc => I, Pos: [58, 65, 69] ccc => cc, Pos: [63, 72] cc => I, Pos: [63, 72] cc => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [67, 71] cc => I, Pos: [67, 71] cc => I, Pos: [74, 79] cc => I, Pos: [74, 79] cc => I, Pos: [77, 83] cc => I, Pos: [77, 83] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [86, 97] cc => I, Pos: [86, 97] cc => I, Pos: [88, 91] cc => I, Pos: [88, 91] cc => I, Pos: [89, 94] cc => I, Pos: [89, 94] cc => I, Pos: [94, 100] cc => I, Pos: [94, 100] cc => I, Pos: [99, 102] cc => I, Pos: [99, 102] cc => I, Pos: [104, 114] cc => I, Pos: [104, 114] cc => I, Pos: [109, 139] cc => I, Pos: [109, 139] cc => I, Pos: [112, 115, 120] ccc => cc, Pos: [114, 117, 124] ccc => cc, Pos: [116, 122] cc => I, Pos: [116, 122] cc => I, Pos: [123, 127] cc => I, Pos: [123, 127] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [128, 136, 147] ccc => cc, Pos: [130, 165] cc => I, Pos: [130, 165] cc => I, Pos: [138, 146] cc => I, Pos: [138, 146] cc => I, Pos: [140, 144] cc => I, Pos: [140, 144] cc => I, Pos: [143, 148] cc => I, Pos: [143, 148] cc => I, Pos: [145, 154] cc => I, Pos: [145, 154] cc => I, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [161, 166] cc => I, Pos: [161, 166] cc => I, Pos: [162, 169] cc => I, Pos: [162, 169] cc => I, Pos: [170, 174, 184] ccc => cc, Pos: [172, 177] cc => I, Pos: [172, 177] cc => I, Pos: [173, 181] cc => I, Pos: [173, 181] cc => I, Pos: [177, 180] cc => I, Pos: [177, 180] cc => I, Pos: [187, 191] cc => I, Pos: [187, 191] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [193, 198] cc => I, Pos: [193, 198] cc => I, Pos: [196, 218] cc => I, Pos: [196, 218] cc => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [203, 207] cc => I, Pos: [203, 207] cc => I, Pos: [207, 213] cc => I, Pos: [207, 213] cc => I, Pos: [215, 222] cc => I, Pos: [215, 222] cc => I]

--------End Timer [Generate Plans]:  0.12601065635681152

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 11] cc => I,
 Pos: [4, 8, 16] ccc => cc,
 Pos: [12, 24] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [20, 29] cc => I,
 Pos: [28, 33] cc => I,
 Pos: [34, 59] cc => I,
 Pos: [36, 39] cc => I,
 Pos: [43, 48, 54] ccc => cc,
 Pos: [44, 52] cc => I,
 Pos: [46, 51] cc => I,
 Pos: [49, 63] cc => I,
 Pos: [58, 65, 69] ccc => cc,
 Pos: [55, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [67, 71] cc => I,
 Pos: [74, 79] cc => I,
 Pos: [77, 83] cc => I,
 Pos: [86, 97] cc => I,
 Pos: [88, 91] cc => I,
 Pos: [89, 94] cc => I,
 Pos: [99, 102] cc => I,
 Pos: [114, 117, 124] ccc => cc,
 Pos: [109, 139] cc => I,
 Pos: [112, 115, 120] ccc => cc,
 Pos: [116, 122] cc => I,
 Pos: [123, 127] cc => I,
 Pos: [128, 136, 147] ccc => cc,
 Pos: [130, 165] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 148] cc => I,
 Pos: [145, 154] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [162, 169] cc => I,
 Pos: [170, 174, 184] ccc => cc,
 Pos: [172, 177] cc => I,
 Pos: [173, 181] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 198] cc => I,
 Pos: [196, 218] cc => I,
 Pos: [199, 204] cc => I,
 Pos: [203, 207] cc => I,
 Pos: [215, 222] cc => I]
Change: 45, Saving: 46

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 11] cc => I
Apply:  Pos: [4, 8, 16] ccc => cc
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [28, 33] cc => I
Apply:  Pos: [34, 59] cc => I
Apply:  Pos: [36, 39] cc => I
Apply:  Pos: [43, 48, 54] ccc => cc
Apply:  Pos: [44, 52] cc => I
Apply:  Pos: [46, 51] cc => I
Apply:  Pos: [49, 63] cc => I
Apply:  Pos: [58, 65, 69] ccc => cc
Apply:  Pos: [55, 70] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [67, 71] cc => I
Apply:  Pos: [74, 79] cc => I
Apply:  Pos: [77, 83] cc => I
Apply:  Pos: [86, 97] cc => I
Apply:  Pos: [88, 91] cc => I
Apply:  Pos: [89, 94] cc => I
Apply:  Pos: [99, 102] cc => I
Apply:  Pos: [114, 117, 124] ccc => cc
Apply:  Pos: [109, 139] cc => I
Apply:  Pos: [112, 115, 120] ccc => cc
Apply:  Pos: [116, 122] cc => I
Apply:  Pos: [123, 127] cc => I
Apply:  Pos: [128, 136, 147] ccc => cc
Apply:  Pos: [130, 165] cc => I
Apply:  Pos: [138, 146] cc => I
Apply:  Pos: [140, 144] cc => I
Apply:  Pos: [143, 148] cc => I
Apply:  Pos: [145, 154] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [162, 169] cc => I
Apply:  Pos: [170, 174, 184] ccc => cc
Apply:  Pos: [172, 177] cc => I
Apply:  Pos: [173, 181] cc => I
Apply:  Pos: [187, 191] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [193, 198] cc => I
Apply:  Pos: [196, 218] cc => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [203, 207] cc => I
Apply:  Pos: [215, 222] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [10, 16], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [14, 15], [7, 1], [16, 2], [8, 7], [5, 17], [15, 11], [14, 3], [18, 2], [15, 7], [17, 19], [13, 17], [5, 0], [15, 8], [16, 2], [18, 16], [9, 6], [14, 3], [18, 2], [7, 1], [13, 0], [3, 7], [1, 18], [0, 9], [8, 7], [18, 16], [13, 0], [15, 7], [3, 16], [9, 12], [13, 17], [19, 12], [5, 0], [18, 16], [11, 19], [1, 4], [2, 6], [10, 19], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [5, 0], [16, 2], [5, 17], [7, 18], [4, 16], [8, 13], [9, 6], [17, 19], [3, 7], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [3, 1], [11, 17], [7, 1], [15, 8], [10, 16], [10, 19], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [3, 7], [16, 2], [19, 9], [7, 18], [3, 1], [18, 2], [8, 11], [4, 16], [1, 18], [13, 5], [19, 6], [19, 9], [5, 17], [1, 4], [6, 12], [18, 10], [10, 2], [19, 12], [8, 11], [10, 19], [3, 18], [18, 16], [9, 6], [16, 2], [11, 19], [5, 17], [15, 11], [18, 10], [8, 13], [11, 17], [19, 9], [3, 7], [14, 15], [17, 19], [7, 11], [10, 2], [18, 2], [17, 0], [15, 8], [3, 18], [15, 11], [8, 11], [19, 9], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [1, 4], [19, 12], ----End Timer [Execute Mapping]:  4.329169988632202

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[16, 26]
[20, 39]
[41, 55]
[83, 91]
[87, 95]
[91, 103]
[97, 110]
[98, 140]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[29, 32, 35]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[115, 118, 127]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[13, 18, 22]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[16, 26]
[20, 39]
[41, 55]
[83, 91]
[87, 95]
[91, 103]
[97, 110]
[98, 140]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.374544382095337

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [13, 18, 22] ccc => cc, Pos: [16, 26] cc => I, Pos: [16, 26] cc => I, Pos: [20, 39] cc => I, Pos: [20, 39] cc => I, Pos: [29, 32, 35] ccc => cc, Pos: [41, 55] cc => I, Pos: [41, 55] cc => I, Pos: [83, 91] cc => I, Pos: [83, 91] cc => I, Pos: [87, 95] cc => I, Pos: [87, 95] cc => I, Pos: [91, 103] cc => I, Pos: [91, 103] cc => I, Pos: [97, 110] cc => I, Pos: [97, 110] cc => I, Pos: [98, 140] cc => I, Pos: [98, 140] cc => I, Pos: [115, 118, 127] ccc => cc]

--------End Timer [Generate Plans]:  0.031247615814208984

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [13, 18, 22] ccc => cc,
 Pos: [16, 26] cc => I,
 Pos: [20, 39] cc => I,
 Pos: [29, 32, 35] ccc => cc,
 Pos: [41, 55] cc => I,
 Pos: [91, 103] cc => I,
 Pos: [87, 95] cc => I,
 Pos: [97, 110] cc => I,
 Pos: [98, 140] cc => I,
 Pos: [115, 118, 127] ccc => cc]
Change: 10, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [13, 18, 22] ccc => cc
Apply:  Pos: [16, 26] cc => I
Apply:  Pos: [20, 39] cc => I
Apply:  Pos: [29, 32, 35] ccc => cc
Apply:  Pos: [41, 55] cc => I
Apply:  Pos: [91, 103] cc => I
Apply:  Pos: [87, 95] cc => I
Apply:  Pos: [97, 110] cc => I
Apply:  Pos: [98, 140] cc => I
Apply:  Pos: [115, 118, 127] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [10, 16], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [14, 15], [7, 1], [16, 2], [15, 8], [5, 17], [15, 11], [18, 2], [8, 7], [17, 19], [5, 0], [16, 2], [18, 16], [9, 6], [18, 2], [7, 1], [13, 9], [3, 7], [1, 18], [0, 9], [8, 7], [18, 16], [15, 7], [3, 16], [9, 12], [19, 12], [18, 16], [11, 19], [1, 4], [2, 6], [10, 19], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [16, 2], [5, 17], [7, 18], [4, 16], [8, 13], [9, 6], [17, 19], [3, 7], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [3, 1], [11, 17], [7, 1], [15, 8], [10, 19], [10, 16], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [3, 7], [16, 2], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [16, 2], [11, 19], [15, 11], [18, 10], [8, 13], [11, 17], [17, 19], [3, 7], [14, 15], [19, 9], [7, 11], [18, 2], [10, 2], [17, 0], [15, 8], [3, 18], [8, 11], [15, 11], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [19, 12], ----End Timer [Execute Mapping]:  2.405791997909546

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9843993186950684

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [10, 16], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [14, 15], [7, 1], [16, 2], [15, 8], [5, 17], [15, 11], [18, 2], [8, 7], [17, 19], [5, 0], [16, 2], [18, 16], [9, 6], [18, 2], [7, 1], [13, 9], [3, 7], [1, 18], [0, 9], [8, 7], [18, 16], [15, 7], [3, 16], [19, 12], [9, 12], [18, 16], [11, 19], [1, 4], [2, 6], [10, 19], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [16, 2], [5, 17], [7, 18], [4, 16], [8, 13], [9, 6], [17, 19], [3, 7], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [3, 1], [11, 17], [7, 1], [15, 8], [10, 16], [10, 19], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [3, 7], [16, 2], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [16, 2], [11, 19], [15, 11], [18, 10], [8, 13], [11, 17], [17, 19], [3, 7], [14, 15], [19, 9], [7, 11], [10, 2], [18, 2], [17, 0], [15, 8], [3, 18], [15, 11], [8, 11], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [19, 12], ----End Timer [Execute Mapping]:  1.9843993186950684

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [125] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 250

Reduced: 
 - size: 100 (44.44%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07813715934753418

[15, 7], [13, 5], [10, 16], [11, 17], [19, 6], [7, 1], [18, 2], [8, 11], [6, 12], [10, 16], [1, 18], [10, 16], [8, 13], [17, 0], [14, 15], [7, 1], [19, 6], [17, 0], [16, 2], [8, 7], [10, 16], [5, 17], [15, 11], [14, 3], [8, 13], [18, 2], [15, 7], [17, 19], [3, 1], [10, 16], [13, 17], [5, 0], [15, 8], [3, 1], [10, 19], [16, 2], [8, 13], [18, 16], [9, 6], [8, 13], [14, 3], [18, 2], [7, 1], [0, 9], [13, 5], [3, 7], [16, 2], [1, 18], [13, 0], [1, 4], [8, 7], [16, 2], [13, 5], [18, 16], [0, 9], [15, 8], [13, 0], [15, 7], [3, 18], [10, 19], [9, 12], [13, 17], [19, 12], [1, 4], [5, 0], [18, 16], [3, 7], [13, 0], [11, 19], [3, 18], [15, 8], [13, 0], [1, 4], [2, 6], [11, 17], [10, 19], [3, 7], [8, 13], [1, 18], [11, 17], [10, 16], [19, 6], [14, 15], [8, 13], [18, 16], [17, 10], [9, 12], [3, 1], [15, 11], [8, 13], [1, 4], [15, 11], [5, 0], [16, 2], [8, 13], [5, 17], [7, 18], [9, 12], [4, 16], [11, 10], [8, 13], [9, 6], [11, 10], [17, 19], [3, 7], [13, 0], [1, 18], [11, 17], [17, 0], [13, 5], [6, 12], [18, 2], [15, 11], [19, 9], [3, 7], [11, 17], [9, 6], [7, 1], [15, 8], [10, 16], [15, 11], [10, 19], [9, 6], [16, 2], [3, 7], [13, 0], [11, 10], [16, 2], [17, 19], [3, 18], [14, 15], [18, 10], [8, 11], [1, 4], [3, 7], [16, 2], [19, 9], [7, 18], [10, 16], [13, 5], [7, 11], [3, 1], [18, 2], [8, 13], [7, 11], [14, 3], [10, 16], [17, 19], [8, 13], [8, 11], [4, 16], [1, 18], [13, 5], [19, 6], [14, 3], [8, 11], [19, 9], [5, 17], [1, 4], [6, 12], [18, 10], [8, 11], [17, 0], [10, 2], [19, 12], [14, 15], [8, 11], [10, 19], [3, 18], [17, 0], [16, 2], [9, 6], [8, 13], [6, 12], [18, 2], [11, 19], [5, 17], [8, 13], [15, 11], [18, 10], [8, 13], [6, 12], [11, 17], [19, 9], [18, 16], [3, 7], [14, 15], [13, 0], [17, 19], [7, 11], [10, 2], [13, 0], [7, 1], [10, 19], [18, 2], [17, 0], [4, 16], [15, 8], [10, 19], [13, 0], [3, 18], [7, 1], [15, 11], [17, 10], [13, 0], [8, 11], [19, 9], [17, 10], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [14, 3], [11, 10], [15, 8], [4, 16], [5, 0], [10, 2], [18, 16], [14, 3], [1, 4], [19, 12], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 9]
[9, 11]
[13, 17]
[12, 24]
[20, 29]
[28, 33]
[36, 39]
[46, 51]
[44, 52]
[34, 59]
[49, 63]
[55, 70]
[67, 71]
[63, 72]
[66, 76]
[74, 79]
[77, 83]
[83, 89]
[88, 91]
[89, 94]
[86, 97]
[94, 100]
[99, 102]
[104, 114]
[116, 122]
[123, 127]
[124, 134]
[127, 135]
[109, 139]
[140, 144]
[138, 146]
[143, 148]
[145, 154]
[149, 155]
[155, 161]
[130, 165]
[161, 166]
[162, 169]
[172, 177]
[177, 180]
[173, 181]
[187, 191]
[193, 198]
[192, 201]
[199, 204]
[203, 207]
[207, 213]
[196, 218]
[215, 222]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 8, 16]
[11, 18, 20]
[48, 54, 56]
[58, 65, 69]
[112, 115, 120]
[114, 117, 124]
[128, 136, 147]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[43, 48, 54]
[53, 58, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[170, 174, 184]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 9]
[9, 11]
[13, 17]
[12, 24]
[20, 29]
[28, 33]
[36, 39]
[46, 51]
[44, 52]
[34, 59]
[49, 63]
[55, 70]
[67, 71]
[63, 72]
[66, 76]
[74, 79]
[77, 83]
[83, 89]
[88, 91]
[89, 94]
[86, 97]
[94, 100]
[99, 102]
[104, 114]
[116, 122]
[123, 127]
[124, 134]
[127, 135]
[109, 139]
[140, 144]
[138, 146]
[143, 148]
[145, 154]
[149, 155]
[155, 161]
[130, 165]
[161, 166]
[162, 169]
[172, 177]
[177, 180]
[173, 181]
[187, 191]
[193, 198]
[192, 201]
[199, 204]
[203, 207]
[207, 213]
[196, 218]
[215, 222]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.234349966049194

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 9] cc => I, Pos: [2, 9] cc => I, Pos: [4, 8, 16] ccc => cc, Pos: [9, 11] cc => I, Pos: [9, 11] cc => I, Pos: [11, 18, 20] ccc => cc, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [28, 33] cc => I, Pos: [28, 33] cc => I, Pos: [34, 59] cc => I, Pos: [34, 59] cc => I, Pos: [36, 39] cc => I, Pos: [36, 39] cc => I, Pos: [43, 48, 54] ccc => cc, Pos: [44, 52] cc => I, Pos: [44, 52] cc => I, Pos: [46, 51] cc => I, Pos: [46, 51] cc => I, Pos: [48, 54, 56] ccc => cc, Pos: [49, 63] cc => I, Pos: [49, 63] cc => I, Pos: [53, 58, 65] ccc => cc, Pos: [55, 70] cc => I, Pos: [55, 70] cc => I, Pos: [58, 65, 69] ccc => cc, Pos: [63, 72] cc => I, Pos: [63, 72] cc => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [67, 71] cc => I, Pos: [67, 71] cc => I, Pos: [74, 79] cc => I, Pos: [74, 79] cc => I, Pos: [77, 83] cc => I, Pos: [77, 83] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [86, 97] cc => I, Pos: [86, 97] cc => I, Pos: [88, 91] cc => I, Pos: [88, 91] cc => I, Pos: [89, 94] cc => I, Pos: [89, 94] cc => I, Pos: [94, 100] cc => I, Pos: [94, 100] cc => I, Pos: [99, 102] cc => I, Pos: [99, 102] cc => I, Pos: [104, 114] cc => I, Pos: [104, 114] cc => I, Pos: [109, 139] cc => I, Pos: [109, 139] cc => I, Pos: [112, 115, 120] ccc => cc, Pos: [114, 117, 124] ccc => cc, Pos: [116, 122] cc => I, Pos: [116, 122] cc => I, Pos: [123, 127] cc => I, Pos: [123, 127] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [128, 136, 147] ccc => cc, Pos: [130, 165] cc => I, Pos: [130, 165] cc => I, Pos: [138, 146] cc => I, Pos: [138, 146] cc => I, Pos: [140, 144] cc => I, Pos: [140, 144] cc => I, Pos: [143, 148] cc => I, Pos: [143, 148] cc => I, Pos: [145, 154] cc => I, Pos: [145, 154] cc => I, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [161, 166] cc => I, Pos: [161, 166] cc => I, Pos: [162, 169] cc => I, Pos: [162, 169] cc => I, Pos: [170, 174, 184] ccc => cc, Pos: [172, 177] cc => I, Pos: [172, 177] cc => I, Pos: [173, 181] cc => I, Pos: [173, 181] cc => I, Pos: [177, 180] cc => I, Pos: [177, 180] cc => I, Pos: [187, 191] cc => I, Pos: [187, 191] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [193, 198] cc => I, Pos: [193, 198] cc => I, Pos: [196, 218] cc => I, Pos: [196, 218] cc => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [203, 207] cc => I, Pos: [203, 207] cc => I, Pos: [207, 213] cc => I, Pos: [207, 213] cc => I, Pos: [215, 222] cc => I, Pos: [215, 222] cc => I]

--------End Timer [Generate Plans]:  0.10938382148742676

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 11] cc => I,
 Pos: [4, 8, 16] ccc => cc,
 Pos: [12, 24] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [20, 29] cc => I,
 Pos: [28, 33] cc => I,
 Pos: [34, 59] cc => I,
 Pos: [36, 39] cc => I,
 Pos: [43, 48, 54] ccc => cc,
 Pos: [44, 52] cc => I,
 Pos: [46, 51] cc => I,
 Pos: [49, 63] cc => I,
 Pos: [58, 65, 69] ccc => cc,
 Pos: [55, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [67, 71] cc => I,
 Pos: [74, 79] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [86, 97] cc => I,
 Pos: [88, 91] cc => I,
 Pos: [94, 100] cc => I,
 Pos: [99, 102] cc => I,
 Pos: [114, 117, 124] ccc => cc,
 Pos: [109, 139] cc => I,
 Pos: [112, 115, 120] ccc => cc,
 Pos: [116, 122] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [128, 136, 147] ccc => cc,
 Pos: [130, 165] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 148] cc => I,
 Pos: [145, 154] cc => I,
 Pos: [149, 155] cc => I,
 Pos: [161, 166] cc => I,
 Pos: [162, 169] cc => I,
 Pos: [170, 174, 184] ccc => cc,
 Pos: [172, 177] cc => I,
 Pos: [173, 181] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 198] cc => I,
 Pos: [196, 218] cc => I,
 Pos: [199, 204] cc => I,
 Pos: [207, 213] cc => I,
 Pos: [215, 222] cc => I]
Change: 46, Saving: 47

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 11] cc => I
Apply:  Pos: [4, 8, 16] ccc => cc
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [28, 33] cc => I
Apply:  Pos: [34, 59] cc => I
Apply:  Pos: [36, 39] cc => I
Apply:  Pos: [43, 48, 54] ccc => cc
Apply:  Pos: [44, 52] cc => I
Apply:  Pos: [46, 51] cc => I
Apply:  Pos: [49, 63] cc => I
Apply:  Pos: [58, 65, 69] ccc => cc
Apply:  Pos: [55, 70] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [67, 71] cc => I
Apply:  Pos: [74, 79] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [86, 97] cc => I
Apply:  Pos: [88, 91] cc => I
Apply:  Pos: [94, 100] cc => I
Apply:  Pos: [99, 102] cc => I
Apply:  Pos: [114, 117, 124] ccc => cc
Apply:  Pos: [109, 139] cc => I
Apply:  Pos: [112, 115, 120] ccc => cc
Apply:  Pos: [116, 122] cc => I
Apply:  Pos: [127, 135] cc => I
Apply:  Pos: [128, 136, 147] ccc => cc
Apply:  Pos: [130, 165] cc => I
Apply:  Pos: [138, 146] cc => I
Apply:  Pos: [140, 144] cc => I
Apply:  Pos: [143, 148] cc => I
Apply:  Pos: [145, 154] cc => I
Apply:  Pos: [149, 155] cc => I
Apply:  Pos: [161, 166] cc => I
Apply:  Pos: [162, 169] cc => I
Apply:  Pos: [170, 174, 184] ccc => cc
Apply:  Pos: [172, 177] cc => I
Apply:  Pos: [173, 181] cc => I
Apply:  Pos: [187, 191] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [193, 198] cc => I
Apply:  Pos: [196, 218] cc => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [207, 213] cc => I
Apply:  Pos: [215, 222] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [10, 16], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [14, 15], [7, 1], [16, 2], [8, 7], [5, 17], [15, 11], [14, 3], [18, 2], [15, 7], [17, 19], [13, 17], [5, 0], [15, 8], [16, 2], [18, 16], [9, 6], [14, 3], [18, 2], [7, 1], [13, 0], [3, 7], [1, 18], [0, 9], [8, 7], [18, 16], [13, 0], [15, 7], [3, 16], [9, 12], [13, 17], [19, 12], [5, 0], [18, 16], [11, 19], [1, 4], [2, 6], [10, 19], [8, 13], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [5, 0], [16, 2], [5, 17], [7, 18], [4, 16], [9, 6], [17, 19], [3, 7], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [3, 1], [11, 17], [7, 1], [15, 8], [10, 16], [10, 19], [16, 2], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [3, 7], [19, 9], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [19, 9], [5, 17], [1, 4], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [16, 2], [11, 19], [5, 17], [15, 11], [18, 10], [8, 13], [11, 17], [19, 9], [3, 7], [14, 15], [17, 19], [7, 11], [10, 2], [18, 2], [17, 0], [15, 8], [3, 18], [15, 11], [17, 10], [8, 11], [19, 9], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [1, 4], [19, 12], ----End Timer [Execute Mapping]:  4.343733787536621

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[16, 26]
[20, 39]
[41, 56]
[87, 94]
[96, 108]
[97, 138]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[29, 32, 35]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 116, 126]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[13, 18, 22]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[16, 26]
[20, 39]
[41, 56]
[87, 94]
[96, 108]
[97, 138]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.328603982925415

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [13, 18, 22] ccc => cc, Pos: [16, 26] cc => I, Pos: [16, 26] cc => I, Pos: [20, 39] cc => I, Pos: [20, 39] cc => I, Pos: [29, 32, 35] ccc => cc, Pos: [41, 56] cc => I, Pos: [41, 56] cc => I, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I, Pos: [96, 108] cc => I, Pos: [96, 108] cc => I, Pos: [97, 138] cc => I, Pos: [97, 138] cc => I, Pos: [113, 116, 126] ccc => cc]

--------End Timer [Generate Plans]:  0.031145811080932617

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [13, 18, 22] ccc => cc,
 Pos: [16, 26] cc => I,
 Pos: [20, 39] cc => I,
 Pos: [29, 32, 35] ccc => cc,
 Pos: [41, 56] cc => I,
 Pos: [87, 94] cc => I,
 Pos: [96, 108] cc => I,
 Pos: [97, 138] cc => I,
 Pos: [113, 116, 126] ccc => cc]
Change: 9, Saving: 9

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [13, 18, 22] ccc => cc
Apply:  Pos: [16, 26] cc => I
Apply:  Pos: [20, 39] cc => I
Apply:  Pos: [29, 32, 35] ccc => cc
Apply:  Pos: [41, 56] cc => I
Apply:  Pos: [87, 94] cc => I
Apply:  Pos: [96, 108] cc => I
Apply:  Pos: [97, 138] cc => I
Apply:  Pos: [113, 116, 126] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [10, 16], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [14, 15], [7, 1], [16, 2], [15, 8], [5, 17], [15, 11], [18, 2], [8, 7], [17, 19], [5, 0], [16, 2], [18, 16], [9, 6], [18, 2], [7, 1], [13, 9], [3, 7], [1, 18], [0, 9], [8, 7], [18, 16], [15, 7], [3, 16], [9, 12], [19, 12], [18, 16], [11, 19], [1, 4], [2, 6], [10, 19], [8, 13], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [16, 2], [5, 17], [7, 18], [4, 16], [9, 6], [17, 19], [3, 7], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [3, 1], [11, 17], [7, 1], [15, 8], [10, 19], [10, 16], [16, 2], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [3, 7], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [16, 2], [11, 19], [15, 11], [18, 10], [8, 13], [11, 17], [17, 19], [3, 7], [14, 15], [19, 9], [7, 11], [18, 2], [10, 2], [17, 0], [15, 8], [3, 18], [15, 11], [17, 10], [8, 11], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [19, 12], ----End Timer [Execute Mapping]:  2.3597497940063477

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.984982967376709

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [10, 16], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [14, 15], [7, 1], [16, 2], [15, 8], [5, 17], [15, 11], [18, 2], [8, 7], [17, 19], [5, 0], [16, 2], [18, 16], [9, 6], [18, 2], [7, 1], [13, 9], [3, 7], [1, 18], [0, 9], [8, 7], [18, 16], [15, 7], [3, 16], [19, 12], [9, 12], [18, 16], [11, 19], [1, 4], [2, 6], [10, 19], [8, 13], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [16, 2], [5, 17], [7, 18], [4, 16], [9, 6], [17, 19], [3, 7], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [3, 1], [11, 17], [7, 1], [15, 8], [10, 16], [10, 19], [16, 2], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [3, 7], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [16, 2], [11, 19], [15, 11], [18, 10], [8, 13], [11, 17], [17, 19], [3, 7], [14, 15], [19, 9], [7, 11], [10, 2], [18, 2], [17, 0], [15, 8], [3, 18], [15, 11], [17, 10], [8, 11], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [19, 12], ----End Timer [Execute Mapping]:  1.984982967376709

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [125] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 250

Reduced: 
 - size: 100 (44.44%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07894420623779297

[15, 7], [13, 5], [10, 16], [11, 17], [19, 6], [7, 1], [18, 2], [8, 11], [6, 12], [10, 16], [1, 18], [10, 16], [8, 13], [17, 0], [14, 15], [7, 1], [19, 6], [17, 0], [16, 2], [8, 7], [10, 16], [5, 17], [15, 11], [14, 3], [8, 13], [18, 2], [15, 7], [17, 19], [3, 1], [10, 16], [13, 17], [5, 0], [15, 8], [3, 1], [10, 19], [16, 2], [8, 13], [18, 16], [9, 6], [8, 13], [14, 3], [18, 2], [7, 1], [0, 9], [13, 5], [3, 7], [16, 2], [1, 18], [13, 0], [1, 4], [8, 7], [16, 2], [13, 5], [18, 16], [0, 9], [15, 8], [13, 0], [15, 7], [3, 18], [10, 19], [9, 12], [13, 17], [19, 12], [1, 4], [5, 0], [18, 16], [3, 7], [13, 0], [11, 19], [3, 18], [15, 8], [13, 0], [1, 4], [2, 6], [11, 17], [10, 19], [3, 7], [8, 13], [1, 18], [11, 17], [10, 16], [19, 6], [14, 15], [8, 13], [18, 16], [17, 10], [9, 12], [3, 1], [15, 11], [8, 13], [1, 4], [15, 11], [5, 0], [16, 2], [8, 13], [5, 17], [7, 18], [9, 12], [4, 16], [11, 10], [8, 13], [9, 6], [11, 10], [17, 19], [3, 7], [13, 0], [1, 18], [11, 17], [17, 0], [13, 5], [6, 12], [18, 2], [15, 11], [19, 9], [3, 7], [11, 17], [9, 6], [7, 1], [15, 8], [10, 16], [15, 11], [10, 19], [9, 6], [16, 2], [3, 7], [13, 0], [11, 10], [16, 2], [17, 19], [3, 18], [14, 15], [18, 10], [8, 11], [1, 4], [3, 7], [16, 2], [19, 9], [7, 18], [10, 16], [13, 5], [7, 11], [3, 1], [18, 2], [8, 13], [7, 11], [14, 3], [10, 16], [17, 19], [8, 13], [8, 11], [4, 16], [1, 18], [13, 5], [19, 6], [14, 3], [8, 11], [19, 9], [5, 17], [1, 4], [6, 12], [18, 10], [8, 11], [17, 0], [10, 2], [19, 12], [14, 15], [8, 11], [10, 19], [3, 18], [17, 0], [16, 2], [9, 6], [8, 13], [6, 12], [18, 2], [11, 19], [5, 17], [8, 13], [15, 11], [18, 10], [8, 13], [6, 12], [11, 17], [19, 9], [18, 16], [3, 7], [14, 15], [13, 0], [17, 19], [7, 11], [10, 2], [13, 0], [7, 1], [10, 19], [18, 2], [17, 0], [4, 16], [15, 8], [10, 19], [13, 0], [3, 18], [7, 1], [15, 11], [17, 10], [13, 0], [8, 11], [19, 9], [17, 10], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [14, 3], [11, 10], [15, 8], [4, 16], [5, 0], [10, 2], [18, 16], [14, 3], [1, 4], [19, 12], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 9]
[9, 11]
[13, 17]
[12, 24]
[20, 29]
[28, 33]
[36, 39]
[46, 51]
[44, 52]
[34, 59]
[49, 63]
[55, 70]
[67, 71]
[63, 72]
[66, 76]
[74, 79]
[77, 83]
[83, 89]
[88, 91]
[89, 94]
[86, 97]
[94, 100]
[99, 102]
[104, 114]
[116, 122]
[123, 127]
[124, 134]
[127, 135]
[109, 139]
[140, 144]
[138, 146]
[143, 148]
[145, 154]
[149, 155]
[155, 161]
[130, 165]
[161, 166]
[162, 169]
[172, 177]
[177, 180]
[173, 181]
[187, 191]
[193, 198]
[192, 201]
[199, 204]
[203, 207]
[207, 213]
[196, 218]
[215, 222]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 8, 16]
[11, 18, 20]
[48, 54, 56]
[58, 65, 69]
[112, 115, 120]
[114, 117, 124]
[128, 136, 147]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[43, 48, 54]
[53, 58, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[170, 174, 184]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 9]
[9, 11]
[13, 17]
[12, 24]
[20, 29]
[28, 33]
[36, 39]
[46, 51]
[44, 52]
[34, 59]
[49, 63]
[55, 70]
[67, 71]
[63, 72]
[66, 76]
[74, 79]
[77, 83]
[83, 89]
[88, 91]
[89, 94]
[86, 97]
[94, 100]
[99, 102]
[104, 114]
[116, 122]
[123, 127]
[124, 134]
[127, 135]
[109, 139]
[140, 144]
[138, 146]
[143, 148]
[145, 154]
[149, 155]
[155, 161]
[130, 165]
[161, 166]
[162, 169]
[172, 177]
[177, 180]
[173, 181]
[187, 191]
[193, 198]
[192, 201]
[199, 204]
[203, 207]
[207, 213]
[196, 218]
[215, 222]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.233501434326172

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 9] cc => I, Pos: [2, 9] cc => I, Pos: [4, 8, 16] ccc => cc, Pos: [9, 11] cc => I, Pos: [9, 11] cc => I, Pos: [11, 18, 20] ccc => cc, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [28, 33] cc => I, Pos: [28, 33] cc => I, Pos: [34, 59] cc => I, Pos: [34, 59] cc => I, Pos: [36, 39] cc => I, Pos: [36, 39] cc => I, Pos: [43, 48, 54] ccc => cc, Pos: [44, 52] cc => I, Pos: [44, 52] cc => I, Pos: [46, 51] cc => I, Pos: [46, 51] cc => I, Pos: [48, 54, 56] ccc => cc, Pos: [49, 63] cc => I, Pos: [49, 63] cc => I, Pos: [53, 58, 65] ccc => cc, Pos: [55, 70] cc => I, Pos: [55, 70] cc => I, Pos: [58, 65, 69] ccc => cc, Pos: [63, 72] cc => I, Pos: [63, 72] cc => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [67, 71] cc => I, Pos: [67, 71] cc => I, Pos: [74, 79] cc => I, Pos: [74, 79] cc => I, Pos: [77, 83] cc => I, Pos: [77, 83] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [86, 97] cc => I, Pos: [86, 97] cc => I, Pos: [88, 91] cc => I, Pos: [88, 91] cc => I, Pos: [89, 94] cc => I, Pos: [89, 94] cc => I, Pos: [94, 100] cc => I, Pos: [94, 100] cc => I, Pos: [99, 102] cc => I, Pos: [99, 102] cc => I, Pos: [104, 114] cc => I, Pos: [104, 114] cc => I, Pos: [109, 139] cc => I, Pos: [109, 139] cc => I, Pos: [112, 115, 120] ccc => cc, Pos: [114, 117, 124] ccc => cc, Pos: [116, 122] cc => I, Pos: [116, 122] cc => I, Pos: [123, 127] cc => I, Pos: [123, 127] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [128, 136, 147] ccc => cc, Pos: [130, 165] cc => I, Pos: [130, 165] cc => I, Pos: [138, 146] cc => I, Pos: [138, 146] cc => I, Pos: [140, 144] cc => I, Pos: [140, 144] cc => I, Pos: [143, 148] cc => I, Pos: [143, 148] cc => I, Pos: [145, 154] cc => I, Pos: [145, 154] cc => I, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [161, 166] cc => I, Pos: [161, 166] cc => I, Pos: [162, 169] cc => I, Pos: [162, 169] cc => I, Pos: [170, 174, 184] ccc => cc, Pos: [172, 177] cc => I, Pos: [172, 177] cc => I, Pos: [173, 181] cc => I, Pos: [173, 181] cc => I, Pos: [177, 180] cc => I, Pos: [177, 180] cc => I, Pos: [187, 191] cc => I, Pos: [187, 191] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [193, 198] cc => I, Pos: [193, 198] cc => I, Pos: [196, 218] cc => I, Pos: [196, 218] cc => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [203, 207] cc => I, Pos: [203, 207] cc => I, Pos: [207, 213] cc => I, Pos: [207, 213] cc => I, Pos: [215, 222] cc => I, Pos: [215, 222] cc => I]

--------End Timer [Generate Plans]:  0.10989713668823242

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 9] cc => I,
 Pos: [4, 8, 16] ccc => cc,
 Pos: [20, 29] cc => I,
 Pos: [12, 24] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [28, 33] cc => I,
 Pos: [34, 59] cc => I,
 Pos: [36, 39] cc => I,
 Pos: [48, 54, 56] ccc => cc,
 Pos: [44, 52] cc => I,
 Pos: [46, 51] cc => I,
 Pos: [63, 72] cc => I,
 Pos: [53, 58, 65] ccc => cc,
 Pos: [55, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [67, 71] cc => I,
 Pos: [74, 79] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [86, 97] cc => I,
 Pos: [88, 91] cc => I,
 Pos: [94, 100] cc => I,
 Pos: [99, 102] cc => I,
 Pos: [104, 114] cc => I,
 Pos: [109, 139] cc => I,
 Pos: [112, 115, 120] ccc => cc,
 Pos: [116, 122] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [128, 136, 147] ccc => cc,
 Pos: [130, 165] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 148] cc => I,
 Pos: [145, 154] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [162, 169] cc => I,
 Pos: [170, 174, 184] ccc => cc,
 Pos: [172, 177] cc => I,
 Pos: [173, 181] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 198] cc => I,
 Pos: [196, 218] cc => I,
 Pos: [199, 204] cc => I,
 Pos: [207, 213] cc => I,
 Pos: [215, 222] cc => I]
Change: 46, Saving: 47

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 9] cc => I
Apply:  Pos: [4, 8, 16] ccc => cc
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [28, 33] cc => I
Apply:  Pos: [34, 59] cc => I
Apply:  Pos: [36, 39] cc => I
Apply:  Pos: [48, 54, 56] ccc => cc
Apply:  Pos: [44, 52] cc => I
Apply:  Pos: [46, 51] cc => I
Apply:  Pos: [63, 72] cc => I
Apply:  Pos: [53, 58, 65] ccc => cc
Apply:  Pos: [55, 70] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [67, 71] cc => I
Apply:  Pos: [74, 79] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [86, 97] cc => I
Apply:  Pos: [88, 91] cc => I
Apply:  Pos: [94, 100] cc => I
Apply:  Pos: [99, 102] cc => I
Apply:  Pos: [104, 114] cc => I
Apply:  Pos: [109, 139] cc => I
Apply:  Pos: [112, 115, 120] ccc => cc
Apply:  Pos: [116, 122] cc => I
Apply:  Pos: [127, 135] cc => I
Apply:  Pos: [124, 134] cc => I
Apply:  Pos: [128, 136, 147] ccc => cc
Apply:  Pos: [130, 165] cc => I
Apply:  Pos: [138, 146] cc => I
Apply:  Pos: [140, 144] cc => I
Apply:  Pos: [143, 148] cc => I
Apply:  Pos: [145, 154] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [162, 169] cc => I
Apply:  Pos: [170, 174, 184] ccc => cc
Apply:  Pos: [172, 177] cc => I
Apply:  Pos: [173, 181] cc => I
Apply:  Pos: [187, 191] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [193, 198] cc => I
Apply:  Pos: [196, 218] cc => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [207, 213] cc => I
Apply:  Pos: [215, 222] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015518903732299805

[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 16], [14, 15], [7, 1], [16, 2], [8, 7], [5, 17], [15, 11], [14, 3], [18, 2], [15, 7], [17, 19], [13, 17], [5, 0], [15, 8], [16, 2], [18, 16], [9, 6], [14, 3], [18, 2], [7, 1], [0, 9], [3, 7], [1, 18], [13, 9], [1, 4], [8, 7], [3, 18], [0, 9], [15, 7], [18, 16], [9, 12], [13, 17], [19, 12], [5, 0], [11, 19], [3, 18], [2, 6], [10, 19], [8, 13], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [5, 0], [16, 2], [5, 17], [7, 18], [4, 16], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 16], [10, 19], [16, 2], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [19, 9], [7, 18], [3, 1], [18, 2], [8, 11], [4, 16], [1, 18], [13, 5], [19, 6], [19, 9], [5, 17], [1, 4], [6, 12], [18, 10], [10, 2], [19, 12], [8, 11], [10, 19], [3, 18], [18, 16], [9, 6], [16, 2], [11, 19], [5, 17], [15, 11], [18, 10], [8, 13], [11, 17], [19, 9], [3, 7], [14, 15], [17, 19], [7, 11], [10, 2], [18, 2], [17, 0], [15, 8], [3, 18], [15, 11], [17, 10], [8, 11], [19, 9], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [1, 4], [19, 12], ----End Timer [Execute Mapping]:  4.358917474746704

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[16, 26]
[20, 40]
[42, 56]
[82, 88]
[84, 92]
[88, 100]
[94, 107]
[95, 137]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[35, 38, 44]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[112, 115, 125]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[13, 18, 22]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[16, 26]
[20, 40]
[42, 56]
[82, 88]
[84, 92]
[88, 100]
[94, 107]
[95, 137]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.297642469406128

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [13, 18, 22] ccc => cc, Pos: [16, 26] cc => I, Pos: [16, 26] cc => I, Pos: [20, 40] cc => I, Pos: [20, 40] cc => I, Pos: [35, 38, 44] ccc => cc, Pos: [42, 56] cc => I, Pos: [42, 56] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [84, 92] cc => I, Pos: [84, 92] cc => I, Pos: [88, 100] cc => I, Pos: [88, 100] cc => I, Pos: [94, 107] cc => I, Pos: [94, 107] cc => I, Pos: [95, 137] cc => I, Pos: [95, 137] cc => I, Pos: [112, 115, 125] ccc => cc]

--------End Timer [Generate Plans]:  0.030645132064819336

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [13, 18, 22] ccc => cc,
 Pos: [16, 26] cc => I,
 Pos: [20, 40] cc => I,
 Pos: [35, 38, 44] ccc => cc,
 Pos: [42, 56] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [84, 92] cc => I,
 Pos: [94, 107] cc => I,
 Pos: [95, 137] cc => I,
 Pos: [112, 115, 125] ccc => cc]
Change: 10, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [13, 18, 22] ccc => cc
Apply:  Pos: [16, 26] cc => I
Apply:  Pos: [20, 40] cc => I
Apply:  Pos: [35, 38, 44] ccc => cc
Apply:  Pos: [42, 56] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [84, 92] cc => I
Apply:  Pos: [94, 107] cc => I
Apply:  Pos: [95, 137] cc => I
Apply:  Pos: [112, 115, 125] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 16], [14, 15], [7, 1], [16, 2], [15, 8], [5, 17], [15, 11], [18, 2], [8, 7], [17, 19], [5, 0], [16, 2], [18, 16], [9, 6], [18, 2], [7, 1], [0, 9], [3, 7], [1, 18], [13, 9], [1, 4], [8, 7], [3, 16], [0, 9], [15, 7], [18, 16], [9, 12], [19, 12], [11, 19], [2, 6], [10, 19], [8, 13], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [16, 2], [5, 17], [7, 18], [4, 16], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 19], [10, 16], [16, 2], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [1, 4], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [6, 12], [18, 10], [10, 2], [19, 12], [8, 11], [10, 19], [3, 18], [18, 16], [9, 6], [16, 2], [11, 19], [15, 11], [18, 10], [8, 13], [11, 17], [17, 19], [3, 7], [14, 15], [19, 9], [7, 11], [18, 2], [10, 2], [17, 0], [15, 8], [3, 18], [15, 11], [17, 10], [8, 11], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [19, 12], ----End Timer [Execute Mapping]:  2.3282876014709473

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.938248634338379

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 16], [14, 15], [7, 1], [16, 2], [15, 8], [5, 17], [15, 11], [18, 2], [8, 7], [17, 19], [5, 0], [16, 2], [18, 16], [9, 6], [18, 2], [7, 1], [0, 9], [3, 7], [1, 18], [13, 9], [1, 4], [8, 7], [3, 16], [0, 9], [15, 7], [18, 16], [19, 12], [9, 12], [11, 19], [2, 6], [10, 19], [8, 13], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [16, 2], [5, 17], [7, 18], [4, 16], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 16], [10, 19], [16, 2], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [1, 4], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [6, 12], [18, 10], [10, 2], [19, 12], [8, 11], [10, 19], [3, 18], [18, 16], [9, 6], [16, 2], [11, 19], [15, 11], [18, 10], [8, 13], [11, 17], [17, 19], [3, 7], [14, 15], [19, 9], [7, 11], [10, 2], [18, 2], [17, 0], [15, 8], [3, 18], [15, 11], [17, 10], [8, 11], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [19, 12], ----End Timer [Execute Mapping]:  1.938248634338379

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [122] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 244

Reduced: 
 - size: 103 (45.78%)
 - depth: 11 (24.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374380111694336

[15, 7], [13, 5], [10, 16], [11, 17], [19, 6], [7, 1], [18, 2], [8, 11], [6, 12], [10, 16], [1, 18], [10, 16], [8, 13], [17, 0], [14, 15], [7, 1], [19, 6], [17, 0], [16, 2], [8, 7], [10, 16], [5, 17], [15, 11], [14, 3], [8, 13], [18, 2], [15, 7], [17, 19], [3, 1], [10, 16], [13, 17], [5, 0], [15, 8], [3, 1], [10, 19], [16, 2], [8, 13], [18, 16], [9, 6], [8, 13], [14, 3], [18, 2], [7, 1], [0, 9], [13, 5], [3, 7], [16, 2], [1, 18], [13, 0], [1, 4], [8, 7], [16, 2], [13, 5], [18, 16], [0, 9], [15, 8], [13, 0], [15, 7], [3, 18], [10, 19], [9, 12], [13, 17], [19, 12], [1, 4], [5, 0], [18, 16], [3, 7], [13, 0], [11, 19], [3, 18], [15, 8], [13, 0], [1, 4], [2, 6], [11, 17], [10, 19], [3, 7], [8, 13], [1, 18], [11, 17], [10, 16], [19, 6], [14, 15], [8, 13], [18, 16], [17, 10], [9, 12], [3, 1], [15, 11], [8, 13], [1, 4], [15, 11], [5, 0], [16, 2], [8, 13], [5, 17], [7, 18], [9, 12], [4, 16], [11, 10], [8, 13], [9, 6], [11, 10], [17, 19], [3, 7], [13, 0], [1, 18], [11, 17], [17, 0], [13, 5], [6, 12], [18, 2], [15, 11], [19, 9], [3, 7], [11, 17], [9, 6], [7, 1], [15, 8], [10, 16], [15, 11], [10, 19], [9, 6], [16, 2], [3, 7], [13, 0], [11, 10], [16, 2], [17, 19], [3, 18], [14, 15], [18, 10], [8, 11], [1, 4], [3, 7], [16, 2], [19, 9], [7, 18], [10, 16], [13, 5], [7, 11], [3, 1], [18, 2], [8, 13], [7, 11], [14, 3], [10, 16], [17, 19], [8, 13], [8, 11], [4, 16], [1, 18], [13, 5], [19, 6], [14, 3], [8, 11], [19, 9], [5, 17], [1, 4], [6, 12], [18, 10], [8, 11], [17, 0], [10, 2], [19, 12], [14, 15], [8, 11], [10, 19], [3, 18], [17, 0], [16, 2], [9, 6], [8, 13], [6, 12], [18, 2], [11, 19], [5, 17], [8, 13], [15, 11], [18, 10], [8, 13], [6, 12], [11, 17], [19, 9], [18, 16], [3, 7], [14, 15], [13, 0], [17, 19], [7, 11], [10, 2], [13, 0], [7, 1], [10, 19], [18, 2], [17, 0], [4, 16], [15, 8], [10, 19], [13, 0], [3, 18], [7, 1], [15, 11], [17, 10], [13, 0], [8, 11], [19, 9], [17, 10], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [14, 3], [11, 10], [15, 8], [4, 16], [5, 0], [10, 2], [18, 16], [14, 3], [1, 4], [19, 12], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 9]
[9, 11]
[13, 17]
[12, 24]
[20, 29]
[28, 33]
[36, 39]
[46, 51]
[44, 52]
[34, 59]
[49, 63]
[55, 70]
[67, 71]
[63, 72]
[66, 76]
[74, 79]
[77, 83]
[83, 89]
[88, 91]
[89, 94]
[86, 97]
[94, 100]
[99, 102]
[104, 114]
[116, 122]
[123, 127]
[124, 134]
[127, 135]
[109, 139]
[140, 144]
[138, 146]
[143, 148]
[145, 154]
[149, 155]
[155, 161]
[130, 165]
[161, 166]
[162, 169]
[172, 177]
[177, 180]
[173, 181]
[187, 191]
[193, 198]
[192, 201]
[199, 204]
[203, 207]
[207, 213]
[196, 218]
[215, 222]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 8, 16]
[11, 18, 20]
[48, 54, 56]
[58, 65, 69]
[112, 115, 120]
[114, 117, 124]
[128, 136, 147]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[43, 48, 54]
[53, 58, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[170, 174, 184]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 9]
[9, 11]
[13, 17]
[12, 24]
[20, 29]
[28, 33]
[36, 39]
[46, 51]
[44, 52]
[34, 59]
[49, 63]
[55, 70]
[67, 71]
[63, 72]
[66, 76]
[74, 79]
[77, 83]
[83, 89]
[88, 91]
[89, 94]
[86, 97]
[94, 100]
[99, 102]
[104, 114]
[116, 122]
[123, 127]
[124, 134]
[127, 135]
[109, 139]
[140, 144]
[138, 146]
[143, 148]
[145, 154]
[149, 155]
[155, 161]
[130, 165]
[161, 166]
[162, 169]
[172, 177]
[177, 180]
[173, 181]
[187, 191]
[193, 198]
[192, 201]
[199, 204]
[203, 207]
[207, 213]
[196, 218]
[215, 222]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.203077554702759

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 9] cc => I, Pos: [2, 9] cc => I, Pos: [4, 8, 16] ccc => cc, Pos: [9, 11] cc => I, Pos: [9, 11] cc => I, Pos: [11, 18, 20] ccc => cc, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [28, 33] cc => I, Pos: [28, 33] cc => I, Pos: [34, 59] cc => I, Pos: [34, 59] cc => I, Pos: [36, 39] cc => I, Pos: [36, 39] cc => I, Pos: [43, 48, 54] ccc => cc, Pos: [44, 52] cc => I, Pos: [44, 52] cc => I, Pos: [46, 51] cc => I, Pos: [46, 51] cc => I, Pos: [48, 54, 56] ccc => cc, Pos: [49, 63] cc => I, Pos: [49, 63] cc => I, Pos: [53, 58, 65] ccc => cc, Pos: [55, 70] cc => I, Pos: [55, 70] cc => I, Pos: [58, 65, 69] ccc => cc, Pos: [63, 72] cc => I, Pos: [63, 72] cc => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [67, 71] cc => I, Pos: [67, 71] cc => I, Pos: [74, 79] cc => I, Pos: [74, 79] cc => I, Pos: [77, 83] cc => I, Pos: [77, 83] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [86, 97] cc => I, Pos: [86, 97] cc => I, Pos: [88, 91] cc => I, Pos: [88, 91] cc => I, Pos: [89, 94] cc => I, Pos: [89, 94] cc => I, Pos: [94, 100] cc => I, Pos: [94, 100] cc => I, Pos: [99, 102] cc => I, Pos: [99, 102] cc => I, Pos: [104, 114] cc => I, Pos: [104, 114] cc => I, Pos: [109, 139] cc => I, Pos: [109, 139] cc => I, Pos: [112, 115, 120] ccc => cc, Pos: [114, 117, 124] ccc => cc, Pos: [116, 122] cc => I, Pos: [116, 122] cc => I, Pos: [123, 127] cc => I, Pos: [123, 127] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [128, 136, 147] ccc => cc, Pos: [130, 165] cc => I, Pos: [130, 165] cc => I, Pos: [138, 146] cc => I, Pos: [138, 146] cc => I, Pos: [140, 144] cc => I, Pos: [140, 144] cc => I, Pos: [143, 148] cc => I, Pos: [143, 148] cc => I, Pos: [145, 154] cc => I, Pos: [145, 154] cc => I, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [161, 166] cc => I, Pos: [161, 166] cc => I, Pos: [162, 169] cc => I, Pos: [162, 169] cc => I, Pos: [170, 174, 184] ccc => cc, Pos: [172, 177] cc => I, Pos: [172, 177] cc => I, Pos: [173, 181] cc => I, Pos: [173, 181] cc => I, Pos: [177, 180] cc => I, Pos: [177, 180] cc => I, Pos: [187, 191] cc => I, Pos: [187, 191] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [193, 198] cc => I, Pos: [193, 198] cc => I, Pos: [196, 218] cc => I, Pos: [196, 218] cc => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [203, 207] cc => I, Pos: [203, 207] cc => I, Pos: [207, 213] cc => I, Pos: [207, 213] cc => I, Pos: [215, 222] cc => I, Pos: [215, 222] cc => I]

Plan: 1
[Pos: [2, 9] cc => I,
 Pos: [4, 8, 16] ccc => cc,
 Pos: [11, 18, 20] ccc => cc,
 Pos: [12, 24] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [28, 33] cc => I,
 Pos: [34, 59] cc => I,
 Pos: [36, 39] cc => I,
 Pos: [43, 48, 54] ccc => cc,
 Pos: [44, 52] cc => I,
 Pos: [46, 51] cc => I,
 Pos: [49, 63] cc => I,
 Pos: [53, 58, 65] ccc => cc,
 Pos: [55, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [67, 71] cc => I,
 Pos: [74, 79] cc => I,
 Pos: [77, 83] cc => I,
 Pos: [86, 97] cc => I,
 Pos: [88, 91] cc => I,
 Pos: [89, 94] cc => I,
 Pos: [99, 102] cc => I,
 Pos: [104, 114] cc => I,
 Pos: [109, 139] cc => I,
 Pos: [112, 115, 120] ccc => cc,
 Pos: [116, 122] cc => I,
 Pos: [123, 127] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [128, 136, 147] ccc => cc,
 Pos: [130, 165] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 148] cc => I,
 Pos: [145, 154] cc => I,
 Pos: [149, 155] cc => I,
 Pos: [161, 166] cc => I,
 Pos: [162, 169] cc => I,
 Pos: [170, 174, 184] ccc => cc,
 Pos: [172, 177] cc => I,
 Pos: [173, 181] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 198] cc => I,
 Pos: [196, 218] cc => I,
 Pos: [199, 204] cc => I,
 Pos: [203, 207] cc => I,
 Pos: [215, 222] cc => I]
Change: 47, Saving: 48

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.12502694129943848

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 9] cc => I,
 Pos: [4, 8, 16] ccc => cc,
 Pos: [11, 18, 20] ccc => cc,
 Pos: [12, 24] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [28, 33] cc => I,
 Pos: [34, 59] cc => I,
 Pos: [36, 39] cc => I,
 Pos: [43, 48, 54] ccc => cc,
 Pos: [44, 52] cc => I,
 Pos: [46, 51] cc => I,
 Pos: [49, 63] cc => I,
 Pos: [53, 58, 65] ccc => cc,
 Pos: [55, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [67, 71] cc => I,
 Pos: [74, 79] cc => I,
 Pos: [77, 83] cc => I,
 Pos: [86, 97] cc => I,
 Pos: [88, 91] cc => I,
 Pos: [89, 94] cc => I,
 Pos: [99, 102] cc => I,
 Pos: [104, 114] cc => I,
 Pos: [109, 139] cc => I,
 Pos: [112, 115, 120] ccc => cc,
 Pos: [116, 122] cc => I,
 Pos: [123, 127] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [128, 136, 147] ccc => cc,
 Pos: [130, 165] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [140, 144] cc => I,
 Pos: [143, 148] cc => I,
 Pos: [145, 154] cc => I,
 Pos: [149, 155] cc => I,
 Pos: [161, 166] cc => I,
 Pos: [162, 169] cc => I,
 Pos: [170, 174, 184] ccc => cc,
 Pos: [172, 177] cc => I,
 Pos: [173, 181] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 198] cc => I,
 Pos: [196, 218] cc => I,
 Pos: [199, 204] cc => I,
 Pos: [203, 207] cc => I,
 Pos: [215, 222] cc => I]
Change: 47, Saving: 48

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 9] cc => I
Apply:  Pos: [4, 8, 16] ccc => cc
Apply:  Pos: [11, 18, 20] ccc => cc
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [28, 33] cc => I
Apply:  Pos: [34, 59] cc => I
Apply:  Pos: [36, 39] cc => I
Apply:  Pos: [43, 48, 54] ccc => cc
Apply:  Pos: [44, 52] cc => I
Apply:  Pos: [46, 51] cc => I
Apply:  Pos: [49, 63] cc => I
Apply:  Pos: [53, 58, 65] ccc => cc
Apply:  Pos: [55, 70] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [67, 71] cc => I
Apply:  Pos: [74, 79] cc => I
Apply:  Pos: [77, 83] cc => I
Apply:  Pos: [86, 97] cc => I
Apply:  Pos: [88, 91] cc => I
Apply:  Pos: [89, 94] cc => I
Apply:  Pos: [99, 102] cc => I
Apply:  Pos: [104, 114] cc => I
Apply:  Pos: [109, 139] cc => I
Apply:  Pos: [112, 115, 120] ccc => cc
Apply:  Pos: [116, 122] cc => I
Apply:  Pos: [123, 127] cc => I
Apply:  Pos: [124, 134] cc => I
Apply:  Pos: [128, 136, 147] ccc => cc
Apply:  Pos: [130, 165] cc => I
Apply:  Pos: [138, 146] cc => I
Apply:  Pos: [140, 144] cc => I
Apply:  Pos: [143, 148] cc => I
Apply:  Pos: [145, 154] cc => I
Apply:  Pos: [149, 155] cc => I
Apply:  Pos: [161, 166] cc => I
Apply:  Pos: [162, 169] cc => I
Apply:  Pos: [170, 174, 184] ccc => cc
Apply:  Pos: [172, 177] cc => I
Apply:  Pos: [173, 181] cc => I
Apply:  Pos: [187, 191] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [193, 198] cc => I
Apply:  Pos: [196, 218] cc => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [203, 207] cc => I
Apply:  Pos: [215, 222] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 2], [14, 15], [7, 1], [16, 2], [8, 7], [5, 17], [15, 11], [14, 3], [18, 2], [15, 7], [17, 19], [10, 16], [13, 17], [5, 0], [15, 8], [16, 2], [18, 16], [9, 6], [14, 3], [18, 2], [7, 1], [13, 0], [3, 7], [1, 18], [0, 9], [8, 7], [3, 18], [13, 0], [15, 7], [18, 16], [9, 12], [13, 17], [19, 12], [5, 0], [11, 19], [3, 18], [1, 4], [2, 6], [10, 19], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [5, 0], [16, 2], [5, 17], [7, 18], [4, 16], [8, 13], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 16], [10, 19], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [16, 2], [19, 9], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [19, 9], [5, 17], [1, 4], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [16, 2], [11, 19], [5, 17], [15, 11], [18, 10], [8, 13], [11, 17], [19, 9], [3, 7], [14, 15], [17, 19], [7, 11], [10, 2], [18, 2], [17, 0], [15, 8], [3, 18], [15, 11], [8, 11], [19, 9], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [1, 4], [19, 12], ----End Timer [Execute Mapping]:  4.328104496002197

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[16, 27]
[21, 40]
[42, 56]
[85, 92]
[94, 106]
[95, 136]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[30, 33, 36]
[35, 38, 44]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[111, 114, 123]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[13, 18, 23]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[16, 27]
[21, 40]
[42, 56]
[85, 92]
[94, 106]
[95, 136]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.265603542327881

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [13, 18, 23] ccc => cc, Pos: [16, 27] cc => I, Pos: [16, 27] cc => I, Pos: [21, 40] cc => I, Pos: [21, 40] cc => I, Pos: [30, 33, 36] ccc => cc, Pos: [35, 38, 44] ccc => cc, Pos: [42, 56] cc => I, Pos: [42, 56] cc => I, Pos: [85, 92] cc => I, Pos: [85, 92] cc => I, Pos: [94, 106] cc => I, Pos: [94, 106] cc => I, Pos: [95, 136] cc => I, Pos: [95, 136] cc => I, Pos: [111, 114, 123] ccc => cc]

Plan: 1
[Pos: [13, 18, 23] ccc => cc,
 Pos: [16, 27] cc => I,
 Pos: [21, 40] cc => I,
 Pos: [30, 33, 36] ccc => cc,
 Pos: [35, 38, 44] ccc => cc,
 Pos: [42, 56] cc => I,
 Pos: [85, 92] cc => I,
 Pos: [94, 106] cc => I,
 Pos: [95, 136] cc => I,
 Pos: [111, 114, 123] ccc => cc]
Change: 10, Saving: 10

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.03125357627868652

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [13, 18, 23] ccc => cc,
 Pos: [16, 27] cc => I,
 Pos: [21, 40] cc => I,
 Pos: [30, 33, 36] ccc => cc,
 Pos: [35, 38, 44] ccc => cc,
 Pos: [42, 56] cc => I,
 Pos: [85, 92] cc => I,
 Pos: [94, 106] cc => I,
 Pos: [95, 136] cc => I,
 Pos: [111, 114, 123] ccc => cc]
Change: 10, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [13, 18, 23] ccc => cc
Apply:  Pos: [16, 27] cc => I
Apply:  Pos: [21, 40] cc => I
Apply:  Pos: [30, 33, 36] ccc => cc
Apply:  Pos: [35, 38, 44] ccc => cc
Apply:  Pos: [42, 56] cc => I
Apply:  Pos: [85, 92] cc => I
Apply:  Pos: [94, 106] cc => I
Apply:  Pos: [95, 136] cc => I
Apply:  Pos: [111, 114, 123] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 2], [14, 15], [7, 1], [16, 2], [15, 8], [5, 17], [15, 11], [18, 2], [8, 7], [17, 19], [10, 16], [5, 0], [16, 2], [18, 16], [9, 6], [18, 2], [7, 1], [13, 9], [3, 7], [1, 18], [0, 9], [8, 7], [3, 16], [15, 7], [18, 16], [9, 12], [19, 12], [11, 19], [1, 4], [2, 6], [10, 19], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [16, 2], [5, 17], [7, 18], [4, 16], [8, 13], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 19], [10, 16], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [16, 2], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [16, 2], [11, 19], [15, 11], [18, 10], [8, 13], [11, 17], [17, 19], [3, 7], [14, 15], [19, 9], [7, 11], [18, 2], [10, 2], [17, 0], [15, 8], [3, 18], [8, 11], [15, 11], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [19, 12], ----End Timer [Execute Mapping]:  2.2968571186065674

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9062273502349854

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[15, 7], [13, 5], [11, 17], [19, 12], [7, 1], [18, 2], [8, 11], [6, 12], [1, 18], [10, 2], [14, 15], [7, 1], [16, 2], [15, 8], [5, 17], [15, 11], [18, 2], [8, 7], [17, 19], [10, 16], [5, 0], [16, 2], [18, 16], [9, 6], [18, 2], [7, 1], [13, 9], [3, 7], [1, 18], [0, 9], [8, 7], [3, 16], [15, 7], [18, 16], [19, 12], [9, 12], [11, 19], [1, 4], [2, 6], [10, 19], [1, 18], [10, 16], [19, 6], [14, 15], [18, 16], [17, 10], [3, 1], [1, 4], [16, 2], [5, 17], [7, 18], [4, 16], [8, 13], [9, 6], [17, 19], [13, 0], [1, 18], [11, 17], [17, 0], [6, 12], [18, 2], [15, 17], [19, 9], [11, 17], [7, 1], [15, 8], [10, 16], [10, 19], [13, 0], [11, 10], [17, 9], [3, 18], [18, 10], [8, 11], [1, 4], [16, 2], [7, 18], [3, 1], [18, 2], [4, 16], [1, 18], [13, 5], [19, 6], [6, 12], [18, 10], [10, 2], [19, 12], [10, 19], [3, 18], [18, 16], [9, 6], [16, 2], [11, 19], [15, 11], [18, 10], [8, 13], [11, 17], [17, 19], [3, 7], [14, 15], [19, 9], [7, 11], [10, 2], [18, 2], [17, 0], [15, 8], [3, 18], [15, 11], [8, 11], [13, 5], [8, 7], [1, 18], [14, 15], [11, 19], [17, 10], [5, 17], [11, 10], [15, 8], [5, 0], [10, 2], [18, 16], [19, 12], ----End Timer [Execute Mapping]:  1.9062273502349854

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [122] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 244

Reduced: 
 - size: 103 (45.78%)
 - depth: 11 (24.44%)

