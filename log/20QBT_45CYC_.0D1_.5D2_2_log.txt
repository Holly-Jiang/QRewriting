----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374356269836426

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [19, 13], [14, 7], [2, 5], [4, 15], [11, 0], [3, 18], [1, 9], [6, 17], [19, 13], [4, 2], [10, 8], [0, 7], [7, 19], [4, 2], [9, 13], [11, 0], [7, 1], [12, 4], [6, 17], [2, 5], [8, 0], [11, 3], [14, 19], [7, 1], [12, 16], [19, 13], [2, 17], [3, 4], [7, 1], [12, 2], [11, 3], [10, 8], [7, 1], [11, 3], [18, 15], [2, 5], [8, 12], [16, 13], [0, 7], [6, 17], [14, 19], [9, 13], [0, 7], [2, 5], [19, 9], [8, 11], [18, 15], [0, 7], [13, 5], [18, 15], [8, 12], [2, 17], [0, 7], [15, 6], [16, 9], [8, 11], [2, 17], [10, 14], [7, 1], [6, 5], [14, 0], [12, 2], [1, 9], [6, 5], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [10, 8], [2, 5], [16, 9], [8, 11], [4, 15], [19, 13], [16, 9], [12, 2], [0, 7], [6, 5], [3, 18], [4, 16], [7, 1], [11, 3], [14, 19], [2, 6], [18, 4], [16, 13], [2, 6], [14, 7], [11, 12], [18, 4], [16, 9], [2, 5], [14, 19], [4, 2], [11, 3], [19, 9], [7, 1], [2, 6], [4, 16], [14, 0], [8, 11], [3, 18], [2, 6], [4, 15], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [18, 15], [11, 3], [10, 8], [2, 5], [14, 0], [19, 9], [18, 15], [11, 3], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [9, 13], [8, 0], [19, 16], [18, 15], [19, 16], [14, 0], [3, 4], [9, 13], [2, 6], [7, 1], [4, 15], [8, 11], [14, 0], [13, 5], [12, 2], [19, 16], [15, 6], [0, 12], [13, 5], [2, 6], [3, 15], [4, 16], [11, 0], [7, 19], [10, 14], [1, 9], [2, 17], [7, 1], [16, 9], [11, 0], [8, 12], [19, 13], [2, 5], [19, 16], [14, 7], [2, 5], [8, 0], [14, 7], [16, 9], [18, 4], [5, 17], [19, 16], [10, 8], [12, 4], [11, 0], [2, 17], [0, 19], [13, 5], [4, 16], [2, 17], [11, 3], [10, 8], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [8, 0], [2, 6], [11, 12], [13, 5], [3, 4], [18, 15], [14, 7], [19, 9], [16, 2], [8, 0], [7, 19], [2, 5], [18, 15], [19, 16], [10, 8], [13, 5], [16, 2], [1, 9], [7, 19], [11, 3], [13, 5], [8, 11], [3, 4], [7, 19], [16, 2], [6, 17], [16, 13], [3, 4], [7, 19], [12, 2], [16, 13], [8, 12], [4, 15], [6, 17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[14, 18]
[12, 23]
[21, 28]
[28, 33]
[33, 37]
[35, 38]
[43, 47]
[40, 48]
[39, 51]
[47, 52]
[51, 54]
[41, 55]
[52, 57]
[50, 60]
[56, 61]
[64, 68]
[72, 78]
[78, 82]
[91, 94]
[92, 97]
[90, 100]
[89, 102]
[105, 110]
[117, 123]
[118, 124]
[124, 132]
[135, 137]
[133, 140]
[138, 145]
[137, 148]
[146, 151]
[155, 162]
[165, 168]
[167, 170]
[178, 182]
[175, 184]
[191, 200]
[196, 203]
[206, 211]
[209, 214]
[207, 215]
[213, 218]
[214, 219]
[217, 221]
[216, 224]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[26, 32, 35]
[107, 116, 121]
[123, 131, 136]
[142, 158, 160]
[166, 171, 174]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[73, 84, 88]
[88, 95, 104]
[161, 166, 171]
[170, 188, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[14, 18]
[12, 23]
[21, 28]
[28, 33]
[33, 37]
[35, 38]
[43, 47]
[40, 48]
[39, 51]
[47, 52]
[51, 54]
[41, 55]
[52, 57]
[50, 60]
[56, 61]
[64, 68]
[72, 78]
[78, 82]
[91, 94]
[92, 97]
[90, 100]
[89, 102]
[105, 110]
[117, 123]
[118, 124]
[124, 132]
[135, 137]
[133, 140]
[138, 145]
[137, 148]
[146, 151]
[155, 162]
[165, 168]
[167, 170]
[178, 182]
[175, 184]
[191, 200]
[196, 203]
[206, 211]
[209, 214]
[207, 215]
[213, 218]
[214, 219]
[217, 221]
[216, 224]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.203352451324463

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 13] cc => I, Pos: [5, 13] cc => I, Pos: [12, 23] cc => I, Pos: [12, 23] cc => I, Pos: [14, 18] cc => I, Pos: [14, 18] cc => I, Pos: [21, 28] cc => I, Pos: [21, 28] cc => I, Pos: [26, 32, 35] ccc => cc, Pos: [28, 33] cc => I, Pos: [28, 33] cc => I, Pos: [33, 37] cc => I, Pos: [33, 37] cc => I, Pos: [35, 38] cc => I, Pos: [35, 38] cc => I, Pos: [39, 51] cc => I, Pos: [39, 51] cc => I, Pos: [40, 48] cc => I, Pos: [40, 48] cc => I, Pos: [41, 55] cc => I, Pos: [41, 55] cc => I, Pos: [43, 47] cc => I, Pos: [43, 47] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [50, 60] cc => I, Pos: [50, 60] cc => I, Pos: [51, 54] cc => I, Pos: [51, 54] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [64, 68] cc => I, Pos: [64, 68] cc => I, Pos: [72, 78] cc => I, Pos: [72, 78] cc => I, Pos: [73, 84, 88] ccc => cc, Pos: [78, 82] cc => I, Pos: [78, 82] cc => I, Pos: [88, 95, 104] ccc => cc, Pos: [89, 102] cc => I, Pos: [89, 102] cc => I, Pos: [90, 100] cc => I, Pos: [90, 100] cc => I, Pos: [91, 94] cc => I, Pos: [91, 94] cc => I, Pos: [92, 97] cc => I, Pos: [92, 97] cc => I, Pos: [105, 110] cc => I, Pos: [105, 110] cc => I, Pos: [107, 116, 121] ccc => cc, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [118, 124] cc => I, Pos: [118, 124] cc => I, Pos: [123, 131, 136] ccc => cc, Pos: [124, 132] cc => I, Pos: [124, 132] cc => I, Pos: [133, 140] cc => I, Pos: [133, 140] cc => I, Pos: [135, 137] cc => I, Pos: [135, 137] cc => I, Pos: [137, 148] cc => I, Pos: [137, 148] cc => I, Pos: [138, 145] cc => I, Pos: [138, 145] cc => I, Pos: [142, 158, 160] ccc => cc, Pos: [146, 151] cc => I, Pos: [146, 151] cc => I, Pos: [155, 162] cc => I, Pos: [155, 162] cc => I, Pos: [161, 166, 171] ccc => cc, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [166, 171, 174] ccc => cc, Pos: [167, 170] cc => I, Pos: [167, 170] cc => I, Pos: [170, 188, 197] ccc => cc, Pos: [175, 184] cc => I, Pos: [175, 184] cc => I, Pos: [178, 182] cc => I, Pos: [178, 182] cc => I, Pos: [191, 200] cc => I, Pos: [191, 200] cc => I, Pos: [196, 203] cc => I, Pos: [196, 203] cc => I, Pos: [206, 211] cc => I, Pos: [206, 211] cc => I, Pos: [207, 215] cc => I, Pos: [207, 215] cc => I, Pos: [209, 214] cc => I, Pos: [209, 214] cc => I, Pos: [213, 218] cc => I, Pos: [213, 218] cc => I, Pos: [214, 219] cc => I, Pos: [214, 219] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [217, 221] cc => I, Pos: [217, 221] cc => I]

Plan: 1
[Pos: [5, 13] cc => I,
 Pos: [12, 23] cc => I,
 Pos: [14, 18] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [26, 32, 35] ccc => cc,
 Pos: [33, 37] cc => I,
 Pos: [39, 51] cc => I,
 Pos: [40, 48] cc => I,
 Pos: [41, 55] cc => I,
 Pos: [43, 47] cc => I,
 Pos: [50, 60] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [64, 68] cc => I,
 Pos: [72, 78] cc => I,
 Pos: [73, 84, 88] ccc => cc,
 Pos: [89, 102] cc => I,
 Pos: [90, 100] cc => I,
 Pos: [91, 94] cc => I,
 Pos: [92, 97] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [107, 116, 121] ccc => cc,
 Pos: [117, 123] cc => I,
 Pos: [118, 124] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [135, 137] cc => I,
 Pos: [138, 145] cc => I,
 Pos: [142, 158, 160] ccc => cc,
 Pos: [146, 151] cc => I,
 Pos: [155, 162] cc => I,
 Pos: [161, 166, 171] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [167, 170] cc => I,
 Pos: [175, 184] cc => I,
 Pos: [178, 182] cc => I,
 Pos: [191, 200] cc => I,
 Pos: [196, 203] cc => I,
 Pos: [206, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [209, 214] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [217, 221] cc => I]
Change: 43, Saving: 162

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015641212463378906

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 13] cc => I,
 Pos: [12, 23] cc => I,
 Pos: [14, 18] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [26, 32, 35] ccc => cc,
 Pos: [33, 37] cc => I,
 Pos: [39, 51] cc => I,
 Pos: [40, 48] cc => I,
 Pos: [41, 55] cc => I,
 Pos: [43, 47] cc => I,
 Pos: [50, 60] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [64, 68] cc => I,
 Pos: [72, 78] cc => I,
 Pos: [73, 84, 88] ccc => cc,
 Pos: [89, 102] cc => I,
 Pos: [90, 100] cc => I,
 Pos: [91, 94] cc => I,
 Pos: [92, 97] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [107, 116, 121] ccc => cc,
 Pos: [117, 123] cc => I,
 Pos: [118, 124] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [135, 137] cc => I,
 Pos: [138, 145] cc => I,
 Pos: [142, 158, 160] ccc => cc,
 Pos: [146, 151] cc => I,
 Pos: [155, 162] cc => I,
 Pos: [161, 166, 171] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [167, 170] cc => I,
 Pos: [175, 184] cc => I,
 Pos: [178, 182] cc => I,
 Pos: [191, 200] cc => I,
 Pos: [196, 203] cc => I,
 Pos: [206, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [209, 214] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [217, 221] cc => I]
Change: 43, Saving: 162

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 13] cc => I
Apply:  Pos: [12, 23] cc => I
Apply:  Pos: [14, 18] cc => I
Apply:  Pos: [21, 28] cc => I
Apply:  Pos: [26, 32, 35] ccc => cc
Apply:  Pos: [33, 37] cc => I
Apply:  Pos: [39, 51] cc => I
Apply:  Pos: [40, 48] cc => I
Apply:  Pos: [41, 55] cc => I
Apply:  Pos: [43, 47] cc => I
Apply:  Pos: [50, 60] cc => I
Apply:  Pos: [52, 57] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [64, 68] cc => I
Apply:  Pos: [72, 78] cc => I
Apply:  Pos: [73, 84, 88] ccc => cc
Apply:  Pos: [89, 102] cc => I
Apply:  Pos: [90, 100] cc => I
Apply:  Pos: [91, 94] cc => I
Apply:  Pos: [92, 97] cc => I
Apply:  Pos: [105, 110] cc => I
Apply:  Pos: [107, 116, 121] ccc => cc
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [118, 124] cc => I
Apply:  Pos: [133, 140] cc => I
Apply:  Pos: [135, 137] cc => I
Apply:  Pos: [138, 145] cc => I
Apply:  Pos: [142, 158, 160] ccc => cc
Apply:  Pos: [146, 151] cc => I
Apply:  Pos: [155, 162] cc => I
Apply:  Pos: [161, 166, 171] ccc => cc
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [167, 170] cc => I
Apply:  Pos: [175, 184] cc => I
Apply:  Pos: [178, 182] cc => I
Apply:  Pos: [191, 200] cc => I
Apply:  Pos: [196, 203] cc => I
Apply:  Pos: [206, 211] cc => I
Apply:  Pos: [207, 215] cc => I
Apply:  Pos: [209, 214] cc => I
Apply:  Pos: [213, 218] cc => I
Apply:  Pos: [216, 224] cc => I
Apply:  Pos: [217, 221] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [2, 5], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [2, 5], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [12, 2], [10, 8], [11, 3], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [12, 2], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [10, 8], [2, 5], [8, 11], [4, 15], [19, 13], [16, 9], [12, 2], [7, 1], [6, 5], [3, 18], [4, 16], [16, 13], [14, 7], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [7, 1], [4, 16], [14, 7], [8, 11], [3, 18], [4, 15], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [8, 0], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [19, 16], [15, 6], [0, 12], [2, 6], [3, 15], [4, 16], [7, 19], [10, 14], [1, 9], [2, 17], [19, 16], [8, 12], [19, 13], [16, 9], [8, 0], [18, 4], [5, 17], [19, 16], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 19], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [7, 19], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  4.218993663787842

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 17]
[25, 40]
[26, 48]
[57, 70]
[51, 71]
[81, 103]
[103, 123]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[60, 66, 68]
[106, 109, 113]
[133, 135, 140]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[55, 60, 66]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[98, 107, 110]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 17]
[25, 40]
[26, 48]
[57, 70]
[51, 71]
[81, 103]
[103, 123]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4060840606689453

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 17] cc => I, Pos: [6, 17] cc => I, Pos: [25, 40] cc => I, Pos: [25, 40] cc => I, Pos: [26, 48] cc => I, Pos: [26, 48] cc => I, Pos: [51, 71] cc => I, Pos: [51, 71] cc => I, Pos: [55, 60, 66] ccc => cc, Pos: [57, 70] cc => I, Pos: [57, 70] cc => I, Pos: [60, 66, 68] ccc => cc, Pos: [81, 103] cc => I, Pos: [81, 103] cc => I, Pos: [98, 107, 110] ccc => cc, Pos: [103, 123] cc => I, Pos: [103, 123] cc => I, Pos: [106, 109, 113] ccc => cc, Pos: [133, 135, 140] ccc => cc]

Plan: 1
[Pos: [6, 17] cc => I,
 Pos: [25, 40] cc => I,
 Pos: [26, 48] cc => I,
 Pos: [51, 71] cc => I,
 Pos: [55, 60, 66] ccc => cc,
 Pos: [57, 70] cc => I,
 Pos: [81, 103] cc => I,
 Pos: [98, 107, 110] ccc => cc,
 Pos: [106, 109, 113] ccc => cc,
 Pos: [133, 135, 140] ccc => cc]
Change: 10, Saving: 32

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 17] cc => I,
 Pos: [25, 40] cc => I,
 Pos: [26, 48] cc => I,
 Pos: [51, 71] cc => I,
 Pos: [55, 60, 66] ccc => cc,
 Pos: [57, 70] cc => I,
 Pos: [81, 103] cc => I,
 Pos: [98, 107, 110] ccc => cc,
 Pos: [106, 109, 113] ccc => cc,
 Pos: [133, 135, 140] ccc => cc]
Change: 10, Saving: 32

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 17] cc => I
Apply:  Pos: [25, 40] cc => I
Apply:  Pos: [26, 48] cc => I
Apply:  Pos: [51, 71] cc => I
Apply:  Pos: [55, 60, 66] ccc => cc
Apply:  Pos: [57, 70] cc => I
Apply:  Pos: [81, 103] cc => I
Apply:  Pos: [98, 107, 110] ccc => cc
Apply:  Pos: [106, 109, 113] ccc => cc
Apply:  Pos: [133, 135, 140] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [14, 7], [6, 5], [4, 16], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [14, 7], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [8, 0], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [19, 16], [15, 6], [8, 0], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 2], [4, 15], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.4060840606689453

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[76, 86]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[48, 52, 59]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[76, 86]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0624780654907227

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 52, 59] ccc => cc, Pos: [76, 86] cc => I, Pos: [76, 86] cc => I]

Plan: 1
[Pos: [48, 52, 59] ccc => cc, Pos: [76, 86] cc => I]
Change: 2, Saving: 6

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 52, 59] ccc => cc, Pos: [76, 86] cc => I]
Change: 2, Saving: 6

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [48, 52, 59] ccc => cc
Apply:  Pos: [76, 86] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [14, 1], [6, 5], [4, 16], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [19, 16], [15, 6], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.0624780654907227

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 81, 83]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.000042200088501

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [77, 81, 83] ccc => cc]

Plan: 1
[Pos: [77, 81, 83] ccc => cc]
Change: 1, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [77, 81, 83] ccc => cc]
Change: 1, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [77, 81, 83] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [14, 1], [6, 5], [4, 16], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [18, 15], [3, 4], [12, 2], [7, 9], [4, 15], [8, 11], [2, 6], [19, 16], [15, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 2], [4, 15], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.000042200088501

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[72, 77]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[72, 77]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.96809720993042

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [72, 77] cc => I, Pos: [72, 77] cc => I]

Plan: 1
[Pos: [72, 77] cc => I]
Change: 1, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [72, 77] cc => I]
Change: 1, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [72, 77] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [14, 1], [6, 5], [4, 16], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [15, 6], [11, 3], [18, 15], [3, 4], [7, 9], [4, 15], [8, 11], [2, 6], [19, 16], [15, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  1.96809720993042

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [122] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 244

Reduced: 
 - size: 103 (45.78%)
 - cycle: 206 (45.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09373927116394043

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [19, 13], [14, 7], [2, 5], [4, 15], [11, 0], [3, 18], [1, 9], [6, 17], [19, 13], [4, 2], [10, 8], [0, 7], [7, 19], [4, 2], [9, 13], [11, 0], [7, 1], [12, 4], [6, 17], [2, 5], [8, 0], [11, 3], [14, 19], [7, 1], [12, 16], [19, 13], [2, 17], [3, 4], [7, 1], [12, 2], [11, 3], [10, 8], [7, 1], [11, 3], [18, 15], [2, 5], [8, 12], [16, 13], [0, 7], [6, 17], [14, 19], [9, 13], [0, 7], [2, 5], [19, 9], [8, 11], [18, 15], [0, 7], [13, 5], [18, 15], [8, 12], [2, 17], [0, 7], [15, 6], [16, 9], [8, 11], [2, 17], [10, 14], [7, 1], [6, 5], [14, 0], [12, 2], [1, 9], [6, 5], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [10, 8], [2, 5], [16, 9], [8, 11], [4, 15], [19, 13], [16, 9], [12, 2], [0, 7], [6, 5], [3, 18], [4, 16], [7, 1], [11, 3], [14, 19], [2, 6], [18, 4], [16, 13], [2, 6], [14, 7], [11, 12], [18, 4], [16, 9], [2, 5], [14, 19], [4, 2], [11, 3], [19, 9], [7, 1], [2, 6], [4, 16], [14, 0], [8, 11], [3, 18], [2, 6], [4, 15], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [18, 15], [11, 3], [10, 8], [2, 5], [14, 0], [19, 9], [18, 15], [11, 3], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [9, 13], [8, 0], [19, 16], [18, 15], [19, 16], [14, 0], [3, 4], [9, 13], [2, 6], [7, 1], [4, 15], [8, 11], [14, 0], [13, 5], [12, 2], [19, 16], [15, 6], [0, 12], [13, 5], [2, 6], [3, 15], [4, 16], [11, 0], [7, 19], [10, 14], [1, 9], [2, 17], [7, 1], [16, 9], [11, 0], [8, 12], [19, 13], [2, 5], [19, 16], [14, 7], [2, 5], [8, 0], [14, 7], [16, 9], [18, 4], [5, 17], [19, 16], [10, 8], [12, 4], [11, 0], [2, 17], [0, 19], [13, 5], [4, 16], [2, 17], [11, 3], [10, 8], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [8, 0], [2, 6], [11, 12], [13, 5], [3, 4], [18, 15], [14, 7], [19, 9], [16, 2], [8, 0], [7, 19], [2, 5], [18, 15], [19, 16], [10, 8], [13, 5], [16, 2], [1, 9], [7, 19], [11, 3], [13, 5], [8, 11], [3, 4], [7, 19], [16, 2], [6, 17], [16, 13], [3, 4], [7, 19], [12, 2], [16, 13], [8, 12], [4, 15], [6, 17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[14, 18]
[12, 23]
[21, 28]
[28, 33]
[33, 37]
[35, 38]
[43, 47]
[40, 48]
[39, 51]
[47, 52]
[51, 54]
[41, 55]
[52, 57]
[50, 60]
[56, 61]
[64, 68]
[72, 78]
[78, 82]
[91, 94]
[92, 97]
[90, 100]
[89, 102]
[105, 110]
[117, 123]
[118, 124]
[124, 132]
[135, 137]
[133, 140]
[138, 145]
[137, 148]
[146, 151]
[155, 162]
[165, 168]
[167, 170]
[178, 182]
[175, 184]
[191, 200]
[196, 203]
[206, 211]
[209, 214]
[207, 215]
[213, 218]
[214, 219]
[217, 221]
[216, 224]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[26, 32, 35]
[107, 116, 121]
[123, 131, 136]
[142, 158, 160]
[166, 171, 174]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[73, 84, 88]
[88, 95, 104]
[161, 166, 171]
[170, 188, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[14, 18]
[12, 23]
[21, 28]
[28, 33]
[33, 37]
[35, 38]
[43, 47]
[40, 48]
[39, 51]
[47, 52]
[51, 54]
[41, 55]
[52, 57]
[50, 60]
[56, 61]
[64, 68]
[72, 78]
[78, 82]
[91, 94]
[92, 97]
[90, 100]
[89, 102]
[105, 110]
[117, 123]
[118, 124]
[124, 132]
[135, 137]
[133, 140]
[138, 145]
[137, 148]
[146, 151]
[155, 162]
[165, 168]
[167, 170]
[178, 182]
[175, 184]
[191, 200]
[196, 203]
[206, 211]
[209, 214]
[207, 215]
[213, 218]
[214, 219]
[217, 221]
[216, 224]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.172053337097168

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 13] cc => I, Pos: [5, 13] cc => I, Pos: [12, 23] cc => I, Pos: [12, 23] cc => I, Pos: [14, 18] cc => I, Pos: [14, 18] cc => I, Pos: [21, 28] cc => I, Pos: [21, 28] cc => I, Pos: [26, 32, 35] ccc => cc, Pos: [28, 33] cc => I, Pos: [28, 33] cc => I, Pos: [33, 37] cc => I, Pos: [33, 37] cc => I, Pos: [35, 38] cc => I, Pos: [35, 38] cc => I, Pos: [39, 51] cc => I, Pos: [39, 51] cc => I, Pos: [40, 48] cc => I, Pos: [40, 48] cc => I, Pos: [41, 55] cc => I, Pos: [41, 55] cc => I, Pos: [43, 47] cc => I, Pos: [43, 47] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [50, 60] cc => I, Pos: [50, 60] cc => I, Pos: [51, 54] cc => I, Pos: [51, 54] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [64, 68] cc => I, Pos: [64, 68] cc => I, Pos: [72, 78] cc => I, Pos: [72, 78] cc => I, Pos: [73, 84, 88] ccc => cc, Pos: [78, 82] cc => I, Pos: [78, 82] cc => I, Pos: [88, 95, 104] ccc => cc, Pos: [89, 102] cc => I, Pos: [89, 102] cc => I, Pos: [90, 100] cc => I, Pos: [90, 100] cc => I, Pos: [91, 94] cc => I, Pos: [91, 94] cc => I, Pos: [92, 97] cc => I, Pos: [92, 97] cc => I, Pos: [105, 110] cc => I, Pos: [105, 110] cc => I, Pos: [107, 116, 121] ccc => cc, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [118, 124] cc => I, Pos: [118, 124] cc => I, Pos: [123, 131, 136] ccc => cc, Pos: [124, 132] cc => I, Pos: [124, 132] cc => I, Pos: [133, 140] cc => I, Pos: [133, 140] cc => I, Pos: [135, 137] cc => I, Pos: [135, 137] cc => I, Pos: [137, 148] cc => I, Pos: [137, 148] cc => I, Pos: [138, 145] cc => I, Pos: [138, 145] cc => I, Pos: [142, 158, 160] ccc => cc, Pos: [146, 151] cc => I, Pos: [146, 151] cc => I, Pos: [155, 162] cc => I, Pos: [155, 162] cc => I, Pos: [161, 166, 171] ccc => cc, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [166, 171, 174] ccc => cc, Pos: [167, 170] cc => I, Pos: [167, 170] cc => I, Pos: [170, 188, 197] ccc => cc, Pos: [175, 184] cc => I, Pos: [175, 184] cc => I, Pos: [178, 182] cc => I, Pos: [178, 182] cc => I, Pos: [191, 200] cc => I, Pos: [191, 200] cc => I, Pos: [196, 203] cc => I, Pos: [196, 203] cc => I, Pos: [206, 211] cc => I, Pos: [206, 211] cc => I, Pos: [207, 215] cc => I, Pos: [207, 215] cc => I, Pos: [209, 214] cc => I, Pos: [209, 214] cc => I, Pos: [213, 218] cc => I, Pos: [213, 218] cc => I, Pos: [214, 219] cc => I, Pos: [214, 219] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [217, 221] cc => I, Pos: [217, 221] cc => I]

Plan: 1
[Pos: [5, 13] cc => I,
 Pos: [12, 23] cc => I,
 Pos: [14, 18] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [26, 32, 35] ccc => cc,
 Pos: [33, 37] cc => I,
 Pos: [39, 51] cc => I,
 Pos: [40, 48] cc => I,
 Pos: [41, 55] cc => I,
 Pos: [43, 47] cc => I,
 Pos: [50, 60] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [64, 68] cc => I,
 Pos: [72, 78] cc => I,
 Pos: [73, 84, 88] ccc => cc,
 Pos: [89, 102] cc => I,
 Pos: [90, 100] cc => I,
 Pos: [91, 94] cc => I,
 Pos: [92, 97] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [107, 116, 121] ccc => cc,
 Pos: [117, 123] cc => I,
 Pos: [118, 124] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [135, 137] cc => I,
 Pos: [138, 145] cc => I,
 Pos: [142, 158, 160] ccc => cc,
 Pos: [146, 151] cc => I,
 Pos: [155, 162] cc => I,
 Pos: [161, 166, 171] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [167, 170] cc => I,
 Pos: [175, 184] cc => I,
 Pos: [178, 182] cc => I,
 Pos: [191, 200] cc => I,
 Pos: [196, 203] cc => I,
 Pos: [206, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [209, 214] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [217, 221] cc => I]
Change: 43, Saving: 43

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.10927319526672363

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 13] cc => I,
 Pos: [12, 23] cc => I,
 Pos: [14, 18] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [26, 32, 35] ccc => cc,
 Pos: [33, 37] cc => I,
 Pos: [39, 51] cc => I,
 Pos: [40, 48] cc => I,
 Pos: [41, 55] cc => I,
 Pos: [43, 47] cc => I,
 Pos: [50, 60] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [64, 68] cc => I,
 Pos: [72, 78] cc => I,
 Pos: [73, 84, 88] ccc => cc,
 Pos: [89, 102] cc => I,
 Pos: [90, 100] cc => I,
 Pos: [91, 94] cc => I,
 Pos: [92, 97] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [107, 116, 121] ccc => cc,
 Pos: [117, 123] cc => I,
 Pos: [118, 124] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [135, 137] cc => I,
 Pos: [138, 145] cc => I,
 Pos: [142, 158, 160] ccc => cc,
 Pos: [146, 151] cc => I,
 Pos: [155, 162] cc => I,
 Pos: [161, 166, 171] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [167, 170] cc => I,
 Pos: [175, 184] cc => I,
 Pos: [178, 182] cc => I,
 Pos: [191, 200] cc => I,
 Pos: [196, 203] cc => I,
 Pos: [206, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [209, 214] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [217, 221] cc => I]
Change: 43, Saving: 43

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 13] cc => I
Apply:  Pos: [12, 23] cc => I
Apply:  Pos: [14, 18] cc => I
Apply:  Pos: [21, 28] cc => I
Apply:  Pos: [26, 32, 35] ccc => cc
Apply:  Pos: [33, 37] cc => I
Apply:  Pos: [39, 51] cc => I
Apply:  Pos: [40, 48] cc => I
Apply:  Pos: [41, 55] cc => I
Apply:  Pos: [43, 47] cc => I
Apply:  Pos: [50, 60] cc => I
Apply:  Pos: [52, 57] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [64, 68] cc => I
Apply:  Pos: [72, 78] cc => I
Apply:  Pos: [73, 84, 88] ccc => cc
Apply:  Pos: [89, 102] cc => I
Apply:  Pos: [90, 100] cc => I
Apply:  Pos: [91, 94] cc => I
Apply:  Pos: [92, 97] cc => I
Apply:  Pos: [105, 110] cc => I
Apply:  Pos: [107, 116, 121] ccc => cc
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [118, 124] cc => I
Apply:  Pos: [133, 140] cc => I
Apply:  Pos: [135, 137] cc => I
Apply:  Pos: [138, 145] cc => I
Apply:  Pos: [142, 158, 160] ccc => cc
Apply:  Pos: [146, 151] cc => I
Apply:  Pos: [155, 162] cc => I
Apply:  Pos: [161, 166, 171] ccc => cc
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [167, 170] cc => I
Apply:  Pos: [175, 184] cc => I
Apply:  Pos: [178, 182] cc => I
Apply:  Pos: [191, 200] cc => I
Apply:  Pos: [196, 203] cc => I
Apply:  Pos: [206, 211] cc => I
Apply:  Pos: [207, 215] cc => I
Apply:  Pos: [209, 214] cc => I
Apply:  Pos: [213, 218] cc => I
Apply:  Pos: [216, 224] cc => I
Apply:  Pos: [217, 221] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [2, 5], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [2, 5], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [12, 2], [10, 8], [11, 3], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [12, 2], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [10, 8], [2, 5], [8, 11], [4, 15], [19, 13], [16, 9], [12, 2], [7, 1], [6, 5], [3, 18], [4, 16], [16, 13], [14, 7], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [7, 1], [4, 16], [14, 7], [8, 11], [3, 18], [4, 15], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [8, 0], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [19, 16], [15, 6], [0, 12], [2, 6], [3, 15], [4, 16], [7, 19], [10, 14], [1, 9], [2, 17], [19, 16], [8, 12], [19, 13], [16, 9], [8, 0], [18, 4], [5, 17], [19, 16], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 19], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [7, 19], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  4.281326532363892

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 17]
[25, 40]
[26, 48]
[57, 70]
[51, 71]
[81, 103]
[103, 123]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[60, 66, 68]
[106, 109, 113]
[133, 135, 140]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[55, 60, 66]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[98, 107, 110]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 17]
[25, 40]
[26, 48]
[57, 70]
[51, 71]
[81, 103]
[103, 123]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3905389308929443

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 17] cc => I, Pos: [6, 17] cc => I, Pos: [25, 40] cc => I, Pos: [25, 40] cc => I, Pos: [26, 48] cc => I, Pos: [26, 48] cc => I, Pos: [51, 71] cc => I, Pos: [51, 71] cc => I, Pos: [55, 60, 66] ccc => cc, Pos: [57, 70] cc => I, Pos: [57, 70] cc => I, Pos: [60, 66, 68] ccc => cc, Pos: [81, 103] cc => I, Pos: [81, 103] cc => I, Pos: [98, 107, 110] ccc => cc, Pos: [103, 123] cc => I, Pos: [103, 123] cc => I, Pos: [106, 109, 113] ccc => cc, Pos: [133, 135, 140] ccc => cc]

Plan: 1
[Pos: [6, 17] cc => I,
 Pos: [25, 40] cc => I,
 Pos: [26, 48] cc => I,
 Pos: [51, 71] cc => I,
 Pos: [55, 60, 66] ccc => cc,
 Pos: [57, 70] cc => I,
 Pos: [81, 103] cc => I,
 Pos: [98, 107, 110] ccc => cc,
 Pos: [106, 109, 113] ccc => cc,
 Pos: [133, 135, 140] ccc => cc]
Change: 10, Saving: 10

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.03124856948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 17] cc => I,
 Pos: [25, 40] cc => I,
 Pos: [26, 48] cc => I,
 Pos: [51, 71] cc => I,
 Pos: [55, 60, 66] ccc => cc,
 Pos: [57, 70] cc => I,
 Pos: [81, 103] cc => I,
 Pos: [98, 107, 110] ccc => cc,
 Pos: [106, 109, 113] ccc => cc,
 Pos: [133, 135, 140] ccc => cc]
Change: 10, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 17] cc => I
Apply:  Pos: [25, 40] cc => I
Apply:  Pos: [26, 48] cc => I
Apply:  Pos: [51, 71] cc => I
Apply:  Pos: [55, 60, 66] ccc => cc
Apply:  Pos: [57, 70] cc => I
Apply:  Pos: [81, 103] cc => I
Apply:  Pos: [98, 107, 110] ccc => cc
Apply:  Pos: [106, 109, 113] ccc => cc
Apply:  Pos: [133, 135, 140] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [14, 7], [6, 5], [4, 16], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [14, 7], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [8, 0], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [19, 16], [15, 6], [8, 0], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 2], [4, 15], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.4217875003814697

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[76, 86]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[48, 52, 59]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[76, 86]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.031344175338745

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 52, 59] ccc => cc, Pos: [76, 86] cc => I, Pos: [76, 86] cc => I]

Plan: 1
[Pos: [48, 52, 59] ccc => cc, Pos: [76, 86] cc => I]
Change: 2, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 52, 59] ccc => cc, Pos: [76, 86] cc => I]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [48, 52, 59] ccc => cc
Apply:  Pos: [76, 86] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [14, 1], [6, 5], [4, 16], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [19, 16], [15, 6], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.031344175338745

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 81, 83]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9843652248382568

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [77, 81, 83] ccc => cc]

Plan: 1
[Pos: [77, 81, 83] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [77, 81, 83] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [77, 81, 83] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [14, 1], [6, 5], [4, 16], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [18, 15], [3, 4], [12, 2], [7, 9], [4, 15], [8, 11], [2, 6], [19, 16], [15, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 2], [4, 15], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  1.9843652248382568

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[72, 77]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[72, 77]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.968726634979248

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [72, 77] cc => I, Pos: [72, 77] cc => I]

Plan: 1
[Pos: [72, 77] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [72, 77] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [72, 77] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [14, 1], [6, 5], [4, 16], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [15, 6], [11, 3], [18, 15], [3, 4], [7, 9], [4, 15], [8, 11], [2, 6], [19, 16], [15, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  1.968726634979248

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [122] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 244

Reduced: 
 - size: 103 (45.78%)
 - depth: 13 (28.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07810544967651367

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [19, 13], [14, 7], [2, 5], [4, 15], [11, 0], [3, 18], [1, 9], [6, 17], [19, 13], [4, 2], [10, 8], [0, 7], [7, 19], [4, 2], [9, 13], [11, 0], [7, 1], [12, 4], [6, 17], [2, 5], [8, 0], [11, 3], [14, 19], [7, 1], [12, 16], [19, 13], [2, 17], [3, 4], [7, 1], [12, 2], [11, 3], [10, 8], [7, 1], [11, 3], [18, 15], [2, 5], [8, 12], [16, 13], [0, 7], [6, 17], [14, 19], [9, 13], [0, 7], [2, 5], [19, 9], [8, 11], [18, 15], [0, 7], [13, 5], [18, 15], [8, 12], [2, 17], [0, 7], [15, 6], [16, 9], [8, 11], [2, 17], [10, 14], [7, 1], [6, 5], [14, 0], [12, 2], [1, 9], [6, 5], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [10, 8], [2, 5], [16, 9], [8, 11], [4, 15], [19, 13], [16, 9], [12, 2], [0, 7], [6, 5], [3, 18], [4, 16], [7, 1], [11, 3], [14, 19], [2, 6], [18, 4], [16, 13], [2, 6], [14, 7], [11, 12], [18, 4], [16, 9], [2, 5], [14, 19], [4, 2], [11, 3], [19, 9], [7, 1], [2, 6], [4, 16], [14, 0], [8, 11], [3, 18], [2, 6], [4, 15], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [18, 15], [11, 3], [10, 8], [2, 5], [14, 0], [19, 9], [18, 15], [11, 3], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [9, 13], [8, 0], [19, 16], [18, 15], [19, 16], [14, 0], [3, 4], [9, 13], [2, 6], [7, 1], [4, 15], [8, 11], [14, 0], [13, 5], [12, 2], [19, 16], [15, 6], [0, 12], [13, 5], [2, 6], [3, 15], [4, 16], [11, 0], [7, 19], [10, 14], [1, 9], [2, 17], [7, 1], [16, 9], [11, 0], [8, 12], [19, 13], [2, 5], [19, 16], [14, 7], [2, 5], [8, 0], [14, 7], [16, 9], [18, 4], [5, 17], [19, 16], [10, 8], [12, 4], [11, 0], [2, 17], [0, 19], [13, 5], [4, 16], [2, 17], [11, 3], [10, 8], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [8, 0], [2, 6], [11, 12], [13, 5], [3, 4], [18, 15], [14, 7], [19, 9], [16, 2], [8, 0], [7, 19], [2, 5], [18, 15], [19, 16], [10, 8], [13, 5], [16, 2], [1, 9], [7, 19], [11, 3], [13, 5], [8, 11], [3, 4], [7, 19], [16, 2], [6, 17], [16, 13], [3, 4], [7, 19], [12, 2], [16, 13], [8, 12], [4, 15], [6, 17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[14, 18]
[12, 23]
[21, 28]
[28, 33]
[33, 37]
[35, 38]
[43, 47]
[40, 48]
[39, 51]
[47, 52]
[51, 54]
[41, 55]
[52, 57]
[50, 60]
[56, 61]
[64, 68]
[72, 78]
[78, 82]
[91, 94]
[92, 97]
[90, 100]
[89, 102]
[105, 110]
[117, 123]
[118, 124]
[124, 132]
[135, 137]
[133, 140]
[138, 145]
[137, 148]
[146, 151]
[155, 162]
[165, 168]
[167, 170]
[178, 182]
[175, 184]
[191, 200]
[196, 203]
[206, 211]
[209, 214]
[207, 215]
[213, 218]
[214, 219]
[217, 221]
[216, 224]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[26, 32, 35]
[107, 116, 121]
[123, 131, 136]
[142, 158, 160]
[166, 171, 174]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[73, 84, 88]
[88, 95, 104]
[161, 166, 171]
[170, 188, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[14, 18]
[12, 23]
[21, 28]
[28, 33]
[33, 37]
[35, 38]
[43, 47]
[40, 48]
[39, 51]
[47, 52]
[51, 54]
[41, 55]
[52, 57]
[50, 60]
[56, 61]
[64, 68]
[72, 78]
[78, 82]
[91, 94]
[92, 97]
[90, 100]
[89, 102]
[105, 110]
[117, 123]
[118, 124]
[124, 132]
[135, 137]
[133, 140]
[138, 145]
[137, 148]
[146, 151]
[155, 162]
[165, 168]
[167, 170]
[178, 182]
[175, 184]
[191, 200]
[196, 203]
[206, 211]
[209, 214]
[207, 215]
[213, 218]
[214, 219]
[217, 221]
[216, 224]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.200796842575073

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 13] cc => I, Pos: [5, 13] cc => I, Pos: [12, 23] cc => I, Pos: [12, 23] cc => I, Pos: [14, 18] cc => I, Pos: [14, 18] cc => I, Pos: [21, 28] cc => I, Pos: [21, 28] cc => I, Pos: [26, 32, 35] ccc => cc, Pos: [28, 33] cc => I, Pos: [28, 33] cc => I, Pos: [33, 37] cc => I, Pos: [33, 37] cc => I, Pos: [35, 38] cc => I, Pos: [35, 38] cc => I, Pos: [39, 51] cc => I, Pos: [39, 51] cc => I, Pos: [40, 48] cc => I, Pos: [40, 48] cc => I, Pos: [41, 55] cc => I, Pos: [41, 55] cc => I, Pos: [43, 47] cc => I, Pos: [43, 47] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [50, 60] cc => I, Pos: [50, 60] cc => I, Pos: [51, 54] cc => I, Pos: [51, 54] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [64, 68] cc => I, Pos: [64, 68] cc => I, Pos: [72, 78] cc => I, Pos: [72, 78] cc => I, Pos: [73, 84, 88] ccc => cc, Pos: [78, 82] cc => I, Pos: [78, 82] cc => I, Pos: [88, 95, 104] ccc => cc, Pos: [89, 102] cc => I, Pos: [89, 102] cc => I, Pos: [90, 100] cc => I, Pos: [90, 100] cc => I, Pos: [91, 94] cc => I, Pos: [91, 94] cc => I, Pos: [92, 97] cc => I, Pos: [92, 97] cc => I, Pos: [105, 110] cc => I, Pos: [105, 110] cc => I, Pos: [107, 116, 121] ccc => cc, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [118, 124] cc => I, Pos: [118, 124] cc => I, Pos: [123, 131, 136] ccc => cc, Pos: [124, 132] cc => I, Pos: [124, 132] cc => I, Pos: [133, 140] cc => I, Pos: [133, 140] cc => I, Pos: [135, 137] cc => I, Pos: [135, 137] cc => I, Pos: [137, 148] cc => I, Pos: [137, 148] cc => I, Pos: [138, 145] cc => I, Pos: [138, 145] cc => I, Pos: [142, 158, 160] ccc => cc, Pos: [146, 151] cc => I, Pos: [146, 151] cc => I, Pos: [155, 162] cc => I, Pos: [155, 162] cc => I, Pos: [161, 166, 171] ccc => cc, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [166, 171, 174] ccc => cc, Pos: [167, 170] cc => I, Pos: [167, 170] cc => I, Pos: [170, 188, 197] ccc => cc, Pos: [175, 184] cc => I, Pos: [175, 184] cc => I, Pos: [178, 182] cc => I, Pos: [178, 182] cc => I, Pos: [191, 200] cc => I, Pos: [191, 200] cc => I, Pos: [196, 203] cc => I, Pos: [196, 203] cc => I, Pos: [206, 211] cc => I, Pos: [206, 211] cc => I, Pos: [207, 215] cc => I, Pos: [207, 215] cc => I, Pos: [209, 214] cc => I, Pos: [209, 214] cc => I, Pos: [213, 218] cc => I, Pos: [213, 218] cc => I, Pos: [214, 219] cc => I, Pos: [214, 219] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [217, 221] cc => I, Pos: [217, 221] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 13] cc => I,
 Pos: [12, 23] cc => I,
 Pos: [14, 18] cc => I,
 Pos: [28, 33] cc => I,
 Pos: [26, 32, 35] ccc => cc,
 Pos: [51, 54] cc => I,
 Pos: [40, 48] cc => I,
 Pos: [41, 55] cc => I,
 Pos: [43, 47] cc => I,
 Pos: [50, 60] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [64, 68] cc => I,
 Pos: [72, 78] cc => I,
 Pos: [73, 84, 88] ccc => cc,
 Pos: [89, 102] cc => I,
 Pos: [90, 100] cc => I,
 Pos: [91, 94] cc => I,
 Pos: [92, 97] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [107, 116, 121] ccc => cc,
 Pos: [117, 123] cc => I,
 Pos: [118, 124] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [137, 148] cc => I,
 Pos: [138, 145] cc => I,
 Pos: [142, 158, 160] ccc => cc,
 Pos: [146, 151] cc => I,
 Pos: [155, 162] cc => I,
 Pos: [161, 166, 171] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [170, 188, 197] ccc => cc,
 Pos: [175, 184] cc => I,
 Pos: [178, 182] cc => I,
 Pos: [191, 200] cc => I,
 Pos: [196, 203] cc => I,
 Pos: [206, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [214, 219] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [217, 221] cc => I]
Change: 42, Saving: 156

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 13] cc => I
Apply:  Pos: [12, 23] cc => I
Apply:  Pos: [14, 18] cc => I
Apply:  Pos: [28, 33] cc => I
Apply:  Pos: [26, 32, 35] ccc => cc
Apply:  Pos: [51, 54] cc => I
Apply:  Pos: [40, 48] cc => I
Apply:  Pos: [41, 55] cc => I
Apply:  Pos: [43, 47] cc => I
Apply:  Pos: [50, 60] cc => I
Apply:  Pos: [52, 57] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [64, 68] cc => I
Apply:  Pos: [72, 78] cc => I
Apply:  Pos: [73, 84, 88] ccc => cc
Apply:  Pos: [89, 102] cc => I
Apply:  Pos: [90, 100] cc => I
Apply:  Pos: [91, 94] cc => I
Apply:  Pos: [92, 97] cc => I
Apply:  Pos: [105, 110] cc => I
Apply:  Pos: [107, 116, 121] ccc => cc
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [118, 124] cc => I
Apply:  Pos: [133, 140] cc => I
Apply:  Pos: [137, 148] cc => I
Apply:  Pos: [138, 145] cc => I
Apply:  Pos: [142, 158, 160] ccc => cc
Apply:  Pos: [146, 151] cc => I
Apply:  Pos: [155, 162] cc => I
Apply:  Pos: [161, 166, 171] ccc => cc
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [170, 188, 197] ccc => cc
Apply:  Pos: [175, 184] cc => I
Apply:  Pos: [178, 182] cc => I
Apply:  Pos: [191, 200] cc => I
Apply:  Pos: [196, 203] cc => I
Apply:  Pos: [206, 211] cc => I
Apply:  Pos: [207, 215] cc => I
Apply:  Pos: [214, 219] cc => I
Apply:  Pos: [213, 218] cc => I
Apply:  Pos: [216, 224] cc => I
Apply:  Pos: [217, 221] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [2, 5], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [7, 1], [12, 4], [2, 5], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [12, 2], [10, 8], [7, 1], [11, 3], [18, 15], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [12, 2], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [10, 8], [2, 5], [8, 11], [4, 15], [19, 13], [16, 9], [12, 2], [7, 1], [6, 5], [3, 18], [4, 16], [16, 13], [14, 7], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [7, 1], [4, 16], [14, 7], [8, 11], [3, 18], [4, 15], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [8, 0], [19, 16], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [15, 6], [0, 12], [2, 6], [3, 15], [4, 16], [7, 19], [10, 14], [1, 9], [2, 17], [19, 16], [8, 12], [19, 13], [16, 9], [14, 7], [8, 0], [10, 14], [18, 4], [5, 17], [19, 16], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [14, 7], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [19, 9], [16, 2], [7, 19], [2, 5], [19, 16], [10, 8], [1, 9], [7, 19], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  4.200796842575073

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 18]
[16, 28]
[28, 40]
[26, 42]
[27, 50]
[59, 72]
[53, 73]
[83, 105]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[62, 68, 70]
[105, 112, 114]
[108, 111, 117]
[136, 138, 141]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 62, 68]
[112, 114, 127]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 109, 113]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 18]
[16, 28]
[28, 40]
[26, 42]
[27, 50]
[59, 72]
[53, 73]
[83, 105]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4700403213500977

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 18] cc => I, Pos: [6, 18] cc => I, Pos: [16, 28] cc => I, Pos: [16, 28] cc => I, Pos: [26, 42] cc => I, Pos: [26, 42] cc => I, Pos: [27, 50] cc => I, Pos: [27, 50] cc => I, Pos: [28, 40] cc => I, Pos: [28, 40] cc => I, Pos: [53, 73] cc => I, Pos: [53, 73] cc => I, Pos: [57, 62, 68] ccc => cc, Pos: [59, 72] cc => I, Pos: [59, 72] cc => I, Pos: [62, 68, 70] ccc => cc, Pos: [83, 105] cc => I, Pos: [83, 105] cc => I, Pos: [100, 109, 113] ccc => cc, Pos: [105, 112, 114] ccc => cc, Pos: [108, 111, 117] ccc => cc, Pos: [112, 114, 127] ccc => cc, Pos: [136, 138, 141] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 18] cc => I,
 Pos: [28, 40] cc => I,
 Pos: [26, 42] cc => I,
 Pos: [27, 50] cc => I,
 Pos: [53, 73] cc => I,
 Pos: [62, 68, 70] ccc => cc,
 Pos: [59, 72] cc => I,
 Pos: [83, 105] cc => I,
 Pos: [100, 109, 113] ccc => cc,
 Pos: [108, 111, 117] ccc => cc,
 Pos: [112, 114, 127] ccc => cc,
 Pos: [136, 138, 141] ccc => cc]
Change: 12, Saving: 38

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 18] cc => I
Apply:  Pos: [28, 40] cc => I
Apply:  Pos: [26, 42] cc => I
Apply:  Pos: [27, 50] cc => I
Apply:  Pos: [53, 73] cc => I
Apply:  Pos: [62, 68, 70] ccc => cc
Apply:  Pos: [59, 72] cc => I
Apply:  Pos: [83, 105] cc => I
Apply:  Pos: [100, 109, 113] ccc => cc
Apply:  Pos: [108, 111, 117] ccc => cc
Apply:  Pos: [112, 114, 127] ccc => cc
Apply:  Pos: [136, 138, 141] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [7, 1], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [18, 15], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [15, 6], [16, 9], [10, 14], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [7, 1], [6, 5], [4, 16], [16, 13], [14, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [7, 1], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [8, 0], [19, 16], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [15, 6], [8, 0], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [10, 14], [14, 7], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 2], [4, 15], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.4700403213500977

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[76, 86]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[76, 86]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0316810607910156

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [76, 86] cc => I, Pos: [76, 86] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [76, 86] cc => I]
Change: 1, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [76, 86] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [7, 1], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [18, 15], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [15, 6], [16, 9], [10, 14], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [7, 1], [6, 5], [4, 16], [16, 13], [14, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [7, 1], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [19, 16], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [15, 6], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [10, 14], [14, 7], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.0316810607910156

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[79, 83, 84]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.016134262084961

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [79, 83, 84] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [79, 83, 84] ccc => cc]
Change: 1, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [79, 83, 84] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [7, 1], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [18, 15], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [15, 6], [16, 9], [10, 14], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [7, 1], [6, 5], [4, 16], [16, 13], [14, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [7, 1], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [19, 16], [18, 15], [3, 4], [12, 2], [7, 9], [4, 15], [8, 11], [2, 6], [15, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [10, 14], [14, 7], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 2], [4, 15], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.016134262084961

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[73, 79]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[73, 79]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9848554134368896

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [73, 79] cc => I, Pos: [73, 79] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [73, 79] cc => I]
Change: 1, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [73, 79] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [7, 1], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [18, 15], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [15, 6], [16, 9], [10, 14], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [7, 1], [6, 5], [4, 16], [16, 13], [14, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [7, 1], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [15, 6], [11, 3], [19, 16], [18, 15], [3, 4], [7, 9], [4, 15], [8, 11], [15, 6], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [10, 14], [14, 7], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  1.9848554134368896

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [123] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 246

Reduced: 
 - size: 102 (45.33%)
 - cycle: 204 (45.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09373092651367188

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [19, 13], [14, 7], [2, 5], [4, 15], [11, 0], [3, 18], [1, 9], [6, 17], [19, 13], [4, 2], [10, 8], [0, 7], [7, 19], [4, 2], [9, 13], [11, 0], [7, 1], [12, 4], [6, 17], [2, 5], [8, 0], [11, 3], [14, 19], [7, 1], [12, 16], [19, 13], [2, 17], [3, 4], [7, 1], [12, 2], [11, 3], [10, 8], [7, 1], [11, 3], [18, 15], [2, 5], [8, 12], [16, 13], [0, 7], [6, 17], [14, 19], [9, 13], [0, 7], [2, 5], [19, 9], [8, 11], [18, 15], [0, 7], [13, 5], [18, 15], [8, 12], [2, 17], [0, 7], [15, 6], [16, 9], [8, 11], [2, 17], [10, 14], [7, 1], [6, 5], [14, 0], [12, 2], [1, 9], [6, 5], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [10, 8], [2, 5], [16, 9], [8, 11], [4, 15], [19, 13], [16, 9], [12, 2], [0, 7], [6, 5], [3, 18], [4, 16], [7, 1], [11, 3], [14, 19], [2, 6], [18, 4], [16, 13], [2, 6], [14, 7], [11, 12], [18, 4], [16, 9], [2, 5], [14, 19], [4, 2], [11, 3], [19, 9], [7, 1], [2, 6], [4, 16], [14, 0], [8, 11], [3, 18], [2, 6], [4, 15], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [18, 15], [11, 3], [10, 8], [2, 5], [14, 0], [19, 9], [18, 15], [11, 3], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [9, 13], [8, 0], [19, 16], [18, 15], [19, 16], [14, 0], [3, 4], [9, 13], [2, 6], [7, 1], [4, 15], [8, 11], [14, 0], [13, 5], [12, 2], [19, 16], [15, 6], [0, 12], [13, 5], [2, 6], [3, 15], [4, 16], [11, 0], [7, 19], [10, 14], [1, 9], [2, 17], [7, 1], [16, 9], [11, 0], [8, 12], [19, 13], [2, 5], [19, 16], [14, 7], [2, 5], [8, 0], [14, 7], [16, 9], [18, 4], [5, 17], [19, 16], [10, 8], [12, 4], [11, 0], [2, 17], [0, 19], [13, 5], [4, 16], [2, 17], [11, 3], [10, 8], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [8, 0], [2, 6], [11, 12], [13, 5], [3, 4], [18, 15], [14, 7], [19, 9], [16, 2], [8, 0], [7, 19], [2, 5], [18, 15], [19, 16], [10, 8], [13, 5], [16, 2], [1, 9], [7, 19], [11, 3], [13, 5], [8, 11], [3, 4], [7, 19], [16, 2], [6, 17], [16, 13], [3, 4], [7, 19], [12, 2], [16, 13], [8, 12], [4, 15], [6, 17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[14, 18]
[12, 23]
[21, 28]
[28, 33]
[33, 37]
[35, 38]
[43, 47]
[40, 48]
[39, 51]
[47, 52]
[51, 54]
[41, 55]
[52, 57]
[50, 60]
[56, 61]
[64, 68]
[72, 78]
[78, 82]
[91, 94]
[92, 97]
[90, 100]
[89, 102]
[105, 110]
[117, 123]
[118, 124]
[124, 132]
[135, 137]
[133, 140]
[138, 145]
[137, 148]
[146, 151]
[155, 162]
[165, 168]
[167, 170]
[178, 182]
[175, 184]
[191, 200]
[196, 203]
[206, 211]
[209, 214]
[207, 215]
[213, 218]
[214, 219]
[217, 221]
[216, 224]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[26, 32, 35]
[107, 116, 121]
[123, 131, 136]
[142, 158, 160]
[166, 171, 174]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[73, 84, 88]
[88, 95, 104]
[161, 166, 171]
[170, 188, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[14, 18]
[12, 23]
[21, 28]
[28, 33]
[33, 37]
[35, 38]
[43, 47]
[40, 48]
[39, 51]
[47, 52]
[51, 54]
[41, 55]
[52, 57]
[50, 60]
[56, 61]
[64, 68]
[72, 78]
[78, 82]
[91, 94]
[92, 97]
[90, 100]
[89, 102]
[105, 110]
[117, 123]
[118, 124]
[124, 132]
[135, 137]
[133, 140]
[138, 145]
[137, 148]
[146, 151]
[155, 162]
[165, 168]
[167, 170]
[178, 182]
[175, 184]
[191, 200]
[196, 203]
[206, 211]
[209, 214]
[207, 215]
[213, 218]
[214, 219]
[217, 221]
[216, 224]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.221674203872681

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 13] cc => I, Pos: [5, 13] cc => I, Pos: [12, 23] cc => I, Pos: [12, 23] cc => I, Pos: [14, 18] cc => I, Pos: [14, 18] cc => I, Pos: [21, 28] cc => I, Pos: [21, 28] cc => I, Pos: [26, 32, 35] ccc => cc, Pos: [28, 33] cc => I, Pos: [28, 33] cc => I, Pos: [33, 37] cc => I, Pos: [33, 37] cc => I, Pos: [35, 38] cc => I, Pos: [35, 38] cc => I, Pos: [39, 51] cc => I, Pos: [39, 51] cc => I, Pos: [40, 48] cc => I, Pos: [40, 48] cc => I, Pos: [41, 55] cc => I, Pos: [41, 55] cc => I, Pos: [43, 47] cc => I, Pos: [43, 47] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [50, 60] cc => I, Pos: [50, 60] cc => I, Pos: [51, 54] cc => I, Pos: [51, 54] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [64, 68] cc => I, Pos: [64, 68] cc => I, Pos: [72, 78] cc => I, Pos: [72, 78] cc => I, Pos: [73, 84, 88] ccc => cc, Pos: [78, 82] cc => I, Pos: [78, 82] cc => I, Pos: [88, 95, 104] ccc => cc, Pos: [89, 102] cc => I, Pos: [89, 102] cc => I, Pos: [90, 100] cc => I, Pos: [90, 100] cc => I, Pos: [91, 94] cc => I, Pos: [91, 94] cc => I, Pos: [92, 97] cc => I, Pos: [92, 97] cc => I, Pos: [105, 110] cc => I, Pos: [105, 110] cc => I, Pos: [107, 116, 121] ccc => cc, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [118, 124] cc => I, Pos: [118, 124] cc => I, Pos: [123, 131, 136] ccc => cc, Pos: [124, 132] cc => I, Pos: [124, 132] cc => I, Pos: [133, 140] cc => I, Pos: [133, 140] cc => I, Pos: [135, 137] cc => I, Pos: [135, 137] cc => I, Pos: [137, 148] cc => I, Pos: [137, 148] cc => I, Pos: [138, 145] cc => I, Pos: [138, 145] cc => I, Pos: [142, 158, 160] ccc => cc, Pos: [146, 151] cc => I, Pos: [146, 151] cc => I, Pos: [155, 162] cc => I, Pos: [155, 162] cc => I, Pos: [161, 166, 171] ccc => cc, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [166, 171, 174] ccc => cc, Pos: [167, 170] cc => I, Pos: [167, 170] cc => I, Pos: [170, 188, 197] ccc => cc, Pos: [175, 184] cc => I, Pos: [175, 184] cc => I, Pos: [178, 182] cc => I, Pos: [178, 182] cc => I, Pos: [191, 200] cc => I, Pos: [191, 200] cc => I, Pos: [196, 203] cc => I, Pos: [196, 203] cc => I, Pos: [206, 211] cc => I, Pos: [206, 211] cc => I, Pos: [207, 215] cc => I, Pos: [207, 215] cc => I, Pos: [209, 214] cc => I, Pos: [209, 214] cc => I, Pos: [213, 218] cc => I, Pos: [213, 218] cc => I, Pos: [214, 219] cc => I, Pos: [214, 219] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [217, 221] cc => I, Pos: [217, 221] cc => I]

--------End Timer [Generate Plans]:  0.10936903953552246

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 13] cc => I,
 Pos: [12, 23] cc => I,
 Pos: [14, 18] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [26, 32, 35] ccc => cc,
 Pos: [33, 37] cc => I,
 Pos: [39, 51] cc => I,
 Pos: [40, 48] cc => I,
 Pos: [41, 55] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [50, 60] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [64, 68] cc => I,
 Pos: [78, 82] cc => I,
 Pos: [73, 84, 88] ccc => cc,
 Pos: [89, 102] cc => I,
 Pos: [90, 100] cc => I,
 Pos: [91, 94] cc => I,
 Pos: [92, 97] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [107, 116, 121] ccc => cc,
 Pos: [117, 123] cc => I,
 Pos: [124, 132] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [137, 148] cc => I,
 Pos: [138, 145] cc => I,
 Pos: [142, 158, 160] ccc => cc,
 Pos: [146, 151] cc => I,
 Pos: [155, 162] cc => I,
 Pos: [166, 171, 174] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [170, 188, 197] ccc => cc,
 Pos: [175, 184] cc => I,
 Pos: [178, 182] cc => I,
 Pos: [191, 200] cc => I,
 Pos: [196, 203] cc => I,
 Pos: [206, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [214, 219] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [217, 221] cc => I]
Change: 42, Saving: 42

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 13] cc => I
Apply:  Pos: [12, 23] cc => I
Apply:  Pos: [14, 18] cc => I
Apply:  Pos: [21, 28] cc => I
Apply:  Pos: [26, 32, 35] ccc => cc
Apply:  Pos: [33, 37] cc => I
Apply:  Pos: [39, 51] cc => I
Apply:  Pos: [40, 48] cc => I
Apply:  Pos: [41, 55] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [50, 60] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [64, 68] cc => I
Apply:  Pos: [78, 82] cc => I
Apply:  Pos: [73, 84, 88] ccc => cc
Apply:  Pos: [89, 102] cc => I
Apply:  Pos: [90, 100] cc => I
Apply:  Pos: [91, 94] cc => I
Apply:  Pos: [92, 97] cc => I
Apply:  Pos: [105, 110] cc => I
Apply:  Pos: [107, 116, 121] ccc => cc
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [124, 132] cc => I
Apply:  Pos: [133, 140] cc => I
Apply:  Pos: [137, 148] cc => I
Apply:  Pos: [138, 145] cc => I
Apply:  Pos: [142, 158, 160] ccc => cc
Apply:  Pos: [146, 151] cc => I
Apply:  Pos: [155, 162] cc => I
Apply:  Pos: [166, 171, 174] ccc => cc
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [170, 188, 197] ccc => cc
Apply:  Pos: [175, 184] cc => I
Apply:  Pos: [178, 182] cc => I
Apply:  Pos: [191, 200] cc => I
Apply:  Pos: [196, 203] cc => I
Apply:  Pos: [206, 211] cc => I
Apply:  Pos: [207, 215] cc => I
Apply:  Pos: [214, 219] cc => I
Apply:  Pos: [213, 218] cc => I
Apply:  Pos: [216, 224] cc => I
Apply:  Pos: [217, 221] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [2, 5], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [2, 5], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [12, 2], [10, 8], [11, 3], [16, 13], [0, 7], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [0, 7], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [12, 2], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [0, 7], [11, 12], [18, 4], [10, 8], [2, 5], [8, 11], [4, 15], [19, 13], [12, 2], [7, 1], [6, 5], [3, 18], [4, 16], [16, 13], [14, 7], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [7, 1], [4, 16], [14, 7], [8, 11], [3, 18], [4, 15], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [11, 3], [10, 8], [2, 5], [19, 9], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [8, 0], [19, 16], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [15, 6], [0, 12], [2, 6], [3, 15], [4, 16], [7, 19], [10, 14], [1, 9], [2, 17], [16, 9], [8, 12], [19, 13], [19, 9], [14, 7], [8, 0], [10, 14], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [14, 7], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [19, 9], [16, 2], [7, 19], [2, 5], [19, 16], [10, 8], [1, 9], [7, 19], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  4.346665859222412

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 17]
[29, 36]
[25, 42]
[26, 51]
[59, 72]
[54, 73]
[84, 105]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[62, 68, 70]
[105, 112, 114]
[136, 138, 141]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 62, 68]
[112, 114, 127]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 109, 113]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 17]
[29, 36]
[25, 42]
[26, 51]
[59, 72]
[54, 73]
[84, 105]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.484980344772339

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 17] cc => I, Pos: [6, 17] cc => I, Pos: [25, 42] cc => I, Pos: [25, 42] cc => I, Pos: [26, 51] cc => I, Pos: [26, 51] cc => I, Pos: [29, 36] cc => I, Pos: [29, 36] cc => I, Pos: [54, 73] cc => I, Pos: [54, 73] cc => I, Pos: [57, 62, 68] ccc => cc, Pos: [59, 72] cc => I, Pos: [59, 72] cc => I, Pos: [62, 68, 70] ccc => cc, Pos: [84, 105] cc => I, Pos: [84, 105] cc => I, Pos: [100, 109, 113] ccc => cc, Pos: [105, 112, 114] ccc => cc, Pos: [112, 114, 127] ccc => cc, Pos: [136, 138, 141] ccc => cc]

--------End Timer [Generate Plans]:  0.0312347412109375

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 17] cc => I,
 Pos: [25, 42] cc => I,
 Pos: [26, 51] cc => I,
 Pos: [29, 36] cc => I,
 Pos: [54, 73] cc => I,
 Pos: [62, 68, 70] ccc => cc,
 Pos: [59, 72] cc => I,
 Pos: [84, 105] cc => I,
 Pos: [100, 109, 113] ccc => cc,
 Pos: [112, 114, 127] ccc => cc,
 Pos: [136, 138, 141] ccc => cc]
Change: 11, Saving: 11

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 17] cc => I
Apply:  Pos: [25, 42] cc => I
Apply:  Pos: [26, 51] cc => I
Apply:  Pos: [29, 36] cc => I
Apply:  Pos: [54, 73] cc => I
Apply:  Pos: [62, 68, 70] ccc => cc
Apply:  Pos: [59, 72] cc => I
Apply:  Pos: [84, 105] cc => I
Apply:  Pos: [100, 109, 113] ccc => cc
Apply:  Pos: [112, 114, 127] ccc => cc
Apply:  Pos: [136, 138, 141] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [12, 2], [7, 1], [6, 5], [4, 16], [16, 13], [14, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [7, 1], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [11, 3], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [8, 0], [19, 16], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [15, 6], [8, 0], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [16, 9], [0, 12], [19, 9], [19, 13], [10, 14], [14, 7], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 2], [4, 15], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.5162150859832764

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[76, 86]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[76, 86]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.093991756439209

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [76, 86] cc => I, Pos: [76, 86] cc => I]

--------End Timer [Generate Plans]:  0.015625

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [76, 86] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [76, 86] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [12, 2], [7, 1], [6, 5], [4, 16], [16, 13], [14, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [7, 1], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [11, 3], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [19, 16], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [15, 6], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [16, 9], [0, 12], [19, 13], [19, 9], [10, 14], [14, 7], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.109616756439209

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[79, 83, 84]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0475049018859863

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [79, 83, 84] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [79, 83, 84] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [79, 83, 84] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [12, 2], [7, 1], [6, 5], [4, 16], [16, 13], [14, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [7, 1], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [11, 3], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [19, 16], [18, 15], [3, 4], [12, 2], [7, 9], [4, 15], [8, 11], [2, 6], [15, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [16, 9], [0, 12], [19, 9], [19, 13], [10, 14], [14, 7], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 2], [4, 15], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.0475049018859863

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 79]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 79]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.033900260925293

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [74, 79] cc => I, Pos: [74, 79] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [74, 79] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [74, 79] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [12, 2], [7, 1], [6, 5], [4, 16], [16, 13], [14, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [7, 1], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [11, 3], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [15, 6], [19, 16], [18, 15], [3, 4], [7, 9], [4, 15], [8, 11], [15, 6], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [16, 9], [0, 12], [19, 13], [19, 9], [10, 14], [14, 7], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.033900260925293

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [124] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 33 - (small)
 - circuit cycle: 248

Reduced: 
 - size: 101 (44.89%)
 - depth: 12 (26.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.0939643383026123

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [19, 13], [14, 7], [2, 5], [4, 15], [11, 0], [3, 18], [1, 9], [6, 17], [19, 13], [4, 2], [10, 8], [0, 7], [7, 19], [4, 2], [9, 13], [11, 0], [7, 1], [12, 4], [6, 17], [2, 5], [8, 0], [11, 3], [14, 19], [7, 1], [12, 16], [19, 13], [2, 17], [3, 4], [7, 1], [12, 2], [11, 3], [10, 8], [7, 1], [11, 3], [18, 15], [2, 5], [8, 12], [16, 13], [0, 7], [6, 17], [14, 19], [9, 13], [0, 7], [2, 5], [19, 9], [8, 11], [18, 15], [0, 7], [13, 5], [18, 15], [8, 12], [2, 17], [0, 7], [15, 6], [16, 9], [8, 11], [2, 17], [10, 14], [7, 1], [6, 5], [14, 0], [12, 2], [1, 9], [6, 5], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [10, 8], [2, 5], [16, 9], [8, 11], [4, 15], [19, 13], [16, 9], [12, 2], [0, 7], [6, 5], [3, 18], [4, 16], [7, 1], [11, 3], [14, 19], [2, 6], [18, 4], [16, 13], [2, 6], [14, 7], [11, 12], [18, 4], [16, 9], [2, 5], [14, 19], [4, 2], [11, 3], [19, 9], [7, 1], [2, 6], [4, 16], [14, 0], [8, 11], [3, 18], [2, 6], [4, 15], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [18, 15], [11, 3], [10, 8], [2, 5], [14, 0], [19, 9], [18, 15], [11, 3], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [9, 13], [8, 0], [19, 16], [18, 15], [19, 16], [14, 0], [3, 4], [9, 13], [2, 6], [7, 1], [4, 15], [8, 11], [14, 0], [13, 5], [12, 2], [19, 16], [15, 6], [0, 12], [13, 5], [2, 6], [3, 15], [4, 16], [11, 0], [7, 19], [10, 14], [1, 9], [2, 17], [7, 1], [16, 9], [11, 0], [8, 12], [19, 13], [2, 5], [19, 16], [14, 7], [2, 5], [8, 0], [14, 7], [16, 9], [18, 4], [5, 17], [19, 16], [10, 8], [12, 4], [11, 0], [2, 17], [0, 19], [13, 5], [4, 16], [2, 17], [11, 3], [10, 8], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [8, 0], [2, 6], [11, 12], [13, 5], [3, 4], [18, 15], [14, 7], [19, 9], [16, 2], [8, 0], [7, 19], [2, 5], [18, 15], [19, 16], [10, 8], [13, 5], [16, 2], [1, 9], [7, 19], [11, 3], [13, 5], [8, 11], [3, 4], [7, 19], [16, 2], [6, 17], [16, 13], [3, 4], [7, 19], [12, 2], [16, 13], [8, 12], [4, 15], [6, 17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[14, 18]
[12, 23]
[21, 28]
[28, 33]
[33, 37]
[35, 38]
[43, 47]
[40, 48]
[39, 51]
[47, 52]
[51, 54]
[41, 55]
[52, 57]
[50, 60]
[56, 61]
[64, 68]
[72, 78]
[78, 82]
[91, 94]
[92, 97]
[90, 100]
[89, 102]
[105, 110]
[117, 123]
[118, 124]
[124, 132]
[135, 137]
[133, 140]
[138, 145]
[137, 148]
[146, 151]
[155, 162]
[165, 168]
[167, 170]
[178, 182]
[175, 184]
[191, 200]
[196, 203]
[206, 211]
[209, 214]
[207, 215]
[213, 218]
[214, 219]
[217, 221]
[216, 224]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[26, 32, 35]
[107, 116, 121]
[123, 131, 136]
[142, 158, 160]
[166, 171, 174]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[73, 84, 88]
[88, 95, 104]
[161, 166, 171]
[170, 188, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[14, 18]
[12, 23]
[21, 28]
[28, 33]
[33, 37]
[35, 38]
[43, 47]
[40, 48]
[39, 51]
[47, 52]
[51, 54]
[41, 55]
[52, 57]
[50, 60]
[56, 61]
[64, 68]
[72, 78]
[78, 82]
[91, 94]
[92, 97]
[90, 100]
[89, 102]
[105, 110]
[117, 123]
[118, 124]
[124, 132]
[135, 137]
[133, 140]
[138, 145]
[137, 148]
[146, 151]
[155, 162]
[165, 168]
[167, 170]
[178, 182]
[175, 184]
[191, 200]
[196, 203]
[206, 211]
[209, 214]
[207, 215]
[213, 218]
[214, 219]
[217, 221]
[216, 224]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.203086853027344

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 13] cc => I, Pos: [5, 13] cc => I, Pos: [12, 23] cc => I, Pos: [12, 23] cc => I, Pos: [14, 18] cc => I, Pos: [14, 18] cc => I, Pos: [21, 28] cc => I, Pos: [21, 28] cc => I, Pos: [26, 32, 35] ccc => cc, Pos: [28, 33] cc => I, Pos: [28, 33] cc => I, Pos: [33, 37] cc => I, Pos: [33, 37] cc => I, Pos: [35, 38] cc => I, Pos: [35, 38] cc => I, Pos: [39, 51] cc => I, Pos: [39, 51] cc => I, Pos: [40, 48] cc => I, Pos: [40, 48] cc => I, Pos: [41, 55] cc => I, Pos: [41, 55] cc => I, Pos: [43, 47] cc => I, Pos: [43, 47] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [50, 60] cc => I, Pos: [50, 60] cc => I, Pos: [51, 54] cc => I, Pos: [51, 54] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [64, 68] cc => I, Pos: [64, 68] cc => I, Pos: [72, 78] cc => I, Pos: [72, 78] cc => I, Pos: [73, 84, 88] ccc => cc, Pos: [78, 82] cc => I, Pos: [78, 82] cc => I, Pos: [88, 95, 104] ccc => cc, Pos: [89, 102] cc => I, Pos: [89, 102] cc => I, Pos: [90, 100] cc => I, Pos: [90, 100] cc => I, Pos: [91, 94] cc => I, Pos: [91, 94] cc => I, Pos: [92, 97] cc => I, Pos: [92, 97] cc => I, Pos: [105, 110] cc => I, Pos: [105, 110] cc => I, Pos: [107, 116, 121] ccc => cc, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [118, 124] cc => I, Pos: [118, 124] cc => I, Pos: [123, 131, 136] ccc => cc, Pos: [124, 132] cc => I, Pos: [124, 132] cc => I, Pos: [133, 140] cc => I, Pos: [133, 140] cc => I, Pos: [135, 137] cc => I, Pos: [135, 137] cc => I, Pos: [137, 148] cc => I, Pos: [137, 148] cc => I, Pos: [138, 145] cc => I, Pos: [138, 145] cc => I, Pos: [142, 158, 160] ccc => cc, Pos: [146, 151] cc => I, Pos: [146, 151] cc => I, Pos: [155, 162] cc => I, Pos: [155, 162] cc => I, Pos: [161, 166, 171] ccc => cc, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [166, 171, 174] ccc => cc, Pos: [167, 170] cc => I, Pos: [167, 170] cc => I, Pos: [170, 188, 197] ccc => cc, Pos: [175, 184] cc => I, Pos: [175, 184] cc => I, Pos: [178, 182] cc => I, Pos: [178, 182] cc => I, Pos: [191, 200] cc => I, Pos: [191, 200] cc => I, Pos: [196, 203] cc => I, Pos: [196, 203] cc => I, Pos: [206, 211] cc => I, Pos: [206, 211] cc => I, Pos: [207, 215] cc => I, Pos: [207, 215] cc => I, Pos: [209, 214] cc => I, Pos: [209, 214] cc => I, Pos: [213, 218] cc => I, Pos: [213, 218] cc => I, Pos: [214, 219] cc => I, Pos: [214, 219] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [217, 221] cc => I, Pos: [217, 221] cc => I]

--------End Timer [Generate Plans]:  0.10927128791809082

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 13] cc => I,
 Pos: [12, 23] cc => I,
 Pos: [14, 18] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [26, 32, 35] ccc => cc,
 Pos: [33, 37] cc => I,
 Pos: [39, 51] cc => I,
 Pos: [40, 48] cc => I,
 Pos: [41, 55] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [50, 60] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [64, 68] cc => I,
 Pos: [72, 78] cc => I,
 Pos: [73, 84, 88] ccc => cc,
 Pos: [89, 102] cc => I,
 Pos: [90, 100] cc => I,
 Pos: [91, 94] cc => I,
 Pos: [92, 97] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [107, 116, 121] ccc => cc,
 Pos: [117, 123] cc => I,
 Pos: [124, 132] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [135, 137] cc => I,
 Pos: [138, 145] cc => I,
 Pos: [142, 158, 160] ccc => cc,
 Pos: [146, 151] cc => I,
 Pos: [155, 162] cc => I,
 Pos: [161, 166, 171] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [167, 170] cc => I,
 Pos: [175, 184] cc => I,
 Pos: [178, 182] cc => I,
 Pos: [191, 200] cc => I,
 Pos: [196, 203] cc => I,
 Pos: [206, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [214, 219] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [217, 221] cc => I]
Change: 42, Saving: 42

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 13] cc => I
Apply:  Pos: [12, 23] cc => I
Apply:  Pos: [14, 18] cc => I
Apply:  Pos: [21, 28] cc => I
Apply:  Pos: [26, 32, 35] ccc => cc
Apply:  Pos: [33, 37] cc => I
Apply:  Pos: [39, 51] cc => I
Apply:  Pos: [40, 48] cc => I
Apply:  Pos: [41, 55] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [50, 60] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [64, 68] cc => I
Apply:  Pos: [72, 78] cc => I
Apply:  Pos: [73, 84, 88] ccc => cc
Apply:  Pos: [89, 102] cc => I
Apply:  Pos: [90, 100] cc => I
Apply:  Pos: [91, 94] cc => I
Apply:  Pos: [92, 97] cc => I
Apply:  Pos: [105, 110] cc => I
Apply:  Pos: [107, 116, 121] ccc => cc
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [124, 132] cc => I
Apply:  Pos: [133, 140] cc => I
Apply:  Pos: [135, 137] cc => I
Apply:  Pos: [138, 145] cc => I
Apply:  Pos: [142, 158, 160] ccc => cc
Apply:  Pos: [146, 151] cc => I
Apply:  Pos: [155, 162] cc => I
Apply:  Pos: [161, 166, 171] ccc => cc
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [167, 170] cc => I
Apply:  Pos: [175, 184] cc => I
Apply:  Pos: [178, 182] cc => I
Apply:  Pos: [191, 200] cc => I
Apply:  Pos: [196, 203] cc => I
Apply:  Pos: [206, 211] cc => I
Apply:  Pos: [207, 215] cc => I
Apply:  Pos: [214, 219] cc => I
Apply:  Pos: [213, 218] cc => I
Apply:  Pos: [216, 224] cc => I
Apply:  Pos: [217, 221] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [2, 5], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [2, 5], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [12, 2], [10, 8], [11, 3], [16, 13], [0, 7], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [0, 7], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [12, 2], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [10, 8], [2, 5], [8, 11], [4, 15], [19, 13], [16, 9], [12, 2], [7, 1], [6, 5], [3, 18], [4, 16], [16, 13], [14, 7], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [7, 1], [4, 16], [14, 7], [8, 11], [3, 18], [4, 15], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [11, 3], [10, 8], [2, 5], [19, 9], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [8, 0], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [19, 16], [15, 6], [0, 12], [2, 6], [3, 15], [4, 16], [7, 19], [10, 14], [1, 9], [2, 17], [19, 16], [8, 12], [19, 13], [16, 9], [8, 0], [18, 4], [5, 17], [19, 16], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 19], [2, 5], [19, 16], [10, 8], [1, 9], [7, 19], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  4.312358140945435

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 17]
[29, 36]
[25, 42]
[26, 50]
[59, 72]
[53, 73]
[84, 105]
[105, 125]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[62, 68, 70]
[108, 111, 115]
[135, 137, 140]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 62, 68]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 109, 112]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 17]
[29, 36]
[25, 42]
[26, 50]
[59, 72]
[53, 73]
[84, 105]
[105, 125]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.5312459468841553

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 17] cc => I, Pos: [6, 17] cc => I, Pos: [25, 42] cc => I, Pos: [25, 42] cc => I, Pos: [26, 50] cc => I, Pos: [26, 50] cc => I, Pos: [29, 36] cc => I, Pos: [29, 36] cc => I, Pos: [53, 73] cc => I, Pos: [53, 73] cc => I, Pos: [57, 62, 68] ccc => cc, Pos: [59, 72] cc => I, Pos: [59, 72] cc => I, Pos: [62, 68, 70] ccc => cc, Pos: [84, 105] cc => I, Pos: [84, 105] cc => I, Pos: [100, 109, 112] ccc => cc, Pos: [105, 125] cc => I, Pos: [105, 125] cc => I, Pos: [108, 111, 115] ccc => cc, Pos: [135, 137, 140] ccc => cc]

--------End Timer [Generate Plans]:  0.031247377395629883

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 17] cc => I,
 Pos: [25, 42] cc => I,
 Pos: [26, 50] cc => I,
 Pos: [29, 36] cc => I,
 Pos: [53, 73] cc => I,
 Pos: [57, 62, 68] ccc => cc,
 Pos: [59, 72] cc => I,
 Pos: [105, 125] cc => I,
 Pos: [100, 109, 112] ccc => cc,
 Pos: [108, 111, 115] ccc => cc,
 Pos: [135, 137, 140] ccc => cc]
Change: 11, Saving: 11

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 17] cc => I
Apply:  Pos: [25, 42] cc => I
Apply:  Pos: [26, 50] cc => I
Apply:  Pos: [29, 36] cc => I
Apply:  Pos: [53, 73] cc => I
Apply:  Pos: [57, 62, 68] ccc => cc
Apply:  Pos: [59, 72] cc => I
Apply:  Pos: [105, 125] cc => I
Apply:  Pos: [100, 109, 112] ccc => cc
Apply:  Pos: [108, 111, 115] ccc => cc
Apply:  Pos: [135, 137, 140] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [14, 7], [6, 5], [4, 16], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [14, 7], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [11, 3], [10, 8], [2, 5], [19, 9], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [8, 0], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [19, 16], [15, 6], [8, 0], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 2], [4, 15], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.562493324279785

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[77, 87]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[48, 52, 59]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[77, 87]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0624842643737793

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 52, 59] ccc => cc, Pos: [77, 87] cc => I, Pos: [77, 87] cc => I]

--------End Timer [Generate Plans]:  0.015626192092895508

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 52, 59] ccc => cc, Pos: [77, 87] cc => I]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [48, 52, 59] ccc => cc
Apply:  Pos: [77, 87] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [14, 1], [6, 5], [4, 16], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [11, 3], [10, 8], [2, 5], [19, 9], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [19, 16], [15, 6], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.078110456466675

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[78, 82, 84]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9687721729278564

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [78, 82, 84] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [78, 82, 84] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [78, 82, 84] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [14, 1], [6, 5], [4, 16], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [11, 3], [10, 8], [2, 5], [19, 9], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [18, 15], [3, 4], [12, 2], [7, 9], [4, 15], [8, 11], [2, 6], [19, 16], [15, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 2], [4, 15], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  1.9687721729278564

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 78]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 78]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9687232971191406

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [74, 78] cc => I, Pos: [74, 78] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [74, 78] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [74, 78] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [14, 1], [6, 5], [4, 16], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [11, 3], [10, 8], [2, 5], [19, 9], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [15, 6], [18, 15], [3, 4], [7, 9], [4, 15], [8, 11], [2, 6], [19, 16], [15, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  1.9687232971191406

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [122] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 244

Reduced: 
 - size: 103 (45.78%)
 - depth: 13 (28.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07792234420776367

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [19, 13], [14, 7], [2, 5], [4, 15], [11, 0], [3, 18], [1, 9], [6, 17], [19, 13], [4, 2], [10, 8], [0, 7], [7, 19], [4, 2], [9, 13], [11, 0], [7, 1], [12, 4], [6, 17], [2, 5], [8, 0], [11, 3], [14, 19], [7, 1], [12, 16], [19, 13], [2, 17], [3, 4], [7, 1], [12, 2], [11, 3], [10, 8], [7, 1], [11, 3], [18, 15], [2, 5], [8, 12], [16, 13], [0, 7], [6, 17], [14, 19], [9, 13], [0, 7], [2, 5], [19, 9], [8, 11], [18, 15], [0, 7], [13, 5], [18, 15], [8, 12], [2, 17], [0, 7], [15, 6], [16, 9], [8, 11], [2, 17], [10, 14], [7, 1], [6, 5], [14, 0], [12, 2], [1, 9], [6, 5], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [10, 8], [2, 5], [16, 9], [8, 11], [4, 15], [19, 13], [16, 9], [12, 2], [0, 7], [6, 5], [3, 18], [4, 16], [7, 1], [11, 3], [14, 19], [2, 6], [18, 4], [16, 13], [2, 6], [14, 7], [11, 12], [18, 4], [16, 9], [2, 5], [14, 19], [4, 2], [11, 3], [19, 9], [7, 1], [2, 6], [4, 16], [14, 0], [8, 11], [3, 18], [2, 6], [4, 15], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [18, 15], [11, 3], [10, 8], [2, 5], [14, 0], [19, 9], [18, 15], [11, 3], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [9, 13], [8, 0], [19, 16], [18, 15], [19, 16], [14, 0], [3, 4], [9, 13], [2, 6], [7, 1], [4, 15], [8, 11], [14, 0], [13, 5], [12, 2], [19, 16], [15, 6], [0, 12], [13, 5], [2, 6], [3, 15], [4, 16], [11, 0], [7, 19], [10, 14], [1, 9], [2, 17], [7, 1], [16, 9], [11, 0], [8, 12], [19, 13], [2, 5], [19, 16], [14, 7], [2, 5], [8, 0], [14, 7], [16, 9], [18, 4], [5, 17], [19, 16], [10, 8], [12, 4], [11, 0], [2, 17], [0, 19], [13, 5], [4, 16], [2, 17], [11, 3], [10, 8], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [8, 0], [2, 6], [11, 12], [13, 5], [3, 4], [18, 15], [14, 7], [19, 9], [16, 2], [8, 0], [7, 19], [2, 5], [18, 15], [19, 16], [10, 8], [13, 5], [16, 2], [1, 9], [7, 19], [11, 3], [13, 5], [8, 11], [3, 4], [7, 19], [16, 2], [6, 17], [16, 13], [3, 4], [7, 19], [12, 2], [16, 13], [8, 12], [4, 15], [6, 17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[14, 18]
[12, 23]
[21, 28]
[28, 33]
[33, 37]
[35, 38]
[43, 47]
[40, 48]
[39, 51]
[47, 52]
[51, 54]
[41, 55]
[52, 57]
[50, 60]
[56, 61]
[64, 68]
[72, 78]
[78, 82]
[91, 94]
[92, 97]
[90, 100]
[89, 102]
[105, 110]
[117, 123]
[118, 124]
[124, 132]
[135, 137]
[133, 140]
[138, 145]
[137, 148]
[146, 151]
[155, 162]
[165, 168]
[167, 170]
[178, 182]
[175, 184]
[191, 200]
[196, 203]
[206, 211]
[209, 214]
[207, 215]
[213, 218]
[214, 219]
[217, 221]
[216, 224]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[26, 32, 35]
[107, 116, 121]
[123, 131, 136]
[142, 158, 160]
[166, 171, 174]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[73, 84, 88]
[88, 95, 104]
[161, 166, 171]
[170, 188, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[14, 18]
[12, 23]
[21, 28]
[28, 33]
[33, 37]
[35, 38]
[43, 47]
[40, 48]
[39, 51]
[47, 52]
[51, 54]
[41, 55]
[52, 57]
[50, 60]
[56, 61]
[64, 68]
[72, 78]
[78, 82]
[91, 94]
[92, 97]
[90, 100]
[89, 102]
[105, 110]
[117, 123]
[118, 124]
[124, 132]
[135, 137]
[133, 140]
[138, 145]
[137, 148]
[146, 151]
[155, 162]
[165, 168]
[167, 170]
[178, 182]
[175, 184]
[191, 200]
[196, 203]
[206, 211]
[209, 214]
[207, 215]
[213, 218]
[214, 219]
[217, 221]
[216, 224]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.18728494644165

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 13] cc => I, Pos: [5, 13] cc => I, Pos: [12, 23] cc => I, Pos: [12, 23] cc => I, Pos: [14, 18] cc => I, Pos: [14, 18] cc => I, Pos: [21, 28] cc => I, Pos: [21, 28] cc => I, Pos: [26, 32, 35] ccc => cc, Pos: [28, 33] cc => I, Pos: [28, 33] cc => I, Pos: [33, 37] cc => I, Pos: [33, 37] cc => I, Pos: [35, 38] cc => I, Pos: [35, 38] cc => I, Pos: [39, 51] cc => I, Pos: [39, 51] cc => I, Pos: [40, 48] cc => I, Pos: [40, 48] cc => I, Pos: [41, 55] cc => I, Pos: [41, 55] cc => I, Pos: [43, 47] cc => I, Pos: [43, 47] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [50, 60] cc => I, Pos: [50, 60] cc => I, Pos: [51, 54] cc => I, Pos: [51, 54] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [64, 68] cc => I, Pos: [64, 68] cc => I, Pos: [72, 78] cc => I, Pos: [72, 78] cc => I, Pos: [73, 84, 88] ccc => cc, Pos: [78, 82] cc => I, Pos: [78, 82] cc => I, Pos: [88, 95, 104] ccc => cc, Pos: [89, 102] cc => I, Pos: [89, 102] cc => I, Pos: [90, 100] cc => I, Pos: [90, 100] cc => I, Pos: [91, 94] cc => I, Pos: [91, 94] cc => I, Pos: [92, 97] cc => I, Pos: [92, 97] cc => I, Pos: [105, 110] cc => I, Pos: [105, 110] cc => I, Pos: [107, 116, 121] ccc => cc, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [118, 124] cc => I, Pos: [118, 124] cc => I, Pos: [123, 131, 136] ccc => cc, Pos: [124, 132] cc => I, Pos: [124, 132] cc => I, Pos: [133, 140] cc => I, Pos: [133, 140] cc => I, Pos: [135, 137] cc => I, Pos: [135, 137] cc => I, Pos: [137, 148] cc => I, Pos: [137, 148] cc => I, Pos: [138, 145] cc => I, Pos: [138, 145] cc => I, Pos: [142, 158, 160] ccc => cc, Pos: [146, 151] cc => I, Pos: [146, 151] cc => I, Pos: [155, 162] cc => I, Pos: [155, 162] cc => I, Pos: [161, 166, 171] ccc => cc, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [166, 171, 174] ccc => cc, Pos: [167, 170] cc => I, Pos: [167, 170] cc => I, Pos: [170, 188, 197] ccc => cc, Pos: [175, 184] cc => I, Pos: [175, 184] cc => I, Pos: [178, 182] cc => I, Pos: [178, 182] cc => I, Pos: [191, 200] cc => I, Pos: [191, 200] cc => I, Pos: [196, 203] cc => I, Pos: [196, 203] cc => I, Pos: [206, 211] cc => I, Pos: [206, 211] cc => I, Pos: [207, 215] cc => I, Pos: [207, 215] cc => I, Pos: [209, 214] cc => I, Pos: [209, 214] cc => I, Pos: [213, 218] cc => I, Pos: [213, 218] cc => I, Pos: [214, 219] cc => I, Pos: [214, 219] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [217, 221] cc => I, Pos: [217, 221] cc => I]

--------End Timer [Generate Plans]:  0.10935378074645996

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 13] cc => I,
 Pos: [12, 23] cc => I,
 Pos: [14, 18] cc => I,
 Pos: [28, 33] cc => I,
 Pos: [35, 38] cc => I,
 Pos: [39, 51] cc => I,
 Pos: [40, 48] cc => I,
 Pos: [41, 55] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [50, 60] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [64, 68] cc => I,
 Pos: [72, 78] cc => I,
 Pos: [73, 84, 88] ccc => cc,
 Pos: [89, 102] cc => I,
 Pos: [90, 100] cc => I,
 Pos: [91, 94] cc => I,
 Pos: [92, 97] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [107, 116, 121] ccc => cc,
 Pos: [123, 131, 136] ccc => cc,
 Pos: [124, 132] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [137, 148] cc => I,
 Pos: [138, 145] cc => I,
 Pos: [142, 158, 160] ccc => cc,
 Pos: [146, 151] cc => I,
 Pos: [155, 162] cc => I,
 Pos: [161, 166, 171] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [170, 188, 197] ccc => cc,
 Pos: [175, 184] cc => I,
 Pos: [178, 182] cc => I,
 Pos: [191, 200] cc => I,
 Pos: [196, 203] cc => I,
 Pos: [206, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [214, 219] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [217, 221] cc => I]
Change: 41, Saving: 41

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 13] cc => I
Apply:  Pos: [12, 23] cc => I
Apply:  Pos: [14, 18] cc => I
Apply:  Pos: [28, 33] cc => I
Apply:  Pos: [35, 38] cc => I
Apply:  Pos: [39, 51] cc => I
Apply:  Pos: [40, 48] cc => I
Apply:  Pos: [41, 55] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [50, 60] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [64, 68] cc => I
Apply:  Pos: [72, 78] cc => I
Apply:  Pos: [73, 84, 88] ccc => cc
Apply:  Pos: [89, 102] cc => I
Apply:  Pos: [90, 100] cc => I
Apply:  Pos: [91, 94] cc => I
Apply:  Pos: [92, 97] cc => I
Apply:  Pos: [105, 110] cc => I
Apply:  Pos: [107, 116, 121] ccc => cc
Apply:  Pos: [123, 131, 136] ccc => cc
Apply:  Pos: [124, 132] cc => I
Apply:  Pos: [133, 140] cc => I
Apply:  Pos: [137, 148] cc => I
Apply:  Pos: [138, 145] cc => I
Apply:  Pos: [142, 158, 160] ccc => cc
Apply:  Pos: [146, 151] cc => I
Apply:  Pos: [155, 162] cc => I
Apply:  Pos: [161, 166, 171] ccc => cc
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [170, 188, 197] ccc => cc
Apply:  Pos: [175, 184] cc => I
Apply:  Pos: [178, 182] cc => I
Apply:  Pos: [191, 200] cc => I
Apply:  Pos: [196, 203] cc => I
Apply:  Pos: [206, 211] cc => I
Apply:  Pos: [207, 215] cc => I
Apply:  Pos: [214, 219] cc => I
Apply:  Pos: [213, 218] cc => I
Apply:  Pos: [216, 224] cc => I
Apply:  Pos: [217, 221] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [2, 5], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [7, 1], [12, 4], [2, 5], [8, 0], [11, 3], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [12, 2], [10, 8], [7, 1], [16, 13], [0, 7], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [0, 7], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [12, 2], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [10, 8], [2, 5], [8, 11], [4, 15], [19, 13], [16, 9], [12, 2], [7, 1], [6, 5], [3, 18], [4, 16], [16, 13], [14, 7], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [7, 1], [4, 16], [14, 7], [8, 11], [3, 18], [4, 15], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [18, 15], [11, 3], [10, 8], [2, 5], [19, 9], [18, 6], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [8, 0], [19, 16], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [15, 6], [0, 12], [2, 6], [3, 15], [4, 16], [7, 19], [10, 14], [1, 9], [2, 17], [19, 16], [8, 12], [19, 13], [16, 9], [14, 7], [8, 0], [10, 14], [18, 4], [5, 17], [19, 16], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [14, 7], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [19, 9], [16, 2], [7, 19], [2, 5], [19, 16], [10, 8], [1, 9], [7, 19], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  4.29663872718811

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 18]
[16, 28]
[30, 37]
[26, 43]
[27, 51]
[60, 73]
[54, 74]
[87, 107]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[63, 69, 71]
[107, 114, 116]
[110, 113, 119]
[138, 140, 143]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[58, 63, 69]
[114, 116, 129]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[102, 111, 115]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 18]
[16, 28]
[30, 37]
[26, 43]
[27, 51]
[60, 73]
[54, 74]
[87, 107]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.5156190395355225

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 18] cc => I, Pos: [6, 18] cc => I, Pos: [16, 28] cc => I, Pos: [16, 28] cc => I, Pos: [26, 43] cc => I, Pos: [26, 43] cc => I, Pos: [27, 51] cc => I, Pos: [27, 51] cc => I, Pos: [30, 37] cc => I, Pos: [30, 37] cc => I, Pos: [54, 74] cc => I, Pos: [54, 74] cc => I, Pos: [58, 63, 69] ccc => cc, Pos: [60, 73] cc => I, Pos: [60, 73] cc => I, Pos: [63, 69, 71] ccc => cc, Pos: [87, 107] cc => I, Pos: [87, 107] cc => I, Pos: [102, 111, 115] ccc => cc, Pos: [107, 114, 116] ccc => cc, Pos: [110, 113, 119] ccc => cc, Pos: [114, 116, 129] ccc => cc, Pos: [138, 140, 143] ccc => cc]

--------End Timer [Generate Plans]:  0.03122997283935547

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 18] cc => I,
 Pos: [16, 28] cc => I,
 Pos: [26, 43] cc => I,
 Pos: [27, 51] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [54, 74] cc => I,
 Pos: [58, 63, 69] ccc => cc,
 Pos: [60, 73] cc => I,
 Pos: [107, 114, 116] ccc => cc,
 Pos: [102, 111, 115] ccc => cc,
 Pos: [110, 113, 119] ccc => cc,
 Pos: [138, 140, 143] ccc => cc]
Change: 12, Saving: 12

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 18] cc => I
Apply:  Pos: [16, 28] cc => I
Apply:  Pos: [26, 43] cc => I
Apply:  Pos: [27, 51] cc => I
Apply:  Pos: [30, 37] cc => I
Apply:  Pos: [54, 74] cc => I
Apply:  Pos: [58, 63, 69] ccc => cc
Apply:  Pos: [60, 73] cc => I
Apply:  Pos: [107, 114, 116] ccc => cc
Apply:  Pos: [102, 111, 115] ccc => cc
Apply:  Pos: [110, 113, 119] ccc => cc
Apply:  Pos: [138, 140, 143] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 3], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [14, 7], [6, 5], [4, 16], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [14, 7], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [18, 15], [11, 3], [10, 8], [2, 5], [19, 9], [18, 6], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [8, 0], [19, 16], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [15, 6], [8, 0], [2, 6], [3, 15], [4, 16], [7, 19], [10, 7], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [14, 7], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 2], [4, 15], [14, 7], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.546849012374878

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[78, 87]
[99, 111]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[47, 51, 58]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[78, 87]
[99, 111]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0938024520874023

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [47, 51, 58] ccc => cc, Pos: [78, 87] cc => I, Pos: [78, 87] cc => I, Pos: [99, 111] cc => I, Pos: [99, 111] cc => I]

--------End Timer [Generate Plans]:  0.015624284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [47, 51, 58] ccc => cc, Pos: [78, 87] cc => I, Pos: [99, 111] cc => I]
Change: 3, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [47, 51, 58] ccc => cc
Apply:  Pos: [78, 87] cc => I
Apply:  Pos: [99, 111] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 3], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [14, 1], [6, 5], [4, 16], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [18, 15], [11, 3], [10, 8], [2, 5], [19, 9], [18, 6], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [19, 16], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [15, 6], [2, 6], [3, 15], [4, 16], [7, 19], [10, 7], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.109426736831665

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[79, 83, 84]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.984393835067749

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [79, 83, 84] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [79, 83, 84] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [79, 83, 84] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 3], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [14, 1], [6, 5], [4, 16], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [18, 15], [11, 3], [10, 8], [2, 5], [19, 9], [18, 6], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [19, 16], [3, 4], [12, 2], [7, 9], [4, 15], [8, 11], [2, 6], [15, 6], [3, 15], [4, 16], [7, 19], [10, 7], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 2], [4, 15], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  1.984393835067749

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[75, 79]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[75, 79]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9531276226043701

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [75, 79] cc => I, Pos: [75, 79] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [75, 79] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [75, 79] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 3], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [14, 1], [6, 5], [4, 16], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [18, 15], [11, 3], [10, 8], [2, 5], [19, 9], [18, 6], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [15, 6], [19, 16], [3, 4], [7, 9], [4, 15], [8, 11], [15, 6], [2, 6], [3, 15], [4, 16], [7, 19], [10, 7], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  1.9531276226043701

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [122] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 244

Reduced: 
 - size: 103 (45.78%)
 - depth: 13 (28.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09375691413879395

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [19, 13], [14, 7], [2, 5], [4, 15], [11, 0], [3, 18], [1, 9], [6, 17], [19, 13], [4, 2], [10, 8], [0, 7], [7, 19], [4, 2], [9, 13], [11, 0], [7, 1], [12, 4], [6, 17], [2, 5], [8, 0], [11, 3], [14, 19], [7, 1], [12, 16], [19, 13], [2, 17], [3, 4], [7, 1], [12, 2], [11, 3], [10, 8], [7, 1], [11, 3], [18, 15], [2, 5], [8, 12], [16, 13], [0, 7], [6, 17], [14, 19], [9, 13], [0, 7], [2, 5], [19, 9], [8, 11], [18, 15], [0, 7], [13, 5], [18, 15], [8, 12], [2, 17], [0, 7], [15, 6], [16, 9], [8, 11], [2, 17], [10, 14], [7, 1], [6, 5], [14, 0], [12, 2], [1, 9], [6, 5], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [10, 8], [2, 5], [16, 9], [8, 11], [4, 15], [19, 13], [16, 9], [12, 2], [0, 7], [6, 5], [3, 18], [4, 16], [7, 1], [11, 3], [14, 19], [2, 6], [18, 4], [16, 13], [2, 6], [14, 7], [11, 12], [18, 4], [16, 9], [2, 5], [14, 19], [4, 2], [11, 3], [19, 9], [7, 1], [2, 6], [4, 16], [14, 0], [8, 11], [3, 18], [2, 6], [4, 15], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [18, 15], [11, 3], [10, 8], [2, 5], [14, 0], [19, 9], [18, 15], [11, 3], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [9, 13], [8, 0], [19, 16], [18, 15], [19, 16], [14, 0], [3, 4], [9, 13], [2, 6], [7, 1], [4, 15], [8, 11], [14, 0], [13, 5], [12, 2], [19, 16], [15, 6], [0, 12], [13, 5], [2, 6], [3, 15], [4, 16], [11, 0], [7, 19], [10, 14], [1, 9], [2, 17], [7, 1], [16, 9], [11, 0], [8, 12], [19, 13], [2, 5], [19, 16], [14, 7], [2, 5], [8, 0], [14, 7], [16, 9], [18, 4], [5, 17], [19, 16], [10, 8], [12, 4], [11, 0], [2, 17], [0, 19], [13, 5], [4, 16], [2, 17], [11, 3], [10, 8], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [8, 0], [2, 6], [11, 12], [13, 5], [3, 4], [18, 15], [14, 7], [19, 9], [16, 2], [8, 0], [7, 19], [2, 5], [18, 15], [19, 16], [10, 8], [13, 5], [16, 2], [1, 9], [7, 19], [11, 3], [13, 5], [8, 11], [3, 4], [7, 19], [16, 2], [6, 17], [16, 13], [3, 4], [7, 19], [12, 2], [16, 13], [8, 12], [4, 15], [6, 17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[14, 18]
[12, 23]
[21, 28]
[28, 33]
[33, 37]
[35, 38]
[43, 47]
[40, 48]
[39, 51]
[47, 52]
[51, 54]
[41, 55]
[52, 57]
[50, 60]
[56, 61]
[64, 68]
[72, 78]
[78, 82]
[91, 94]
[92, 97]
[90, 100]
[89, 102]
[105, 110]
[117, 123]
[118, 124]
[124, 132]
[135, 137]
[133, 140]
[138, 145]
[137, 148]
[146, 151]
[155, 162]
[165, 168]
[167, 170]
[178, 182]
[175, 184]
[191, 200]
[196, 203]
[206, 211]
[209, 214]
[207, 215]
[213, 218]
[214, 219]
[217, 221]
[216, 224]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[26, 32, 35]
[107, 116, 121]
[123, 131, 136]
[142, 158, 160]
[166, 171, 174]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[73, 84, 88]
[88, 95, 104]
[161, 166, 171]
[170, 188, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[14, 18]
[12, 23]
[21, 28]
[28, 33]
[33, 37]
[35, 38]
[43, 47]
[40, 48]
[39, 51]
[47, 52]
[51, 54]
[41, 55]
[52, 57]
[50, 60]
[56, 61]
[64, 68]
[72, 78]
[78, 82]
[91, 94]
[92, 97]
[90, 100]
[89, 102]
[105, 110]
[117, 123]
[118, 124]
[124, 132]
[135, 137]
[133, 140]
[138, 145]
[137, 148]
[146, 151]
[155, 162]
[165, 168]
[167, 170]
[178, 182]
[175, 184]
[191, 200]
[196, 203]
[206, 211]
[209, 214]
[207, 215]
[213, 218]
[214, 219]
[217, 221]
[216, 224]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.2643983364105225

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 13] cc => I, Pos: [5, 13] cc => I, Pos: [12, 23] cc => I, Pos: [12, 23] cc => I, Pos: [14, 18] cc => I, Pos: [14, 18] cc => I, Pos: [21, 28] cc => I, Pos: [21, 28] cc => I, Pos: [26, 32, 35] ccc => cc, Pos: [28, 33] cc => I, Pos: [28, 33] cc => I, Pos: [33, 37] cc => I, Pos: [33, 37] cc => I, Pos: [35, 38] cc => I, Pos: [35, 38] cc => I, Pos: [39, 51] cc => I, Pos: [39, 51] cc => I, Pos: [40, 48] cc => I, Pos: [40, 48] cc => I, Pos: [41, 55] cc => I, Pos: [41, 55] cc => I, Pos: [43, 47] cc => I, Pos: [43, 47] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [50, 60] cc => I, Pos: [50, 60] cc => I, Pos: [51, 54] cc => I, Pos: [51, 54] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [64, 68] cc => I, Pos: [64, 68] cc => I, Pos: [72, 78] cc => I, Pos: [72, 78] cc => I, Pos: [73, 84, 88] ccc => cc, Pos: [78, 82] cc => I, Pos: [78, 82] cc => I, Pos: [88, 95, 104] ccc => cc, Pos: [89, 102] cc => I, Pos: [89, 102] cc => I, Pos: [90, 100] cc => I, Pos: [90, 100] cc => I, Pos: [91, 94] cc => I, Pos: [91, 94] cc => I, Pos: [92, 97] cc => I, Pos: [92, 97] cc => I, Pos: [105, 110] cc => I, Pos: [105, 110] cc => I, Pos: [107, 116, 121] ccc => cc, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [118, 124] cc => I, Pos: [118, 124] cc => I, Pos: [123, 131, 136] ccc => cc, Pos: [124, 132] cc => I, Pos: [124, 132] cc => I, Pos: [133, 140] cc => I, Pos: [133, 140] cc => I, Pos: [135, 137] cc => I, Pos: [135, 137] cc => I, Pos: [137, 148] cc => I, Pos: [137, 148] cc => I, Pos: [138, 145] cc => I, Pos: [138, 145] cc => I, Pos: [142, 158, 160] ccc => cc, Pos: [146, 151] cc => I, Pos: [146, 151] cc => I, Pos: [155, 162] cc => I, Pos: [155, 162] cc => I, Pos: [161, 166, 171] ccc => cc, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [166, 171, 174] ccc => cc, Pos: [167, 170] cc => I, Pos: [167, 170] cc => I, Pos: [170, 188, 197] ccc => cc, Pos: [175, 184] cc => I, Pos: [175, 184] cc => I, Pos: [178, 182] cc => I, Pos: [178, 182] cc => I, Pos: [191, 200] cc => I, Pos: [191, 200] cc => I, Pos: [196, 203] cc => I, Pos: [196, 203] cc => I, Pos: [206, 211] cc => I, Pos: [206, 211] cc => I, Pos: [207, 215] cc => I, Pos: [207, 215] cc => I, Pos: [209, 214] cc => I, Pos: [209, 214] cc => I, Pos: [213, 218] cc => I, Pos: [213, 218] cc => I, Pos: [214, 219] cc => I, Pos: [214, 219] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [217, 221] cc => I, Pos: [217, 221] cc => I]

--------End Timer [Generate Plans]:  0.10936880111694336

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 13] cc => I,
 Pos: [12, 23] cc => I,
 Pos: [14, 18] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [26, 32, 35] ccc => cc,
 Pos: [33, 37] cc => I,
 Pos: [51, 54] cc => I,
 Pos: [40, 48] cc => I,
 Pos: [41, 55] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [50, 60] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [64, 68] cc => I,
 Pos: [78, 82] cc => I,
 Pos: [88, 95, 104] ccc => cc,
 Pos: [89, 102] cc => I,
 Pos: [90, 100] cc => I,
 Pos: [91, 94] cc => I,
 Pos: [92, 97] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [107, 116, 121] ccc => cc,
 Pos: [117, 123] cc => I,
 Pos: [124, 132] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [135, 137] cc => I,
 Pos: [138, 145] cc => I,
 Pos: [142, 158, 160] ccc => cc,
 Pos: [146, 151] cc => I,
 Pos: [155, 162] cc => I,
 Pos: [161, 166, 171] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [167, 170] cc => I,
 Pos: [175, 184] cc => I,
 Pos: [178, 182] cc => I,
 Pos: [191, 200] cc => I,
 Pos: [196, 203] cc => I,
 Pos: [206, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [214, 219] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [217, 221] cc => I]
Change: 42, Saving: 42

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 13] cc => I
Apply:  Pos: [12, 23] cc => I
Apply:  Pos: [14, 18] cc => I
Apply:  Pos: [21, 28] cc => I
Apply:  Pos: [26, 32, 35] ccc => cc
Apply:  Pos: [33, 37] cc => I
Apply:  Pos: [51, 54] cc => I
Apply:  Pos: [40, 48] cc => I
Apply:  Pos: [41, 55] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [50, 60] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [64, 68] cc => I
Apply:  Pos: [78, 82] cc => I
Apply:  Pos: [88, 95, 104] ccc => cc
Apply:  Pos: [89, 102] cc => I
Apply:  Pos: [90, 100] cc => I
Apply:  Pos: [91, 94] cc => I
Apply:  Pos: [92, 97] cc => I
Apply:  Pos: [105, 110] cc => I
Apply:  Pos: [107, 116, 121] ccc => cc
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [124, 132] cc => I
Apply:  Pos: [133, 140] cc => I
Apply:  Pos: [135, 137] cc => I
Apply:  Pos: [138, 145] cc => I
Apply:  Pos: [142, 158, 160] ccc => cc
Apply:  Pos: [146, 151] cc => I
Apply:  Pos: [155, 162] cc => I
Apply:  Pos: [161, 166, 171] ccc => cc
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [167, 170] cc => I
Apply:  Pos: [175, 184] cc => I
Apply:  Pos: [178, 182] cc => I
Apply:  Pos: [191, 200] cc => I
Apply:  Pos: [196, 203] cc => I
Apply:  Pos: [206, 211] cc => I
Apply:  Pos: [207, 215] cc => I
Apply:  Pos: [214, 219] cc => I
Apply:  Pos: [213, 218] cc => I
Apply:  Pos: [216, 224] cc => I
Apply:  Pos: [217, 221] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [2, 5], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [2, 5], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [12, 2], [10, 8], [11, 3], [18, 15], [16, 13], [0, 7], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [0, 7], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [12, 2], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [10, 8], [2, 5], [8, 11], [4, 15], [19, 13], [12, 2], [0, 7], [6, 5], [3, 18], [4, 16], [14, 7], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [14, 7], [8, 11], [3, 18], [4, 15], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [11, 3], [10, 8], [2, 5], [19, 9], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [8, 0], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [19, 16], [15, 6], [0, 12], [2, 6], [3, 15], [4, 16], [7, 19], [10, 14], [1, 9], [2, 17], [19, 16], [8, 12], [19, 13], [16, 9], [8, 0], [18, 4], [5, 17], [19, 16], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 19], [2, 5], [19, 16], [10, 8], [1, 9], [7, 19], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  4.373767137527466

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 17]
[30, 36]
[25, 42]
[26, 51]
[59, 72]
[54, 73]
[84, 105]
[105, 125]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[61, 63, 70]
[108, 111, 115]
[135, 137, 140]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 109, 112]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 17]
[30, 36]
[25, 42]
[26, 51]
[59, 72]
[54, 73]
[84, 105]
[105, 125]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.5006299018859863

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 17] cc => I, Pos: [6, 17] cc => I, Pos: [25, 42] cc => I, Pos: [25, 42] cc => I, Pos: [26, 51] cc => I, Pos: [26, 51] cc => I, Pos: [30, 36] cc => I, Pos: [30, 36] cc => I, Pos: [54, 73] cc => I, Pos: [54, 73] cc => I, Pos: [59, 72] cc => I, Pos: [59, 72] cc => I, Pos: [61, 63, 70] ccc => cc, Pos: [84, 105] cc => I, Pos: [84, 105] cc => I, Pos: [100, 109, 112] ccc => cc, Pos: [105, 125] cc => I, Pos: [105, 125] cc => I, Pos: [108, 111, 115] ccc => cc, Pos: [135, 137, 140] ccc => cc]

--------End Timer [Generate Plans]:  0.03124690055847168

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 17] cc => I,
 Pos: [25, 42] cc => I,
 Pos: [26, 51] cc => I,
 Pos: [30, 36] cc => I,
 Pos: [54, 73] cc => I,
 Pos: [59, 72] cc => I,
 Pos: [61, 63, 70] ccc => cc,
 Pos: [105, 125] cc => I,
 Pos: [100, 109, 112] ccc => cc,
 Pos: [108, 111, 115] ccc => cc,
 Pos: [135, 137, 140] ccc => cc]
Change: 11, Saving: 11

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 17] cc => I
Apply:  Pos: [25, 42] cc => I
Apply:  Pos: [26, 51] cc => I
Apply:  Pos: [30, 36] cc => I
Apply:  Pos: [54, 73] cc => I
Apply:  Pos: [59, 72] cc => I
Apply:  Pos: [61, 63, 70] ccc => cc
Apply:  Pos: [105, 125] cc => I
Apply:  Pos: [100, 109, 112] ccc => cc
Apply:  Pos: [108, 111, 115] ccc => cc
Apply:  Pos: [135, 137, 140] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [18, 15], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [12, 2], [0, 7], [6, 5], [4, 16], [14, 1], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [11, 3], [10, 8], [2, 5], [19, 9], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [8, 0], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [19, 16], [15, 6], [8, 0], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 2], [4, 15], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.531876802444458

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[77, 87]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[77, 87]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.1085472106933594

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [77, 87] cc => I, Pos: [77, 87] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [77, 87] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [77, 87] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [18, 15], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [12, 2], [0, 7], [6, 5], [4, 16], [14, 1], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [11, 3], [10, 8], [2, 5], [19, 9], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [19, 16], [15, 6], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.1085472106933594

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[79, 83, 85]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.046998977661133

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [79, 83, 85] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [79, 83, 85] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [79, 83, 85] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [18, 15], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [12, 2], [0, 7], [6, 5], [4, 16], [14, 1], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [11, 3], [10, 8], [2, 5], [19, 9], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [18, 15], [3, 4], [12, 2], [7, 9], [4, 15], [8, 11], [2, 6], [19, 16], [15, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 2], [4, 15], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.046998977661133

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[75, 79]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[75, 79]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0156359672546387

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [75, 79] cc => I, Pos: [75, 79] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [75, 79] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [75, 79] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [18, 15], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [12, 2], [0, 7], [6, 5], [4, 16], [14, 1], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [11, 3], [10, 8], [2, 5], [19, 9], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [15, 6], [18, 15], [3, 4], [7, 9], [4, 15], [8, 11], [2, 6], [19, 16], [15, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.0156359672546387

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [123] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 246

Reduced: 
 - size: 102 (45.33%)
 - depth: 13 (28.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374761581420898

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [19, 13], [14, 7], [2, 5], [4, 15], [11, 0], [3, 18], [1, 9], [6, 17], [19, 13], [4, 2], [10, 8], [0, 7], [7, 19], [4, 2], [9, 13], [11, 0], [7, 1], [12, 4], [6, 17], [2, 5], [8, 0], [11, 3], [14, 19], [7, 1], [12, 16], [19, 13], [2, 17], [3, 4], [7, 1], [12, 2], [11, 3], [10, 8], [7, 1], [11, 3], [18, 15], [2, 5], [8, 12], [16, 13], [0, 7], [6, 17], [14, 19], [9, 13], [0, 7], [2, 5], [19, 9], [8, 11], [18, 15], [0, 7], [13, 5], [18, 15], [8, 12], [2, 17], [0, 7], [15, 6], [16, 9], [8, 11], [2, 17], [10, 14], [7, 1], [6, 5], [14, 0], [12, 2], [1, 9], [6, 5], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [10, 8], [2, 5], [16, 9], [8, 11], [4, 15], [19, 13], [16, 9], [12, 2], [0, 7], [6, 5], [3, 18], [4, 16], [7, 1], [11, 3], [14, 19], [2, 6], [18, 4], [16, 13], [2, 6], [14, 7], [11, 12], [18, 4], [16, 9], [2, 5], [14, 19], [4, 2], [11, 3], [19, 9], [7, 1], [2, 6], [4, 16], [14, 0], [8, 11], [3, 18], [2, 6], [4, 15], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [18, 15], [11, 3], [10, 8], [2, 5], [14, 0], [19, 9], [18, 15], [11, 3], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [9, 13], [8, 0], [19, 16], [18, 15], [19, 16], [14, 0], [3, 4], [9, 13], [2, 6], [7, 1], [4, 15], [8, 11], [14, 0], [13, 5], [12, 2], [19, 16], [15, 6], [0, 12], [13, 5], [2, 6], [3, 15], [4, 16], [11, 0], [7, 19], [10, 14], [1, 9], [2, 17], [7, 1], [16, 9], [11, 0], [8, 12], [19, 13], [2, 5], [19, 16], [14, 7], [2, 5], [8, 0], [14, 7], [16, 9], [18, 4], [5, 17], [19, 16], [10, 8], [12, 4], [11, 0], [2, 17], [0, 19], [13, 5], [4, 16], [2, 17], [11, 3], [10, 8], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [8, 0], [2, 6], [11, 12], [13, 5], [3, 4], [18, 15], [14, 7], [19, 9], [16, 2], [8, 0], [7, 19], [2, 5], [18, 15], [19, 16], [10, 8], [13, 5], [16, 2], [1, 9], [7, 19], [11, 3], [13, 5], [8, 11], [3, 4], [7, 19], [16, 2], [6, 17], [16, 13], [3, 4], [7, 19], [12, 2], [16, 13], [8, 12], [4, 15], [6, 17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[14, 18]
[12, 23]
[21, 28]
[28, 33]
[33, 37]
[35, 38]
[43, 47]
[40, 48]
[39, 51]
[47, 52]
[51, 54]
[41, 55]
[52, 57]
[50, 60]
[56, 61]
[64, 68]
[72, 78]
[78, 82]
[91, 94]
[92, 97]
[90, 100]
[89, 102]
[105, 110]
[117, 123]
[118, 124]
[124, 132]
[135, 137]
[133, 140]
[138, 145]
[137, 148]
[146, 151]
[155, 162]
[165, 168]
[167, 170]
[178, 182]
[175, 184]
[191, 200]
[196, 203]
[206, 211]
[209, 214]
[207, 215]
[213, 218]
[214, 219]
[217, 221]
[216, 224]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[26, 32, 35]
[107, 116, 121]
[123, 131, 136]
[142, 158, 160]
[166, 171, 174]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[73, 84, 88]
[88, 95, 104]
[161, 166, 171]
[170, 188, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[14, 18]
[12, 23]
[21, 28]
[28, 33]
[33, 37]
[35, 38]
[43, 47]
[40, 48]
[39, 51]
[47, 52]
[51, 54]
[41, 55]
[52, 57]
[50, 60]
[56, 61]
[64, 68]
[72, 78]
[78, 82]
[91, 94]
[92, 97]
[90, 100]
[89, 102]
[105, 110]
[117, 123]
[118, 124]
[124, 132]
[135, 137]
[133, 140]
[138, 145]
[137, 148]
[146, 151]
[155, 162]
[165, 168]
[167, 170]
[178, 182]
[175, 184]
[191, 200]
[196, 203]
[206, 211]
[209, 214]
[207, 215]
[213, 218]
[214, 219]
[217, 221]
[216, 224]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.21911358833313

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 13] cc => I, Pos: [5, 13] cc => I, Pos: [12, 23] cc => I, Pos: [12, 23] cc => I, Pos: [14, 18] cc => I, Pos: [14, 18] cc => I, Pos: [21, 28] cc => I, Pos: [21, 28] cc => I, Pos: [26, 32, 35] ccc => cc, Pos: [28, 33] cc => I, Pos: [28, 33] cc => I, Pos: [33, 37] cc => I, Pos: [33, 37] cc => I, Pos: [35, 38] cc => I, Pos: [35, 38] cc => I, Pos: [39, 51] cc => I, Pos: [39, 51] cc => I, Pos: [40, 48] cc => I, Pos: [40, 48] cc => I, Pos: [41, 55] cc => I, Pos: [41, 55] cc => I, Pos: [43, 47] cc => I, Pos: [43, 47] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [50, 60] cc => I, Pos: [50, 60] cc => I, Pos: [51, 54] cc => I, Pos: [51, 54] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [64, 68] cc => I, Pos: [64, 68] cc => I, Pos: [72, 78] cc => I, Pos: [72, 78] cc => I, Pos: [73, 84, 88] ccc => cc, Pos: [78, 82] cc => I, Pos: [78, 82] cc => I, Pos: [88, 95, 104] ccc => cc, Pos: [89, 102] cc => I, Pos: [89, 102] cc => I, Pos: [90, 100] cc => I, Pos: [90, 100] cc => I, Pos: [91, 94] cc => I, Pos: [91, 94] cc => I, Pos: [92, 97] cc => I, Pos: [92, 97] cc => I, Pos: [105, 110] cc => I, Pos: [105, 110] cc => I, Pos: [107, 116, 121] ccc => cc, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [118, 124] cc => I, Pos: [118, 124] cc => I, Pos: [123, 131, 136] ccc => cc, Pos: [124, 132] cc => I, Pos: [124, 132] cc => I, Pos: [133, 140] cc => I, Pos: [133, 140] cc => I, Pos: [135, 137] cc => I, Pos: [135, 137] cc => I, Pos: [137, 148] cc => I, Pos: [137, 148] cc => I, Pos: [138, 145] cc => I, Pos: [138, 145] cc => I, Pos: [142, 158, 160] ccc => cc, Pos: [146, 151] cc => I, Pos: [146, 151] cc => I, Pos: [155, 162] cc => I, Pos: [155, 162] cc => I, Pos: [161, 166, 171] ccc => cc, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [166, 171, 174] ccc => cc, Pos: [167, 170] cc => I, Pos: [167, 170] cc => I, Pos: [170, 188, 197] ccc => cc, Pos: [175, 184] cc => I, Pos: [175, 184] cc => I, Pos: [178, 182] cc => I, Pos: [178, 182] cc => I, Pos: [191, 200] cc => I, Pos: [191, 200] cc => I, Pos: [196, 203] cc => I, Pos: [196, 203] cc => I, Pos: [206, 211] cc => I, Pos: [206, 211] cc => I, Pos: [207, 215] cc => I, Pos: [207, 215] cc => I, Pos: [209, 214] cc => I, Pos: [209, 214] cc => I, Pos: [213, 218] cc => I, Pos: [213, 218] cc => I, Pos: [214, 219] cc => I, Pos: [214, 219] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [217, 221] cc => I, Pos: [217, 221] cc => I]

--------End Timer [Generate Plans]:  0.10907220840454102

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 13] cc => I,
 Pos: [12, 23] cc => I,
 Pos: [14, 18] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [35, 38] cc => I,
 Pos: [33, 37] cc => I,
 Pos: [51, 54] cc => I,
 Pos: [40, 48] cc => I,
 Pos: [41, 55] cc => I,
 Pos: [43, 47] cc => I,
 Pos: [50, 60] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [64, 68] cc => I,
 Pos: [78, 82] cc => I,
 Pos: [73, 84, 88] ccc => cc,
 Pos: [89, 102] cc => I,
 Pos: [90, 100] cc => I,
 Pos: [91, 94] cc => I,
 Pos: [92, 97] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [107, 116, 121] ccc => cc,
 Pos: [123, 131, 136] ccc => cc,
 Pos: [124, 132] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [137, 148] cc => I,
 Pos: [138, 145] cc => I,
 Pos: [142, 158, 160] ccc => cc,
 Pos: [146, 151] cc => I,
 Pos: [155, 162] cc => I,
 Pos: [166, 171, 174] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [167, 170] cc => I,
 Pos: [175, 184] cc => I,
 Pos: [178, 182] cc => I,
 Pos: [191, 200] cc => I,
 Pos: [196, 203] cc => I,
 Pos: [206, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [214, 219] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [217, 221] cc => I]
Change: 43, Saving: 43

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 13] cc => I
Apply:  Pos: [12, 23] cc => I
Apply:  Pos: [14, 18] cc => I
Apply:  Pos: [21, 28] cc => I
Apply:  Pos: [35, 38] cc => I
Apply:  Pos: [33, 37] cc => I
Apply:  Pos: [51, 54] cc => I
Apply:  Pos: [40, 48] cc => I
Apply:  Pos: [41, 55] cc => I
Apply:  Pos: [43, 47] cc => I
Apply:  Pos: [50, 60] cc => I
Apply:  Pos: [52, 57] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [64, 68] cc => I
Apply:  Pos: [78, 82] cc => I
Apply:  Pos: [73, 84, 88] ccc => cc
Apply:  Pos: [89, 102] cc => I
Apply:  Pos: [90, 100] cc => I
Apply:  Pos: [91, 94] cc => I
Apply:  Pos: [92, 97] cc => I
Apply:  Pos: [105, 110] cc => I
Apply:  Pos: [107, 116, 121] ccc => cc
Apply:  Pos: [123, 131, 136] ccc => cc
Apply:  Pos: [124, 132] cc => I
Apply:  Pos: [133, 140] cc => I
Apply:  Pos: [137, 148] cc => I
Apply:  Pos: [138, 145] cc => I
Apply:  Pos: [142, 158, 160] ccc => cc
Apply:  Pos: [146, 151] cc => I
Apply:  Pos: [155, 162] cc => I
Apply:  Pos: [166, 171, 174] ccc => cc
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [167, 170] cc => I
Apply:  Pos: [175, 184] cc => I
Apply:  Pos: [178, 182] cc => I
Apply:  Pos: [191, 200] cc => I
Apply:  Pos: [196, 203] cc => I
Apply:  Pos: [206, 211] cc => I
Apply:  Pos: [207, 215] cc => I
Apply:  Pos: [214, 219] cc => I
Apply:  Pos: [213, 218] cc => I
Apply:  Pos: [216, 224] cc => I
Apply:  Pos: [217, 221] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [2, 5], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [2, 5], [8, 0], [11, 3], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [12, 2], [10, 8], [18, 15], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [12, 2], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [0, 7], [11, 12], [18, 4], [10, 8], [2, 5], [8, 11], [4, 15], [19, 13], [12, 2], [7, 1], [6, 5], [3, 18], [4, 16], [16, 13], [14, 7], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [7, 1], [4, 16], [14, 7], [8, 11], [3, 18], [4, 15], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [18, 15], [11, 3], [10, 8], [2, 5], [19, 9], [18, 6], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [8, 0], [19, 16], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [15, 6], [0, 12], [2, 6], [3, 15], [4, 16], [7, 19], [10, 14], [1, 9], [2, 17], [16, 9], [8, 12], [19, 13], [19, 9], [8, 0], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 19], [2, 5], [19, 16], [10, 8], [1, 9], [7, 19], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  4.328185796737671

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 17]
[25, 39]
[26, 48]
[56, 69]
[51, 70]
[83, 103]
[103, 123]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[59, 65, 67]
[133, 135, 138]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[54, 59, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[98, 107, 110]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 17]
[25, 39]
[26, 48]
[56, 69]
[51, 70]
[83, 103]
[103, 123]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4218170642852783

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 17] cc => I, Pos: [6, 17] cc => I, Pos: [25, 39] cc => I, Pos: [25, 39] cc => I, Pos: [26, 48] cc => I, Pos: [26, 48] cc => I, Pos: [51, 70] cc => I, Pos: [51, 70] cc => I, Pos: [54, 59, 65] ccc => cc, Pos: [56, 69] cc => I, Pos: [56, 69] cc => I, Pos: [59, 65, 67] ccc => cc, Pos: [83, 103] cc => I, Pos: [83, 103] cc => I, Pos: [98, 107, 110] ccc => cc, Pos: [103, 123] cc => I, Pos: [103, 123] cc => I, Pos: [133, 135, 138] ccc => cc]

--------End Timer [Generate Plans]:  0.031247854232788086

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 17] cc => I,
 Pos: [25, 39] cc => I,
 Pos: [26, 48] cc => I,
 Pos: [51, 70] cc => I,
 Pos: [59, 65, 67] ccc => cc,
 Pos: [56, 69] cc => I,
 Pos: [103, 123] cc => I,
 Pos: [98, 107, 110] ccc => cc,
 Pos: [133, 135, 138] ccc => cc]
Change: 9, Saving: 9

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 17] cc => I
Apply:  Pos: [25, 39] cc => I
Apply:  Pos: [26, 48] cc => I
Apply:  Pos: [51, 70] cc => I
Apply:  Pos: [59, 65, 67] ccc => cc
Apply:  Pos: [56, 69] cc => I
Apply:  Pos: [103, 123] cc => I
Apply:  Pos: [98, 107, 110] ccc => cc
Apply:  Pos: [133, 135, 138] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 3], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [18, 15], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [12, 2], [7, 1], [6, 5], [4, 16], [16, 13], [14, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [7, 1], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [18, 15], [11, 3], [10, 8], [2, 5], [19, 9], [18, 6], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [8, 0], [19, 16], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [15, 6], [8, 0], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [16, 9], [0, 12], [19, 9], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 2], [4, 15], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.4530649185180664

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[78, 87]
[94, 97]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[78, 87]
[94, 97]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.078167676925659

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [78, 87] cc => I, Pos: [78, 87] cc => I, Pos: [94, 97] cc => I, Pos: [94, 97] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [78, 87] cc => I, Pos: [94, 97] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [78, 87] cc => I
Apply:  Pos: [94, 97] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 3], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [18, 15], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [12, 2], [7, 1], [6, 5], [4, 16], [16, 13], [14, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [7, 1], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [18, 15], [11, 3], [10, 8], [2, 5], [19, 9], [18, 6], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [19, 16], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [15, 6], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [0, 12], [19, 13], [19, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.078167676925659

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[80, 84, 85]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9999516010284424

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [80, 84, 85] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [80, 84, 85] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [80, 84, 85] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 3], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [18, 15], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [12, 2], [7, 1], [6, 5], [4, 16], [16, 13], [14, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [7, 1], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [18, 15], [11, 3], [10, 8], [2, 5], [19, 9], [18, 6], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [19, 16], [3, 4], [12, 2], [7, 9], [4, 15], [8, 11], [2, 6], [15, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [0, 12], [19, 9], [19, 13], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 2], [4, 15], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  1.9999516010284424

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[76, 80]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[76, 80]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.968820333480835

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [76, 80] cc => I, Pos: [76, 80] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [76, 80] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [76, 80] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 3], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [18, 15], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [12, 2], [7, 1], [6, 5], [4, 16], [16, 13], [14, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [7, 1], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [18, 15], [11, 3], [10, 8], [2, 5], [19, 9], [18, 6], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [15, 6], [19, 16], [3, 4], [7, 9], [4, 15], [8, 11], [15, 6], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [0, 12], [19, 13], [19, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  1.968820333480835

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [122] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 244

Reduced: 
 - size: 103 (45.78%)
 - depth: 13 (28.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07732176780700684

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [19, 13], [14, 7], [2, 5], [4, 15], [11, 0], [3, 18], [1, 9], [6, 17], [19, 13], [4, 2], [10, 8], [0, 7], [7, 19], [4, 2], [9, 13], [11, 0], [7, 1], [12, 4], [6, 17], [2, 5], [8, 0], [11, 3], [14, 19], [7, 1], [12, 16], [19, 13], [2, 17], [3, 4], [7, 1], [12, 2], [11, 3], [10, 8], [7, 1], [11, 3], [18, 15], [2, 5], [8, 12], [16, 13], [0, 7], [6, 17], [14, 19], [9, 13], [0, 7], [2, 5], [19, 9], [8, 11], [18, 15], [0, 7], [13, 5], [18, 15], [8, 12], [2, 17], [0, 7], [15, 6], [16, 9], [8, 11], [2, 17], [10, 14], [7, 1], [6, 5], [14, 0], [12, 2], [1, 9], [6, 5], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [10, 8], [2, 5], [16, 9], [8, 11], [4, 15], [19, 13], [16, 9], [12, 2], [0, 7], [6, 5], [3, 18], [4, 16], [7, 1], [11, 3], [14, 19], [2, 6], [18, 4], [16, 13], [2, 6], [14, 7], [11, 12], [18, 4], [16, 9], [2, 5], [14, 19], [4, 2], [11, 3], [19, 9], [7, 1], [2, 6], [4, 16], [14, 0], [8, 11], [3, 18], [2, 6], [4, 15], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [18, 15], [11, 3], [10, 8], [2, 5], [14, 0], [19, 9], [18, 15], [11, 3], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [9, 13], [8, 0], [19, 16], [18, 15], [19, 16], [14, 0], [3, 4], [9, 13], [2, 6], [7, 1], [4, 15], [8, 11], [14, 0], [13, 5], [12, 2], [19, 16], [15, 6], [0, 12], [13, 5], [2, 6], [3, 15], [4, 16], [11, 0], [7, 19], [10, 14], [1, 9], [2, 17], [7, 1], [16, 9], [11, 0], [8, 12], [19, 13], [2, 5], [19, 16], [14, 7], [2, 5], [8, 0], [14, 7], [16, 9], [18, 4], [5, 17], [19, 16], [10, 8], [12, 4], [11, 0], [2, 17], [0, 19], [13, 5], [4, 16], [2, 17], [11, 3], [10, 8], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [8, 0], [2, 6], [11, 12], [13, 5], [3, 4], [18, 15], [14, 7], [19, 9], [16, 2], [8, 0], [7, 19], [2, 5], [18, 15], [19, 16], [10, 8], [13, 5], [16, 2], [1, 9], [7, 19], [11, 3], [13, 5], [8, 11], [3, 4], [7, 19], [16, 2], [6, 17], [16, 13], [3, 4], [7, 19], [12, 2], [16, 13], [8, 12], [4, 15], [6, 17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[14, 18]
[12, 23]
[21, 28]
[28, 33]
[33, 37]
[35, 38]
[43, 47]
[40, 48]
[39, 51]
[47, 52]
[51, 54]
[41, 55]
[52, 57]
[50, 60]
[56, 61]
[64, 68]
[72, 78]
[78, 82]
[91, 94]
[92, 97]
[90, 100]
[89, 102]
[105, 110]
[117, 123]
[118, 124]
[124, 132]
[135, 137]
[133, 140]
[138, 145]
[137, 148]
[146, 151]
[155, 162]
[165, 168]
[167, 170]
[178, 182]
[175, 184]
[191, 200]
[196, 203]
[206, 211]
[209, 214]
[207, 215]
[213, 218]
[214, 219]
[217, 221]
[216, 224]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[26, 32, 35]
[107, 116, 121]
[123, 131, 136]
[142, 158, 160]
[166, 171, 174]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[73, 84, 88]
[88, 95, 104]
[161, 166, 171]
[170, 188, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[14, 18]
[12, 23]
[21, 28]
[28, 33]
[33, 37]
[35, 38]
[43, 47]
[40, 48]
[39, 51]
[47, 52]
[51, 54]
[41, 55]
[52, 57]
[50, 60]
[56, 61]
[64, 68]
[72, 78]
[78, 82]
[91, 94]
[92, 97]
[90, 100]
[89, 102]
[105, 110]
[117, 123]
[118, 124]
[124, 132]
[135, 137]
[133, 140]
[138, 145]
[137, 148]
[146, 151]
[155, 162]
[165, 168]
[167, 170]
[178, 182]
[175, 184]
[191, 200]
[196, 203]
[206, 211]
[209, 214]
[207, 215]
[213, 218]
[214, 219]
[217, 221]
[216, 224]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.203052043914795

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 13] cc => I, Pos: [5, 13] cc => I, Pos: [12, 23] cc => I, Pos: [12, 23] cc => I, Pos: [14, 18] cc => I, Pos: [14, 18] cc => I, Pos: [21, 28] cc => I, Pos: [21, 28] cc => I, Pos: [26, 32, 35] ccc => cc, Pos: [28, 33] cc => I, Pos: [28, 33] cc => I, Pos: [33, 37] cc => I, Pos: [33, 37] cc => I, Pos: [35, 38] cc => I, Pos: [35, 38] cc => I, Pos: [39, 51] cc => I, Pos: [39, 51] cc => I, Pos: [40, 48] cc => I, Pos: [40, 48] cc => I, Pos: [41, 55] cc => I, Pos: [41, 55] cc => I, Pos: [43, 47] cc => I, Pos: [43, 47] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [50, 60] cc => I, Pos: [50, 60] cc => I, Pos: [51, 54] cc => I, Pos: [51, 54] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [64, 68] cc => I, Pos: [64, 68] cc => I, Pos: [72, 78] cc => I, Pos: [72, 78] cc => I, Pos: [73, 84, 88] ccc => cc, Pos: [78, 82] cc => I, Pos: [78, 82] cc => I, Pos: [88, 95, 104] ccc => cc, Pos: [89, 102] cc => I, Pos: [89, 102] cc => I, Pos: [90, 100] cc => I, Pos: [90, 100] cc => I, Pos: [91, 94] cc => I, Pos: [91, 94] cc => I, Pos: [92, 97] cc => I, Pos: [92, 97] cc => I, Pos: [105, 110] cc => I, Pos: [105, 110] cc => I, Pos: [107, 116, 121] ccc => cc, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [118, 124] cc => I, Pos: [118, 124] cc => I, Pos: [123, 131, 136] ccc => cc, Pos: [124, 132] cc => I, Pos: [124, 132] cc => I, Pos: [133, 140] cc => I, Pos: [133, 140] cc => I, Pos: [135, 137] cc => I, Pos: [135, 137] cc => I, Pos: [137, 148] cc => I, Pos: [137, 148] cc => I, Pos: [138, 145] cc => I, Pos: [138, 145] cc => I, Pos: [142, 158, 160] ccc => cc, Pos: [146, 151] cc => I, Pos: [146, 151] cc => I, Pos: [155, 162] cc => I, Pos: [155, 162] cc => I, Pos: [161, 166, 171] ccc => cc, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [166, 171, 174] ccc => cc, Pos: [167, 170] cc => I, Pos: [167, 170] cc => I, Pos: [170, 188, 197] ccc => cc, Pos: [175, 184] cc => I, Pos: [175, 184] cc => I, Pos: [178, 182] cc => I, Pos: [178, 182] cc => I, Pos: [191, 200] cc => I, Pos: [191, 200] cc => I, Pos: [196, 203] cc => I, Pos: [196, 203] cc => I, Pos: [206, 211] cc => I, Pos: [206, 211] cc => I, Pos: [207, 215] cc => I, Pos: [207, 215] cc => I, Pos: [209, 214] cc => I, Pos: [209, 214] cc => I, Pos: [213, 218] cc => I, Pos: [213, 218] cc => I, Pos: [214, 219] cc => I, Pos: [214, 219] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [217, 221] cc => I, Pos: [217, 221] cc => I]

--------End Timer [Generate Plans]:  0.10935378074645996

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 13] cc => I,
 Pos: [12, 23] cc => I,
 Pos: [14, 18] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [26, 32, 35] ccc => cc,
 Pos: [33, 37] cc => I,
 Pos: [51, 54] cc => I,
 Pos: [40, 48] cc => I,
 Pos: [41, 55] cc => I,
 Pos: [43, 47] cc => I,
 Pos: [50, 60] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [64, 68] cc => I,
 Pos: [78, 82] cc => I,
 Pos: [88, 95, 104] ccc => cc,
 Pos: [89, 102] cc => I,
 Pos: [90, 100] cc => I,
 Pos: [91, 94] cc => I,
 Pos: [92, 97] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [107, 116, 121] ccc => cc,
 Pos: [117, 123] cc => I,
 Pos: [118, 124] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [135, 137] cc => I,
 Pos: [138, 145] cc => I,
 Pos: [142, 158, 160] ccc => cc,
 Pos: [146, 151] cc => I,
 Pos: [155, 162] cc => I,
 Pos: [166, 171, 174] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [167, 170] cc => I,
 Pos: [175, 184] cc => I,
 Pos: [178, 182] cc => I,
 Pos: [191, 200] cc => I,
 Pos: [196, 203] cc => I,
 Pos: [206, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [214, 219] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [217, 221] cc => I]
Change: 43, Saving: 43

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 13] cc => I
Apply:  Pos: [12, 23] cc => I
Apply:  Pos: [14, 18] cc => I
Apply:  Pos: [21, 28] cc => I
Apply:  Pos: [26, 32, 35] ccc => cc
Apply:  Pos: [33, 37] cc => I
Apply:  Pos: [51, 54] cc => I
Apply:  Pos: [40, 48] cc => I
Apply:  Pos: [41, 55] cc => I
Apply:  Pos: [43, 47] cc => I
Apply:  Pos: [50, 60] cc => I
Apply:  Pos: [52, 57] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [64, 68] cc => I
Apply:  Pos: [78, 82] cc => I
Apply:  Pos: [88, 95, 104] ccc => cc
Apply:  Pos: [89, 102] cc => I
Apply:  Pos: [90, 100] cc => I
Apply:  Pos: [91, 94] cc => I
Apply:  Pos: [92, 97] cc => I
Apply:  Pos: [105, 110] cc => I
Apply:  Pos: [107, 116, 121] ccc => cc
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [118, 124] cc => I
Apply:  Pos: [133, 140] cc => I
Apply:  Pos: [135, 137] cc => I
Apply:  Pos: [138, 145] cc => I
Apply:  Pos: [142, 158, 160] ccc => cc
Apply:  Pos: [146, 151] cc => I
Apply:  Pos: [155, 162] cc => I
Apply:  Pos: [166, 171, 174] ccc => cc
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [167, 170] cc => I
Apply:  Pos: [175, 184] cc => I
Apply:  Pos: [178, 182] cc => I
Apply:  Pos: [191, 200] cc => I
Apply:  Pos: [196, 203] cc => I
Apply:  Pos: [206, 211] cc => I
Apply:  Pos: [207, 215] cc => I
Apply:  Pos: [214, 219] cc => I
Apply:  Pos: [213, 218] cc => I
Apply:  Pos: [216, 224] cc => I
Apply:  Pos: [217, 221] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [2, 5], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [2, 5], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [12, 2], [10, 8], [11, 3], [18, 15], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [12, 2], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [10, 8], [2, 5], [8, 11], [4, 15], [19, 13], [12, 2], [0, 7], [6, 5], [3, 18], [4, 16], [14, 7], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [14, 7], [8, 11], [3, 18], [4, 15], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [8, 0], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [19, 16], [15, 6], [0, 12], [2, 6], [3, 15], [4, 16], [7, 19], [10, 14], [1, 9], [2, 17], [16, 9], [8, 12], [19, 13], [19, 9], [8, 0], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 19], [2, 5], [19, 16], [10, 8], [1, 9], [7, 19], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  4.312405824661255

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 17]
[25, 40]
[26, 49]
[57, 70]
[52, 71]
[81, 103]
[103, 123]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[59, 61, 68]
[133, 135, 138]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[98, 107, 110]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 17]
[25, 40]
[26, 49]
[57, 70]
[52, 71]
[81, 103]
[103, 123]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4065663814544678

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 17] cc => I, Pos: [6, 17] cc => I, Pos: [25, 40] cc => I, Pos: [25, 40] cc => I, Pos: [26, 49] cc => I, Pos: [26, 49] cc => I, Pos: [52, 71] cc => I, Pos: [52, 71] cc => I, Pos: [57, 70] cc => I, Pos: [57, 70] cc => I, Pos: [59, 61, 68] ccc => cc, Pos: [81, 103] cc => I, Pos: [81, 103] cc => I, Pos: [98, 107, 110] ccc => cc, Pos: [103, 123] cc => I, Pos: [103, 123] cc => I, Pos: [133, 135, 138] ccc => cc]

--------End Timer [Generate Plans]:  0.0311582088470459

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 17] cc => I,
 Pos: [25, 40] cc => I,
 Pos: [26, 49] cc => I,
 Pos: [52, 71] cc => I,
 Pos: [57, 70] cc => I,
 Pos: [59, 61, 68] ccc => cc,
 Pos: [103, 123] cc => I,
 Pos: [98, 107, 110] ccc => cc,
 Pos: [133, 135, 138] ccc => cc]
Change: 9, Saving: 9

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 17] cc => I
Apply:  Pos: [25, 40] cc => I
Apply:  Pos: [26, 49] cc => I
Apply:  Pos: [52, 71] cc => I
Apply:  Pos: [57, 70] cc => I
Apply:  Pos: [59, 61, 68] ccc => cc
Apply:  Pos: [103, 123] cc => I
Apply:  Pos: [98, 107, 110] ccc => cc
Apply:  Pos: [133, 135, 138] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [18, 15], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [12, 2], [0, 7], [6, 5], [4, 16], [14, 1], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [8, 0], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [19, 16], [15, 6], [8, 0], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [16, 9], [0, 12], [19, 9], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 2], [4, 15], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.4377245903015137

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[77, 87]
[94, 97]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[77, 87]
[94, 97]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0936765670776367

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [77, 87] cc => I, Pos: [77, 87] cc => I, Pos: [94, 97] cc => I, Pos: [94, 97] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [77, 87] cc => I, Pos: [94, 97] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [77, 87] cc => I
Apply:  Pos: [94, 97] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [18, 15], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [12, 2], [0, 7], [6, 5], [4, 16], [14, 1], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [19, 16], [15, 6], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [0, 12], [19, 13], [19, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.0936765670776367

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[79, 83, 85]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9999964237213135

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [79, 83, 85] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [79, 83, 85] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [79, 83, 85] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [18, 15], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [12, 2], [0, 7], [6, 5], [4, 16], [14, 1], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [18, 15], [3, 4], [12, 2], [7, 9], [4, 15], [8, 11], [2, 6], [19, 16], [15, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [0, 12], [19, 9], [19, 13], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 2], [4, 15], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  1.9999964237213135

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 79]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 79]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9530928134918213

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [74, 79] cc => I, Pos: [74, 79] cc => I]

--------End Timer [Generate Plans]:  0.01564168930053711

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [74, 79] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [74, 79] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [18, 15], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [12, 2], [0, 7], [6, 5], [4, 16], [14, 1], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [15, 6], [11, 3], [18, 15], [3, 4], [7, 9], [4, 15], [8, 11], [2, 6], [19, 16], [15, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [0, 12], [19, 13], [19, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  1.9687345027923584

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [122] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 244

Reduced: 
 - size: 103 (45.78%)
 - depth: 13 (28.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09288358688354492

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [19, 13], [14, 7], [2, 5], [4, 15], [11, 0], [3, 18], [1, 9], [6, 17], [19, 13], [4, 2], [10, 8], [0, 7], [7, 19], [4, 2], [9, 13], [11, 0], [7, 1], [12, 4], [6, 17], [2, 5], [8, 0], [11, 3], [14, 19], [7, 1], [12, 16], [19, 13], [2, 17], [3, 4], [7, 1], [12, 2], [11, 3], [10, 8], [7, 1], [11, 3], [18, 15], [2, 5], [8, 12], [16, 13], [0, 7], [6, 17], [14, 19], [9, 13], [0, 7], [2, 5], [19, 9], [8, 11], [18, 15], [0, 7], [13, 5], [18, 15], [8, 12], [2, 17], [0, 7], [15, 6], [16, 9], [8, 11], [2, 17], [10, 14], [7, 1], [6, 5], [14, 0], [12, 2], [1, 9], [6, 5], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [10, 8], [2, 5], [16, 9], [8, 11], [4, 15], [19, 13], [16, 9], [12, 2], [0, 7], [6, 5], [3, 18], [4, 16], [7, 1], [11, 3], [14, 19], [2, 6], [18, 4], [16, 13], [2, 6], [14, 7], [11, 12], [18, 4], [16, 9], [2, 5], [14, 19], [4, 2], [11, 3], [19, 9], [7, 1], [2, 6], [4, 16], [14, 0], [8, 11], [3, 18], [2, 6], [4, 15], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [18, 15], [11, 3], [10, 8], [2, 5], [14, 0], [19, 9], [18, 15], [11, 3], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [9, 13], [8, 0], [19, 16], [18, 15], [19, 16], [14, 0], [3, 4], [9, 13], [2, 6], [7, 1], [4, 15], [8, 11], [14, 0], [13, 5], [12, 2], [19, 16], [15, 6], [0, 12], [13, 5], [2, 6], [3, 15], [4, 16], [11, 0], [7, 19], [10, 14], [1, 9], [2, 17], [7, 1], [16, 9], [11, 0], [8, 12], [19, 13], [2, 5], [19, 16], [14, 7], [2, 5], [8, 0], [14, 7], [16, 9], [18, 4], [5, 17], [19, 16], [10, 8], [12, 4], [11, 0], [2, 17], [0, 19], [13, 5], [4, 16], [2, 17], [11, 3], [10, 8], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [8, 0], [2, 6], [11, 12], [13, 5], [3, 4], [18, 15], [14, 7], [19, 9], [16, 2], [8, 0], [7, 19], [2, 5], [18, 15], [19, 16], [10, 8], [13, 5], [16, 2], [1, 9], [7, 19], [11, 3], [13, 5], [8, 11], [3, 4], [7, 19], [16, 2], [6, 17], [16, 13], [3, 4], [7, 19], [12, 2], [16, 13], [8, 12], [4, 15], [6, 17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[14, 18]
[12, 23]
[21, 28]
[28, 33]
[33, 37]
[35, 38]
[43, 47]
[40, 48]
[39, 51]
[47, 52]
[51, 54]
[41, 55]
[52, 57]
[50, 60]
[56, 61]
[64, 68]
[72, 78]
[78, 82]
[91, 94]
[92, 97]
[90, 100]
[89, 102]
[105, 110]
[117, 123]
[118, 124]
[124, 132]
[135, 137]
[133, 140]
[138, 145]
[137, 148]
[146, 151]
[155, 162]
[165, 168]
[167, 170]
[178, 182]
[175, 184]
[191, 200]
[196, 203]
[206, 211]
[209, 214]
[207, 215]
[213, 218]
[214, 219]
[217, 221]
[216, 224]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[26, 32, 35]
[107, 116, 121]
[123, 131, 136]
[142, 158, 160]
[166, 171, 174]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[73, 84, 88]
[88, 95, 104]
[161, 166, 171]
[170, 188, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[14, 18]
[12, 23]
[21, 28]
[28, 33]
[33, 37]
[35, 38]
[43, 47]
[40, 48]
[39, 51]
[47, 52]
[51, 54]
[41, 55]
[52, 57]
[50, 60]
[56, 61]
[64, 68]
[72, 78]
[78, 82]
[91, 94]
[92, 97]
[90, 100]
[89, 102]
[105, 110]
[117, 123]
[118, 124]
[124, 132]
[135, 137]
[133, 140]
[138, 145]
[137, 148]
[146, 151]
[155, 162]
[165, 168]
[167, 170]
[178, 182]
[175, 184]
[191, 200]
[196, 203]
[206, 211]
[209, 214]
[207, 215]
[213, 218]
[214, 219]
[217, 221]
[216, 224]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.218552589416504

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 13] cc => I, Pos: [5, 13] cc => I, Pos: [12, 23] cc => I, Pos: [12, 23] cc => I, Pos: [14, 18] cc => I, Pos: [14, 18] cc => I, Pos: [21, 28] cc => I, Pos: [21, 28] cc => I, Pos: [26, 32, 35] ccc => cc, Pos: [28, 33] cc => I, Pos: [28, 33] cc => I, Pos: [33, 37] cc => I, Pos: [33, 37] cc => I, Pos: [35, 38] cc => I, Pos: [35, 38] cc => I, Pos: [39, 51] cc => I, Pos: [39, 51] cc => I, Pos: [40, 48] cc => I, Pos: [40, 48] cc => I, Pos: [41, 55] cc => I, Pos: [41, 55] cc => I, Pos: [43, 47] cc => I, Pos: [43, 47] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [50, 60] cc => I, Pos: [50, 60] cc => I, Pos: [51, 54] cc => I, Pos: [51, 54] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [64, 68] cc => I, Pos: [64, 68] cc => I, Pos: [72, 78] cc => I, Pos: [72, 78] cc => I, Pos: [73, 84, 88] ccc => cc, Pos: [78, 82] cc => I, Pos: [78, 82] cc => I, Pos: [88, 95, 104] ccc => cc, Pos: [89, 102] cc => I, Pos: [89, 102] cc => I, Pos: [90, 100] cc => I, Pos: [90, 100] cc => I, Pos: [91, 94] cc => I, Pos: [91, 94] cc => I, Pos: [92, 97] cc => I, Pos: [92, 97] cc => I, Pos: [105, 110] cc => I, Pos: [105, 110] cc => I, Pos: [107, 116, 121] ccc => cc, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [118, 124] cc => I, Pos: [118, 124] cc => I, Pos: [123, 131, 136] ccc => cc, Pos: [124, 132] cc => I, Pos: [124, 132] cc => I, Pos: [133, 140] cc => I, Pos: [133, 140] cc => I, Pos: [135, 137] cc => I, Pos: [135, 137] cc => I, Pos: [137, 148] cc => I, Pos: [137, 148] cc => I, Pos: [138, 145] cc => I, Pos: [138, 145] cc => I, Pos: [142, 158, 160] ccc => cc, Pos: [146, 151] cc => I, Pos: [146, 151] cc => I, Pos: [155, 162] cc => I, Pos: [155, 162] cc => I, Pos: [161, 166, 171] ccc => cc, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [166, 171, 174] ccc => cc, Pos: [167, 170] cc => I, Pos: [167, 170] cc => I, Pos: [170, 188, 197] ccc => cc, Pos: [175, 184] cc => I, Pos: [175, 184] cc => I, Pos: [178, 182] cc => I, Pos: [178, 182] cc => I, Pos: [191, 200] cc => I, Pos: [191, 200] cc => I, Pos: [196, 203] cc => I, Pos: [196, 203] cc => I, Pos: [206, 211] cc => I, Pos: [206, 211] cc => I, Pos: [207, 215] cc => I, Pos: [207, 215] cc => I, Pos: [209, 214] cc => I, Pos: [209, 214] cc => I, Pos: [213, 218] cc => I, Pos: [213, 218] cc => I, Pos: [214, 219] cc => I, Pos: [214, 219] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [217, 221] cc => I, Pos: [217, 221] cc => I]

--------End Timer [Generate Plans]:  0.10938525199890137

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 13] cc => I,
 Pos: [12, 23] cc => I,
 Pos: [14, 18] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [35, 38] cc => I,
 Pos: [33, 37] cc => I,
 Pos: [39, 51] cc => I,
 Pos: [40, 48] cc => I,
 Pos: [41, 55] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [50, 60] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [64, 68] cc => I,
 Pos: [78, 82] cc => I,
 Pos: [88, 95, 104] ccc => cc,
 Pos: [89, 102] cc => I,
 Pos: [90, 100] cc => I,
 Pos: [91, 94] cc => I,
 Pos: [92, 97] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [107, 116, 121] ccc => cc,
 Pos: [117, 123] cc => I,
 Pos: [124, 132] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [137, 148] cc => I,
 Pos: [138, 145] cc => I,
 Pos: [142, 158, 160] ccc => cc,
 Pos: [146, 151] cc => I,
 Pos: [155, 162] cc => I,
 Pos: [161, 166, 171] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [167, 170] cc => I,
 Pos: [175, 184] cc => I,
 Pos: [178, 182] cc => I,
 Pos: [191, 200] cc => I,
 Pos: [196, 203] cc => I,
 Pos: [206, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [209, 214] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [217, 221] cc => I]
Change: 42, Saving: 42

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 13] cc => I
Apply:  Pos: [12, 23] cc => I
Apply:  Pos: [14, 18] cc => I
Apply:  Pos: [21, 28] cc => I
Apply:  Pos: [35, 38] cc => I
Apply:  Pos: [33, 37] cc => I
Apply:  Pos: [39, 51] cc => I
Apply:  Pos: [40, 48] cc => I
Apply:  Pos: [41, 55] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [50, 60] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [64, 68] cc => I
Apply:  Pos: [78, 82] cc => I
Apply:  Pos: [88, 95, 104] ccc => cc
Apply:  Pos: [89, 102] cc => I
Apply:  Pos: [90, 100] cc => I
Apply:  Pos: [91, 94] cc => I
Apply:  Pos: [92, 97] cc => I
Apply:  Pos: [105, 110] cc => I
Apply:  Pos: [107, 116, 121] ccc => cc
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [124, 132] cc => I
Apply:  Pos: [133, 140] cc => I
Apply:  Pos: [137, 148] cc => I
Apply:  Pos: [138, 145] cc => I
Apply:  Pos: [142, 158, 160] ccc => cc
Apply:  Pos: [146, 151] cc => I
Apply:  Pos: [155, 162] cc => I
Apply:  Pos: [161, 166, 171] ccc => cc
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [167, 170] cc => I
Apply:  Pos: [175, 184] cc => I
Apply:  Pos: [178, 182] cc => I
Apply:  Pos: [191, 200] cc => I
Apply:  Pos: [196, 203] cc => I
Apply:  Pos: [206, 211] cc => I
Apply:  Pos: [207, 215] cc => I
Apply:  Pos: [209, 214] cc => I
Apply:  Pos: [213, 218] cc => I
Apply:  Pos: [216, 224] cc => I
Apply:  Pos: [217, 221] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [2, 5], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [2, 5], [8, 0], [11, 3], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [12, 2], [10, 8], [16, 13], [0, 7], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [0, 7], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [12, 2], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [10, 8], [2, 5], [8, 11], [4, 15], [19, 13], [12, 2], [0, 7], [6, 5], [3, 18], [4, 16], [14, 7], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [14, 7], [8, 11], [3, 18], [4, 15], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [11, 3], [10, 8], [2, 5], [19, 9], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [8, 0], [19, 16], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [15, 6], [0, 12], [2, 6], [3, 15], [4, 16], [7, 19], [10, 14], [1, 9], [2, 17], [19, 16], [8, 12], [19, 13], [16, 9], [8, 0], [18, 4], [5, 17], [19, 16], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 19], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [7, 19], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  4.327937841415405

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 17]
[28, 35]
[25, 41]
[26, 50]
[58, 71]
[53, 72]
[83, 104]
[104, 124]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[60, 62, 69]
[107, 110, 114]
[134, 136, 141]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[99, 108, 111]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 17]
[28, 35]
[25, 41]
[26, 50]
[58, 71]
[53, 72]
[83, 104]
[104, 124]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4687020778656006

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 17] cc => I, Pos: [6, 17] cc => I, Pos: [25, 41] cc => I, Pos: [25, 41] cc => I, Pos: [26, 50] cc => I, Pos: [26, 50] cc => I, Pos: [28, 35] cc => I, Pos: [28, 35] cc => I, Pos: [53, 72] cc => I, Pos: [53, 72] cc => I, Pos: [58, 71] cc => I, Pos: [58, 71] cc => I, Pos: [60, 62, 69] ccc => cc, Pos: [83, 104] cc => I, Pos: [83, 104] cc => I, Pos: [99, 108, 111] ccc => cc, Pos: [104, 124] cc => I, Pos: [104, 124] cc => I, Pos: [107, 110, 114] ccc => cc, Pos: [134, 136, 141] ccc => cc]

--------End Timer [Generate Plans]:  0.015624761581420898

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 17] cc => I,
 Pos: [25, 41] cc => I,
 Pos: [26, 50] cc => I,
 Pos: [28, 35] cc => I,
 Pos: [53, 72] cc => I,
 Pos: [58, 71] cc => I,
 Pos: [60, 62, 69] ccc => cc,
 Pos: [83, 104] cc => I,
 Pos: [99, 108, 111] ccc => cc,
 Pos: [107, 110, 114] ccc => cc,
 Pos: [134, 136, 141] ccc => cc]
Change: 11, Saving: 11

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 17] cc => I
Apply:  Pos: [25, 41] cc => I
Apply:  Pos: [26, 50] cc => I
Apply:  Pos: [28, 35] cc => I
Apply:  Pos: [53, 72] cc => I
Apply:  Pos: [58, 71] cc => I
Apply:  Pos: [60, 62, 69] ccc => cc
Apply:  Pos: [83, 104] cc => I
Apply:  Pos: [99, 108, 111] ccc => cc
Apply:  Pos: [107, 110, 114] ccc => cc
Apply:  Pos: [134, 136, 141] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 3], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [12, 2], [0, 7], [6, 5], [4, 16], [14, 1], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [11, 3], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [8, 0], [19, 16], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [15, 6], [8, 0], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 2], [4, 15], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.4843268394470215

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[75, 85]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[75, 85]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.063495397567749

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [75, 85] cc => I, Pos: [75, 85] cc => I]

--------End Timer [Generate Plans]:  0.015005111694335938

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [75, 85] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [75, 85] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 3], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [12, 2], [0, 7], [6, 5], [4, 16], [14, 1], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [11, 3], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [19, 16], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [15, 6], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.078500509262085

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[78, 82, 83]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.030907392501831

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [78, 82, 83] ccc => cc]

--------End Timer [Generate Plans]:  0.01561117172241211

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [78, 82, 83] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [78, 82, 83] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 3], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [12, 2], [0, 7], [6, 5], [4, 16], [14, 1], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [11, 3], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [19, 16], [18, 15], [3, 4], [12, 2], [7, 9], [4, 15], [8, 11], [2, 6], [15, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 2], [4, 15], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.046518564224243

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[73, 78]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[73, 78]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9843947887420654

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [73, 78] cc => I, Pos: [73, 78] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [73, 78] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [73, 78] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 3], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [12, 2], [0, 7], [6, 5], [4, 16], [14, 1], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [11, 3], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [15, 6], [19, 16], [18, 15], [3, 4], [7, 9], [4, 15], [8, 11], [15, 6], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  1.9843947887420654

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [122] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 244

Reduced: 
 - size: 103 (45.78%)
 - depth: 13 (28.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.0940558910369873

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [19, 13], [14, 7], [2, 5], [4, 15], [11, 0], [3, 18], [1, 9], [6, 17], [19, 13], [4, 2], [10, 8], [0, 7], [7, 19], [4, 2], [9, 13], [11, 0], [7, 1], [12, 4], [6, 17], [2, 5], [8, 0], [11, 3], [14, 19], [7, 1], [12, 16], [19, 13], [2, 17], [3, 4], [7, 1], [12, 2], [11, 3], [10, 8], [7, 1], [11, 3], [18, 15], [2, 5], [8, 12], [16, 13], [0, 7], [6, 17], [14, 19], [9, 13], [0, 7], [2, 5], [19, 9], [8, 11], [18, 15], [0, 7], [13, 5], [18, 15], [8, 12], [2, 17], [0, 7], [15, 6], [16, 9], [8, 11], [2, 17], [10, 14], [7, 1], [6, 5], [14, 0], [12, 2], [1, 9], [6, 5], [0, 19], [3, 18], [12, 16], [16, 9], [7, 1], [11, 12], [18, 4], [10, 8], [2, 5], [16, 9], [8, 11], [4, 15], [19, 13], [16, 9], [12, 2], [0, 7], [6, 5], [3, 18], [4, 16], [7, 1], [11, 3], [14, 19], [2, 6], [18, 4], [16, 13], [2, 6], [14, 7], [11, 12], [18, 4], [16, 9], [2, 5], [14, 19], [4, 2], [11, 3], [19, 9], [7, 1], [2, 6], [4, 16], [14, 0], [8, 11], [3, 18], [2, 6], [4, 15], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [18, 15], [11, 3], [10, 8], [2, 5], [14, 0], [19, 9], [18, 15], [11, 3], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [9, 13], [8, 0], [19, 16], [18, 15], [19, 16], [14, 0], [3, 4], [9, 13], [2, 6], [7, 1], [4, 15], [8, 11], [14, 0], [13, 5], [12, 2], [19, 16], [15, 6], [0, 12], [13, 5], [2, 6], [3, 15], [4, 16], [11, 0], [7, 19], [10, 14], [1, 9], [2, 17], [7, 1], [16, 9], [11, 0], [8, 12], [19, 13], [2, 5], [19, 16], [14, 7], [2, 5], [8, 0], [14, 7], [16, 9], [18, 4], [5, 17], [19, 16], [10, 8], [12, 4], [11, 0], [2, 17], [0, 19], [13, 5], [4, 16], [2, 17], [11, 3], [10, 8], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [8, 0], [2, 6], [11, 12], [13, 5], [3, 4], [18, 15], [14, 7], [19, 9], [16, 2], [8, 0], [7, 19], [2, 5], [18, 15], [19, 16], [10, 8], [13, 5], [16, 2], [1, 9], [7, 19], [11, 3], [13, 5], [8, 11], [3, 4], [7, 19], [16, 2], [6, 17], [16, 13], [3, 4], [7, 19], [12, 2], [16, 13], [8, 12], [4, 15], [6, 17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[14, 18]
[12, 23]
[21, 28]
[28, 33]
[33, 37]
[35, 38]
[43, 47]
[40, 48]
[39, 51]
[47, 52]
[51, 54]
[41, 55]
[52, 57]
[50, 60]
[56, 61]
[64, 68]
[72, 78]
[78, 82]
[91, 94]
[92, 97]
[90, 100]
[89, 102]
[105, 110]
[117, 123]
[118, 124]
[124, 132]
[135, 137]
[133, 140]
[138, 145]
[137, 148]
[146, 151]
[155, 162]
[165, 168]
[167, 170]
[178, 182]
[175, 184]
[191, 200]
[196, 203]
[206, 211]
[209, 214]
[207, 215]
[213, 218]
[214, 219]
[217, 221]
[216, 224]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[26, 32, 35]
[107, 116, 121]
[123, 131, 136]
[142, 158, 160]
[166, 171, 174]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[73, 84, 88]
[88, 95, 104]
[161, 166, 171]
[170, 188, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[14, 18]
[12, 23]
[21, 28]
[28, 33]
[33, 37]
[35, 38]
[43, 47]
[40, 48]
[39, 51]
[47, 52]
[51, 54]
[41, 55]
[52, 57]
[50, 60]
[56, 61]
[64, 68]
[72, 78]
[78, 82]
[91, 94]
[92, 97]
[90, 100]
[89, 102]
[105, 110]
[117, 123]
[118, 124]
[124, 132]
[135, 137]
[133, 140]
[138, 145]
[137, 148]
[146, 151]
[155, 162]
[165, 168]
[167, 170]
[178, 182]
[175, 184]
[191, 200]
[196, 203]
[206, 211]
[209, 214]
[207, 215]
[213, 218]
[214, 219]
[217, 221]
[216, 224]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.187602996826172

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 13] cc => I, Pos: [5, 13] cc => I, Pos: [12, 23] cc => I, Pos: [12, 23] cc => I, Pos: [14, 18] cc => I, Pos: [14, 18] cc => I, Pos: [21, 28] cc => I, Pos: [21, 28] cc => I, Pos: [26, 32, 35] ccc => cc, Pos: [28, 33] cc => I, Pos: [28, 33] cc => I, Pos: [33, 37] cc => I, Pos: [33, 37] cc => I, Pos: [35, 38] cc => I, Pos: [35, 38] cc => I, Pos: [39, 51] cc => I, Pos: [39, 51] cc => I, Pos: [40, 48] cc => I, Pos: [40, 48] cc => I, Pos: [41, 55] cc => I, Pos: [41, 55] cc => I, Pos: [43, 47] cc => I, Pos: [43, 47] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [50, 60] cc => I, Pos: [50, 60] cc => I, Pos: [51, 54] cc => I, Pos: [51, 54] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [64, 68] cc => I, Pos: [64, 68] cc => I, Pos: [72, 78] cc => I, Pos: [72, 78] cc => I, Pos: [73, 84, 88] ccc => cc, Pos: [78, 82] cc => I, Pos: [78, 82] cc => I, Pos: [88, 95, 104] ccc => cc, Pos: [89, 102] cc => I, Pos: [89, 102] cc => I, Pos: [90, 100] cc => I, Pos: [90, 100] cc => I, Pos: [91, 94] cc => I, Pos: [91, 94] cc => I, Pos: [92, 97] cc => I, Pos: [92, 97] cc => I, Pos: [105, 110] cc => I, Pos: [105, 110] cc => I, Pos: [107, 116, 121] ccc => cc, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [118, 124] cc => I, Pos: [118, 124] cc => I, Pos: [123, 131, 136] ccc => cc, Pos: [124, 132] cc => I, Pos: [124, 132] cc => I, Pos: [133, 140] cc => I, Pos: [133, 140] cc => I, Pos: [135, 137] cc => I, Pos: [135, 137] cc => I, Pos: [137, 148] cc => I, Pos: [137, 148] cc => I, Pos: [138, 145] cc => I, Pos: [138, 145] cc => I, Pos: [142, 158, 160] ccc => cc, Pos: [146, 151] cc => I, Pos: [146, 151] cc => I, Pos: [155, 162] cc => I, Pos: [155, 162] cc => I, Pos: [161, 166, 171] ccc => cc, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [166, 171, 174] ccc => cc, Pos: [167, 170] cc => I, Pos: [167, 170] cc => I, Pos: [170, 188, 197] ccc => cc, Pos: [175, 184] cc => I, Pos: [175, 184] cc => I, Pos: [178, 182] cc => I, Pos: [178, 182] cc => I, Pos: [191, 200] cc => I, Pos: [191, 200] cc => I, Pos: [196, 203] cc => I, Pos: [196, 203] cc => I, Pos: [206, 211] cc => I, Pos: [206, 211] cc => I, Pos: [207, 215] cc => I, Pos: [207, 215] cc => I, Pos: [209, 214] cc => I, Pos: [209, 214] cc => I, Pos: [213, 218] cc => I, Pos: [213, 218] cc => I, Pos: [214, 219] cc => I, Pos: [214, 219] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [217, 221] cc => I, Pos: [217, 221] cc => I]

Plan: 1
[Pos: [5, 13] cc => I,
 Pos: [12, 23] cc => I,
 Pos: [14, 18] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [26, 32, 35] ccc => cc,
 Pos: [33, 37] cc => I,
 Pos: [39, 51] cc => I,
 Pos: [40, 48] cc => I,
 Pos: [41, 55] cc => I,
 Pos: [43, 47] cc => I,
 Pos: [50, 60] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [64, 68] cc => I,
 Pos: [72, 78] cc => I,
 Pos: [73, 84, 88] ccc => cc,
 Pos: [89, 102] cc => I,
 Pos: [90, 100] cc => I,
 Pos: [91, 94] cc => I,
 Pos: [92, 97] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [107, 116, 121] ccc => cc,
 Pos: [117, 123] cc => I,
 Pos: [118, 124] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [135, 137] cc => I,
 Pos: [138, 145] cc => I,
 Pos: [142, 158, 160] ccc => cc,
 Pos: [146, 151] cc => I,
 Pos: [155, 162] cc => I,
 Pos: [161, 166, 171] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [167, 170] cc => I,
 Pos: [175, 184] cc => I,
 Pos: [178, 182] cc => I,
 Pos: [191, 200] cc => I,
 Pos: [196, 203] cc => I,
 Pos: [206, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [209, 214] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [217, 221] cc => I]
Change: 43, Saving: 43

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.10927128791809082

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 13] cc => I,
 Pos: [12, 23] cc => I,
 Pos: [14, 18] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [26, 32, 35] ccc => cc,
 Pos: [33, 37] cc => I,
 Pos: [39, 51] cc => I,
 Pos: [40, 48] cc => I,
 Pos: [41, 55] cc => I,
 Pos: [43, 47] cc => I,
 Pos: [50, 60] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [64, 68] cc => I,
 Pos: [72, 78] cc => I,
 Pos: [73, 84, 88] ccc => cc,
 Pos: [89, 102] cc => I,
 Pos: [90, 100] cc => I,
 Pos: [91, 94] cc => I,
 Pos: [92, 97] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [107, 116, 121] ccc => cc,
 Pos: [117, 123] cc => I,
 Pos: [118, 124] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [135, 137] cc => I,
 Pos: [138, 145] cc => I,
 Pos: [142, 158, 160] ccc => cc,
 Pos: [146, 151] cc => I,
 Pos: [155, 162] cc => I,
 Pos: [161, 166, 171] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [167, 170] cc => I,
 Pos: [175, 184] cc => I,
 Pos: [178, 182] cc => I,
 Pos: [191, 200] cc => I,
 Pos: [196, 203] cc => I,
 Pos: [206, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [209, 214] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [217, 221] cc => I]
Change: 43, Saving: 43

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 13] cc => I
Apply:  Pos: [12, 23] cc => I
Apply:  Pos: [14, 18] cc => I
Apply:  Pos: [21, 28] cc => I
Apply:  Pos: [26, 32, 35] ccc => cc
Apply:  Pos: [33, 37] cc => I
Apply:  Pos: [39, 51] cc => I
Apply:  Pos: [40, 48] cc => I
Apply:  Pos: [41, 55] cc => I
Apply:  Pos: [43, 47] cc => I
Apply:  Pos: [50, 60] cc => I
Apply:  Pos: [52, 57] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [64, 68] cc => I
Apply:  Pos: [72, 78] cc => I
Apply:  Pos: [73, 84, 88] ccc => cc
Apply:  Pos: [89, 102] cc => I
Apply:  Pos: [90, 100] cc => I
Apply:  Pos: [91, 94] cc => I
Apply:  Pos: [92, 97] cc => I
Apply:  Pos: [105, 110] cc => I
Apply:  Pos: [107, 116, 121] ccc => cc
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [118, 124] cc => I
Apply:  Pos: [133, 140] cc => I
Apply:  Pos: [135, 137] cc => I
Apply:  Pos: [138, 145] cc => I
Apply:  Pos: [142, 158, 160] ccc => cc
Apply:  Pos: [146, 151] cc => I
Apply:  Pos: [155, 162] cc => I
Apply:  Pos: [161, 166, 171] ccc => cc
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [167, 170] cc => I
Apply:  Pos: [175, 184] cc => I
Apply:  Pos: [178, 182] cc => I
Apply:  Pos: [191, 200] cc => I
Apply:  Pos: [196, 203] cc => I
Apply:  Pos: [206, 211] cc => I
Apply:  Pos: [207, 215] cc => I
Apply:  Pos: [209, 214] cc => I
Apply:  Pos: [213, 218] cc => I
Apply:  Pos: [216, 224] cc => I
Apply:  Pos: [217, 221] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [2, 5], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [2, 5], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [12, 2], [10, 8], [11, 3], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [12, 2], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [10, 8], [2, 5], [8, 11], [4, 15], [19, 13], [16, 9], [12, 2], [7, 1], [6, 5], [3, 18], [4, 16], [16, 13], [14, 7], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [7, 1], [4, 16], [14, 7], [8, 11], [3, 18], [4, 15], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [10, 14], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [8, 0], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [19, 16], [15, 6], [0, 12], [2, 6], [3, 15], [4, 16], [7, 19], [10, 14], [1, 9], [2, 17], [19, 16], [8, 12], [19, 13], [16, 9], [8, 0], [18, 4], [5, 17], [19, 16], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 19], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [7, 19], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  4.296874284744263

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 17]
[25, 40]
[26, 48]
[57, 70]
[51, 71]
[81, 103]
[103, 123]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[60, 66, 68]
[106, 109, 113]
[133, 135, 140]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[55, 60, 66]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[98, 107, 110]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 17]
[25, 40]
[26, 48]
[57, 70]
[51, 71]
[81, 103]
[103, 123]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4061355590820312

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 17] cc => I, Pos: [6, 17] cc => I, Pos: [25, 40] cc => I, Pos: [25, 40] cc => I, Pos: [26, 48] cc => I, Pos: [26, 48] cc => I, Pos: [51, 71] cc => I, Pos: [51, 71] cc => I, Pos: [55, 60, 66] ccc => cc, Pos: [57, 70] cc => I, Pos: [57, 70] cc => I, Pos: [60, 66, 68] ccc => cc, Pos: [81, 103] cc => I, Pos: [81, 103] cc => I, Pos: [98, 107, 110] ccc => cc, Pos: [103, 123] cc => I, Pos: [103, 123] cc => I, Pos: [106, 109, 113] ccc => cc, Pos: [133, 135, 140] ccc => cc]

Plan: 1
[Pos: [6, 17] cc => I,
 Pos: [25, 40] cc => I,
 Pos: [26, 48] cc => I,
 Pos: [51, 71] cc => I,
 Pos: [55, 60, 66] ccc => cc,
 Pos: [57, 70] cc => I,
 Pos: [81, 103] cc => I,
 Pos: [98, 107, 110] ccc => cc,
 Pos: [106, 109, 113] ccc => cc,
 Pos: [133, 135, 140] ccc => cc]
Change: 10, Saving: 10

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015608787536621094

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 17] cc => I,
 Pos: [25, 40] cc => I,
 Pos: [26, 48] cc => I,
 Pos: [51, 71] cc => I,
 Pos: [55, 60, 66] ccc => cc,
 Pos: [57, 70] cc => I,
 Pos: [81, 103] cc => I,
 Pos: [98, 107, 110] ccc => cc,
 Pos: [106, 109, 113] ccc => cc,
 Pos: [133, 135, 140] ccc => cc]
Change: 10, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 17] cc => I
Apply:  Pos: [25, 40] cc => I
Apply:  Pos: [26, 48] cc => I
Apply:  Pos: [51, 71] cc => I
Apply:  Pos: [55, 60, 66] ccc => cc
Apply:  Pos: [57, 70] cc => I
Apply:  Pos: [81, 103] cc => I
Apply:  Pos: [98, 107, 110] ccc => cc
Apply:  Pos: [106, 109, 113] ccc => cc
Apply:  Pos: [133, 135, 140] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [14, 7], [6, 5], [4, 16], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [14, 7], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [8, 0], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [19, 16], [15, 6], [8, 0], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 2], [4, 15], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.4217443466186523

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[76, 86]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[48, 52, 59]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[76, 86]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.062422752380371

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 52, 59] ccc => cc, Pos: [76, 86] cc => I, Pos: [76, 86] cc => I]

Plan: 1
[Pos: [48, 52, 59] ccc => cc, Pos: [76, 86] cc => I]
Change: 2, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 52, 59] ccc => cc, Pos: [76, 86] cc => I]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [48, 52, 59] ccc => cc
Apply:  Pos: [76, 86] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [14, 1], [6, 5], [4, 16], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [18, 15], [3, 4], [2, 6], [7, 9], [4, 15], [8, 11], [12, 2], [19, 16], [15, 6], [2, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  2.062422752380371

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 81, 83]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9843645095825195

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [77, 81, 83] ccc => cc]

Plan: 1
[Pos: [77, 81, 83] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [77, 81, 83] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [77, 81, 83] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [14, 1], [6, 5], [4, 16], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [12, 2], [15, 6], [11, 3], [18, 15], [3, 4], [12, 2], [7, 9], [4, 15], [8, 11], [2, 6], [19, 16], [15, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 2], [4, 15], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  1.9843645095825195

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[72, 77]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[72, 77]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.9377527236938477

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [72, 77] cc => I, Pos: [72, 77] cc => I]

Plan: 1
[Pos: [72, 77] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [72, 77] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [72, 77] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 13], [0, 12], [7, 1], [6, 5], [16, 2], [14, 7], [4, 15], [11, 0], [3, 18], [1, 9], [10, 8], [0, 7], [7, 19], [9, 13], [11, 0], [12, 4], [8, 0], [11, 4], [14, 19], [12, 16], [19, 13], [2, 17], [3, 4], [11, 3], [16, 13], [6, 17], [14, 19], [9, 13], [19, 9], [13, 5], [18, 15], [15, 6], [16, 9], [10, 14], [7, 1], [14, 0], [1, 9], [0, 19], [3, 18], [12, 16], [0, 7], [11, 12], [18, 4], [2, 5], [8, 11], [19, 13], [16, 9], [12, 2], [14, 1], [6, 5], [4, 16], [16, 13], [7, 1], [11, 12], [16, 9], [2, 5], [4, 2], [19, 9], [4, 16], [8, 11], [19, 16], [6, 5], [16, 9], [12, 4], [0, 7], [10, 8], [2, 5], [19, 9], [4, 2], [16, 9], [11, 12], [18, 4], [15, 6], [11, 3], [18, 15], [3, 4], [7, 9], [4, 15], [8, 11], [2, 6], [19, 16], [15, 6], [3, 15], [4, 16], [7, 19], [1, 9], [2, 17], [19, 9], [0, 12], [19, 13], [16, 9], [18, 4], [5, 17], [12, 4], [11, 0], [0, 19], [13, 5], [4, 16], [11, 3], [16, 13], [4, 15], [4, 2], [10, 14], [19, 16], [1, 9], [2, 6], [11, 12], [13, 5], [3, 4], [14, 7], [19, 9], [16, 2], [7, 16], [2, 5], [19, 16], [10, 8], [1, 9], [11, 3], [8, 11], [12, 2], [8, 12], [4, 15], ----End Timer [Execute Mapping]:  1.9377527236938477

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [122] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 244

Reduced: 
 - size: 103 (45.78%)
 - depth: 13 (28.89%)

