----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12431573867797852

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [8, 9], [4, 6], [19, 7], [2, 10], [17, 8], [12, 18], [19, 4], [8, 9], [12, 18], [14, 17], [4, 1], [15, 9], [18, 11], [7, 14], [2, 0], [4, 13], [14, 17], [8, 15], [19, 1], [2, 10], [13, 3], [12, 5], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [9, 5], [1, 8], [10, 4], [6, 15], [4, 1], [14, 17], [2, 10], [8, 15], [19, 4], [9, 5], [0, 13], [14, 17], [10, 1], [3, 15], [14, 17], [12, 5], [4, 13], [1, 8], [8, 15], [14, 17], [18, 5], [0, 6], [10, 1], [7, 16], [8, 15], [4, 6], [16, 18], [7, 17], [1, 8], [14, 16], [2, 10], [9, 5], [8, 15], [10, 19], [13, 3], [18, 5], [6, 8], [17, 12], [7, 14], [10, 4], [2, 0], [18, 5], [1, 8], [10, 19], [5, 11], [14, 17], [1, 8], [14, 16], [3, 15], [13, 6], [19, 4], [2, 10], [8, 9], [12, 18], [2, 0], [3, 15], [6, 9], [2, 10], [18, 5], [0, 13], [1, 12], [6, 15], [17, 8], [12, 5], [6, 15], [18, 11], [9, 5], [7, 16], [19, 1], [0, 6], [18, 11], [10, 1], [7, 17], [3, 15], [0, 4], [19, 1], [6, 15], [7, 17], [8, 9], [5, 11], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [19, 1], [17, 8], [5, 11], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 10], [14, 16], [6, 9], [8, 12], [0, 4], [19, 7], [14, 16], [12, 11], [1, 8], [13, 6], [2, 0], [14, 16], [2, 0], [17, 12], [1, 8], [3, 15], [19, 7], [14, 16], [9, 5], [7, 17], [10, 1], [14, 17], [0, 6], [7, 16], [5, 11], [2, 10], [14, 16], [1, 8], [0, 6], [12, 11], [3, 15], [10, 4], [14, 16], [19, 7], [3, 15], [0, 13], [9, 5], [4, 6], [2, 10], [14, 16], [19, 1], [12, 11], [10, 4], [18, 5], [8, 9], [3, 15], [7, 14], [0, 13], [5, 11], [1, 12], [7, 14], [10, 19], [15, 9], [17, 16], [0, 4], [8, 12], [19, 7], [3, 15], [14, 17], [13, 6], [0, 4], [16, 18], [19, 7], [12, 5], [1, 17], [19, 1], [12, 5], [7, 17], [1, 8], [0, 13], [17, 16], [18, 11], [17, 8], [14, 16], [18, 11], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [13, 3], [14, 17], [1, 8], [13, 3], [5, 11], [16, 18], [4, 1], [19, 7], [13, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[8, 24]
[33, 42]
[38, 44]
[44, 47]
[47, 52]
[51, 57]
[68, 74]
[66, 76]
[75, 79]
[73, 87]
[81, 88]
[84, 90]
[94, 97]
[98, 103]
[105, 110]
[108, 118]
[112, 120]
[136, 141]
[141, 146]
[145, 147]
[143, 149]
[140, 151]
[146, 152]
[157, 163]
[150, 165]
[161, 167]
[165, 169]
[167, 174]
[164, 176]
[169, 180]
[170, 182]
[181, 185]
[189, 195]
[191, 197]
[198, 201]
[206, 209]
[216, 219]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 17, 31]
[180, 187, 192]
[182, 194, 204]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 9, 12]
[14, 18, 21]
[57, 61, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[8, 24]
[33, 42]
[38, 44]
[44, 47]
[47, 52]
[51, 57]
[68, 74]
[66, 76]
[75, 79]
[73, 87]
[81, 88]
[84, 90]
[94, 97]
[98, 103]
[105, 110]
[108, 118]
[112, 120]
[136, 141]
[141, 146]
[145, 147]
[143, 149]
[140, 151]
[146, 152]
[157, 163]
[150, 165]
[161, 167]
[165, 169]
[167, 174]
[164, 176]
[169, 180]
[170, 182]
[181, 185]
[189, 195]
[191, 197]
[198, 201]
[206, 209]
[216, 219]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.203027248382568

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 9, 12] ccc => cc, Pos: [8, 24] cc => I, Pos: [8, 24] cc => I, Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [13, 17, 31] ccc => cc, Pos: [14, 18, 21] ccc => cc, Pos: [33, 42] cc => I, Pos: [33, 42] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [44, 47] cc => I, Pos: [44, 47] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [51, 57] cc => I, Pos: [51, 57] cc => I, Pos: [57, 61, 65] ccc => cc, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [73, 87] cc => I, Pos: [73, 87] cc => I, Pos: [75, 79] cc => I, Pos: [75, 79] cc => I, Pos: [81, 88] cc => I, Pos: [81, 88] cc => I, Pos: [84, 90] cc => I, Pos: [84, 90] cc => I, Pos: [94, 97] cc => I, Pos: [94, 97] cc => I, Pos: [98, 103] cc => I, Pos: [98, 103] cc => I, Pos: [105, 110] cc => I, Pos: [105, 110] cc => I, Pos: [108, 118] cc => I, Pos: [108, 118] cc => I, Pos: [112, 120] cc => I, Pos: [112, 120] cc => I, Pos: [136, 141] cc => I, Pos: [136, 141] cc => I, Pos: [140, 151] cc => I, Pos: [140, 151] cc => I, Pos: [141, 146] cc => I, Pos: [141, 146] cc => I, Pos: [143, 149] cc => I, Pos: [143, 149] cc => I, Pos: [145, 147] cc => I, Pos: [145, 147] cc => I, Pos: [146, 152] cc => I, Pos: [146, 152] cc => I, Pos: [150, 165] cc => I, Pos: [150, 165] cc => I, Pos: [157, 163] cc => I, Pos: [157, 163] cc => I, Pos: [161, 167] cc => I, Pos: [161, 167] cc => I, Pos: [164, 176] cc => I, Pos: [164, 176] cc => I, Pos: [165, 169] cc => I, Pos: [165, 169] cc => I, Pos: [167, 174] cc => I, Pos: [167, 174] cc => I, Pos: [169, 180] cc => I, Pos: [169, 180] cc => I, Pos: [170, 182] cc => I, Pos: [170, 182] cc => I, Pos: [180, 187, 192] ccc => cc, Pos: [181, 185] cc => I, Pos: [181, 185] cc => I, Pos: [182, 194, 204] ccc => cc, Pos: [189, 195] cc => I, Pos: [189, 195] cc => I, Pos: [191, 197] cc => I, Pos: [191, 197] cc => I, Pos: [198, 201] cc => I, Pos: [198, 201] cc => I, Pos: [206, 209] cc => I, Pos: [206, 209] cc => I, Pos: [216, 219] cc => I, Pos: [216, 219] cc => I]

Plan: 1
[Pos: [5, 9, 12] ccc => cc,
 Pos: [8, 24] cc => I,
 Pos: [10, 13] cc => I,
 Pos: [14, 18, 21] ccc => cc,
 Pos: [33, 42] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [73, 87] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [81, 88] cc => I,
 Pos: [84, 90] cc => I,
 Pos: [94, 97] cc => I,
 Pos: [98, 103] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [108, 118] cc => I,
 Pos: [112, 120] cc => I,
 Pos: [136, 141] cc => I,
 Pos: [140, 151] cc => I,
 Pos: [143, 149] cc => I,
 Pos: [145, 147] cc => I,
 Pos: [146, 152] cc => I,
 Pos: [150, 165] cc => I,
 Pos: [157, 163] cc => I,
 Pos: [161, 167] cc => I,
 Pos: [164, 176] cc => I,
 Pos: [169, 180] cc => I,
 Pos: [170, 182] cc => I,
 Pos: [181, 185] cc => I,
 Pos: [189, 195] cc => I,
 Pos: [191, 197] cc => I,
 Pos: [198, 201] cc => I,
 Pos: [206, 209] cc => I,
 Pos: [216, 219] cc => I]
Change: 36, Saving: 140

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 9, 12] ccc => cc,
 Pos: [8, 24] cc => I,
 Pos: [10, 13] cc => I,
 Pos: [14, 18, 21] ccc => cc,
 Pos: [33, 42] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [73, 87] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [81, 88] cc => I,
 Pos: [84, 90] cc => I,
 Pos: [94, 97] cc => I,
 Pos: [98, 103] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [108, 118] cc => I,
 Pos: [112, 120] cc => I,
 Pos: [136, 141] cc => I,
 Pos: [140, 151] cc => I,
 Pos: [143, 149] cc => I,
 Pos: [145, 147] cc => I,
 Pos: [146, 152] cc => I,
 Pos: [150, 165] cc => I,
 Pos: [157, 163] cc => I,
 Pos: [161, 167] cc => I,
 Pos: [164, 176] cc => I,
 Pos: [169, 180] cc => I,
 Pos: [170, 182] cc => I,
 Pos: [181, 185] cc => I,
 Pos: [189, 195] cc => I,
 Pos: [191, 197] cc => I,
 Pos: [198, 201] cc => I,
 Pos: [206, 209] cc => I,
 Pos: [216, 219] cc => I]
Change: 36, Saving: 140

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 9, 12] ccc => cc
Apply:  Pos: [8, 24] cc => I
Apply:  Pos: [10, 13] cc => I
Apply:  Pos: [14, 18, 21] ccc => cc
Apply:  Pos: [33, 42] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [51, 57] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [73, 87] cc => I
Apply:  Pos: [75, 79] cc => I
Apply:  Pos: [81, 88] cc => I
Apply:  Pos: [84, 90] cc => I
Apply:  Pos: [94, 97] cc => I
Apply:  Pos: [98, 103] cc => I
Apply:  Pos: [105, 110] cc => I
Apply:  Pos: [108, 118] cc => I
Apply:  Pos: [112, 120] cc => I
Apply:  Pos: [136, 141] cc => I
Apply:  Pos: [140, 151] cc => I
Apply:  Pos: [143, 149] cc => I
Apply:  Pos: [145, 147] cc => I
Apply:  Pos: [146, 152] cc => I
Apply:  Pos: [150, 165] cc => I
Apply:  Pos: [157, 163] cc => I
Apply:  Pos: [161, 167] cc => I
Apply:  Pos: [164, 176] cc => I
Apply:  Pos: [169, 180] cc => I
Apply:  Pos: [170, 182] cc => I
Apply:  Pos: [181, 185] cc => I
Apply:  Pos: [189, 195] cc => I
Apply:  Pos: [191, 197] cc => I
Apply:  Pos: [198, 201] cc => I
Apply:  Pos: [206, 209] cc => I
Apply:  Pos: [216, 219] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [12, 5], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [12, 5], [4, 13], [1, 8], [18, 5], [0, 6], [10, 1], [7, 16], [4, 6], [16, 18], [7, 17], [1, 8], [14, 16], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [7, 14], [10, 4], [5, 11], [14, 17], [14, 16], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [12, 5], [9, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 10], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 5], [7, 17], [10, 1], [14, 17], [7, 16], [5, 11], [2, 10], [1, 8], [10, 4], [19, 7], [9, 5], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [5, 11], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 16], [17, 8], [14, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [14, 17], [1, 8], [5, 11], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  4.203027248382568

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 37]
[96, 110]
[124, 150]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[35, 39, 42]
[99, 108, 112]
[106, 111, 116]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[39, 42, 47]
[48, 55, 58]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 37]
[96, 110]
[124, 150]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6722304821014404

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 37] cc => I, Pos: [20, 37] cc => I, Pos: [35, 39, 42] ccc => cc, Pos: [39, 42, 47] ccc => cc, Pos: [48, 55, 58] ccc => cc, Pos: [96, 110] cc => I, Pos: [96, 110] cc => I, Pos: [99, 108, 112] ccc => cc, Pos: [106, 111, 116] ccc => cc, Pos: [124, 150] cc => I, Pos: [124, 150] cc => I]

Plan: 1
[Pos: [20, 37] cc => I,
 Pos: [35, 39, 42] ccc => cc,
 Pos: [48, 55, 58] ccc => cc,
 Pos: [96, 110] cc => I,
 Pos: [99, 108, 112] ccc => cc,
 Pos: [106, 111, 116] ccc => cc,
 Pos: [124, 150] cc => I]
Change: 7, Saving: 20

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 37] cc => I,
 Pos: [35, 39, 42] ccc => cc,
 Pos: [48, 55, 58] ccc => cc,
 Pos: [96, 110] cc => I,
 Pos: [99, 108, 112] ccc => cc,
 Pos: [106, 111, 116] ccc => cc,
 Pos: [124, 150] cc => I]
Change: 7, Saving: 20

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 37] cc => I
Apply:  Pos: [35, 39, 42] ccc => cc
Apply:  Pos: [48, 55, 58] ccc => cc
Apply:  Pos: [96, 110] cc => I
Apply:  Pos: [99, 108, 112] ccc => cc
Apply:  Pos: [106, 111, 116] ccc => cc
Apply:  Pos: [124, 150] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 8], [3, 15], [4, 13], [1, 8], [18, 5], [0, 6], [7, 16], [4, 6], [16, 18], [7, 17], [1, 8], [7, 14], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [9, 5], [12, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 16], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [14, 17], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.6722304821014404

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 44]
[25, 45]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[131, 132, 139]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 44]
[25, 45]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.437260866165161

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [25, 45] cc => I, Pos: [25, 45] cc => I, Pos: [37, 44] cc => I, Pos: [37, 44] cc => I, Pos: [131, 132, 139] ccc => cc]

Plan: 1
[Pos: [25, 45] cc => I, Pos: [37, 44] cc => I, Pos: [131, 132, 139] ccc => cc]
Change: 3, Saving: 10

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [25, 45] cc => I, Pos: [37, 44] cc => I, Pos: [131, 132, 139] ccc => cc]
Change: 3, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [25, 45] cc => I
Apply:  Pos: [37, 44] cc => I
Apply:  Pos: [131, 132, 139] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 8], [3, 15], [4, 13], [18, 5], [0, 6], [7, 16], [4, 6], [16, 18], [7, 17], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [12, 5], [9, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 17], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.437260866165161

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.343900203704834

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 8], [3, 15], [4, 13], [18, 5], [0, 6], [7, 16], [4, 6], [16, 18], [7, 17], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [9, 5], [12, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 17], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.343900203704834

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [140] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 280

Reduced: 
 - size: 85 (37.78%)
 - cycle: 170 (37.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09372973442077637

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [8, 9], [4, 6], [19, 7], [2, 10], [17, 8], [12, 18], [19, 4], [8, 9], [12, 18], [14, 17], [4, 1], [15, 9], [18, 11], [7, 14], [2, 0], [4, 13], [14, 17], [8, 15], [19, 1], [2, 10], [13, 3], [12, 5], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [9, 5], [1, 8], [10, 4], [6, 15], [4, 1], [14, 17], [2, 10], [8, 15], [19, 4], [9, 5], [0, 13], [14, 17], [10, 1], [3, 15], [14, 17], [12, 5], [4, 13], [1, 8], [8, 15], [14, 17], [18, 5], [0, 6], [10, 1], [7, 16], [8, 15], [4, 6], [16, 18], [7, 17], [1, 8], [14, 16], [2, 10], [9, 5], [8, 15], [10, 19], [13, 3], [18, 5], [6, 8], [17, 12], [7, 14], [10, 4], [2, 0], [18, 5], [1, 8], [10, 19], [5, 11], [14, 17], [1, 8], [14, 16], [3, 15], [13, 6], [19, 4], [2, 10], [8, 9], [12, 18], [2, 0], [3, 15], [6, 9], [2, 10], [18, 5], [0, 13], [1, 12], [6, 15], [17, 8], [12, 5], [6, 15], [18, 11], [9, 5], [7, 16], [19, 1], [0, 6], [18, 11], [10, 1], [7, 17], [3, 15], [0, 4], [19, 1], [6, 15], [7, 17], [8, 9], [5, 11], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [19, 1], [17, 8], [5, 11], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 10], [14, 16], [6, 9], [8, 12], [0, 4], [19, 7], [14, 16], [12, 11], [1, 8], [13, 6], [2, 0], [14, 16], [2, 0], [17, 12], [1, 8], [3, 15], [19, 7], [14, 16], [9, 5], [7, 17], [10, 1], [14, 17], [0, 6], [7, 16], [5, 11], [2, 10], [14, 16], [1, 8], [0, 6], [12, 11], [3, 15], [10, 4], [14, 16], [19, 7], [3, 15], [0, 13], [9, 5], [4, 6], [2, 10], [14, 16], [19, 1], [12, 11], [10, 4], [18, 5], [8, 9], [3, 15], [7, 14], [0, 13], [5, 11], [1, 12], [7, 14], [10, 19], [15, 9], [17, 16], [0, 4], [8, 12], [19, 7], [3, 15], [14, 17], [13, 6], [0, 4], [16, 18], [19, 7], [12, 5], [1, 17], [19, 1], [12, 5], [7, 17], [1, 8], [0, 13], [17, 16], [18, 11], [17, 8], [14, 16], [18, 11], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [13, 3], [14, 17], [1, 8], [13, 3], [5, 11], [16, 18], [4, 1], [19, 7], [13, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[8, 24]
[33, 42]
[38, 44]
[44, 47]
[47, 52]
[51, 57]
[68, 74]
[66, 76]
[75, 79]
[73, 87]
[81, 88]
[84, 90]
[94, 97]
[98, 103]
[105, 110]
[108, 118]
[112, 120]
[136, 141]
[141, 146]
[145, 147]
[143, 149]
[140, 151]
[146, 152]
[157, 163]
[150, 165]
[161, 167]
[165, 169]
[167, 174]
[164, 176]
[169, 180]
[170, 182]
[181, 185]
[189, 195]
[191, 197]
[198, 201]
[206, 209]
[216, 219]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 17, 31]
[180, 187, 192]
[182, 194, 204]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 9, 12]
[14, 18, 21]
[57, 61, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[8, 24]
[33, 42]
[38, 44]
[44, 47]
[47, 52]
[51, 57]
[68, 74]
[66, 76]
[75, 79]
[73, 87]
[81, 88]
[84, 90]
[94, 97]
[98, 103]
[105, 110]
[108, 118]
[112, 120]
[136, 141]
[141, 146]
[145, 147]
[143, 149]
[140, 151]
[146, 152]
[157, 163]
[150, 165]
[161, 167]
[165, 169]
[167, 174]
[164, 176]
[169, 180]
[170, 182]
[181, 185]
[189, 195]
[191, 197]
[198, 201]
[206, 209]
[216, 219]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.14088249206543

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 9, 12] ccc => cc, Pos: [8, 24] cc => I, Pos: [8, 24] cc => I, Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [13, 17, 31] ccc => cc, Pos: [14, 18, 21] ccc => cc, Pos: [33, 42] cc => I, Pos: [33, 42] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [44, 47] cc => I, Pos: [44, 47] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [51, 57] cc => I, Pos: [51, 57] cc => I, Pos: [57, 61, 65] ccc => cc, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [73, 87] cc => I, Pos: [73, 87] cc => I, Pos: [75, 79] cc => I, Pos: [75, 79] cc => I, Pos: [81, 88] cc => I, Pos: [81, 88] cc => I, Pos: [84, 90] cc => I, Pos: [84, 90] cc => I, Pos: [94, 97] cc => I, Pos: [94, 97] cc => I, Pos: [98, 103] cc => I, Pos: [98, 103] cc => I, Pos: [105, 110] cc => I, Pos: [105, 110] cc => I, Pos: [108, 118] cc => I, Pos: [108, 118] cc => I, Pos: [112, 120] cc => I, Pos: [112, 120] cc => I, Pos: [136, 141] cc => I, Pos: [136, 141] cc => I, Pos: [140, 151] cc => I, Pos: [140, 151] cc => I, Pos: [141, 146] cc => I, Pos: [141, 146] cc => I, Pos: [143, 149] cc => I, Pos: [143, 149] cc => I, Pos: [145, 147] cc => I, Pos: [145, 147] cc => I, Pos: [146, 152] cc => I, Pos: [146, 152] cc => I, Pos: [150, 165] cc => I, Pos: [150, 165] cc => I, Pos: [157, 163] cc => I, Pos: [157, 163] cc => I, Pos: [161, 167] cc => I, Pos: [161, 167] cc => I, Pos: [164, 176] cc => I, Pos: [164, 176] cc => I, Pos: [165, 169] cc => I, Pos: [165, 169] cc => I, Pos: [167, 174] cc => I, Pos: [167, 174] cc => I, Pos: [169, 180] cc => I, Pos: [169, 180] cc => I, Pos: [170, 182] cc => I, Pos: [170, 182] cc => I, Pos: [180, 187, 192] ccc => cc, Pos: [181, 185] cc => I, Pos: [181, 185] cc => I, Pos: [182, 194, 204] ccc => cc, Pos: [189, 195] cc => I, Pos: [189, 195] cc => I, Pos: [191, 197] cc => I, Pos: [191, 197] cc => I, Pos: [198, 201] cc => I, Pos: [198, 201] cc => I, Pos: [206, 209] cc => I, Pos: [206, 209] cc => I, Pos: [216, 219] cc => I, Pos: [216, 219] cc => I]

Plan: 1
[Pos: [5, 9, 12] ccc => cc,
 Pos: [8, 24] cc => I,
 Pos: [10, 13] cc => I,
 Pos: [14, 18, 21] ccc => cc,
 Pos: [33, 42] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [73, 87] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [81, 88] cc => I,
 Pos: [84, 90] cc => I,
 Pos: [94, 97] cc => I,
 Pos: [98, 103] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [108, 118] cc => I,
 Pos: [112, 120] cc => I,
 Pos: [136, 141] cc => I,
 Pos: [140, 151] cc => I,
 Pos: [143, 149] cc => I,
 Pos: [145, 147] cc => I,
 Pos: [146, 152] cc => I,
 Pos: [150, 165] cc => I,
 Pos: [157, 163] cc => I,
 Pos: [161, 167] cc => I,
 Pos: [164, 176] cc => I,
 Pos: [169, 180] cc => I,
 Pos: [170, 182] cc => I,
 Pos: [181, 185] cc => I,
 Pos: [189, 195] cc => I,
 Pos: [191, 197] cc => I,
 Pos: [198, 201] cc => I,
 Pos: [206, 209] cc => I,
 Pos: [216, 219] cc => I]
Change: 36, Saving: 36

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.09354710578918457

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 9, 12] ccc => cc,
 Pos: [8, 24] cc => I,
 Pos: [10, 13] cc => I,
 Pos: [14, 18, 21] ccc => cc,
 Pos: [33, 42] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [73, 87] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [81, 88] cc => I,
 Pos: [84, 90] cc => I,
 Pos: [94, 97] cc => I,
 Pos: [98, 103] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [108, 118] cc => I,
 Pos: [112, 120] cc => I,
 Pos: [136, 141] cc => I,
 Pos: [140, 151] cc => I,
 Pos: [143, 149] cc => I,
 Pos: [145, 147] cc => I,
 Pos: [146, 152] cc => I,
 Pos: [150, 165] cc => I,
 Pos: [157, 163] cc => I,
 Pos: [161, 167] cc => I,
 Pos: [164, 176] cc => I,
 Pos: [169, 180] cc => I,
 Pos: [170, 182] cc => I,
 Pos: [181, 185] cc => I,
 Pos: [189, 195] cc => I,
 Pos: [191, 197] cc => I,
 Pos: [198, 201] cc => I,
 Pos: [206, 209] cc => I,
 Pos: [216, 219] cc => I]
Change: 36, Saving: 36

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 9, 12] ccc => cc
Apply:  Pos: [8, 24] cc => I
Apply:  Pos: [10, 13] cc => I
Apply:  Pos: [14, 18, 21] ccc => cc
Apply:  Pos: [33, 42] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [51, 57] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [73, 87] cc => I
Apply:  Pos: [75, 79] cc => I
Apply:  Pos: [81, 88] cc => I
Apply:  Pos: [84, 90] cc => I
Apply:  Pos: [94, 97] cc => I
Apply:  Pos: [98, 103] cc => I
Apply:  Pos: [105, 110] cc => I
Apply:  Pos: [108, 118] cc => I
Apply:  Pos: [112, 120] cc => I
Apply:  Pos: [136, 141] cc => I
Apply:  Pos: [140, 151] cc => I
Apply:  Pos: [143, 149] cc => I
Apply:  Pos: [145, 147] cc => I
Apply:  Pos: [146, 152] cc => I
Apply:  Pos: [150, 165] cc => I
Apply:  Pos: [157, 163] cc => I
Apply:  Pos: [161, 167] cc => I
Apply:  Pos: [164, 176] cc => I
Apply:  Pos: [169, 180] cc => I
Apply:  Pos: [170, 182] cc => I
Apply:  Pos: [181, 185] cc => I
Apply:  Pos: [189, 195] cc => I
Apply:  Pos: [191, 197] cc => I
Apply:  Pos: [198, 201] cc => I
Apply:  Pos: [206, 209] cc => I
Apply:  Pos: [216, 219] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [12, 5], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [12, 5], [4, 13], [1, 8], [18, 5], [0, 6], [10, 1], [7, 16], [4, 6], [16, 18], [7, 17], [1, 8], [14, 16], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [7, 14], [10, 4], [5, 11], [14, 17], [14, 16], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [12, 5], [9, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 10], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 5], [7, 17], [10, 1], [14, 17], [7, 16], [5, 11], [2, 10], [1, 8], [10, 4], [19, 7], [9, 5], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [5, 11], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 16], [17, 8], [14, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [14, 17], [1, 8], [5, 11], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  4.234429597854614

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 37]
[96, 110]
[124, 150]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[35, 39, 42]
[99, 108, 112]
[106, 111, 116]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[39, 42, 47]
[48, 55, 58]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 37]
[96, 110]
[124, 150]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.625145673751831

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 37] cc => I, Pos: [20, 37] cc => I, Pos: [35, 39, 42] ccc => cc, Pos: [39, 42, 47] ccc => cc, Pos: [48, 55, 58] ccc => cc, Pos: [96, 110] cc => I, Pos: [96, 110] cc => I, Pos: [99, 108, 112] ccc => cc, Pos: [106, 111, 116] ccc => cc, Pos: [124, 150] cc => I, Pos: [124, 150] cc => I]

Plan: 1
[Pos: [20, 37] cc => I,
 Pos: [35, 39, 42] ccc => cc,
 Pos: [48, 55, 58] ccc => cc,
 Pos: [96, 110] cc => I,
 Pos: [99, 108, 112] ccc => cc,
 Pos: [106, 111, 116] ccc => cc,
 Pos: [124, 150] cc => I]
Change: 7, Saving: 8

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0155181884765625

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 37] cc => I,
 Pos: [35, 39, 42] ccc => cc,
 Pos: [48, 55, 58] ccc => cc,
 Pos: [96, 110] cc => I,
 Pos: [99, 108, 112] ccc => cc,
 Pos: [106, 111, 116] ccc => cc,
 Pos: [124, 150] cc => I]
Change: 7, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 37] cc => I
Apply:  Pos: [35, 39, 42] ccc => cc
Apply:  Pos: [48, 55, 58] ccc => cc
Apply:  Pos: [96, 110] cc => I
Apply:  Pos: [99, 108, 112] ccc => cc
Apply:  Pos: [106, 111, 116] ccc => cc
Apply:  Pos: [124, 150] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 8], [3, 15], [4, 13], [1, 8], [18, 5], [0, 6], [7, 16], [4, 6], [16, 18], [7, 17], [1, 8], [7, 14], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [9, 5], [12, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 16], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [14, 17], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.6406638622283936

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 44]
[25, 45]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[131, 132, 139]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 44]
[25, 45]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4375898838043213

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [25, 45] cc => I, Pos: [25, 45] cc => I, Pos: [37, 44] cc => I, Pos: [37, 44] cc => I, Pos: [131, 132, 139] ccc => cc]

Plan: 1
[Pos: [25, 45] cc => I, Pos: [37, 44] cc => I, Pos: [131, 132, 139] ccc => cc]
Change: 3, Saving: 3

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015625

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [25, 45] cc => I, Pos: [37, 44] cc => I, Pos: [131, 132, 139] ccc => cc]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [25, 45] cc => I
Apply:  Pos: [37, 44] cc => I
Apply:  Pos: [131, 132, 139] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 8], [3, 15], [4, 13], [18, 5], [0, 6], [7, 16], [4, 6], [16, 18], [7, 17], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [12, 5], [9, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 17], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.4532148838043213

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.2968850135803223

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 8], [3, 15], [4, 13], [18, 5], [0, 6], [7, 16], [4, 6], [16, 18], [7, 17], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [9, 5], [12, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 17], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.2968850135803223

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [140] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 280

Reduced: 
 - size: 85 (37.78%)
 - depth: 11 (24.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07811546325683594

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [8, 9], [4, 6], [19, 7], [2, 10], [17, 8], [12, 18], [19, 4], [8, 9], [12, 18], [14, 17], [4, 1], [15, 9], [18, 11], [7, 14], [2, 0], [4, 13], [14, 17], [8, 15], [19, 1], [2, 10], [13, 3], [12, 5], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [9, 5], [1, 8], [10, 4], [6, 15], [4, 1], [14, 17], [2, 10], [8, 15], [19, 4], [9, 5], [0, 13], [14, 17], [10, 1], [3, 15], [14, 17], [12, 5], [4, 13], [1, 8], [8, 15], [14, 17], [18, 5], [0, 6], [10, 1], [7, 16], [8, 15], [4, 6], [16, 18], [7, 17], [1, 8], [14, 16], [2, 10], [9, 5], [8, 15], [10, 19], [13, 3], [18, 5], [6, 8], [17, 12], [7, 14], [10, 4], [2, 0], [18, 5], [1, 8], [10, 19], [5, 11], [14, 17], [1, 8], [14, 16], [3, 15], [13, 6], [19, 4], [2, 10], [8, 9], [12, 18], [2, 0], [3, 15], [6, 9], [2, 10], [18, 5], [0, 13], [1, 12], [6, 15], [17, 8], [12, 5], [6, 15], [18, 11], [9, 5], [7, 16], [19, 1], [0, 6], [18, 11], [10, 1], [7, 17], [3, 15], [0, 4], [19, 1], [6, 15], [7, 17], [8, 9], [5, 11], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [19, 1], [17, 8], [5, 11], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 10], [14, 16], [6, 9], [8, 12], [0, 4], [19, 7], [14, 16], [12, 11], [1, 8], [13, 6], [2, 0], [14, 16], [2, 0], [17, 12], [1, 8], [3, 15], [19, 7], [14, 16], [9, 5], [7, 17], [10, 1], [14, 17], [0, 6], [7, 16], [5, 11], [2, 10], [14, 16], [1, 8], [0, 6], [12, 11], [3, 15], [10, 4], [14, 16], [19, 7], [3, 15], [0, 13], [9, 5], [4, 6], [2, 10], [14, 16], [19, 1], [12, 11], [10, 4], [18, 5], [8, 9], [3, 15], [7, 14], [0, 13], [5, 11], [1, 12], [7, 14], [10, 19], [15, 9], [17, 16], [0, 4], [8, 12], [19, 7], [3, 15], [14, 17], [13, 6], [0, 4], [16, 18], [19, 7], [12, 5], [1, 17], [19, 1], [12, 5], [7, 17], [1, 8], [0, 13], [17, 16], [18, 11], [17, 8], [14, 16], [18, 11], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [13, 3], [14, 17], [1, 8], [13, 3], [5, 11], [16, 18], [4, 1], [19, 7], [13, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[8, 24]
[33, 42]
[38, 44]
[44, 47]
[47, 52]
[51, 57]
[68, 74]
[66, 76]
[75, 79]
[73, 87]
[81, 88]
[84, 90]
[94, 97]
[98, 103]
[105, 110]
[108, 118]
[112, 120]
[136, 141]
[141, 146]
[145, 147]
[143, 149]
[140, 151]
[146, 152]
[157, 163]
[150, 165]
[161, 167]
[165, 169]
[167, 174]
[164, 176]
[169, 180]
[170, 182]
[181, 185]
[189, 195]
[191, 197]
[198, 201]
[206, 209]
[216, 219]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 17, 31]
[180, 187, 192]
[182, 194, 204]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 9, 12]
[14, 18, 21]
[57, 61, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[8, 24]
[33, 42]
[38, 44]
[44, 47]
[47, 52]
[51, 57]
[68, 74]
[66, 76]
[75, 79]
[73, 87]
[81, 88]
[84, 90]
[94, 97]
[98, 103]
[105, 110]
[108, 118]
[112, 120]
[136, 141]
[141, 146]
[145, 147]
[143, 149]
[140, 151]
[146, 152]
[157, 163]
[150, 165]
[161, 167]
[165, 169]
[167, 174]
[164, 176]
[169, 180]
[170, 182]
[181, 185]
[189, 195]
[191, 197]
[198, 201]
[206, 209]
[216, 219]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.152780532836914

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 9, 12] ccc => cc, Pos: [8, 24] cc => I, Pos: [8, 24] cc => I, Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [13, 17, 31] ccc => cc, Pos: [14, 18, 21] ccc => cc, Pos: [33, 42] cc => I, Pos: [33, 42] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [44, 47] cc => I, Pos: [44, 47] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [51, 57] cc => I, Pos: [51, 57] cc => I, Pos: [57, 61, 65] ccc => cc, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [73, 87] cc => I, Pos: [73, 87] cc => I, Pos: [75, 79] cc => I, Pos: [75, 79] cc => I, Pos: [81, 88] cc => I, Pos: [81, 88] cc => I, Pos: [84, 90] cc => I, Pos: [84, 90] cc => I, Pos: [94, 97] cc => I, Pos: [94, 97] cc => I, Pos: [98, 103] cc => I, Pos: [98, 103] cc => I, Pos: [105, 110] cc => I, Pos: [105, 110] cc => I, Pos: [108, 118] cc => I, Pos: [108, 118] cc => I, Pos: [112, 120] cc => I, Pos: [112, 120] cc => I, Pos: [136, 141] cc => I, Pos: [136, 141] cc => I, Pos: [140, 151] cc => I, Pos: [140, 151] cc => I, Pos: [141, 146] cc => I, Pos: [141, 146] cc => I, Pos: [143, 149] cc => I, Pos: [143, 149] cc => I, Pos: [145, 147] cc => I, Pos: [145, 147] cc => I, Pos: [146, 152] cc => I, Pos: [146, 152] cc => I, Pos: [150, 165] cc => I, Pos: [150, 165] cc => I, Pos: [157, 163] cc => I, Pos: [157, 163] cc => I, Pos: [161, 167] cc => I, Pos: [161, 167] cc => I, Pos: [164, 176] cc => I, Pos: [164, 176] cc => I, Pos: [165, 169] cc => I, Pos: [165, 169] cc => I, Pos: [167, 174] cc => I, Pos: [167, 174] cc => I, Pos: [169, 180] cc => I, Pos: [169, 180] cc => I, Pos: [170, 182] cc => I, Pos: [170, 182] cc => I, Pos: [180, 187, 192] ccc => cc, Pos: [181, 185] cc => I, Pos: [181, 185] cc => I, Pos: [182, 194, 204] ccc => cc, Pos: [189, 195] cc => I, Pos: [189, 195] cc => I, Pos: [191, 197] cc => I, Pos: [191, 197] cc => I, Pos: [198, 201] cc => I, Pos: [198, 201] cc => I, Pos: [206, 209] cc => I, Pos: [206, 209] cc => I, Pos: [216, 219] cc => I, Pos: [216, 219] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 9, 12] ccc => cc,
 Pos: [8, 24] cc => I,
 Pos: [13, 17, 31] ccc => cc,
 Pos: [14, 18, 21] ccc => cc,
 Pos: [33, 42] cc => I,
 Pos: [44, 47] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [73, 87] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [81, 88] cc => I,
 Pos: [84, 90] cc => I,
 Pos: [94, 97] cc => I,
 Pos: [98, 103] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [108, 118] cc => I,
 Pos: [112, 120] cc => I,
 Pos: [141, 146] cc => I,
 Pos: [140, 151] cc => I,
 Pos: [143, 149] cc => I,
 Pos: [145, 147] cc => I,
 Pos: [165, 169] cc => I,
 Pos: [157, 163] cc => I,
 Pos: [161, 167] cc => I,
 Pos: [164, 176] cc => I,
 Pos: [170, 182] cc => I,
 Pos: [180, 187, 192] ccc => cc,
 Pos: [181, 185] cc => I,
 Pos: [189, 195] cc => I,
 Pos: [191, 197] cc => I,
 Pos: [198, 201] cc => I,
 Pos: [206, 209] cc => I,
 Pos: [216, 219] cc => I]
Change: 34, Saving: 128

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 9, 12] ccc => cc
Apply:  Pos: [8, 24] cc => I
Apply:  Pos: [13, 17, 31] ccc => cc
Apply:  Pos: [14, 18, 21] ccc => cc
Apply:  Pos: [33, 42] cc => I
Apply:  Pos: [44, 47] cc => I
Apply:  Pos: [51, 57] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [73, 87] cc => I
Apply:  Pos: [75, 79] cc => I
Apply:  Pos: [81, 88] cc => I
Apply:  Pos: [84, 90] cc => I
Apply:  Pos: [94, 97] cc => I
Apply:  Pos: [98, 103] cc => I
Apply:  Pos: [105, 110] cc => I
Apply:  Pos: [108, 118] cc => I
Apply:  Pos: [112, 120] cc => I
Apply:  Pos: [141, 146] cc => I
Apply:  Pos: [140, 151] cc => I
Apply:  Pos: [143, 149] cc => I
Apply:  Pos: [145, 147] cc => I
Apply:  Pos: [165, 169] cc => I
Apply:  Pos: [157, 163] cc => I
Apply:  Pos: [161, 167] cc => I
Apply:  Pos: [164, 176] cc => I
Apply:  Pos: [170, 182] cc => I
Apply:  Pos: [180, 187, 192] ccc => cc
Apply:  Pos: [181, 185] cc => I
Apply:  Pos: [189, 195] cc => I
Apply:  Pos: [191, 197] cc => I
Apply:  Pos: [198, 201] cc => I
Apply:  Pos: [206, 209] cc => I
Apply:  Pos: [216, 219] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [12, 18], [19, 4], [12, 11], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [12, 5], [17, 8], [10, 1], [19, 4], [13, 6], [7, 14], [1, 8], [10, 4], [6, 15], [4, 1], [14, 17], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [12, 5], [4, 13], [1, 8], [14, 17], [18, 5], [0, 6], [10, 1], [7, 16], [4, 6], [16, 18], [7, 17], [1, 8], [14, 16], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [7, 14], [10, 4], [5, 11], [14, 17], [14, 16], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [12, 5], [9, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 10], [14, 16], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [3, 15], [14, 16], [9, 5], [7, 17], [10, 1], [14, 17], [7, 16], [5, 11], [2, 10], [1, 8], [10, 4], [19, 7], [9, 5], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [3, 9], [5, 11], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 16], [17, 8], [14, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [14, 17], [1, 8], [5, 11], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  4.152780532836914

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[22, 39]
[32, 42]
[103, 111]
[131, 156]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[37, 41, 45]
[102, 114, 118]
[112, 117, 122]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[41, 45, 50]
[51, 58, 61]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[22, 39]
[32, 42]
[103, 111]
[131, 156]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.750178575515747

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [22, 39] cc => I, Pos: [22, 39] cc => I, Pos: [32, 42] cc => I, Pos: [32, 42] cc => I, Pos: [37, 41, 45] ccc => cc, Pos: [41, 45, 50] ccc => cc, Pos: [51, 58, 61] ccc => cc, Pos: [102, 114, 118] ccc => cc, Pos: [103, 111] cc => I, Pos: [103, 111] cc => I, Pos: [112, 117, 122] ccc => cc, Pos: [131, 156] cc => I, Pos: [131, 156] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 39] cc => I,
 Pos: [32, 42] cc => I,
 Pos: [37, 41, 45] ccc => cc,
 Pos: [51, 58, 61] ccc => cc,
 Pos: [102, 114, 118] ccc => cc,
 Pos: [103, 111] cc => I,
 Pos: [112, 117, 122] ccc => cc,
 Pos: [131, 156] cc => I]
Change: 8, Saving: 24

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 39] cc => I
Apply:  Pos: [32, 42] cc => I
Apply:  Pos: [37, 41, 45] ccc => cc
Apply:  Pos: [51, 58, 61] ccc => cc
Apply:  Pos: [102, 114, 118] ccc => cc
Apply:  Pos: [103, 111] cc => I
Apply:  Pos: [112, 117, 122] ccc => cc
Apply:  Pos: [131, 156] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [12, 18], [19, 4], [12, 11], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [7, 14], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 8], [3, 15], [4, 13], [1, 8], [18, 5], [0, 6], [7, 16], [4, 6], [16, 18], [7, 17], [1, 8], [7, 14], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [9, 5], [12, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [3, 15], [9, 11], [7, 17], [10, 1], [14, 17], [7, 16], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [3, 9], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 16], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [14, 17], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.750178575515747

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 45]
[26, 46]
[93, 108]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[135, 136, 143]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 45]
[26, 46]
[93, 108]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.484584331512451

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [26, 46] cc => I, Pos: [26, 46] cc => I, Pos: [38, 45] cc => I, Pos: [38, 45] cc => I, Pos: [93, 108] cc => I, Pos: [93, 108] cc => I, Pos: [135, 136, 143] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [26, 46] cc => I,
 Pos: [38, 45] cc => I,
 Pos: [93, 108] cc => I,
 Pos: [135, 136, 143] ccc => cc]
Change: 4, Saving: 14

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [26, 46] cc => I
Apply:  Pos: [38, 45] cc => I
Apply:  Pos: [93, 108] cc => I
Apply:  Pos: [135, 136, 143] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [12, 18], [19, 4], [12, 11], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 8], [3, 15], [4, 13], [18, 5], [0, 6], [7, 16], [4, 6], [16, 18], [7, 17], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [12, 5], [9, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [3, 15], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [3, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 17], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.484584331512451

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.344165325164795

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [12, 18], [19, 4], [12, 11], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 8], [3, 15], [4, 13], [18, 5], [0, 6], [7, 16], [4, 6], [16, 18], [7, 17], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [9, 5], [12, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [3, 15], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [3, 9], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 17], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.344165325164795

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [142] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 284

Reduced: 
 - size: 83 (36.89%)
 - cycle: 166 (36.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09375619888305664

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [8, 9], [4, 6], [19, 7], [2, 10], [17, 8], [12, 18], [19, 4], [8, 9], [12, 18], [14, 17], [4, 1], [15, 9], [18, 11], [7, 14], [2, 0], [4, 13], [14, 17], [8, 15], [19, 1], [2, 10], [13, 3], [12, 5], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [9, 5], [1, 8], [10, 4], [6, 15], [4, 1], [14, 17], [2, 10], [8, 15], [19, 4], [9, 5], [0, 13], [14, 17], [10, 1], [3, 15], [14, 17], [12, 5], [4, 13], [1, 8], [8, 15], [14, 17], [18, 5], [0, 6], [10, 1], [7, 16], [8, 15], [4, 6], [16, 18], [7, 17], [1, 8], [14, 16], [2, 10], [9, 5], [8, 15], [10, 19], [13, 3], [18, 5], [6, 8], [17, 12], [7, 14], [10, 4], [2, 0], [18, 5], [1, 8], [10, 19], [5, 11], [14, 17], [1, 8], [14, 16], [3, 15], [13, 6], [19, 4], [2, 10], [8, 9], [12, 18], [2, 0], [3, 15], [6, 9], [2, 10], [18, 5], [0, 13], [1, 12], [6, 15], [17, 8], [12, 5], [6, 15], [18, 11], [9, 5], [7, 16], [19, 1], [0, 6], [18, 11], [10, 1], [7, 17], [3, 15], [0, 4], [19, 1], [6, 15], [7, 17], [8, 9], [5, 11], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [19, 1], [17, 8], [5, 11], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 10], [14, 16], [6, 9], [8, 12], [0, 4], [19, 7], [14, 16], [12, 11], [1, 8], [13, 6], [2, 0], [14, 16], [2, 0], [17, 12], [1, 8], [3, 15], [19, 7], [14, 16], [9, 5], [7, 17], [10, 1], [14, 17], [0, 6], [7, 16], [5, 11], [2, 10], [14, 16], [1, 8], [0, 6], [12, 11], [3, 15], [10, 4], [14, 16], [19, 7], [3, 15], [0, 13], [9, 5], [4, 6], [2, 10], [14, 16], [19, 1], [12, 11], [10, 4], [18, 5], [8, 9], [3, 15], [7, 14], [0, 13], [5, 11], [1, 12], [7, 14], [10, 19], [15, 9], [17, 16], [0, 4], [8, 12], [19, 7], [3, 15], [14, 17], [13, 6], [0, 4], [16, 18], [19, 7], [12, 5], [1, 17], [19, 1], [12, 5], [7, 17], [1, 8], [0, 13], [17, 16], [18, 11], [17, 8], [14, 16], [18, 11], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [13, 3], [14, 17], [1, 8], [13, 3], [5, 11], [16, 18], [4, 1], [19, 7], [13, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[8, 24]
[33, 42]
[38, 44]
[44, 47]
[47, 52]
[51, 57]
[68, 74]
[66, 76]
[75, 79]
[73, 87]
[81, 88]
[84, 90]
[94, 97]
[98, 103]
[105, 110]
[108, 118]
[112, 120]
[136, 141]
[141, 146]
[145, 147]
[143, 149]
[140, 151]
[146, 152]
[157, 163]
[150, 165]
[161, 167]
[165, 169]
[167, 174]
[164, 176]
[169, 180]
[170, 182]
[181, 185]
[189, 195]
[191, 197]
[198, 201]
[206, 209]
[216, 219]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 17, 31]
[180, 187, 192]
[182, 194, 204]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 9, 12]
[14, 18, 21]
[57, 61, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[8, 24]
[33, 42]
[38, 44]
[44, 47]
[47, 52]
[51, 57]
[68, 74]
[66, 76]
[75, 79]
[73, 87]
[81, 88]
[84, 90]
[94, 97]
[98, 103]
[105, 110]
[108, 118]
[112, 120]
[136, 141]
[141, 146]
[145, 147]
[143, 149]
[140, 151]
[146, 152]
[157, 163]
[150, 165]
[161, 167]
[165, 169]
[167, 174]
[164, 176]
[169, 180]
[170, 182]
[181, 185]
[189, 195]
[191, 197]
[198, 201]
[206, 209]
[216, 219]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.229721784591675

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 9, 12] ccc => cc, Pos: [8, 24] cc => I, Pos: [8, 24] cc => I, Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [13, 17, 31] ccc => cc, Pos: [14, 18, 21] ccc => cc, Pos: [33, 42] cc => I, Pos: [33, 42] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [44, 47] cc => I, Pos: [44, 47] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [51, 57] cc => I, Pos: [51, 57] cc => I, Pos: [57, 61, 65] ccc => cc, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [73, 87] cc => I, Pos: [73, 87] cc => I, Pos: [75, 79] cc => I, Pos: [75, 79] cc => I, Pos: [81, 88] cc => I, Pos: [81, 88] cc => I, Pos: [84, 90] cc => I, Pos: [84, 90] cc => I, Pos: [94, 97] cc => I, Pos: [94, 97] cc => I, Pos: [98, 103] cc => I, Pos: [98, 103] cc => I, Pos: [105, 110] cc => I, Pos: [105, 110] cc => I, Pos: [108, 118] cc => I, Pos: [108, 118] cc => I, Pos: [112, 120] cc => I, Pos: [112, 120] cc => I, Pos: [136, 141] cc => I, Pos: [136, 141] cc => I, Pos: [140, 151] cc => I, Pos: [140, 151] cc => I, Pos: [141, 146] cc => I, Pos: [141, 146] cc => I, Pos: [143, 149] cc => I, Pos: [143, 149] cc => I, Pos: [145, 147] cc => I, Pos: [145, 147] cc => I, Pos: [146, 152] cc => I, Pos: [146, 152] cc => I, Pos: [150, 165] cc => I, Pos: [150, 165] cc => I, Pos: [157, 163] cc => I, Pos: [157, 163] cc => I, Pos: [161, 167] cc => I, Pos: [161, 167] cc => I, Pos: [164, 176] cc => I, Pos: [164, 176] cc => I, Pos: [165, 169] cc => I, Pos: [165, 169] cc => I, Pos: [167, 174] cc => I, Pos: [167, 174] cc => I, Pos: [169, 180] cc => I, Pos: [169, 180] cc => I, Pos: [170, 182] cc => I, Pos: [170, 182] cc => I, Pos: [180, 187, 192] ccc => cc, Pos: [181, 185] cc => I, Pos: [181, 185] cc => I, Pos: [182, 194, 204] ccc => cc, Pos: [189, 195] cc => I, Pos: [189, 195] cc => I, Pos: [191, 197] cc => I, Pos: [191, 197] cc => I, Pos: [198, 201] cc => I, Pos: [198, 201] cc => I, Pos: [206, 209] cc => I, Pos: [206, 209] cc => I, Pos: [216, 219] cc => I, Pos: [216, 219] cc => I]

--------End Timer [Generate Plans]:  0.09428191184997559

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 9, 12] ccc => cc,
 Pos: [8, 24] cc => I,
 Pos: [10, 13] cc => I,
 Pos: [14, 18, 21] ccc => cc,
 Pos: [33, 42] cc => I,
 Pos: [44, 47] cc => I,
 Pos: [57, 61, 65] ccc => cc,
 Pos: [66, 76] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [73, 87] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [81, 88] cc => I,
 Pos: [84, 90] cc => I,
 Pos: [94, 97] cc => I,
 Pos: [98, 103] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [108, 118] cc => I,
 Pos: [112, 120] cc => I,
 Pos: [136, 141] cc => I,
 Pos: [140, 151] cc => I,
 Pos: [143, 149] cc => I,
 Pos: [145, 147] cc => I,
 Pos: [146, 152] cc => I,
 Pos: [150, 165] cc => I,
 Pos: [157, 163] cc => I,
 Pos: [161, 167] cc => I,
 Pos: [164, 176] cc => I,
 Pos: [169, 180] cc => I,
 Pos: [170, 182] cc => I,
 Pos: [181, 185] cc => I,
 Pos: [189, 195] cc => I,
 Pos: [191, 197] cc => I,
 Pos: [198, 201] cc => I,
 Pos: [206, 209] cc => I,
 Pos: [216, 219] cc => I]
Change: 35, Saving: 35

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 9, 12] ccc => cc
Apply:  Pos: [8, 24] cc => I
Apply:  Pos: [10, 13] cc => I
Apply:  Pos: [14, 18, 21] ccc => cc
Apply:  Pos: [33, 42] cc => I
Apply:  Pos: [44, 47] cc => I
Apply:  Pos: [57, 61, 65] ccc => cc
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [73, 87] cc => I
Apply:  Pos: [75, 79] cc => I
Apply:  Pos: [81, 88] cc => I
Apply:  Pos: [84, 90] cc => I
Apply:  Pos: [94, 97] cc => I
Apply:  Pos: [98, 103] cc => I
Apply:  Pos: [105, 110] cc => I
Apply:  Pos: [108, 118] cc => I
Apply:  Pos: [112, 120] cc => I
Apply:  Pos: [136, 141] cc => I
Apply:  Pos: [140, 151] cc => I
Apply:  Pos: [143, 149] cc => I
Apply:  Pos: [145, 147] cc => I
Apply:  Pos: [146, 152] cc => I
Apply:  Pos: [150, 165] cc => I
Apply:  Pos: [157, 163] cc => I
Apply:  Pos: [161, 167] cc => I
Apply:  Pos: [164, 176] cc => I
Apply:  Pos: [169, 180] cc => I
Apply:  Pos: [170, 182] cc => I
Apply:  Pos: [181, 185] cc => I
Apply:  Pos: [189, 195] cc => I
Apply:  Pos: [191, 197] cc => I
Apply:  Pos: [198, 201] cc => I
Apply:  Pos: [206, 209] cc => I
Apply:  Pos: [216, 219] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [12, 5], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [1, 8], [10, 4], [6, 15], [4, 1], [14, 17], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [12, 5], [4, 13], [1, 8], [8, 15], [14, 17], [18, 5], [0, 6], [10, 1], [7, 16], [1, 8], [4, 6], [16, 18], [7, 17], [8, 15], [14, 16], [2, 10], [9, 5], [13, 3], [6, 8], [17, 12], [7, 14], [10, 4], [5, 11], [14, 17], [14, 16], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [12, 5], [9, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 10], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 5], [7, 17], [10, 1], [14, 17], [7, 16], [5, 11], [2, 10], [1, 8], [10, 4], [19, 7], [9, 5], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [5, 11], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 16], [17, 8], [14, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [14, 17], [1, 8], [5, 11], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  4.32400369644165

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 38]
[31, 42]
[99, 113]
[127, 153]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[102, 111, 115]
[109, 114, 119]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[52, 58, 61]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 38]
[31, 42]
[99, 113]
[127, 153]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.718993663787842

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 38] cc => I, Pos: [20, 38] cc => I, Pos: [31, 42] cc => I, Pos: [31, 42] cc => I, Pos: [52, 58, 61] ccc => cc, Pos: [99, 113] cc => I, Pos: [99, 113] cc => I, Pos: [102, 111, 115] ccc => cc, Pos: [109, 114, 119] ccc => cc, Pos: [127, 153] cc => I, Pos: [127, 153] cc => I]

--------End Timer [Generate Plans]:  0.0156252384185791

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 38] cc => I,
 Pos: [31, 42] cc => I,
 Pos: [52, 58, 61] ccc => cc,
 Pos: [99, 113] cc => I,
 Pos: [102, 111, 115] ccc => cc,
 Pos: [109, 114, 119] ccc => cc,
 Pos: [127, 153] cc => I]
Change: 7, Saving: 7

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 38] cc => I
Apply:  Pos: [31, 42] cc => I
Apply:  Pos: [52, 58, 61] ccc => cc
Apply:  Pos: [99, 113] cc => I
Apply:  Pos: [102, 111, 115] ccc => cc
Apply:  Pos: [109, 114, 119] ccc => cc
Apply:  Pos: [127, 153] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [4, 13], [1, 8], [8, 15], [18, 5], [0, 6], [10, 1], [7, 16], [1, 8], [4, 6], [16, 18], [7, 17], [8, 15], [7, 14], [2, 10], [9, 5], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [9, 5], [12, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 16], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [14, 17], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.734618902206421

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[25, 48]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[133, 134, 141]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[25, 48]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4848623275756836

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [25, 48] cc => I, Pos: [25, 48] cc => I, Pos: [133, 134, 141] ccc => cc]

--------End Timer [Generate Plans]:  0.015624523162841797

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [25, 48] cc => I, Pos: [133, 134, 141] ccc => cc]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [25, 48] cc => I
Apply:  Pos: [133, 134, 141] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [4, 13], [1, 8], [8, 15], [18, 5], [0, 6], [10, 1], [7, 16], [1, 8], [4, 6], [16, 18], [7, 17], [8, 15], [2, 10], [9, 5], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [12, 5], [9, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 17], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.5004868507385254

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4064042568206787

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [4, 13], [1, 8], [8, 15], [18, 5], [0, 6], [10, 1], [7, 16], [1, 8], [4, 6], [16, 18], [7, 17], [8, 15], [2, 10], [9, 5], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [9, 5], [12, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 17], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.4064042568206787

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [144] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 288

Reduced: 
 - size: 81 (36.00%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10938143730163574

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [8, 9], [4, 6], [19, 7], [2, 10], [17, 8], [12, 18], [19, 4], [8, 9], [12, 18], [14, 17], [4, 1], [15, 9], [18, 11], [7, 14], [2, 0], [4, 13], [14, 17], [8, 15], [19, 1], [2, 10], [13, 3], [12, 5], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [9, 5], [1, 8], [10, 4], [6, 15], [4, 1], [14, 17], [2, 10], [8, 15], [19, 4], [9, 5], [0, 13], [14, 17], [10, 1], [3, 15], [14, 17], [12, 5], [4, 13], [1, 8], [8, 15], [14, 17], [18, 5], [0, 6], [10, 1], [7, 16], [8, 15], [4, 6], [16, 18], [7, 17], [1, 8], [14, 16], [2, 10], [9, 5], [8, 15], [10, 19], [13, 3], [18, 5], [6, 8], [17, 12], [7, 14], [10, 4], [2, 0], [18, 5], [1, 8], [10, 19], [5, 11], [14, 17], [1, 8], [14, 16], [3, 15], [13, 6], [19, 4], [2, 10], [8, 9], [12, 18], [2, 0], [3, 15], [6, 9], [2, 10], [18, 5], [0, 13], [1, 12], [6, 15], [17, 8], [12, 5], [6, 15], [18, 11], [9, 5], [7, 16], [19, 1], [0, 6], [18, 11], [10, 1], [7, 17], [3, 15], [0, 4], [19, 1], [6, 15], [7, 17], [8, 9], [5, 11], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [19, 1], [17, 8], [5, 11], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 10], [14, 16], [6, 9], [8, 12], [0, 4], [19, 7], [14, 16], [12, 11], [1, 8], [13, 6], [2, 0], [14, 16], [2, 0], [17, 12], [1, 8], [3, 15], [19, 7], [14, 16], [9, 5], [7, 17], [10, 1], [14, 17], [0, 6], [7, 16], [5, 11], [2, 10], [14, 16], [1, 8], [0, 6], [12, 11], [3, 15], [10, 4], [14, 16], [19, 7], [3, 15], [0, 13], [9, 5], [4, 6], [2, 10], [14, 16], [19, 1], [12, 11], [10, 4], [18, 5], [8, 9], [3, 15], [7, 14], [0, 13], [5, 11], [1, 12], [7, 14], [10, 19], [15, 9], [17, 16], [0, 4], [8, 12], [19, 7], [3, 15], [14, 17], [13, 6], [0, 4], [16, 18], [19, 7], [12, 5], [1, 17], [19, 1], [12, 5], [7, 17], [1, 8], [0, 13], [17, 16], [18, 11], [17, 8], [14, 16], [18, 11], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [13, 3], [14, 17], [1, 8], [13, 3], [5, 11], [16, 18], [4, 1], [19, 7], [13, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[8, 24]
[33, 42]
[38, 44]
[44, 47]
[47, 52]
[51, 57]
[68, 74]
[66, 76]
[75, 79]
[73, 87]
[81, 88]
[84, 90]
[94, 97]
[98, 103]
[105, 110]
[108, 118]
[112, 120]
[136, 141]
[141, 146]
[145, 147]
[143, 149]
[140, 151]
[146, 152]
[157, 163]
[150, 165]
[161, 167]
[165, 169]
[167, 174]
[164, 176]
[169, 180]
[170, 182]
[181, 185]
[189, 195]
[191, 197]
[198, 201]
[206, 209]
[216, 219]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 17, 31]
[180, 187, 192]
[182, 194, 204]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 9, 12]
[14, 18, 21]
[57, 61, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[8, 24]
[33, 42]
[38, 44]
[44, 47]
[47, 52]
[51, 57]
[68, 74]
[66, 76]
[75, 79]
[73, 87]
[81, 88]
[84, 90]
[94, 97]
[98, 103]
[105, 110]
[108, 118]
[112, 120]
[136, 141]
[141, 146]
[145, 147]
[143, 149]
[140, 151]
[146, 152]
[157, 163]
[150, 165]
[161, 167]
[165, 169]
[167, 174]
[164, 176]
[169, 180]
[170, 182]
[181, 185]
[189, 195]
[191, 197]
[198, 201]
[206, 209]
[216, 219]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.203119993209839

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 9, 12] ccc => cc, Pos: [8, 24] cc => I, Pos: [8, 24] cc => I, Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [13, 17, 31] ccc => cc, Pos: [14, 18, 21] ccc => cc, Pos: [33, 42] cc => I, Pos: [33, 42] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [44, 47] cc => I, Pos: [44, 47] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [51, 57] cc => I, Pos: [51, 57] cc => I, Pos: [57, 61, 65] ccc => cc, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [73, 87] cc => I, Pos: [73, 87] cc => I, Pos: [75, 79] cc => I, Pos: [75, 79] cc => I, Pos: [81, 88] cc => I, Pos: [81, 88] cc => I, Pos: [84, 90] cc => I, Pos: [84, 90] cc => I, Pos: [94, 97] cc => I, Pos: [94, 97] cc => I, Pos: [98, 103] cc => I, Pos: [98, 103] cc => I, Pos: [105, 110] cc => I, Pos: [105, 110] cc => I, Pos: [108, 118] cc => I, Pos: [108, 118] cc => I, Pos: [112, 120] cc => I, Pos: [112, 120] cc => I, Pos: [136, 141] cc => I, Pos: [136, 141] cc => I, Pos: [140, 151] cc => I, Pos: [140, 151] cc => I, Pos: [141, 146] cc => I, Pos: [141, 146] cc => I, Pos: [143, 149] cc => I, Pos: [143, 149] cc => I, Pos: [145, 147] cc => I, Pos: [145, 147] cc => I, Pos: [146, 152] cc => I, Pos: [146, 152] cc => I, Pos: [150, 165] cc => I, Pos: [150, 165] cc => I, Pos: [157, 163] cc => I, Pos: [157, 163] cc => I, Pos: [161, 167] cc => I, Pos: [161, 167] cc => I, Pos: [164, 176] cc => I, Pos: [164, 176] cc => I, Pos: [165, 169] cc => I, Pos: [165, 169] cc => I, Pos: [167, 174] cc => I, Pos: [167, 174] cc => I, Pos: [169, 180] cc => I, Pos: [169, 180] cc => I, Pos: [170, 182] cc => I, Pos: [170, 182] cc => I, Pos: [180, 187, 192] ccc => cc, Pos: [181, 185] cc => I, Pos: [181, 185] cc => I, Pos: [182, 194, 204] ccc => cc, Pos: [189, 195] cc => I, Pos: [189, 195] cc => I, Pos: [191, 197] cc => I, Pos: [191, 197] cc => I, Pos: [198, 201] cc => I, Pos: [198, 201] cc => I, Pos: [206, 209] cc => I, Pos: [206, 209] cc => I, Pos: [216, 219] cc => I, Pos: [216, 219] cc => I]

--------End Timer [Generate Plans]:  0.09374332427978516

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 9, 12] ccc => cc,
 Pos: [8, 24] cc => I,
 Pos: [10, 13] cc => I,
 Pos: [14, 18, 21] ccc => cc,
 Pos: [33, 42] cc => I,
 Pos: [44, 47] cc => I,
 Pos: [57, 61, 65] ccc => cc,
 Pos: [66, 76] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [73, 87] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [81, 88] cc => I,
 Pos: [84, 90] cc => I,
 Pos: [94, 97] cc => I,
 Pos: [98, 103] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [108, 118] cc => I,
 Pos: [112, 120] cc => I,
 Pos: [141, 146] cc => I,
 Pos: [140, 151] cc => I,
 Pos: [143, 149] cc => I,
 Pos: [145, 147] cc => I,
 Pos: [150, 165] cc => I,
 Pos: [157, 163] cc => I,
 Pos: [167, 174] cc => I,
 Pos: [164, 176] cc => I,
 Pos: [169, 180] cc => I,
 Pos: [182, 194, 204] ccc => cc,
 Pos: [181, 185] cc => I,
 Pos: [189, 195] cc => I,
 Pos: [191, 197] cc => I,
 Pos: [198, 201] cc => I,
 Pos: [206, 209] cc => I,
 Pos: [216, 219] cc => I]
Change: 34, Saving: 34

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 9, 12] ccc => cc
Apply:  Pos: [8, 24] cc => I
Apply:  Pos: [10, 13] cc => I
Apply:  Pos: [14, 18, 21] ccc => cc
Apply:  Pos: [33, 42] cc => I
Apply:  Pos: [44, 47] cc => I
Apply:  Pos: [57, 61, 65] ccc => cc
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [73, 87] cc => I
Apply:  Pos: [75, 79] cc => I
Apply:  Pos: [81, 88] cc => I
Apply:  Pos: [84, 90] cc => I
Apply:  Pos: [94, 97] cc => I
Apply:  Pos: [98, 103] cc => I
Apply:  Pos: [105, 110] cc => I
Apply:  Pos: [108, 118] cc => I
Apply:  Pos: [112, 120] cc => I
Apply:  Pos: [141, 146] cc => I
Apply:  Pos: [140, 151] cc => I
Apply:  Pos: [143, 149] cc => I
Apply:  Pos: [145, 147] cc => I
Apply:  Pos: [150, 165] cc => I
Apply:  Pos: [157, 163] cc => I
Apply:  Pos: [167, 174] cc => I
Apply:  Pos: [164, 176] cc => I
Apply:  Pos: [169, 180] cc => I
Apply:  Pos: [182, 194, 204] ccc => cc
Apply:  Pos: [181, 185] cc => I
Apply:  Pos: [189, 195] cc => I
Apply:  Pos: [191, 197] cc => I
Apply:  Pos: [198, 201] cc => I
Apply:  Pos: [206, 209] cc => I
Apply:  Pos: [216, 219] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [12, 5], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [1, 8], [10, 4], [6, 15], [4, 1], [14, 17], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [12, 5], [4, 13], [1, 8], [8, 15], [14, 17], [18, 5], [0, 6], [10, 1], [7, 16], [1, 8], [4, 6], [16, 18], [7, 17], [8, 15], [14, 16], [2, 10], [9, 5], [13, 3], [6, 8], [17, 12], [7, 14], [10, 4], [5, 11], [14, 17], [14, 16], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [12, 5], [9, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 10], [14, 16], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [14, 16], [9, 5], [7, 17], [10, 1], [14, 17], [7, 16], [5, 11], [2, 10], [14, 16], [1, 8], [10, 4], [19, 7], [0, 13], [9, 5], [4, 6], [2, 10], [19, 1], [10, 4], [18, 5], [8, 9], [0, 6], [5, 11], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [17, 16], [17, 8], [14, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [14, 17], [1, 8], [5, 11], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  4.296863317489624

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 38]
[31, 42]
[103, 110]
[131, 156]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[102, 113, 117]
[111, 116, 123]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[52, 58, 61]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 38]
[31, 42]
[103, 110]
[131, 156]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7812533378601074

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 38] cc => I, Pos: [20, 38] cc => I, Pos: [31, 42] cc => I, Pos: [31, 42] cc => I, Pos: [52, 58, 61] ccc => cc, Pos: [102, 113, 117] ccc => cc, Pos: [103, 110] cc => I, Pos: [103, 110] cc => I, Pos: [111, 116, 123] ccc => cc, Pos: [131, 156] cc => I, Pos: [131, 156] cc => I]

--------End Timer [Generate Plans]:  0.015625715255737305

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 38] cc => I,
 Pos: [31, 42] cc => I,
 Pos: [52, 58, 61] ccc => cc,
 Pos: [102, 113, 117] ccc => cc,
 Pos: [103, 110] cc => I,
 Pos: [111, 116, 123] ccc => cc,
 Pos: [131, 156] cc => I]
Change: 7, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 38] cc => I
Apply:  Pos: [31, 42] cc => I
Apply:  Pos: [52, 58, 61] ccc => cc
Apply:  Pos: [102, 113, 117] ccc => cc
Apply:  Pos: [103, 110] cc => I
Apply:  Pos: [111, 116, 123] ccc => cc
Apply:  Pos: [131, 156] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [4, 13], [1, 8], [8, 15], [18, 5], [0, 6], [10, 1], [7, 16], [1, 8], [4, 6], [16, 18], [7, 17], [8, 15], [7, 14], [2, 10], [9, 5], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [9, 5], [12, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 11], [7, 17], [10, 1], [14, 17], [7, 16], [5, 11], [14, 16], [1, 8], [10, 4], [19, 7], [0, 13], [4, 6], [2, 10], [19, 1], [10, 4], [18, 5], [8, 9], [0, 6], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [17, 8], [14, 16], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [14, 17], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.7968790531158447

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[25, 48]
[94, 108]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[136, 137, 144]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[25, 48]
[94, 108]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.5625181198120117

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [25, 48] cc => I, Pos: [25, 48] cc => I, Pos: [94, 108] cc => I, Pos: [94, 108] cc => I, Pos: [136, 137, 144] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [25, 48] cc => I, Pos: [94, 108] cc => I, Pos: [136, 137, 144] ccc => cc]
Change: 3, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [25, 48] cc => I
Apply:  Pos: [94, 108] cc => I
Apply:  Pos: [136, 137, 144] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [4, 13], [1, 8], [8, 15], [18, 5], [0, 6], [10, 1], [7, 16], [1, 8], [4, 6], [16, 18], [7, 17], [8, 15], [2, 10], [9, 5], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [12, 5], [9, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [14, 16], [1, 8], [10, 4], [19, 7], [0, 13], [4, 6], [2, 10], [19, 1], [10, 4], [18, 5], [8, 9], [0, 6], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [17, 8], [1, 8], [14, 17], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.5625181198120117

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.437509059906006

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [4, 13], [1, 8], [8, 15], [18, 5], [0, 6], [10, 1], [7, 16], [1, 8], [4, 6], [16, 18], [7, 17], [8, 15], [2, 10], [9, 5], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [9, 5], [12, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [14, 16], [1, 8], [10, 4], [19, 7], [0, 13], [4, 6], [2, 10], [19, 1], [10, 4], [18, 5], [8, 9], [0, 6], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [17, 8], [14, 17], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.437509059906006

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [145] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 290

Reduced: 
 - size: 80 (35.56%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07813835144042969

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [8, 9], [4, 6], [19, 7], [2, 10], [17, 8], [12, 18], [19, 4], [8, 9], [12, 18], [14, 17], [4, 1], [15, 9], [18, 11], [7, 14], [2, 0], [4, 13], [14, 17], [8, 15], [19, 1], [2, 10], [13, 3], [12, 5], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [9, 5], [1, 8], [10, 4], [6, 15], [4, 1], [14, 17], [2, 10], [8, 15], [19, 4], [9, 5], [0, 13], [14, 17], [10, 1], [3, 15], [14, 17], [12, 5], [4, 13], [1, 8], [8, 15], [14, 17], [18, 5], [0, 6], [10, 1], [7, 16], [8, 15], [4, 6], [16, 18], [7, 17], [1, 8], [14, 16], [2, 10], [9, 5], [8, 15], [10, 19], [13, 3], [18, 5], [6, 8], [17, 12], [7, 14], [10, 4], [2, 0], [18, 5], [1, 8], [10, 19], [5, 11], [14, 17], [1, 8], [14, 16], [3, 15], [13, 6], [19, 4], [2, 10], [8, 9], [12, 18], [2, 0], [3, 15], [6, 9], [2, 10], [18, 5], [0, 13], [1, 12], [6, 15], [17, 8], [12, 5], [6, 15], [18, 11], [9, 5], [7, 16], [19, 1], [0, 6], [18, 11], [10, 1], [7, 17], [3, 15], [0, 4], [19, 1], [6, 15], [7, 17], [8, 9], [5, 11], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [19, 1], [17, 8], [5, 11], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 10], [14, 16], [6, 9], [8, 12], [0, 4], [19, 7], [14, 16], [12, 11], [1, 8], [13, 6], [2, 0], [14, 16], [2, 0], [17, 12], [1, 8], [3, 15], [19, 7], [14, 16], [9, 5], [7, 17], [10, 1], [14, 17], [0, 6], [7, 16], [5, 11], [2, 10], [14, 16], [1, 8], [0, 6], [12, 11], [3, 15], [10, 4], [14, 16], [19, 7], [3, 15], [0, 13], [9, 5], [4, 6], [2, 10], [14, 16], [19, 1], [12, 11], [10, 4], [18, 5], [8, 9], [3, 15], [7, 14], [0, 13], [5, 11], [1, 12], [7, 14], [10, 19], [15, 9], [17, 16], [0, 4], [8, 12], [19, 7], [3, 15], [14, 17], [13, 6], [0, 4], [16, 18], [19, 7], [12, 5], [1, 17], [19, 1], [12, 5], [7, 17], [1, 8], [0, 13], [17, 16], [18, 11], [17, 8], [14, 16], [18, 11], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [13, 3], [14, 17], [1, 8], [13, 3], [5, 11], [16, 18], [4, 1], [19, 7], [13, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[8, 24]
[33, 42]
[38, 44]
[44, 47]
[47, 52]
[51, 57]
[68, 74]
[66, 76]
[75, 79]
[73, 87]
[81, 88]
[84, 90]
[94, 97]
[98, 103]
[105, 110]
[108, 118]
[112, 120]
[136, 141]
[141, 146]
[145, 147]
[143, 149]
[140, 151]
[146, 152]
[157, 163]
[150, 165]
[161, 167]
[165, 169]
[167, 174]
[164, 176]
[169, 180]
[170, 182]
[181, 185]
[189, 195]
[191, 197]
[198, 201]
[206, 209]
[216, 219]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 17, 31]
[180, 187, 192]
[182, 194, 204]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 9, 12]
[14, 18, 21]
[57, 61, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[8, 24]
[33, 42]
[38, 44]
[44, 47]
[47, 52]
[51, 57]
[68, 74]
[66, 76]
[75, 79]
[73, 87]
[81, 88]
[84, 90]
[94, 97]
[98, 103]
[105, 110]
[108, 118]
[112, 120]
[136, 141]
[141, 146]
[145, 147]
[143, 149]
[140, 151]
[146, 152]
[157, 163]
[150, 165]
[161, 167]
[165, 169]
[167, 174]
[164, 176]
[169, 180]
[170, 182]
[181, 185]
[189, 195]
[191, 197]
[198, 201]
[206, 209]
[216, 219]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.203095436096191

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 9, 12] ccc => cc, Pos: [8, 24] cc => I, Pos: [8, 24] cc => I, Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [13, 17, 31] ccc => cc, Pos: [14, 18, 21] ccc => cc, Pos: [33, 42] cc => I, Pos: [33, 42] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [44, 47] cc => I, Pos: [44, 47] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [51, 57] cc => I, Pos: [51, 57] cc => I, Pos: [57, 61, 65] ccc => cc, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [73, 87] cc => I, Pos: [73, 87] cc => I, Pos: [75, 79] cc => I, Pos: [75, 79] cc => I, Pos: [81, 88] cc => I, Pos: [81, 88] cc => I, Pos: [84, 90] cc => I, Pos: [84, 90] cc => I, Pos: [94, 97] cc => I, Pos: [94, 97] cc => I, Pos: [98, 103] cc => I, Pos: [98, 103] cc => I, Pos: [105, 110] cc => I, Pos: [105, 110] cc => I, Pos: [108, 118] cc => I, Pos: [108, 118] cc => I, Pos: [112, 120] cc => I, Pos: [112, 120] cc => I, Pos: [136, 141] cc => I, Pos: [136, 141] cc => I, Pos: [140, 151] cc => I, Pos: [140, 151] cc => I, Pos: [141, 146] cc => I, Pos: [141, 146] cc => I, Pos: [143, 149] cc => I, Pos: [143, 149] cc => I, Pos: [145, 147] cc => I, Pos: [145, 147] cc => I, Pos: [146, 152] cc => I, Pos: [146, 152] cc => I, Pos: [150, 165] cc => I, Pos: [150, 165] cc => I, Pos: [157, 163] cc => I, Pos: [157, 163] cc => I, Pos: [161, 167] cc => I, Pos: [161, 167] cc => I, Pos: [164, 176] cc => I, Pos: [164, 176] cc => I, Pos: [165, 169] cc => I, Pos: [165, 169] cc => I, Pos: [167, 174] cc => I, Pos: [167, 174] cc => I, Pos: [169, 180] cc => I, Pos: [169, 180] cc => I, Pos: [170, 182] cc => I, Pos: [170, 182] cc => I, Pos: [180, 187, 192] ccc => cc, Pos: [181, 185] cc => I, Pos: [181, 185] cc => I, Pos: [182, 194, 204] ccc => cc, Pos: [189, 195] cc => I, Pos: [189, 195] cc => I, Pos: [191, 197] cc => I, Pos: [191, 197] cc => I, Pos: [198, 201] cc => I, Pos: [198, 201] cc => I, Pos: [206, 209] cc => I, Pos: [206, 209] cc => I, Pos: [216, 219] cc => I, Pos: [216, 219] cc => I]

--------End Timer [Generate Plans]:  0.09443831443786621

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 9, 12] ccc => cc,
 Pos: [8, 24] cc => I,
 Pos: [10, 13] cc => I,
 Pos: [14, 18, 21] ccc => cc,
 Pos: [33, 42] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [73, 87] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [81, 88] cc => I,
 Pos: [84, 90] cc => I,
 Pos: [94, 97] cc => I,
 Pos: [98, 103] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [108, 118] cc => I,
 Pos: [112, 120] cc => I,
 Pos: [136, 141] cc => I,
 Pos: [140, 151] cc => I,
 Pos: [143, 149] cc => I,
 Pos: [145, 147] cc => I,
 Pos: [146, 152] cc => I,
 Pos: [165, 169] cc => I,
 Pos: [157, 163] cc => I,
 Pos: [161, 167] cc => I,
 Pos: [164, 176] cc => I,
 Pos: [170, 182] cc => I,
 Pos: [180, 187, 192] ccc => cc,
 Pos: [181, 185] cc => I,
 Pos: [189, 195] cc => I,
 Pos: [191, 197] cc => I,
 Pos: [198, 201] cc => I,
 Pos: [206, 209] cc => I,
 Pos: [216, 219] cc => I]
Change: 36, Saving: 36

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 9, 12] ccc => cc
Apply:  Pos: [8, 24] cc => I
Apply:  Pos: [10, 13] cc => I
Apply:  Pos: [14, 18, 21] ccc => cc
Apply:  Pos: [33, 42] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [51, 57] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [73, 87] cc => I
Apply:  Pos: [75, 79] cc => I
Apply:  Pos: [81, 88] cc => I
Apply:  Pos: [84, 90] cc => I
Apply:  Pos: [94, 97] cc => I
Apply:  Pos: [98, 103] cc => I
Apply:  Pos: [105, 110] cc => I
Apply:  Pos: [108, 118] cc => I
Apply:  Pos: [112, 120] cc => I
Apply:  Pos: [136, 141] cc => I
Apply:  Pos: [140, 151] cc => I
Apply:  Pos: [143, 149] cc => I
Apply:  Pos: [145, 147] cc => I
Apply:  Pos: [146, 152] cc => I
Apply:  Pos: [165, 169] cc => I
Apply:  Pos: [157, 163] cc => I
Apply:  Pos: [161, 167] cc => I
Apply:  Pos: [164, 176] cc => I
Apply:  Pos: [170, 182] cc => I
Apply:  Pos: [180, 187, 192] ccc => cc
Apply:  Pos: [181, 185] cc => I
Apply:  Pos: [189, 195] cc => I
Apply:  Pos: [191, 197] cc => I
Apply:  Pos: [198, 201] cc => I
Apply:  Pos: [206, 209] cc => I
Apply:  Pos: [216, 219] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0010008811950683594

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [12, 5], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [12, 5], [4, 13], [1, 8], [18, 5], [0, 6], [10, 1], [7, 16], [4, 6], [16, 18], [7, 17], [1, 8], [14, 16], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [7, 14], [10, 4], [5, 11], [14, 17], [14, 16], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [12, 5], [9, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 10], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [3, 15], [9, 5], [7, 17], [10, 1], [14, 17], [7, 16], [5, 11], [2, 10], [1, 8], [10, 4], [19, 7], [9, 5], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [3, 9], [5, 11], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 16], [17, 8], [14, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [14, 17], [1, 8], [5, 11], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  4.298534631729126

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 37]
[96, 111]
[126, 151]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[35, 39, 42]
[99, 109, 113]
[107, 112, 117]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[39, 42, 47]
[48, 55, 58]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 37]
[96, 111]
[126, 151]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6564242839813232

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 37] cc => I, Pos: [20, 37] cc => I, Pos: [35, 39, 42] ccc => cc, Pos: [39, 42, 47] ccc => cc, Pos: [48, 55, 58] ccc => cc, Pos: [96, 111] cc => I, Pos: [96, 111] cc => I, Pos: [99, 109, 113] ccc => cc, Pos: [107, 112, 117] ccc => cc, Pos: [126, 151] cc => I, Pos: [126, 151] cc => I]

--------End Timer [Generate Plans]:  0.015628814697265625

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 37] cc => I,
 Pos: [35, 39, 42] ccc => cc,
 Pos: [48, 55, 58] ccc => cc,
 Pos: [96, 111] cc => I,
 Pos: [99, 109, 113] ccc => cc,
 Pos: [107, 112, 117] ccc => cc,
 Pos: [126, 151] cc => I]
Change: 7, Saving: 8

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 37] cc => I
Apply:  Pos: [35, 39, 42] ccc => cc
Apply:  Pos: [48, 55, 58] ccc => cc
Apply:  Pos: [96, 111] cc => I
Apply:  Pos: [99, 109, 113] ccc => cc
Apply:  Pos: [107, 112, 117] ccc => cc
Apply:  Pos: [126, 151] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 8], [3, 15], [4, 13], [1, 8], [18, 5], [0, 6], [7, 16], [4, 6], [16, 18], [7, 17], [1, 8], [7, 14], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [9, 5], [12, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [3, 15], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [3, 9], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 16], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [14, 17], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.672053098678589

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 44]
[25, 45]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[132, 133, 140]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 44]
[25, 45]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4530274868011475

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [25, 45] cc => I, Pos: [25, 45] cc => I, Pos: [37, 44] cc => I, Pos: [37, 44] cc => I, Pos: [132, 133, 140] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [25, 45] cc => I, Pos: [37, 44] cc => I, Pos: [132, 133, 140] ccc => cc]
Change: 3, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [25, 45] cc => I
Apply:  Pos: [37, 44] cc => I
Apply:  Pos: [132, 133, 140] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 8], [3, 15], [4, 13], [18, 5], [0, 6], [7, 16], [4, 6], [16, 18], [7, 17], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [12, 5], [9, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [3, 15], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [3, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 17], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.4530274868011475

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.343775987625122

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 8], [3, 15], [4, 13], [18, 5], [0, 6], [7, 16], [4, 6], [16, 18], [7, 17], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [9, 5], [12, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [3, 15], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [3, 9], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 17], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.343775987625122

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [141] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 282

Reduced: 
 - size: 84 (37.33%)
 - depth: 11 (24.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07813215255737305

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [8, 9], [4, 6], [19, 7], [2, 10], [17, 8], [12, 18], [19, 4], [8, 9], [12, 18], [14, 17], [4, 1], [15, 9], [18, 11], [7, 14], [2, 0], [4, 13], [14, 17], [8, 15], [19, 1], [2, 10], [13, 3], [12, 5], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [9, 5], [1, 8], [10, 4], [6, 15], [4, 1], [14, 17], [2, 10], [8, 15], [19, 4], [9, 5], [0, 13], [14, 17], [10, 1], [3, 15], [14, 17], [12, 5], [4, 13], [1, 8], [8, 15], [14, 17], [18, 5], [0, 6], [10, 1], [7, 16], [8, 15], [4, 6], [16, 18], [7, 17], [1, 8], [14, 16], [2, 10], [9, 5], [8, 15], [10, 19], [13, 3], [18, 5], [6, 8], [17, 12], [7, 14], [10, 4], [2, 0], [18, 5], [1, 8], [10, 19], [5, 11], [14, 17], [1, 8], [14, 16], [3, 15], [13, 6], [19, 4], [2, 10], [8, 9], [12, 18], [2, 0], [3, 15], [6, 9], [2, 10], [18, 5], [0, 13], [1, 12], [6, 15], [17, 8], [12, 5], [6, 15], [18, 11], [9, 5], [7, 16], [19, 1], [0, 6], [18, 11], [10, 1], [7, 17], [3, 15], [0, 4], [19, 1], [6, 15], [7, 17], [8, 9], [5, 11], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [19, 1], [17, 8], [5, 11], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 10], [14, 16], [6, 9], [8, 12], [0, 4], [19, 7], [14, 16], [12, 11], [1, 8], [13, 6], [2, 0], [14, 16], [2, 0], [17, 12], [1, 8], [3, 15], [19, 7], [14, 16], [9, 5], [7, 17], [10, 1], [14, 17], [0, 6], [7, 16], [5, 11], [2, 10], [14, 16], [1, 8], [0, 6], [12, 11], [3, 15], [10, 4], [14, 16], [19, 7], [3, 15], [0, 13], [9, 5], [4, 6], [2, 10], [14, 16], [19, 1], [12, 11], [10, 4], [18, 5], [8, 9], [3, 15], [7, 14], [0, 13], [5, 11], [1, 12], [7, 14], [10, 19], [15, 9], [17, 16], [0, 4], [8, 12], [19, 7], [3, 15], [14, 17], [13, 6], [0, 4], [16, 18], [19, 7], [12, 5], [1, 17], [19, 1], [12, 5], [7, 17], [1, 8], [0, 13], [17, 16], [18, 11], [17, 8], [14, 16], [18, 11], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [13, 3], [14, 17], [1, 8], [13, 3], [5, 11], [16, 18], [4, 1], [19, 7], [13, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[8, 24]
[33, 42]
[38, 44]
[44, 47]
[47, 52]
[51, 57]
[68, 74]
[66, 76]
[75, 79]
[73, 87]
[81, 88]
[84, 90]
[94, 97]
[98, 103]
[105, 110]
[108, 118]
[112, 120]
[136, 141]
[141, 146]
[145, 147]
[143, 149]
[140, 151]
[146, 152]
[157, 163]
[150, 165]
[161, 167]
[165, 169]
[167, 174]
[164, 176]
[169, 180]
[170, 182]
[181, 185]
[189, 195]
[191, 197]
[198, 201]
[206, 209]
[216, 219]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 17, 31]
[180, 187, 192]
[182, 194, 204]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 9, 12]
[14, 18, 21]
[57, 61, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[8, 24]
[33, 42]
[38, 44]
[44, 47]
[47, 52]
[51, 57]
[68, 74]
[66, 76]
[75, 79]
[73, 87]
[81, 88]
[84, 90]
[94, 97]
[98, 103]
[105, 110]
[108, 118]
[112, 120]
[136, 141]
[141, 146]
[145, 147]
[143, 149]
[140, 151]
[146, 152]
[157, 163]
[150, 165]
[161, 167]
[165, 169]
[167, 174]
[164, 176]
[169, 180]
[170, 182]
[181, 185]
[189, 195]
[191, 197]
[198, 201]
[206, 209]
[216, 219]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.234844207763672

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 9, 12] ccc => cc, Pos: [8, 24] cc => I, Pos: [8, 24] cc => I, Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [13, 17, 31] ccc => cc, Pos: [14, 18, 21] ccc => cc, Pos: [33, 42] cc => I, Pos: [33, 42] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [44, 47] cc => I, Pos: [44, 47] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [51, 57] cc => I, Pos: [51, 57] cc => I, Pos: [57, 61, 65] ccc => cc, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [73, 87] cc => I, Pos: [73, 87] cc => I, Pos: [75, 79] cc => I, Pos: [75, 79] cc => I, Pos: [81, 88] cc => I, Pos: [81, 88] cc => I, Pos: [84, 90] cc => I, Pos: [84, 90] cc => I, Pos: [94, 97] cc => I, Pos: [94, 97] cc => I, Pos: [98, 103] cc => I, Pos: [98, 103] cc => I, Pos: [105, 110] cc => I, Pos: [105, 110] cc => I, Pos: [108, 118] cc => I, Pos: [108, 118] cc => I, Pos: [112, 120] cc => I, Pos: [112, 120] cc => I, Pos: [136, 141] cc => I, Pos: [136, 141] cc => I, Pos: [140, 151] cc => I, Pos: [140, 151] cc => I, Pos: [141, 146] cc => I, Pos: [141, 146] cc => I, Pos: [143, 149] cc => I, Pos: [143, 149] cc => I, Pos: [145, 147] cc => I, Pos: [145, 147] cc => I, Pos: [146, 152] cc => I, Pos: [146, 152] cc => I, Pos: [150, 165] cc => I, Pos: [150, 165] cc => I, Pos: [157, 163] cc => I, Pos: [157, 163] cc => I, Pos: [161, 167] cc => I, Pos: [161, 167] cc => I, Pos: [164, 176] cc => I, Pos: [164, 176] cc => I, Pos: [165, 169] cc => I, Pos: [165, 169] cc => I, Pos: [167, 174] cc => I, Pos: [167, 174] cc => I, Pos: [169, 180] cc => I, Pos: [169, 180] cc => I, Pos: [170, 182] cc => I, Pos: [170, 182] cc => I, Pos: [180, 187, 192] ccc => cc, Pos: [181, 185] cc => I, Pos: [181, 185] cc => I, Pos: [182, 194, 204] ccc => cc, Pos: [189, 195] cc => I, Pos: [189, 195] cc => I, Pos: [191, 197] cc => I, Pos: [191, 197] cc => I, Pos: [198, 201] cc => I, Pos: [198, 201] cc => I, Pos: [206, 209] cc => I, Pos: [206, 209] cc => I, Pos: [216, 219] cc => I, Pos: [216, 219] cc => I]

--------End Timer [Generate Plans]:  0.0937495231628418

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 9, 12] ccc => cc,
 Pos: [8, 24] cc => I,
 Pos: [10, 13] cc => I,
 Pos: [14, 18, 21] ccc => cc,
 Pos: [33, 42] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [73, 87] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [81, 88] cc => I,
 Pos: [84, 90] cc => I,
 Pos: [94, 97] cc => I,
 Pos: [98, 103] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [108, 118] cc => I,
 Pos: [112, 120] cc => I,
 Pos: [136, 141] cc => I,
 Pos: [140, 151] cc => I,
 Pos: [143, 149] cc => I,
 Pos: [145, 147] cc => I,
 Pos: [146, 152] cc => I,
 Pos: [150, 165] cc => I,
 Pos: [157, 163] cc => I,
 Pos: [161, 167] cc => I,
 Pos: [164, 176] cc => I,
 Pos: [169, 180] cc => I,
 Pos: [170, 182] cc => I,
 Pos: [181, 185] cc => I,
 Pos: [189, 195] cc => I,
 Pos: [191, 197] cc => I,
 Pos: [198, 201] cc => I,
 Pos: [206, 209] cc => I,
 Pos: [216, 219] cc => I]
Change: 36, Saving: 36

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 9, 12] ccc => cc
Apply:  Pos: [8, 24] cc => I
Apply:  Pos: [10, 13] cc => I
Apply:  Pos: [14, 18, 21] ccc => cc
Apply:  Pos: [33, 42] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [51, 57] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [73, 87] cc => I
Apply:  Pos: [75, 79] cc => I
Apply:  Pos: [81, 88] cc => I
Apply:  Pos: [84, 90] cc => I
Apply:  Pos: [94, 97] cc => I
Apply:  Pos: [98, 103] cc => I
Apply:  Pos: [105, 110] cc => I
Apply:  Pos: [108, 118] cc => I
Apply:  Pos: [112, 120] cc => I
Apply:  Pos: [136, 141] cc => I
Apply:  Pos: [140, 151] cc => I
Apply:  Pos: [143, 149] cc => I
Apply:  Pos: [145, 147] cc => I
Apply:  Pos: [146, 152] cc => I
Apply:  Pos: [150, 165] cc => I
Apply:  Pos: [157, 163] cc => I
Apply:  Pos: [161, 167] cc => I
Apply:  Pos: [164, 176] cc => I
Apply:  Pos: [169, 180] cc => I
Apply:  Pos: [170, 182] cc => I
Apply:  Pos: [181, 185] cc => I
Apply:  Pos: [189, 195] cc => I
Apply:  Pos: [191, 197] cc => I
Apply:  Pos: [198, 201] cc => I
Apply:  Pos: [206, 209] cc => I
Apply:  Pos: [216, 219] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [12, 5], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [12, 5], [4, 13], [1, 8], [18, 5], [0, 6], [10, 1], [7, 16], [4, 6], [16, 18], [7, 17], [1, 8], [14, 16], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [7, 14], [10, 4], [5, 11], [14, 17], [14, 16], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [12, 5], [9, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 10], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 5], [7, 17], [10, 1], [14, 17], [7, 16], [5, 11], [2, 10], [1, 8], [10, 4], [19, 7], [9, 5], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [5, 11], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 16], [17, 8], [14, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [14, 17], [1, 8], [5, 11], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  4.328593730926514

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 37]
[96, 110]
[124, 150]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[35, 39, 42]
[99, 108, 112]
[106, 111, 116]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[39, 42, 47]
[48, 55, 58]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 37]
[96, 110]
[124, 150]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.67217755317688

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 37] cc => I, Pos: [20, 37] cc => I, Pos: [35, 39, 42] ccc => cc, Pos: [39, 42, 47] ccc => cc, Pos: [48, 55, 58] ccc => cc, Pos: [96, 110] cc => I, Pos: [96, 110] cc => I, Pos: [99, 108, 112] ccc => cc, Pos: [106, 111, 116] ccc => cc, Pos: [124, 150] cc => I, Pos: [124, 150] cc => I]

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 37] cc => I,
 Pos: [35, 39, 42] ccc => cc,
 Pos: [48, 55, 58] ccc => cc,
 Pos: [96, 110] cc => I,
 Pos: [99, 108, 112] ccc => cc,
 Pos: [106, 111, 116] ccc => cc,
 Pos: [124, 150] cc => I]
Change: 7, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 37] cc => I
Apply:  Pos: [35, 39, 42] ccc => cc
Apply:  Pos: [48, 55, 58] ccc => cc
Apply:  Pos: [96, 110] cc => I
Apply:  Pos: [99, 108, 112] ccc => cc
Apply:  Pos: [106, 111, 116] ccc => cc
Apply:  Pos: [124, 150] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 8], [3, 15], [4, 13], [1, 8], [18, 5], [0, 6], [7, 16], [4, 6], [16, 18], [7, 17], [1, 8], [7, 14], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [9, 5], [12, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 16], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [14, 17], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.6878015995025635

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 44]
[25, 45]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[131, 132, 139]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 44]
[25, 45]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.469013214111328

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [25, 45] cc => I, Pos: [25, 45] cc => I, Pos: [37, 44] cc => I, Pos: [37, 44] cc => I, Pos: [131, 132, 139] ccc => cc]

--------End Timer [Generate Plans]:  0.015625476837158203

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [25, 45] cc => I, Pos: [37, 44] cc => I, Pos: [131, 132, 139] ccc => cc]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [25, 45] cc => I
Apply:  Pos: [37, 44] cc => I
Apply:  Pos: [131, 132, 139] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 8], [3, 15], [4, 13], [18, 5], [0, 6], [7, 16], [4, 6], [16, 18], [7, 17], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [12, 5], [9, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 17], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.4846386909484863

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.343923568725586

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 8], [3, 15], [4, 13], [18, 5], [0, 6], [7, 16], [4, 6], [16, 18], [7, 17], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [9, 5], [12, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 17], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.343923568725586

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [140] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 280

Reduced: 
 - size: 85 (37.78%)
 - depth: 11 (24.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374308586120605

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [8, 9], [4, 6], [19, 7], [2, 10], [17, 8], [12, 18], [19, 4], [8, 9], [12, 18], [14, 17], [4, 1], [15, 9], [18, 11], [7, 14], [2, 0], [4, 13], [14, 17], [8, 15], [19, 1], [2, 10], [13, 3], [12, 5], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [9, 5], [1, 8], [10, 4], [6, 15], [4, 1], [14, 17], [2, 10], [8, 15], [19, 4], [9, 5], [0, 13], [14, 17], [10, 1], [3, 15], [14, 17], [12, 5], [4, 13], [1, 8], [8, 15], [14, 17], [18, 5], [0, 6], [10, 1], [7, 16], [8, 15], [4, 6], [16, 18], [7, 17], [1, 8], [14, 16], [2, 10], [9, 5], [8, 15], [10, 19], [13, 3], [18, 5], [6, 8], [17, 12], [7, 14], [10, 4], [2, 0], [18, 5], [1, 8], [10, 19], [5, 11], [14, 17], [1, 8], [14, 16], [3, 15], [13, 6], [19, 4], [2, 10], [8, 9], [12, 18], [2, 0], [3, 15], [6, 9], [2, 10], [18, 5], [0, 13], [1, 12], [6, 15], [17, 8], [12, 5], [6, 15], [18, 11], [9, 5], [7, 16], [19, 1], [0, 6], [18, 11], [10, 1], [7, 17], [3, 15], [0, 4], [19, 1], [6, 15], [7, 17], [8, 9], [5, 11], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [19, 1], [17, 8], [5, 11], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 10], [14, 16], [6, 9], [8, 12], [0, 4], [19, 7], [14, 16], [12, 11], [1, 8], [13, 6], [2, 0], [14, 16], [2, 0], [17, 12], [1, 8], [3, 15], [19, 7], [14, 16], [9, 5], [7, 17], [10, 1], [14, 17], [0, 6], [7, 16], [5, 11], [2, 10], [14, 16], [1, 8], [0, 6], [12, 11], [3, 15], [10, 4], [14, 16], [19, 7], [3, 15], [0, 13], [9, 5], [4, 6], [2, 10], [14, 16], [19, 1], [12, 11], [10, 4], [18, 5], [8, 9], [3, 15], [7, 14], [0, 13], [5, 11], [1, 12], [7, 14], [10, 19], [15, 9], [17, 16], [0, 4], [8, 12], [19, 7], [3, 15], [14, 17], [13, 6], [0, 4], [16, 18], [19, 7], [12, 5], [1, 17], [19, 1], [12, 5], [7, 17], [1, 8], [0, 13], [17, 16], [18, 11], [17, 8], [14, 16], [18, 11], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [13, 3], [14, 17], [1, 8], [13, 3], [5, 11], [16, 18], [4, 1], [19, 7], [13, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[8, 24]
[33, 42]
[38, 44]
[44, 47]
[47, 52]
[51, 57]
[68, 74]
[66, 76]
[75, 79]
[73, 87]
[81, 88]
[84, 90]
[94, 97]
[98, 103]
[105, 110]
[108, 118]
[112, 120]
[136, 141]
[141, 146]
[145, 147]
[143, 149]
[140, 151]
[146, 152]
[157, 163]
[150, 165]
[161, 167]
[165, 169]
[167, 174]
[164, 176]
[169, 180]
[170, 182]
[181, 185]
[189, 195]
[191, 197]
[198, 201]
[206, 209]
[216, 219]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 17, 31]
[180, 187, 192]
[182, 194, 204]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 9, 12]
[14, 18, 21]
[57, 61, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[8, 24]
[33, 42]
[38, 44]
[44, 47]
[47, 52]
[51, 57]
[68, 74]
[66, 76]
[75, 79]
[73, 87]
[81, 88]
[84, 90]
[94, 97]
[98, 103]
[105, 110]
[108, 118]
[112, 120]
[136, 141]
[141, 146]
[145, 147]
[143, 149]
[140, 151]
[146, 152]
[157, 163]
[150, 165]
[161, 167]
[165, 169]
[167, 174]
[164, 176]
[169, 180]
[170, 182]
[181, 185]
[189, 195]
[191, 197]
[198, 201]
[206, 209]
[216, 219]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.203047752380371

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 9, 12] ccc => cc, Pos: [8, 24] cc => I, Pos: [8, 24] cc => I, Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [13, 17, 31] ccc => cc, Pos: [14, 18, 21] ccc => cc, Pos: [33, 42] cc => I, Pos: [33, 42] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [44, 47] cc => I, Pos: [44, 47] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [51, 57] cc => I, Pos: [51, 57] cc => I, Pos: [57, 61, 65] ccc => cc, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [73, 87] cc => I, Pos: [73, 87] cc => I, Pos: [75, 79] cc => I, Pos: [75, 79] cc => I, Pos: [81, 88] cc => I, Pos: [81, 88] cc => I, Pos: [84, 90] cc => I, Pos: [84, 90] cc => I, Pos: [94, 97] cc => I, Pos: [94, 97] cc => I, Pos: [98, 103] cc => I, Pos: [98, 103] cc => I, Pos: [105, 110] cc => I, Pos: [105, 110] cc => I, Pos: [108, 118] cc => I, Pos: [108, 118] cc => I, Pos: [112, 120] cc => I, Pos: [112, 120] cc => I, Pos: [136, 141] cc => I, Pos: [136, 141] cc => I, Pos: [140, 151] cc => I, Pos: [140, 151] cc => I, Pos: [141, 146] cc => I, Pos: [141, 146] cc => I, Pos: [143, 149] cc => I, Pos: [143, 149] cc => I, Pos: [145, 147] cc => I, Pos: [145, 147] cc => I, Pos: [146, 152] cc => I, Pos: [146, 152] cc => I, Pos: [150, 165] cc => I, Pos: [150, 165] cc => I, Pos: [157, 163] cc => I, Pos: [157, 163] cc => I, Pos: [161, 167] cc => I, Pos: [161, 167] cc => I, Pos: [164, 176] cc => I, Pos: [164, 176] cc => I, Pos: [165, 169] cc => I, Pos: [165, 169] cc => I, Pos: [167, 174] cc => I, Pos: [167, 174] cc => I, Pos: [169, 180] cc => I, Pos: [169, 180] cc => I, Pos: [170, 182] cc => I, Pos: [170, 182] cc => I, Pos: [180, 187, 192] ccc => cc, Pos: [181, 185] cc => I, Pos: [181, 185] cc => I, Pos: [182, 194, 204] ccc => cc, Pos: [189, 195] cc => I, Pos: [189, 195] cc => I, Pos: [191, 197] cc => I, Pos: [191, 197] cc => I, Pos: [198, 201] cc => I, Pos: [198, 201] cc => I, Pos: [206, 209] cc => I, Pos: [206, 209] cc => I, Pos: [216, 219] cc => I, Pos: [216, 219] cc => I]

--------End Timer [Generate Plans]:  0.09406089782714844

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 9, 12] ccc => cc,
 Pos: [8, 24] cc => I,
 Pos: [10, 13] cc => I,
 Pos: [14, 18, 21] ccc => cc,
 Pos: [33, 42] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [57, 61, 65] ccc => cc,
 Pos: [66, 76] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [73, 87] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [81, 88] cc => I,
 Pos: [84, 90] cc => I,
 Pos: [94, 97] cc => I,
 Pos: [98, 103] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [108, 118] cc => I,
 Pos: [112, 120] cc => I,
 Pos: [141, 146] cc => I,
 Pos: [140, 151] cc => I,
 Pos: [143, 149] cc => I,
 Pos: [145, 147] cc => I,
 Pos: [165, 169] cc => I,
 Pos: [157, 163] cc => I,
 Pos: [167, 174] cc => I,
 Pos: [164, 176] cc => I,
 Pos: [170, 182] cc => I,
 Pos: [180, 187, 192] ccc => cc,
 Pos: [181, 185] cc => I,
 Pos: [189, 195] cc => I,
 Pos: [191, 197] cc => I,
 Pos: [198, 201] cc => I,
 Pos: [206, 209] cc => I,
 Pos: [216, 219] cc => I]
Change: 35, Saving: 35

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 9, 12] ccc => cc
Apply:  Pos: [8, 24] cc => I
Apply:  Pos: [10, 13] cc => I
Apply:  Pos: [14, 18, 21] ccc => cc
Apply:  Pos: [33, 42] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [57, 61, 65] ccc => cc
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [73, 87] cc => I
Apply:  Pos: [75, 79] cc => I
Apply:  Pos: [81, 88] cc => I
Apply:  Pos: [84, 90] cc => I
Apply:  Pos: [94, 97] cc => I
Apply:  Pos: [98, 103] cc => I
Apply:  Pos: [105, 110] cc => I
Apply:  Pos: [108, 118] cc => I
Apply:  Pos: [112, 120] cc => I
Apply:  Pos: [141, 146] cc => I
Apply:  Pos: [140, 151] cc => I
Apply:  Pos: [143, 149] cc => I
Apply:  Pos: [145, 147] cc => I
Apply:  Pos: [165, 169] cc => I
Apply:  Pos: [157, 163] cc => I
Apply:  Pos: [167, 174] cc => I
Apply:  Pos: [164, 176] cc => I
Apply:  Pos: [170, 182] cc => I
Apply:  Pos: [180, 187, 192] ccc => cc
Apply:  Pos: [181, 185] cc => I
Apply:  Pos: [189, 195] cc => I
Apply:  Pos: [191, 197] cc => I
Apply:  Pos: [198, 201] cc => I
Apply:  Pos: [206, 209] cc => I
Apply:  Pos: [216, 219] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [12, 5], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [12, 5], [4, 13], [1, 8], [8, 15], [18, 5], [0, 6], [10, 1], [7, 16], [1, 8], [4, 6], [16, 18], [7, 17], [8, 15], [14, 16], [2, 10], [9, 5], [13, 3], [6, 8], [17, 12], [7, 14], [10, 4], [5, 11], [14, 17], [14, 16], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [12, 5], [9, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 10], [14, 16], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [3, 15], [14, 16], [9, 5], [7, 17], [10, 1], [14, 17], [7, 16], [5, 11], [2, 10], [14, 16], [1, 8], [10, 4], [19, 7], [9, 5], [4, 6], [2, 10], [19, 1], [10, 4], [18, 5], [8, 9], [3, 9], [5, 11], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 16], [17, 8], [14, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [14, 17], [1, 8], [5, 11], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  4.2971086502075195

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 37]
[101, 109]
[129, 154]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[100, 112, 116]
[110, 115, 121]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[50, 56, 59]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 37]
[101, 109]
[129, 154]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7654950618743896

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 37] cc => I, Pos: [20, 37] cc => I, Pos: [50, 56, 59] ccc => cc, Pos: [100, 112, 116] ccc => cc, Pos: [101, 109] cc => I, Pos: [101, 109] cc => I, Pos: [110, 115, 121] ccc => cc, Pos: [129, 154] cc => I, Pos: [129, 154] cc => I]

--------End Timer [Generate Plans]:  0.015608787536621094

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 37] cc => I,
 Pos: [50, 56, 59] ccc => cc,
 Pos: [100, 112, 116] ccc => cc,
 Pos: [101, 109] cc => I,
 Pos: [110, 115, 121] ccc => cc,
 Pos: [129, 154] cc => I]
Change: 6, Saving: 6

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 37] cc => I
Apply:  Pos: [50, 56, 59] ccc => cc
Apply:  Pos: [100, 112, 116] ccc => cc
Apply:  Pos: [101, 109] cc => I
Apply:  Pos: [110, 115, 121] ccc => cc
Apply:  Pos: [129, 154] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [4, 13], [1, 8], [8, 15], [18, 5], [0, 6], [10, 1], [7, 16], [1, 8], [4, 6], [16, 18], [7, 17], [8, 15], [7, 14], [2, 10], [9, 5], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [9, 5], [12, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [3, 15], [9, 11], [7, 17], [10, 1], [14, 17], [7, 16], [5, 11], [14, 16], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [19, 1], [10, 4], [18, 5], [3, 9], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 16], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [14, 17], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.7811038494110107

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[25, 48]
[94, 109]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[136, 137, 144]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[25, 48]
[94, 109]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.5468175411224365

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [25, 48] cc => I, Pos: [25, 48] cc => I, Pos: [94, 109] cc => I, Pos: [94, 109] cc => I, Pos: [136, 137, 144] ccc => cc]

--------End Timer [Generate Plans]:  0.015623807907104492

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [25, 48] cc => I, Pos: [94, 109] cc => I, Pos: [136, 137, 144] ccc => cc]
Change: 3, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [25, 48] cc => I
Apply:  Pos: [94, 109] cc => I
Apply:  Pos: [136, 137, 144] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [4, 13], [1, 8], [8, 15], [18, 5], [0, 6], [10, 1], [7, 16], [1, 8], [4, 6], [16, 18], [7, 17], [8, 15], [2, 10], [9, 5], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [12, 5], [9, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [3, 15], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [14, 16], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [19, 1], [10, 4], [18, 5], [8, 9], [3, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 17], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.562441349029541

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.421860933303833

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [4, 13], [1, 8], [8, 15], [18, 5], [0, 6], [10, 1], [7, 16], [1, 8], [4, 6], [16, 18], [7, 17], [8, 15], [2, 10], [9, 5], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [9, 5], [12, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [3, 15], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [14, 16], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [19, 1], [10, 4], [18, 5], [3, 9], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 17], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.421860933303833

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [145] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 290

Reduced: 
 - size: 80 (35.56%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07811498641967773

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [8, 9], [4, 6], [19, 7], [2, 10], [17, 8], [12, 18], [19, 4], [8, 9], [12, 18], [14, 17], [4, 1], [15, 9], [18, 11], [7, 14], [2, 0], [4, 13], [14, 17], [8, 15], [19, 1], [2, 10], [13, 3], [12, 5], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [9, 5], [1, 8], [10, 4], [6, 15], [4, 1], [14, 17], [2, 10], [8, 15], [19, 4], [9, 5], [0, 13], [14, 17], [10, 1], [3, 15], [14, 17], [12, 5], [4, 13], [1, 8], [8, 15], [14, 17], [18, 5], [0, 6], [10, 1], [7, 16], [8, 15], [4, 6], [16, 18], [7, 17], [1, 8], [14, 16], [2, 10], [9, 5], [8, 15], [10, 19], [13, 3], [18, 5], [6, 8], [17, 12], [7, 14], [10, 4], [2, 0], [18, 5], [1, 8], [10, 19], [5, 11], [14, 17], [1, 8], [14, 16], [3, 15], [13, 6], [19, 4], [2, 10], [8, 9], [12, 18], [2, 0], [3, 15], [6, 9], [2, 10], [18, 5], [0, 13], [1, 12], [6, 15], [17, 8], [12, 5], [6, 15], [18, 11], [9, 5], [7, 16], [19, 1], [0, 6], [18, 11], [10, 1], [7, 17], [3, 15], [0, 4], [19, 1], [6, 15], [7, 17], [8, 9], [5, 11], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [19, 1], [17, 8], [5, 11], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 10], [14, 16], [6, 9], [8, 12], [0, 4], [19, 7], [14, 16], [12, 11], [1, 8], [13, 6], [2, 0], [14, 16], [2, 0], [17, 12], [1, 8], [3, 15], [19, 7], [14, 16], [9, 5], [7, 17], [10, 1], [14, 17], [0, 6], [7, 16], [5, 11], [2, 10], [14, 16], [1, 8], [0, 6], [12, 11], [3, 15], [10, 4], [14, 16], [19, 7], [3, 15], [0, 13], [9, 5], [4, 6], [2, 10], [14, 16], [19, 1], [12, 11], [10, 4], [18, 5], [8, 9], [3, 15], [7, 14], [0, 13], [5, 11], [1, 12], [7, 14], [10, 19], [15, 9], [17, 16], [0, 4], [8, 12], [19, 7], [3, 15], [14, 17], [13, 6], [0, 4], [16, 18], [19, 7], [12, 5], [1, 17], [19, 1], [12, 5], [7, 17], [1, 8], [0, 13], [17, 16], [18, 11], [17, 8], [14, 16], [18, 11], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [13, 3], [14, 17], [1, 8], [13, 3], [5, 11], [16, 18], [4, 1], [19, 7], [13, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[8, 24]
[33, 42]
[38, 44]
[44, 47]
[47, 52]
[51, 57]
[68, 74]
[66, 76]
[75, 79]
[73, 87]
[81, 88]
[84, 90]
[94, 97]
[98, 103]
[105, 110]
[108, 118]
[112, 120]
[136, 141]
[141, 146]
[145, 147]
[143, 149]
[140, 151]
[146, 152]
[157, 163]
[150, 165]
[161, 167]
[165, 169]
[167, 174]
[164, 176]
[169, 180]
[170, 182]
[181, 185]
[189, 195]
[191, 197]
[198, 201]
[206, 209]
[216, 219]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 17, 31]
[180, 187, 192]
[182, 194, 204]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 9, 12]
[14, 18, 21]
[57, 61, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[8, 24]
[33, 42]
[38, 44]
[44, 47]
[47, 52]
[51, 57]
[68, 74]
[66, 76]
[75, 79]
[73, 87]
[81, 88]
[84, 90]
[94, 97]
[98, 103]
[105, 110]
[108, 118]
[112, 120]
[136, 141]
[141, 146]
[145, 147]
[143, 149]
[140, 151]
[146, 152]
[157, 163]
[150, 165]
[161, 167]
[165, 169]
[167, 174]
[164, 176]
[169, 180]
[170, 182]
[181, 185]
[189, 195]
[191, 197]
[198, 201]
[206, 209]
[216, 219]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.203170299530029

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 9, 12] ccc => cc, Pos: [8, 24] cc => I, Pos: [8, 24] cc => I, Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [13, 17, 31] ccc => cc, Pos: [14, 18, 21] ccc => cc, Pos: [33, 42] cc => I, Pos: [33, 42] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [44, 47] cc => I, Pos: [44, 47] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [51, 57] cc => I, Pos: [51, 57] cc => I, Pos: [57, 61, 65] ccc => cc, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [73, 87] cc => I, Pos: [73, 87] cc => I, Pos: [75, 79] cc => I, Pos: [75, 79] cc => I, Pos: [81, 88] cc => I, Pos: [81, 88] cc => I, Pos: [84, 90] cc => I, Pos: [84, 90] cc => I, Pos: [94, 97] cc => I, Pos: [94, 97] cc => I, Pos: [98, 103] cc => I, Pos: [98, 103] cc => I, Pos: [105, 110] cc => I, Pos: [105, 110] cc => I, Pos: [108, 118] cc => I, Pos: [108, 118] cc => I, Pos: [112, 120] cc => I, Pos: [112, 120] cc => I, Pos: [136, 141] cc => I, Pos: [136, 141] cc => I, Pos: [140, 151] cc => I, Pos: [140, 151] cc => I, Pos: [141, 146] cc => I, Pos: [141, 146] cc => I, Pos: [143, 149] cc => I, Pos: [143, 149] cc => I, Pos: [145, 147] cc => I, Pos: [145, 147] cc => I, Pos: [146, 152] cc => I, Pos: [146, 152] cc => I, Pos: [150, 165] cc => I, Pos: [150, 165] cc => I, Pos: [157, 163] cc => I, Pos: [157, 163] cc => I, Pos: [161, 167] cc => I, Pos: [161, 167] cc => I, Pos: [164, 176] cc => I, Pos: [164, 176] cc => I, Pos: [165, 169] cc => I, Pos: [165, 169] cc => I, Pos: [167, 174] cc => I, Pos: [167, 174] cc => I, Pos: [169, 180] cc => I, Pos: [169, 180] cc => I, Pos: [170, 182] cc => I, Pos: [170, 182] cc => I, Pos: [180, 187, 192] ccc => cc, Pos: [181, 185] cc => I, Pos: [181, 185] cc => I, Pos: [182, 194, 204] ccc => cc, Pos: [189, 195] cc => I, Pos: [189, 195] cc => I, Pos: [191, 197] cc => I, Pos: [191, 197] cc => I, Pos: [198, 201] cc => I, Pos: [198, 201] cc => I, Pos: [206, 209] cc => I, Pos: [206, 209] cc => I, Pos: [216, 219] cc => I, Pos: [216, 219] cc => I]

--------End Timer [Generate Plans]:  0.09374403953552246

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 9, 12] ccc => cc,
 Pos: [8, 24] cc => I,
 Pos: [10, 13] cc => I,
 Pos: [14, 18, 21] ccc => cc,
 Pos: [33, 42] cc => I,
 Pos: [44, 47] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [73, 87] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [81, 88] cc => I,
 Pos: [84, 90] cc => I,
 Pos: [94, 97] cc => I,
 Pos: [98, 103] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [108, 118] cc => I,
 Pos: [112, 120] cc => I,
 Pos: [136, 141] cc => I,
 Pos: [140, 151] cc => I,
 Pos: [143, 149] cc => I,
 Pos: [145, 147] cc => I,
 Pos: [146, 152] cc => I,
 Pos: [150, 165] cc => I,
 Pos: [157, 163] cc => I,
 Pos: [161, 167] cc => I,
 Pos: [164, 176] cc => I,
 Pos: [169, 180] cc => I,
 Pos: [170, 182] cc => I,
 Pos: [181, 185] cc => I,
 Pos: [189, 195] cc => I,
 Pos: [191, 197] cc => I,
 Pos: [198, 201] cc => I,
 Pos: [206, 209] cc => I,
 Pos: [216, 219] cc => I]
Change: 35, Saving: 35

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 9, 12] ccc => cc
Apply:  Pos: [8, 24] cc => I
Apply:  Pos: [10, 13] cc => I
Apply:  Pos: [14, 18, 21] ccc => cc
Apply:  Pos: [33, 42] cc => I
Apply:  Pos: [44, 47] cc => I
Apply:  Pos: [51, 57] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [73, 87] cc => I
Apply:  Pos: [75, 79] cc => I
Apply:  Pos: [81, 88] cc => I
Apply:  Pos: [84, 90] cc => I
Apply:  Pos: [94, 97] cc => I
Apply:  Pos: [98, 103] cc => I
Apply:  Pos: [105, 110] cc => I
Apply:  Pos: [108, 118] cc => I
Apply:  Pos: [112, 120] cc => I
Apply:  Pos: [136, 141] cc => I
Apply:  Pos: [140, 151] cc => I
Apply:  Pos: [143, 149] cc => I
Apply:  Pos: [145, 147] cc => I
Apply:  Pos: [146, 152] cc => I
Apply:  Pos: [150, 165] cc => I
Apply:  Pos: [157, 163] cc => I
Apply:  Pos: [161, 167] cc => I
Apply:  Pos: [164, 176] cc => I
Apply:  Pos: [169, 180] cc => I
Apply:  Pos: [170, 182] cc => I
Apply:  Pos: [181, 185] cc => I
Apply:  Pos: [189, 195] cc => I
Apply:  Pos: [191, 197] cc => I
Apply:  Pos: [198, 201] cc => I
Apply:  Pos: [206, 209] cc => I
Apply:  Pos: [216, 219] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [12, 5], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [1, 8], [10, 4], [6, 15], [4, 1], [14, 17], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [12, 5], [4, 13], [1, 8], [14, 17], [18, 5], [0, 6], [10, 1], [7, 16], [4, 6], [16, 18], [7, 17], [1, 8], [14, 16], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [7, 14], [10, 4], [5, 11], [14, 17], [14, 16], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [12, 5], [9, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 10], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 5], [7, 17], [10, 1], [14, 17], [7, 16], [5, 11], [2, 10], [1, 8], [10, 4], [19, 7], [9, 5], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [5, 11], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 16], [17, 8], [14, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [14, 17], [1, 8], [5, 11], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  4.296914339065552

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 38]
[31, 41]
[98, 112]
[126, 152]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[36, 40, 44]
[101, 110, 114]
[108, 113, 118]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[40, 44, 49]
[50, 57, 60]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 38]
[31, 41]
[98, 112]
[126, 152]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6875319480895996

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 38] cc => I, Pos: [20, 38] cc => I, Pos: [31, 41] cc => I, Pos: [31, 41] cc => I, Pos: [36, 40, 44] ccc => cc, Pos: [40, 44, 49] ccc => cc, Pos: [50, 57, 60] ccc => cc, Pos: [98, 112] cc => I, Pos: [98, 112] cc => I, Pos: [101, 110, 114] ccc => cc, Pos: [108, 113, 118] ccc => cc, Pos: [126, 152] cc => I, Pos: [126, 152] cc => I]

--------End Timer [Generate Plans]:  0.031243324279785156

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 38] cc => I,
 Pos: [31, 41] cc => I,
 Pos: [40, 44, 49] ccc => cc,
 Pos: [50, 57, 60] ccc => cc,
 Pos: [98, 112] cc => I,
 Pos: [101, 110, 114] ccc => cc,
 Pos: [108, 113, 118] ccc => cc,
 Pos: [126, 152] cc => I]
Change: 8, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 38] cc => I
Apply:  Pos: [31, 41] cc => I
Apply:  Pos: [40, 44, 49] ccc => cc
Apply:  Pos: [50, 57, 60] ccc => cc
Apply:  Pos: [98, 112] cc => I
Apply:  Pos: [101, 110, 114] ccc => cc
Apply:  Pos: [108, 113, 118] ccc => cc
Apply:  Pos: [126, 152] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [4, 13], [10, 1], [18, 5], [0, 6], [1, 8], [7, 16], [4, 6], [16, 18], [7, 17], [7, 14], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [9, 5], [12, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 16], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [14, 17], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.7187752723693848

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[34, 37]
[25, 44]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[131, 132, 139]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[34, 37]
[25, 44]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.453035593032837

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [25, 44] cc => I, Pos: [25, 44] cc => I, Pos: [34, 37] cc => I, Pos: [34, 37] cc => I, Pos: [131, 132, 139] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [25, 44] cc => I, Pos: [34, 37] cc => I, Pos: [131, 132, 139] ccc => cc]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [25, 44] cc => I
Apply:  Pos: [34, 37] cc => I
Apply:  Pos: [131, 132, 139] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [3, 15], [4, 13], [18, 5], [0, 6], [1, 8], [7, 16], [4, 6], [16, 18], [7, 17], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [12, 5], [9, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 17], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.453035593032837

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[29, 42]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[29, 42]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.328197479248047

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [29, 42] cc => I, Pos: [29, 42] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [29, 42] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [29, 42] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [1, 8], [10, 4], [6, 15], [4, 1], [8, 15], [19, 4], [0, 13], [3, 15], [4, 13], [18, 5], [0, 6], [1, 8], [7, 16], [4, 6], [16, 18], [7, 17], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [9, 5], [12, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 17], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.328197479248047

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.2812373638153076

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [1, 8], [10, 4], [6, 15], [4, 1], [8, 15], [19, 4], [0, 13], [3, 15], [4, 13], [18, 5], [0, 6], [1, 8], [7, 16], [4, 6], [16, 18], [7, 17], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [12, 5], [9, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 17], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.2812373638153076

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [138] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 33 - (small)
 - circuit cycle: 276

Reduced: 
 - size: 87 (38.67%)
 - depth: 12 (26.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09375596046447754

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [8, 9], [4, 6], [19, 7], [2, 10], [17, 8], [12, 18], [19, 4], [8, 9], [12, 18], [14, 17], [4, 1], [15, 9], [18, 11], [7, 14], [2, 0], [4, 13], [14, 17], [8, 15], [19, 1], [2, 10], [13, 3], [12, 5], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [9, 5], [1, 8], [10, 4], [6, 15], [4, 1], [14, 17], [2, 10], [8, 15], [19, 4], [9, 5], [0, 13], [14, 17], [10, 1], [3, 15], [14, 17], [12, 5], [4, 13], [1, 8], [8, 15], [14, 17], [18, 5], [0, 6], [10, 1], [7, 16], [8, 15], [4, 6], [16, 18], [7, 17], [1, 8], [14, 16], [2, 10], [9, 5], [8, 15], [10, 19], [13, 3], [18, 5], [6, 8], [17, 12], [7, 14], [10, 4], [2, 0], [18, 5], [1, 8], [10, 19], [5, 11], [14, 17], [1, 8], [14, 16], [3, 15], [13, 6], [19, 4], [2, 10], [8, 9], [12, 18], [2, 0], [3, 15], [6, 9], [2, 10], [18, 5], [0, 13], [1, 12], [6, 15], [17, 8], [12, 5], [6, 15], [18, 11], [9, 5], [7, 16], [19, 1], [0, 6], [18, 11], [10, 1], [7, 17], [3, 15], [0, 4], [19, 1], [6, 15], [7, 17], [8, 9], [5, 11], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [19, 1], [17, 8], [5, 11], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 10], [14, 16], [6, 9], [8, 12], [0, 4], [19, 7], [14, 16], [12, 11], [1, 8], [13, 6], [2, 0], [14, 16], [2, 0], [17, 12], [1, 8], [3, 15], [19, 7], [14, 16], [9, 5], [7, 17], [10, 1], [14, 17], [0, 6], [7, 16], [5, 11], [2, 10], [14, 16], [1, 8], [0, 6], [12, 11], [3, 15], [10, 4], [14, 16], [19, 7], [3, 15], [0, 13], [9, 5], [4, 6], [2, 10], [14, 16], [19, 1], [12, 11], [10, 4], [18, 5], [8, 9], [3, 15], [7, 14], [0, 13], [5, 11], [1, 12], [7, 14], [10, 19], [15, 9], [17, 16], [0, 4], [8, 12], [19, 7], [3, 15], [14, 17], [13, 6], [0, 4], [16, 18], [19, 7], [12, 5], [1, 17], [19, 1], [12, 5], [7, 17], [1, 8], [0, 13], [17, 16], [18, 11], [17, 8], [14, 16], [18, 11], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [13, 3], [14, 17], [1, 8], [13, 3], [5, 11], [16, 18], [4, 1], [19, 7], [13, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[8, 24]
[33, 42]
[38, 44]
[44, 47]
[47, 52]
[51, 57]
[68, 74]
[66, 76]
[75, 79]
[73, 87]
[81, 88]
[84, 90]
[94, 97]
[98, 103]
[105, 110]
[108, 118]
[112, 120]
[136, 141]
[141, 146]
[145, 147]
[143, 149]
[140, 151]
[146, 152]
[157, 163]
[150, 165]
[161, 167]
[165, 169]
[167, 174]
[164, 176]
[169, 180]
[170, 182]
[181, 185]
[189, 195]
[191, 197]
[198, 201]
[206, 209]
[216, 219]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 17, 31]
[180, 187, 192]
[182, 194, 204]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 9, 12]
[14, 18, 21]
[57, 61, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[8, 24]
[33, 42]
[38, 44]
[44, 47]
[47, 52]
[51, 57]
[68, 74]
[66, 76]
[75, 79]
[73, 87]
[81, 88]
[84, 90]
[94, 97]
[98, 103]
[105, 110]
[108, 118]
[112, 120]
[136, 141]
[141, 146]
[145, 147]
[143, 149]
[140, 151]
[146, 152]
[157, 163]
[150, 165]
[161, 167]
[165, 169]
[167, 174]
[164, 176]
[169, 180]
[170, 182]
[181, 185]
[189, 195]
[191, 197]
[198, 201]
[206, 209]
[216, 219]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.234422922134399

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 9, 12] ccc => cc, Pos: [8, 24] cc => I, Pos: [8, 24] cc => I, Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [13, 17, 31] ccc => cc, Pos: [14, 18, 21] ccc => cc, Pos: [33, 42] cc => I, Pos: [33, 42] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [44, 47] cc => I, Pos: [44, 47] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [51, 57] cc => I, Pos: [51, 57] cc => I, Pos: [57, 61, 65] ccc => cc, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [73, 87] cc => I, Pos: [73, 87] cc => I, Pos: [75, 79] cc => I, Pos: [75, 79] cc => I, Pos: [81, 88] cc => I, Pos: [81, 88] cc => I, Pos: [84, 90] cc => I, Pos: [84, 90] cc => I, Pos: [94, 97] cc => I, Pos: [94, 97] cc => I, Pos: [98, 103] cc => I, Pos: [98, 103] cc => I, Pos: [105, 110] cc => I, Pos: [105, 110] cc => I, Pos: [108, 118] cc => I, Pos: [108, 118] cc => I, Pos: [112, 120] cc => I, Pos: [112, 120] cc => I, Pos: [136, 141] cc => I, Pos: [136, 141] cc => I, Pos: [140, 151] cc => I, Pos: [140, 151] cc => I, Pos: [141, 146] cc => I, Pos: [141, 146] cc => I, Pos: [143, 149] cc => I, Pos: [143, 149] cc => I, Pos: [145, 147] cc => I, Pos: [145, 147] cc => I, Pos: [146, 152] cc => I, Pos: [146, 152] cc => I, Pos: [150, 165] cc => I, Pos: [150, 165] cc => I, Pos: [157, 163] cc => I, Pos: [157, 163] cc => I, Pos: [161, 167] cc => I, Pos: [161, 167] cc => I, Pos: [164, 176] cc => I, Pos: [164, 176] cc => I, Pos: [165, 169] cc => I, Pos: [165, 169] cc => I, Pos: [167, 174] cc => I, Pos: [167, 174] cc => I, Pos: [169, 180] cc => I, Pos: [169, 180] cc => I, Pos: [170, 182] cc => I, Pos: [170, 182] cc => I, Pos: [180, 187, 192] ccc => cc, Pos: [181, 185] cc => I, Pos: [181, 185] cc => I, Pos: [182, 194, 204] ccc => cc, Pos: [189, 195] cc => I, Pos: [189, 195] cc => I, Pos: [191, 197] cc => I, Pos: [191, 197] cc => I, Pos: [198, 201] cc => I, Pos: [198, 201] cc => I, Pos: [206, 209] cc => I, Pos: [206, 209] cc => I, Pos: [216, 219] cc => I, Pos: [216, 219] cc => I]

--------End Timer [Generate Plans]:  0.09399104118347168

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 9, 12] ccc => cc,
 Pos: [8, 24] cc => I,
 Pos: [10, 13] cc => I,
 Pos: [14, 18, 21] ccc => cc,
 Pos: [33, 42] cc => I,
 Pos: [44, 47] cc => I,
 Pos: [57, 61, 65] ccc => cc,
 Pos: [66, 76] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [73, 87] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [81, 88] cc => I,
 Pos: [84, 90] cc => I,
 Pos: [94, 97] cc => I,
 Pos: [98, 103] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [108, 118] cc => I,
 Pos: [112, 120] cc => I,
 Pos: [136, 141] cc => I,
 Pos: [140, 151] cc => I,
 Pos: [143, 149] cc => I,
 Pos: [145, 147] cc => I,
 Pos: [146, 152] cc => I,
 Pos: [165, 169] cc => I,
 Pos: [157, 163] cc => I,
 Pos: [167, 174] cc => I,
 Pos: [164, 176] cc => I,
 Pos: [170, 182] cc => I,
 Pos: [180, 187, 192] ccc => cc,
 Pos: [181, 185] cc => I,
 Pos: [189, 195] cc => I,
 Pos: [191, 197] cc => I,
 Pos: [198, 201] cc => I,
 Pos: [206, 209] cc => I,
 Pos: [216, 219] cc => I]
Change: 35, Saving: 35

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 9, 12] ccc => cc
Apply:  Pos: [8, 24] cc => I
Apply:  Pos: [10, 13] cc => I
Apply:  Pos: [14, 18, 21] ccc => cc
Apply:  Pos: [33, 42] cc => I
Apply:  Pos: [44, 47] cc => I
Apply:  Pos: [57, 61, 65] ccc => cc
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [73, 87] cc => I
Apply:  Pos: [75, 79] cc => I
Apply:  Pos: [81, 88] cc => I
Apply:  Pos: [84, 90] cc => I
Apply:  Pos: [94, 97] cc => I
Apply:  Pos: [98, 103] cc => I
Apply:  Pos: [105, 110] cc => I
Apply:  Pos: [108, 118] cc => I
Apply:  Pos: [112, 120] cc => I
Apply:  Pos: [136, 141] cc => I
Apply:  Pos: [140, 151] cc => I
Apply:  Pos: [143, 149] cc => I
Apply:  Pos: [145, 147] cc => I
Apply:  Pos: [146, 152] cc => I
Apply:  Pos: [165, 169] cc => I
Apply:  Pos: [157, 163] cc => I
Apply:  Pos: [167, 174] cc => I
Apply:  Pos: [164, 176] cc => I
Apply:  Pos: [170, 182] cc => I
Apply:  Pos: [180, 187, 192] ccc => cc
Apply:  Pos: [181, 185] cc => I
Apply:  Pos: [189, 195] cc => I
Apply:  Pos: [191, 197] cc => I
Apply:  Pos: [198, 201] cc => I
Apply:  Pos: [206, 209] cc => I
Apply:  Pos: [216, 219] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [12, 5], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [1, 8], [10, 4], [6, 15], [4, 1], [14, 17], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [12, 5], [4, 13], [1, 8], [8, 15], [14, 17], [18, 5], [0, 6], [10, 1], [7, 16], [1, 8], [4, 6], [16, 18], [7, 17], [8, 15], [14, 16], [2, 10], [9, 5], [13, 3], [6, 8], [17, 12], [7, 14], [10, 4], [5, 11], [14, 17], [14, 16], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [12, 5], [9, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 10], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [3, 15], [9, 5], [7, 17], [10, 1], [14, 17], [7, 16], [5, 11], [2, 10], [14, 16], [1, 8], [10, 4], [19, 7], [9, 5], [4, 6], [2, 10], [19, 1], [10, 4], [18, 5], [8, 9], [3, 9], [5, 11], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 16], [17, 8], [14, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [14, 17], [1, 8], [5, 11], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  4.328413963317871

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 38]
[31, 42]
[99, 114]
[129, 154]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[102, 112, 116]
[110, 115, 121]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[52, 58, 61]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 38]
[31, 42]
[99, 114]
[129, 154]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.734251022338867

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 38] cc => I, Pos: [20, 38] cc => I, Pos: [31, 42] cc => I, Pos: [31, 42] cc => I, Pos: [52, 58, 61] ccc => cc, Pos: [99, 114] cc => I, Pos: [99, 114] cc => I, Pos: [102, 112, 116] ccc => cc, Pos: [110, 115, 121] ccc => cc, Pos: [129, 154] cc => I, Pos: [129, 154] cc => I]

--------End Timer [Generate Plans]:  0.031235456466674805

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 38] cc => I,
 Pos: [31, 42] cc => I,
 Pos: [52, 58, 61] ccc => cc,
 Pos: [99, 114] cc => I,
 Pos: [102, 112, 116] ccc => cc,
 Pos: [110, 115, 121] ccc => cc,
 Pos: [129, 154] cc => I]
Change: 7, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 38] cc => I
Apply:  Pos: [31, 42] cc => I
Apply:  Pos: [52, 58, 61] ccc => cc
Apply:  Pos: [99, 114] cc => I
Apply:  Pos: [102, 112, 116] ccc => cc
Apply:  Pos: [110, 115, 121] ccc => cc
Apply:  Pos: [129, 154] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [4, 13], [1, 8], [8, 15], [18, 5], [0, 6], [10, 1], [7, 16], [1, 8], [4, 6], [16, 18], [7, 17], [8, 15], [7, 14], [2, 10], [9, 5], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [9, 5], [12, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [3, 15], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [14, 16], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [19, 1], [10, 4], [18, 5], [3, 9], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 16], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [14, 17], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.765486478805542

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[25, 48]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[134, 135, 142]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[25, 48]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.531217098236084

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [25, 48] cc => I, Pos: [25, 48] cc => I, Pos: [134, 135, 142] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [25, 48] cc => I, Pos: [134, 135, 142] ccc => cc]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [25, 48] cc => I
Apply:  Pos: [134, 135, 142] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [4, 13], [1, 8], [8, 15], [18, 5], [0, 6], [10, 1], [7, 16], [1, 8], [4, 6], [16, 18], [7, 17], [8, 15], [2, 10], [9, 5], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [12, 5], [9, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [3, 15], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [14, 16], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [19, 1], [10, 4], [18, 5], [8, 9], [3, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 17], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.531217098236084

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.453150510787964

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [4, 13], [1, 8], [8, 15], [18, 5], [0, 6], [10, 1], [7, 16], [1, 8], [4, 6], [16, 18], [7, 17], [8, 15], [2, 10], [9, 5], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [9, 5], [12, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [3, 15], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [14, 16], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [19, 1], [10, 4], [18, 5], [3, 9], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 17], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.453150510787964

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [145] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 290

Reduced: 
 - size: 80 (35.56%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09353852272033691

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [8, 9], [4, 6], [19, 7], [2, 10], [17, 8], [12, 18], [19, 4], [8, 9], [12, 18], [14, 17], [4, 1], [15, 9], [18, 11], [7, 14], [2, 0], [4, 13], [14, 17], [8, 15], [19, 1], [2, 10], [13, 3], [12, 5], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [9, 5], [1, 8], [10, 4], [6, 15], [4, 1], [14, 17], [2, 10], [8, 15], [19, 4], [9, 5], [0, 13], [14, 17], [10, 1], [3, 15], [14, 17], [12, 5], [4, 13], [1, 8], [8, 15], [14, 17], [18, 5], [0, 6], [10, 1], [7, 16], [8, 15], [4, 6], [16, 18], [7, 17], [1, 8], [14, 16], [2, 10], [9, 5], [8, 15], [10, 19], [13, 3], [18, 5], [6, 8], [17, 12], [7, 14], [10, 4], [2, 0], [18, 5], [1, 8], [10, 19], [5, 11], [14, 17], [1, 8], [14, 16], [3, 15], [13, 6], [19, 4], [2, 10], [8, 9], [12, 18], [2, 0], [3, 15], [6, 9], [2, 10], [18, 5], [0, 13], [1, 12], [6, 15], [17, 8], [12, 5], [6, 15], [18, 11], [9, 5], [7, 16], [19, 1], [0, 6], [18, 11], [10, 1], [7, 17], [3, 15], [0, 4], [19, 1], [6, 15], [7, 17], [8, 9], [5, 11], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [19, 1], [17, 8], [5, 11], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 10], [14, 16], [6, 9], [8, 12], [0, 4], [19, 7], [14, 16], [12, 11], [1, 8], [13, 6], [2, 0], [14, 16], [2, 0], [17, 12], [1, 8], [3, 15], [19, 7], [14, 16], [9, 5], [7, 17], [10, 1], [14, 17], [0, 6], [7, 16], [5, 11], [2, 10], [14, 16], [1, 8], [0, 6], [12, 11], [3, 15], [10, 4], [14, 16], [19, 7], [3, 15], [0, 13], [9, 5], [4, 6], [2, 10], [14, 16], [19, 1], [12, 11], [10, 4], [18, 5], [8, 9], [3, 15], [7, 14], [0, 13], [5, 11], [1, 12], [7, 14], [10, 19], [15, 9], [17, 16], [0, 4], [8, 12], [19, 7], [3, 15], [14, 17], [13, 6], [0, 4], [16, 18], [19, 7], [12, 5], [1, 17], [19, 1], [12, 5], [7, 17], [1, 8], [0, 13], [17, 16], [18, 11], [17, 8], [14, 16], [18, 11], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [13, 3], [14, 17], [1, 8], [13, 3], [5, 11], [16, 18], [4, 1], [19, 7], [13, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[8, 24]
[33, 42]
[38, 44]
[44, 47]
[47, 52]
[51, 57]
[68, 74]
[66, 76]
[75, 79]
[73, 87]
[81, 88]
[84, 90]
[94, 97]
[98, 103]
[105, 110]
[108, 118]
[112, 120]
[136, 141]
[141, 146]
[145, 147]
[143, 149]
[140, 151]
[146, 152]
[157, 163]
[150, 165]
[161, 167]
[165, 169]
[167, 174]
[164, 176]
[169, 180]
[170, 182]
[181, 185]
[189, 195]
[191, 197]
[198, 201]
[206, 209]
[216, 219]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 17, 31]
[180, 187, 192]
[182, 194, 204]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 9, 12]
[14, 18, 21]
[57, 61, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 13]
[8, 24]
[33, 42]
[38, 44]
[44, 47]
[47, 52]
[51, 57]
[68, 74]
[66, 76]
[75, 79]
[73, 87]
[81, 88]
[84, 90]
[94, 97]
[98, 103]
[105, 110]
[108, 118]
[112, 120]
[136, 141]
[141, 146]
[145, 147]
[143, 149]
[140, 151]
[146, 152]
[157, 163]
[150, 165]
[161, 167]
[165, 169]
[167, 174]
[164, 176]
[169, 180]
[170, 182]
[181, 185]
[189, 195]
[191, 197]
[198, 201]
[206, 209]
[216, 219]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.203171730041504

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 9, 12] ccc => cc, Pos: [8, 24] cc => I, Pos: [8, 24] cc => I, Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [13, 17, 31] ccc => cc, Pos: [14, 18, 21] ccc => cc, Pos: [33, 42] cc => I, Pos: [33, 42] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [44, 47] cc => I, Pos: [44, 47] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [51, 57] cc => I, Pos: [51, 57] cc => I, Pos: [57, 61, 65] ccc => cc, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [73, 87] cc => I, Pos: [73, 87] cc => I, Pos: [75, 79] cc => I, Pos: [75, 79] cc => I, Pos: [81, 88] cc => I, Pos: [81, 88] cc => I, Pos: [84, 90] cc => I, Pos: [84, 90] cc => I, Pos: [94, 97] cc => I, Pos: [94, 97] cc => I, Pos: [98, 103] cc => I, Pos: [98, 103] cc => I, Pos: [105, 110] cc => I, Pos: [105, 110] cc => I, Pos: [108, 118] cc => I, Pos: [108, 118] cc => I, Pos: [112, 120] cc => I, Pos: [112, 120] cc => I, Pos: [136, 141] cc => I, Pos: [136, 141] cc => I, Pos: [140, 151] cc => I, Pos: [140, 151] cc => I, Pos: [141, 146] cc => I, Pos: [141, 146] cc => I, Pos: [143, 149] cc => I, Pos: [143, 149] cc => I, Pos: [145, 147] cc => I, Pos: [145, 147] cc => I, Pos: [146, 152] cc => I, Pos: [146, 152] cc => I, Pos: [150, 165] cc => I, Pos: [150, 165] cc => I, Pos: [157, 163] cc => I, Pos: [157, 163] cc => I, Pos: [161, 167] cc => I, Pos: [161, 167] cc => I, Pos: [164, 176] cc => I, Pos: [164, 176] cc => I, Pos: [165, 169] cc => I, Pos: [165, 169] cc => I, Pos: [167, 174] cc => I, Pos: [167, 174] cc => I, Pos: [169, 180] cc => I, Pos: [169, 180] cc => I, Pos: [170, 182] cc => I, Pos: [170, 182] cc => I, Pos: [180, 187, 192] ccc => cc, Pos: [181, 185] cc => I, Pos: [181, 185] cc => I, Pos: [182, 194, 204] ccc => cc, Pos: [189, 195] cc => I, Pos: [189, 195] cc => I, Pos: [191, 197] cc => I, Pos: [191, 197] cc => I, Pos: [198, 201] cc => I, Pos: [198, 201] cc => I, Pos: [206, 209] cc => I, Pos: [206, 209] cc => I, Pos: [216, 219] cc => I, Pos: [216, 219] cc => I]

Plan: 1
[Pos: [5, 9, 12] ccc => cc,
 Pos: [8, 24] cc => I,
 Pos: [10, 13] cc => I,
 Pos: [14, 18, 21] ccc => cc,
 Pos: [33, 42] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [73, 87] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [81, 88] cc => I,
 Pos: [84, 90] cc => I,
 Pos: [94, 97] cc => I,
 Pos: [98, 103] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [108, 118] cc => I,
 Pos: [112, 120] cc => I,
 Pos: [136, 141] cc => I,
 Pos: [140, 151] cc => I,
 Pos: [143, 149] cc => I,
 Pos: [145, 147] cc => I,
 Pos: [146, 152] cc => I,
 Pos: [150, 165] cc => I,
 Pos: [157, 163] cc => I,
 Pos: [161, 167] cc => I,
 Pos: [164, 176] cc => I,
 Pos: [169, 180] cc => I,
 Pos: [170, 182] cc => I,
 Pos: [181, 185] cc => I,
 Pos: [189, 195] cc => I,
 Pos: [191, 197] cc => I,
 Pos: [198, 201] cc => I,
 Pos: [206, 209] cc => I,
 Pos: [216, 219] cc => I]
Change: 36, Saving: 36

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.07812881469726562

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 9, 12] ccc => cc,
 Pos: [8, 24] cc => I,
 Pos: [10, 13] cc => I,
 Pos: [14, 18, 21] ccc => cc,
 Pos: [33, 42] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [51, 57] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [73, 87] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [81, 88] cc => I,
 Pos: [84, 90] cc => I,
 Pos: [94, 97] cc => I,
 Pos: [98, 103] cc => I,
 Pos: [105, 110] cc => I,
 Pos: [108, 118] cc => I,
 Pos: [112, 120] cc => I,
 Pos: [136, 141] cc => I,
 Pos: [140, 151] cc => I,
 Pos: [143, 149] cc => I,
 Pos: [145, 147] cc => I,
 Pos: [146, 152] cc => I,
 Pos: [150, 165] cc => I,
 Pos: [157, 163] cc => I,
 Pos: [161, 167] cc => I,
 Pos: [164, 176] cc => I,
 Pos: [169, 180] cc => I,
 Pos: [170, 182] cc => I,
 Pos: [181, 185] cc => I,
 Pos: [189, 195] cc => I,
 Pos: [191, 197] cc => I,
 Pos: [198, 201] cc => I,
 Pos: [206, 209] cc => I,
 Pos: [216, 219] cc => I]
Change: 36, Saving: 36

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 9, 12] ccc => cc
Apply:  Pos: [8, 24] cc => I
Apply:  Pos: [10, 13] cc => I
Apply:  Pos: [14, 18, 21] ccc => cc
Apply:  Pos: [33, 42] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [51, 57] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [73, 87] cc => I
Apply:  Pos: [75, 79] cc => I
Apply:  Pos: [81, 88] cc => I
Apply:  Pos: [84, 90] cc => I
Apply:  Pos: [94, 97] cc => I
Apply:  Pos: [98, 103] cc => I
Apply:  Pos: [105, 110] cc => I
Apply:  Pos: [108, 118] cc => I
Apply:  Pos: [112, 120] cc => I
Apply:  Pos: [136, 141] cc => I
Apply:  Pos: [140, 151] cc => I
Apply:  Pos: [143, 149] cc => I
Apply:  Pos: [145, 147] cc => I
Apply:  Pos: [146, 152] cc => I
Apply:  Pos: [150, 165] cc => I
Apply:  Pos: [157, 163] cc => I
Apply:  Pos: [161, 167] cc => I
Apply:  Pos: [164, 176] cc => I
Apply:  Pos: [169, 180] cc => I
Apply:  Pos: [170, 182] cc => I
Apply:  Pos: [181, 185] cc => I
Apply:  Pos: [189, 195] cc => I
Apply:  Pos: [191, 197] cc => I
Apply:  Pos: [198, 201] cc => I
Apply:  Pos: [206, 209] cc => I
Apply:  Pos: [216, 219] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.01564168930053711

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [12, 5], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 1], [3, 15], [12, 5], [4, 13], [1, 8], [18, 5], [0, 6], [10, 1], [7, 16], [4, 6], [16, 18], [7, 17], [1, 8], [14, 16], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [7, 14], [10, 4], [5, 11], [14, 17], [14, 16], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [12, 5], [9, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [7, 16], [4, 6], [12, 18], [2, 10], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 5], [7, 17], [10, 1], [14, 17], [7, 16], [5, 11], [2, 10], [1, 8], [10, 4], [19, 7], [9, 5], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [5, 11], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 16], [17, 8], [14, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [14, 17], [1, 8], [5, 11], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  4.296942234039307

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 37]
[96, 110]
[124, 150]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[35, 39, 42]
[99, 108, 112]
[106, 111, 116]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[39, 42, 47]
[48, 55, 58]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 37]
[96, 110]
[124, 150]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6405649185180664

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 37] cc => I, Pos: [20, 37] cc => I, Pos: [35, 39, 42] ccc => cc, Pos: [39, 42, 47] ccc => cc, Pos: [48, 55, 58] ccc => cc, Pos: [96, 110] cc => I, Pos: [96, 110] cc => I, Pos: [99, 108, 112] ccc => cc, Pos: [106, 111, 116] ccc => cc, Pos: [124, 150] cc => I, Pos: [124, 150] cc => I]

Plan: 1
[Pos: [20, 37] cc => I,
 Pos: [35, 39, 42] ccc => cc,
 Pos: [48, 55, 58] ccc => cc,
 Pos: [96, 110] cc => I,
 Pos: [99, 108, 112] ccc => cc,
 Pos: [106, 111, 116] ccc => cc,
 Pos: [124, 150] cc => I]
Change: 7, Saving: 8

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015624523162841797

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 37] cc => I,
 Pos: [35, 39, 42] ccc => cc,
 Pos: [48, 55, 58] ccc => cc,
 Pos: [96, 110] cc => I,
 Pos: [99, 108, 112] ccc => cc,
 Pos: [106, 111, 116] ccc => cc,
 Pos: [124, 150] cc => I]
Change: 7, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 37] cc => I
Apply:  Pos: [35, 39, 42] ccc => cc
Apply:  Pos: [48, 55, 58] ccc => cc
Apply:  Pos: [96, 110] cc => I
Apply:  Pos: [99, 108, 112] ccc => cc
Apply:  Pos: [106, 111, 116] ccc => cc
Apply:  Pos: [124, 150] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [7, 14], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 8], [3, 15], [4, 13], [1, 8], [18, 5], [0, 6], [7, 16], [4, 6], [16, 18], [7, 17], [1, 8], [7, 14], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [9, 5], [12, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 16], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [14, 17], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.656189441680908

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 44]
[25, 45]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[131, 132, 139]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 44]
[25, 45]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4063498973846436

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [25, 45] cc => I, Pos: [25, 45] cc => I, Pos: [37, 44] cc => I, Pos: [37, 44] cc => I, Pos: [131, 132, 139] ccc => cc]

Plan: 1
[Pos: [25, 45] cc => I, Pos: [37, 44] cc => I, Pos: [131, 132, 139] ccc => cc]
Change: 3, Saving: 3

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015516042709350586

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [25, 45] cc => I, Pos: [37, 44] cc => I, Pos: [131, 132, 139] ccc => cc]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [25, 45] cc => I
Apply:  Pos: [37, 44] cc => I
Apply:  Pos: [131, 132, 139] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 8], [3, 15], [4, 13], [18, 5], [0, 6], [7, 16], [4, 6], [16, 18], [7, 17], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [12, 5], [9, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 17], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.421865940093994

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3438210487365723

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[7, 16], [14, 17], [10, 1], [5, 11], [0, 13], [17, 8], [4, 6], [19, 7], [8, 9], [19, 4], [7, 14], [4, 1], [15, 9], [18, 11], [14, 17], [2, 0], [4, 13], [8, 15], [19, 1], [13, 3], [17, 8], [10, 1], [19, 4], [13, 6], [12, 18], [1, 8], [10, 4], [6, 15], [4, 1], [2, 10], [8, 15], [19, 4], [0, 13], [10, 8], [3, 15], [4, 13], [18, 5], [0, 6], [7, 16], [4, 6], [16, 18], [7, 17], [2, 10], [9, 5], [8, 15], [13, 3], [6, 8], [17, 12], [14, 16], [10, 4], [5, 11], [14, 17], [13, 6], [19, 4], [8, 9], [12, 18], [6, 9], [18, 5], [0, 13], [1, 12], [17, 8], [9, 5], [12, 5], [7, 16], [19, 1], [0, 6], [10, 1], [3, 15], [0, 4], [6, 15], [8, 9], [19, 4], [13, 6], [16, 18], [17, 12], [7, 14], [17, 8], [13, 3], [0, 4], [6, 9], [2, 10], [19, 7], [1, 8], [2, 0], [18, 5], [10, 4], [6, 15], [12, 11], [4, 6], [12, 18], [2, 1], [6, 9], [8, 12], [0, 4], [12, 11], [13, 6], [17, 12], [9, 11], [7, 17], [10, 1], [14, 17], [5, 11], [1, 8], [10, 4], [19, 7], [4, 6], [2, 10], [14, 16], [19, 1], [10, 4], [18, 5], [8, 9], [1, 12], [10, 19], [15, 9], [17, 16], [8, 12], [3, 15], [14, 17], [13, 6], [16, 18], [1, 17], [19, 1], [7, 17], [1, 8], [0, 13], [17, 8], [14, 17], [17, 16], [4, 6], [10, 19], [8, 15], [0, 6], [19, 1], [10, 4], [1, 8], [16, 18], [4, 1], [19, 7], [13, 6], ----End Timer [Execute Mapping]:  2.3438210487365723

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [140] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 280

Reduced: 
 - size: 85 (37.78%)
 - depth: 11 (24.44%)

