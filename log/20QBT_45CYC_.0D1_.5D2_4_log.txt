----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09448099136352539

[5, 1], [18, 10], [8, 9], [17, 4], [12, 14], [5, 1], [8, 9], [6, 17], [12, 14], [7, 10], [2, 16], [1, 6], [11, 15], [8, 9], [16, 12], [10, 14], [1, 17], [8, 9], [4, 12], [2, 16], [10, 0], [18, 7], [17, 4], [11, 8], [10, 14], [16, 12], [2, 13], [9, 15], [5, 1], [1, 17], [0, 9], [2, 16], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [1, 17], [6, 2], [16, 3], [9, 15], [1, 17], [16, 11], [8, 15], [12, 0], [10, 14], [1, 6], [2, 16], [8, 15], [10, 12], [6, 2], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [6, 4], [6, 2], [11, 15], [7, 10], [1, 4], [6, 4], [8, 9], [1, 17], [12, 14], [2, 3], [7, 19], [18, 10], [4, 11], [6, 17], [5, 1], [9, 15], [7, 19], [10, 14], [11, 8], [17, 10], [13, 16], [8, 15], [5, 1], [16, 11], [18, 7], [2, 13], [6, 17], [10, 14], [9, 15], [18, 17], [12, 11], [1, 4], [19, 14], [9, 15], [2, 13], [12, 11], [8, 15], [6, 4], [2, 3], [19, 14], [5, 18], [7, 10], [1, 17], [8, 15], [17, 7], [5, 1], [10, 14], [6, 4], [8, 15], [1, 4], [10, 0], [12, 11], [18, 17], [6, 2], [11, 8], [14, 0], [2, 3], [5, 1], [18, 17], [13, 16], [4, 12], [12, 11], [7, 19], [3, 8], [10, 14], [4, 16], [2, 13], [12, 11], [1, 17], [8, 15], [6, 2], [7, 19], [10, 0], [16, 12], [10, 14], [18, 7], [2, 13], [12, 0], [18, 7], [8, 9], [0, 9], [2, 13], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [11, 15], [10, 14], [13, 3], [18, 7], [1, 6], [2, 16], [11, 15], [16, 3], [10, 14], [17, 7], [11, 9], [16, 3], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 7], [3, 8], [4, 12], [1, 6], [11, 8], [14, 0], [9, 15], [10, 12], [17, 4], [16, 3], [7, 19], [1, 6], [9, 15], [18, 10], [4, 16], [8, 15], [12, 14], [6, 17], [18, 10], [9, 15], [1, 17], [4, 12], [18, 7], [2, 3], [17, 10], [16, 11], [7, 19], [6, 17], [11, 9], [19, 14], [17, 7], [2, 3], [4, 11], [9, 15], [10, 14], [18, 7], [8, 9], [10, 14], [11, 8], [0, 9], [2, 3], [18, 17], [16, 12], [14, 0], [18, 17], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [11, 8], [4, 12], [18, 7], [13, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[2, 6]
[4, 8]
[6, 13]
[13, 17]
[15, 24]
[29, 37]
[37, 41]
[43, 48]
[49, 51]
[41, 63]
[66, 72]
[70, 78]
[84, 89]
[81, 90]
[86, 91]
[65, 94]
[88, 95]
[92, 99]
[93, 103]
[99, 104]
[91, 107]
[108, 114]
[117, 123]
[118, 127]
[120, 130]
[131, 134]
[132, 137]
[134, 138]
[147, 152]
[152, 158]
[153, 160]
[159, 163]
[156, 174]
[174, 182]
[177, 183]
[184, 189]
[194, 202]
[205, 208]
[202, 211]
[212, 215]
[209, 221]
[206, 223]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[19, 25, 31]
[32, 44, 49]
[50, 54, 57]
[171, 181, 193]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[94, 109, 112]
[122, 126, 132]
[181, 193, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[201, 206, 212]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[2, 6]
[4, 8]
[6, 13]
[13, 17]
[15, 24]
[29, 37]
[37, 41]
[43, 48]
[49, 51]
[41, 63]
[66, 72]
[70, 78]
[84, 89]
[81, 90]
[86, 91]
[65, 94]
[88, 95]
[92, 99]
[93, 103]
[99, 104]
[91, 107]
[108, 114]
[117, 123]
[118, 127]
[120, 130]
[131, 134]
[132, 137]
[134, 138]
[147, 152]
[152, 158]
[153, 160]
[159, 163]
[156, 174]
[174, 182]
[177, 183]
[184, 189]
[194, 202]
[205, 208]
[202, 211]
[212, 215]
[209, 221]
[206, 223]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.202269554138184

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] cc => I, Pos: [0, 5] cc => I, Pos: [2, 6] cc => I, Pos: [2, 6] cc => I, Pos: [4, 8] cc => I, Pos: [4, 8] cc => I, Pos: [6, 13] cc => I, Pos: [6, 13] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [15, 24] cc => I, Pos: [15, 24] cc => I, Pos: [19, 25, 31] ccc => cc, Pos: [29, 37] cc => I, Pos: [29, 37] cc => I, Pos: [32, 44, 49] ccc => cc, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [41, 63] cc => I, Pos: [41, 63] cc => I, Pos: [43, 48] cc => I, Pos: [43, 48] cc => I, Pos: [49, 51] cc => I, Pos: [49, 51] cc => I, Pos: [50, 54, 57] ccc => cc, Pos: [65, 94] cc => I, Pos: [65, 94] cc => I, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [70, 78] cc => I, Pos: [70, 78] cc => I, Pos: [81, 90] cc => I, Pos: [81, 90] cc => I, Pos: [84, 89] cc => I, Pos: [84, 89] cc => I, Pos: [86, 91] cc => I, Pos: [86, 91] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [91, 107] cc => I, Pos: [91, 107] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [93, 103] cc => I, Pos: [93, 103] cc => I, Pos: [94, 109, 112] ccc => cc, Pos: [99, 104] cc => I, Pos: [99, 104] cc => I, Pos: [108, 114] cc => I, Pos: [108, 114] cc => I, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [118, 127] cc => I, Pos: [118, 127] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [122, 126, 132] ccc => cc, Pos: [131, 134] cc => I, Pos: [131, 134] cc => I, Pos: [132, 137] cc => I, Pos: [132, 137] cc => I, Pos: [134, 138] cc => I, Pos: [134, 138] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [152, 158] cc => I, Pos: [152, 158] cc => I, Pos: [153, 160] cc => I, Pos: [153, 160] cc => I, Pos: [156, 174] cc => I, Pos: [156, 174] cc => I, Pos: [159, 163] cc => I, Pos: [159, 163] cc => I, Pos: [171, 181, 193] ccc => cc, Pos: [174, 182] cc => I, Pos: [174, 182] cc => I, Pos: [177, 183] cc => I, Pos: [177, 183] cc => I, Pos: [181, 193, 197] ccc => cc, Pos: [184, 189] cc => I, Pos: [184, 189] cc => I, Pos: [194, 202] cc => I, Pos: [194, 202] cc => I, Pos: [201, 206, 212] ccc => cc, Pos: [202, 211] cc => I, Pos: [202, 211] cc => I, Pos: [205, 208] cc => I, Pos: [205, 208] cc => I, Pos: [206, 223] cc => I, Pos: [206, 223] cc => I, Pos: [209, 221] cc => I, Pos: [209, 221] cc => I, Pos: [212, 215] cc => I, Pos: [212, 215] cc => I]

Plan: 1
[Pos: [0, 5] cc => I,
 Pos: [2, 6] cc => I,
 Pos: [4, 8] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [15, 24] cc => I,
 Pos: [19, 25, 31] ccc => cc,
 Pos: [29, 37] cc => I,
 Pos: [32, 44, 49] ccc => cc,
 Pos: [41, 63] cc => I,
 Pos: [43, 48] cc => I,
 Pos: [50, 54, 57] ccc => cc,
 Pos: [65, 94] cc => I,
 Pos: [66, 72] cc => I,
 Pos: [70, 78] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [84, 89] cc => I,
 Pos: [86, 91] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [93, 103] cc => I,
 Pos: [108, 114] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [118, 127] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [122, 126, 132] ccc => cc,
 Pos: [131, 134] cc => I,
 Pos: [147, 152] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [156, 174] cc => I,
 Pos: [159, 163] cc => I,
 Pos: [171, 181, 193] ccc => cc,
 Pos: [177, 183] cc => I,
 Pos: [184, 189] cc => I,
 Pos: [194, 202] cc => I,
 Pos: [201, 206, 212] ccc => cc,
 Pos: [205, 208] cc => I,
 Pos: [209, 221] cc => I]
Change: 37, Saving: 136

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 5] cc => I,
 Pos: [2, 6] cc => I,
 Pos: [4, 8] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [15, 24] cc => I,
 Pos: [19, 25, 31] ccc => cc,
 Pos: [29, 37] cc => I,
 Pos: [32, 44, 49] ccc => cc,
 Pos: [41, 63] cc => I,
 Pos: [43, 48] cc => I,
 Pos: [50, 54, 57] ccc => cc,
 Pos: [65, 94] cc => I,
 Pos: [66, 72] cc => I,
 Pos: [70, 78] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [84, 89] cc => I,
 Pos: [86, 91] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [93, 103] cc => I,
 Pos: [108, 114] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [118, 127] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [122, 126, 132] ccc => cc,
 Pos: [131, 134] cc => I,
 Pos: [147, 152] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [156, 174] cc => I,
 Pos: [159, 163] cc => I,
 Pos: [171, 181, 193] ccc => cc,
 Pos: [177, 183] cc => I,
 Pos: [184, 189] cc => I,
 Pos: [194, 202] cc => I,
 Pos: [201, 206, 212] ccc => cc,
 Pos: [205, 208] cc => I,
 Pos: [209, 221] cc => I]
Change: 37, Saving: 136

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 5] cc => I
Apply:  Pos: [2, 6] cc => I
Apply:  Pos: [4, 8] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [15, 24] cc => I
Apply:  Pos: [19, 25, 31] ccc => cc
Apply:  Pos: [29, 37] cc => I
Apply:  Pos: [32, 44, 49] ccc => cc
Apply:  Pos: [41, 63] cc => I
Apply:  Pos: [43, 48] cc => I
Apply:  Pos: [50, 54, 57] ccc => cc
Apply:  Pos: [65, 94] cc => I
Apply:  Pos: [66, 72] cc => I
Apply:  Pos: [70, 78] cc => I
Apply:  Pos: [81, 90] cc => I
Apply:  Pos: [84, 89] cc => I
Apply:  Pos: [86, 91] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [93, 103] cc => I
Apply:  Pos: [108, 114] cc => I
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [118, 127] cc => I
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [122, 126, 132] ccc => cc
Apply:  Pos: [131, 134] cc => I
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [153, 160] cc => I
Apply:  Pos: [156, 174] cc => I
Apply:  Pos: [159, 163] cc => I
Apply:  Pos: [171, 181, 193] ccc => cc
Apply:  Pos: [177, 183] cc => I
Apply:  Pos: [184, 189] cc => I
Apply:  Pos: [194, 202] cc => I
Apply:  Pos: [201, 206, 212] ccc => cc
Apply:  Pos: [205, 208] cc => I
Apply:  Pos: [209, 221] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [4, 12], [2, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [6, 4], [11, 15], [7, 10], [1, 4], [6, 4], [8, 9], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [8, 15], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [1, 4], [5, 18], [7, 10], [1, 17], [17, 7], [5, 1], [10, 14], [8, 15], [1, 4], [10, 0], [12, 11], [6, 2], [11, 8], [14, 0], [2, 3], [5, 1], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [1, 17], [8, 15], [2, 13], [10, 0], [16, 12], [12, 0], [8, 9], [0, 9], [2, 13], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [7, 19], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [17, 10], [16, 11], [7, 19], [6, 17], [11, 9], [19, 14], [18, 17], [4, 11], [9, 15], [17, 7], [8, 9], [0, 9], [2, 3], [16, 12], [14, 0], [18, 17], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [18, 7], [13, 16], ----End Timer [Execute Mapping]:  4.202269554138184

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 42]
[54, 67]
[83, 89]
[124, 135]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[65, 68, 75]
[139, 142, 148]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 42]
[54, 67]
[83, 89]
[124, 135]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7034318447113037

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [39, 42] cc => I, Pos: [39, 42] cc => I, Pos: [54, 67] cc => I, Pos: [54, 67] cc => I, Pos: [65, 68, 75] ccc => cc, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [124, 135] cc => I, Pos: [124, 135] cc => I, Pos: [139, 142, 148] ccc => cc]

Plan: 1
[Pos: [39, 42] cc => I,
 Pos: [54, 67] cc => I,
 Pos: [65, 68, 75] ccc => cc,
 Pos: [83, 89] cc => I,
 Pos: [124, 135] cc => I,
 Pos: [139, 142, 148] ccc => cc]
Change: 6, Saving: 20

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [39, 42] cc => I,
 Pos: [54, 67] cc => I,
 Pos: [65, 68, 75] ccc => cc,
 Pos: [83, 89] cc => I,
 Pos: [124, 135] cc => I,
 Pos: [139, 142, 148] ccc => cc]
Change: 6, Saving: 20

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [39, 42] cc => I
Apply:  Pos: [54, 67] cc => I
Apply:  Pos: [65, 68, 75] ccc => cc
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [124, 135] cc => I
Apply:  Pos: [139, 142, 148] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [2, 12], [4, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [1, 4], [5, 18], [7, 10], [1, 17], [17, 7], [5, 4], [10, 14], [1, 4], [10, 0], [12, 11], [6, 2], [11, 8], [14, 0], [2, 3], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [1, 17], [8, 15], [10, 0], [16, 12], [12, 0], [0, 9], [8, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 4], [6, 17], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [18, 7], [4, 11], [9, 15], [17, 7], [0, 9], [8, 9], [2, 3], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [18, 7], [13, 16], ----End Timer [Execute Mapping]:  2.7034318447113037

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[91, 104]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[60, 61, 76]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[91, 104]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4686899185180664

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [60, 61, 76] ccc => cc, Pos: [91, 104] cc => I, Pos: [91, 104] cc => I]

Plan: 1
[Pos: [60, 61, 76] ccc => cc, Pos: [91, 104] cc => I]
Change: 2, Saving: 6

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [60, 61, 76] ccc => cc, Pos: [91, 104] cc => I]
Change: 2, Saving: 6

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [60, 61, 76] ccc => cc
Apply:  Pos: [91, 104] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [4, 12], [2, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [1, 4], [5, 18], [7, 10], [1, 7], [17, 7], [5, 4], [10, 14], [1, 4], [10, 0], [12, 11], [6, 2], [11, 8], [14, 0], [2, 3], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [8, 15], [10, 0], [16, 12], [12, 0], [8, 9], [0, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [6, 4], [6, 17], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [18, 7], [4, 11], [9, 15], [17, 7], [8, 9], [0, 9], [2, 3], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [18, 7], [13, 16], ----End Timer [Execute Mapping]:  2.4686899185180664

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4219651222229004

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [2, 12], [4, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [1, 4], [5, 18], [7, 10], [17, 7], [1, 7], [5, 4], [10, 14], [1, 4], [10, 0], [12, 11], [6, 2], [11, 8], [14, 0], [2, 3], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [8, 15], [10, 0], [16, 12], [12, 0], [0, 9], [8, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [6, 17], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [18, 7], [4, 11], [9, 15], [17, 7], [0, 9], [8, 9], [2, 3], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [18, 7], [13, 16], ----End Timer [Execute Mapping]:  2.4219651222229004

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [144] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 288

Reduced: 
 - size: 81 (36.00%)
 - cycle: 162 (36.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374713897705078

[5, 1], [18, 10], [8, 9], [17, 4], [12, 14], [5, 1], [8, 9], [6, 17], [12, 14], [7, 10], [2, 16], [1, 6], [11, 15], [8, 9], [16, 12], [10, 14], [1, 17], [8, 9], [4, 12], [2, 16], [10, 0], [18, 7], [17, 4], [11, 8], [10, 14], [16, 12], [2, 13], [9, 15], [5, 1], [1, 17], [0, 9], [2, 16], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [1, 17], [6, 2], [16, 3], [9, 15], [1, 17], [16, 11], [8, 15], [12, 0], [10, 14], [1, 6], [2, 16], [8, 15], [10, 12], [6, 2], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [6, 4], [6, 2], [11, 15], [7, 10], [1, 4], [6, 4], [8, 9], [1, 17], [12, 14], [2, 3], [7, 19], [18, 10], [4, 11], [6, 17], [5, 1], [9, 15], [7, 19], [10, 14], [11, 8], [17, 10], [13, 16], [8, 15], [5, 1], [16, 11], [18, 7], [2, 13], [6, 17], [10, 14], [9, 15], [18, 17], [12, 11], [1, 4], [19, 14], [9, 15], [2, 13], [12, 11], [8, 15], [6, 4], [2, 3], [19, 14], [5, 18], [7, 10], [1, 17], [8, 15], [17, 7], [5, 1], [10, 14], [6, 4], [8, 15], [1, 4], [10, 0], [12, 11], [18, 17], [6, 2], [11, 8], [14, 0], [2, 3], [5, 1], [18, 17], [13, 16], [4, 12], [12, 11], [7, 19], [3, 8], [10, 14], [4, 16], [2, 13], [12, 11], [1, 17], [8, 15], [6, 2], [7, 19], [10, 0], [16, 12], [10, 14], [18, 7], [2, 13], [12, 0], [18, 7], [8, 9], [0, 9], [2, 13], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [11, 15], [10, 14], [13, 3], [18, 7], [1, 6], [2, 16], [11, 15], [16, 3], [10, 14], [17, 7], [11, 9], [16, 3], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 7], [3, 8], [4, 12], [1, 6], [11, 8], [14, 0], [9, 15], [10, 12], [17, 4], [16, 3], [7, 19], [1, 6], [9, 15], [18, 10], [4, 16], [8, 15], [12, 14], [6, 17], [18, 10], [9, 15], [1, 17], [4, 12], [18, 7], [2, 3], [17, 10], [16, 11], [7, 19], [6, 17], [11, 9], [19, 14], [17, 7], [2, 3], [4, 11], [9, 15], [10, 14], [18, 7], [8, 9], [10, 14], [11, 8], [0, 9], [2, 3], [18, 17], [16, 12], [14, 0], [18, 17], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [11, 8], [4, 12], [18, 7], [13, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[2, 6]
[4, 8]
[6, 13]
[13, 17]
[15, 24]
[29, 37]
[37, 41]
[43, 48]
[49, 51]
[41, 63]
[66, 72]
[70, 78]
[84, 89]
[81, 90]
[86, 91]
[65, 94]
[88, 95]
[92, 99]
[93, 103]
[99, 104]
[91, 107]
[108, 114]
[117, 123]
[118, 127]
[120, 130]
[131, 134]
[132, 137]
[134, 138]
[147, 152]
[152, 158]
[153, 160]
[159, 163]
[156, 174]
[174, 182]
[177, 183]
[184, 189]
[194, 202]
[205, 208]
[202, 211]
[212, 215]
[209, 221]
[206, 223]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[19, 25, 31]
[32, 44, 49]
[50, 54, 57]
[171, 181, 193]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[94, 109, 112]
[122, 126, 132]
[181, 193, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[201, 206, 212]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[2, 6]
[4, 8]
[6, 13]
[13, 17]
[15, 24]
[29, 37]
[37, 41]
[43, 48]
[49, 51]
[41, 63]
[66, 72]
[70, 78]
[84, 89]
[81, 90]
[86, 91]
[65, 94]
[88, 95]
[92, 99]
[93, 103]
[99, 104]
[91, 107]
[108, 114]
[117, 123]
[118, 127]
[120, 130]
[131, 134]
[132, 137]
[134, 138]
[147, 152]
[152, 158]
[153, 160]
[159, 163]
[156, 174]
[174, 182]
[177, 183]
[184, 189]
[194, 202]
[205, 208]
[202, 211]
[212, 215]
[209, 221]
[206, 223]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.203166961669922

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] cc => I, Pos: [0, 5] cc => I, Pos: [2, 6] cc => I, Pos: [2, 6] cc => I, Pos: [4, 8] cc => I, Pos: [4, 8] cc => I, Pos: [6, 13] cc => I, Pos: [6, 13] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [15, 24] cc => I, Pos: [15, 24] cc => I, Pos: [19, 25, 31] ccc => cc, Pos: [29, 37] cc => I, Pos: [29, 37] cc => I, Pos: [32, 44, 49] ccc => cc, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [41, 63] cc => I, Pos: [41, 63] cc => I, Pos: [43, 48] cc => I, Pos: [43, 48] cc => I, Pos: [49, 51] cc => I, Pos: [49, 51] cc => I, Pos: [50, 54, 57] ccc => cc, Pos: [65, 94] cc => I, Pos: [65, 94] cc => I, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [70, 78] cc => I, Pos: [70, 78] cc => I, Pos: [81, 90] cc => I, Pos: [81, 90] cc => I, Pos: [84, 89] cc => I, Pos: [84, 89] cc => I, Pos: [86, 91] cc => I, Pos: [86, 91] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [91, 107] cc => I, Pos: [91, 107] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [93, 103] cc => I, Pos: [93, 103] cc => I, Pos: [94, 109, 112] ccc => cc, Pos: [99, 104] cc => I, Pos: [99, 104] cc => I, Pos: [108, 114] cc => I, Pos: [108, 114] cc => I, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [118, 127] cc => I, Pos: [118, 127] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [122, 126, 132] ccc => cc, Pos: [131, 134] cc => I, Pos: [131, 134] cc => I, Pos: [132, 137] cc => I, Pos: [132, 137] cc => I, Pos: [134, 138] cc => I, Pos: [134, 138] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [152, 158] cc => I, Pos: [152, 158] cc => I, Pos: [153, 160] cc => I, Pos: [153, 160] cc => I, Pos: [156, 174] cc => I, Pos: [156, 174] cc => I, Pos: [159, 163] cc => I, Pos: [159, 163] cc => I, Pos: [171, 181, 193] ccc => cc, Pos: [174, 182] cc => I, Pos: [174, 182] cc => I, Pos: [177, 183] cc => I, Pos: [177, 183] cc => I, Pos: [181, 193, 197] ccc => cc, Pos: [184, 189] cc => I, Pos: [184, 189] cc => I, Pos: [194, 202] cc => I, Pos: [194, 202] cc => I, Pos: [201, 206, 212] ccc => cc, Pos: [202, 211] cc => I, Pos: [202, 211] cc => I, Pos: [205, 208] cc => I, Pos: [205, 208] cc => I, Pos: [206, 223] cc => I, Pos: [206, 223] cc => I, Pos: [209, 221] cc => I, Pos: [209, 221] cc => I, Pos: [212, 215] cc => I, Pos: [212, 215] cc => I]

Plan: 1
[Pos: [0, 5] cc => I,
 Pos: [2, 6] cc => I,
 Pos: [4, 8] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [15, 24] cc => I,
 Pos: [19, 25, 31] ccc => cc,
 Pos: [29, 37] cc => I,
 Pos: [32, 44, 49] ccc => cc,
 Pos: [41, 63] cc => I,
 Pos: [43, 48] cc => I,
 Pos: [50, 54, 57] ccc => cc,
 Pos: [65, 94] cc => I,
 Pos: [66, 72] cc => I,
 Pos: [70, 78] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [84, 89] cc => I,
 Pos: [86, 91] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [93, 103] cc => I,
 Pos: [108, 114] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [118, 127] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [122, 126, 132] ccc => cc,
 Pos: [131, 134] cc => I,
 Pos: [147, 152] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [156, 174] cc => I,
 Pos: [159, 163] cc => I,
 Pos: [171, 181, 193] ccc => cc,
 Pos: [177, 183] cc => I,
 Pos: [184, 189] cc => I,
 Pos: [194, 202] cc => I,
 Pos: [201, 206, 212] ccc => cc,
 Pos: [205, 208] cc => I,
 Pos: [209, 221] cc => I]
Change: 37, Saving: 37

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.10936737060546875

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 5] cc => I,
 Pos: [2, 6] cc => I,
 Pos: [4, 8] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [15, 24] cc => I,
 Pos: [19, 25, 31] ccc => cc,
 Pos: [29, 37] cc => I,
 Pos: [32, 44, 49] ccc => cc,
 Pos: [41, 63] cc => I,
 Pos: [43, 48] cc => I,
 Pos: [50, 54, 57] ccc => cc,
 Pos: [65, 94] cc => I,
 Pos: [66, 72] cc => I,
 Pos: [70, 78] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [84, 89] cc => I,
 Pos: [86, 91] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [93, 103] cc => I,
 Pos: [108, 114] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [118, 127] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [122, 126, 132] ccc => cc,
 Pos: [131, 134] cc => I,
 Pos: [147, 152] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [156, 174] cc => I,
 Pos: [159, 163] cc => I,
 Pos: [171, 181, 193] ccc => cc,
 Pos: [177, 183] cc => I,
 Pos: [184, 189] cc => I,
 Pos: [194, 202] cc => I,
 Pos: [201, 206, 212] ccc => cc,
 Pos: [205, 208] cc => I,
 Pos: [209, 221] cc => I]
Change: 37, Saving: 37

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 5] cc => I
Apply:  Pos: [2, 6] cc => I
Apply:  Pos: [4, 8] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [15, 24] cc => I
Apply:  Pos: [19, 25, 31] ccc => cc
Apply:  Pos: [29, 37] cc => I
Apply:  Pos: [32, 44, 49] ccc => cc
Apply:  Pos: [41, 63] cc => I
Apply:  Pos: [43, 48] cc => I
Apply:  Pos: [50, 54, 57] ccc => cc
Apply:  Pos: [65, 94] cc => I
Apply:  Pos: [66, 72] cc => I
Apply:  Pos: [70, 78] cc => I
Apply:  Pos: [81, 90] cc => I
Apply:  Pos: [84, 89] cc => I
Apply:  Pos: [86, 91] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [93, 103] cc => I
Apply:  Pos: [108, 114] cc => I
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [118, 127] cc => I
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [122, 126, 132] ccc => cc
Apply:  Pos: [131, 134] cc => I
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [153, 160] cc => I
Apply:  Pos: [156, 174] cc => I
Apply:  Pos: [159, 163] cc => I
Apply:  Pos: [171, 181, 193] ccc => cc
Apply:  Pos: [177, 183] cc => I
Apply:  Pos: [184, 189] cc => I
Apply:  Pos: [194, 202] cc => I
Apply:  Pos: [201, 206, 212] ccc => cc
Apply:  Pos: [205, 208] cc => I
Apply:  Pos: [209, 221] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [4, 12], [2, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [6, 4], [11, 15], [7, 10], [1, 4], [6, 4], [8, 9], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [8, 15], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [1, 4], [5, 18], [7, 10], [1, 17], [17, 7], [5, 1], [10, 14], [8, 15], [1, 4], [10, 0], [12, 11], [6, 2], [11, 8], [14, 0], [2, 3], [5, 1], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [1, 17], [8, 15], [2, 13], [10, 0], [16, 12], [12, 0], [8, 9], [0, 9], [2, 13], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [7, 19], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [17, 10], [16, 11], [7, 19], [6, 17], [11, 9], [19, 14], [18, 17], [4, 11], [9, 15], [17, 7], [8, 9], [0, 9], [2, 3], [16, 12], [14, 0], [18, 17], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [18, 7], [13, 16], ----End Timer [Execute Mapping]:  4.312534332275391

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 42]
[54, 67]
[83, 89]
[124, 135]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[65, 68, 75]
[139, 142, 148]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 42]
[54, 67]
[83, 89]
[124, 135]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6718509197235107

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [39, 42] cc => I, Pos: [39, 42] cc => I, Pos: [54, 67] cc => I, Pos: [54, 67] cc => I, Pos: [65, 68, 75] ccc => cc, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [124, 135] cc => I, Pos: [124, 135] cc => I, Pos: [139, 142, 148] ccc => cc]

Plan: 1
[Pos: [39, 42] cc => I,
 Pos: [54, 67] cc => I,
 Pos: [65, 68, 75] ccc => cc,
 Pos: [83, 89] cc => I,
 Pos: [124, 135] cc => I,
 Pos: [139, 142, 148] ccc => cc]
Change: 6, Saving: 5

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015624523162841797

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [39, 42] cc => I,
 Pos: [54, 67] cc => I,
 Pos: [65, 68, 75] ccc => cc,
 Pos: [83, 89] cc => I,
 Pos: [124, 135] cc => I,
 Pos: [139, 142, 148] ccc => cc]
Change: 6, Saving: 5

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [39, 42] cc => I
Apply:  Pos: [54, 67] cc => I
Apply:  Pos: [65, 68, 75] ccc => cc
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [124, 135] cc => I
Apply:  Pos: [139, 142, 148] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [2, 12], [4, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [1, 4], [5, 18], [7, 10], [1, 17], [17, 7], [5, 4], [10, 14], [1, 4], [10, 0], [12, 11], [6, 2], [11, 8], [14, 0], [2, 3], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [1, 17], [8, 15], [10, 0], [16, 12], [12, 0], [0, 9], [8, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 4], [6, 17], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [18, 7], [4, 11], [9, 15], [17, 7], [0, 9], [8, 9], [2, 3], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [18, 7], [13, 16], ----End Timer [Execute Mapping]:  2.6874754428863525

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[91, 104]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[60, 61, 76]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[91, 104]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.453117609024048

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [60, 61, 76] ccc => cc, Pos: [91, 104] cc => I, Pos: [91, 104] cc => I]

Plan: 1
[Pos: [60, 61, 76] ccc => cc, Pos: [91, 104] cc => I]
Change: 2, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [60, 61, 76] ccc => cc, Pos: [91, 104] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [60, 61, 76] ccc => cc
Apply:  Pos: [91, 104] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [4, 12], [2, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [1, 4], [5, 18], [7, 10], [1, 7], [17, 7], [5, 4], [10, 14], [1, 4], [10, 0], [12, 11], [6, 2], [11, 8], [14, 0], [2, 3], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [8, 15], [10, 0], [16, 12], [12, 0], [8, 9], [0, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [6, 4], [6, 17], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [18, 7], [4, 11], [9, 15], [17, 7], [8, 9], [0, 9], [2, 3], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [18, 7], [13, 16], ----End Timer [Execute Mapping]:  2.453117609024048

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3750431537628174

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [2, 12], [4, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [1, 4], [5, 18], [7, 10], [17, 7], [1, 7], [5, 4], [10, 14], [1, 4], [10, 0], [12, 11], [6, 2], [11, 8], [14, 0], [2, 3], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [8, 15], [10, 0], [16, 12], [12, 0], [0, 9], [8, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [6, 17], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [18, 7], [4, 11], [9, 15], [17, 7], [0, 9], [8, 9], [2, 3], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [18, 7], [13, 16], ----End Timer [Execute Mapping]:  2.3750431537628174

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [144] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 288

Reduced: 
 - size: 81 (36.00%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374403953552246

[5, 1], [18, 10], [8, 9], [17, 4], [12, 14], [5, 1], [8, 9], [6, 17], [12, 14], [7, 10], [2, 16], [1, 6], [11, 15], [8, 9], [16, 12], [10, 14], [1, 17], [8, 9], [4, 12], [2, 16], [10, 0], [18, 7], [17, 4], [11, 8], [10, 14], [16, 12], [2, 13], [9, 15], [5, 1], [1, 17], [0, 9], [2, 16], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [1, 17], [6, 2], [16, 3], [9, 15], [1, 17], [16, 11], [8, 15], [12, 0], [10, 14], [1, 6], [2, 16], [8, 15], [10, 12], [6, 2], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [6, 4], [6, 2], [11, 15], [7, 10], [1, 4], [6, 4], [8, 9], [1, 17], [12, 14], [2, 3], [7, 19], [18, 10], [4, 11], [6, 17], [5, 1], [9, 15], [7, 19], [10, 14], [11, 8], [17, 10], [13, 16], [8, 15], [5, 1], [16, 11], [18, 7], [2, 13], [6, 17], [10, 14], [9, 15], [18, 17], [12, 11], [1, 4], [19, 14], [9, 15], [2, 13], [12, 11], [8, 15], [6, 4], [2, 3], [19, 14], [5, 18], [7, 10], [1, 17], [8, 15], [17, 7], [5, 1], [10, 14], [6, 4], [8, 15], [1, 4], [10, 0], [12, 11], [18, 17], [6, 2], [11, 8], [14, 0], [2, 3], [5, 1], [18, 17], [13, 16], [4, 12], [12, 11], [7, 19], [3, 8], [10, 14], [4, 16], [2, 13], [12, 11], [1, 17], [8, 15], [6, 2], [7, 19], [10, 0], [16, 12], [10, 14], [18, 7], [2, 13], [12, 0], [18, 7], [8, 9], [0, 9], [2, 13], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [11, 15], [10, 14], [13, 3], [18, 7], [1, 6], [2, 16], [11, 15], [16, 3], [10, 14], [17, 7], [11, 9], [16, 3], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 7], [3, 8], [4, 12], [1, 6], [11, 8], [14, 0], [9, 15], [10, 12], [17, 4], [16, 3], [7, 19], [1, 6], [9, 15], [18, 10], [4, 16], [8, 15], [12, 14], [6, 17], [18, 10], [9, 15], [1, 17], [4, 12], [18, 7], [2, 3], [17, 10], [16, 11], [7, 19], [6, 17], [11, 9], [19, 14], [17, 7], [2, 3], [4, 11], [9, 15], [10, 14], [18, 7], [8, 9], [10, 14], [11, 8], [0, 9], [2, 3], [18, 17], [16, 12], [14, 0], [18, 17], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [11, 8], [4, 12], [18, 7], [13, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[2, 6]
[4, 8]
[6, 13]
[13, 17]
[15, 24]
[29, 37]
[37, 41]
[43, 48]
[49, 51]
[41, 63]
[66, 72]
[70, 78]
[84, 89]
[81, 90]
[86, 91]
[65, 94]
[88, 95]
[92, 99]
[93, 103]
[99, 104]
[91, 107]
[108, 114]
[117, 123]
[118, 127]
[120, 130]
[131, 134]
[132, 137]
[134, 138]
[147, 152]
[152, 158]
[153, 160]
[159, 163]
[156, 174]
[174, 182]
[177, 183]
[184, 189]
[194, 202]
[205, 208]
[202, 211]
[212, 215]
[209, 221]
[206, 223]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[19, 25, 31]
[32, 44, 49]
[50, 54, 57]
[171, 181, 193]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[94, 109, 112]
[122, 126, 132]
[181, 193, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[201, 206, 212]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[2, 6]
[4, 8]
[6, 13]
[13, 17]
[15, 24]
[29, 37]
[37, 41]
[43, 48]
[49, 51]
[41, 63]
[66, 72]
[70, 78]
[84, 89]
[81, 90]
[86, 91]
[65, 94]
[88, 95]
[92, 99]
[93, 103]
[99, 104]
[91, 107]
[108, 114]
[117, 123]
[118, 127]
[120, 130]
[131, 134]
[132, 137]
[134, 138]
[147, 152]
[152, 158]
[153, 160]
[159, 163]
[156, 174]
[174, 182]
[177, 183]
[184, 189]
[194, 202]
[205, 208]
[202, 211]
[212, 215]
[209, 221]
[206, 223]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.203454971313477

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] cc => I, Pos: [0, 5] cc => I, Pos: [2, 6] cc => I, Pos: [2, 6] cc => I, Pos: [4, 8] cc => I, Pos: [4, 8] cc => I, Pos: [6, 13] cc => I, Pos: [6, 13] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [15, 24] cc => I, Pos: [15, 24] cc => I, Pos: [19, 25, 31] ccc => cc, Pos: [29, 37] cc => I, Pos: [29, 37] cc => I, Pos: [32, 44, 49] ccc => cc, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [41, 63] cc => I, Pos: [41, 63] cc => I, Pos: [43, 48] cc => I, Pos: [43, 48] cc => I, Pos: [49, 51] cc => I, Pos: [49, 51] cc => I, Pos: [50, 54, 57] ccc => cc, Pos: [65, 94] cc => I, Pos: [65, 94] cc => I, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [70, 78] cc => I, Pos: [70, 78] cc => I, Pos: [81, 90] cc => I, Pos: [81, 90] cc => I, Pos: [84, 89] cc => I, Pos: [84, 89] cc => I, Pos: [86, 91] cc => I, Pos: [86, 91] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [91, 107] cc => I, Pos: [91, 107] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [93, 103] cc => I, Pos: [93, 103] cc => I, Pos: [94, 109, 112] ccc => cc, Pos: [99, 104] cc => I, Pos: [99, 104] cc => I, Pos: [108, 114] cc => I, Pos: [108, 114] cc => I, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [118, 127] cc => I, Pos: [118, 127] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [122, 126, 132] ccc => cc, Pos: [131, 134] cc => I, Pos: [131, 134] cc => I, Pos: [132, 137] cc => I, Pos: [132, 137] cc => I, Pos: [134, 138] cc => I, Pos: [134, 138] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [152, 158] cc => I, Pos: [152, 158] cc => I, Pos: [153, 160] cc => I, Pos: [153, 160] cc => I, Pos: [156, 174] cc => I, Pos: [156, 174] cc => I, Pos: [159, 163] cc => I, Pos: [159, 163] cc => I, Pos: [171, 181, 193] ccc => cc, Pos: [174, 182] cc => I, Pos: [174, 182] cc => I, Pos: [177, 183] cc => I, Pos: [177, 183] cc => I, Pos: [181, 193, 197] ccc => cc, Pos: [184, 189] cc => I, Pos: [184, 189] cc => I, Pos: [194, 202] cc => I, Pos: [194, 202] cc => I, Pos: [201, 206, 212] ccc => cc, Pos: [202, 211] cc => I, Pos: [202, 211] cc => I, Pos: [205, 208] cc => I, Pos: [205, 208] cc => I, Pos: [206, 223] cc => I, Pos: [206, 223] cc => I, Pos: [209, 221] cc => I, Pos: [209, 221] cc => I, Pos: [212, 215] cc => I, Pos: [212, 215] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 5] cc => I,
 Pos: [2, 6] cc => I,
 Pos: [4, 8] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [15, 24] cc => I,
 Pos: [19, 25, 31] ccc => cc,
 Pos: [29, 37] cc => I,
 Pos: [49, 51] cc => I,
 Pos: [41, 63] cc => I,
 Pos: [43, 48] cc => I,
 Pos: [50, 54, 57] ccc => cc,
 Pos: [65, 94] cc => I,
 Pos: [66, 72] cc => I,
 Pos: [70, 78] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [84, 89] cc => I,
 Pos: [91, 107] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [99, 104] cc => I,
 Pos: [93, 103] cc => I,
 Pos: [108, 114] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [118, 127] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [122, 126, 132] ccc => cc,
 Pos: [131, 134] cc => I,
 Pos: [152, 158] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [174, 182] cc => I,
 Pos: [159, 163] cc => I,
 Pos: [171, 181, 193] ccc => cc,
 Pos: [177, 183] cc => I,
 Pos: [184, 189] cc => I,
 Pos: [202, 211] cc => I,
 Pos: [206, 223] cc => I,
 Pos: [205, 208] cc => I,
 Pos: [209, 221] cc => I]
Change: 37, Saving: 140

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 5] cc => I
Apply:  Pos: [2, 6] cc => I
Apply:  Pos: [4, 8] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [15, 24] cc => I
Apply:  Pos: [19, 25, 31] ccc => cc
Apply:  Pos: [29, 37] cc => I
Apply:  Pos: [49, 51] cc => I
Apply:  Pos: [41, 63] cc => I
Apply:  Pos: [43, 48] cc => I
Apply:  Pos: [50, 54, 57] ccc => cc
Apply:  Pos: [65, 94] cc => I
Apply:  Pos: [66, 72] cc => I
Apply:  Pos: [70, 78] cc => I
Apply:  Pos: [81, 90] cc => I
Apply:  Pos: [84, 89] cc => I
Apply:  Pos: [91, 107] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [99, 104] cc => I
Apply:  Pos: [93, 103] cc => I
Apply:  Pos: [108, 114] cc => I
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [118, 127] cc => I
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [122, 126, 132] ccc => cc
Apply:  Pos: [131, 134] cc => I
Apply:  Pos: [152, 158] cc => I
Apply:  Pos: [153, 160] cc => I
Apply:  Pos: [174, 182] cc => I
Apply:  Pos: [159, 163] cc => I
Apply:  Pos: [171, 181, 193] ccc => cc
Apply:  Pos: [177, 183] cc => I
Apply:  Pos: [184, 189] cc => I
Apply:  Pos: [202, 211] cc => I
Apply:  Pos: [206, 223] cc => I
Apply:  Pos: [205, 208] cc => I
Apply:  Pos: [209, 221] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [4, 12], [2, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [0, 9], [11, 8], [2, 13], [12, 11], [6, 4], [11, 15], [7, 10], [1, 4], [6, 4], [8, 9], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [8, 15], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [8, 15], [5, 18], [7, 10], [1, 17], [17, 7], [5, 1], [10, 14], [1, 4], [10, 0], [6, 2], [11, 8], [14, 0], [2, 3], [5, 1], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [1, 17], [8, 15], [2, 13], [10, 0], [16, 12], [12, 0], [8, 9], [0, 9], [2, 13], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [1, 6], [2, 16], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [7, 19], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [2, 3], [17, 10], [16, 11], [7, 19], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [8, 9], [0, 9], [18, 17], [16, 12], [14, 0], [18, 17], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [13, 16], ----End Timer [Execute Mapping]:  4.203454971313477

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 41]
[53, 61]
[82, 88]
[124, 135]
[144, 147]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[66, 68, 74]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 41]
[53, 61]
[82, 88]
[124, 135]
[144, 147]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6567325592041016

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [38, 41] cc => I, Pos: [38, 41] cc => I, Pos: [53, 61] cc => I, Pos: [53, 61] cc => I, Pos: [66, 68, 74] ccc => cc, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [124, 135] cc => I, Pos: [124, 135] cc => I, Pos: [144, 147] cc => I, Pos: [144, 147] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [38, 41] cc => I,
 Pos: [53, 61] cc => I,
 Pos: [66, 68, 74] ccc => cc,
 Pos: [82, 88] cc => I,
 Pos: [124, 135] cc => I,
 Pos: [144, 147] cc => I]
Change: 6, Saving: 22

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [38, 41] cc => I
Apply:  Pos: [53, 61] cc => I
Apply:  Pos: [66, 68, 74] ccc => cc
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [124, 135] cc => I
Apply:  Pos: [144, 147] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [2, 12], [4, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [5, 18], [7, 10], [1, 17], [17, 7], [5, 4], [10, 14], [1, 4], [10, 0], [6, 2], [11, 8], [14, 0], [2, 3], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [1, 17], [8, 15], [10, 0], [16, 12], [12, 0], [0, 9], [8, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [1, 6], [2, 16], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [2, 3], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [0, 9], [8, 9], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [13, 16], ----End Timer [Execute Mapping]:  2.6567325592041016

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[60, 61, 75]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3751108646392822

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [60, 61, 75] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [60, 61, 75] ccc => cc]
Change: 1, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [60, 61, 75] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [4, 12], [2, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [5, 18], [7, 10], [1, 7], [17, 7], [5, 4], [10, 14], [1, 4], [10, 0], [6, 2], [11, 8], [14, 0], [2, 3], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [8, 15], [10, 0], [16, 12], [12, 0], [8, 9], [0, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [1, 6], [2, 16], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [2, 3], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [8, 9], [0, 9], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [13, 16], ----End Timer [Execute Mapping]:  2.3751108646392822

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.359508991241455

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [2, 12], [4, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [5, 18], [7, 10], [17, 7], [1, 7], [5, 4], [10, 14], [1, 4], [10, 0], [6, 2], [11, 8], [14, 0], [2, 3], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [8, 15], [10, 0], [16, 12], [12, 0], [0, 9], [8, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [1, 6], [2, 16], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [2, 3], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [0, 9], [8, 9], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [13, 16], ----End Timer [Execute Mapping]:  2.359508991241455

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [143] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 286

Reduced: 
 - size: 82 (36.44%)
 - cycle: 164 (36.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09373044967651367

[5, 1], [18, 10], [8, 9], [17, 4], [12, 14], [5, 1], [8, 9], [6, 17], [12, 14], [7, 10], [2, 16], [1, 6], [11, 15], [8, 9], [16, 12], [10, 14], [1, 17], [8, 9], [4, 12], [2, 16], [10, 0], [18, 7], [17, 4], [11, 8], [10, 14], [16, 12], [2, 13], [9, 15], [5, 1], [1, 17], [0, 9], [2, 16], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [1, 17], [6, 2], [16, 3], [9, 15], [1, 17], [16, 11], [8, 15], [12, 0], [10, 14], [1, 6], [2, 16], [8, 15], [10, 12], [6, 2], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [6, 4], [6, 2], [11, 15], [7, 10], [1, 4], [6, 4], [8, 9], [1, 17], [12, 14], [2, 3], [7, 19], [18, 10], [4, 11], [6, 17], [5, 1], [9, 15], [7, 19], [10, 14], [11, 8], [17, 10], [13, 16], [8, 15], [5, 1], [16, 11], [18, 7], [2, 13], [6, 17], [10, 14], [9, 15], [18, 17], [12, 11], [1, 4], [19, 14], [9, 15], [2, 13], [12, 11], [8, 15], [6, 4], [2, 3], [19, 14], [5, 18], [7, 10], [1, 17], [8, 15], [17, 7], [5, 1], [10, 14], [6, 4], [8, 15], [1, 4], [10, 0], [12, 11], [18, 17], [6, 2], [11, 8], [14, 0], [2, 3], [5, 1], [18, 17], [13, 16], [4, 12], [12, 11], [7, 19], [3, 8], [10, 14], [4, 16], [2, 13], [12, 11], [1, 17], [8, 15], [6, 2], [7, 19], [10, 0], [16, 12], [10, 14], [18, 7], [2, 13], [12, 0], [18, 7], [8, 9], [0, 9], [2, 13], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [11, 15], [10, 14], [13, 3], [18, 7], [1, 6], [2, 16], [11, 15], [16, 3], [10, 14], [17, 7], [11, 9], [16, 3], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 7], [3, 8], [4, 12], [1, 6], [11, 8], [14, 0], [9, 15], [10, 12], [17, 4], [16, 3], [7, 19], [1, 6], [9, 15], [18, 10], [4, 16], [8, 15], [12, 14], [6, 17], [18, 10], [9, 15], [1, 17], [4, 12], [18, 7], [2, 3], [17, 10], [16, 11], [7, 19], [6, 17], [11, 9], [19, 14], [17, 7], [2, 3], [4, 11], [9, 15], [10, 14], [18, 7], [8, 9], [10, 14], [11, 8], [0, 9], [2, 3], [18, 17], [16, 12], [14, 0], [18, 17], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [11, 8], [4, 12], [18, 7], [13, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[2, 6]
[4, 8]
[6, 13]
[13, 17]
[15, 24]
[29, 37]
[37, 41]
[43, 48]
[49, 51]
[41, 63]
[66, 72]
[70, 78]
[84, 89]
[81, 90]
[86, 91]
[65, 94]
[88, 95]
[92, 99]
[93, 103]
[99, 104]
[91, 107]
[108, 114]
[117, 123]
[118, 127]
[120, 130]
[131, 134]
[132, 137]
[134, 138]
[147, 152]
[152, 158]
[153, 160]
[159, 163]
[156, 174]
[174, 182]
[177, 183]
[184, 189]
[194, 202]
[205, 208]
[202, 211]
[212, 215]
[209, 221]
[206, 223]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[19, 25, 31]
[32, 44, 49]
[50, 54, 57]
[171, 181, 193]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[94, 109, 112]
[122, 126, 132]
[181, 193, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[201, 206, 212]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[2, 6]
[4, 8]
[6, 13]
[13, 17]
[15, 24]
[29, 37]
[37, 41]
[43, 48]
[49, 51]
[41, 63]
[66, 72]
[70, 78]
[84, 89]
[81, 90]
[86, 91]
[65, 94]
[88, 95]
[92, 99]
[93, 103]
[99, 104]
[91, 107]
[108, 114]
[117, 123]
[118, 127]
[120, 130]
[131, 134]
[132, 137]
[134, 138]
[147, 152]
[152, 158]
[153, 160]
[159, 163]
[156, 174]
[174, 182]
[177, 183]
[184, 189]
[194, 202]
[205, 208]
[202, 211]
[212, 215]
[209, 221]
[206, 223]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.202669620513916

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] cc => I, Pos: [0, 5] cc => I, Pos: [2, 6] cc => I, Pos: [2, 6] cc => I, Pos: [4, 8] cc => I, Pos: [4, 8] cc => I, Pos: [6, 13] cc => I, Pos: [6, 13] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [15, 24] cc => I, Pos: [15, 24] cc => I, Pos: [19, 25, 31] ccc => cc, Pos: [29, 37] cc => I, Pos: [29, 37] cc => I, Pos: [32, 44, 49] ccc => cc, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [41, 63] cc => I, Pos: [41, 63] cc => I, Pos: [43, 48] cc => I, Pos: [43, 48] cc => I, Pos: [49, 51] cc => I, Pos: [49, 51] cc => I, Pos: [50, 54, 57] ccc => cc, Pos: [65, 94] cc => I, Pos: [65, 94] cc => I, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [70, 78] cc => I, Pos: [70, 78] cc => I, Pos: [81, 90] cc => I, Pos: [81, 90] cc => I, Pos: [84, 89] cc => I, Pos: [84, 89] cc => I, Pos: [86, 91] cc => I, Pos: [86, 91] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [91, 107] cc => I, Pos: [91, 107] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [93, 103] cc => I, Pos: [93, 103] cc => I, Pos: [94, 109, 112] ccc => cc, Pos: [99, 104] cc => I, Pos: [99, 104] cc => I, Pos: [108, 114] cc => I, Pos: [108, 114] cc => I, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [118, 127] cc => I, Pos: [118, 127] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [122, 126, 132] ccc => cc, Pos: [131, 134] cc => I, Pos: [131, 134] cc => I, Pos: [132, 137] cc => I, Pos: [132, 137] cc => I, Pos: [134, 138] cc => I, Pos: [134, 138] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [152, 158] cc => I, Pos: [152, 158] cc => I, Pos: [153, 160] cc => I, Pos: [153, 160] cc => I, Pos: [156, 174] cc => I, Pos: [156, 174] cc => I, Pos: [159, 163] cc => I, Pos: [159, 163] cc => I, Pos: [171, 181, 193] ccc => cc, Pos: [174, 182] cc => I, Pos: [174, 182] cc => I, Pos: [177, 183] cc => I, Pos: [177, 183] cc => I, Pos: [181, 193, 197] ccc => cc, Pos: [184, 189] cc => I, Pos: [184, 189] cc => I, Pos: [194, 202] cc => I, Pos: [194, 202] cc => I, Pos: [201, 206, 212] ccc => cc, Pos: [202, 211] cc => I, Pos: [202, 211] cc => I, Pos: [205, 208] cc => I, Pos: [205, 208] cc => I, Pos: [206, 223] cc => I, Pos: [206, 223] cc => I, Pos: [209, 221] cc => I, Pos: [209, 221] cc => I, Pos: [212, 215] cc => I, Pos: [212, 215] cc => I]

--------End Timer [Generate Plans]:  0.09374427795410156

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 5] cc => I,
 Pos: [6, 13] cc => I,
 Pos: [4, 8] cc => I,
 Pos: [15, 24] cc => I,
 Pos: [19, 25, 31] ccc => cc,
 Pos: [37, 41] cc => I,
 Pos: [32, 44, 49] ccc => cc,
 Pos: [43, 48] cc => I,
 Pos: [50, 54, 57] ccc => cc,
 Pos: [94, 109, 112] ccc => cc,
 Pos: [66, 72] cc => I,
 Pos: [70, 78] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [84, 89] cc => I,
 Pos: [91, 107] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [93, 103] cc => I,
 Pos: [108, 114] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [118, 127] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [122, 126, 132] ccc => cc,
 Pos: [131, 134] cc => I,
 Pos: [147, 152] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [174, 182] cc => I,
 Pos: [159, 163] cc => I,
 Pos: [181, 193, 197] ccc => cc,
 Pos: [177, 183] cc => I,
 Pos: [184, 189] cc => I,
 Pos: [202, 211] cc => I,
 Pos: [201, 206, 212] ccc => cc,
 Pos: [205, 208] cc => I,
 Pos: [209, 221] cc => I]
Change: 35, Saving: 35

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 5] cc => I
Apply:  Pos: [6, 13] cc => I
Apply:  Pos: [4, 8] cc => I
Apply:  Pos: [15, 24] cc => I
Apply:  Pos: [19, 25, 31] ccc => cc
Apply:  Pos: [37, 41] cc => I
Apply:  Pos: [32, 44, 49] ccc => cc
Apply:  Pos: [43, 48] cc => I
Apply:  Pos: [50, 54, 57] ccc => cc
Apply:  Pos: [94, 109, 112] ccc => cc
Apply:  Pos: [66, 72] cc => I
Apply:  Pos: [70, 78] cc => I
Apply:  Pos: [81, 90] cc => I
Apply:  Pos: [84, 89] cc => I
Apply:  Pos: [91, 107] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [93, 103] cc => I
Apply:  Pos: [108, 114] cc => I
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [118, 127] cc => I
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [122, 126, 132] ccc => cc
Apply:  Pos: [131, 134] cc => I
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [153, 160] cc => I
Apply:  Pos: [174, 182] cc => I
Apply:  Pos: [159, 163] cc => I
Apply:  Pos: [181, 193, 197] ccc => cc
Apply:  Pos: [177, 183] cc => I
Apply:  Pos: [184, 189] cc => I
Apply:  Pos: [202, 211] cc => I
Apply:  Pos: [201, 206, 212] ccc => cc
Apply:  Pos: [205, 208] cc => I
Apply:  Pos: [209, 221] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [8, 9], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [8, 9], [4, 12], [2, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [1, 17], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [6, 4], [11, 15], [7, 10], [1, 4], [6, 4], [8, 9], [1, 17], [12, 14], [2, 3], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [8, 15], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [6, 2], [5, 18], [7, 10], [1, 17], [17, 7], [5, 1], [10, 14], [8, 15], [1, 4], [10, 0], [2, 3], [11, 8], [14, 0], [5, 1], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [1, 17], [8, 15], [2, 13], [10, 0], [16, 12], [12, 0], [8, 9], [0, 9], [2, 13], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [1, 6], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 7], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [18, 7], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [7, 19], [2, 3], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [18, 17], [4, 11], [9, 15], [17, 7], [8, 9], [0, 9], [16, 12], [14, 0], [18, 17], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [18, 7], [13, 16], ----End Timer [Execute Mapping]:  4.296413898468018

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 10]
[42, 45]
[21, 48]
[59, 74]
[88, 94]
[122, 130]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[72, 75, 80]
[145, 148, 153]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[50, 67, 77]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 10]
[42, 45]
[21, 48]
[59, 74]
[88, 94]
[122, 130]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.844143867492676

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [21, 48] cc => I, Pos: [21, 48] cc => I, Pos: [42, 45] cc => I, Pos: [42, 45] cc => I, Pos: [50, 67, 77] ccc => cc, Pos: [59, 74] cc => I, Pos: [59, 74] cc => I, Pos: [72, 75, 80] ccc => cc, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [122, 130] cc => I, Pos: [122, 130] cc => I, Pos: [145, 148, 153] ccc => cc]

--------End Timer [Generate Plans]:  0.01562356948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 10] cc => I,
 Pos: [21, 48] cc => I,
 Pos: [42, 45] cc => I,
 Pos: [50, 67, 77] ccc => cc,
 Pos: [59, 74] cc => I,
 Pos: [72, 75, 80] ccc => cc,
 Pos: [88, 94] cc => I,
 Pos: [122, 130] cc => I,
 Pos: [145, 148, 153] ccc => cc]
Change: 9, Saving: 8

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [21, 48] cc => I
Apply:  Pos: [42, 45] cc => I
Apply:  Pos: [50, 67, 77] ccc => cc
Apply:  Pos: [59, 74] cc => I
Apply:  Pos: [72, 75, 80] ccc => cc
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [122, 130] cc => I
Apply:  Pos: [145, 148, 153] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [2, 12], [4, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [6, 2], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [2, 3], [5, 18], [7, 10], [1, 17], [17, 7], [5, 4], [10, 14], [1, 4], [10, 0], [11, 8], [14, 0], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [1, 17], [8, 15], [10, 0], [16, 12], [12, 0], [0, 9], [8, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 4], [6, 17], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [1, 6], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [7, 19], [2, 3], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [18, 7], [4, 11], [9, 15], [17, 7], [0, 9], [8, 9], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [18, 7], [13, 16], ----End Timer [Execute Mapping]:  2.859767436981201

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[91, 105]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[63, 64, 76]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[91, 105]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4848806858062744

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [63, 64, 76] ccc => cc, Pos: [91, 105] cc => I, Pos: [91, 105] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [63, 64, 76] ccc => cc, Pos: [91, 105] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [63, 64, 76] ccc => cc
Apply:  Pos: [91, 105] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [4, 12], [2, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [6, 2], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [2, 3], [5, 18], [7, 10], [1, 7], [17, 7], [5, 4], [10, 14], [1, 4], [10, 0], [11, 8], [14, 0], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [8, 15], [10, 0], [16, 12], [12, 0], [8, 9], [0, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [6, 4], [6, 17], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [1, 6], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [2, 3], [5, 18], [10, 14], [12, 11], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [7, 19], [2, 3], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [18, 7], [4, 11], [9, 15], [17, 7], [8, 9], [0, 9], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [18, 7], [13, 16], ----End Timer [Execute Mapping]:  2.4848806858062744

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4536001682281494

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [2, 12], [4, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [6, 2], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [2, 3], [5, 18], [7, 10], [17, 7], [1, 7], [5, 4], [10, 14], [1, 4], [10, 0], [11, 8], [14, 0], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [8, 15], [10, 0], [16, 12], [12, 0], [0, 9], [8, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [6, 17], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [1, 6], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [2, 3], [5, 18], [10, 14], [12, 11], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [7, 19], [2, 3], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [18, 7], [4, 11], [9, 15], [17, 7], [0, 9], [8, 9], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [18, 7], [13, 16], ----End Timer [Execute Mapping]:  2.4536001682281494

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [144] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 288

Reduced: 
 - size: 81 (36.00%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09372496604919434

[5, 1], [18, 10], [8, 9], [17, 4], [12, 14], [5, 1], [8, 9], [6, 17], [12, 14], [7, 10], [2, 16], [1, 6], [11, 15], [8, 9], [16, 12], [10, 14], [1, 17], [8, 9], [4, 12], [2, 16], [10, 0], [18, 7], [17, 4], [11, 8], [10, 14], [16, 12], [2, 13], [9, 15], [5, 1], [1, 17], [0, 9], [2, 16], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [1, 17], [6, 2], [16, 3], [9, 15], [1, 17], [16, 11], [8, 15], [12, 0], [10, 14], [1, 6], [2, 16], [8, 15], [10, 12], [6, 2], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [6, 4], [6, 2], [11, 15], [7, 10], [1, 4], [6, 4], [8, 9], [1, 17], [12, 14], [2, 3], [7, 19], [18, 10], [4, 11], [6, 17], [5, 1], [9, 15], [7, 19], [10, 14], [11, 8], [17, 10], [13, 16], [8, 15], [5, 1], [16, 11], [18, 7], [2, 13], [6, 17], [10, 14], [9, 15], [18, 17], [12, 11], [1, 4], [19, 14], [9, 15], [2, 13], [12, 11], [8, 15], [6, 4], [2, 3], [19, 14], [5, 18], [7, 10], [1, 17], [8, 15], [17, 7], [5, 1], [10, 14], [6, 4], [8, 15], [1, 4], [10, 0], [12, 11], [18, 17], [6, 2], [11, 8], [14, 0], [2, 3], [5, 1], [18, 17], [13, 16], [4, 12], [12, 11], [7, 19], [3, 8], [10, 14], [4, 16], [2, 13], [12, 11], [1, 17], [8, 15], [6, 2], [7, 19], [10, 0], [16, 12], [10, 14], [18, 7], [2, 13], [12, 0], [18, 7], [8, 9], [0, 9], [2, 13], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [11, 15], [10, 14], [13, 3], [18, 7], [1, 6], [2, 16], [11, 15], [16, 3], [10, 14], [17, 7], [11, 9], [16, 3], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 7], [3, 8], [4, 12], [1, 6], [11, 8], [14, 0], [9, 15], [10, 12], [17, 4], [16, 3], [7, 19], [1, 6], [9, 15], [18, 10], [4, 16], [8, 15], [12, 14], [6, 17], [18, 10], [9, 15], [1, 17], [4, 12], [18, 7], [2, 3], [17, 10], [16, 11], [7, 19], [6, 17], [11, 9], [19, 14], [17, 7], [2, 3], [4, 11], [9, 15], [10, 14], [18, 7], [8, 9], [10, 14], [11, 8], [0, 9], [2, 3], [18, 17], [16, 12], [14, 0], [18, 17], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [11, 8], [4, 12], [18, 7], [13, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[2, 6]
[4, 8]
[6, 13]
[13, 17]
[15, 24]
[29, 37]
[37, 41]
[43, 48]
[49, 51]
[41, 63]
[66, 72]
[70, 78]
[84, 89]
[81, 90]
[86, 91]
[65, 94]
[88, 95]
[92, 99]
[93, 103]
[99, 104]
[91, 107]
[108, 114]
[117, 123]
[118, 127]
[120, 130]
[131, 134]
[132, 137]
[134, 138]
[147, 152]
[152, 158]
[153, 160]
[159, 163]
[156, 174]
[174, 182]
[177, 183]
[184, 189]
[194, 202]
[205, 208]
[202, 211]
[212, 215]
[209, 221]
[206, 223]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[19, 25, 31]
[32, 44, 49]
[50, 54, 57]
[171, 181, 193]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[94, 109, 112]
[122, 126, 132]
[181, 193, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[201, 206, 212]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[2, 6]
[4, 8]
[6, 13]
[13, 17]
[15, 24]
[29, 37]
[37, 41]
[43, 48]
[49, 51]
[41, 63]
[66, 72]
[70, 78]
[84, 89]
[81, 90]
[86, 91]
[65, 94]
[88, 95]
[92, 99]
[93, 103]
[99, 104]
[91, 107]
[108, 114]
[117, 123]
[118, 127]
[120, 130]
[131, 134]
[132, 137]
[134, 138]
[147, 152]
[152, 158]
[153, 160]
[159, 163]
[156, 174]
[174, 182]
[177, 183]
[184, 189]
[194, 202]
[205, 208]
[202, 211]
[212, 215]
[209, 221]
[206, 223]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.218754768371582

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] cc => I, Pos: [0, 5] cc => I, Pos: [2, 6] cc => I, Pos: [2, 6] cc => I, Pos: [4, 8] cc => I, Pos: [4, 8] cc => I, Pos: [6, 13] cc => I, Pos: [6, 13] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [15, 24] cc => I, Pos: [15, 24] cc => I, Pos: [19, 25, 31] ccc => cc, Pos: [29, 37] cc => I, Pos: [29, 37] cc => I, Pos: [32, 44, 49] ccc => cc, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [41, 63] cc => I, Pos: [41, 63] cc => I, Pos: [43, 48] cc => I, Pos: [43, 48] cc => I, Pos: [49, 51] cc => I, Pos: [49, 51] cc => I, Pos: [50, 54, 57] ccc => cc, Pos: [65, 94] cc => I, Pos: [65, 94] cc => I, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [70, 78] cc => I, Pos: [70, 78] cc => I, Pos: [81, 90] cc => I, Pos: [81, 90] cc => I, Pos: [84, 89] cc => I, Pos: [84, 89] cc => I, Pos: [86, 91] cc => I, Pos: [86, 91] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [91, 107] cc => I, Pos: [91, 107] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [93, 103] cc => I, Pos: [93, 103] cc => I, Pos: [94, 109, 112] ccc => cc, Pos: [99, 104] cc => I, Pos: [99, 104] cc => I, Pos: [108, 114] cc => I, Pos: [108, 114] cc => I, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [118, 127] cc => I, Pos: [118, 127] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [122, 126, 132] ccc => cc, Pos: [131, 134] cc => I, Pos: [131, 134] cc => I, Pos: [132, 137] cc => I, Pos: [132, 137] cc => I, Pos: [134, 138] cc => I, Pos: [134, 138] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [152, 158] cc => I, Pos: [152, 158] cc => I, Pos: [153, 160] cc => I, Pos: [153, 160] cc => I, Pos: [156, 174] cc => I, Pos: [156, 174] cc => I, Pos: [159, 163] cc => I, Pos: [159, 163] cc => I, Pos: [171, 181, 193] ccc => cc, Pos: [174, 182] cc => I, Pos: [174, 182] cc => I, Pos: [177, 183] cc => I, Pos: [177, 183] cc => I, Pos: [181, 193, 197] ccc => cc, Pos: [184, 189] cc => I, Pos: [184, 189] cc => I, Pos: [194, 202] cc => I, Pos: [194, 202] cc => I, Pos: [201, 206, 212] ccc => cc, Pos: [202, 211] cc => I, Pos: [202, 211] cc => I, Pos: [205, 208] cc => I, Pos: [205, 208] cc => I, Pos: [206, 223] cc => I, Pos: [206, 223] cc => I, Pos: [209, 221] cc => I, Pos: [209, 221] cc => I, Pos: [212, 215] cc => I, Pos: [212, 215] cc => I]

--------End Timer [Generate Plans]:  0.09374427795410156

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 5] cc => I,
 Pos: [2, 6] cc => I,
 Pos: [4, 8] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [15, 24] cc => I,
 Pos: [19, 25, 31] ccc => cc,
 Pos: [37, 41] cc => I,
 Pos: [49, 51] cc => I,
 Pos: [43, 48] cc => I,
 Pos: [50, 54, 57] ccc => cc,
 Pos: [94, 109, 112] ccc => cc,
 Pos: [66, 72] cc => I,
 Pos: [70, 78] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [84, 89] cc => I,
 Pos: [86, 91] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [93, 103] cc => I,
 Pos: [108, 114] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [118, 127] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [132, 137] cc => I,
 Pos: [134, 138] cc => I,
 Pos: [152, 158] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [174, 182] cc => I,
 Pos: [159, 163] cc => I,
 Pos: [181, 193, 197] ccc => cc,
 Pos: [177, 183] cc => I,
 Pos: [184, 189] cc => I,
 Pos: [194, 202] cc => I,
 Pos: [206, 223] cc => I,
 Pos: [205, 208] cc => I,
 Pos: [209, 221] cc => I]
Change: 36, Saving: 36

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 5] cc => I
Apply:  Pos: [2, 6] cc => I
Apply:  Pos: [4, 8] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [15, 24] cc => I
Apply:  Pos: [19, 25, 31] ccc => cc
Apply:  Pos: [37, 41] cc => I
Apply:  Pos: [49, 51] cc => I
Apply:  Pos: [43, 48] cc => I
Apply:  Pos: [50, 54, 57] ccc => cc
Apply:  Pos: [94, 109, 112] ccc => cc
Apply:  Pos: [66, 72] cc => I
Apply:  Pos: [70, 78] cc => I
Apply:  Pos: [81, 90] cc => I
Apply:  Pos: [84, 89] cc => I
Apply:  Pos: [86, 91] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [93, 103] cc => I
Apply:  Pos: [108, 114] cc => I
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [118, 127] cc => I
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [132, 137] cc => I
Apply:  Pos: [134, 138] cc => I
Apply:  Pos: [152, 158] cc => I
Apply:  Pos: [153, 160] cc => I
Apply:  Pos: [174, 182] cc => I
Apply:  Pos: [159, 163] cc => I
Apply:  Pos: [181, 193, 197] ccc => cc
Apply:  Pos: [177, 183] cc => I
Apply:  Pos: [184, 189] cc => I
Apply:  Pos: [194, 202] cc => I
Apply:  Pos: [206, 223] cc => I
Apply:  Pos: [205, 208] cc => I
Apply:  Pos: [209, 221] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [4, 12], [2, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [1, 17], [0, 9], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [0, 9], [11, 8], [2, 13], [12, 11], [6, 4], [11, 15], [7, 10], [1, 4], [6, 4], [8, 9], [1, 17], [12, 14], [2, 3], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [8, 15], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [1, 4], [6, 2], [5, 18], [7, 10], [1, 17], [17, 7], [5, 1], [10, 14], [8, 15], [1, 4], [10, 0], [12, 11], [2, 3], [11, 8], [14, 0], [5, 1], [13, 16], [4, 12], [3, 8], [4, 16], [2, 13], [1, 17], [8, 15], [6, 2], [10, 0], [16, 12], [18, 7], [12, 0], [8, 9], [0, 9], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [1, 6], [2, 16], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 7], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [18, 7], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [7, 19], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [8, 9], [0, 9], [2, 3], [18, 17], [16, 12], [14, 0], [18, 17], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [13, 16], ----End Timer [Execute Mapping]:  4.312499046325684

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 42]
[19, 45]
[56, 70]
[118, 126]
[146, 149]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[68, 71, 77]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[47, 63, 74]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 42]
[19, 45]
[56, 70]
[118, 126]
[146, 149]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.68759822845459

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 45] cc => I, Pos: [19, 45] cc => I, Pos: [39, 42] cc => I, Pos: [39, 42] cc => I, Pos: [47, 63, 74] ccc => cc, Pos: [56, 70] cc => I, Pos: [56, 70] cc => I, Pos: [68, 71, 77] ccc => cc, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [146, 149] cc => I, Pos: [146, 149] cc => I]

--------End Timer [Generate Plans]:  0.015642881393432617

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 45] cc => I,
 Pos: [39, 42] cc => I,
 Pos: [47, 63, 74] ccc => cc,
 Pos: [56, 70] cc => I,
 Pos: [68, 71, 77] ccc => cc,
 Pos: [118, 126] cc => I,
 Pos: [146, 149] cc => I]
Change: 7, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [19, 45] cc => I
Apply:  Pos: [39, 42] cc => I
Apply:  Pos: [47, 63, 74] ccc => cc
Apply:  Pos: [56, 70] cc => I
Apply:  Pos: [68, 71, 77] ccc => cc
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [146, 149] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015504598617553711

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [2, 12], [4, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [6, 2], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [1, 4], [2, 3], [5, 18], [7, 10], [1, 17], [17, 7], [5, 4], [10, 14], [1, 4], [10, 0], [12, 11], [11, 8], [14, 0], [13, 16], [4, 12], [3, 8], [4, 16], [2, 13], [1, 17], [8, 15], [6, 2], [10, 0], [16, 12], [18, 7], [12, 0], [0, 9], [8, 9], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [1, 6], [2, 16], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [7, 19], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [0, 9], [8, 9], [2, 3], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [13, 16], ----End Timer [Execute Mapping]:  2.718745708465576

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[61, 62, 75]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.421924352645874

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [61, 62, 75] ccc => cc]

--------End Timer [Generate Plans]:  0.015604019165039062

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [61, 62, 75] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [61, 62, 75] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [4, 12], [2, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [6, 2], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [1, 4], [2, 3], [5, 18], [7, 10], [1, 7], [17, 7], [5, 4], [10, 14], [1, 4], [10, 0], [12, 11], [11, 8], [14, 0], [13, 16], [4, 12], [3, 8], [4, 16], [2, 13], [8, 15], [6, 2], [10, 0], [16, 12], [18, 7], [12, 0], [8, 9], [0, 9], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [1, 6], [2, 16], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [7, 19], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [8, 9], [0, 9], [2, 3], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [13, 16], ----End Timer [Execute Mapping]:  2.437528371810913

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4062371253967285

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [2, 12], [4, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [6, 2], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [1, 4], [2, 3], [5, 18], [7, 10], [17, 7], [1, 7], [5, 4], [10, 14], [1, 4], [10, 0], [12, 11], [11, 8], [14, 0], [13, 16], [4, 12], [3, 8], [4, 16], [2, 13], [8, 15], [6, 2], [10, 0], [16, 12], [18, 7], [12, 0], [0, 9], [8, 9], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [1, 6], [2, 16], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [7, 19], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [0, 9], [8, 9], [2, 3], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [13, 16], ----End Timer [Execute Mapping]:  2.4062371253967285

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [144] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 288

Reduced: 
 - size: 81 (36.00%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07812023162841797

[5, 1], [18, 10], [8, 9], [17, 4], [12, 14], [5, 1], [8, 9], [6, 17], [12, 14], [7, 10], [2, 16], [1, 6], [11, 15], [8, 9], [16, 12], [10, 14], [1, 17], [8, 9], [4, 12], [2, 16], [10, 0], [18, 7], [17, 4], [11, 8], [10, 14], [16, 12], [2, 13], [9, 15], [5, 1], [1, 17], [0, 9], [2, 16], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [1, 17], [6, 2], [16, 3], [9, 15], [1, 17], [16, 11], [8, 15], [12, 0], [10, 14], [1, 6], [2, 16], [8, 15], [10, 12], [6, 2], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [6, 4], [6, 2], [11, 15], [7, 10], [1, 4], [6, 4], [8, 9], [1, 17], [12, 14], [2, 3], [7, 19], [18, 10], [4, 11], [6, 17], [5, 1], [9, 15], [7, 19], [10, 14], [11, 8], [17, 10], [13, 16], [8, 15], [5, 1], [16, 11], [18, 7], [2, 13], [6, 17], [10, 14], [9, 15], [18, 17], [12, 11], [1, 4], [19, 14], [9, 15], [2, 13], [12, 11], [8, 15], [6, 4], [2, 3], [19, 14], [5, 18], [7, 10], [1, 17], [8, 15], [17, 7], [5, 1], [10, 14], [6, 4], [8, 15], [1, 4], [10, 0], [12, 11], [18, 17], [6, 2], [11, 8], [14, 0], [2, 3], [5, 1], [18, 17], [13, 16], [4, 12], [12, 11], [7, 19], [3, 8], [10, 14], [4, 16], [2, 13], [12, 11], [1, 17], [8, 15], [6, 2], [7, 19], [10, 0], [16, 12], [10, 14], [18, 7], [2, 13], [12, 0], [18, 7], [8, 9], [0, 9], [2, 13], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [11, 15], [10, 14], [13, 3], [18, 7], [1, 6], [2, 16], [11, 15], [16, 3], [10, 14], [17, 7], [11, 9], [16, 3], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 7], [3, 8], [4, 12], [1, 6], [11, 8], [14, 0], [9, 15], [10, 12], [17, 4], [16, 3], [7, 19], [1, 6], [9, 15], [18, 10], [4, 16], [8, 15], [12, 14], [6, 17], [18, 10], [9, 15], [1, 17], [4, 12], [18, 7], [2, 3], [17, 10], [16, 11], [7, 19], [6, 17], [11, 9], [19, 14], [17, 7], [2, 3], [4, 11], [9, 15], [10, 14], [18, 7], [8, 9], [10, 14], [11, 8], [0, 9], [2, 3], [18, 17], [16, 12], [14, 0], [18, 17], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [11, 8], [4, 12], [18, 7], [13, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[2, 6]
[4, 8]
[6, 13]
[13, 17]
[15, 24]
[29, 37]
[37, 41]
[43, 48]
[49, 51]
[41, 63]
[66, 72]
[70, 78]
[84, 89]
[81, 90]
[86, 91]
[65, 94]
[88, 95]
[92, 99]
[93, 103]
[99, 104]
[91, 107]
[108, 114]
[117, 123]
[118, 127]
[120, 130]
[131, 134]
[132, 137]
[134, 138]
[147, 152]
[152, 158]
[153, 160]
[159, 163]
[156, 174]
[174, 182]
[177, 183]
[184, 189]
[194, 202]
[205, 208]
[202, 211]
[212, 215]
[209, 221]
[206, 223]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[19, 25, 31]
[32, 44, 49]
[50, 54, 57]
[171, 181, 193]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[94, 109, 112]
[122, 126, 132]
[181, 193, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[201, 206, 212]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[2, 6]
[4, 8]
[6, 13]
[13, 17]
[15, 24]
[29, 37]
[37, 41]
[43, 48]
[49, 51]
[41, 63]
[66, 72]
[70, 78]
[84, 89]
[81, 90]
[86, 91]
[65, 94]
[88, 95]
[92, 99]
[93, 103]
[99, 104]
[91, 107]
[108, 114]
[117, 123]
[118, 127]
[120, 130]
[131, 134]
[132, 137]
[134, 138]
[147, 152]
[152, 158]
[153, 160]
[159, 163]
[156, 174]
[174, 182]
[177, 183]
[184, 189]
[194, 202]
[205, 208]
[202, 211]
[212, 215]
[209, 221]
[206, 223]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.1718597412109375

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] cc => I, Pos: [0, 5] cc => I, Pos: [2, 6] cc => I, Pos: [2, 6] cc => I, Pos: [4, 8] cc => I, Pos: [4, 8] cc => I, Pos: [6, 13] cc => I, Pos: [6, 13] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [15, 24] cc => I, Pos: [15, 24] cc => I, Pos: [19, 25, 31] ccc => cc, Pos: [29, 37] cc => I, Pos: [29, 37] cc => I, Pos: [32, 44, 49] ccc => cc, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [41, 63] cc => I, Pos: [41, 63] cc => I, Pos: [43, 48] cc => I, Pos: [43, 48] cc => I, Pos: [49, 51] cc => I, Pos: [49, 51] cc => I, Pos: [50, 54, 57] ccc => cc, Pos: [65, 94] cc => I, Pos: [65, 94] cc => I, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [70, 78] cc => I, Pos: [70, 78] cc => I, Pos: [81, 90] cc => I, Pos: [81, 90] cc => I, Pos: [84, 89] cc => I, Pos: [84, 89] cc => I, Pos: [86, 91] cc => I, Pos: [86, 91] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [91, 107] cc => I, Pos: [91, 107] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [93, 103] cc => I, Pos: [93, 103] cc => I, Pos: [94, 109, 112] ccc => cc, Pos: [99, 104] cc => I, Pos: [99, 104] cc => I, Pos: [108, 114] cc => I, Pos: [108, 114] cc => I, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [118, 127] cc => I, Pos: [118, 127] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [122, 126, 132] ccc => cc, Pos: [131, 134] cc => I, Pos: [131, 134] cc => I, Pos: [132, 137] cc => I, Pos: [132, 137] cc => I, Pos: [134, 138] cc => I, Pos: [134, 138] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [152, 158] cc => I, Pos: [152, 158] cc => I, Pos: [153, 160] cc => I, Pos: [153, 160] cc => I, Pos: [156, 174] cc => I, Pos: [156, 174] cc => I, Pos: [159, 163] cc => I, Pos: [159, 163] cc => I, Pos: [171, 181, 193] ccc => cc, Pos: [174, 182] cc => I, Pos: [174, 182] cc => I, Pos: [177, 183] cc => I, Pos: [177, 183] cc => I, Pos: [181, 193, 197] ccc => cc, Pos: [184, 189] cc => I, Pos: [184, 189] cc => I, Pos: [194, 202] cc => I, Pos: [194, 202] cc => I, Pos: [201, 206, 212] ccc => cc, Pos: [202, 211] cc => I, Pos: [202, 211] cc => I, Pos: [205, 208] cc => I, Pos: [205, 208] cc => I, Pos: [206, 223] cc => I, Pos: [206, 223] cc => I, Pos: [209, 221] cc => I, Pos: [209, 221] cc => I, Pos: [212, 215] cc => I, Pos: [212, 215] cc => I]

--------End Timer [Generate Plans]:  0.09374547004699707

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 5] cc => I,
 Pos: [2, 6] cc => I,
 Pos: [4, 8] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [15, 24] cc => I,
 Pos: [19, 25, 31] ccc => cc,
 Pos: [37, 41] cc => I,
 Pos: [49, 51] cc => I,
 Pos: [43, 48] cc => I,
 Pos: [50, 54, 57] ccc => cc,
 Pos: [65, 94] cc => I,
 Pos: [66, 72] cc => I,
 Pos: [70, 78] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [84, 89] cc => I,
 Pos: [91, 107] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [99, 104] cc => I,
 Pos: [93, 103] cc => I,
 Pos: [108, 114] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [118, 127] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [132, 137] cc => I,
 Pos: [131, 134] cc => I,
 Pos: [152, 158] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [156, 174] cc => I,
 Pos: [159, 163] cc => I,
 Pos: [181, 193, 197] ccc => cc,
 Pos: [177, 183] cc => I,
 Pos: [184, 189] cc => I,
 Pos: [202, 211] cc => I,
 Pos: [201, 206, 212] ccc => cc,
 Pos: [205, 208] cc => I,
 Pos: [209, 221] cc => I]
Change: 36, Saving: 36

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 5] cc => I
Apply:  Pos: [2, 6] cc => I
Apply:  Pos: [4, 8] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [15, 24] cc => I
Apply:  Pos: [19, 25, 31] ccc => cc
Apply:  Pos: [37, 41] cc => I
Apply:  Pos: [49, 51] cc => I
Apply:  Pos: [43, 48] cc => I
Apply:  Pos: [50, 54, 57] ccc => cc
Apply:  Pos: [65, 94] cc => I
Apply:  Pos: [66, 72] cc => I
Apply:  Pos: [70, 78] cc => I
Apply:  Pos: [81, 90] cc => I
Apply:  Pos: [84, 89] cc => I
Apply:  Pos: [91, 107] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [99, 104] cc => I
Apply:  Pos: [93, 103] cc => I
Apply:  Pos: [108, 114] cc => I
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [118, 127] cc => I
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [132, 137] cc => I
Apply:  Pos: [131, 134] cc => I
Apply:  Pos: [152, 158] cc => I
Apply:  Pos: [153, 160] cc => I
Apply:  Pos: [156, 174] cc => I
Apply:  Pos: [159, 163] cc => I
Apply:  Pos: [181, 193, 197] ccc => cc
Apply:  Pos: [177, 183] cc => I
Apply:  Pos: [184, 189] cc => I
Apply:  Pos: [202, 211] cc => I
Apply:  Pos: [201, 206, 212] ccc => cc
Apply:  Pos: [205, 208] cc => I
Apply:  Pos: [209, 221] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [4, 12], [2, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [1, 17], [0, 9], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [0, 9], [11, 8], [2, 13], [12, 11], [6, 4], [11, 15], [7, 10], [1, 4], [6, 4], [8, 9], [1, 17], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [8, 15], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [8, 15], [5, 18], [7, 10], [1, 17], [17, 7], [5, 1], [10, 14], [1, 4], [10, 0], [6, 2], [11, 8], [14, 0], [2, 3], [5, 1], [13, 16], [4, 12], [3, 8], [4, 16], [2, 13], [1, 17], [8, 15], [6, 2], [10, 0], [16, 12], [12, 0], [8, 9], [0, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 7], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [18, 7], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [7, 19], [2, 3], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [18, 17], [4, 11], [9, 15], [17, 7], [8, 9], [0, 9], [16, 12], [14, 0], [18, 17], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [18, 7], [13, 16], ----End Timer [Execute Mapping]:  4.265605211257935

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 42]
[19, 45]
[55, 63]
[116, 124]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[68, 70, 76]
[140, 143, 148]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 42]
[19, 45]
[55, 63]
[116, 124]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7188034057617188

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 45] cc => I, Pos: [19, 45] cc => I, Pos: [39, 42] cc => I, Pos: [39, 42] cc => I, Pos: [55, 63] cc => I, Pos: [55, 63] cc => I, Pos: [68, 70, 76] ccc => cc, Pos: [116, 124] cc => I, Pos: [116, 124] cc => I, Pos: [140, 143, 148] ccc => cc]

--------End Timer [Generate Plans]:  0.015518426895141602

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 45] cc => I,
 Pos: [39, 42] cc => I,
 Pos: [55, 63] cc => I,
 Pos: [68, 70, 76] ccc => cc,
 Pos: [116, 124] cc => I,
 Pos: [140, 143, 148] ccc => cc]
Change: 6, Saving: 5

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [19, 45] cc => I
Apply:  Pos: [39, 42] cc => I
Apply:  Pos: [55, 63] cc => I
Apply:  Pos: [68, 70, 76] ccc => cc
Apply:  Pos: [116, 124] cc => I
Apply:  Pos: [140, 143, 148] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [2, 12], [4, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [5, 18], [7, 10], [1, 17], [17, 7], [5, 4], [10, 14], [1, 4], [10, 0], [6, 2], [11, 8], [14, 0], [2, 3], [13, 16], [4, 12], [3, 8], [4, 16], [2, 13], [1, 17], [8, 15], [6, 2], [10, 0], [16, 12], [12, 0], [0, 9], [8, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [7, 19], [2, 3], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [18, 7], [4, 11], [9, 15], [17, 7], [0, 9], [8, 9], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [18, 7], [13, 16], ----End Timer [Execute Mapping]:  2.7343218326568604

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[60, 61, 75]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4687132835388184

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [60, 61, 75] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [60, 61, 75] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [60, 61, 75] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [4, 12], [2, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [5, 18], [7, 10], [1, 7], [17, 7], [5, 4], [10, 14], [1, 4], [10, 0], [6, 2], [11, 8], [14, 0], [2, 3], [13, 16], [4, 12], [3, 8], [4, 16], [2, 13], [8, 15], [6, 2], [10, 0], [16, 12], [12, 0], [8, 9], [0, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [7, 19], [2, 3], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [18, 7], [4, 11], [9, 15], [17, 7], [8, 9], [0, 9], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [18, 7], [13, 16], ----End Timer [Execute Mapping]:  2.4687132835388184

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4692025184631348

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [2, 12], [4, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [5, 18], [7, 10], [17, 7], [1, 7], [5, 4], [10, 14], [1, 4], [10, 0], [6, 2], [11, 8], [14, 0], [2, 3], [13, 16], [4, 12], [3, 8], [4, 16], [2, 13], [8, 15], [6, 2], [10, 0], [16, 12], [12, 0], [0, 9], [8, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [7, 19], [2, 3], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [18, 7], [4, 11], [9, 15], [17, 7], [0, 9], [8, 9], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [18, 7], [13, 16], ----End Timer [Execute Mapping]:  2.4692025184631348

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [146] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 292

Reduced: 
 - size: 79 (35.11%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07811927795410156

[5, 1], [18, 10], [8, 9], [17, 4], [12, 14], [5, 1], [8, 9], [6, 17], [12, 14], [7, 10], [2, 16], [1, 6], [11, 15], [8, 9], [16, 12], [10, 14], [1, 17], [8, 9], [4, 12], [2, 16], [10, 0], [18, 7], [17, 4], [11, 8], [10, 14], [16, 12], [2, 13], [9, 15], [5, 1], [1, 17], [0, 9], [2, 16], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [1, 17], [6, 2], [16, 3], [9, 15], [1, 17], [16, 11], [8, 15], [12, 0], [10, 14], [1, 6], [2, 16], [8, 15], [10, 12], [6, 2], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [6, 4], [6, 2], [11, 15], [7, 10], [1, 4], [6, 4], [8, 9], [1, 17], [12, 14], [2, 3], [7, 19], [18, 10], [4, 11], [6, 17], [5, 1], [9, 15], [7, 19], [10, 14], [11, 8], [17, 10], [13, 16], [8, 15], [5, 1], [16, 11], [18, 7], [2, 13], [6, 17], [10, 14], [9, 15], [18, 17], [12, 11], [1, 4], [19, 14], [9, 15], [2, 13], [12, 11], [8, 15], [6, 4], [2, 3], [19, 14], [5, 18], [7, 10], [1, 17], [8, 15], [17, 7], [5, 1], [10, 14], [6, 4], [8, 15], [1, 4], [10, 0], [12, 11], [18, 17], [6, 2], [11, 8], [14, 0], [2, 3], [5, 1], [18, 17], [13, 16], [4, 12], [12, 11], [7, 19], [3, 8], [10, 14], [4, 16], [2, 13], [12, 11], [1, 17], [8, 15], [6, 2], [7, 19], [10, 0], [16, 12], [10, 14], [18, 7], [2, 13], [12, 0], [18, 7], [8, 9], [0, 9], [2, 13], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [11, 15], [10, 14], [13, 3], [18, 7], [1, 6], [2, 16], [11, 15], [16, 3], [10, 14], [17, 7], [11, 9], [16, 3], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 7], [3, 8], [4, 12], [1, 6], [11, 8], [14, 0], [9, 15], [10, 12], [17, 4], [16, 3], [7, 19], [1, 6], [9, 15], [18, 10], [4, 16], [8, 15], [12, 14], [6, 17], [18, 10], [9, 15], [1, 17], [4, 12], [18, 7], [2, 3], [17, 10], [16, 11], [7, 19], [6, 17], [11, 9], [19, 14], [17, 7], [2, 3], [4, 11], [9, 15], [10, 14], [18, 7], [8, 9], [10, 14], [11, 8], [0, 9], [2, 3], [18, 17], [16, 12], [14, 0], [18, 17], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [11, 8], [4, 12], [18, 7], [13, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[2, 6]
[4, 8]
[6, 13]
[13, 17]
[15, 24]
[29, 37]
[37, 41]
[43, 48]
[49, 51]
[41, 63]
[66, 72]
[70, 78]
[84, 89]
[81, 90]
[86, 91]
[65, 94]
[88, 95]
[92, 99]
[93, 103]
[99, 104]
[91, 107]
[108, 114]
[117, 123]
[118, 127]
[120, 130]
[131, 134]
[132, 137]
[134, 138]
[147, 152]
[152, 158]
[153, 160]
[159, 163]
[156, 174]
[174, 182]
[177, 183]
[184, 189]
[194, 202]
[205, 208]
[202, 211]
[212, 215]
[209, 221]
[206, 223]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[19, 25, 31]
[32, 44, 49]
[50, 54, 57]
[171, 181, 193]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[94, 109, 112]
[122, 126, 132]
[181, 193, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[201, 206, 212]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[2, 6]
[4, 8]
[6, 13]
[13, 17]
[15, 24]
[29, 37]
[37, 41]
[43, 48]
[49, 51]
[41, 63]
[66, 72]
[70, 78]
[84, 89]
[81, 90]
[86, 91]
[65, 94]
[88, 95]
[92, 99]
[93, 103]
[99, 104]
[91, 107]
[108, 114]
[117, 123]
[118, 127]
[120, 130]
[131, 134]
[132, 137]
[134, 138]
[147, 152]
[152, 158]
[153, 160]
[159, 163]
[156, 174]
[174, 182]
[177, 183]
[184, 189]
[194, 202]
[205, 208]
[202, 211]
[212, 215]
[209, 221]
[206, 223]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.280078172683716

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] cc => I, Pos: [0, 5] cc => I, Pos: [2, 6] cc => I, Pos: [2, 6] cc => I, Pos: [4, 8] cc => I, Pos: [4, 8] cc => I, Pos: [6, 13] cc => I, Pos: [6, 13] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [15, 24] cc => I, Pos: [15, 24] cc => I, Pos: [19, 25, 31] ccc => cc, Pos: [29, 37] cc => I, Pos: [29, 37] cc => I, Pos: [32, 44, 49] ccc => cc, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [41, 63] cc => I, Pos: [41, 63] cc => I, Pos: [43, 48] cc => I, Pos: [43, 48] cc => I, Pos: [49, 51] cc => I, Pos: [49, 51] cc => I, Pos: [50, 54, 57] ccc => cc, Pos: [65, 94] cc => I, Pos: [65, 94] cc => I, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [70, 78] cc => I, Pos: [70, 78] cc => I, Pos: [81, 90] cc => I, Pos: [81, 90] cc => I, Pos: [84, 89] cc => I, Pos: [84, 89] cc => I, Pos: [86, 91] cc => I, Pos: [86, 91] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [91, 107] cc => I, Pos: [91, 107] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [93, 103] cc => I, Pos: [93, 103] cc => I, Pos: [94, 109, 112] ccc => cc, Pos: [99, 104] cc => I, Pos: [99, 104] cc => I, Pos: [108, 114] cc => I, Pos: [108, 114] cc => I, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [118, 127] cc => I, Pos: [118, 127] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [122, 126, 132] ccc => cc, Pos: [131, 134] cc => I, Pos: [131, 134] cc => I, Pos: [132, 137] cc => I, Pos: [132, 137] cc => I, Pos: [134, 138] cc => I, Pos: [134, 138] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [152, 158] cc => I, Pos: [152, 158] cc => I, Pos: [153, 160] cc => I, Pos: [153, 160] cc => I, Pos: [156, 174] cc => I, Pos: [156, 174] cc => I, Pos: [159, 163] cc => I, Pos: [159, 163] cc => I, Pos: [171, 181, 193] ccc => cc, Pos: [174, 182] cc => I, Pos: [174, 182] cc => I, Pos: [177, 183] cc => I, Pos: [177, 183] cc => I, Pos: [181, 193, 197] ccc => cc, Pos: [184, 189] cc => I, Pos: [184, 189] cc => I, Pos: [194, 202] cc => I, Pos: [194, 202] cc => I, Pos: [201, 206, 212] ccc => cc, Pos: [202, 211] cc => I, Pos: [202, 211] cc => I, Pos: [205, 208] cc => I, Pos: [205, 208] cc => I, Pos: [206, 223] cc => I, Pos: [206, 223] cc => I, Pos: [209, 221] cc => I, Pos: [209, 221] cc => I, Pos: [212, 215] cc => I, Pos: [212, 215] cc => I]

--------End Timer [Generate Plans]:  0.09374403953552246

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 5] cc => I,
 Pos: [2, 6] cc => I,
 Pos: [4, 8] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [15, 24] cc => I,
 Pos: [19, 25, 31] ccc => cc,
 Pos: [37, 41] cc => I,
 Pos: [49, 51] cc => I,
 Pos: [43, 48] cc => I,
 Pos: [50, 54, 57] ccc => cc,
 Pos: [94, 109, 112] ccc => cc,
 Pos: [66, 72] cc => I,
 Pos: [70, 78] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [84, 89] cc => I,
 Pos: [91, 107] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [93, 103] cc => I,
 Pos: [108, 114] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [118, 127] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [132, 137] cc => I,
 Pos: [131, 134] cc => I,
 Pos: [152, 158] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [156, 174] cc => I,
 Pos: [159, 163] cc => I,
 Pos: [171, 181, 193] ccc => cc,
 Pos: [177, 183] cc => I,
 Pos: [184, 189] cc => I,
 Pos: [194, 202] cc => I,
 Pos: [212, 215] cc => I,
 Pos: [205, 208] cc => I,
 Pos: [209, 221] cc => I]
Change: 36, Saving: 36

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 5] cc => I
Apply:  Pos: [2, 6] cc => I
Apply:  Pos: [4, 8] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [15, 24] cc => I
Apply:  Pos: [19, 25, 31] ccc => cc
Apply:  Pos: [37, 41] cc => I
Apply:  Pos: [49, 51] cc => I
Apply:  Pos: [43, 48] cc => I
Apply:  Pos: [50, 54, 57] ccc => cc
Apply:  Pos: [94, 109, 112] ccc => cc
Apply:  Pos: [66, 72] cc => I
Apply:  Pos: [70, 78] cc => I
Apply:  Pos: [81, 90] cc => I
Apply:  Pos: [84, 89] cc => I
Apply:  Pos: [91, 107] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [93, 103] cc => I
Apply:  Pos: [108, 114] cc => I
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [118, 127] cc => I
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [132, 137] cc => I
Apply:  Pos: [131, 134] cc => I
Apply:  Pos: [152, 158] cc => I
Apply:  Pos: [153, 160] cc => I
Apply:  Pos: [156, 174] cc => I
Apply:  Pos: [159, 163] cc => I
Apply:  Pos: [171, 181, 193] ccc => cc
Apply:  Pos: [177, 183] cc => I
Apply:  Pos: [184, 189] cc => I
Apply:  Pos: [194, 202] cc => I
Apply:  Pos: [212, 215] cc => I
Apply:  Pos: [205, 208] cc => I
Apply:  Pos: [209, 221] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [4, 12], [2, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [1, 17], [0, 9], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [0, 9], [11, 8], [2, 13], [12, 11], [6, 4], [11, 15], [7, 10], [1, 4], [6, 4], [8, 9], [1, 17], [12, 14], [2, 3], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [8, 15], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [6, 2], [5, 18], [7, 10], [1, 17], [17, 7], [5, 1], [10, 14], [8, 15], [1, 4], [10, 0], [2, 3], [11, 8], [14, 0], [5, 1], [13, 16], [4, 12], [3, 8], [4, 16], [2, 13], [1, 17], [8, 15], [6, 2], [10, 0], [16, 12], [12, 0], [8, 9], [0, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [7, 19], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [17, 10], [16, 11], [7, 19], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [18, 7], [8, 9], [0, 9], [2, 3], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [18, 7], [13, 16], ----End Timer [Execute Mapping]:  4.373822212219238

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 42]
[19, 45]
[56, 71]
[125, 136]
[143, 155]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[69, 72, 77]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[47, 64, 74]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 42]
[19, 45]
[56, 71]
[125, 136]
[143, 155]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.734879970550537

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 45] cc => I, Pos: [19, 45] cc => I, Pos: [39, 42] cc => I, Pos: [39, 42] cc => I, Pos: [47, 64, 74] ccc => cc, Pos: [56, 71] cc => I, Pos: [56, 71] cc => I, Pos: [69, 72, 77] ccc => cc, Pos: [125, 136] cc => I, Pos: [125, 136] cc => I, Pos: [143, 155] cc => I, Pos: [143, 155] cc => I]

--------End Timer [Generate Plans]:  0.015623092651367188

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 45] cc => I,
 Pos: [39, 42] cc => I,
 Pos: [47, 64, 74] ccc => cc,
 Pos: [56, 71] cc => I,
 Pos: [69, 72, 77] ccc => cc,
 Pos: [125, 136] cc => I,
 Pos: [143, 155] cc => I]
Change: 7, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [19, 45] cc => I
Apply:  Pos: [39, 42] cc => I
Apply:  Pos: [47, 64, 74] ccc => cc
Apply:  Pos: [56, 71] cc => I
Apply:  Pos: [69, 72, 77] ccc => cc
Apply:  Pos: [125, 136] cc => I
Apply:  Pos: [143, 155] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [2, 12], [4, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [6, 2], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [2, 3], [5, 18], [7, 10], [1, 17], [17, 7], [5, 4], [10, 14], [1, 4], [10, 0], [11, 8], [14, 0], [13, 16], [4, 12], [3, 8], [4, 16], [2, 13], [1, 17], [8, 15], [6, 2], [10, 0], [16, 12], [12, 0], [0, 9], [8, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [0, 9], [8, 9], [2, 3], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [13, 16], ----End Timer [Execute Mapping]:  2.7505030632019043

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[62, 63, 75]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4689242839813232

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [62, 63, 75] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [62, 63, 75] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [62, 63, 75] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [4, 12], [2, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [6, 2], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [2, 3], [5, 18], [7, 10], [1, 7], [17, 7], [5, 4], [10, 14], [1, 4], [10, 0], [11, 8], [14, 0], [13, 16], [4, 12], [3, 8], [4, 16], [2, 13], [8, 15], [6, 2], [10, 0], [16, 12], [12, 0], [8, 9], [0, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [8, 9], [0, 9], [2, 3], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [13, 16], ----End Timer [Execute Mapping]:  2.4689242839813232

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.45343017578125

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [2, 12], [4, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [6, 2], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [2, 3], [5, 18], [7, 10], [17, 7], [1, 7], [5, 4], [10, 14], [1, 4], [10, 0], [11, 8], [14, 0], [13, 16], [4, 12], [3, 8], [4, 16], [2, 13], [8, 15], [6, 2], [10, 0], [16, 12], [12, 0], [0, 9], [8, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [0, 9], [8, 9], [2, 3], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [13, 16], ----End Timer [Execute Mapping]:  2.45343017578125

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [144] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 288

Reduced: 
 - size: 81 (36.00%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374332427978516

[5, 1], [18, 10], [8, 9], [17, 4], [12, 14], [5, 1], [8, 9], [6, 17], [12, 14], [7, 10], [2, 16], [1, 6], [11, 15], [8, 9], [16, 12], [10, 14], [1, 17], [8, 9], [4, 12], [2, 16], [10, 0], [18, 7], [17, 4], [11, 8], [10, 14], [16, 12], [2, 13], [9, 15], [5, 1], [1, 17], [0, 9], [2, 16], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [1, 17], [6, 2], [16, 3], [9, 15], [1, 17], [16, 11], [8, 15], [12, 0], [10, 14], [1, 6], [2, 16], [8, 15], [10, 12], [6, 2], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [6, 4], [6, 2], [11, 15], [7, 10], [1, 4], [6, 4], [8, 9], [1, 17], [12, 14], [2, 3], [7, 19], [18, 10], [4, 11], [6, 17], [5, 1], [9, 15], [7, 19], [10, 14], [11, 8], [17, 10], [13, 16], [8, 15], [5, 1], [16, 11], [18, 7], [2, 13], [6, 17], [10, 14], [9, 15], [18, 17], [12, 11], [1, 4], [19, 14], [9, 15], [2, 13], [12, 11], [8, 15], [6, 4], [2, 3], [19, 14], [5, 18], [7, 10], [1, 17], [8, 15], [17, 7], [5, 1], [10, 14], [6, 4], [8, 15], [1, 4], [10, 0], [12, 11], [18, 17], [6, 2], [11, 8], [14, 0], [2, 3], [5, 1], [18, 17], [13, 16], [4, 12], [12, 11], [7, 19], [3, 8], [10, 14], [4, 16], [2, 13], [12, 11], [1, 17], [8, 15], [6, 2], [7, 19], [10, 0], [16, 12], [10, 14], [18, 7], [2, 13], [12, 0], [18, 7], [8, 9], [0, 9], [2, 13], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [11, 15], [10, 14], [13, 3], [18, 7], [1, 6], [2, 16], [11, 15], [16, 3], [10, 14], [17, 7], [11, 9], [16, 3], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 7], [3, 8], [4, 12], [1, 6], [11, 8], [14, 0], [9, 15], [10, 12], [17, 4], [16, 3], [7, 19], [1, 6], [9, 15], [18, 10], [4, 16], [8, 15], [12, 14], [6, 17], [18, 10], [9, 15], [1, 17], [4, 12], [18, 7], [2, 3], [17, 10], [16, 11], [7, 19], [6, 17], [11, 9], [19, 14], [17, 7], [2, 3], [4, 11], [9, 15], [10, 14], [18, 7], [8, 9], [10, 14], [11, 8], [0, 9], [2, 3], [18, 17], [16, 12], [14, 0], [18, 17], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [11, 8], [4, 12], [18, 7], [13, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[2, 6]
[4, 8]
[6, 13]
[13, 17]
[15, 24]
[29, 37]
[37, 41]
[43, 48]
[49, 51]
[41, 63]
[66, 72]
[70, 78]
[84, 89]
[81, 90]
[86, 91]
[65, 94]
[88, 95]
[92, 99]
[93, 103]
[99, 104]
[91, 107]
[108, 114]
[117, 123]
[118, 127]
[120, 130]
[131, 134]
[132, 137]
[134, 138]
[147, 152]
[152, 158]
[153, 160]
[159, 163]
[156, 174]
[174, 182]
[177, 183]
[184, 189]
[194, 202]
[205, 208]
[202, 211]
[212, 215]
[209, 221]
[206, 223]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[19, 25, 31]
[32, 44, 49]
[50, 54, 57]
[171, 181, 193]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[94, 109, 112]
[122, 126, 132]
[181, 193, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[201, 206, 212]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[2, 6]
[4, 8]
[6, 13]
[13, 17]
[15, 24]
[29, 37]
[37, 41]
[43, 48]
[49, 51]
[41, 63]
[66, 72]
[70, 78]
[84, 89]
[81, 90]
[86, 91]
[65, 94]
[88, 95]
[92, 99]
[93, 103]
[99, 104]
[91, 107]
[108, 114]
[117, 123]
[118, 127]
[120, 130]
[131, 134]
[132, 137]
[134, 138]
[147, 152]
[152, 158]
[153, 160]
[159, 163]
[156, 174]
[174, 182]
[177, 183]
[184, 189]
[194, 202]
[205, 208]
[202, 211]
[212, 215]
[209, 221]
[206, 223]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.203203916549683

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] cc => I, Pos: [0, 5] cc => I, Pos: [2, 6] cc => I, Pos: [2, 6] cc => I, Pos: [4, 8] cc => I, Pos: [4, 8] cc => I, Pos: [6, 13] cc => I, Pos: [6, 13] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [15, 24] cc => I, Pos: [15, 24] cc => I, Pos: [19, 25, 31] ccc => cc, Pos: [29, 37] cc => I, Pos: [29, 37] cc => I, Pos: [32, 44, 49] ccc => cc, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [41, 63] cc => I, Pos: [41, 63] cc => I, Pos: [43, 48] cc => I, Pos: [43, 48] cc => I, Pos: [49, 51] cc => I, Pos: [49, 51] cc => I, Pos: [50, 54, 57] ccc => cc, Pos: [65, 94] cc => I, Pos: [65, 94] cc => I, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [70, 78] cc => I, Pos: [70, 78] cc => I, Pos: [81, 90] cc => I, Pos: [81, 90] cc => I, Pos: [84, 89] cc => I, Pos: [84, 89] cc => I, Pos: [86, 91] cc => I, Pos: [86, 91] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [91, 107] cc => I, Pos: [91, 107] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [93, 103] cc => I, Pos: [93, 103] cc => I, Pos: [94, 109, 112] ccc => cc, Pos: [99, 104] cc => I, Pos: [99, 104] cc => I, Pos: [108, 114] cc => I, Pos: [108, 114] cc => I, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [118, 127] cc => I, Pos: [118, 127] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [122, 126, 132] ccc => cc, Pos: [131, 134] cc => I, Pos: [131, 134] cc => I, Pos: [132, 137] cc => I, Pos: [132, 137] cc => I, Pos: [134, 138] cc => I, Pos: [134, 138] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [152, 158] cc => I, Pos: [152, 158] cc => I, Pos: [153, 160] cc => I, Pos: [153, 160] cc => I, Pos: [156, 174] cc => I, Pos: [156, 174] cc => I, Pos: [159, 163] cc => I, Pos: [159, 163] cc => I, Pos: [171, 181, 193] ccc => cc, Pos: [174, 182] cc => I, Pos: [174, 182] cc => I, Pos: [177, 183] cc => I, Pos: [177, 183] cc => I, Pos: [181, 193, 197] ccc => cc, Pos: [184, 189] cc => I, Pos: [184, 189] cc => I, Pos: [194, 202] cc => I, Pos: [194, 202] cc => I, Pos: [201, 206, 212] ccc => cc, Pos: [202, 211] cc => I, Pos: [202, 211] cc => I, Pos: [205, 208] cc => I, Pos: [205, 208] cc => I, Pos: [206, 223] cc => I, Pos: [206, 223] cc => I, Pos: [209, 221] cc => I, Pos: [209, 221] cc => I, Pos: [212, 215] cc => I, Pos: [212, 215] cc => I]

--------End Timer [Generate Plans]:  0.09374284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 5] cc => I,
 Pos: [2, 6] cc => I,
 Pos: [4, 8] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [15, 24] cc => I,
 Pos: [19, 25, 31] ccc => cc,
 Pos: [37, 41] cc => I,
 Pos: [32, 44, 49] ccc => cc,
 Pos: [43, 48] cc => I,
 Pos: [50, 54, 57] ccc => cc,
 Pos: [94, 109, 112] ccc => cc,
 Pos: [66, 72] cc => I,
 Pos: [70, 78] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [84, 89] cc => I,
 Pos: [91, 107] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [99, 104] cc => I,
 Pos: [93, 103] cc => I,
 Pos: [108, 114] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [118, 127] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [122, 126, 132] ccc => cc,
 Pos: [134, 138] cc => I,
 Pos: [147, 152] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [174, 182] cc => I,
 Pos: [159, 163] cc => I,
 Pos: [171, 181, 193] ccc => cc,
 Pos: [177, 183] cc => I,
 Pos: [184, 189] cc => I,
 Pos: [202, 211] cc => I,
 Pos: [206, 223] cc => I,
 Pos: [205, 208] cc => I,
 Pos: [209, 221] cc => I]
Change: 36, Saving: 36

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 5] cc => I
Apply:  Pos: [2, 6] cc => I
Apply:  Pos: [4, 8] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [15, 24] cc => I
Apply:  Pos: [19, 25, 31] ccc => cc
Apply:  Pos: [37, 41] cc => I
Apply:  Pos: [32, 44, 49] ccc => cc
Apply:  Pos: [43, 48] cc => I
Apply:  Pos: [50, 54, 57] ccc => cc
Apply:  Pos: [94, 109, 112] ccc => cc
Apply:  Pos: [66, 72] cc => I
Apply:  Pos: [70, 78] cc => I
Apply:  Pos: [81, 90] cc => I
Apply:  Pos: [84, 89] cc => I
Apply:  Pos: [91, 107] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [99, 104] cc => I
Apply:  Pos: [93, 103] cc => I
Apply:  Pos: [108, 114] cc => I
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [118, 127] cc => I
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [122, 126, 132] ccc => cc
Apply:  Pos: [134, 138] cc => I
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [153, 160] cc => I
Apply:  Pos: [174, 182] cc => I
Apply:  Pos: [159, 163] cc => I
Apply:  Pos: [171, 181, 193] ccc => cc
Apply:  Pos: [177, 183] cc => I
Apply:  Pos: [184, 189] cc => I
Apply:  Pos: [202, 211] cc => I
Apply:  Pos: [206, 223] cc => I
Apply:  Pos: [205, 208] cc => I
Apply:  Pos: [209, 221] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [4, 12], [2, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [1, 17], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [6, 4], [11, 15], [7, 10], [1, 4], [6, 4], [8, 9], [1, 17], [12, 14], [2, 3], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [8, 15], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [8, 15], [6, 2], [5, 18], [7, 10], [1, 17], [17, 7], [5, 1], [10, 14], [1, 4], [10, 0], [2, 3], [11, 8], [14, 0], [5, 1], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [1, 17], [8, 15], [2, 13], [10, 0], [16, 12], [18, 7], [12, 0], [8, 9], [0, 9], [2, 13], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [1, 6], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [7, 19], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [2, 3], [17, 10], [16, 11], [7, 19], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [8, 9], [0, 9], [18, 17], [16, 12], [14, 0], [18, 17], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [13, 16], ----End Timer [Execute Mapping]:  4.29694676399231

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[40, 43]
[19, 46]
[57, 65]
[86, 93]
[128, 139]
[148, 151]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[71, 73, 78]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[48, 66, 75]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[40, 43]
[19, 46]
[57, 65]
[86, 93]
[128, 139]
[148, 151]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.781247138977051

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 46] cc => I, Pos: [19, 46] cc => I, Pos: [40, 43] cc => I, Pos: [40, 43] cc => I, Pos: [48, 66, 75] ccc => cc, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [71, 73, 78] ccc => cc, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [128, 139] cc => I, Pos: [128, 139] cc => I, Pos: [148, 151] cc => I, Pos: [148, 151] cc => I]

--------End Timer [Generate Plans]:  0.0156252384185791

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 46] cc => I,
 Pos: [40, 43] cc => I,
 Pos: [48, 66, 75] ccc => cc,
 Pos: [57, 65] cc => I,
 Pos: [71, 73, 78] ccc => cc,
 Pos: [86, 93] cc => I,
 Pos: [128, 139] cc => I,
 Pos: [148, 151] cc => I]
Change: 8, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [19, 46] cc => I
Apply:  Pos: [40, 43] cc => I
Apply:  Pos: [48, 66, 75] ccc => cc
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [71, 73, 78] ccc => cc
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [128, 139] cc => I
Apply:  Pos: [148, 151] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [2, 12], [4, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [6, 2], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [2, 3], [5, 18], [7, 10], [1, 17], [17, 7], [5, 4], [10, 14], [1, 4], [10, 0], [11, 8], [14, 0], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [1, 17], [8, 15], [10, 0], [16, 12], [18, 7], [12, 0], [0, 9], [8, 9], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 4], [6, 17], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [1, 6], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [2, 3], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [0, 9], [8, 9], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [13, 16], ----End Timer [Execute Mapping]:  2.79687237739563

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[91, 105]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[63, 64, 76]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[91, 105]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4843504428863525

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [63, 64, 76] ccc => cc, Pos: [91, 105] cc => I, Pos: [91, 105] cc => I]

--------End Timer [Generate Plans]:  0.015610933303833008

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [63, 64, 76] ccc => cc, Pos: [91, 105] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [63, 64, 76] ccc => cc
Apply:  Pos: [91, 105] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [4, 12], [2, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [6, 2], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [2, 3], [5, 18], [7, 10], [1, 7], [17, 7], [5, 4], [10, 14], [1, 4], [10, 0], [11, 8], [14, 0], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [8, 15], [10, 0], [16, 12], [18, 7], [12, 0], [8, 9], [0, 9], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [6, 4], [6, 17], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [1, 6], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [2, 3], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [8, 9], [0, 9], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [13, 16], ----End Timer [Execute Mapping]:  2.4999613761901855

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3593595027923584

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [2, 12], [4, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [6, 2], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [2, 3], [5, 18], [7, 10], [17, 7], [1, 7], [5, 4], [10, 14], [1, 4], [10, 0], [11, 8], [14, 0], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [8, 15], [10, 0], [16, 12], [18, 7], [12, 0], [0, 9], [8, 9], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [6, 17], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [1, 6], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [2, 3], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [0, 9], [8, 9], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [13, 16], ----End Timer [Execute Mapping]:  2.3593595027923584

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [142] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 284

Reduced: 
 - size: 83 (36.89%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09373068809509277

[5, 1], [18, 10], [8, 9], [17, 4], [12, 14], [5, 1], [8, 9], [6, 17], [12, 14], [7, 10], [2, 16], [1, 6], [11, 15], [8, 9], [16, 12], [10, 14], [1, 17], [8, 9], [4, 12], [2, 16], [10, 0], [18, 7], [17, 4], [11, 8], [10, 14], [16, 12], [2, 13], [9, 15], [5, 1], [1, 17], [0, 9], [2, 16], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [1, 17], [6, 2], [16, 3], [9, 15], [1, 17], [16, 11], [8, 15], [12, 0], [10, 14], [1, 6], [2, 16], [8, 15], [10, 12], [6, 2], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [6, 4], [6, 2], [11, 15], [7, 10], [1, 4], [6, 4], [8, 9], [1, 17], [12, 14], [2, 3], [7, 19], [18, 10], [4, 11], [6, 17], [5, 1], [9, 15], [7, 19], [10, 14], [11, 8], [17, 10], [13, 16], [8, 15], [5, 1], [16, 11], [18, 7], [2, 13], [6, 17], [10, 14], [9, 15], [18, 17], [12, 11], [1, 4], [19, 14], [9, 15], [2, 13], [12, 11], [8, 15], [6, 4], [2, 3], [19, 14], [5, 18], [7, 10], [1, 17], [8, 15], [17, 7], [5, 1], [10, 14], [6, 4], [8, 15], [1, 4], [10, 0], [12, 11], [18, 17], [6, 2], [11, 8], [14, 0], [2, 3], [5, 1], [18, 17], [13, 16], [4, 12], [12, 11], [7, 19], [3, 8], [10, 14], [4, 16], [2, 13], [12, 11], [1, 17], [8, 15], [6, 2], [7, 19], [10, 0], [16, 12], [10, 14], [18, 7], [2, 13], [12, 0], [18, 7], [8, 9], [0, 9], [2, 13], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [11, 15], [10, 14], [13, 3], [18, 7], [1, 6], [2, 16], [11, 15], [16, 3], [10, 14], [17, 7], [11, 9], [16, 3], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 7], [3, 8], [4, 12], [1, 6], [11, 8], [14, 0], [9, 15], [10, 12], [17, 4], [16, 3], [7, 19], [1, 6], [9, 15], [18, 10], [4, 16], [8, 15], [12, 14], [6, 17], [18, 10], [9, 15], [1, 17], [4, 12], [18, 7], [2, 3], [17, 10], [16, 11], [7, 19], [6, 17], [11, 9], [19, 14], [17, 7], [2, 3], [4, 11], [9, 15], [10, 14], [18, 7], [8, 9], [10, 14], [11, 8], [0, 9], [2, 3], [18, 17], [16, 12], [14, 0], [18, 17], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [11, 8], [4, 12], [18, 7], [13, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[2, 6]
[4, 8]
[6, 13]
[13, 17]
[15, 24]
[29, 37]
[37, 41]
[43, 48]
[49, 51]
[41, 63]
[66, 72]
[70, 78]
[84, 89]
[81, 90]
[86, 91]
[65, 94]
[88, 95]
[92, 99]
[93, 103]
[99, 104]
[91, 107]
[108, 114]
[117, 123]
[118, 127]
[120, 130]
[131, 134]
[132, 137]
[134, 138]
[147, 152]
[152, 158]
[153, 160]
[159, 163]
[156, 174]
[174, 182]
[177, 183]
[184, 189]
[194, 202]
[205, 208]
[202, 211]
[212, 215]
[209, 221]
[206, 223]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[19, 25, 31]
[32, 44, 49]
[50, 54, 57]
[171, 181, 193]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[94, 109, 112]
[122, 126, 132]
[181, 193, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[201, 206, 212]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[2, 6]
[4, 8]
[6, 13]
[13, 17]
[15, 24]
[29, 37]
[37, 41]
[43, 48]
[49, 51]
[41, 63]
[66, 72]
[70, 78]
[84, 89]
[81, 90]
[86, 91]
[65, 94]
[88, 95]
[92, 99]
[93, 103]
[99, 104]
[91, 107]
[108, 114]
[117, 123]
[118, 127]
[120, 130]
[131, 134]
[132, 137]
[134, 138]
[147, 152]
[152, 158]
[153, 160]
[159, 163]
[156, 174]
[174, 182]
[177, 183]
[184, 189]
[194, 202]
[205, 208]
[202, 211]
[212, 215]
[209, 221]
[206, 223]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.203092336654663

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] cc => I, Pos: [0, 5] cc => I, Pos: [2, 6] cc => I, Pos: [2, 6] cc => I, Pos: [4, 8] cc => I, Pos: [4, 8] cc => I, Pos: [6, 13] cc => I, Pos: [6, 13] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [15, 24] cc => I, Pos: [15, 24] cc => I, Pos: [19, 25, 31] ccc => cc, Pos: [29, 37] cc => I, Pos: [29, 37] cc => I, Pos: [32, 44, 49] ccc => cc, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [41, 63] cc => I, Pos: [41, 63] cc => I, Pos: [43, 48] cc => I, Pos: [43, 48] cc => I, Pos: [49, 51] cc => I, Pos: [49, 51] cc => I, Pos: [50, 54, 57] ccc => cc, Pos: [65, 94] cc => I, Pos: [65, 94] cc => I, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [70, 78] cc => I, Pos: [70, 78] cc => I, Pos: [81, 90] cc => I, Pos: [81, 90] cc => I, Pos: [84, 89] cc => I, Pos: [84, 89] cc => I, Pos: [86, 91] cc => I, Pos: [86, 91] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [91, 107] cc => I, Pos: [91, 107] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [93, 103] cc => I, Pos: [93, 103] cc => I, Pos: [94, 109, 112] ccc => cc, Pos: [99, 104] cc => I, Pos: [99, 104] cc => I, Pos: [108, 114] cc => I, Pos: [108, 114] cc => I, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [118, 127] cc => I, Pos: [118, 127] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [122, 126, 132] ccc => cc, Pos: [131, 134] cc => I, Pos: [131, 134] cc => I, Pos: [132, 137] cc => I, Pos: [132, 137] cc => I, Pos: [134, 138] cc => I, Pos: [134, 138] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [152, 158] cc => I, Pos: [152, 158] cc => I, Pos: [153, 160] cc => I, Pos: [153, 160] cc => I, Pos: [156, 174] cc => I, Pos: [156, 174] cc => I, Pos: [159, 163] cc => I, Pos: [159, 163] cc => I, Pos: [171, 181, 193] ccc => cc, Pos: [174, 182] cc => I, Pos: [174, 182] cc => I, Pos: [177, 183] cc => I, Pos: [177, 183] cc => I, Pos: [181, 193, 197] ccc => cc, Pos: [184, 189] cc => I, Pos: [184, 189] cc => I, Pos: [194, 202] cc => I, Pos: [194, 202] cc => I, Pos: [201, 206, 212] ccc => cc, Pos: [202, 211] cc => I, Pos: [202, 211] cc => I, Pos: [205, 208] cc => I, Pos: [205, 208] cc => I, Pos: [206, 223] cc => I, Pos: [206, 223] cc => I, Pos: [209, 221] cc => I, Pos: [209, 221] cc => I, Pos: [212, 215] cc => I, Pos: [212, 215] cc => I]

--------End Timer [Generate Plans]:  0.09374356269836426

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 5] cc => I,
 Pos: [6, 13] cc => I,
 Pos: [4, 8] cc => I,
 Pos: [15, 24] cc => I,
 Pos: [19, 25, 31] ccc => cc,
 Pos: [29, 37] cc => I,
 Pos: [32, 44, 49] ccc => cc,
 Pos: [41, 63] cc => I,
 Pos: [43, 48] cc => I,
 Pos: [50, 54, 57] ccc => cc,
 Pos: [65, 94] cc => I,
 Pos: [66, 72] cc => I,
 Pos: [70, 78] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [84, 89] cc => I,
 Pos: [91, 107] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [93, 103] cc => I,
 Pos: [108, 114] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [118, 127] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [132, 137] cc => I,
 Pos: [131, 134] cc => I,
 Pos: [147, 152] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [156, 174] cc => I,
 Pos: [159, 163] cc => I,
 Pos: [181, 193, 197] ccc => cc,
 Pos: [177, 183] cc => I,
 Pos: [184, 189] cc => I,
 Pos: [202, 211] cc => I,
 Pos: [212, 215] cc => I,
 Pos: [205, 208] cc => I,
 Pos: [209, 221] cc => I]
Change: 36, Saving: 36

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 5] cc => I
Apply:  Pos: [6, 13] cc => I
Apply:  Pos: [4, 8] cc => I
Apply:  Pos: [15, 24] cc => I
Apply:  Pos: [19, 25, 31] ccc => cc
Apply:  Pos: [29, 37] cc => I
Apply:  Pos: [32, 44, 49] ccc => cc
Apply:  Pos: [41, 63] cc => I
Apply:  Pos: [43, 48] cc => I
Apply:  Pos: [50, 54, 57] ccc => cc
Apply:  Pos: [65, 94] cc => I
Apply:  Pos: [66, 72] cc => I
Apply:  Pos: [70, 78] cc => I
Apply:  Pos: [81, 90] cc => I
Apply:  Pos: [84, 89] cc => I
Apply:  Pos: [91, 107] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [93, 103] cc => I
Apply:  Pos: [108, 114] cc => I
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [118, 127] cc => I
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [132, 137] cc => I
Apply:  Pos: [131, 134] cc => I
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [153, 160] cc => I
Apply:  Pos: [156, 174] cc => I
Apply:  Pos: [159, 163] cc => I
Apply:  Pos: [181, 193, 197] ccc => cc
Apply:  Pos: [177, 183] cc => I
Apply:  Pos: [184, 189] cc => I
Apply:  Pos: [202, 211] cc => I
Apply:  Pos: [212, 215] cc => I
Apply:  Pos: [205, 208] cc => I
Apply:  Pos: [209, 221] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [8, 9], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [8, 9], [4, 12], [2, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [6, 4], [11, 15], [7, 10], [1, 4], [6, 4], [8, 9], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [8, 15], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [5, 18], [7, 10], [1, 17], [17, 7], [5, 1], [10, 14], [8, 15], [1, 4], [10, 0], [6, 2], [11, 8], [14, 0], [2, 3], [5, 1], [13, 16], [4, 12], [3, 8], [4, 16], [2, 13], [1, 17], [8, 15], [6, 2], [10, 0], [16, 12], [12, 0], [8, 9], [0, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 7], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [18, 7], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [7, 19], [2, 3], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [18, 7], [8, 9], [0, 9], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [18, 7], [13, 16], ----End Timer [Execute Mapping]:  4.296835899353027

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 10]
[41, 44]
[56, 70]
[117, 125]
[144, 155]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[68, 71, 77]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 10]
[41, 44]
[56, 70]
[117, 125]
[144, 155]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.687591314315796

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [41, 44] cc => I, Pos: [41, 44] cc => I, Pos: [56, 70] cc => I, Pos: [56, 70] cc => I, Pos: [68, 71, 77] ccc => cc, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [144, 155] cc => I, Pos: [144, 155] cc => I]

--------End Timer [Generate Plans]:  0.01564311981201172

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 10] cc => I,
 Pos: [41, 44] cc => I,
 Pos: [56, 70] cc => I,
 Pos: [68, 71, 77] ccc => cc,
 Pos: [117, 125] cc => I,
 Pos: [144, 155] cc => I]
Change: 6, Saving: 6

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [41, 44] cc => I
Apply:  Pos: [56, 70] cc => I
Apply:  Pos: [68, 71, 77] ccc => cc
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [144, 155] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [2, 12], [4, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [5, 18], [7, 10], [1, 17], [17, 7], [5, 4], [10, 14], [1, 4], [10, 0], [6, 2], [11, 8], [14, 0], [2, 3], [13, 16], [4, 12], [3, 8], [4, 16], [2, 13], [1, 17], [8, 15], [6, 2], [10, 0], [16, 12], [12, 0], [0, 9], [8, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 4], [6, 17], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [7, 19], [2, 3], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [0, 9], [8, 9], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [13, 16], ----End Timer [Execute Mapping]:  2.7032344341278076

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[92, 105]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[61, 62, 76]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[92, 105]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4386372566223145

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [61, 62, 76] ccc => cc, Pos: [92, 105] cc => I, Pos: [92, 105] cc => I]

--------End Timer [Generate Plans]:  0.014522075653076172

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [61, 62, 76] ccc => cc, Pos: [92, 105] cc => I]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [61, 62, 76] ccc => cc
Apply:  Pos: [92, 105] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [4, 12], [2, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [5, 18], [7, 10], [1, 7], [17, 7], [5, 4], [10, 14], [1, 4], [10, 0], [6, 2], [11, 8], [14, 0], [2, 3], [13, 16], [4, 12], [3, 8], [4, 16], [2, 13], [8, 15], [6, 2], [10, 0], [16, 12], [12, 0], [8, 9], [0, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [6, 4], [6, 17], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [2, 3], [5, 18], [10, 14], [12, 11], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [7, 19], [2, 3], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [8, 9], [0, 9], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [13, 16], ----End Timer [Execute Mapping]:  2.4531593322753906

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4061858654022217

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [2, 12], [4, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [12, 11], [1, 4], [5, 18], [7, 10], [17, 7], [1, 7], [5, 4], [10, 14], [1, 4], [10, 0], [6, 2], [11, 8], [14, 0], [2, 3], [13, 16], [4, 12], [3, 8], [4, 16], [2, 13], [8, 15], [6, 2], [10, 0], [16, 12], [12, 0], [0, 9], [8, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [6, 17], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [2, 3], [5, 18], [10, 14], [12, 11], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [7, 19], [2, 3], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [0, 9], [8, 9], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [13, 16], ----End Timer [Execute Mapping]:  2.4061858654022217

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [143] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 286

Reduced: 
 - size: 82 (36.44%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374785423278809

[5, 1], [18, 10], [8, 9], [17, 4], [12, 14], [5, 1], [8, 9], [6, 17], [12, 14], [7, 10], [2, 16], [1, 6], [11, 15], [8, 9], [16, 12], [10, 14], [1, 17], [8, 9], [4, 12], [2, 16], [10, 0], [18, 7], [17, 4], [11, 8], [10, 14], [16, 12], [2, 13], [9, 15], [5, 1], [1, 17], [0, 9], [2, 16], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [1, 17], [6, 2], [16, 3], [9, 15], [1, 17], [16, 11], [8, 15], [12, 0], [10, 14], [1, 6], [2, 16], [8, 15], [10, 12], [6, 2], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [6, 4], [6, 2], [11, 15], [7, 10], [1, 4], [6, 4], [8, 9], [1, 17], [12, 14], [2, 3], [7, 19], [18, 10], [4, 11], [6, 17], [5, 1], [9, 15], [7, 19], [10, 14], [11, 8], [17, 10], [13, 16], [8, 15], [5, 1], [16, 11], [18, 7], [2, 13], [6, 17], [10, 14], [9, 15], [18, 17], [12, 11], [1, 4], [19, 14], [9, 15], [2, 13], [12, 11], [8, 15], [6, 4], [2, 3], [19, 14], [5, 18], [7, 10], [1, 17], [8, 15], [17, 7], [5, 1], [10, 14], [6, 4], [8, 15], [1, 4], [10, 0], [12, 11], [18, 17], [6, 2], [11, 8], [14, 0], [2, 3], [5, 1], [18, 17], [13, 16], [4, 12], [12, 11], [7, 19], [3, 8], [10, 14], [4, 16], [2, 13], [12, 11], [1, 17], [8, 15], [6, 2], [7, 19], [10, 0], [16, 12], [10, 14], [18, 7], [2, 13], [12, 0], [18, 7], [8, 9], [0, 9], [2, 13], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [11, 15], [10, 14], [13, 3], [18, 7], [1, 6], [2, 16], [11, 15], [16, 3], [10, 14], [17, 7], [11, 9], [16, 3], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 7], [3, 8], [4, 12], [1, 6], [11, 8], [14, 0], [9, 15], [10, 12], [17, 4], [16, 3], [7, 19], [1, 6], [9, 15], [18, 10], [4, 16], [8, 15], [12, 14], [6, 17], [18, 10], [9, 15], [1, 17], [4, 12], [18, 7], [2, 3], [17, 10], [16, 11], [7, 19], [6, 17], [11, 9], [19, 14], [17, 7], [2, 3], [4, 11], [9, 15], [10, 14], [18, 7], [8, 9], [10, 14], [11, 8], [0, 9], [2, 3], [18, 17], [16, 12], [14, 0], [18, 17], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [11, 8], [4, 12], [18, 7], [13, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[2, 6]
[4, 8]
[6, 13]
[13, 17]
[15, 24]
[29, 37]
[37, 41]
[43, 48]
[49, 51]
[41, 63]
[66, 72]
[70, 78]
[84, 89]
[81, 90]
[86, 91]
[65, 94]
[88, 95]
[92, 99]
[93, 103]
[99, 104]
[91, 107]
[108, 114]
[117, 123]
[118, 127]
[120, 130]
[131, 134]
[132, 137]
[134, 138]
[147, 152]
[152, 158]
[153, 160]
[159, 163]
[156, 174]
[174, 182]
[177, 183]
[184, 189]
[194, 202]
[205, 208]
[202, 211]
[212, 215]
[209, 221]
[206, 223]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[19, 25, 31]
[32, 44, 49]
[50, 54, 57]
[171, 181, 193]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[94, 109, 112]
[122, 126, 132]
[181, 193, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[201, 206, 212]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[2, 6]
[4, 8]
[6, 13]
[13, 17]
[15, 24]
[29, 37]
[37, 41]
[43, 48]
[49, 51]
[41, 63]
[66, 72]
[70, 78]
[84, 89]
[81, 90]
[86, 91]
[65, 94]
[88, 95]
[92, 99]
[93, 103]
[99, 104]
[91, 107]
[108, 114]
[117, 123]
[118, 127]
[120, 130]
[131, 134]
[132, 137]
[134, 138]
[147, 152]
[152, 158]
[153, 160]
[159, 163]
[156, 174]
[174, 182]
[177, 183]
[184, 189]
[194, 202]
[205, 208]
[202, 211]
[212, 215]
[209, 221]
[206, 223]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.2343573570251465

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] cc => I, Pos: [0, 5] cc => I, Pos: [2, 6] cc => I, Pos: [2, 6] cc => I, Pos: [4, 8] cc => I, Pos: [4, 8] cc => I, Pos: [6, 13] cc => I, Pos: [6, 13] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [15, 24] cc => I, Pos: [15, 24] cc => I, Pos: [19, 25, 31] ccc => cc, Pos: [29, 37] cc => I, Pos: [29, 37] cc => I, Pos: [32, 44, 49] ccc => cc, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [41, 63] cc => I, Pos: [41, 63] cc => I, Pos: [43, 48] cc => I, Pos: [43, 48] cc => I, Pos: [49, 51] cc => I, Pos: [49, 51] cc => I, Pos: [50, 54, 57] ccc => cc, Pos: [65, 94] cc => I, Pos: [65, 94] cc => I, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [70, 78] cc => I, Pos: [70, 78] cc => I, Pos: [81, 90] cc => I, Pos: [81, 90] cc => I, Pos: [84, 89] cc => I, Pos: [84, 89] cc => I, Pos: [86, 91] cc => I, Pos: [86, 91] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [91, 107] cc => I, Pos: [91, 107] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [93, 103] cc => I, Pos: [93, 103] cc => I, Pos: [94, 109, 112] ccc => cc, Pos: [99, 104] cc => I, Pos: [99, 104] cc => I, Pos: [108, 114] cc => I, Pos: [108, 114] cc => I, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [118, 127] cc => I, Pos: [118, 127] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [122, 126, 132] ccc => cc, Pos: [131, 134] cc => I, Pos: [131, 134] cc => I, Pos: [132, 137] cc => I, Pos: [132, 137] cc => I, Pos: [134, 138] cc => I, Pos: [134, 138] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [152, 158] cc => I, Pos: [152, 158] cc => I, Pos: [153, 160] cc => I, Pos: [153, 160] cc => I, Pos: [156, 174] cc => I, Pos: [156, 174] cc => I, Pos: [159, 163] cc => I, Pos: [159, 163] cc => I, Pos: [171, 181, 193] ccc => cc, Pos: [174, 182] cc => I, Pos: [174, 182] cc => I, Pos: [177, 183] cc => I, Pos: [177, 183] cc => I, Pos: [181, 193, 197] ccc => cc, Pos: [184, 189] cc => I, Pos: [184, 189] cc => I, Pos: [194, 202] cc => I, Pos: [194, 202] cc => I, Pos: [201, 206, 212] ccc => cc, Pos: [202, 211] cc => I, Pos: [202, 211] cc => I, Pos: [205, 208] cc => I, Pos: [205, 208] cc => I, Pos: [206, 223] cc => I, Pos: [206, 223] cc => I, Pos: [209, 221] cc => I, Pos: [209, 221] cc => I, Pos: [212, 215] cc => I, Pos: [212, 215] cc => I]

--------End Timer [Generate Plans]:  0.09374427795410156

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 5] cc => I,
 Pos: [2, 6] cc => I,
 Pos: [4, 8] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [15, 24] cc => I,
 Pos: [19, 25, 31] ccc => cc,
 Pos: [29, 37] cc => I,
 Pos: [49, 51] cc => I,
 Pos: [41, 63] cc => I,
 Pos: [43, 48] cc => I,
 Pos: [50, 54, 57] ccc => cc,
 Pos: [94, 109, 112] ccc => cc,
 Pos: [66, 72] cc => I,
 Pos: [70, 78] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [84, 89] cc => I,
 Pos: [86, 91] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [99, 104] cc => I,
 Pos: [93, 103] cc => I,
 Pos: [108, 114] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [118, 127] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [132, 137] cc => I,
 Pos: [134, 138] cc => I,
 Pos: [152, 158] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [156, 174] cc => I,
 Pos: [159, 163] cc => I,
 Pos: [181, 193, 197] ccc => cc,
 Pos: [177, 183] cc => I,
 Pos: [184, 189] cc => I,
 Pos: [194, 202] cc => I,
 Pos: [212, 215] cc => I,
 Pos: [205, 208] cc => I,
 Pos: [209, 221] cc => I]
Change: 37, Saving: 37

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 5] cc => I
Apply:  Pos: [2, 6] cc => I
Apply:  Pos: [4, 8] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [15, 24] cc => I
Apply:  Pos: [19, 25, 31] ccc => cc
Apply:  Pos: [29, 37] cc => I
Apply:  Pos: [49, 51] cc => I
Apply:  Pos: [41, 63] cc => I
Apply:  Pos: [43, 48] cc => I
Apply:  Pos: [50, 54, 57] ccc => cc
Apply:  Pos: [94, 109, 112] ccc => cc
Apply:  Pos: [66, 72] cc => I
Apply:  Pos: [70, 78] cc => I
Apply:  Pos: [81, 90] cc => I
Apply:  Pos: [84, 89] cc => I
Apply:  Pos: [86, 91] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [99, 104] cc => I
Apply:  Pos: [93, 103] cc => I
Apply:  Pos: [108, 114] cc => I
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [118, 127] cc => I
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [132, 137] cc => I
Apply:  Pos: [134, 138] cc => I
Apply:  Pos: [152, 158] cc => I
Apply:  Pos: [153, 160] cc => I
Apply:  Pos: [156, 174] cc => I
Apply:  Pos: [159, 163] cc => I
Apply:  Pos: [181, 193, 197] ccc => cc
Apply:  Pos: [177, 183] cc => I
Apply:  Pos: [184, 189] cc => I
Apply:  Pos: [194, 202] cc => I
Apply:  Pos: [212, 215] cc => I
Apply:  Pos: [205, 208] cc => I
Apply:  Pos: [209, 221] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [4, 12], [2, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [0, 9], [11, 8], [2, 13], [12, 11], [6, 4], [11, 15], [7, 10], [1, 4], [6, 4], [8, 9], [12, 14], [2, 3], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [8, 15], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [1, 4], [8, 15], [6, 2], [5, 18], [7, 10], [1, 17], [17, 7], [5, 1], [10, 14], [1, 4], [10, 0], [12, 11], [2, 3], [11, 8], [14, 0], [5, 1], [13, 16], [4, 12], [3, 8], [4, 16], [2, 13], [1, 17], [8, 15], [6, 2], [10, 0], [16, 12], [18, 7], [12, 0], [8, 9], [0, 9], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 7], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [18, 7], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [7, 19], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [18, 7], [8, 9], [0, 9], [2, 3], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [18, 7], [13, 16], ----End Timer [Execute Mapping]:  4.328101634979248

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 41]
[54, 61]
[115, 123]
[141, 153]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[67, 69, 75]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[45, 62, 72]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 41]
[54, 61]
[115, 123]
[141, 153]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6872308254241943

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [38, 41] cc => I, Pos: [38, 41] cc => I, Pos: [45, 62, 72] ccc => cc, Pos: [54, 61] cc => I, Pos: [54, 61] cc => I, Pos: [67, 69, 75] ccc => cc, Pos: [115, 123] cc => I, Pos: [115, 123] cc => I, Pos: [141, 153] cc => I, Pos: [141, 153] cc => I]

--------End Timer [Generate Plans]:  0.0156252384185791

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [38, 41] cc => I,
 Pos: [45, 62, 72] ccc => cc,
 Pos: [54, 61] cc => I,
 Pos: [67, 69, 75] ccc => cc,
 Pos: [115, 123] cc => I,
 Pos: [141, 153] cc => I]
Change: 6, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [38, 41] cc => I
Apply:  Pos: [45, 62, 72] ccc => cc
Apply:  Pos: [54, 61] cc => I
Apply:  Pos: [67, 69, 75] ccc => cc
Apply:  Pos: [115, 123] cc => I
Apply:  Pos: [141, 153] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [2, 12], [4, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [6, 2], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [1, 4], [2, 3], [5, 18], [7, 10], [1, 17], [17, 7], [5, 4], [10, 14], [1, 4], [10, 0], [12, 11], [11, 8], [14, 0], [13, 16], [4, 12], [3, 8], [4, 16], [2, 13], [1, 17], [8, 15], [6, 2], [10, 0], [16, 12], [18, 7], [12, 0], [0, 9], [8, 9], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [7, 19], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [0, 9], [8, 9], [2, 3], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [13, 16], ----End Timer [Execute Mapping]:  2.7028560638427734

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[61, 62, 75]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.437533378601074

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [61, 62, 75] ccc => cc]

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [61, 62, 75] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [61, 62, 75] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [4, 12], [2, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [6, 2], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [1, 4], [2, 3], [5, 18], [7, 10], [1, 7], [17, 7], [5, 4], [10, 14], [1, 4], [10, 0], [12, 11], [11, 8], [14, 0], [13, 16], [4, 12], [3, 8], [4, 16], [2, 13], [8, 15], [6, 2], [10, 0], [16, 12], [18, 7], [12, 0], [8, 9], [0, 9], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [7, 19], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [8, 9], [0, 9], [2, 3], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [13, 16], ----End Timer [Execute Mapping]:  2.453157424926758

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4056153297424316

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [2, 12], [4, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [6, 2], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [1, 4], [2, 3], [5, 18], [7, 10], [17, 7], [1, 7], [5, 4], [10, 14], [1, 4], [10, 0], [12, 11], [11, 8], [14, 0], [13, 16], [4, 12], [3, 8], [4, 16], [2, 13], [8, 15], [6, 2], [10, 0], [16, 12], [18, 7], [12, 0], [0, 9], [8, 9], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [7, 19], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [17, 7], [4, 11], [9, 15], [0, 9], [8, 9], [2, 3], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [13, 16], ----End Timer [Execute Mapping]:  2.4056153297424316

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [144] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 288

Reduced: 
 - size: 81 (36.00%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09369015693664551

[5, 1], [18, 10], [8, 9], [17, 4], [12, 14], [5, 1], [8, 9], [6, 17], [12, 14], [7, 10], [2, 16], [1, 6], [11, 15], [8, 9], [16, 12], [10, 14], [1, 17], [8, 9], [4, 12], [2, 16], [10, 0], [18, 7], [17, 4], [11, 8], [10, 14], [16, 12], [2, 13], [9, 15], [5, 1], [1, 17], [0, 9], [2, 16], [10, 12], [19, 14], [11, 15], [3, 8], [5, 18], [1, 17], [6, 2], [16, 3], [9, 15], [1, 17], [16, 11], [8, 15], [12, 0], [10, 14], [1, 6], [2, 16], [8, 15], [10, 12], [6, 2], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [6, 4], [6, 2], [11, 15], [7, 10], [1, 4], [6, 4], [8, 9], [1, 17], [12, 14], [2, 3], [7, 19], [18, 10], [4, 11], [6, 17], [5, 1], [9, 15], [7, 19], [10, 14], [11, 8], [17, 10], [13, 16], [8, 15], [5, 1], [16, 11], [18, 7], [2, 13], [6, 17], [10, 14], [9, 15], [18, 17], [12, 11], [1, 4], [19, 14], [9, 15], [2, 13], [12, 11], [8, 15], [6, 4], [2, 3], [19, 14], [5, 18], [7, 10], [1, 17], [8, 15], [17, 7], [5, 1], [10, 14], [6, 4], [8, 15], [1, 4], [10, 0], [12, 11], [18, 17], [6, 2], [11, 8], [14, 0], [2, 3], [5, 1], [18, 17], [13, 16], [4, 12], [12, 11], [7, 19], [3, 8], [10, 14], [4, 16], [2, 13], [12, 11], [1, 17], [8, 15], [6, 2], [7, 19], [10, 0], [16, 12], [10, 14], [18, 7], [2, 13], [12, 0], [18, 7], [8, 9], [0, 9], [2, 13], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [11, 15], [6, 4], [0, 9], [2, 3], [17, 7], [11, 15], [10, 14], [13, 3], [18, 7], [1, 6], [2, 16], [11, 15], [16, 3], [10, 14], [17, 7], [11, 9], [16, 3], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 7], [3, 8], [4, 12], [1, 6], [11, 8], [14, 0], [9, 15], [10, 12], [17, 4], [16, 3], [7, 19], [1, 6], [9, 15], [18, 10], [4, 16], [8, 15], [12, 14], [6, 17], [18, 10], [9, 15], [1, 17], [4, 12], [18, 7], [2, 3], [17, 10], [16, 11], [7, 19], [6, 17], [11, 9], [19, 14], [17, 7], [2, 3], [4, 11], [9, 15], [10, 14], [18, 7], [8, 9], [10, 14], [11, 8], [0, 9], [2, 3], [18, 17], [16, 12], [14, 0], [18, 17], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [11, 8], [4, 12], [18, 7], [13, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[2, 6]
[4, 8]
[6, 13]
[13, 17]
[15, 24]
[29, 37]
[37, 41]
[43, 48]
[49, 51]
[41, 63]
[66, 72]
[70, 78]
[84, 89]
[81, 90]
[86, 91]
[65, 94]
[88, 95]
[92, 99]
[93, 103]
[99, 104]
[91, 107]
[108, 114]
[117, 123]
[118, 127]
[120, 130]
[131, 134]
[132, 137]
[134, 138]
[147, 152]
[152, 158]
[153, 160]
[159, 163]
[156, 174]
[174, 182]
[177, 183]
[184, 189]
[194, 202]
[205, 208]
[202, 211]
[212, 215]
[209, 221]
[206, 223]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[19, 25, 31]
[32, 44, 49]
[50, 54, 57]
[171, 181, 193]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[94, 109, 112]
[122, 126, 132]
[181, 193, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[201, 206, 212]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[2, 6]
[4, 8]
[6, 13]
[13, 17]
[15, 24]
[29, 37]
[37, 41]
[43, 48]
[49, 51]
[41, 63]
[66, 72]
[70, 78]
[84, 89]
[81, 90]
[86, 91]
[65, 94]
[88, 95]
[92, 99]
[93, 103]
[99, 104]
[91, 107]
[108, 114]
[117, 123]
[118, 127]
[120, 130]
[131, 134]
[132, 137]
[134, 138]
[147, 152]
[152, 158]
[153, 160]
[159, 163]
[156, 174]
[174, 182]
[177, 183]
[184, 189]
[194, 202]
[205, 208]
[202, 211]
[212, 215]
[209, 221]
[206, 223]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.187542915344238

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] cc => I, Pos: [0, 5] cc => I, Pos: [2, 6] cc => I, Pos: [2, 6] cc => I, Pos: [4, 8] cc => I, Pos: [4, 8] cc => I, Pos: [6, 13] cc => I, Pos: [6, 13] cc => I, Pos: [13, 17] cc => I, Pos: [13, 17] cc => I, Pos: [15, 24] cc => I, Pos: [15, 24] cc => I, Pos: [19, 25, 31] ccc => cc, Pos: [29, 37] cc => I, Pos: [29, 37] cc => I, Pos: [32, 44, 49] ccc => cc, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [41, 63] cc => I, Pos: [41, 63] cc => I, Pos: [43, 48] cc => I, Pos: [43, 48] cc => I, Pos: [49, 51] cc => I, Pos: [49, 51] cc => I, Pos: [50, 54, 57] ccc => cc, Pos: [65, 94] cc => I, Pos: [65, 94] cc => I, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [70, 78] cc => I, Pos: [70, 78] cc => I, Pos: [81, 90] cc => I, Pos: [81, 90] cc => I, Pos: [84, 89] cc => I, Pos: [84, 89] cc => I, Pos: [86, 91] cc => I, Pos: [86, 91] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [91, 107] cc => I, Pos: [91, 107] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [93, 103] cc => I, Pos: [93, 103] cc => I, Pos: [94, 109, 112] ccc => cc, Pos: [99, 104] cc => I, Pos: [99, 104] cc => I, Pos: [108, 114] cc => I, Pos: [108, 114] cc => I, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [118, 127] cc => I, Pos: [118, 127] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [122, 126, 132] ccc => cc, Pos: [131, 134] cc => I, Pos: [131, 134] cc => I, Pos: [132, 137] cc => I, Pos: [132, 137] cc => I, Pos: [134, 138] cc => I, Pos: [134, 138] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [152, 158] cc => I, Pos: [152, 158] cc => I, Pos: [153, 160] cc => I, Pos: [153, 160] cc => I, Pos: [156, 174] cc => I, Pos: [156, 174] cc => I, Pos: [159, 163] cc => I, Pos: [159, 163] cc => I, Pos: [171, 181, 193] ccc => cc, Pos: [174, 182] cc => I, Pos: [174, 182] cc => I, Pos: [177, 183] cc => I, Pos: [177, 183] cc => I, Pos: [181, 193, 197] ccc => cc, Pos: [184, 189] cc => I, Pos: [184, 189] cc => I, Pos: [194, 202] cc => I, Pos: [194, 202] cc => I, Pos: [201, 206, 212] ccc => cc, Pos: [202, 211] cc => I, Pos: [202, 211] cc => I, Pos: [205, 208] cc => I, Pos: [205, 208] cc => I, Pos: [206, 223] cc => I, Pos: [206, 223] cc => I, Pos: [209, 221] cc => I, Pos: [209, 221] cc => I, Pos: [212, 215] cc => I, Pos: [212, 215] cc => I]

Plan: 1
[Pos: [0, 5] cc => I,
 Pos: [2, 6] cc => I,
 Pos: [4, 8] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [15, 24] cc => I,
 Pos: [19, 25, 31] ccc => cc,
 Pos: [29, 37] cc => I,
 Pos: [32, 44, 49] ccc => cc,
 Pos: [41, 63] cc => I,
 Pos: [43, 48] cc => I,
 Pos: [50, 54, 57] ccc => cc,
 Pos: [65, 94] cc => I,
 Pos: [66, 72] cc => I,
 Pos: [70, 78] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [84, 89] cc => I,
 Pos: [86, 91] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [93, 103] cc => I,
 Pos: [108, 114] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [118, 127] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [122, 126, 132] ccc => cc,
 Pos: [131, 134] cc => I,
 Pos: [147, 152] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [156, 174] cc => I,
 Pos: [159, 163] cc => I,
 Pos: [171, 181, 193] ccc => cc,
 Pos: [177, 183] cc => I,
 Pos: [184, 189] cc => I,
 Pos: [194, 202] cc => I,
 Pos: [201, 206, 212] ccc => cc,
 Pos: [205, 208] cc => I,
 Pos: [209, 221] cc => I]
Change: 37, Saving: 37

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.09374642372131348

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 5] cc => I,
 Pos: [2, 6] cc => I,
 Pos: [4, 8] cc => I,
 Pos: [13, 17] cc => I,
 Pos: [15, 24] cc => I,
 Pos: [19, 25, 31] ccc => cc,
 Pos: [29, 37] cc => I,
 Pos: [32, 44, 49] ccc => cc,
 Pos: [41, 63] cc => I,
 Pos: [43, 48] cc => I,
 Pos: [50, 54, 57] ccc => cc,
 Pos: [65, 94] cc => I,
 Pos: [66, 72] cc => I,
 Pos: [70, 78] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [84, 89] cc => I,
 Pos: [86, 91] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [93, 103] cc => I,
 Pos: [108, 114] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [118, 127] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [122, 126, 132] ccc => cc,
 Pos: [131, 134] cc => I,
 Pos: [147, 152] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [156, 174] cc => I,
 Pos: [159, 163] cc => I,
 Pos: [171, 181, 193] ccc => cc,
 Pos: [177, 183] cc => I,
 Pos: [184, 189] cc => I,
 Pos: [194, 202] cc => I,
 Pos: [201, 206, 212] ccc => cc,
 Pos: [205, 208] cc => I,
 Pos: [209, 221] cc => I]
Change: 37, Saving: 37

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 5] cc => I
Apply:  Pos: [2, 6] cc => I
Apply:  Pos: [4, 8] cc => I
Apply:  Pos: [13, 17] cc => I
Apply:  Pos: [15, 24] cc => I
Apply:  Pos: [19, 25, 31] ccc => cc
Apply:  Pos: [29, 37] cc => I
Apply:  Pos: [32, 44, 49] ccc => cc
Apply:  Pos: [41, 63] cc => I
Apply:  Pos: [43, 48] cc => I
Apply:  Pos: [50, 54, 57] ccc => cc
Apply:  Pos: [65, 94] cc => I
Apply:  Pos: [66, 72] cc => I
Apply:  Pos: [70, 78] cc => I
Apply:  Pos: [81, 90] cc => I
Apply:  Pos: [84, 89] cc => I
Apply:  Pos: [86, 91] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [93, 103] cc => I
Apply:  Pos: [108, 114] cc => I
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [118, 127] cc => I
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [122, 126, 132] ccc => cc
Apply:  Pos: [131, 134] cc => I
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [153, 160] cc => I
Apply:  Pos: [156, 174] cc => I
Apply:  Pos: [159, 163] cc => I
Apply:  Pos: [171, 181, 193] ccc => cc
Apply:  Pos: [177, 183] cc => I
Apply:  Pos: [184, 189] cc => I
Apply:  Pos: [194, 202] cc => I
Apply:  Pos: [201, 206, 212] ccc => cc
Apply:  Pos: [205, 208] cc => I
Apply:  Pos: [209, 221] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [4, 12], [2, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [6, 4], [11, 15], [7, 10], [1, 4], [6, 4], [8, 9], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [8, 15], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [1, 4], [5, 18], [7, 10], [1, 17], [17, 7], [5, 1], [10, 14], [8, 15], [1, 4], [10, 0], [12, 11], [6, 2], [11, 8], [14, 0], [2, 3], [5, 1], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [1, 17], [8, 15], [2, 13], [10, 0], [16, 12], [12, 0], [8, 9], [0, 9], [2, 13], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 17], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [7, 19], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [17, 10], [16, 11], [7, 19], [6, 17], [11, 9], [19, 14], [18, 17], [4, 11], [9, 15], [17, 7], [8, 9], [0, 9], [2, 3], [16, 12], [14, 0], [18, 17], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [18, 7], [13, 16], ----End Timer [Execute Mapping]:  4.281289339065552

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 42]
[54, 67]
[83, 89]
[124, 135]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[65, 68, 75]
[139, 142, 148]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 42]
[54, 67]
[83, 89]
[124, 135]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7030956745147705

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [39, 42] cc => I, Pos: [39, 42] cc => I, Pos: [54, 67] cc => I, Pos: [54, 67] cc => I, Pos: [65, 68, 75] ccc => cc, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [124, 135] cc => I, Pos: [124, 135] cc => I, Pos: [139, 142, 148] ccc => cc]

Plan: 1
[Pos: [39, 42] cc => I,
 Pos: [54, 67] cc => I,
 Pos: [65, 68, 75] ccc => cc,
 Pos: [83, 89] cc => I,
 Pos: [124, 135] cc => I,
 Pos: [139, 142, 148] ccc => cc]
Change: 6, Saving: 5

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015622615814208984

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [39, 42] cc => I,
 Pos: [54, 67] cc => I,
 Pos: [65, 68, 75] ccc => cc,
 Pos: [83, 89] cc => I,
 Pos: [124, 135] cc => I,
 Pos: [139, 142, 148] ccc => cc]
Change: 6, Saving: 5

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [39, 42] cc => I
Apply:  Pos: [54, 67] cc => I
Apply:  Pos: [65, 68, 75] ccc => cc
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [124, 135] cc => I
Apply:  Pos: [139, 142, 148] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [2, 12], [4, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [1, 4], [5, 18], [7, 10], [1, 17], [17, 7], [5, 4], [10, 14], [1, 4], [10, 0], [12, 11], [6, 2], [11, 8], [14, 0], [2, 3], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [1, 17], [8, 15], [10, 0], [16, 12], [12, 0], [0, 9], [8, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [1, 4], [6, 4], [6, 17], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [1, 4], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [18, 7], [4, 11], [9, 15], [17, 7], [0, 9], [8, 9], [2, 3], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [18, 7], [13, 16], ----End Timer [Execute Mapping]:  2.7187182903289795

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[91, 104]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[60, 61, 76]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[91, 104]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4688045978546143

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [60, 61, 76] ccc => cc, Pos: [91, 104] cc => I, Pos: [91, 104] cc => I]

Plan: 1
[Pos: [60, 61, 76] ccc => cc, Pos: [91, 104] cc => I]
Change: 2, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015639543533325195

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [60, 61, 76] ccc => cc, Pos: [91, 104] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [60, 61, 76] ccc => cc
Apply:  Pos: [91, 104] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [4, 12], [2, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [1, 4], [5, 18], [7, 10], [1, 7], [17, 7], [5, 4], [10, 14], [1, 4], [10, 0], [12, 11], [6, 2], [11, 8], [14, 0], [2, 3], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [8, 15], [10, 0], [16, 12], [12, 0], [8, 9], [0, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [6, 4], [6, 17], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [18, 7], [4, 11], [9, 15], [17, 7], [8, 9], [0, 9], [2, 3], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [18, 7], [13, 16], ----End Timer [Execute Mapping]:  2.4844441413879395

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.390643835067749

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[18, 10], [17, 4], [6, 17], [7, 10], [2, 16], [1, 6], [11, 15], [16, 12], [1, 17], [2, 12], [4, 12], [10, 0], [18, 7], [17, 4], [11, 8], [16, 12], [2, 13], [9, 15], [5, 1], [0, 9], [10, 0], [19, 14], [11, 15], [3, 8], [5, 18], [6, 2], [16, 3], [9, 15], [16, 11], [12, 0], [10, 14], [1, 6], [2, 16], [6, 13], [10, 12], [0, 9], [11, 8], [2, 13], [12, 11], [11, 15], [7, 10], [1, 4], [8, 9], [12, 14], [18, 10], [4, 11], [6, 17], [9, 15], [10, 14], [11, 8], [17, 10], [13, 16], [16, 11], [18, 7], [6, 17], [10, 14], [18, 17], [1, 4], [5, 18], [7, 10], [17, 7], [1, 7], [5, 4], [10, 14], [1, 4], [10, 0], [12, 11], [6, 2], [11, 8], [14, 0], [2, 3], [13, 16], [4, 12], [3, 8], [4, 16], [6, 2], [8, 15], [10, 0], [16, 12], [12, 0], [0, 9], [8, 9], [18, 7], [12, 11], [3, 8], [1, 6], [9, 15], [14, 0], [13, 3], [6, 17], [6, 4], [0, 9], [2, 3], [17, 7], [13, 3], [18, 7], [2, 16], [11, 15], [17, 7], [11, 9], [7, 10], [16, 11], [2, 3], [5, 18], [10, 14], [12, 11], [18, 19], [3, 8], [4, 12], [11, 8], [14, 0], [10, 12], [17, 4], [16, 3], [1, 6], [4, 16], [8, 15], [12, 14], [6, 17], [9, 15], [1, 17], [4, 12], [17, 10], [16, 11], [6, 17], [11, 9], [19, 14], [18, 7], [4, 11], [9, 15], [17, 7], [0, 9], [8, 9], [2, 3], [16, 12], [14, 0], [11, 15], [5, 1], [6, 2], [10, 14], [9, 15], [4, 12], [18, 7], [13, 16], ----End Timer [Execute Mapping]:  2.390643835067749

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [144] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 288

Reduced: 
 - size: 81 (36.00%)
 - depth: 7 (15.56%)

