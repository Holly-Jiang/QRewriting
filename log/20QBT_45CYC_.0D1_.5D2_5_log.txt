----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09376168251037598

[10, 11], [15, 7], [19, 5], [10, 11], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [10, 1], [11, 17], [9, 16], [10, 1], [9, 14], [0, 2], [13, 17], [8, 7], [19, 5], [4, 3], [10, 1], [15, 8], [16, 12], [0, 9], [2, 5], [10, 1], [2, 19], [17, 6], [16, 14], [15, 8], [1, 3], [11, 6], [5, 18], [12, 7], [16, 14], [5, 3], [10, 11], [9, 16], [12, 15], [14, 19], [13, 17], [5, 3], [13, 17], [16, 10], [0, 9], [2, 14], [5, 18], [17, 6], [2, 14], [8, 11], [7, 13], [10, 1], [0, 9], [2, 5], [12, 15], [8, 11], [0, 2], [12, 7], [1, 11], [2, 19], [5, 18], [8, 7], [19, 4], [12, 8], [5, 18], [9, 10], [15, 7], [17, 6], [19, 4], [15, 7], [14, 10], [2, 5], [13, 17], [2, 19], [12, 15], [5, 1], [13, 17], [16, 14], [19, 5], [12, 8], [17, 6], [9, 14], [2, 5], [17, 6], [11, 13], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [11, 13], [19, 4], [15, 7], [2, 14], [3, 18], [10, 11], [9, 16], [19, 4], [7, 13], [3, 18], [8, 11], [16, 12], [9, 10], [2, 19], [1, 3], [8, 11], [0, 9], [12, 15], [13, 6], [1, 3], [9, 14], [15, 8], [11, 17], [2, 5], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [9, 14], [1, 11], [8, 7], [16, 12], [19, 4], [1, 3], [9, 14], [19, 4], [10, 11], [1, 3], [19, 4], [10, 8], [7, 13], [11, 17], [4, 3], [13, 17], [19, 5], [10, 8], [16, 14], [0, 9], [3, 18], [15, 7], [12, 8], [10, 11], [14, 19], [0, 9], [4, 3], [5, 1], [7, 13], [18, 17], [10, 8], [9, 14], [0, 2], [3, 18], [2, 5], [7, 13], [17, 6], [9, 16], [10, 11], [18, 17], [5, 1], [0, 9], [11, 6], [2, 14], [15, 7], [18, 17], [19, 4], [12, 8], [9, 16], [13, 17], [5, 18], [12, 7], [2, 19], [15, 8], [9, 14], [13, 17], [10, 11], [9, 14], [5, 18], [2, 19], [12, 15], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [10, 11], [3, 18], [12, 8], [2, 5], [13, 17], [10, 8], [1, 11], [14, 19], [10, 8], [17, 6], [19, 5], [1, 3], [8, 7], [2, 19], [9, 16], [14, 10], [17, 6], [5, 1], [8, 7], [5, 3], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [5, 3], [12, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[13, 16]
[16, 23]
[23, 28]
[24, 32]
[31, 37]
[38, 44]
[43, 45]
[35, 49]
[48, 51]
[47, 55]
[41, 57]
[52, 58]
[63, 67]
[50, 70]
[65, 71]
[69, 72]
[75, 79]
[66, 82]
[83, 86]
[87, 93]
[94, 100]
[97, 102]
[103, 108]
[107, 112]
[130, 136]
[134, 137]
[135, 139]
[137, 140]
[141, 147]
[149, 155]
[158, 165]
[153, 168]
[169, 175]
[179, 185]
[184, 187]
[180, 188]
[182, 189]
[188, 193]
[187, 194]
[201, 204]
[178, 210]
[205, 212]
[208, 214]
[214, 218]
[215, 223]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 20, 24]
[144, 150, 156]
[168, 172, 186]
[186, 191, 196]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 106, 117]
[167, 171, 178]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[21, 27, 29]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[13, 16]
[16, 23]
[23, 28]
[24, 32]
[31, 37]
[38, 44]
[43, 45]
[35, 49]
[48, 51]
[47, 55]
[41, 57]
[52, 58]
[63, 67]
[50, 70]
[65, 71]
[69, 72]
[75, 79]
[66, 82]
[83, 86]
[87, 93]
[94, 100]
[97, 102]
[103, 108]
[107, 112]
[130, 136]
[134, 137]
[135, 139]
[137, 140]
[141, 147]
[149, 155]
[158, 165]
[153, 168]
[169, 175]
[179, 185]
[184, 187]
[180, 188]
[182, 189]
[188, 193]
[187, 194]
[201, 204]
[178, 210]
[205, 212]
[208, 214]
[214, 218]
[215, 223]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.203099727630615

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3] cc => I, Pos: [0, 3] cc => I, Pos: [11, 20, 24] ccc => cc, Pos: [13, 16] cc => I, Pos: [13, 16] cc => I, Pos: [16, 23] cc => I, Pos: [16, 23] cc => I, Pos: [21, 27, 29] ccc => cc, Pos: [23, 28] cc => I, Pos: [23, 28] cc => I, Pos: [24, 32] cc => I, Pos: [24, 32] cc => I, Pos: [31, 37] cc => I, Pos: [31, 37] cc => I, Pos: [35, 49] cc => I, Pos: [35, 49] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [41, 57] cc => I, Pos: [41, 57] cc => I, Pos: [43, 45] cc => I, Pos: [43, 45] cc => I, Pos: [47, 55] cc => I, Pos: [47, 55] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [50, 70] cc => I, Pos: [50, 70] cc => I, Pos: [52, 58] cc => I, Pos: [52, 58] cc => I, Pos: [63, 67] cc => I, Pos: [63, 67] cc => I, Pos: [65, 71] cc => I, Pos: [65, 71] cc => I, Pos: [66, 82] cc => I, Pos: [66, 82] cc => I, Pos: [69, 72] cc => I, Pos: [69, 72] cc => I, Pos: [75, 79] cc => I, Pos: [75, 79] cc => I, Pos: [83, 86] cc => I, Pos: [83, 86] cc => I, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [94, 100] cc => I, Pos: [94, 100] cc => I, Pos: [97, 102] cc => I, Pos: [97, 102] cc => I, Pos: [100, 106, 117] ccc => cc, Pos: [103, 108] cc => I, Pos: [103, 108] cc => I, Pos: [107, 112] cc => I, Pos: [107, 112] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [134, 137] cc => I, Pos: [134, 137] cc => I, Pos: [135, 139] cc => I, Pos: [135, 139] cc => I, Pos: [137, 140] cc => I, Pos: [137, 140] cc => I, Pos: [141, 147] cc => I, Pos: [141, 147] cc => I, Pos: [144, 150, 156] ccc => cc, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [153, 168] cc => I, Pos: [153, 168] cc => I, Pos: [158, 165] cc => I, Pos: [158, 165] cc => I, Pos: [167, 171, 178] ccc => cc, Pos: [168, 172, 186] ccc => cc, Pos: [169, 175] cc => I, Pos: [169, 175] cc => I, Pos: [178, 210] cc => I, Pos: [178, 210] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [184, 187] cc => I, Pos: [184, 187] cc => I, Pos: [186, 191, 196] ccc => cc, Pos: [187, 194] cc => I, Pos: [187, 194] cc => I, Pos: [188, 193] cc => I, Pos: [188, 193] cc => I, Pos: [201, 204] cc => I, Pos: [201, 204] cc => I, Pos: [205, 212] cc => I, Pos: [205, 212] cc => I, Pos: [208, 214] cc => I, Pos: [208, 214] cc => I, Pos: [214, 218] cc => I, Pos: [214, 218] cc => I, Pos: [215, 223] cc => I, Pos: [215, 223] cc => I]

Plan: 1
[Pos: [0, 3] cc => I,
 Pos: [11, 20, 24] ccc => cc,
 Pos: [13, 16] cc => I,
 Pos: [21, 27, 29] ccc => cc,
 Pos: [23, 28] cc => I,
 Pos: [31, 37] cc => I,
 Pos: [35, 49] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [41, 57] cc => I,
 Pos: [43, 45] cc => I,
 Pos: [47, 55] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [52, 58] cc => I,
 Pos: [63, 67] cc => I,
 Pos: [65, 71] cc => I,
 Pos: [66, 82] cc => I,
 Pos: [69, 72] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [83, 86] cc => I,
 Pos: [87, 93] cc => I,
 Pos: [94, 100] cc => I,
 Pos: [97, 102] cc => I,
 Pos: [103, 108] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [134, 137] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [141, 147] cc => I,
 Pos: [144, 150, 156] ccc => cc,
 Pos: [149, 155] cc => I,
 Pos: [153, 168] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [167, 171, 178] ccc => cc,
 Pos: [169, 175] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [184, 187] cc => I,
 Pos: [186, 191, 196] ccc => cc,
 Pos: [201, 204] cc => I,
 Pos: [205, 212] cc => I,
 Pos: [208, 214] cc => I,
 Pos: [215, 223] cc => I]
Change: 44, Saving: 166

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3] cc => I,
 Pos: [11, 20, 24] ccc => cc,
 Pos: [13, 16] cc => I,
 Pos: [21, 27, 29] ccc => cc,
 Pos: [23, 28] cc => I,
 Pos: [31, 37] cc => I,
 Pos: [35, 49] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [41, 57] cc => I,
 Pos: [43, 45] cc => I,
 Pos: [47, 55] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [52, 58] cc => I,
 Pos: [63, 67] cc => I,
 Pos: [65, 71] cc => I,
 Pos: [66, 82] cc => I,
 Pos: [69, 72] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [83, 86] cc => I,
 Pos: [87, 93] cc => I,
 Pos: [94, 100] cc => I,
 Pos: [97, 102] cc => I,
 Pos: [103, 108] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [134, 137] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [141, 147] cc => I,
 Pos: [144, 150, 156] ccc => cc,
 Pos: [149, 155] cc => I,
 Pos: [153, 168] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [167, 171, 178] ccc => cc,
 Pos: [169, 175] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [184, 187] cc => I,
 Pos: [186, 191, 196] ccc => cc,
 Pos: [201, 204] cc => I,
 Pos: [205, 212] cc => I,
 Pos: [208, 214] cc => I,
 Pos: [215, 223] cc => I]
Change: 44, Saving: 166

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 3] cc => I
Apply:  Pos: [11, 20, 24] ccc => cc
Apply:  Pos: [13, 16] cc => I
Apply:  Pos: [21, 27, 29] ccc => cc
Apply:  Pos: [23, 28] cc => I
Apply:  Pos: [31, 37] cc => I
Apply:  Pos: [35, 49] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [41, 57] cc => I
Apply:  Pos: [43, 45] cc => I
Apply:  Pos: [47, 55] cc => I
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [50, 70] cc => I
Apply:  Pos: [52, 58] cc => I
Apply:  Pos: [63, 67] cc => I
Apply:  Pos: [65, 71] cc => I
Apply:  Pos: [66, 82] cc => I
Apply:  Pos: [69, 72] cc => I
Apply:  Pos: [75, 79] cc => I
Apply:  Pos: [83, 86] cc => I
Apply:  Pos: [87, 93] cc => I
Apply:  Pos: [94, 100] cc => I
Apply:  Pos: [97, 102] cc => I
Apply:  Pos: [103, 108] cc => I
Apply:  Pos: [107, 112] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [134, 137] cc => I
Apply:  Pos: [135, 139] cc => I
Apply:  Pos: [141, 147] cc => I
Apply:  Pos: [144, 150, 156] ccc => cc
Apply:  Pos: [149, 155] cc => I
Apply:  Pos: [153, 168] cc => I
Apply:  Pos: [158, 165] cc => I
Apply:  Pos: [167, 171, 178] ccc => cc
Apply:  Pos: [169, 175] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [184, 187] cc => I
Apply:  Pos: [186, 191, 196] ccc => cc
Apply:  Pos: [201, 204] cc => I
Apply:  Pos: [205, 212] cc => I
Apply:  Pos: [208, 214] cc => I
Apply:  Pos: [215, 223] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 7], [1, 3], [11, 17], [9, 16], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [15, 8], [1, 3], [11, 6], [12, 7], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [2, 5], [0, 2], [12, 7], [1, 11], [2, 19], [8, 7], [9, 10], [14, 10], [2, 5], [2, 19], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 5], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [9, 10], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [2, 5], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [10, 11], [19, 4], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 18], [15, 7], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [3, 18], [2, 5], [17, 6], [0, 9], [5, 1], [9, 16], [11, 6], [2, 14], [15, 7], [19, 4], [12, 8], [12, 7], [15, 8], [10, 13], [12, 15], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [9, 16], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  4.203099727630615

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 41]
[94, 110]
[107, 131]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[2, 7, 13]
[26, 31, 35]
[40, 56, 60]
[48, 52, 68]
[93, 98, 102]
[114, 118, 123]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[0, 3, 9]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 114, 116]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 41]
[94, 110]
[107, 131]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.375011444091797

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3, 9] ccc => cc, Pos: [2, 7, 13] ccc => cc, Pos: [26, 31, 35] ccc => cc, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [40, 56, 60] ccc => cc, Pos: [48, 52, 68] ccc => cc, Pos: [93, 98, 102] ccc => cc, Pos: [94, 110] cc => I, Pos: [94, 110] cc => I, Pos: [107, 131] cc => I, Pos: [107, 131] cc => I, Pos: [113, 114, 116] ccc => cc, Pos: [114, 118, 123] ccc => cc]

Plan: 1
[Pos: [0, 3, 9] ccc => cc,
 Pos: [2, 7, 13] ccc => cc,
 Pos: [26, 31, 35] ccc => cc,
 Pos: [37, 41] cc => I,
 Pos: [40, 56, 60] ccc => cc,
 Pos: [48, 52, 68] ccc => cc,
 Pos: [93, 98, 102] ccc => cc,
 Pos: [94, 110] cc => I,
 Pos: [107, 131] cc => I,
 Pos: [113, 114, 116] ccc => cc]
Change: 10, Saving: 26

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3, 9] ccc => cc,
 Pos: [2, 7, 13] ccc => cc,
 Pos: [26, 31, 35] ccc => cc,
 Pos: [37, 41] cc => I,
 Pos: [40, 56, 60] ccc => cc,
 Pos: [48, 52, 68] ccc => cc,
 Pos: [93, 98, 102] ccc => cc,
 Pos: [94, 110] cc => I,
 Pos: [107, 131] cc => I,
 Pos: [113, 114, 116] ccc => cc]
Change: 10, Saving: 26

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 3, 9] ccc => cc
Apply:  Pos: [2, 7, 13] ccc => cc
Apply:  Pos: [26, 31, 35] ccc => cc
Apply:  Pos: [37, 41] cc => I
Apply:  Pos: [40, 56, 60] ccc => cc
Apply:  Pos: [48, 52, 68] ccc => cc
Apply:  Pos: [93, 98, 102] ccc => cc
Apply:  Pos: [94, 110] cc => I
Apply:  Pos: [107, 131] cc => I
Apply:  Pos: [113, 114, 116] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[12, 15], [19, 5], [9, 10], [15, 7], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [15, 8], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [2, 5], [0, 2], [1, 11], [8, 7], [14, 10], [9, 11], [2, 5], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [10, 11], [19, 4], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [0, 9], [5, 1], [11, 6], [2, 14], [19, 4], [12, 7], [12, 15], [15, 8], [10, 13], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.375011444091797

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[31, 32, 37]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0937275886535645

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [31, 32, 37] ccc => cc]

Plan: 1
[Pos: [31, 32, 37] ccc => cc]
Change: 1, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [31, 32, 37] ccc => cc]
Change: 1, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [31, 32, 37] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[12, 15], [19, 5], [9, 10], [15, 7], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [15, 8], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [0, 2], [2, 5], [1, 11], [8, 7], [14, 10], [9, 11], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [10, 11], [19, 4], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [0, 9], [5, 1], [11, 6], [2, 14], [19, 4], [12, 15], [12, 7], [15, 8], [11, 13], [10, 13], [8, 1], [5, 18], [9, 14], [15, 7], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.0937275886535645

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0464491844177246

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[12, 15], [19, 5], [9, 10], [15, 7], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [15, 8], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [0, 2], [2, 5], [1, 11], [8, 7], [14, 10], [9, 11], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [10, 11], [19, 4], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [0, 9], [5, 1], [11, 6], [2, 14], [19, 4], [12, 7], [12, 15], [15, 8], [10, 13], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.0464491844177246

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [128] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 28 - (small)
 - circuit cycle: 256

Reduced: 
 - size: 97 (43.11%)
 - cycle: 194 (43.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374332427978516

[10, 11], [15, 7], [19, 5], [10, 11], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [10, 1], [11, 17], [9, 16], [10, 1], [9, 14], [0, 2], [13, 17], [8, 7], [19, 5], [4, 3], [10, 1], [15, 8], [16, 12], [0, 9], [2, 5], [10, 1], [2, 19], [17, 6], [16, 14], [15, 8], [1, 3], [11, 6], [5, 18], [12, 7], [16, 14], [5, 3], [10, 11], [9, 16], [12, 15], [14, 19], [13, 17], [5, 3], [13, 17], [16, 10], [0, 9], [2, 14], [5, 18], [17, 6], [2, 14], [8, 11], [7, 13], [10, 1], [0, 9], [2, 5], [12, 15], [8, 11], [0, 2], [12, 7], [1, 11], [2, 19], [5, 18], [8, 7], [19, 4], [12, 8], [5, 18], [9, 10], [15, 7], [17, 6], [19, 4], [15, 7], [14, 10], [2, 5], [13, 17], [2, 19], [12, 15], [5, 1], [13, 17], [16, 14], [19, 5], [12, 8], [17, 6], [9, 14], [2, 5], [17, 6], [11, 13], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [11, 13], [19, 4], [15, 7], [2, 14], [3, 18], [10, 11], [9, 16], [19, 4], [7, 13], [3, 18], [8, 11], [16, 12], [9, 10], [2, 19], [1, 3], [8, 11], [0, 9], [12, 15], [13, 6], [1, 3], [9, 14], [15, 8], [11, 17], [2, 5], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [9, 14], [1, 11], [8, 7], [16, 12], [19, 4], [1, 3], [9, 14], [19, 4], [10, 11], [1, 3], [19, 4], [10, 8], [7, 13], [11, 17], [4, 3], [13, 17], [19, 5], [10, 8], [16, 14], [0, 9], [3, 18], [15, 7], [12, 8], [10, 11], [14, 19], [0, 9], [4, 3], [5, 1], [7, 13], [18, 17], [10, 8], [9, 14], [0, 2], [3, 18], [2, 5], [7, 13], [17, 6], [9, 16], [10, 11], [18, 17], [5, 1], [0, 9], [11, 6], [2, 14], [15, 7], [18, 17], [19, 4], [12, 8], [9, 16], [13, 17], [5, 18], [12, 7], [2, 19], [15, 8], [9, 14], [13, 17], [10, 11], [9, 14], [5, 18], [2, 19], [12, 15], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [10, 11], [3, 18], [12, 8], [2, 5], [13, 17], [10, 8], [1, 11], [14, 19], [10, 8], [17, 6], [19, 5], [1, 3], [8, 7], [2, 19], [9, 16], [14, 10], [17, 6], [5, 1], [8, 7], [5, 3], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [5, 3], [12, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[13, 16]
[16, 23]
[23, 28]
[24, 32]
[31, 37]
[38, 44]
[43, 45]
[35, 49]
[48, 51]
[47, 55]
[41, 57]
[52, 58]
[63, 67]
[50, 70]
[65, 71]
[69, 72]
[75, 79]
[66, 82]
[83, 86]
[87, 93]
[94, 100]
[97, 102]
[103, 108]
[107, 112]
[130, 136]
[134, 137]
[135, 139]
[137, 140]
[141, 147]
[149, 155]
[158, 165]
[153, 168]
[169, 175]
[179, 185]
[184, 187]
[180, 188]
[182, 189]
[188, 193]
[187, 194]
[201, 204]
[178, 210]
[205, 212]
[208, 214]
[214, 218]
[215, 223]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 20, 24]
[144, 150, 156]
[168, 172, 186]
[186, 191, 196]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 106, 117]
[167, 171, 178]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[21, 27, 29]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[13, 16]
[16, 23]
[23, 28]
[24, 32]
[31, 37]
[38, 44]
[43, 45]
[35, 49]
[48, 51]
[47, 55]
[41, 57]
[52, 58]
[63, 67]
[50, 70]
[65, 71]
[69, 72]
[75, 79]
[66, 82]
[83, 86]
[87, 93]
[94, 100]
[97, 102]
[103, 108]
[107, 112]
[130, 136]
[134, 137]
[135, 139]
[137, 140]
[141, 147]
[149, 155]
[158, 165]
[153, 168]
[169, 175]
[179, 185]
[184, 187]
[180, 188]
[182, 189]
[188, 193]
[187, 194]
[201, 204]
[178, 210]
[205, 212]
[208, 214]
[214, 218]
[215, 223]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.187499761581421

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3] cc => I, Pos: [0, 3] cc => I, Pos: [11, 20, 24] ccc => cc, Pos: [13, 16] cc => I, Pos: [13, 16] cc => I, Pos: [16, 23] cc => I, Pos: [16, 23] cc => I, Pos: [21, 27, 29] ccc => cc, Pos: [23, 28] cc => I, Pos: [23, 28] cc => I, Pos: [24, 32] cc => I, Pos: [24, 32] cc => I, Pos: [31, 37] cc => I, Pos: [31, 37] cc => I, Pos: [35, 49] cc => I, Pos: [35, 49] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [41, 57] cc => I, Pos: [41, 57] cc => I, Pos: [43, 45] cc => I, Pos: [43, 45] cc => I, Pos: [47, 55] cc => I, Pos: [47, 55] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [50, 70] cc => I, Pos: [50, 70] cc => I, Pos: [52, 58] cc => I, Pos: [52, 58] cc => I, Pos: [63, 67] cc => I, Pos: [63, 67] cc => I, Pos: [65, 71] cc => I, Pos: [65, 71] cc => I, Pos: [66, 82] cc => I, Pos: [66, 82] cc => I, Pos: [69, 72] cc => I, Pos: [69, 72] cc => I, Pos: [75, 79] cc => I, Pos: [75, 79] cc => I, Pos: [83, 86] cc => I, Pos: [83, 86] cc => I, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [94, 100] cc => I, Pos: [94, 100] cc => I, Pos: [97, 102] cc => I, Pos: [97, 102] cc => I, Pos: [100, 106, 117] ccc => cc, Pos: [103, 108] cc => I, Pos: [103, 108] cc => I, Pos: [107, 112] cc => I, Pos: [107, 112] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [134, 137] cc => I, Pos: [134, 137] cc => I, Pos: [135, 139] cc => I, Pos: [135, 139] cc => I, Pos: [137, 140] cc => I, Pos: [137, 140] cc => I, Pos: [141, 147] cc => I, Pos: [141, 147] cc => I, Pos: [144, 150, 156] ccc => cc, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [153, 168] cc => I, Pos: [153, 168] cc => I, Pos: [158, 165] cc => I, Pos: [158, 165] cc => I, Pos: [167, 171, 178] ccc => cc, Pos: [168, 172, 186] ccc => cc, Pos: [169, 175] cc => I, Pos: [169, 175] cc => I, Pos: [178, 210] cc => I, Pos: [178, 210] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [184, 187] cc => I, Pos: [184, 187] cc => I, Pos: [186, 191, 196] ccc => cc, Pos: [187, 194] cc => I, Pos: [187, 194] cc => I, Pos: [188, 193] cc => I, Pos: [188, 193] cc => I, Pos: [201, 204] cc => I, Pos: [201, 204] cc => I, Pos: [205, 212] cc => I, Pos: [205, 212] cc => I, Pos: [208, 214] cc => I, Pos: [208, 214] cc => I, Pos: [214, 218] cc => I, Pos: [214, 218] cc => I, Pos: [215, 223] cc => I, Pos: [215, 223] cc => I]

Plan: 1
[Pos: [0, 3] cc => I,
 Pos: [11, 20, 24] ccc => cc,
 Pos: [13, 16] cc => I,
 Pos: [21, 27, 29] ccc => cc,
 Pos: [23, 28] cc => I,
 Pos: [31, 37] cc => I,
 Pos: [35, 49] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [41, 57] cc => I,
 Pos: [43, 45] cc => I,
 Pos: [47, 55] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [52, 58] cc => I,
 Pos: [63, 67] cc => I,
 Pos: [65, 71] cc => I,
 Pos: [66, 82] cc => I,
 Pos: [69, 72] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [83, 86] cc => I,
 Pos: [87, 93] cc => I,
 Pos: [94, 100] cc => I,
 Pos: [97, 102] cc => I,
 Pos: [103, 108] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [134, 137] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [141, 147] cc => I,
 Pos: [144, 150, 156] ccc => cc,
 Pos: [149, 155] cc => I,
 Pos: [153, 168] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [167, 171, 178] ccc => cc,
 Pos: [169, 175] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [184, 187] cc => I,
 Pos: [186, 191, 196] ccc => cc,
 Pos: [201, 204] cc => I,
 Pos: [205, 212] cc => I,
 Pos: [208, 214] cc => I,
 Pos: [215, 223] cc => I]
Change: 44, Saving: 44

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.10951662063598633

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3] cc => I,
 Pos: [11, 20, 24] ccc => cc,
 Pos: [13, 16] cc => I,
 Pos: [21, 27, 29] ccc => cc,
 Pos: [23, 28] cc => I,
 Pos: [31, 37] cc => I,
 Pos: [35, 49] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [41, 57] cc => I,
 Pos: [43, 45] cc => I,
 Pos: [47, 55] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [52, 58] cc => I,
 Pos: [63, 67] cc => I,
 Pos: [65, 71] cc => I,
 Pos: [66, 82] cc => I,
 Pos: [69, 72] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [83, 86] cc => I,
 Pos: [87, 93] cc => I,
 Pos: [94, 100] cc => I,
 Pos: [97, 102] cc => I,
 Pos: [103, 108] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [134, 137] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [141, 147] cc => I,
 Pos: [144, 150, 156] ccc => cc,
 Pos: [149, 155] cc => I,
 Pos: [153, 168] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [167, 171, 178] ccc => cc,
 Pos: [169, 175] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [184, 187] cc => I,
 Pos: [186, 191, 196] ccc => cc,
 Pos: [201, 204] cc => I,
 Pos: [205, 212] cc => I,
 Pos: [208, 214] cc => I,
 Pos: [215, 223] cc => I]
Change: 44, Saving: 44

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 3] cc => I
Apply:  Pos: [11, 20, 24] ccc => cc
Apply:  Pos: [13, 16] cc => I
Apply:  Pos: [21, 27, 29] ccc => cc
Apply:  Pos: [23, 28] cc => I
Apply:  Pos: [31, 37] cc => I
Apply:  Pos: [35, 49] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [41, 57] cc => I
Apply:  Pos: [43, 45] cc => I
Apply:  Pos: [47, 55] cc => I
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [50, 70] cc => I
Apply:  Pos: [52, 58] cc => I
Apply:  Pos: [63, 67] cc => I
Apply:  Pos: [65, 71] cc => I
Apply:  Pos: [66, 82] cc => I
Apply:  Pos: [69, 72] cc => I
Apply:  Pos: [75, 79] cc => I
Apply:  Pos: [83, 86] cc => I
Apply:  Pos: [87, 93] cc => I
Apply:  Pos: [94, 100] cc => I
Apply:  Pos: [97, 102] cc => I
Apply:  Pos: [103, 108] cc => I
Apply:  Pos: [107, 112] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [134, 137] cc => I
Apply:  Pos: [135, 139] cc => I
Apply:  Pos: [141, 147] cc => I
Apply:  Pos: [144, 150, 156] ccc => cc
Apply:  Pos: [149, 155] cc => I
Apply:  Pos: [153, 168] cc => I
Apply:  Pos: [158, 165] cc => I
Apply:  Pos: [167, 171, 178] ccc => cc
Apply:  Pos: [169, 175] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [184, 187] cc => I
Apply:  Pos: [186, 191, 196] ccc => cc
Apply:  Pos: [201, 204] cc => I
Apply:  Pos: [205, 212] cc => I
Apply:  Pos: [208, 214] cc => I
Apply:  Pos: [215, 223] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015505790710449219

[15, 7], [19, 5], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 7], [1, 3], [11, 17], [9, 16], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [15, 8], [1, 3], [11, 6], [12, 7], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [2, 5], [0, 2], [12, 7], [1, 11], [2, 19], [8, 7], [9, 10], [14, 10], [2, 5], [2, 19], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 5], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [9, 10], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [2, 5], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [10, 11], [19, 4], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 18], [15, 7], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [3, 18], [2, 5], [17, 6], [0, 9], [5, 1], [9, 16], [11, 6], [2, 14], [15, 7], [19, 4], [12, 8], [12, 7], [15, 8], [10, 13], [12, 15], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [9, 16], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  4.3125221729278564

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 41]
[94, 110]
[107, 131]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[2, 7, 13]
[26, 31, 35]
[40, 56, 60]
[48, 52, 68]
[93, 98, 102]
[114, 118, 123]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[0, 3, 9]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 114, 116]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 41]
[94, 110]
[107, 131]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3437061309814453

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3, 9] ccc => cc, Pos: [2, 7, 13] ccc => cc, Pos: [26, 31, 35] ccc => cc, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [40, 56, 60] ccc => cc, Pos: [48, 52, 68] ccc => cc, Pos: [93, 98, 102] ccc => cc, Pos: [94, 110] cc => I, Pos: [94, 110] cc => I, Pos: [107, 131] cc => I, Pos: [107, 131] cc => I, Pos: [113, 114, 116] ccc => cc, Pos: [114, 118, 123] ccc => cc]

Plan: 1
[Pos: [0, 3, 9] ccc => cc,
 Pos: [2, 7, 13] ccc => cc,
 Pos: [26, 31, 35] ccc => cc,
 Pos: [37, 41] cc => I,
 Pos: [40, 56, 60] ccc => cc,
 Pos: [48, 52, 68] ccc => cc,
 Pos: [93, 98, 102] ccc => cc,
 Pos: [94, 110] cc => I,
 Pos: [107, 131] cc => I,
 Pos: [113, 114, 116] ccc => cc]
Change: 10, Saving: 11

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.03126168251037598

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3, 9] ccc => cc,
 Pos: [2, 7, 13] ccc => cc,
 Pos: [26, 31, 35] ccc => cc,
 Pos: [37, 41] cc => I,
 Pos: [40, 56, 60] ccc => cc,
 Pos: [48, 52, 68] ccc => cc,
 Pos: [93, 98, 102] ccc => cc,
 Pos: [94, 110] cc => I,
 Pos: [107, 131] cc => I,
 Pos: [113, 114, 116] ccc => cc]
Change: 10, Saving: 11

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 3, 9] ccc => cc
Apply:  Pos: [2, 7, 13] ccc => cc
Apply:  Pos: [26, 31, 35] ccc => cc
Apply:  Pos: [37, 41] cc => I
Apply:  Pos: [40, 56, 60] ccc => cc
Apply:  Pos: [48, 52, 68] ccc => cc
Apply:  Pos: [93, 98, 102] ccc => cc
Apply:  Pos: [94, 110] cc => I
Apply:  Pos: [107, 131] cc => I
Apply:  Pos: [113, 114, 116] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[12, 15], [19, 5], [9, 10], [15, 7], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [15, 8], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [2, 5], [0, 2], [1, 11], [8, 7], [14, 10], [9, 11], [2, 5], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [10, 11], [19, 4], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [0, 9], [5, 1], [11, 6], [2, 14], [19, 4], [12, 7], [12, 15], [15, 8], [10, 13], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.3749678134918213

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[31, 32, 37]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.06245493888855

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [31, 32, 37] ccc => cc]

Plan: 1
[Pos: [31, 32, 37] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [31, 32, 37] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [31, 32, 37] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[12, 15], [19, 5], [9, 10], [15, 7], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [15, 8], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [0, 2], [2, 5], [1, 11], [8, 7], [14, 10], [9, 11], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [10, 11], [19, 4], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [0, 9], [5, 1], [11, 6], [2, 14], [19, 4], [12, 15], [12, 7], [15, 8], [11, 13], [10, 13], [8, 1], [5, 18], [9, 14], [15, 7], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.06245493888855

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.031306266784668

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[12, 15], [19, 5], [9, 10], [15, 7], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [15, 8], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [0, 2], [2, 5], [1, 11], [8, 7], [14, 10], [9, 11], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [10, 11], [19, 4], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [0, 9], [5, 1], [11, 6], [2, 14], [19, 4], [12, 7], [12, 15], [15, 8], [10, 13], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.031306266784668

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [128] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 28 - (small)
 - circuit cycle: 256

Reduced: 
 - size: 97 (43.11%)
 - depth: 17 (37.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09373044967651367

[10, 11], [15, 7], [19, 5], [10, 11], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [10, 1], [11, 17], [9, 16], [10, 1], [9, 14], [0, 2], [13, 17], [8, 7], [19, 5], [4, 3], [10, 1], [15, 8], [16, 12], [0, 9], [2, 5], [10, 1], [2, 19], [17, 6], [16, 14], [15, 8], [1, 3], [11, 6], [5, 18], [12, 7], [16, 14], [5, 3], [10, 11], [9, 16], [12, 15], [14, 19], [13, 17], [5, 3], [13, 17], [16, 10], [0, 9], [2, 14], [5, 18], [17, 6], [2, 14], [8, 11], [7, 13], [10, 1], [0, 9], [2, 5], [12, 15], [8, 11], [0, 2], [12, 7], [1, 11], [2, 19], [5, 18], [8, 7], [19, 4], [12, 8], [5, 18], [9, 10], [15, 7], [17, 6], [19, 4], [15, 7], [14, 10], [2, 5], [13, 17], [2, 19], [12, 15], [5, 1], [13, 17], [16, 14], [19, 5], [12, 8], [17, 6], [9, 14], [2, 5], [17, 6], [11, 13], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [11, 13], [19, 4], [15, 7], [2, 14], [3, 18], [10, 11], [9, 16], [19, 4], [7, 13], [3, 18], [8, 11], [16, 12], [9, 10], [2, 19], [1, 3], [8, 11], [0, 9], [12, 15], [13, 6], [1, 3], [9, 14], [15, 8], [11, 17], [2, 5], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [9, 14], [1, 11], [8, 7], [16, 12], [19, 4], [1, 3], [9, 14], [19, 4], [10, 11], [1, 3], [19, 4], [10, 8], [7, 13], [11, 17], [4, 3], [13, 17], [19, 5], [10, 8], [16, 14], [0, 9], [3, 18], [15, 7], [12, 8], [10, 11], [14, 19], [0, 9], [4, 3], [5, 1], [7, 13], [18, 17], [10, 8], [9, 14], [0, 2], [3, 18], [2, 5], [7, 13], [17, 6], [9, 16], [10, 11], [18, 17], [5, 1], [0, 9], [11, 6], [2, 14], [15, 7], [18, 17], [19, 4], [12, 8], [9, 16], [13, 17], [5, 18], [12, 7], [2, 19], [15, 8], [9, 14], [13, 17], [10, 11], [9, 14], [5, 18], [2, 19], [12, 15], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [10, 11], [3, 18], [12, 8], [2, 5], [13, 17], [10, 8], [1, 11], [14, 19], [10, 8], [17, 6], [19, 5], [1, 3], [8, 7], [2, 19], [9, 16], [14, 10], [17, 6], [5, 1], [8, 7], [5, 3], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [5, 3], [12, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[13, 16]
[16, 23]
[23, 28]
[24, 32]
[31, 37]
[38, 44]
[43, 45]
[35, 49]
[48, 51]
[47, 55]
[41, 57]
[52, 58]
[63, 67]
[50, 70]
[65, 71]
[69, 72]
[75, 79]
[66, 82]
[83, 86]
[87, 93]
[94, 100]
[97, 102]
[103, 108]
[107, 112]
[130, 136]
[134, 137]
[135, 139]
[137, 140]
[141, 147]
[149, 155]
[158, 165]
[153, 168]
[169, 175]
[179, 185]
[184, 187]
[180, 188]
[182, 189]
[188, 193]
[187, 194]
[201, 204]
[178, 210]
[205, 212]
[208, 214]
[214, 218]
[215, 223]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 20, 24]
[144, 150, 156]
[168, 172, 186]
[186, 191, 196]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 106, 117]
[167, 171, 178]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[21, 27, 29]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[13, 16]
[16, 23]
[23, 28]
[24, 32]
[31, 37]
[38, 44]
[43, 45]
[35, 49]
[48, 51]
[47, 55]
[41, 57]
[52, 58]
[63, 67]
[50, 70]
[65, 71]
[69, 72]
[75, 79]
[66, 82]
[83, 86]
[87, 93]
[94, 100]
[97, 102]
[103, 108]
[107, 112]
[130, 136]
[134, 137]
[135, 139]
[137, 140]
[141, 147]
[149, 155]
[158, 165]
[153, 168]
[169, 175]
[179, 185]
[184, 187]
[180, 188]
[182, 189]
[188, 193]
[187, 194]
[201, 204]
[178, 210]
[205, 212]
[208, 214]
[214, 218]
[215, 223]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.2331671714782715

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3] cc => I, Pos: [0, 3] cc => I, Pos: [11, 20, 24] ccc => cc, Pos: [13, 16] cc => I, Pos: [13, 16] cc => I, Pos: [16, 23] cc => I, Pos: [16, 23] cc => I, Pos: [21, 27, 29] ccc => cc, Pos: [23, 28] cc => I, Pos: [23, 28] cc => I, Pos: [24, 32] cc => I, Pos: [24, 32] cc => I, Pos: [31, 37] cc => I, Pos: [31, 37] cc => I, Pos: [35, 49] cc => I, Pos: [35, 49] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [41, 57] cc => I, Pos: [41, 57] cc => I, Pos: [43, 45] cc => I, Pos: [43, 45] cc => I, Pos: [47, 55] cc => I, Pos: [47, 55] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [50, 70] cc => I, Pos: [50, 70] cc => I, Pos: [52, 58] cc => I, Pos: [52, 58] cc => I, Pos: [63, 67] cc => I, Pos: [63, 67] cc => I, Pos: [65, 71] cc => I, Pos: [65, 71] cc => I, Pos: [66, 82] cc => I, Pos: [66, 82] cc => I, Pos: [69, 72] cc => I, Pos: [69, 72] cc => I, Pos: [75, 79] cc => I, Pos: [75, 79] cc => I, Pos: [83, 86] cc => I, Pos: [83, 86] cc => I, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [94, 100] cc => I, Pos: [94, 100] cc => I, Pos: [97, 102] cc => I, Pos: [97, 102] cc => I, Pos: [100, 106, 117] ccc => cc, Pos: [103, 108] cc => I, Pos: [103, 108] cc => I, Pos: [107, 112] cc => I, Pos: [107, 112] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [134, 137] cc => I, Pos: [134, 137] cc => I, Pos: [135, 139] cc => I, Pos: [135, 139] cc => I, Pos: [137, 140] cc => I, Pos: [137, 140] cc => I, Pos: [141, 147] cc => I, Pos: [141, 147] cc => I, Pos: [144, 150, 156] ccc => cc, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [153, 168] cc => I, Pos: [153, 168] cc => I, Pos: [158, 165] cc => I, Pos: [158, 165] cc => I, Pos: [167, 171, 178] ccc => cc, Pos: [168, 172, 186] ccc => cc, Pos: [169, 175] cc => I, Pos: [169, 175] cc => I, Pos: [178, 210] cc => I, Pos: [178, 210] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [184, 187] cc => I, Pos: [184, 187] cc => I, Pos: [186, 191, 196] ccc => cc, Pos: [187, 194] cc => I, Pos: [187, 194] cc => I, Pos: [188, 193] cc => I, Pos: [188, 193] cc => I, Pos: [201, 204] cc => I, Pos: [201, 204] cc => I, Pos: [205, 212] cc => I, Pos: [205, 212] cc => I, Pos: [208, 214] cc => I, Pos: [208, 214] cc => I, Pos: [214, 218] cc => I, Pos: [214, 218] cc => I, Pos: [215, 223] cc => I, Pos: [215, 223] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3] cc => I,
 Pos: [24, 32] cc => I,
 Pos: [13, 16] cc => I,
 Pos: [21, 27, 29] ccc => cc,
 Pos: [23, 28] cc => I,
 Pos: [31, 37] cc => I,
 Pos: [35, 49] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [41, 57] cc => I,
 Pos: [43, 45] cc => I,
 Pos: [47, 55] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [52, 58] cc => I,
 Pos: [63, 67] cc => I,
 Pos: [65, 71] cc => I,
 Pos: [66, 82] cc => I,
 Pos: [69, 72] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [83, 86] cc => I,
 Pos: [87, 93] cc => I,
 Pos: [94, 100] cc => I,
 Pos: [97, 102] cc => I,
 Pos: [103, 108] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [137, 140] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [141, 147] cc => I,
 Pos: [144, 150, 156] ccc => cc,
 Pos: [149, 155] cc => I,
 Pos: [168, 172, 186] ccc => cc,
 Pos: [158, 165] cc => I,
 Pos: [178, 210] cc => I,
 Pos: [169, 175] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [187, 194] cc => I,
 Pos: [201, 204] cc => I,
 Pos: [205, 212] cc => I,
 Pos: [214, 218] cc => I,
 Pos: [215, 223] cc => I]
Change: 43, Saving: 166

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 3] cc => I
Apply:  Pos: [24, 32] cc => I
Apply:  Pos: [13, 16] cc => I
Apply:  Pos: [21, 27, 29] ccc => cc
Apply:  Pos: [23, 28] cc => I
Apply:  Pos: [31, 37] cc => I
Apply:  Pos: [35, 49] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [41, 57] cc => I
Apply:  Pos: [43, 45] cc => I
Apply:  Pos: [47, 55] cc => I
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [50, 70] cc => I
Apply:  Pos: [52, 58] cc => I
Apply:  Pos: [63, 67] cc => I
Apply:  Pos: [65, 71] cc => I
Apply:  Pos: [66, 82] cc => I
Apply:  Pos: [69, 72] cc => I
Apply:  Pos: [75, 79] cc => I
Apply:  Pos: [83, 86] cc => I
Apply:  Pos: [87, 93] cc => I
Apply:  Pos: [94, 100] cc => I
Apply:  Pos: [97, 102] cc => I
Apply:  Pos: [103, 108] cc => I
Apply:  Pos: [107, 112] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [137, 140] cc => I
Apply:  Pos: [135, 139] cc => I
Apply:  Pos: [141, 147] cc => I
Apply:  Pos: [144, 150, 156] ccc => cc
Apply:  Pos: [149, 155] cc => I
Apply:  Pos: [168, 172, 186] ccc => cc
Apply:  Pos: [158, 165] cc => I
Apply:  Pos: [178, 210] cc => I
Apply:  Pos: [169, 175] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [187, 194] cc => I
Apply:  Pos: [201, 204] cc => I
Apply:  Pos: [205, 212] cc => I
Apply:  Pos: [214, 218] cc => I
Apply:  Pos: [215, 223] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [11, 17], [9, 16], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [1, 3], [11, 6], [12, 7], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [2, 5], [0, 2], [12, 7], [1, 11], [2, 19], [8, 7], [9, 10], [14, 10], [2, 5], [2, 19], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 5], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [9, 10], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [2, 5], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 18], [15, 7], [12, 8], [10, 11], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [3, 18], [2, 5], [17, 6], [9, 16], [10, 6], [5, 1], [0, 9], [11, 6], [2, 14], [15, 7], [19, 4], [12, 8], [12, 7], [15, 8], [9, 14], [12, 15], [11, 13], [8, 1], [5, 18], [15, 7], [10, 11], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [8, 7], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  4.2331671714782715

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 40]
[93, 111]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[2, 7, 13]
[25, 30, 34]
[39, 55, 59]
[47, 51, 67]
[92, 98, 102]
[115, 119, 124]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[114, 115, 117]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 40]
[93, 111]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3812477588653564

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7, 13] ccc => cc, Pos: [25, 30, 34] ccc => cc, Pos: [36, 40] cc => I, Pos: [36, 40] cc => I, Pos: [39, 55, 59] ccc => cc, Pos: [47, 51, 67] ccc => cc, Pos: [92, 98, 102] ccc => cc, Pos: [93, 111] cc => I, Pos: [93, 111] cc => I, Pos: [114, 115, 117] ccc => cc, Pos: [115, 119, 124] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 7, 13] ccc => cc,
 Pos: [25, 30, 34] ccc => cc,
 Pos: [36, 40] cc => I,
 Pos: [39, 55, 59] ccc => cc,
 Pos: [47, 51, 67] ccc => cc,
 Pos: [92, 98, 102] ccc => cc,
 Pos: [93, 111] cc => I,
 Pos: [114, 115, 117] ccc => cc]
Change: 8, Saving: 20

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 7, 13] ccc => cc
Apply:  Pos: [25, 30, 34] ccc => cc
Apply:  Pos: [36, 40] cc => I
Apply:  Pos: [39, 55, 59] ccc => cc
Apply:  Pos: [47, 51, 67] ccc => cc
Apply:  Pos: [92, 98, 102] ccc => cc
Apply:  Pos: [93, 111] cc => I
Apply:  Pos: [114, 115, 117] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 10], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [2, 5], [0, 2], [1, 11], [8, 7], [14, 10], [9, 11], [2, 5], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [10, 11], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [9, 16], [10, 6], [5, 1], [0, 9], [11, 6], [2, 14], [19, 4], [12, 7], [12, 15], [15, 8], [9, 14], [11, 13], [8, 1], [5, 18], [15, 7], [10, 11], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [8, 7], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.3812477588653564

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[31, 32, 37]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.1336536407470703

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [31, 32, 37] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [31, 32, 37] ccc => cc]
Change: 1, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [31, 32, 37] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 10], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [0, 2], [2, 5], [1, 11], [8, 7], [14, 10], [9, 11], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [10, 11], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [9, 16], [10, 6], [5, 1], [0, 9], [11, 6], [2, 14], [19, 4], [12, 15], [12, 7], [15, 8], [9, 14], [11, 13], [8, 1], [5, 18], [15, 7], [10, 11], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [8, 7], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.1336536407470703

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.1099023818969727

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 10], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [0, 2], [2, 5], [1, 11], [8, 7], [14, 10], [9, 11], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [10, 11], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [9, 16], [10, 6], [5, 1], [0, 9], [11, 6], [2, 14], [19, 4], [12, 7], [12, 15], [15, 8], [9, 14], [11, 13], [8, 1], [5, 18], [15, 7], [10, 11], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [8, 7], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.1099023818969727

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [131] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 30 - (small)
 - circuit cycle: 262

Reduced: 
 - size: 94 (41.78%)
 - cycle: 188 (41.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09372949600219727

[10, 11], [15, 7], [19, 5], [10, 11], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [10, 1], [11, 17], [9, 16], [10, 1], [9, 14], [0, 2], [13, 17], [8, 7], [19, 5], [4, 3], [10, 1], [15, 8], [16, 12], [0, 9], [2, 5], [10, 1], [2, 19], [17, 6], [16, 14], [15, 8], [1, 3], [11, 6], [5, 18], [12, 7], [16, 14], [5, 3], [10, 11], [9, 16], [12, 15], [14, 19], [13, 17], [5, 3], [13, 17], [16, 10], [0, 9], [2, 14], [5, 18], [17, 6], [2, 14], [8, 11], [7, 13], [10, 1], [0, 9], [2, 5], [12, 15], [8, 11], [0, 2], [12, 7], [1, 11], [2, 19], [5, 18], [8, 7], [19, 4], [12, 8], [5, 18], [9, 10], [15, 7], [17, 6], [19, 4], [15, 7], [14, 10], [2, 5], [13, 17], [2, 19], [12, 15], [5, 1], [13, 17], [16, 14], [19, 5], [12, 8], [17, 6], [9, 14], [2, 5], [17, 6], [11, 13], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [11, 13], [19, 4], [15, 7], [2, 14], [3, 18], [10, 11], [9, 16], [19, 4], [7, 13], [3, 18], [8, 11], [16, 12], [9, 10], [2, 19], [1, 3], [8, 11], [0, 9], [12, 15], [13, 6], [1, 3], [9, 14], [15, 8], [11, 17], [2, 5], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [9, 14], [1, 11], [8, 7], [16, 12], [19, 4], [1, 3], [9, 14], [19, 4], [10, 11], [1, 3], [19, 4], [10, 8], [7, 13], [11, 17], [4, 3], [13, 17], [19, 5], [10, 8], [16, 14], [0, 9], [3, 18], [15, 7], [12, 8], [10, 11], [14, 19], [0, 9], [4, 3], [5, 1], [7, 13], [18, 17], [10, 8], [9, 14], [0, 2], [3, 18], [2, 5], [7, 13], [17, 6], [9, 16], [10, 11], [18, 17], [5, 1], [0, 9], [11, 6], [2, 14], [15, 7], [18, 17], [19, 4], [12, 8], [9, 16], [13, 17], [5, 18], [12, 7], [2, 19], [15, 8], [9, 14], [13, 17], [10, 11], [9, 14], [5, 18], [2, 19], [12, 15], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [10, 11], [3, 18], [12, 8], [2, 5], [13, 17], [10, 8], [1, 11], [14, 19], [10, 8], [17, 6], [19, 5], [1, 3], [8, 7], [2, 19], [9, 16], [14, 10], [17, 6], [5, 1], [8, 7], [5, 3], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [5, 3], [12, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[13, 16]
[16, 23]
[23, 28]
[24, 32]
[31, 37]
[38, 44]
[43, 45]
[35, 49]
[48, 51]
[47, 55]
[41, 57]
[52, 58]
[63, 67]
[50, 70]
[65, 71]
[69, 72]
[75, 79]
[66, 82]
[83, 86]
[87, 93]
[94, 100]
[97, 102]
[103, 108]
[107, 112]
[130, 136]
[134, 137]
[135, 139]
[137, 140]
[141, 147]
[149, 155]
[158, 165]
[153, 168]
[169, 175]
[179, 185]
[184, 187]
[180, 188]
[182, 189]
[188, 193]
[187, 194]
[201, 204]
[178, 210]
[205, 212]
[208, 214]
[214, 218]
[215, 223]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 20, 24]
[144, 150, 156]
[168, 172, 186]
[186, 191, 196]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 106, 117]
[167, 171, 178]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[21, 27, 29]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[13, 16]
[16, 23]
[23, 28]
[24, 32]
[31, 37]
[38, 44]
[43, 45]
[35, 49]
[48, 51]
[47, 55]
[41, 57]
[52, 58]
[63, 67]
[50, 70]
[65, 71]
[69, 72]
[75, 79]
[66, 82]
[83, 86]
[87, 93]
[94, 100]
[97, 102]
[103, 108]
[107, 112]
[130, 136]
[134, 137]
[135, 139]
[137, 140]
[141, 147]
[149, 155]
[158, 165]
[153, 168]
[169, 175]
[179, 185]
[184, 187]
[180, 188]
[182, 189]
[188, 193]
[187, 194]
[201, 204]
[178, 210]
[205, 212]
[208, 214]
[214, 218]
[215, 223]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.217533111572266

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3] cc => I, Pos: [0, 3] cc => I, Pos: [11, 20, 24] ccc => cc, Pos: [13, 16] cc => I, Pos: [13, 16] cc => I, Pos: [16, 23] cc => I, Pos: [16, 23] cc => I, Pos: [21, 27, 29] ccc => cc, Pos: [23, 28] cc => I, Pos: [23, 28] cc => I, Pos: [24, 32] cc => I, Pos: [24, 32] cc => I, Pos: [31, 37] cc => I, Pos: [31, 37] cc => I, Pos: [35, 49] cc => I, Pos: [35, 49] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [41, 57] cc => I, Pos: [41, 57] cc => I, Pos: [43, 45] cc => I, Pos: [43, 45] cc => I, Pos: [47, 55] cc => I, Pos: [47, 55] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [50, 70] cc => I, Pos: [50, 70] cc => I, Pos: [52, 58] cc => I, Pos: [52, 58] cc => I, Pos: [63, 67] cc => I, Pos: [63, 67] cc => I, Pos: [65, 71] cc => I, Pos: [65, 71] cc => I, Pos: [66, 82] cc => I, Pos: [66, 82] cc => I, Pos: [69, 72] cc => I, Pos: [69, 72] cc => I, Pos: [75, 79] cc => I, Pos: [75, 79] cc => I, Pos: [83, 86] cc => I, Pos: [83, 86] cc => I, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [94, 100] cc => I, Pos: [94, 100] cc => I, Pos: [97, 102] cc => I, Pos: [97, 102] cc => I, Pos: [100, 106, 117] ccc => cc, Pos: [103, 108] cc => I, Pos: [103, 108] cc => I, Pos: [107, 112] cc => I, Pos: [107, 112] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [134, 137] cc => I, Pos: [134, 137] cc => I, Pos: [135, 139] cc => I, Pos: [135, 139] cc => I, Pos: [137, 140] cc => I, Pos: [137, 140] cc => I, Pos: [141, 147] cc => I, Pos: [141, 147] cc => I, Pos: [144, 150, 156] ccc => cc, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [153, 168] cc => I, Pos: [153, 168] cc => I, Pos: [158, 165] cc => I, Pos: [158, 165] cc => I, Pos: [167, 171, 178] ccc => cc, Pos: [168, 172, 186] ccc => cc, Pos: [169, 175] cc => I, Pos: [169, 175] cc => I, Pos: [178, 210] cc => I, Pos: [178, 210] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [184, 187] cc => I, Pos: [184, 187] cc => I, Pos: [186, 191, 196] ccc => cc, Pos: [187, 194] cc => I, Pos: [187, 194] cc => I, Pos: [188, 193] cc => I, Pos: [188, 193] cc => I, Pos: [201, 204] cc => I, Pos: [201, 204] cc => I, Pos: [205, 212] cc => I, Pos: [205, 212] cc => I, Pos: [208, 214] cc => I, Pos: [208, 214] cc => I, Pos: [214, 218] cc => I, Pos: [214, 218] cc => I, Pos: [215, 223] cc => I, Pos: [215, 223] cc => I]

--------End Timer [Generate Plans]:  0.09373068809509277

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3] cc => I,
 Pos: [11, 20, 24] ccc => cc,
 Pos: [16, 23] cc => I,
 Pos: [21, 27, 29] ccc => cc,
 Pos: [31, 37] cc => I,
 Pos: [35, 49] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [41, 57] cc => I,
 Pos: [43, 45] cc => I,
 Pos: [47, 55] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [52, 58] cc => I,
 Pos: [63, 67] cc => I,
 Pos: [65, 71] cc => I,
 Pos: [66, 82] cc => I,
 Pos: [69, 72] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [83, 86] cc => I,
 Pos: [87, 93] cc => I,
 Pos: [94, 100] cc => I,
 Pos: [97, 102] cc => I,
 Pos: [103, 108] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [137, 140] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [141, 147] cc => I,
 Pos: [144, 150, 156] ccc => cc,
 Pos: [149, 155] cc => I,
 Pos: [168, 172, 186] ccc => cc,
 Pos: [158, 165] cc => I,
 Pos: [178, 210] cc => I,
 Pos: [169, 175] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [187, 194] cc => I,
 Pos: [201, 204] cc => I,
 Pos: [205, 212] cc => I,
 Pos: [214, 218] cc => I,
 Pos: [215, 223] cc => I]
Change: 42, Saving: 41

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 3] cc => I
Apply:  Pos: [11, 20, 24] ccc => cc
Apply:  Pos: [16, 23] cc => I
Apply:  Pos: [21, 27, 29] ccc => cc
Apply:  Pos: [31, 37] cc => I
Apply:  Pos: [35, 49] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [41, 57] cc => I
Apply:  Pos: [43, 45] cc => I
Apply:  Pos: [47, 55] cc => I
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [50, 70] cc => I
Apply:  Pos: [52, 58] cc => I
Apply:  Pos: [63, 67] cc => I
Apply:  Pos: [65, 71] cc => I
Apply:  Pos: [66, 82] cc => I
Apply:  Pos: [69, 72] cc => I
Apply:  Pos: [75, 79] cc => I
Apply:  Pos: [83, 86] cc => I
Apply:  Pos: [87, 93] cc => I
Apply:  Pos: [94, 100] cc => I
Apply:  Pos: [97, 102] cc => I
Apply:  Pos: [103, 108] cc => I
Apply:  Pos: [107, 112] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [137, 140] cc => I
Apply:  Pos: [135, 139] cc => I
Apply:  Pos: [141, 147] cc => I
Apply:  Pos: [144, 150, 156] ccc => cc
Apply:  Pos: [149, 155] cc => I
Apply:  Pos: [168, 172, 186] ccc => cc
Apply:  Pos: [158, 165] cc => I
Apply:  Pos: [178, 210] cc => I
Apply:  Pos: [169, 175] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [187, 194] cc => I
Apply:  Pos: [201, 204] cc => I
Apply:  Pos: [205, 212] cc => I
Apply:  Pos: [214, 218] cc => I
Apply:  Pos: [215, 223] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015638113021850586

[15, 7], [19, 5], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 7], [1, 3], [10, 1], [11, 17], [9, 16], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [10, 1], [17, 6], [15, 8], [1, 3], [11, 6], [12, 7], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [2, 5], [0, 2], [12, 7], [1, 11], [2, 19], [8, 7], [9, 10], [14, 10], [2, 5], [2, 19], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 5], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [9, 10], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [2, 5], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 18], [15, 7], [12, 8], [10, 11], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [3, 18], [2, 5], [17, 6], [9, 16], [10, 6], [5, 1], [0, 9], [11, 6], [2, 14], [15, 7], [19, 4], [12, 8], [12, 7], [15, 8], [9, 14], [12, 15], [11, 13], [8, 1], [5, 18], [15, 7], [10, 11], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [8, 7], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  4.326901912689209

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 23]
[39, 43]
[96, 114]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[28, 33, 37]
[42, 58, 62]
[50, 54, 70]
[95, 101, 105]
[118, 122, 127]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[0, 3, 9]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[117, 118, 120]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 23]
[39, 43]
[96, 114]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4552128314971924

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3, 9] ccc => cc, Pos: [11, 23] cc => I, Pos: [11, 23] cc => I, Pos: [28, 33, 37] ccc => cc, Pos: [39, 43] cc => I, Pos: [39, 43] cc => I, Pos: [42, 58, 62] ccc => cc, Pos: [50, 54, 70] ccc => cc, Pos: [95, 101, 105] ccc => cc, Pos: [96, 114] cc => I, Pos: [96, 114] cc => I, Pos: [117, 118, 120] ccc => cc, Pos: [118, 122, 127] ccc => cc]

--------End Timer [Generate Plans]:  0.031249284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3, 9] ccc => cc,
 Pos: [11, 23] cc => I,
 Pos: [28, 33, 37] ccc => cc,
 Pos: [39, 43] cc => I,
 Pos: [42, 58, 62] ccc => cc,
 Pos: [50, 54, 70] ccc => cc,
 Pos: [95, 101, 105] ccc => cc,
 Pos: [96, 114] cc => I,
 Pos: [118, 122, 127] ccc => cc]
Change: 9, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 3, 9] ccc => cc
Apply:  Pos: [11, 23] cc => I
Apply:  Pos: [28, 33, 37] ccc => cc
Apply:  Pos: [39, 43] cc => I
Apply:  Pos: [42, 58, 62] ccc => cc
Apply:  Pos: [50, 54, 70] ccc => cc
Apply:  Pos: [95, 101, 105] ccc => cc
Apply:  Pos: [96, 114] cc => I
Apply:  Pos: [118, 122, 127] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[12, 15], [19, 5], [9, 16], [15, 7], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [1, 3], [11, 17], [9, 14], [9, 16], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [15, 8], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [2, 5], [0, 2], [1, 11], [8, 7], [14, 10], [9, 11], [2, 5], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [10, 11], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [9, 16], [10, 6], [5, 1], [0, 9], [11, 6], [2, 14], [19, 4], [12, 7], [15, 8], [12, 1], [9, 14], [12, 15], [11, 13], [8, 1], [5, 18], [15, 7], [10, 11], [3, 18], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [8, 7], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.486462116241455

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[2, 7, 11]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[32, 33, 38]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.1751177310943604

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7, 11] ccc => cc, Pos: [32, 33, 38] ccc => cc]

--------End Timer [Generate Plans]:  0.015624284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 7, 11] ccc => cc, Pos: [32, 33, 38] ccc => cc]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 7, 11] ccc => cc
Apply:  Pos: [32, 33, 38] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[12, 15], [19, 5], [9, 10], [15, 7], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [15, 8], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [0, 2], [2, 5], [1, 11], [8, 7], [14, 10], [9, 11], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [10, 11], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [9, 16], [10, 6], [5, 1], [0, 9], [11, 6], [2, 14], [19, 4], [12, 7], [15, 8], [12, 1], [9, 14], [12, 15], [11, 13], [8, 1], [5, 18], [15, 7], [10, 11], [3, 18], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [8, 7], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.190742015838623

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.1312341690063477

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[12, 15], [19, 5], [9, 10], [15, 7], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [15, 8], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [0, 2], [2, 5], [1, 11], [8, 7], [14, 10], [9, 11], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [10, 11], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [9, 16], [10, 6], [5, 1], [0, 9], [11, 6], [2, 14], [19, 4], [12, 7], [15, 8], [12, 1], [9, 14], [12, 15], [11, 13], [8, 1], [5, 18], [15, 7], [10, 11], [3, 18], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [8, 7], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.1312341690063477

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [131] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 30 - (small)
 - circuit cycle: 262

Reduced: 
 - size: 94 (41.78%)
 - depth: 15 (33.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374547004699707

[10, 11], [15, 7], [19, 5], [10, 11], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [10, 1], [11, 17], [9, 16], [10, 1], [9, 14], [0, 2], [13, 17], [8, 7], [19, 5], [4, 3], [10, 1], [15, 8], [16, 12], [0, 9], [2, 5], [10, 1], [2, 19], [17, 6], [16, 14], [15, 8], [1, 3], [11, 6], [5, 18], [12, 7], [16, 14], [5, 3], [10, 11], [9, 16], [12, 15], [14, 19], [13, 17], [5, 3], [13, 17], [16, 10], [0, 9], [2, 14], [5, 18], [17, 6], [2, 14], [8, 11], [7, 13], [10, 1], [0, 9], [2, 5], [12, 15], [8, 11], [0, 2], [12, 7], [1, 11], [2, 19], [5, 18], [8, 7], [19, 4], [12, 8], [5, 18], [9, 10], [15, 7], [17, 6], [19, 4], [15, 7], [14, 10], [2, 5], [13, 17], [2, 19], [12, 15], [5, 1], [13, 17], [16, 14], [19, 5], [12, 8], [17, 6], [9, 14], [2, 5], [17, 6], [11, 13], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [11, 13], [19, 4], [15, 7], [2, 14], [3, 18], [10, 11], [9, 16], [19, 4], [7, 13], [3, 18], [8, 11], [16, 12], [9, 10], [2, 19], [1, 3], [8, 11], [0, 9], [12, 15], [13, 6], [1, 3], [9, 14], [15, 8], [11, 17], [2, 5], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [9, 14], [1, 11], [8, 7], [16, 12], [19, 4], [1, 3], [9, 14], [19, 4], [10, 11], [1, 3], [19, 4], [10, 8], [7, 13], [11, 17], [4, 3], [13, 17], [19, 5], [10, 8], [16, 14], [0, 9], [3, 18], [15, 7], [12, 8], [10, 11], [14, 19], [0, 9], [4, 3], [5, 1], [7, 13], [18, 17], [10, 8], [9, 14], [0, 2], [3, 18], [2, 5], [7, 13], [17, 6], [9, 16], [10, 11], [18, 17], [5, 1], [0, 9], [11, 6], [2, 14], [15, 7], [18, 17], [19, 4], [12, 8], [9, 16], [13, 17], [5, 18], [12, 7], [2, 19], [15, 8], [9, 14], [13, 17], [10, 11], [9, 14], [5, 18], [2, 19], [12, 15], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [10, 11], [3, 18], [12, 8], [2, 5], [13, 17], [10, 8], [1, 11], [14, 19], [10, 8], [17, 6], [19, 5], [1, 3], [8, 7], [2, 19], [9, 16], [14, 10], [17, 6], [5, 1], [8, 7], [5, 3], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [5, 3], [12, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[13, 16]
[16, 23]
[23, 28]
[24, 32]
[31, 37]
[38, 44]
[43, 45]
[35, 49]
[48, 51]
[47, 55]
[41, 57]
[52, 58]
[63, 67]
[50, 70]
[65, 71]
[69, 72]
[75, 79]
[66, 82]
[83, 86]
[87, 93]
[94, 100]
[97, 102]
[103, 108]
[107, 112]
[130, 136]
[134, 137]
[135, 139]
[137, 140]
[141, 147]
[149, 155]
[158, 165]
[153, 168]
[169, 175]
[179, 185]
[184, 187]
[180, 188]
[182, 189]
[188, 193]
[187, 194]
[201, 204]
[178, 210]
[205, 212]
[208, 214]
[214, 218]
[215, 223]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 20, 24]
[144, 150, 156]
[168, 172, 186]
[186, 191, 196]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 106, 117]
[167, 171, 178]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[21, 27, 29]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[13, 16]
[16, 23]
[23, 28]
[24, 32]
[31, 37]
[38, 44]
[43, 45]
[35, 49]
[48, 51]
[47, 55]
[41, 57]
[52, 58]
[63, 67]
[50, 70]
[65, 71]
[69, 72]
[75, 79]
[66, 82]
[83, 86]
[87, 93]
[94, 100]
[97, 102]
[103, 108]
[107, 112]
[130, 136]
[134, 137]
[135, 139]
[137, 140]
[141, 147]
[149, 155]
[158, 165]
[153, 168]
[169, 175]
[179, 185]
[184, 187]
[180, 188]
[182, 189]
[188, 193]
[187, 194]
[201, 204]
[178, 210]
[205, 212]
[208, 214]
[214, 218]
[215, 223]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.203123092651367

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3] cc => I, Pos: [0, 3] cc => I, Pos: [11, 20, 24] ccc => cc, Pos: [13, 16] cc => I, Pos: [13, 16] cc => I, Pos: [16, 23] cc => I, Pos: [16, 23] cc => I, Pos: [21, 27, 29] ccc => cc, Pos: [23, 28] cc => I, Pos: [23, 28] cc => I, Pos: [24, 32] cc => I, Pos: [24, 32] cc => I, Pos: [31, 37] cc => I, Pos: [31, 37] cc => I, Pos: [35, 49] cc => I, Pos: [35, 49] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [41, 57] cc => I, Pos: [41, 57] cc => I, Pos: [43, 45] cc => I, Pos: [43, 45] cc => I, Pos: [47, 55] cc => I, Pos: [47, 55] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [50, 70] cc => I, Pos: [50, 70] cc => I, Pos: [52, 58] cc => I, Pos: [52, 58] cc => I, Pos: [63, 67] cc => I, Pos: [63, 67] cc => I, Pos: [65, 71] cc => I, Pos: [65, 71] cc => I, Pos: [66, 82] cc => I, Pos: [66, 82] cc => I, Pos: [69, 72] cc => I, Pos: [69, 72] cc => I, Pos: [75, 79] cc => I, Pos: [75, 79] cc => I, Pos: [83, 86] cc => I, Pos: [83, 86] cc => I, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [94, 100] cc => I, Pos: [94, 100] cc => I, Pos: [97, 102] cc => I, Pos: [97, 102] cc => I, Pos: [100, 106, 117] ccc => cc, Pos: [103, 108] cc => I, Pos: [103, 108] cc => I, Pos: [107, 112] cc => I, Pos: [107, 112] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [134, 137] cc => I, Pos: [134, 137] cc => I, Pos: [135, 139] cc => I, Pos: [135, 139] cc => I, Pos: [137, 140] cc => I, Pos: [137, 140] cc => I, Pos: [141, 147] cc => I, Pos: [141, 147] cc => I, Pos: [144, 150, 156] ccc => cc, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [153, 168] cc => I, Pos: [153, 168] cc => I, Pos: [158, 165] cc => I, Pos: [158, 165] cc => I, Pos: [167, 171, 178] ccc => cc, Pos: [168, 172, 186] ccc => cc, Pos: [169, 175] cc => I, Pos: [169, 175] cc => I, Pos: [178, 210] cc => I, Pos: [178, 210] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [184, 187] cc => I, Pos: [184, 187] cc => I, Pos: [186, 191, 196] ccc => cc, Pos: [187, 194] cc => I, Pos: [187, 194] cc => I, Pos: [188, 193] cc => I, Pos: [188, 193] cc => I, Pos: [201, 204] cc => I, Pos: [201, 204] cc => I, Pos: [205, 212] cc => I, Pos: [205, 212] cc => I, Pos: [208, 214] cc => I, Pos: [208, 214] cc => I, Pos: [214, 218] cc => I, Pos: [214, 218] cc => I, Pos: [215, 223] cc => I, Pos: [215, 223] cc => I]

--------End Timer [Generate Plans]:  0.10936403274536133

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3] cc => I,
 Pos: [24, 32] cc => I,
 Pos: [13, 16] cc => I,
 Pos: [21, 27, 29] ccc => cc,
 Pos: [23, 28] cc => I,
 Pos: [31, 37] cc => I,
 Pos: [35, 49] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [41, 57] cc => I,
 Pos: [43, 45] cc => I,
 Pos: [47, 55] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [52, 58] cc => I,
 Pos: [63, 67] cc => I,
 Pos: [65, 71] cc => I,
 Pos: [66, 82] cc => I,
 Pos: [69, 72] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [83, 86] cc => I,
 Pos: [87, 93] cc => I,
 Pos: [94, 100] cc => I,
 Pos: [97, 102] cc => I,
 Pos: [103, 108] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [137, 140] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [141, 147] cc => I,
 Pos: [144, 150, 156] ccc => cc,
 Pos: [149, 155] cc => I,
 Pos: [153, 168] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [178, 210] cc => I,
 Pos: [169, 175] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [187, 194] cc => I,
 Pos: [186, 191, 196] ccc => cc,
 Pos: [201, 204] cc => I,
 Pos: [205, 212] cc => I,
 Pos: [208, 214] cc => I,
 Pos: [215, 223] cc => I]
Change: 44, Saving: 44

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 3] cc => I
Apply:  Pos: [24, 32] cc => I
Apply:  Pos: [13, 16] cc => I
Apply:  Pos: [21, 27, 29] ccc => cc
Apply:  Pos: [23, 28] cc => I
Apply:  Pos: [31, 37] cc => I
Apply:  Pos: [35, 49] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [41, 57] cc => I
Apply:  Pos: [43, 45] cc => I
Apply:  Pos: [47, 55] cc => I
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [50, 70] cc => I
Apply:  Pos: [52, 58] cc => I
Apply:  Pos: [63, 67] cc => I
Apply:  Pos: [65, 71] cc => I
Apply:  Pos: [66, 82] cc => I
Apply:  Pos: [69, 72] cc => I
Apply:  Pos: [75, 79] cc => I
Apply:  Pos: [83, 86] cc => I
Apply:  Pos: [87, 93] cc => I
Apply:  Pos: [94, 100] cc => I
Apply:  Pos: [97, 102] cc => I
Apply:  Pos: [103, 108] cc => I
Apply:  Pos: [107, 112] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [137, 140] cc => I
Apply:  Pos: [135, 139] cc => I
Apply:  Pos: [141, 147] cc => I
Apply:  Pos: [144, 150, 156] ccc => cc
Apply:  Pos: [149, 155] cc => I
Apply:  Pos: [153, 168] cc => I
Apply:  Pos: [158, 165] cc => I
Apply:  Pos: [178, 210] cc => I
Apply:  Pos: [169, 175] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [187, 194] cc => I
Apply:  Pos: [186, 191, 196] ccc => cc
Apply:  Pos: [201, 204] cc => I
Apply:  Pos: [205, 212] cc => I
Apply:  Pos: [208, 214] cc => I
Apply:  Pos: [215, 223] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [11, 17], [9, 16], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [1, 3], [11, 6], [12, 7], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [2, 5], [0, 2], [12, 7], [1, 11], [2, 19], [8, 7], [9, 10], [14, 10], [2, 5], [2, 19], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 5], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [9, 10], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [2, 5], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 18], [15, 7], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [3, 18], [2, 5], [17, 6], [9, 16], [5, 1], [0, 9], [11, 6], [2, 14], [15, 7], [19, 4], [12, 8], [12, 7], [15, 8], [9, 14], [10, 13], [12, 15], [11, 13], [8, 1], [5, 18], [15, 7], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  4.3124871253967285

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 40]
[93, 109]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[2, 7, 13]
[25, 30, 34]
[39, 55, 59]
[47, 51, 67]
[92, 97, 101]
[113, 118, 122]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[112, 113, 116]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 40]
[93, 109]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3124680519104004

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7, 13] ccc => cc, Pos: [25, 30, 34] ccc => cc, Pos: [36, 40] cc => I, Pos: [36, 40] cc => I, Pos: [39, 55, 59] ccc => cc, Pos: [47, 51, 67] ccc => cc, Pos: [92, 97, 101] ccc => cc, Pos: [93, 109] cc => I, Pos: [93, 109] cc => I, Pos: [112, 113, 116] ccc => cc, Pos: [113, 118, 122] ccc => cc]

--------End Timer [Generate Plans]:  0.03126645088195801

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 7, 13] ccc => cc,
 Pos: [25, 30, 34] ccc => cc,
 Pos: [36, 40] cc => I,
 Pos: [39, 55, 59] ccc => cc,
 Pos: [47, 51, 67] ccc => cc,
 Pos: [92, 97, 101] ccc => cc,
 Pos: [93, 109] cc => I,
 Pos: [112, 113, 116] ccc => cc]
Change: 8, Saving: 9

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 7, 13] ccc => cc
Apply:  Pos: [25, 30, 34] ccc => cc
Apply:  Pos: [36, 40] cc => I
Apply:  Pos: [39, 55, 59] ccc => cc
Apply:  Pos: [47, 51, 67] ccc => cc
Apply:  Pos: [92, 97, 101] ccc => cc
Apply:  Pos: [93, 109] cc => I
Apply:  Pos: [112, 113, 116] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 10], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [2, 5], [0, 2], [1, 11], [8, 7], [14, 10], [9, 11], [2, 5], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [9, 16], [5, 1], [0, 9], [11, 6], [2, 14], [19, 4], [12, 7], [12, 15], [15, 8], [9, 14], [10, 13], [11, 13], [8, 1], [5, 18], [15, 7], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.3437345027923584

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[31, 32, 37]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0936098098754883

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [31, 32, 37] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [31, 32, 37] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [31, 32, 37] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 10], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [0, 2], [2, 5], [1, 11], [8, 7], [14, 10], [9, 11], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [9, 16], [5, 1], [0, 9], [11, 6], [2, 14], [19, 4], [12, 15], [12, 7], [15, 8], [9, 14], [11, 13], [10, 13], [8, 1], [5, 18], [15, 7], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.0936098098754883

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0781004428863525

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 10], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [0, 2], [2, 5], [1, 11], [8, 7], [14, 10], [9, 11], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [9, 16], [5, 1], [0, 9], [11, 6], [2, 14], [19, 4], [12, 7], [12, 15], [15, 8], [9, 14], [10, 13], [11, 13], [8, 1], [5, 18], [15, 7], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.0781004428863525

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [129] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 29 - (small)
 - circuit cycle: 258

Reduced: 
 - size: 96 (42.67%)
 - depth: 16 (35.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07795953750610352

[10, 11], [15, 7], [19, 5], [10, 11], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [10, 1], [11, 17], [9, 16], [10, 1], [9, 14], [0, 2], [13, 17], [8, 7], [19, 5], [4, 3], [10, 1], [15, 8], [16, 12], [0, 9], [2, 5], [10, 1], [2, 19], [17, 6], [16, 14], [15, 8], [1, 3], [11, 6], [5, 18], [12, 7], [16, 14], [5, 3], [10, 11], [9, 16], [12, 15], [14, 19], [13, 17], [5, 3], [13, 17], [16, 10], [0, 9], [2, 14], [5, 18], [17, 6], [2, 14], [8, 11], [7, 13], [10, 1], [0, 9], [2, 5], [12, 15], [8, 11], [0, 2], [12, 7], [1, 11], [2, 19], [5, 18], [8, 7], [19, 4], [12, 8], [5, 18], [9, 10], [15, 7], [17, 6], [19, 4], [15, 7], [14, 10], [2, 5], [13, 17], [2, 19], [12, 15], [5, 1], [13, 17], [16, 14], [19, 5], [12, 8], [17, 6], [9, 14], [2, 5], [17, 6], [11, 13], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [11, 13], [19, 4], [15, 7], [2, 14], [3, 18], [10, 11], [9, 16], [19, 4], [7, 13], [3, 18], [8, 11], [16, 12], [9, 10], [2, 19], [1, 3], [8, 11], [0, 9], [12, 15], [13, 6], [1, 3], [9, 14], [15, 8], [11, 17], [2, 5], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [9, 14], [1, 11], [8, 7], [16, 12], [19, 4], [1, 3], [9, 14], [19, 4], [10, 11], [1, 3], [19, 4], [10, 8], [7, 13], [11, 17], [4, 3], [13, 17], [19, 5], [10, 8], [16, 14], [0, 9], [3, 18], [15, 7], [12, 8], [10, 11], [14, 19], [0, 9], [4, 3], [5, 1], [7, 13], [18, 17], [10, 8], [9, 14], [0, 2], [3, 18], [2, 5], [7, 13], [17, 6], [9, 16], [10, 11], [18, 17], [5, 1], [0, 9], [11, 6], [2, 14], [15, 7], [18, 17], [19, 4], [12, 8], [9, 16], [13, 17], [5, 18], [12, 7], [2, 19], [15, 8], [9, 14], [13, 17], [10, 11], [9, 14], [5, 18], [2, 19], [12, 15], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [10, 11], [3, 18], [12, 8], [2, 5], [13, 17], [10, 8], [1, 11], [14, 19], [10, 8], [17, 6], [19, 5], [1, 3], [8, 7], [2, 19], [9, 16], [14, 10], [17, 6], [5, 1], [8, 7], [5, 3], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [5, 3], [12, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[13, 16]
[16, 23]
[23, 28]
[24, 32]
[31, 37]
[38, 44]
[43, 45]
[35, 49]
[48, 51]
[47, 55]
[41, 57]
[52, 58]
[63, 67]
[50, 70]
[65, 71]
[69, 72]
[75, 79]
[66, 82]
[83, 86]
[87, 93]
[94, 100]
[97, 102]
[103, 108]
[107, 112]
[130, 136]
[134, 137]
[135, 139]
[137, 140]
[141, 147]
[149, 155]
[158, 165]
[153, 168]
[169, 175]
[179, 185]
[184, 187]
[180, 188]
[182, 189]
[188, 193]
[187, 194]
[201, 204]
[178, 210]
[205, 212]
[208, 214]
[214, 218]
[215, 223]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 20, 24]
[144, 150, 156]
[168, 172, 186]
[186, 191, 196]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 106, 117]
[167, 171, 178]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[21, 27, 29]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[13, 16]
[16, 23]
[23, 28]
[24, 32]
[31, 37]
[38, 44]
[43, 45]
[35, 49]
[48, 51]
[47, 55]
[41, 57]
[52, 58]
[63, 67]
[50, 70]
[65, 71]
[69, 72]
[75, 79]
[66, 82]
[83, 86]
[87, 93]
[94, 100]
[97, 102]
[103, 108]
[107, 112]
[130, 136]
[134, 137]
[135, 139]
[137, 140]
[141, 147]
[149, 155]
[158, 165]
[153, 168]
[169, 175]
[179, 185]
[184, 187]
[180, 188]
[182, 189]
[188, 193]
[187, 194]
[201, 204]
[178, 210]
[205, 212]
[208, 214]
[214, 218]
[215, 223]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.187276363372803

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3] cc => I, Pos: [0, 3] cc => I, Pos: [11, 20, 24] ccc => cc, Pos: [13, 16] cc => I, Pos: [13, 16] cc => I, Pos: [16, 23] cc => I, Pos: [16, 23] cc => I, Pos: [21, 27, 29] ccc => cc, Pos: [23, 28] cc => I, Pos: [23, 28] cc => I, Pos: [24, 32] cc => I, Pos: [24, 32] cc => I, Pos: [31, 37] cc => I, Pos: [31, 37] cc => I, Pos: [35, 49] cc => I, Pos: [35, 49] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [41, 57] cc => I, Pos: [41, 57] cc => I, Pos: [43, 45] cc => I, Pos: [43, 45] cc => I, Pos: [47, 55] cc => I, Pos: [47, 55] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [50, 70] cc => I, Pos: [50, 70] cc => I, Pos: [52, 58] cc => I, Pos: [52, 58] cc => I, Pos: [63, 67] cc => I, Pos: [63, 67] cc => I, Pos: [65, 71] cc => I, Pos: [65, 71] cc => I, Pos: [66, 82] cc => I, Pos: [66, 82] cc => I, Pos: [69, 72] cc => I, Pos: [69, 72] cc => I, Pos: [75, 79] cc => I, Pos: [75, 79] cc => I, Pos: [83, 86] cc => I, Pos: [83, 86] cc => I, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [94, 100] cc => I, Pos: [94, 100] cc => I, Pos: [97, 102] cc => I, Pos: [97, 102] cc => I, Pos: [100, 106, 117] ccc => cc, Pos: [103, 108] cc => I, Pos: [103, 108] cc => I, Pos: [107, 112] cc => I, Pos: [107, 112] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [134, 137] cc => I, Pos: [134, 137] cc => I, Pos: [135, 139] cc => I, Pos: [135, 139] cc => I, Pos: [137, 140] cc => I, Pos: [137, 140] cc => I, Pos: [141, 147] cc => I, Pos: [141, 147] cc => I, Pos: [144, 150, 156] ccc => cc, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [153, 168] cc => I, Pos: [153, 168] cc => I, Pos: [158, 165] cc => I, Pos: [158, 165] cc => I, Pos: [167, 171, 178] ccc => cc, Pos: [168, 172, 186] ccc => cc, Pos: [169, 175] cc => I, Pos: [169, 175] cc => I, Pos: [178, 210] cc => I, Pos: [178, 210] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [184, 187] cc => I, Pos: [184, 187] cc => I, Pos: [186, 191, 196] ccc => cc, Pos: [187, 194] cc => I, Pos: [187, 194] cc => I, Pos: [188, 193] cc => I, Pos: [188, 193] cc => I, Pos: [201, 204] cc => I, Pos: [201, 204] cc => I, Pos: [205, 212] cc => I, Pos: [205, 212] cc => I, Pos: [208, 214] cc => I, Pos: [208, 214] cc => I, Pos: [214, 218] cc => I, Pos: [214, 218] cc => I, Pos: [215, 223] cc => I, Pos: [215, 223] cc => I]

--------End Timer [Generate Plans]:  0.10936236381530762

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3] cc => I,
 Pos: [24, 32] cc => I,
 Pos: [16, 23] cc => I,
 Pos: [21, 27, 29] ccc => cc,
 Pos: [31, 37] cc => I,
 Pos: [35, 49] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [41, 57] cc => I,
 Pos: [43, 45] cc => I,
 Pos: [47, 55] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [52, 58] cc => I,
 Pos: [63, 67] cc => I,
 Pos: [65, 71] cc => I,
 Pos: [66, 82] cc => I,
 Pos: [69, 72] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [83, 86] cc => I,
 Pos: [87, 93] cc => I,
 Pos: [100, 106, 117] ccc => cc,
 Pos: [97, 102] cc => I,
 Pos: [103, 108] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [137, 140] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [141, 147] cc => I,
 Pos: [144, 150, 156] ccc => cc,
 Pos: [149, 155] cc => I,
 Pos: [168, 172, 186] ccc => cc,
 Pos: [158, 165] cc => I,
 Pos: [167, 171, 178] ccc => cc,
 Pos: [169, 175] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [184, 187] cc => I,
 Pos: [201, 204] cc => I,
 Pos: [205, 212] cc => I,
 Pos: [214, 218] cc => I,
 Pos: [215, 223] cc => I]
Change: 42, Saving: 41

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 3] cc => I
Apply:  Pos: [24, 32] cc => I
Apply:  Pos: [16, 23] cc => I
Apply:  Pos: [21, 27, 29] ccc => cc
Apply:  Pos: [31, 37] cc => I
Apply:  Pos: [35, 49] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [41, 57] cc => I
Apply:  Pos: [43, 45] cc => I
Apply:  Pos: [47, 55] cc => I
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [50, 70] cc => I
Apply:  Pos: [52, 58] cc => I
Apply:  Pos: [63, 67] cc => I
Apply:  Pos: [65, 71] cc => I
Apply:  Pos: [66, 82] cc => I
Apply:  Pos: [69, 72] cc => I
Apply:  Pos: [75, 79] cc => I
Apply:  Pos: [83, 86] cc => I
Apply:  Pos: [87, 93] cc => I
Apply:  Pos: [100, 106, 117] ccc => cc
Apply:  Pos: [97, 102] cc => I
Apply:  Pos: [103, 108] cc => I
Apply:  Pos: [107, 112] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [137, 140] cc => I
Apply:  Pos: [135, 139] cc => I
Apply:  Pos: [141, 147] cc => I
Apply:  Pos: [144, 150, 156] ccc => cc
Apply:  Pos: [149, 155] cc => I
Apply:  Pos: [168, 172, 186] ccc => cc
Apply:  Pos: [158, 165] cc => I
Apply:  Pos: [167, 171, 178] ccc => cc
Apply:  Pos: [169, 175] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [184, 187] cc => I
Apply:  Pos: [201, 204] cc => I
Apply:  Pos: [205, 212] cc => I
Apply:  Pos: [214, 218] cc => I
Apply:  Pos: [215, 223] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [10, 1], [11, 17], [9, 16], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [10, 1], [17, 6], [1, 3], [11, 6], [12, 7], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [2, 5], [0, 2], [12, 7], [1, 11], [2, 19], [8, 7], [9, 10], [14, 10], [2, 5], [2, 19], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 5], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [19, 4], [15, 7], [2, 14], [10, 11], [9, 16], [2, 19], [7, 13], [16, 12], [9, 10], [19, 4], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [2, 5], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 18], [15, 7], [12, 8], [10, 11], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [3, 18], [2, 5], [17, 6], [0, 9], [10, 6], [5, 1], [9, 16], [11, 6], [2, 14], [15, 7], [19, 4], [12, 8], [12, 7], [15, 8], [12, 15], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [10, 11], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [8, 7], [2, 19], [9, 16], [14, 10], [5, 1], [2, 14], [11, 6], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  4.29663872718811

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 23]
[38, 42]
[96, 114]
[111, 136]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[27, 32, 36]
[41, 58, 63]
[49, 53, 71]
[95, 101, 105]
[119, 121, 127]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[55, 60, 64]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 23]
[38, 42]
[96, 114]
[111, 136]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4375672340393066

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 23] cc => I, Pos: [11, 23] cc => I, Pos: [27, 32, 36] ccc => cc, Pos: [38, 42] cc => I, Pos: [38, 42] cc => I, Pos: [41, 58, 63] ccc => cc, Pos: [49, 53, 71] ccc => cc, Pos: [55, 60, 64] ccc => cc, Pos: [95, 101, 105] ccc => cc, Pos: [96, 114] cc => I, Pos: [96, 114] cc => I, Pos: [111, 136] cc => I, Pos: [111, 136] cc => I, Pos: [119, 121, 127] ccc => cc]

--------End Timer [Generate Plans]:  0.031265974044799805

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 23] cc => I,
 Pos: [27, 32, 36] ccc => cc,
 Pos: [38, 42] cc => I,
 Pos: [41, 58, 63] ccc => cc,
 Pos: [49, 53, 71] ccc => cc,
 Pos: [55, 60, 64] ccc => cc,
 Pos: [95, 101, 105] ccc => cc,
 Pos: [96, 114] cc => I,
 Pos: [111, 136] cc => I,
 Pos: [119, 121, 127] ccc => cc]
Change: 10, Saving: 11

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 23] cc => I
Apply:  Pos: [27, 32, 36] ccc => cc
Apply:  Pos: [38, 42] cc => I
Apply:  Pos: [41, 58, 63] ccc => cc
Apply:  Pos: [49, 53, 71] ccc => cc
Apply:  Pos: [55, 60, 64] ccc => cc
Apply:  Pos: [95, 101, 105] ccc => cc
Apply:  Pos: [96, 114] cc => I
Apply:  Pos: [111, 136] cc => I
Apply:  Pos: [119, 121, 127] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [11, 17], [9, 14], [9, 16], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [2, 5], [0, 2], [1, 11], [8, 7], [14, 10], [9, 11], [2, 5], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [2, 19], [15, 7], [2, 14], [10, 11], [9, 16], [19, 4], [7, 13], [16, 12], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [10, 11], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [0, 9], [10, 6], [5, 1], [11, 6], [2, 14], [19, 4], [12, 7], [15, 8], [12, 15], [12, 1], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [10, 11], [3, 18], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [8, 7], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.4688332080841064

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[2, 7, 12]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[32, 33, 38]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[46, 50, 52]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.171839475631714

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7, 12] ccc => cc, Pos: [32, 33, 38] ccc => cc, Pos: [46, 50, 52] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 7, 12] ccc => cc,
 Pos: [32, 33, 38] ccc => cc,
 Pos: [46, 50, 52] ccc => cc]
Change: 3, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 7, 12] ccc => cc
Apply:  Pos: [32, 33, 38] ccc => cc
Apply:  Pos: [46, 50, 52] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 10], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [0, 2], [2, 5], [1, 11], [8, 7], [14, 10], [9, 11], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [2, 14], [15, 8], [5, 3], [18, 17], [14, 19], [15, 7], [10, 11], [9, 16], [19, 4], [7, 13], [16, 12], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [10, 11], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [0, 9], [10, 6], [5, 1], [11, 6], [2, 14], [19, 4], [12, 7], [15, 8], [12, 1], [12, 15], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [10, 11], [3, 18], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [8, 7], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.171839475631714

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.078123092651367

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 10], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [0, 2], [2, 5], [1, 11], [8, 7], [14, 10], [9, 11], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [2, 14], [15, 8], [5, 3], [18, 17], [14, 19], [15, 7], [10, 11], [9, 16], [19, 4], [7, 13], [16, 12], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [10, 11], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [0, 9], [10, 6], [5, 1], [11, 6], [2, 14], [19, 4], [12, 7], [15, 8], [12, 15], [12, 1], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [10, 11], [3, 18], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [8, 7], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.078123092651367

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [129] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 30 - (small)
 - circuit cycle: 258

Reduced: 
 - size: 96 (42.67%)
 - depth: 15 (33.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374380111694336

[10, 11], [15, 7], [19, 5], [10, 11], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [10, 1], [11, 17], [9, 16], [10, 1], [9, 14], [0, 2], [13, 17], [8, 7], [19, 5], [4, 3], [10, 1], [15, 8], [16, 12], [0, 9], [2, 5], [10, 1], [2, 19], [17, 6], [16, 14], [15, 8], [1, 3], [11, 6], [5, 18], [12, 7], [16, 14], [5, 3], [10, 11], [9, 16], [12, 15], [14, 19], [13, 17], [5, 3], [13, 17], [16, 10], [0, 9], [2, 14], [5, 18], [17, 6], [2, 14], [8, 11], [7, 13], [10, 1], [0, 9], [2, 5], [12, 15], [8, 11], [0, 2], [12, 7], [1, 11], [2, 19], [5, 18], [8, 7], [19, 4], [12, 8], [5, 18], [9, 10], [15, 7], [17, 6], [19, 4], [15, 7], [14, 10], [2, 5], [13, 17], [2, 19], [12, 15], [5, 1], [13, 17], [16, 14], [19, 5], [12, 8], [17, 6], [9, 14], [2, 5], [17, 6], [11, 13], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [11, 13], [19, 4], [15, 7], [2, 14], [3, 18], [10, 11], [9, 16], [19, 4], [7, 13], [3, 18], [8, 11], [16, 12], [9, 10], [2, 19], [1, 3], [8, 11], [0, 9], [12, 15], [13, 6], [1, 3], [9, 14], [15, 8], [11, 17], [2, 5], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [9, 14], [1, 11], [8, 7], [16, 12], [19, 4], [1, 3], [9, 14], [19, 4], [10, 11], [1, 3], [19, 4], [10, 8], [7, 13], [11, 17], [4, 3], [13, 17], [19, 5], [10, 8], [16, 14], [0, 9], [3, 18], [15, 7], [12, 8], [10, 11], [14, 19], [0, 9], [4, 3], [5, 1], [7, 13], [18, 17], [10, 8], [9, 14], [0, 2], [3, 18], [2, 5], [7, 13], [17, 6], [9, 16], [10, 11], [18, 17], [5, 1], [0, 9], [11, 6], [2, 14], [15, 7], [18, 17], [19, 4], [12, 8], [9, 16], [13, 17], [5, 18], [12, 7], [2, 19], [15, 8], [9, 14], [13, 17], [10, 11], [9, 14], [5, 18], [2, 19], [12, 15], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [10, 11], [3, 18], [12, 8], [2, 5], [13, 17], [10, 8], [1, 11], [14, 19], [10, 8], [17, 6], [19, 5], [1, 3], [8, 7], [2, 19], [9, 16], [14, 10], [17, 6], [5, 1], [8, 7], [5, 3], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [5, 3], [12, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[13, 16]
[16, 23]
[23, 28]
[24, 32]
[31, 37]
[38, 44]
[43, 45]
[35, 49]
[48, 51]
[47, 55]
[41, 57]
[52, 58]
[63, 67]
[50, 70]
[65, 71]
[69, 72]
[75, 79]
[66, 82]
[83, 86]
[87, 93]
[94, 100]
[97, 102]
[103, 108]
[107, 112]
[130, 136]
[134, 137]
[135, 139]
[137, 140]
[141, 147]
[149, 155]
[158, 165]
[153, 168]
[169, 175]
[179, 185]
[184, 187]
[180, 188]
[182, 189]
[188, 193]
[187, 194]
[201, 204]
[178, 210]
[205, 212]
[208, 214]
[214, 218]
[215, 223]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 20, 24]
[144, 150, 156]
[168, 172, 186]
[186, 191, 196]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 106, 117]
[167, 171, 178]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[21, 27, 29]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[13, 16]
[16, 23]
[23, 28]
[24, 32]
[31, 37]
[38, 44]
[43, 45]
[35, 49]
[48, 51]
[47, 55]
[41, 57]
[52, 58]
[63, 67]
[50, 70]
[65, 71]
[69, 72]
[75, 79]
[66, 82]
[83, 86]
[87, 93]
[94, 100]
[97, 102]
[103, 108]
[107, 112]
[130, 136]
[134, 137]
[135, 139]
[137, 140]
[141, 147]
[149, 155]
[158, 165]
[153, 168]
[169, 175]
[179, 185]
[184, 187]
[180, 188]
[182, 189]
[188, 193]
[187, 194]
[201, 204]
[178, 210]
[205, 212]
[208, 214]
[214, 218]
[215, 223]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.264769792556763

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3] cc => I, Pos: [0, 3] cc => I, Pos: [11, 20, 24] ccc => cc, Pos: [13, 16] cc => I, Pos: [13, 16] cc => I, Pos: [16, 23] cc => I, Pos: [16, 23] cc => I, Pos: [21, 27, 29] ccc => cc, Pos: [23, 28] cc => I, Pos: [23, 28] cc => I, Pos: [24, 32] cc => I, Pos: [24, 32] cc => I, Pos: [31, 37] cc => I, Pos: [31, 37] cc => I, Pos: [35, 49] cc => I, Pos: [35, 49] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [41, 57] cc => I, Pos: [41, 57] cc => I, Pos: [43, 45] cc => I, Pos: [43, 45] cc => I, Pos: [47, 55] cc => I, Pos: [47, 55] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [50, 70] cc => I, Pos: [50, 70] cc => I, Pos: [52, 58] cc => I, Pos: [52, 58] cc => I, Pos: [63, 67] cc => I, Pos: [63, 67] cc => I, Pos: [65, 71] cc => I, Pos: [65, 71] cc => I, Pos: [66, 82] cc => I, Pos: [66, 82] cc => I, Pos: [69, 72] cc => I, Pos: [69, 72] cc => I, Pos: [75, 79] cc => I, Pos: [75, 79] cc => I, Pos: [83, 86] cc => I, Pos: [83, 86] cc => I, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [94, 100] cc => I, Pos: [94, 100] cc => I, Pos: [97, 102] cc => I, Pos: [97, 102] cc => I, Pos: [100, 106, 117] ccc => cc, Pos: [103, 108] cc => I, Pos: [103, 108] cc => I, Pos: [107, 112] cc => I, Pos: [107, 112] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [134, 137] cc => I, Pos: [134, 137] cc => I, Pos: [135, 139] cc => I, Pos: [135, 139] cc => I, Pos: [137, 140] cc => I, Pos: [137, 140] cc => I, Pos: [141, 147] cc => I, Pos: [141, 147] cc => I, Pos: [144, 150, 156] ccc => cc, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [153, 168] cc => I, Pos: [153, 168] cc => I, Pos: [158, 165] cc => I, Pos: [158, 165] cc => I, Pos: [167, 171, 178] ccc => cc, Pos: [168, 172, 186] ccc => cc, Pos: [169, 175] cc => I, Pos: [169, 175] cc => I, Pos: [178, 210] cc => I, Pos: [178, 210] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [184, 187] cc => I, Pos: [184, 187] cc => I, Pos: [186, 191, 196] ccc => cc, Pos: [187, 194] cc => I, Pos: [187, 194] cc => I, Pos: [188, 193] cc => I, Pos: [188, 193] cc => I, Pos: [201, 204] cc => I, Pos: [201, 204] cc => I, Pos: [205, 212] cc => I, Pos: [205, 212] cc => I, Pos: [208, 214] cc => I, Pos: [208, 214] cc => I, Pos: [214, 218] cc => I, Pos: [214, 218] cc => I, Pos: [215, 223] cc => I, Pos: [215, 223] cc => I]

--------End Timer [Generate Plans]:  0.10951948165893555

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3] cc => I,
 Pos: [24, 32] cc => I,
 Pos: [16, 23] cc => I,
 Pos: [21, 27, 29] ccc => cc,
 Pos: [31, 37] cc => I,
 Pos: [35, 49] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [41, 57] cc => I,
 Pos: [43, 45] cc => I,
 Pos: [47, 55] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [52, 58] cc => I,
 Pos: [63, 67] cc => I,
 Pos: [65, 71] cc => I,
 Pos: [66, 82] cc => I,
 Pos: [69, 72] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [83, 86] cc => I,
 Pos: [87, 93] cc => I,
 Pos: [100, 106, 117] ccc => cc,
 Pos: [97, 102] cc => I,
 Pos: [103, 108] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [137, 140] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [141, 147] cc => I,
 Pos: [144, 150, 156] ccc => cc,
 Pos: [149, 155] cc => I,
 Pos: [168, 172, 186] ccc => cc,
 Pos: [158, 165] cc => I,
 Pos: [178, 210] cc => I,
 Pos: [169, 175] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [188, 193] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [184, 187] cc => I,
 Pos: [201, 204] cc => I,
 Pos: [205, 212] cc => I,
 Pos: [208, 214] cc => I,
 Pos: [215, 223] cc => I]
Change: 42, Saving: 41

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 3] cc => I
Apply:  Pos: [24, 32] cc => I
Apply:  Pos: [16, 23] cc => I
Apply:  Pos: [21, 27, 29] ccc => cc
Apply:  Pos: [31, 37] cc => I
Apply:  Pos: [35, 49] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [41, 57] cc => I
Apply:  Pos: [43, 45] cc => I
Apply:  Pos: [47, 55] cc => I
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [50, 70] cc => I
Apply:  Pos: [52, 58] cc => I
Apply:  Pos: [63, 67] cc => I
Apply:  Pos: [65, 71] cc => I
Apply:  Pos: [66, 82] cc => I
Apply:  Pos: [69, 72] cc => I
Apply:  Pos: [75, 79] cc => I
Apply:  Pos: [83, 86] cc => I
Apply:  Pos: [87, 93] cc => I
Apply:  Pos: [100, 106, 117] ccc => cc
Apply:  Pos: [97, 102] cc => I
Apply:  Pos: [103, 108] cc => I
Apply:  Pos: [107, 112] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [137, 140] cc => I
Apply:  Pos: [135, 139] cc => I
Apply:  Pos: [141, 147] cc => I
Apply:  Pos: [144, 150, 156] ccc => cc
Apply:  Pos: [149, 155] cc => I
Apply:  Pos: [168, 172, 186] ccc => cc
Apply:  Pos: [158, 165] cc => I
Apply:  Pos: [178, 210] cc => I
Apply:  Pos: [169, 175] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [188, 193] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [184, 187] cc => I
Apply:  Pos: [201, 204] cc => I
Apply:  Pos: [205, 212] cc => I
Apply:  Pos: [208, 214] cc => I
Apply:  Pos: [215, 223] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [10, 1], [11, 17], [9, 16], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [10, 1], [17, 6], [1, 3], [11, 6], [12, 7], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [2, 5], [0, 2], [12, 7], [1, 11], [2, 19], [8, 7], [9, 10], [14, 10], [2, 5], [2, 19], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 5], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [19, 4], [15, 7], [2, 14], [10, 11], [9, 16], [2, 19], [7, 13], [16, 12], [9, 10], [19, 4], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [2, 5], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 18], [15, 7], [12, 8], [10, 11], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [3, 18], [2, 5], [17, 6], [9, 16], [10, 6], [5, 1], [0, 9], [11, 6], [2, 14], [15, 7], [19, 4], [12, 8], [5, 18], [12, 7], [15, 8], [12, 15], [11, 13], [8, 1], [9, 14], [15, 7], [10, 11], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  4.374289274215698

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 23]
[38, 42]
[96, 114]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[27, 32, 36]
[41, 58, 63]
[49, 53, 71]
[95, 101, 105]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[55, 60, 64]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 23]
[38, 42]
[96, 114]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.468898057937622

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 23] cc => I, Pos: [11, 23] cc => I, Pos: [27, 32, 36] ccc => cc, Pos: [38, 42] cc => I, Pos: [38, 42] cc => I, Pos: [41, 58, 63] ccc => cc, Pos: [49, 53, 71] ccc => cc, Pos: [55, 60, 64] ccc => cc, Pos: [95, 101, 105] ccc => cc, Pos: [96, 114] cc => I, Pos: [96, 114] cc => I]

--------End Timer [Generate Plans]:  0.03123188018798828

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 23] cc => I,
 Pos: [27, 32, 36] ccc => cc,
 Pos: [38, 42] cc => I,
 Pos: [41, 58, 63] ccc => cc,
 Pos: [49, 53, 71] ccc => cc,
 Pos: [55, 60, 64] ccc => cc,
 Pos: [95, 101, 105] ccc => cc,
 Pos: [96, 114] cc => I]
Change: 8, Saving: 9

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 23] cc => I
Apply:  Pos: [27, 32, 36] ccc => cc
Apply:  Pos: [38, 42] cc => I
Apply:  Pos: [41, 58, 63] ccc => cc
Apply:  Pos: [49, 53, 71] ccc => cc
Apply:  Pos: [55, 60, 64] ccc => cc
Apply:  Pos: [95, 101, 105] ccc => cc
Apply:  Pos: [96, 114] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [11, 17], [9, 14], [9, 16], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [2, 5], [0, 2], [1, 11], [8, 7], [14, 10], [9, 11], [2, 5], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [2, 19], [15, 7], [2, 14], [10, 11], [9, 16], [19, 4], [7, 13], [16, 12], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [10, 11], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [9, 16], [10, 6], [5, 1], [0, 9], [11, 6], [2, 14], [19, 4], [12, 8], [5, 18], [12, 7], [15, 8], [12, 15], [11, 13], [8, 1], [9, 14], [15, 7], [10, 11], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.5001299381256104

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[2, 7, 12]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[32, 33, 38]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[46, 50, 52]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.2657246589660645

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7, 12] ccc => cc, Pos: [32, 33, 38] ccc => cc, Pos: [46, 50, 52] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 7, 12] ccc => cc,
 Pos: [32, 33, 38] ccc => cc,
 Pos: [46, 50, 52] ccc => cc]
Change: 3, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 7, 12] ccc => cc
Apply:  Pos: [32, 33, 38] ccc => cc
Apply:  Pos: [46, 50, 52] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 10], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [0, 2], [2, 5], [1, 11], [8, 7], [14, 10], [9, 11], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [2, 14], [15, 8], [5, 3], [18, 17], [14, 19], [15, 7], [10, 11], [9, 16], [19, 4], [7, 13], [16, 12], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [10, 11], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [9, 16], [10, 6], [5, 1], [0, 9], [11, 6], [2, 14], [19, 4], [12, 8], [5, 18], [12, 7], [15, 8], [12, 15], [11, 13], [8, 1], [9, 14], [15, 7], [10, 11], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.2657246589660645

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.140734910964966

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 10], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [0, 2], [2, 5], [1, 11], [8, 7], [14, 10], [9, 11], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [2, 14], [15, 8], [5, 3], [18, 17], [14, 19], [15, 7], [10, 11], [9, 16], [19, 4], [7, 13], [16, 12], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [10, 11], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [9, 16], [10, 6], [5, 1], [0, 9], [11, 6], [2, 14], [19, 4], [12, 8], [5, 18], [12, 7], [15, 8], [12, 15], [11, 13], [8, 1], [9, 14], [15, 7], [10, 11], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.140734910964966

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [131] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 30 - (small)
 - circuit cycle: 262

Reduced: 
 - size: 94 (41.78%)
 - depth: 15 (33.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09376096725463867

[10, 11], [15, 7], [19, 5], [10, 11], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [10, 1], [11, 17], [9, 16], [10, 1], [9, 14], [0, 2], [13, 17], [8, 7], [19, 5], [4, 3], [10, 1], [15, 8], [16, 12], [0, 9], [2, 5], [10, 1], [2, 19], [17, 6], [16, 14], [15, 8], [1, 3], [11, 6], [5, 18], [12, 7], [16, 14], [5, 3], [10, 11], [9, 16], [12, 15], [14, 19], [13, 17], [5, 3], [13, 17], [16, 10], [0, 9], [2, 14], [5, 18], [17, 6], [2, 14], [8, 11], [7, 13], [10, 1], [0, 9], [2, 5], [12, 15], [8, 11], [0, 2], [12, 7], [1, 11], [2, 19], [5, 18], [8, 7], [19, 4], [12, 8], [5, 18], [9, 10], [15, 7], [17, 6], [19, 4], [15, 7], [14, 10], [2, 5], [13, 17], [2, 19], [12, 15], [5, 1], [13, 17], [16, 14], [19, 5], [12, 8], [17, 6], [9, 14], [2, 5], [17, 6], [11, 13], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [11, 13], [19, 4], [15, 7], [2, 14], [3, 18], [10, 11], [9, 16], [19, 4], [7, 13], [3, 18], [8, 11], [16, 12], [9, 10], [2, 19], [1, 3], [8, 11], [0, 9], [12, 15], [13, 6], [1, 3], [9, 14], [15, 8], [11, 17], [2, 5], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [9, 14], [1, 11], [8, 7], [16, 12], [19, 4], [1, 3], [9, 14], [19, 4], [10, 11], [1, 3], [19, 4], [10, 8], [7, 13], [11, 17], [4, 3], [13, 17], [19, 5], [10, 8], [16, 14], [0, 9], [3, 18], [15, 7], [12, 8], [10, 11], [14, 19], [0, 9], [4, 3], [5, 1], [7, 13], [18, 17], [10, 8], [9, 14], [0, 2], [3, 18], [2, 5], [7, 13], [17, 6], [9, 16], [10, 11], [18, 17], [5, 1], [0, 9], [11, 6], [2, 14], [15, 7], [18, 17], [19, 4], [12, 8], [9, 16], [13, 17], [5, 18], [12, 7], [2, 19], [15, 8], [9, 14], [13, 17], [10, 11], [9, 14], [5, 18], [2, 19], [12, 15], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [10, 11], [3, 18], [12, 8], [2, 5], [13, 17], [10, 8], [1, 11], [14, 19], [10, 8], [17, 6], [19, 5], [1, 3], [8, 7], [2, 19], [9, 16], [14, 10], [17, 6], [5, 1], [8, 7], [5, 3], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [5, 3], [12, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[13, 16]
[16, 23]
[23, 28]
[24, 32]
[31, 37]
[38, 44]
[43, 45]
[35, 49]
[48, 51]
[47, 55]
[41, 57]
[52, 58]
[63, 67]
[50, 70]
[65, 71]
[69, 72]
[75, 79]
[66, 82]
[83, 86]
[87, 93]
[94, 100]
[97, 102]
[103, 108]
[107, 112]
[130, 136]
[134, 137]
[135, 139]
[137, 140]
[141, 147]
[149, 155]
[158, 165]
[153, 168]
[169, 175]
[179, 185]
[184, 187]
[180, 188]
[182, 189]
[188, 193]
[187, 194]
[201, 204]
[178, 210]
[205, 212]
[208, 214]
[214, 218]
[215, 223]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 20, 24]
[144, 150, 156]
[168, 172, 186]
[186, 191, 196]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 106, 117]
[167, 171, 178]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[21, 27, 29]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[13, 16]
[16, 23]
[23, 28]
[24, 32]
[31, 37]
[38, 44]
[43, 45]
[35, 49]
[48, 51]
[47, 55]
[41, 57]
[52, 58]
[63, 67]
[50, 70]
[65, 71]
[69, 72]
[75, 79]
[66, 82]
[83, 86]
[87, 93]
[94, 100]
[97, 102]
[103, 108]
[107, 112]
[130, 136]
[134, 137]
[135, 139]
[137, 140]
[141, 147]
[149, 155]
[158, 165]
[153, 168]
[169, 175]
[179, 185]
[184, 187]
[180, 188]
[182, 189]
[188, 193]
[187, 194]
[201, 204]
[178, 210]
[205, 212]
[208, 214]
[214, 218]
[215, 223]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.249961614608765

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3] cc => I, Pos: [0, 3] cc => I, Pos: [11, 20, 24] ccc => cc, Pos: [13, 16] cc => I, Pos: [13, 16] cc => I, Pos: [16, 23] cc => I, Pos: [16, 23] cc => I, Pos: [21, 27, 29] ccc => cc, Pos: [23, 28] cc => I, Pos: [23, 28] cc => I, Pos: [24, 32] cc => I, Pos: [24, 32] cc => I, Pos: [31, 37] cc => I, Pos: [31, 37] cc => I, Pos: [35, 49] cc => I, Pos: [35, 49] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [41, 57] cc => I, Pos: [41, 57] cc => I, Pos: [43, 45] cc => I, Pos: [43, 45] cc => I, Pos: [47, 55] cc => I, Pos: [47, 55] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [50, 70] cc => I, Pos: [50, 70] cc => I, Pos: [52, 58] cc => I, Pos: [52, 58] cc => I, Pos: [63, 67] cc => I, Pos: [63, 67] cc => I, Pos: [65, 71] cc => I, Pos: [65, 71] cc => I, Pos: [66, 82] cc => I, Pos: [66, 82] cc => I, Pos: [69, 72] cc => I, Pos: [69, 72] cc => I, Pos: [75, 79] cc => I, Pos: [75, 79] cc => I, Pos: [83, 86] cc => I, Pos: [83, 86] cc => I, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [94, 100] cc => I, Pos: [94, 100] cc => I, Pos: [97, 102] cc => I, Pos: [97, 102] cc => I, Pos: [100, 106, 117] ccc => cc, Pos: [103, 108] cc => I, Pos: [103, 108] cc => I, Pos: [107, 112] cc => I, Pos: [107, 112] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [134, 137] cc => I, Pos: [134, 137] cc => I, Pos: [135, 139] cc => I, Pos: [135, 139] cc => I, Pos: [137, 140] cc => I, Pos: [137, 140] cc => I, Pos: [141, 147] cc => I, Pos: [141, 147] cc => I, Pos: [144, 150, 156] ccc => cc, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [153, 168] cc => I, Pos: [153, 168] cc => I, Pos: [158, 165] cc => I, Pos: [158, 165] cc => I, Pos: [167, 171, 178] ccc => cc, Pos: [168, 172, 186] ccc => cc, Pos: [169, 175] cc => I, Pos: [169, 175] cc => I, Pos: [178, 210] cc => I, Pos: [178, 210] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [184, 187] cc => I, Pos: [184, 187] cc => I, Pos: [186, 191, 196] ccc => cc, Pos: [187, 194] cc => I, Pos: [187, 194] cc => I, Pos: [188, 193] cc => I, Pos: [188, 193] cc => I, Pos: [201, 204] cc => I, Pos: [201, 204] cc => I, Pos: [205, 212] cc => I, Pos: [205, 212] cc => I, Pos: [208, 214] cc => I, Pos: [208, 214] cc => I, Pos: [214, 218] cc => I, Pos: [214, 218] cc => I, Pos: [215, 223] cc => I, Pos: [215, 223] cc => I]

--------End Timer [Generate Plans]:  0.10942745208740234

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3] cc => I,
 Pos: [24, 32] cc => I,
 Pos: [16, 23] cc => I,
 Pos: [21, 27, 29] ccc => cc,
 Pos: [31, 37] cc => I,
 Pos: [35, 49] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [41, 57] cc => I,
 Pos: [43, 45] cc => I,
 Pos: [47, 55] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [52, 58] cc => I,
 Pos: [63, 67] cc => I,
 Pos: [65, 71] cc => I,
 Pos: [66, 82] cc => I,
 Pos: [69, 72] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [83, 86] cc => I,
 Pos: [87, 93] cc => I,
 Pos: [100, 106, 117] ccc => cc,
 Pos: [97, 102] cc => I,
 Pos: [103, 108] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [134, 137] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [141, 147] cc => I,
 Pos: [144, 150, 156] ccc => cc,
 Pos: [149, 155] cc => I,
 Pos: [153, 168] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [167, 171, 178] ccc => cc,
 Pos: [169, 175] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [187, 194] cc => I,
 Pos: [186, 191, 196] ccc => cc,
 Pos: [201, 204] cc => I,
 Pos: [205, 212] cc => I,
 Pos: [214, 218] cc => I,
 Pos: [215, 223] cc => I]
Change: 43, Saving: 43

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 3] cc => I
Apply:  Pos: [24, 32] cc => I
Apply:  Pos: [16, 23] cc => I
Apply:  Pos: [21, 27, 29] ccc => cc
Apply:  Pos: [31, 37] cc => I
Apply:  Pos: [35, 49] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [41, 57] cc => I
Apply:  Pos: [43, 45] cc => I
Apply:  Pos: [47, 55] cc => I
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [50, 70] cc => I
Apply:  Pos: [52, 58] cc => I
Apply:  Pos: [63, 67] cc => I
Apply:  Pos: [65, 71] cc => I
Apply:  Pos: [66, 82] cc => I
Apply:  Pos: [69, 72] cc => I
Apply:  Pos: [75, 79] cc => I
Apply:  Pos: [83, 86] cc => I
Apply:  Pos: [87, 93] cc => I
Apply:  Pos: [100, 106, 117] ccc => cc
Apply:  Pos: [97, 102] cc => I
Apply:  Pos: [103, 108] cc => I
Apply:  Pos: [107, 112] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [134, 137] cc => I
Apply:  Pos: [135, 139] cc => I
Apply:  Pos: [141, 147] cc => I
Apply:  Pos: [144, 150, 156] ccc => cc
Apply:  Pos: [149, 155] cc => I
Apply:  Pos: [153, 168] cc => I
Apply:  Pos: [158, 165] cc => I
Apply:  Pos: [167, 171, 178] ccc => cc
Apply:  Pos: [169, 175] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [187, 194] cc => I
Apply:  Pos: [186, 191, 196] ccc => cc
Apply:  Pos: [201, 204] cc => I
Apply:  Pos: [205, 212] cc => I
Apply:  Pos: [214, 218] cc => I
Apply:  Pos: [215, 223] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [10, 1], [11, 17], [9, 16], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [10, 1], [17, 6], [1, 3], [11, 6], [12, 7], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [2, 5], [0, 2], [12, 7], [1, 11], [2, 19], [8, 7], [9, 10], [14, 10], [2, 5], [2, 19], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 5], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [19, 4], [15, 7], [2, 14], [10, 11], [9, 16], [2, 19], [7, 13], [16, 12], [9, 10], [19, 4], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [2, 5], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [10, 11], [19, 4], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 18], [15, 7], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [3, 18], [2, 5], [17, 6], [0, 9], [5, 1], [9, 16], [11, 6], [2, 14], [15, 7], [19, 4], [12, 8], [12, 7], [15, 8], [9, 14], [10, 13], [12, 15], [11, 13], [8, 1], [5, 18], [15, 7], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [8, 7], [2, 19], [9, 16], [14, 10], [5, 1], [2, 14], [11, 6], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  4.359389066696167

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 23]
[38, 42]
[96, 112]
[109, 134]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[27, 32, 36]
[41, 58, 63]
[49, 53, 71]
[95, 100, 104]
[116, 121, 125]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[55, 60, 64]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[115, 116, 119]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 23]
[38, 42]
[96, 112]
[109, 134]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.437472343444824

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 23] cc => I, Pos: [11, 23] cc => I, Pos: [27, 32, 36] ccc => cc, Pos: [38, 42] cc => I, Pos: [38, 42] cc => I, Pos: [41, 58, 63] ccc => cc, Pos: [49, 53, 71] ccc => cc, Pos: [55, 60, 64] ccc => cc, Pos: [95, 100, 104] ccc => cc, Pos: [96, 112] cc => I, Pos: [96, 112] cc => I, Pos: [109, 134] cc => I, Pos: [109, 134] cc => I, Pos: [115, 116, 119] ccc => cc, Pos: [116, 121, 125] ccc => cc]

--------End Timer [Generate Plans]:  0.0312347412109375

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 23] cc => I,
 Pos: [27, 32, 36] ccc => cc,
 Pos: [38, 42] cc => I,
 Pos: [41, 58, 63] ccc => cc,
 Pos: [49, 53, 71] ccc => cc,
 Pos: [55, 60, 64] ccc => cc,
 Pos: [95, 100, 104] ccc => cc,
 Pos: [96, 112] cc => I,
 Pos: [109, 134] cc => I,
 Pos: [116, 121, 125] ccc => cc]
Change: 10, Saving: 11

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 23] cc => I
Apply:  Pos: [27, 32, 36] ccc => cc
Apply:  Pos: [38, 42] cc => I
Apply:  Pos: [41, 58, 63] ccc => cc
Apply:  Pos: [49, 53, 71] ccc => cc
Apply:  Pos: [55, 60, 64] ccc => cc
Apply:  Pos: [95, 100, 104] ccc => cc
Apply:  Pos: [96, 112] cc => I
Apply:  Pos: [109, 134] cc => I
Apply:  Pos: [116, 121, 125] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [11, 17], [9, 14], [9, 16], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [2, 5], [0, 2], [1, 11], [8, 7], [14, 10], [9, 11], [2, 5], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [2, 19], [15, 7], [2, 14], [10, 11], [9, 16], [19, 4], [7, 13], [16, 12], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [10, 11], [19, 4], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [0, 9], [5, 1], [11, 6], [2, 14], [19, 4], [12, 7], [15, 8], [12, 1], [9, 14], [10, 13], [12, 15], [11, 13], [8, 1], [5, 18], [15, 7], [3, 18], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [8, 7], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.4687070846557617

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[2, 7, 12]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[32, 33, 38]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[46, 50, 52]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.1406376361846924

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7, 12] ccc => cc, Pos: [32, 33, 38] ccc => cc, Pos: [46, 50, 52] ccc => cc]

--------End Timer [Generate Plans]:  0.015623807907104492

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 7, 12] ccc => cc,
 Pos: [32, 33, 38] ccc => cc,
 Pos: [46, 50, 52] ccc => cc]
Change: 3, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 7, 12] ccc => cc
Apply:  Pos: [32, 33, 38] ccc => cc
Apply:  Pos: [46, 50, 52] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 10], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [0, 2], [2, 5], [1, 11], [8, 7], [14, 10], [9, 11], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [2, 14], [15, 8], [5, 3], [18, 17], [14, 19], [15, 7], [10, 11], [9, 16], [19, 4], [7, 13], [16, 12], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [10, 11], [19, 4], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [0, 9], [5, 1], [11, 6], [2, 14], [19, 4], [12, 7], [15, 8], [12, 1], [9, 14], [10, 13], [12, 15], [11, 13], [8, 1], [5, 18], [15, 7], [3, 18], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [8, 7], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.156261444091797

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.031273365020752

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 10], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [0, 2], [2, 5], [1, 11], [8, 7], [14, 10], [9, 11], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [2, 14], [15, 8], [5, 3], [18, 17], [14, 19], [15, 7], [10, 11], [9, 16], [19, 4], [7, 13], [16, 12], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [10, 11], [19, 4], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [0, 9], [5, 1], [11, 6], [2, 14], [19, 4], [12, 7], [15, 8], [12, 1], [9, 14], [10, 13], [12, 15], [11, 13], [8, 1], [5, 18], [15, 7], [3, 18], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [8, 7], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.031273365020752

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [127] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 28 - (small)
 - circuit cycle: 254

Reduced: 
 - size: 98 (43.56%)
 - depth: 17 (37.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09373116493225098

[10, 11], [15, 7], [19, 5], [10, 11], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [10, 1], [11, 17], [9, 16], [10, 1], [9, 14], [0, 2], [13, 17], [8, 7], [19, 5], [4, 3], [10, 1], [15, 8], [16, 12], [0, 9], [2, 5], [10, 1], [2, 19], [17, 6], [16, 14], [15, 8], [1, 3], [11, 6], [5, 18], [12, 7], [16, 14], [5, 3], [10, 11], [9, 16], [12, 15], [14, 19], [13, 17], [5, 3], [13, 17], [16, 10], [0, 9], [2, 14], [5, 18], [17, 6], [2, 14], [8, 11], [7, 13], [10, 1], [0, 9], [2, 5], [12, 15], [8, 11], [0, 2], [12, 7], [1, 11], [2, 19], [5, 18], [8, 7], [19, 4], [12, 8], [5, 18], [9, 10], [15, 7], [17, 6], [19, 4], [15, 7], [14, 10], [2, 5], [13, 17], [2, 19], [12, 15], [5, 1], [13, 17], [16, 14], [19, 5], [12, 8], [17, 6], [9, 14], [2, 5], [17, 6], [11, 13], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [11, 13], [19, 4], [15, 7], [2, 14], [3, 18], [10, 11], [9, 16], [19, 4], [7, 13], [3, 18], [8, 11], [16, 12], [9, 10], [2, 19], [1, 3], [8, 11], [0, 9], [12, 15], [13, 6], [1, 3], [9, 14], [15, 8], [11, 17], [2, 5], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [9, 14], [1, 11], [8, 7], [16, 12], [19, 4], [1, 3], [9, 14], [19, 4], [10, 11], [1, 3], [19, 4], [10, 8], [7, 13], [11, 17], [4, 3], [13, 17], [19, 5], [10, 8], [16, 14], [0, 9], [3, 18], [15, 7], [12, 8], [10, 11], [14, 19], [0, 9], [4, 3], [5, 1], [7, 13], [18, 17], [10, 8], [9, 14], [0, 2], [3, 18], [2, 5], [7, 13], [17, 6], [9, 16], [10, 11], [18, 17], [5, 1], [0, 9], [11, 6], [2, 14], [15, 7], [18, 17], [19, 4], [12, 8], [9, 16], [13, 17], [5, 18], [12, 7], [2, 19], [15, 8], [9, 14], [13, 17], [10, 11], [9, 14], [5, 18], [2, 19], [12, 15], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [10, 11], [3, 18], [12, 8], [2, 5], [13, 17], [10, 8], [1, 11], [14, 19], [10, 8], [17, 6], [19, 5], [1, 3], [8, 7], [2, 19], [9, 16], [14, 10], [17, 6], [5, 1], [8, 7], [5, 3], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [5, 3], [12, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[13, 16]
[16, 23]
[23, 28]
[24, 32]
[31, 37]
[38, 44]
[43, 45]
[35, 49]
[48, 51]
[47, 55]
[41, 57]
[52, 58]
[63, 67]
[50, 70]
[65, 71]
[69, 72]
[75, 79]
[66, 82]
[83, 86]
[87, 93]
[94, 100]
[97, 102]
[103, 108]
[107, 112]
[130, 136]
[134, 137]
[135, 139]
[137, 140]
[141, 147]
[149, 155]
[158, 165]
[153, 168]
[169, 175]
[179, 185]
[184, 187]
[180, 188]
[182, 189]
[188, 193]
[187, 194]
[201, 204]
[178, 210]
[205, 212]
[208, 214]
[214, 218]
[215, 223]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 20, 24]
[144, 150, 156]
[168, 172, 186]
[186, 191, 196]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 106, 117]
[167, 171, 178]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[21, 27, 29]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[13, 16]
[16, 23]
[23, 28]
[24, 32]
[31, 37]
[38, 44]
[43, 45]
[35, 49]
[48, 51]
[47, 55]
[41, 57]
[52, 58]
[63, 67]
[50, 70]
[65, 71]
[69, 72]
[75, 79]
[66, 82]
[83, 86]
[87, 93]
[94, 100]
[97, 102]
[103, 108]
[107, 112]
[130, 136]
[134, 137]
[135, 139]
[137, 140]
[141, 147]
[149, 155]
[158, 165]
[153, 168]
[169, 175]
[179, 185]
[184, 187]
[180, 188]
[182, 189]
[188, 193]
[187, 194]
[201, 204]
[178, 210]
[205, 212]
[208, 214]
[214, 218]
[215, 223]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.187504053115845

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3] cc => I, Pos: [0, 3] cc => I, Pos: [11, 20, 24] ccc => cc, Pos: [13, 16] cc => I, Pos: [13, 16] cc => I, Pos: [16, 23] cc => I, Pos: [16, 23] cc => I, Pos: [21, 27, 29] ccc => cc, Pos: [23, 28] cc => I, Pos: [23, 28] cc => I, Pos: [24, 32] cc => I, Pos: [24, 32] cc => I, Pos: [31, 37] cc => I, Pos: [31, 37] cc => I, Pos: [35, 49] cc => I, Pos: [35, 49] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [41, 57] cc => I, Pos: [41, 57] cc => I, Pos: [43, 45] cc => I, Pos: [43, 45] cc => I, Pos: [47, 55] cc => I, Pos: [47, 55] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [50, 70] cc => I, Pos: [50, 70] cc => I, Pos: [52, 58] cc => I, Pos: [52, 58] cc => I, Pos: [63, 67] cc => I, Pos: [63, 67] cc => I, Pos: [65, 71] cc => I, Pos: [65, 71] cc => I, Pos: [66, 82] cc => I, Pos: [66, 82] cc => I, Pos: [69, 72] cc => I, Pos: [69, 72] cc => I, Pos: [75, 79] cc => I, Pos: [75, 79] cc => I, Pos: [83, 86] cc => I, Pos: [83, 86] cc => I, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [94, 100] cc => I, Pos: [94, 100] cc => I, Pos: [97, 102] cc => I, Pos: [97, 102] cc => I, Pos: [100, 106, 117] ccc => cc, Pos: [103, 108] cc => I, Pos: [103, 108] cc => I, Pos: [107, 112] cc => I, Pos: [107, 112] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [134, 137] cc => I, Pos: [134, 137] cc => I, Pos: [135, 139] cc => I, Pos: [135, 139] cc => I, Pos: [137, 140] cc => I, Pos: [137, 140] cc => I, Pos: [141, 147] cc => I, Pos: [141, 147] cc => I, Pos: [144, 150, 156] ccc => cc, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [153, 168] cc => I, Pos: [153, 168] cc => I, Pos: [158, 165] cc => I, Pos: [158, 165] cc => I, Pos: [167, 171, 178] ccc => cc, Pos: [168, 172, 186] ccc => cc, Pos: [169, 175] cc => I, Pos: [169, 175] cc => I, Pos: [178, 210] cc => I, Pos: [178, 210] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [184, 187] cc => I, Pos: [184, 187] cc => I, Pos: [186, 191, 196] ccc => cc, Pos: [187, 194] cc => I, Pos: [187, 194] cc => I, Pos: [188, 193] cc => I, Pos: [188, 193] cc => I, Pos: [201, 204] cc => I, Pos: [201, 204] cc => I, Pos: [205, 212] cc => I, Pos: [205, 212] cc => I, Pos: [208, 214] cc => I, Pos: [208, 214] cc => I, Pos: [214, 218] cc => I, Pos: [214, 218] cc => I, Pos: [215, 223] cc => I, Pos: [215, 223] cc => I]

--------End Timer [Generate Plans]:  0.10936880111694336

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3] cc => I,
 Pos: [24, 32] cc => I,
 Pos: [16, 23] cc => I,
 Pos: [21, 27, 29] ccc => cc,
 Pos: [31, 37] cc => I,
 Pos: [35, 49] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [41, 57] cc => I,
 Pos: [43, 45] cc => I,
 Pos: [47, 55] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [52, 58] cc => I,
 Pos: [63, 67] cc => I,
 Pos: [65, 71] cc => I,
 Pos: [66, 82] cc => I,
 Pos: [69, 72] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [83, 86] cc => I,
 Pos: [87, 93] cc => I,
 Pos: [94, 100] cc => I,
 Pos: [97, 102] cc => I,
 Pos: [103, 108] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [137, 140] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [141, 147] cc => I,
 Pos: [144, 150, 156] ccc => cc,
 Pos: [149, 155] cc => I,
 Pos: [153, 168] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [167, 171, 178] ccc => cc,
 Pos: [169, 175] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [188, 193] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [187, 194] cc => I,
 Pos: [186, 191, 196] ccc => cc,
 Pos: [201, 204] cc => I,
 Pos: [205, 212] cc => I,
 Pos: [214, 218] cc => I,
 Pos: [215, 223] cc => I]
Change: 43, Saving: 43

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 3] cc => I
Apply:  Pos: [24, 32] cc => I
Apply:  Pos: [16, 23] cc => I
Apply:  Pos: [21, 27, 29] ccc => cc
Apply:  Pos: [31, 37] cc => I
Apply:  Pos: [35, 49] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [41, 57] cc => I
Apply:  Pos: [43, 45] cc => I
Apply:  Pos: [47, 55] cc => I
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [50, 70] cc => I
Apply:  Pos: [52, 58] cc => I
Apply:  Pos: [63, 67] cc => I
Apply:  Pos: [65, 71] cc => I
Apply:  Pos: [66, 82] cc => I
Apply:  Pos: [69, 72] cc => I
Apply:  Pos: [75, 79] cc => I
Apply:  Pos: [83, 86] cc => I
Apply:  Pos: [87, 93] cc => I
Apply:  Pos: [94, 100] cc => I
Apply:  Pos: [97, 102] cc => I
Apply:  Pos: [103, 108] cc => I
Apply:  Pos: [107, 112] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [137, 140] cc => I
Apply:  Pos: [135, 139] cc => I
Apply:  Pos: [141, 147] cc => I
Apply:  Pos: [144, 150, 156] ccc => cc
Apply:  Pos: [149, 155] cc => I
Apply:  Pos: [153, 168] cc => I
Apply:  Pos: [158, 165] cc => I
Apply:  Pos: [167, 171, 178] ccc => cc
Apply:  Pos: [169, 175] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [188, 193] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [187, 194] cc => I
Apply:  Pos: [186, 191, 196] ccc => cc
Apply:  Pos: [201, 204] cc => I
Apply:  Pos: [205, 212] cc => I
Apply:  Pos: [214, 218] cc => I
Apply:  Pos: [215, 223] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [10, 1], [11, 17], [9, 16], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [10, 1], [17, 6], [1, 3], [11, 6], [12, 7], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [2, 5], [0, 2], [12, 7], [1, 11], [2, 19], [8, 7], [9, 10], [14, 10], [2, 5], [2, 19], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 5], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [9, 10], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [2, 5], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 18], [15, 7], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [3, 18], [2, 5], [17, 6], [0, 9], [5, 1], [9, 16], [11, 6], [2, 14], [15, 7], [19, 4], [12, 8], [5, 18], [12, 7], [15, 8], [9, 14], [10, 13], [12, 15], [11, 13], [8, 1], [15, 7], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [8, 7], [2, 19], [9, 16], [14, 10], [5, 1], [2, 14], [11, 6], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  4.296872854232788

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 23]
[38, 42]
[95, 111]
[108, 133]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[27, 32, 36]
[41, 57, 61]
[49, 53, 69]
[94, 99, 103]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 23]
[38, 42]
[95, 111]
[108, 133]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.390796422958374

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 23] cc => I, Pos: [11, 23] cc => I, Pos: [27, 32, 36] ccc => cc, Pos: [38, 42] cc => I, Pos: [38, 42] cc => I, Pos: [41, 57, 61] ccc => cc, Pos: [49, 53, 69] ccc => cc, Pos: [94, 99, 103] ccc => cc, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [108, 133] cc => I, Pos: [108, 133] cc => I]

--------End Timer [Generate Plans]:  0.031131982803344727

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 23] cc => I,
 Pos: [27, 32, 36] ccc => cc,
 Pos: [38, 42] cc => I,
 Pos: [41, 57, 61] ccc => cc,
 Pos: [49, 53, 69] ccc => cc,
 Pos: [94, 99, 103] ccc => cc,
 Pos: [95, 111] cc => I,
 Pos: [108, 133] cc => I]
Change: 8, Saving: 9

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 23] cc => I
Apply:  Pos: [27, 32, 36] ccc => cc
Apply:  Pos: [38, 42] cc => I
Apply:  Pos: [41, 57, 61] ccc => cc
Apply:  Pos: [49, 53, 69] ccc => cc
Apply:  Pos: [94, 99, 103] ccc => cc
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [108, 133] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [11, 17], [9, 14], [9, 16], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [2, 5], [0, 2], [1, 11], [8, 7], [14, 10], [9, 11], [2, 5], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [0, 9], [5, 1], [11, 6], [2, 14], [19, 4], [12, 8], [5, 18], [12, 7], [15, 8], [9, 14], [10, 13], [12, 15], [11, 13], [8, 1], [15, 7], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [8, 7], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.4219284057617188

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[2, 7, 12]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[32, 33, 38]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.140554189682007

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7, 12] ccc => cc, Pos: [32, 33, 38] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 7, 12] ccc => cc, Pos: [32, 33, 38] ccc => cc]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 7, 12] ccc => cc
Apply:  Pos: [32, 33, 38] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 10], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [0, 2], [2, 5], [1, 11], [8, 7], [14, 10], [9, 11], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [0, 9], [5, 1], [11, 6], [2, 14], [19, 4], [12, 8], [5, 18], [12, 7], [15, 8], [9, 14], [10, 13], [12, 15], [11, 13], [8, 1], [15, 7], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [8, 7], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.140554189682007

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0781686305999756

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 10], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [0, 2], [2, 5], [1, 11], [8, 7], [14, 10], [9, 11], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [0, 9], [5, 1], [11, 6], [2, 14], [19, 4], [12, 8], [5, 18], [12, 7], [15, 8], [9, 14], [10, 13], [12, 15], [11, 13], [8, 1], [15, 7], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [8, 7], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.0781686305999756

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [129] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 28 - (small)
 - circuit cycle: 258

Reduced: 
 - size: 96 (42.67%)
 - depth: 17 (37.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09373950958251953

[10, 11], [15, 7], [19, 5], [10, 11], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [10, 1], [11, 17], [9, 16], [10, 1], [9, 14], [0, 2], [13, 17], [8, 7], [19, 5], [4, 3], [10, 1], [15, 8], [16, 12], [0, 9], [2, 5], [10, 1], [2, 19], [17, 6], [16, 14], [15, 8], [1, 3], [11, 6], [5, 18], [12, 7], [16, 14], [5, 3], [10, 11], [9, 16], [12, 15], [14, 19], [13, 17], [5, 3], [13, 17], [16, 10], [0, 9], [2, 14], [5, 18], [17, 6], [2, 14], [8, 11], [7, 13], [10, 1], [0, 9], [2, 5], [12, 15], [8, 11], [0, 2], [12, 7], [1, 11], [2, 19], [5, 18], [8, 7], [19, 4], [12, 8], [5, 18], [9, 10], [15, 7], [17, 6], [19, 4], [15, 7], [14, 10], [2, 5], [13, 17], [2, 19], [12, 15], [5, 1], [13, 17], [16, 14], [19, 5], [12, 8], [17, 6], [9, 14], [2, 5], [17, 6], [11, 13], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [11, 13], [19, 4], [15, 7], [2, 14], [3, 18], [10, 11], [9, 16], [19, 4], [7, 13], [3, 18], [8, 11], [16, 12], [9, 10], [2, 19], [1, 3], [8, 11], [0, 9], [12, 15], [13, 6], [1, 3], [9, 14], [15, 8], [11, 17], [2, 5], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [9, 14], [1, 11], [8, 7], [16, 12], [19, 4], [1, 3], [9, 14], [19, 4], [10, 11], [1, 3], [19, 4], [10, 8], [7, 13], [11, 17], [4, 3], [13, 17], [19, 5], [10, 8], [16, 14], [0, 9], [3, 18], [15, 7], [12, 8], [10, 11], [14, 19], [0, 9], [4, 3], [5, 1], [7, 13], [18, 17], [10, 8], [9, 14], [0, 2], [3, 18], [2, 5], [7, 13], [17, 6], [9, 16], [10, 11], [18, 17], [5, 1], [0, 9], [11, 6], [2, 14], [15, 7], [18, 17], [19, 4], [12, 8], [9, 16], [13, 17], [5, 18], [12, 7], [2, 19], [15, 8], [9, 14], [13, 17], [10, 11], [9, 14], [5, 18], [2, 19], [12, 15], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [10, 11], [3, 18], [12, 8], [2, 5], [13, 17], [10, 8], [1, 11], [14, 19], [10, 8], [17, 6], [19, 5], [1, 3], [8, 7], [2, 19], [9, 16], [14, 10], [17, 6], [5, 1], [8, 7], [5, 3], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [5, 3], [12, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[13, 16]
[16, 23]
[23, 28]
[24, 32]
[31, 37]
[38, 44]
[43, 45]
[35, 49]
[48, 51]
[47, 55]
[41, 57]
[52, 58]
[63, 67]
[50, 70]
[65, 71]
[69, 72]
[75, 79]
[66, 82]
[83, 86]
[87, 93]
[94, 100]
[97, 102]
[103, 108]
[107, 112]
[130, 136]
[134, 137]
[135, 139]
[137, 140]
[141, 147]
[149, 155]
[158, 165]
[153, 168]
[169, 175]
[179, 185]
[184, 187]
[180, 188]
[182, 189]
[188, 193]
[187, 194]
[201, 204]
[178, 210]
[205, 212]
[208, 214]
[214, 218]
[215, 223]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 20, 24]
[144, 150, 156]
[168, 172, 186]
[186, 191, 196]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 106, 117]
[167, 171, 178]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[21, 27, 29]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[13, 16]
[16, 23]
[23, 28]
[24, 32]
[31, 37]
[38, 44]
[43, 45]
[35, 49]
[48, 51]
[47, 55]
[41, 57]
[52, 58]
[63, 67]
[50, 70]
[65, 71]
[69, 72]
[75, 79]
[66, 82]
[83, 86]
[87, 93]
[94, 100]
[97, 102]
[103, 108]
[107, 112]
[130, 136]
[134, 137]
[135, 139]
[137, 140]
[141, 147]
[149, 155]
[158, 165]
[153, 168]
[169, 175]
[179, 185]
[184, 187]
[180, 188]
[182, 189]
[188, 193]
[187, 194]
[201, 204]
[178, 210]
[205, 212]
[208, 214]
[214, 218]
[215, 223]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.249978303909302

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3] cc => I, Pos: [0, 3] cc => I, Pos: [11, 20, 24] ccc => cc, Pos: [13, 16] cc => I, Pos: [13, 16] cc => I, Pos: [16, 23] cc => I, Pos: [16, 23] cc => I, Pos: [21, 27, 29] ccc => cc, Pos: [23, 28] cc => I, Pos: [23, 28] cc => I, Pos: [24, 32] cc => I, Pos: [24, 32] cc => I, Pos: [31, 37] cc => I, Pos: [31, 37] cc => I, Pos: [35, 49] cc => I, Pos: [35, 49] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [41, 57] cc => I, Pos: [41, 57] cc => I, Pos: [43, 45] cc => I, Pos: [43, 45] cc => I, Pos: [47, 55] cc => I, Pos: [47, 55] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [50, 70] cc => I, Pos: [50, 70] cc => I, Pos: [52, 58] cc => I, Pos: [52, 58] cc => I, Pos: [63, 67] cc => I, Pos: [63, 67] cc => I, Pos: [65, 71] cc => I, Pos: [65, 71] cc => I, Pos: [66, 82] cc => I, Pos: [66, 82] cc => I, Pos: [69, 72] cc => I, Pos: [69, 72] cc => I, Pos: [75, 79] cc => I, Pos: [75, 79] cc => I, Pos: [83, 86] cc => I, Pos: [83, 86] cc => I, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [94, 100] cc => I, Pos: [94, 100] cc => I, Pos: [97, 102] cc => I, Pos: [97, 102] cc => I, Pos: [100, 106, 117] ccc => cc, Pos: [103, 108] cc => I, Pos: [103, 108] cc => I, Pos: [107, 112] cc => I, Pos: [107, 112] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [134, 137] cc => I, Pos: [134, 137] cc => I, Pos: [135, 139] cc => I, Pos: [135, 139] cc => I, Pos: [137, 140] cc => I, Pos: [137, 140] cc => I, Pos: [141, 147] cc => I, Pos: [141, 147] cc => I, Pos: [144, 150, 156] ccc => cc, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [153, 168] cc => I, Pos: [153, 168] cc => I, Pos: [158, 165] cc => I, Pos: [158, 165] cc => I, Pos: [167, 171, 178] ccc => cc, Pos: [168, 172, 186] ccc => cc, Pos: [169, 175] cc => I, Pos: [169, 175] cc => I, Pos: [178, 210] cc => I, Pos: [178, 210] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [184, 187] cc => I, Pos: [184, 187] cc => I, Pos: [186, 191, 196] ccc => cc, Pos: [187, 194] cc => I, Pos: [187, 194] cc => I, Pos: [188, 193] cc => I, Pos: [188, 193] cc => I, Pos: [201, 204] cc => I, Pos: [201, 204] cc => I, Pos: [205, 212] cc => I, Pos: [205, 212] cc => I, Pos: [208, 214] cc => I, Pos: [208, 214] cc => I, Pos: [214, 218] cc => I, Pos: [214, 218] cc => I, Pos: [215, 223] cc => I, Pos: [215, 223] cc => I]

--------End Timer [Generate Plans]:  0.10936713218688965

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3] cc => I,
 Pos: [11, 20, 24] ccc => cc,
 Pos: [16, 23] cc => I,
 Pos: [21, 27, 29] ccc => cc,
 Pos: [31, 37] cc => I,
 Pos: [35, 49] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [41, 57] cc => I,
 Pos: [43, 45] cc => I,
 Pos: [47, 55] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [52, 58] cc => I,
 Pos: [63, 67] cc => I,
 Pos: [65, 71] cc => I,
 Pos: [66, 82] cc => I,
 Pos: [69, 72] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [83, 86] cc => I,
 Pos: [87, 93] cc => I,
 Pos: [94, 100] cc => I,
 Pos: [97, 102] cc => I,
 Pos: [103, 108] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [137, 140] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [141, 147] cc => I,
 Pos: [144, 150, 156] ccc => cc,
 Pos: [149, 155] cc => I,
 Pos: [153, 168] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [178, 210] cc => I,
 Pos: [169, 175] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [184, 187] cc => I,
 Pos: [186, 191, 196] ccc => cc,
 Pos: [201, 204] cc => I,
 Pos: [205, 212] cc => I,
 Pos: [208, 214] cc => I,
 Pos: [215, 223] cc => I]
Change: 43, Saving: 43

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 3] cc => I
Apply:  Pos: [11, 20, 24] ccc => cc
Apply:  Pos: [16, 23] cc => I
Apply:  Pos: [21, 27, 29] ccc => cc
Apply:  Pos: [31, 37] cc => I
Apply:  Pos: [35, 49] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [41, 57] cc => I
Apply:  Pos: [43, 45] cc => I
Apply:  Pos: [47, 55] cc => I
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [50, 70] cc => I
Apply:  Pos: [52, 58] cc => I
Apply:  Pos: [63, 67] cc => I
Apply:  Pos: [65, 71] cc => I
Apply:  Pos: [66, 82] cc => I
Apply:  Pos: [69, 72] cc => I
Apply:  Pos: [75, 79] cc => I
Apply:  Pos: [83, 86] cc => I
Apply:  Pos: [87, 93] cc => I
Apply:  Pos: [94, 100] cc => I
Apply:  Pos: [97, 102] cc => I
Apply:  Pos: [103, 108] cc => I
Apply:  Pos: [107, 112] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [137, 140] cc => I
Apply:  Pos: [135, 139] cc => I
Apply:  Pos: [141, 147] cc => I
Apply:  Pos: [144, 150, 156] ccc => cc
Apply:  Pos: [149, 155] cc => I
Apply:  Pos: [153, 168] cc => I
Apply:  Pos: [158, 165] cc => I
Apply:  Pos: [178, 210] cc => I
Apply:  Pos: [169, 175] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [184, 187] cc => I
Apply:  Pos: [186, 191, 196] ccc => cc
Apply:  Pos: [201, 204] cc => I
Apply:  Pos: [205, 212] cc => I
Apply:  Pos: [208, 214] cc => I
Apply:  Pos: [215, 223] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 7], [1, 3], [10, 1], [11, 17], [9, 16], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [10, 1], [17, 6], [15, 8], [1, 3], [11, 6], [12, 7], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [2, 5], [0, 2], [12, 7], [1, 11], [2, 19], [8, 7], [9, 10], [14, 10], [2, 5], [2, 19], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 5], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [9, 10], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [2, 5], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 18], [15, 7], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [3, 18], [2, 5], [17, 6], [9, 16], [5, 1], [0, 9], [11, 6], [2, 14], [15, 7], [19, 4], [12, 8], [12, 7], [15, 8], [10, 13], [12, 15], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  4.359345436096191

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 23]
[39, 43]
[96, 112]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[28, 33, 37]
[42, 58, 62]
[50, 54, 70]
[95, 100, 104]
[116, 120, 125]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[0, 3, 9]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[115, 116, 118]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 23]
[39, 43]
[96, 112]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4531209468841553

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3, 9] ccc => cc, Pos: [11, 23] cc => I, Pos: [11, 23] cc => I, Pos: [28, 33, 37] ccc => cc, Pos: [39, 43] cc => I, Pos: [39, 43] cc => I, Pos: [42, 58, 62] ccc => cc, Pos: [50, 54, 70] ccc => cc, Pos: [95, 100, 104] ccc => cc, Pos: [96, 112] cc => I, Pos: [96, 112] cc => I, Pos: [115, 116, 118] ccc => cc, Pos: [116, 120, 125] ccc => cc]

--------End Timer [Generate Plans]:  0.01563858985900879

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3, 9] ccc => cc,
 Pos: [11, 23] cc => I,
 Pos: [28, 33, 37] ccc => cc,
 Pos: [39, 43] cc => I,
 Pos: [42, 58, 62] ccc => cc,
 Pos: [50, 54, 70] ccc => cc,
 Pos: [95, 100, 104] ccc => cc,
 Pos: [96, 112] cc => I,
 Pos: [116, 120, 125] ccc => cc]
Change: 9, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 3, 9] ccc => cc
Apply:  Pos: [11, 23] cc => I
Apply:  Pos: [28, 33, 37] ccc => cc
Apply:  Pos: [39, 43] cc => I
Apply:  Pos: [42, 58, 62] ccc => cc
Apply:  Pos: [50, 54, 70] ccc => cc
Apply:  Pos: [95, 100, 104] ccc => cc
Apply:  Pos: [96, 112] cc => I
Apply:  Pos: [116, 120, 125] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[12, 15], [19, 5], [9, 16], [15, 7], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [1, 3], [11, 17], [9, 14], [9, 16], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [15, 8], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [2, 5], [0, 2], [1, 11], [8, 7], [14, 10], [9, 11], [2, 5], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [9, 16], [5, 1], [0, 9], [11, 6], [2, 14], [19, 4], [12, 7], [15, 8], [12, 1], [10, 13], [12, 15], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [3, 18], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.468759536743164

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[2, 7, 11]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[32, 33, 38]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.156242847442627

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 7, 11] ccc => cc, Pos: [32, 33, 38] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 7, 11] ccc => cc, Pos: [32, 33, 38] ccc => cc]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 7, 11] ccc => cc
Apply:  Pos: [32, 33, 38] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[12, 15], [19, 5], [9, 10], [15, 7], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [15, 8], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [0, 2], [2, 5], [1, 11], [8, 7], [14, 10], [9, 11], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [9, 16], [5, 1], [0, 9], [11, 6], [2, 14], [19, 4], [12, 7], [15, 8], [12, 1], [10, 13], [12, 15], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [3, 18], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.156242847442627

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.1093764305114746

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[12, 15], [19, 5], [9, 10], [15, 7], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [15, 8], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [0, 2], [2, 5], [1, 11], [8, 7], [14, 10], [9, 11], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [19, 4], [10, 11], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [9, 16], [5, 1], [0, 9], [11, 6], [2, 14], [19, 4], [12, 7], [15, 8], [12, 1], [10, 13], [12, 15], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [3, 18], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.1093764305114746

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [129] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 29 - (small)
 - circuit cycle: 258

Reduced: 
 - size: 96 (42.67%)
 - depth: 16 (35.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07811975479125977

[10, 11], [15, 7], [19, 5], [10, 11], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 8], [1, 3], [10, 1], [11, 17], [9, 16], [10, 1], [9, 14], [0, 2], [13, 17], [8, 7], [19, 5], [4, 3], [10, 1], [15, 8], [16, 12], [0, 9], [2, 5], [10, 1], [2, 19], [17, 6], [16, 14], [15, 8], [1, 3], [11, 6], [5, 18], [12, 7], [16, 14], [5, 3], [10, 11], [9, 16], [12, 15], [14, 19], [13, 17], [5, 3], [13, 17], [16, 10], [0, 9], [2, 14], [5, 18], [17, 6], [2, 14], [8, 11], [7, 13], [10, 1], [0, 9], [2, 5], [12, 15], [8, 11], [0, 2], [12, 7], [1, 11], [2, 19], [5, 18], [8, 7], [19, 4], [12, 8], [5, 18], [9, 10], [15, 7], [17, 6], [19, 4], [15, 7], [14, 10], [2, 5], [13, 17], [2, 19], [12, 15], [5, 1], [13, 17], [16, 14], [19, 5], [12, 8], [17, 6], [9, 14], [2, 5], [17, 6], [11, 13], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [11, 13], [19, 4], [15, 7], [2, 14], [3, 18], [10, 11], [9, 16], [19, 4], [7, 13], [3, 18], [8, 11], [16, 12], [9, 10], [2, 19], [1, 3], [8, 11], [0, 9], [12, 15], [13, 6], [1, 3], [9, 14], [15, 8], [11, 17], [2, 5], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [9, 14], [1, 11], [8, 7], [16, 12], [19, 4], [1, 3], [9, 14], [19, 4], [10, 11], [1, 3], [19, 4], [10, 8], [7, 13], [11, 17], [4, 3], [13, 17], [19, 5], [10, 8], [16, 14], [0, 9], [3, 18], [15, 7], [12, 8], [10, 11], [14, 19], [0, 9], [4, 3], [5, 1], [7, 13], [18, 17], [10, 8], [9, 14], [0, 2], [3, 18], [2, 5], [7, 13], [17, 6], [9, 16], [10, 11], [18, 17], [5, 1], [0, 9], [11, 6], [2, 14], [15, 7], [18, 17], [19, 4], [12, 8], [9, 16], [13, 17], [5, 18], [12, 7], [2, 19], [15, 8], [9, 14], [13, 17], [10, 11], [9, 14], [5, 18], [2, 19], [12, 15], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [10, 11], [3, 18], [12, 8], [2, 5], [13, 17], [10, 8], [1, 11], [14, 19], [10, 8], [17, 6], [19, 5], [1, 3], [8, 7], [2, 19], [9, 16], [14, 10], [17, 6], [5, 1], [8, 7], [5, 3], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [5, 3], [12, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[13, 16]
[16, 23]
[23, 28]
[24, 32]
[31, 37]
[38, 44]
[43, 45]
[35, 49]
[48, 51]
[47, 55]
[41, 57]
[52, 58]
[63, 67]
[50, 70]
[65, 71]
[69, 72]
[75, 79]
[66, 82]
[83, 86]
[87, 93]
[94, 100]
[97, 102]
[103, 108]
[107, 112]
[130, 136]
[134, 137]
[135, 139]
[137, 140]
[141, 147]
[149, 155]
[158, 165]
[153, 168]
[169, 175]
[179, 185]
[184, 187]
[180, 188]
[182, 189]
[188, 193]
[187, 194]
[201, 204]
[178, 210]
[205, 212]
[208, 214]
[214, 218]
[215, 223]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 20, 24]
[144, 150, 156]
[168, 172, 186]
[186, 191, 196]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 106, 117]
[167, 171, 178]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[21, 27, 29]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 3]
[13, 16]
[16, 23]
[23, 28]
[24, 32]
[31, 37]
[38, 44]
[43, 45]
[35, 49]
[48, 51]
[47, 55]
[41, 57]
[52, 58]
[63, 67]
[50, 70]
[65, 71]
[69, 72]
[75, 79]
[66, 82]
[83, 86]
[87, 93]
[94, 100]
[97, 102]
[103, 108]
[107, 112]
[130, 136]
[134, 137]
[135, 139]
[137, 140]
[141, 147]
[149, 155]
[158, 165]
[153, 168]
[169, 175]
[179, 185]
[184, 187]
[180, 188]
[182, 189]
[188, 193]
[187, 194]
[201, 204]
[178, 210]
[205, 212]
[208, 214]
[214, 218]
[215, 223]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.21866250038147

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3] cc => I, Pos: [0, 3] cc => I, Pos: [11, 20, 24] ccc => cc, Pos: [13, 16] cc => I, Pos: [13, 16] cc => I, Pos: [16, 23] cc => I, Pos: [16, 23] cc => I, Pos: [21, 27, 29] ccc => cc, Pos: [23, 28] cc => I, Pos: [23, 28] cc => I, Pos: [24, 32] cc => I, Pos: [24, 32] cc => I, Pos: [31, 37] cc => I, Pos: [31, 37] cc => I, Pos: [35, 49] cc => I, Pos: [35, 49] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [41, 57] cc => I, Pos: [41, 57] cc => I, Pos: [43, 45] cc => I, Pos: [43, 45] cc => I, Pos: [47, 55] cc => I, Pos: [47, 55] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [50, 70] cc => I, Pos: [50, 70] cc => I, Pos: [52, 58] cc => I, Pos: [52, 58] cc => I, Pos: [63, 67] cc => I, Pos: [63, 67] cc => I, Pos: [65, 71] cc => I, Pos: [65, 71] cc => I, Pos: [66, 82] cc => I, Pos: [66, 82] cc => I, Pos: [69, 72] cc => I, Pos: [69, 72] cc => I, Pos: [75, 79] cc => I, Pos: [75, 79] cc => I, Pos: [83, 86] cc => I, Pos: [83, 86] cc => I, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [94, 100] cc => I, Pos: [94, 100] cc => I, Pos: [97, 102] cc => I, Pos: [97, 102] cc => I, Pos: [100, 106, 117] ccc => cc, Pos: [103, 108] cc => I, Pos: [103, 108] cc => I, Pos: [107, 112] cc => I, Pos: [107, 112] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [134, 137] cc => I, Pos: [134, 137] cc => I, Pos: [135, 139] cc => I, Pos: [135, 139] cc => I, Pos: [137, 140] cc => I, Pos: [137, 140] cc => I, Pos: [141, 147] cc => I, Pos: [141, 147] cc => I, Pos: [144, 150, 156] ccc => cc, Pos: [149, 155] cc => I, Pos: [149, 155] cc => I, Pos: [153, 168] cc => I, Pos: [153, 168] cc => I, Pos: [158, 165] cc => I, Pos: [158, 165] cc => I, Pos: [167, 171, 178] ccc => cc, Pos: [168, 172, 186] ccc => cc, Pos: [169, 175] cc => I, Pos: [169, 175] cc => I, Pos: [178, 210] cc => I, Pos: [178, 210] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [184, 187] cc => I, Pos: [184, 187] cc => I, Pos: [186, 191, 196] ccc => cc, Pos: [187, 194] cc => I, Pos: [187, 194] cc => I, Pos: [188, 193] cc => I, Pos: [188, 193] cc => I, Pos: [201, 204] cc => I, Pos: [201, 204] cc => I, Pos: [205, 212] cc => I, Pos: [205, 212] cc => I, Pos: [208, 214] cc => I, Pos: [208, 214] cc => I, Pos: [214, 218] cc => I, Pos: [214, 218] cc => I, Pos: [215, 223] cc => I, Pos: [215, 223] cc => I]

Plan: 1
[Pos: [0, 3] cc => I,
 Pos: [11, 20, 24] ccc => cc,
 Pos: [13, 16] cc => I,
 Pos: [21, 27, 29] ccc => cc,
 Pos: [23, 28] cc => I,
 Pos: [31, 37] cc => I,
 Pos: [35, 49] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [41, 57] cc => I,
 Pos: [43, 45] cc => I,
 Pos: [47, 55] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [52, 58] cc => I,
 Pos: [63, 67] cc => I,
 Pos: [65, 71] cc => I,
 Pos: [66, 82] cc => I,
 Pos: [69, 72] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [83, 86] cc => I,
 Pos: [87, 93] cc => I,
 Pos: [94, 100] cc => I,
 Pos: [97, 102] cc => I,
 Pos: [103, 108] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [134, 137] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [141, 147] cc => I,
 Pos: [144, 150, 156] ccc => cc,
 Pos: [149, 155] cc => I,
 Pos: [153, 168] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [167, 171, 178] ccc => cc,
 Pos: [169, 175] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [184, 187] cc => I,
 Pos: [186, 191, 196] ccc => cc,
 Pos: [201, 204] cc => I,
 Pos: [205, 212] cc => I,
 Pos: [208, 214] cc => I,
 Pos: [215, 223] cc => I]
Change: 44, Saving: 44

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.11005616188049316

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3] cc => I,
 Pos: [11, 20, 24] ccc => cc,
 Pos: [13, 16] cc => I,
 Pos: [21, 27, 29] ccc => cc,
 Pos: [23, 28] cc => I,
 Pos: [31, 37] cc => I,
 Pos: [35, 49] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [41, 57] cc => I,
 Pos: [43, 45] cc => I,
 Pos: [47, 55] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [52, 58] cc => I,
 Pos: [63, 67] cc => I,
 Pos: [65, 71] cc => I,
 Pos: [66, 82] cc => I,
 Pos: [69, 72] cc => I,
 Pos: [75, 79] cc => I,
 Pos: [83, 86] cc => I,
 Pos: [87, 93] cc => I,
 Pos: [94, 100] cc => I,
 Pos: [97, 102] cc => I,
 Pos: [103, 108] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [134, 137] cc => I,
 Pos: [135, 139] cc => I,
 Pos: [141, 147] cc => I,
 Pos: [144, 150, 156] ccc => cc,
 Pos: [149, 155] cc => I,
 Pos: [153, 168] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [167, 171, 178] ccc => cc,
 Pos: [169, 175] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [184, 187] cc => I,
 Pos: [186, 191, 196] ccc => cc,
 Pos: [201, 204] cc => I,
 Pos: [205, 212] cc => I,
 Pos: [208, 214] cc => I,
 Pos: [215, 223] cc => I]
Change: 44, Saving: 44

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 3] cc => I
Apply:  Pos: [11, 20, 24] ccc => cc
Apply:  Pos: [13, 16] cc => I
Apply:  Pos: [21, 27, 29] ccc => cc
Apply:  Pos: [23, 28] cc => I
Apply:  Pos: [31, 37] cc => I
Apply:  Pos: [35, 49] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [41, 57] cc => I
Apply:  Pos: [43, 45] cc => I
Apply:  Pos: [47, 55] cc => I
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [50, 70] cc => I
Apply:  Pos: [52, 58] cc => I
Apply:  Pos: [63, 67] cc => I
Apply:  Pos: [65, 71] cc => I
Apply:  Pos: [66, 82] cc => I
Apply:  Pos: [69, 72] cc => I
Apply:  Pos: [75, 79] cc => I
Apply:  Pos: [83, 86] cc => I
Apply:  Pos: [87, 93] cc => I
Apply:  Pos: [94, 100] cc => I
Apply:  Pos: [97, 102] cc => I
Apply:  Pos: [103, 108] cc => I
Apply:  Pos: [107, 112] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [134, 137] cc => I
Apply:  Pos: [135, 139] cc => I
Apply:  Pos: [141, 147] cc => I
Apply:  Pos: [144, 150, 156] ccc => cc
Apply:  Pos: [149, 155] cc => I
Apply:  Pos: [153, 168] cc => I
Apply:  Pos: [158, 165] cc => I
Apply:  Pos: [167, 171, 178] ccc => cc
Apply:  Pos: [169, 175] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [184, 187] cc => I
Apply:  Pos: [186, 191, 196] ccc => cc
Apply:  Pos: [201, 204] cc => I
Apply:  Pos: [205, 212] cc => I
Apply:  Pos: [208, 214] cc => I
Apply:  Pos: [215, 223] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[15, 7], [19, 5], [9, 16], [12, 15], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [15, 7], [1, 3], [11, 17], [9, 16], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [15, 8], [1, 3], [11, 6], [12, 7], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [2, 5], [0, 2], [12, 7], [1, 11], [2, 19], [8, 7], [9, 10], [14, 10], [2, 5], [2, 19], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 5], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [9, 10], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [2, 5], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [10, 11], [19, 4], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 18], [15, 7], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [3, 18], [2, 5], [17, 6], [0, 9], [5, 1], [9, 16], [11, 6], [2, 14], [15, 7], [19, 4], [12, 8], [12, 7], [15, 8], [10, 13], [12, 15], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [9, 16], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  4.328718662261963

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 41]
[94, 110]
[107, 131]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[2, 7, 13]
[26, 31, 35]
[40, 56, 60]
[48, 52, 68]
[93, 98, 102]
[114, 118, 123]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[0, 3, 9]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 114, 116]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 41]
[94, 110]
[107, 131]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.359318494796753

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 3, 9] ccc => cc, Pos: [2, 7, 13] ccc => cc, Pos: [26, 31, 35] ccc => cc, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [40, 56, 60] ccc => cc, Pos: [48, 52, 68] ccc => cc, Pos: [93, 98, 102] ccc => cc, Pos: [94, 110] cc => I, Pos: [94, 110] cc => I, Pos: [107, 131] cc => I, Pos: [107, 131] cc => I, Pos: [113, 114, 116] ccc => cc, Pos: [114, 118, 123] ccc => cc]

Plan: 1
[Pos: [0, 3, 9] ccc => cc,
 Pos: [2, 7, 13] ccc => cc,
 Pos: [26, 31, 35] ccc => cc,
 Pos: [37, 41] cc => I,
 Pos: [40, 56, 60] ccc => cc,
 Pos: [48, 52, 68] ccc => cc,
 Pos: [93, 98, 102] ccc => cc,
 Pos: [94, 110] cc => I,
 Pos: [107, 131] cc => I,
 Pos: [113, 114, 116] ccc => cc]
Change: 10, Saving: 11

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.031248092651367188

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 3, 9] ccc => cc,
 Pos: [2, 7, 13] ccc => cc,
 Pos: [26, 31, 35] ccc => cc,
 Pos: [37, 41] cc => I,
 Pos: [40, 56, 60] ccc => cc,
 Pos: [48, 52, 68] ccc => cc,
 Pos: [93, 98, 102] ccc => cc,
 Pos: [94, 110] cc => I,
 Pos: [107, 131] cc => I,
 Pos: [113, 114, 116] ccc => cc]
Change: 10, Saving: 11

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 3, 9] ccc => cc
Apply:  Pos: [2, 7, 13] ccc => cc
Apply:  Pos: [26, 31, 35] ccc => cc
Apply:  Pos: [37, 41] cc => I
Apply:  Pos: [40, 56, 60] ccc => cc
Apply:  Pos: [48, 52, 68] ccc => cc
Apply:  Pos: [93, 98, 102] ccc => cc
Apply:  Pos: [94, 110] cc => I
Apply:  Pos: [107, 131] cc => I
Apply:  Pos: [113, 114, 116] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[12, 15], [19, 5], [9, 10], [15, 7], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [15, 8], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [2, 5], [0, 2], [1, 11], [8, 7], [14, 10], [9, 11], [2, 5], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [10, 11], [19, 4], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [0, 9], [5, 1], [11, 6], [2, 14], [19, 4], [12, 7], [12, 15], [15, 8], [10, 13], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.39056658744812

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[31, 32, 37]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.046886682510376

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [31, 32, 37] ccc => cc]

Plan: 1
[Pos: [31, 32, 37] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015624284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [31, 32, 37] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [31, 32, 37] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[12, 15], [19, 5], [9, 10], [15, 7], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [15, 8], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [0, 2], [2, 5], [1, 11], [8, 7], [14, 10], [9, 11], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [10, 11], [19, 4], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [0, 9], [5, 1], [11, 6], [2, 14], [19, 4], [12, 15], [12, 7], [15, 8], [11, 13], [10, 13], [8, 1], [5, 18], [9, 14], [15, 7], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.0625109672546387

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.031332492828369

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[12, 15], [19, 5], [9, 10], [15, 7], [8, 1], [4, 3], [18, 17], [16, 10], [2, 5], [1, 3], [11, 17], [9, 14], [0, 2], [13, 17], [8, 7], [2, 19], [4, 3], [16, 12], [0, 9], [19, 5], [17, 6], [15, 8], [1, 3], [11, 6], [12, 13], [10, 11], [9, 16], [14, 19], [16, 10], [7, 13], [10, 1], [0, 2], [2, 5], [1, 11], [8, 7], [14, 10], [9, 11], [12, 15], [5, 1], [16, 14], [19, 5], [9, 14], [2, 3], [12, 7], [14, 19], [15, 8], [5, 3], [18, 17], [15, 7], [2, 14], [10, 11], [9, 16], [7, 13], [16, 12], [2, 19], [0, 9], [12, 15], [13, 6], [9, 14], [15, 8], [11, 17], [19, 4], [16, 12], [4, 3], [9, 16], [18, 17], [11, 13], [12, 15], [3, 18], [0, 9], [16, 10], [15, 7], [8, 11], [5, 3], [1, 11], [8, 7], [16, 12], [10, 11], [19, 4], [7, 13], [11, 17], [4, 18], [13, 17], [19, 5], [16, 14], [3, 17], [12, 8], [14, 19], [5, 1], [18, 17], [10, 8], [9, 14], [0, 2], [2, 5], [17, 6], [0, 9], [5, 1], [11, 6], [2, 14], [19, 4], [12, 7], [12, 15], [15, 8], [10, 13], [11, 13], [8, 1], [5, 18], [9, 14], [15, 7], [3, 18], [12, 8], [2, 5], [13, 17], [1, 11], [14, 19], [19, 5], [1, 3], [2, 19], [14, 10], [5, 1], [2, 14], [11, 6], [8, 7], [16, 14], [9, 10], [15, 8], [17, 6], [12, 7], ----End Timer [Execute Mapping]:  2.031332492828369

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [128] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 28 - (small)
 - circuit cycle: 256

Reduced: 
 - size: 97 (43.11%)
 - depth: 17 (37.78%)

