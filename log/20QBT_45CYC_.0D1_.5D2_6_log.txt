----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374308586120605

[17, 1], [10, 9], [18, 2], [0, 7], [13, 15], [3, 4], [1, 5], [9, 2], [4, 14], [12, 10], [11, 18], [15, 17], [1, 5], [10, 6], [18, 2], [15, 0], [17, 19], [8, 16], [18, 1], [17, 19], [15, 0], [3, 4], [0, 18], [13, 15], [17, 16], [10, 9], [6, 3], [0, 18], [2, 5], [9, 6], [4, 14], [8, 16], [0, 18], [7, 17], [6, 3], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [1, 16], [15, 0], [10, 9], [7, 8], [5, 14], [18, 2], [6, 3], [1, 19], [12, 0], [18, 5], [7, 17], [10, 9], [2, 6], [3, 4], [12, 18], [5, 4], [13, 11], [1, 16], [0, 7], [18, 2], [17, 16], [9, 6], [12, 10], [5, 4], [1, 19], [9, 2], [13, 11], [12, 0], [1, 5], [9, 6], [5, 14], [13, 11], [10, 2], [15, 17], [1, 19], [7, 8], [10, 6], [13, 11], [9, 2], [12, 0], [17, 19], [8, 16], [18, 1], [3, 4], [6, 3], [2, 1], [0, 17], [5, 14], [10, 9], [19, 4], [7, 8], [13, 11], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [17, 19], [10, 9], [9, 6], [12, 10], [1, 5], [8, 16], [13, 15], [18, 2], [4, 14], [17, 19], [9, 6], [19, 4], [10, 2], [0, 18], [10, 6], [18, 1], [19, 4], [0, 17], [2, 5], [10, 2], [15, 17], [16, 19], [11, 18], [6, 3], [12, 10], [2, 5], [7, 17], [12, 0], [13, 11], [3, 14], [10, 9], [12, 0], [13, 15], [1, 16], [11, 18], [12, 10], [6, 3], [0, 17], [8, 16], [18, 1], [12, 10], [5, 4], [1, 16], [9, 2], [11, 18], [10, 6], [17, 1], [13, 15], [0, 7], [5, 4], [16, 19], [10, 6], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [1, 16], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [1, 16], [11, 18], [9, 6], [3, 4], [17, 1], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [17, 1], [13, 15], [11, 18], [17, 16], [13, 11], [9, 2], [3, 4], [17, 19], [11, 12], [2, 1], [18, 5], [0, 7], [12, 10], [9, 2], [0, 7], [17, 19], [4, 14], [12, 10], [19, 4], [5, 3], [13, 15], [9, 2], [12, 18], [2, 6], [4, 14], [0, 7], [16, 19], [13, 11], [12, 0], [1, 19], [13, 11], [9, 6], [15, 17], [5, 14], [11, 12], [10, 2], [5, 4], [0, 7], [12, 10], [5, 3], [2, 1], [0, 17], [13, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 12]
[16, 19]
[15, 20]
[22, 27]
[27, 32]
[44, 53]
[42, 59]
[57, 65]
[49, 66]
[58, 68]
[63, 71]
[68, 73]
[66, 76]
[73, 79]
[69, 81]
[72, 89]
[79, 93]
[90, 103]
[102, 111]
[104, 112]
[113, 118]
[129, 133]
[137, 142]
[134, 149]
[143, 151]
[147, 153]
[159, 169]
[173, 182]
[172, 188]
[193, 196]
[189, 197]
[194, 199]
[183, 202]
[195, 203]
[196, 207]
[209, 212]
[201, 221]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[5, 8, 21]
[77, 83, 92]
[114, 120, 121]
[126, 132, 137]
[125, 131, 138]
[187, 191, 195]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[26, 29, 34]
[89, 98, 100]
[83, 92, 107]
[124, 130, 136]
[151, 157, 163]
[198, 200, 206]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[206, 215, 218]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 12]
[16, 19]
[15, 20]
[22, 27]
[27, 32]
[44, 53]
[42, 59]
[57, 65]
[49, 66]
[58, 68]
[63, 71]
[68, 73]
[66, 76]
[73, 79]
[69, 81]
[72, 89]
[79, 93]
[90, 103]
[102, 111]
[104, 112]
[113, 118]
[129, 133]
[137, 142]
[134, 149]
[143, 151]
[147, 153]
[159, 169]
[173, 182]
[172, 188]
[193, 196]
[189, 197]
[194, 199]
[183, 202]
[195, 203]
[196, 207]
[209, 212]
[201, 221]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.234455108642578

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 8, 21] ccc => cc, Pos: [6, 12] cc => I, Pos: [6, 12] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [16, 19] cc => I, Pos: [16, 19] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [26, 29, 34] ccc => cc, Pos: [27, 32] cc => I, Pos: [27, 32] cc => I, Pos: [42, 59] cc => I, Pos: [42, 59] cc => I, Pos: [44, 53] cc => I, Pos: [44, 53] cc => I, Pos: [49, 66] cc => I, Pos: [49, 66] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [58, 68] cc => I, Pos: [58, 68] cc => I, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [68, 73] cc => I, Pos: [68, 73] cc => I, Pos: [69, 81] cc => I, Pos: [69, 81] cc => I, Pos: [72, 89] cc => I, Pos: [72, 89] cc => I, Pos: [73, 79] cc => I, Pos: [73, 79] cc => I, Pos: [77, 83, 92] ccc => cc, Pos: [79, 93] cc => I, Pos: [79, 93] cc => I, Pos: [83, 92, 107] ccc => cc, Pos: [89, 98, 100] ccc => cc, Pos: [90, 103] cc => I, Pos: [90, 103] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [113, 118] cc => I, Pos: [113, 118] cc => I, Pos: [114, 120, 121] ccc => cc, Pos: [124, 130, 136] ccc => cc, Pos: [125, 131, 138] ccc => cc, Pos: [126, 132, 137] ccc => cc, Pos: [129, 133] cc => I, Pos: [129, 133] cc => I, Pos: [134, 149] cc => I, Pos: [134, 149] cc => I, Pos: [137, 142] cc => I, Pos: [137, 142] cc => I, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [151, 157, 163] ccc => cc, Pos: [159, 169] cc => I, Pos: [159, 169] cc => I, Pos: [172, 188] cc => I, Pos: [172, 188] cc => I, Pos: [173, 182] cc => I, Pos: [173, 182] cc => I, Pos: [183, 202] cc => I, Pos: [183, 202] cc => I, Pos: [187, 191, 195] ccc => cc, Pos: [189, 197] cc => I, Pos: [189, 197] cc => I, Pos: [193, 196] cc => I, Pos: [193, 196] cc => I, Pos: [194, 199] cc => I, Pos: [194, 199] cc => I, Pos: [195, 203] cc => I, Pos: [195, 203] cc => I, Pos: [196, 207] cc => I, Pos: [196, 207] cc => I, Pos: [198, 200, 206] ccc => cc, Pos: [201, 221] cc => I, Pos: [201, 221] cc => I, Pos: [206, 215, 218] ccc => cc, Pos: [209, 212] cc => I, Pos: [209, 212] cc => I]

Plan: 1
[Pos: [5, 8, 21] ccc => cc,
 Pos: [6, 12] cc => I,
 Pos: [15, 20] cc => I,
 Pos: [16, 19] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [26, 29, 34] ccc => cc,
 Pos: [42, 59] cc => I,
 Pos: [44, 53] cc => I,
 Pos: [49, 66] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [58, 68] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [69, 81] cc => I,
 Pos: [72, 89] cc => I,
 Pos: [73, 79] cc => I,
 Pos: [77, 83, 92] ccc => cc,
 Pos: [90, 103] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [114, 120, 121] ccc => cc,
 Pos: [124, 130, 136] ccc => cc,
 Pos: [125, 131, 138] ccc => cc,
 Pos: [126, 132, 137] ccc => cc,
 Pos: [129, 133] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [143, 151] cc => I,
 Pos: [147, 153] cc => I,
 Pos: [159, 169] cc => I,
 Pos: [172, 188] cc => I,
 Pos: [173, 182] cc => I,
 Pos: [183, 202] cc => I,
 Pos: [187, 191, 195] ccc => cc,
 Pos: [189, 197] cc => I,
 Pos: [193, 196] cc => I,
 Pos: [194, 199] cc => I,
 Pos: [198, 200, 206] ccc => cc,
 Pos: [201, 221] cc => I,
 Pos: [209, 212] cc => I]
Change: 39, Saving: 138

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 8, 21] ccc => cc,
 Pos: [6, 12] cc => I,
 Pos: [15, 20] cc => I,
 Pos: [16, 19] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [26, 29, 34] ccc => cc,
 Pos: [42, 59] cc => I,
 Pos: [44, 53] cc => I,
 Pos: [49, 66] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [58, 68] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [69, 81] cc => I,
 Pos: [72, 89] cc => I,
 Pos: [73, 79] cc => I,
 Pos: [77, 83, 92] ccc => cc,
 Pos: [90, 103] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [114, 120, 121] ccc => cc,
 Pos: [124, 130, 136] ccc => cc,
 Pos: [125, 131, 138] ccc => cc,
 Pos: [126, 132, 137] ccc => cc,
 Pos: [129, 133] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [143, 151] cc => I,
 Pos: [147, 153] cc => I,
 Pos: [159, 169] cc => I,
 Pos: [172, 188] cc => I,
 Pos: [173, 182] cc => I,
 Pos: [183, 202] cc => I,
 Pos: [187, 191, 195] ccc => cc,
 Pos: [189, 197] cc => I,
 Pos: [193, 196] cc => I,
 Pos: [194, 199] cc => I,
 Pos: [198, 200, 206] ccc => cc,
 Pos: [201, 221] cc => I,
 Pos: [209, 212] cc => I]
Change: 39, Saving: 138

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 8, 21] ccc => cc
Apply:  Pos: [6, 12] cc => I
Apply:  Pos: [15, 20] cc => I
Apply:  Pos: [16, 19] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [26, 29, 34] ccc => cc
Apply:  Pos: [42, 59] cc => I
Apply:  Pos: [44, 53] cc => I
Apply:  Pos: [49, 66] cc => I
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [58, 68] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [69, 81] cc => I
Apply:  Pos: [72, 89] cc => I
Apply:  Pos: [73, 79] cc => I
Apply:  Pos: [77, 83, 92] ccc => cc
Apply:  Pos: [90, 103] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [113, 118] cc => I
Apply:  Pos: [114, 120, 121] ccc => cc
Apply:  Pos: [124, 130, 136] ccc => cc
Apply:  Pos: [125, 131, 138] ccc => cc
Apply:  Pos: [126, 132, 137] ccc => cc
Apply:  Pos: [129, 133] cc => I
Apply:  Pos: [134, 149] cc => I
Apply:  Pos: [143, 151] cc => I
Apply:  Pos: [147, 153] cc => I
Apply:  Pos: [159, 169] cc => I
Apply:  Pos: [172, 188] cc => I
Apply:  Pos: [173, 182] cc => I
Apply:  Pos: [183, 202] cc => I
Apply:  Pos: [187, 191, 195] ccc => cc
Apply:  Pos: [189, 197] cc => I
Apply:  Pos: [193, 196] cc => I
Apply:  Pos: [194, 199] cc => I
Apply:  Pos: [198, 200, 206] ccc => cc
Apply:  Pos: [201, 221] cc => I
Apply:  Pos: [209, 212] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 15], [3, 14], [9, 2], [4, 14], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [13, 15], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [4, 14], [8, 16], [0, 18], [7, 17], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [7, 17], [2, 6], [3, 4], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [1, 19], [7, 16], [10, 6], [9, 2], [17, 19], [8, 16], [18, 1], [3, 4], [6, 3], [2, 1], [0, 17], [19, 4], [13, 11], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [8, 16], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [0, 17], [2, 5], [15, 17], [16, 19], [13, 11], [6, 14], [12, 9], [2, 5], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [12, 10], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [19, 4], [4, 14], [9, 2], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [5, 14], [11, 12], [10, 2], [5, 4], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  4.234455108642578

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[41, 58]
[56, 74]
[61, 82]
[83, 89]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 10, 15]
[24, 28, 39]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[137, 147, 150]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[41, 58]
[56, 74]
[61, 82]
[83, 89]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7053415775299072

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10, 15] ccc => cc, Pos: [7, 21] cc => I, Pos: [7, 21] cc => I, Pos: [24, 28, 39] ccc => cc, Pos: [41, 58] cc => I, Pos: [41, 58] cc => I, Pos: [56, 74] cc => I, Pos: [56, 74] cc => I, Pos: [61, 82] cc => I, Pos: [61, 82] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [137, 147, 150] ccc => cc]

Plan: 1
[Pos: [4, 10, 15] ccc => cc,
 Pos: [7, 21] cc => I,
 Pos: [24, 28, 39] ccc => cc,
 Pos: [41, 58] cc => I,
 Pos: [56, 74] cc => I,
 Pos: [61, 82] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [137, 147, 150] ccc => cc]
Change: 8, Saving: 26

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 10, 15] ccc => cc,
 Pos: [7, 21] cc => I,
 Pos: [24, 28, 39] ccc => cc,
 Pos: [41, 58] cc => I,
 Pos: [56, 74] cc => I,
 Pos: [61, 82] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [137, 147, 150] ccc => cc]
Change: 8, Saving: 26

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 10, 15] ccc => cc
Apply:  Pos: [7, 21] cc => I
Apply:  Pos: [24, 28, 39] ccc => cc
Apply:  Pos: [41, 58] cc => I
Apply:  Pos: [56, 74] cc => I
Apply:  Pos: [61, 82] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [137, 147, 150] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [1, 19], [7, 16], [10, 6], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [13, 11], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 9], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [12, 10], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [19, 4], [5, 4], [9, 2], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.7053415775299072

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[48, 52, 56]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.406094789505005

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 52, 56] ccc => cc]

Plan: 1
[Pos: [48, 52, 56] ccc => cc]
Change: 1, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 52, 56] ccc => cc]
Change: 1, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [48, 52, 56] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [1, 19], [7, 16], [10, 3], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [13, 11], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 9], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [12, 10], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [5, 4], [19, 4], [9, 2], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.406094789505005

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3906497955322266

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [1, 19], [7, 16], [10, 3], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [13, 11], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 9], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [12, 10], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [19, 4], [5, 4], [9, 2], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.3906497955322266

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [142] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 284

Reduced: 
 - size: 83 (36.89%)
 - cycle: 166 (36.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09376144409179688

[17, 1], [10, 9], [18, 2], [0, 7], [13, 15], [3, 4], [1, 5], [9, 2], [4, 14], [12, 10], [11, 18], [15, 17], [1, 5], [10, 6], [18, 2], [15, 0], [17, 19], [8, 16], [18, 1], [17, 19], [15, 0], [3, 4], [0, 18], [13, 15], [17, 16], [10, 9], [6, 3], [0, 18], [2, 5], [9, 6], [4, 14], [8, 16], [0, 18], [7, 17], [6, 3], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [1, 16], [15, 0], [10, 9], [7, 8], [5, 14], [18, 2], [6, 3], [1, 19], [12, 0], [18, 5], [7, 17], [10, 9], [2, 6], [3, 4], [12, 18], [5, 4], [13, 11], [1, 16], [0, 7], [18, 2], [17, 16], [9, 6], [12, 10], [5, 4], [1, 19], [9, 2], [13, 11], [12, 0], [1, 5], [9, 6], [5, 14], [13, 11], [10, 2], [15, 17], [1, 19], [7, 8], [10, 6], [13, 11], [9, 2], [12, 0], [17, 19], [8, 16], [18, 1], [3, 4], [6, 3], [2, 1], [0, 17], [5, 14], [10, 9], [19, 4], [7, 8], [13, 11], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [17, 19], [10, 9], [9, 6], [12, 10], [1, 5], [8, 16], [13, 15], [18, 2], [4, 14], [17, 19], [9, 6], [19, 4], [10, 2], [0, 18], [10, 6], [18, 1], [19, 4], [0, 17], [2, 5], [10, 2], [15, 17], [16, 19], [11, 18], [6, 3], [12, 10], [2, 5], [7, 17], [12, 0], [13, 11], [3, 14], [10, 9], [12, 0], [13, 15], [1, 16], [11, 18], [12, 10], [6, 3], [0, 17], [8, 16], [18, 1], [12, 10], [5, 4], [1, 16], [9, 2], [11, 18], [10, 6], [17, 1], [13, 15], [0, 7], [5, 4], [16, 19], [10, 6], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [1, 16], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [1, 16], [11, 18], [9, 6], [3, 4], [17, 1], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [17, 1], [13, 15], [11, 18], [17, 16], [13, 11], [9, 2], [3, 4], [17, 19], [11, 12], [2, 1], [18, 5], [0, 7], [12, 10], [9, 2], [0, 7], [17, 19], [4, 14], [12, 10], [19, 4], [5, 3], [13, 15], [9, 2], [12, 18], [2, 6], [4, 14], [0, 7], [16, 19], [13, 11], [12, 0], [1, 19], [13, 11], [9, 6], [15, 17], [5, 14], [11, 12], [10, 2], [5, 4], [0, 7], [12, 10], [5, 3], [2, 1], [0, 17], [13, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 12]
[16, 19]
[15, 20]
[22, 27]
[27, 32]
[44, 53]
[42, 59]
[57, 65]
[49, 66]
[58, 68]
[63, 71]
[68, 73]
[66, 76]
[73, 79]
[69, 81]
[72, 89]
[79, 93]
[90, 103]
[102, 111]
[104, 112]
[113, 118]
[129, 133]
[137, 142]
[134, 149]
[143, 151]
[147, 153]
[159, 169]
[173, 182]
[172, 188]
[193, 196]
[189, 197]
[194, 199]
[183, 202]
[195, 203]
[196, 207]
[209, 212]
[201, 221]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[5, 8, 21]
[77, 83, 92]
[114, 120, 121]
[126, 132, 137]
[125, 131, 138]
[187, 191, 195]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[26, 29, 34]
[89, 98, 100]
[83, 92, 107]
[124, 130, 136]
[151, 157, 163]
[198, 200, 206]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[206, 215, 218]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 12]
[16, 19]
[15, 20]
[22, 27]
[27, 32]
[44, 53]
[42, 59]
[57, 65]
[49, 66]
[58, 68]
[63, 71]
[68, 73]
[66, 76]
[73, 79]
[69, 81]
[72, 89]
[79, 93]
[90, 103]
[102, 111]
[104, 112]
[113, 118]
[129, 133]
[137, 142]
[134, 149]
[143, 151]
[147, 153]
[159, 169]
[173, 182]
[172, 188]
[193, 196]
[189, 197]
[194, 199]
[183, 202]
[195, 203]
[196, 207]
[209, 212]
[201, 221]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.140573263168335

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 8, 21] ccc => cc, Pos: [6, 12] cc => I, Pos: [6, 12] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [16, 19] cc => I, Pos: [16, 19] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [26, 29, 34] ccc => cc, Pos: [27, 32] cc => I, Pos: [27, 32] cc => I, Pos: [42, 59] cc => I, Pos: [42, 59] cc => I, Pos: [44, 53] cc => I, Pos: [44, 53] cc => I, Pos: [49, 66] cc => I, Pos: [49, 66] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [58, 68] cc => I, Pos: [58, 68] cc => I, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [68, 73] cc => I, Pos: [68, 73] cc => I, Pos: [69, 81] cc => I, Pos: [69, 81] cc => I, Pos: [72, 89] cc => I, Pos: [72, 89] cc => I, Pos: [73, 79] cc => I, Pos: [73, 79] cc => I, Pos: [77, 83, 92] ccc => cc, Pos: [79, 93] cc => I, Pos: [79, 93] cc => I, Pos: [83, 92, 107] ccc => cc, Pos: [89, 98, 100] ccc => cc, Pos: [90, 103] cc => I, Pos: [90, 103] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [113, 118] cc => I, Pos: [113, 118] cc => I, Pos: [114, 120, 121] ccc => cc, Pos: [124, 130, 136] ccc => cc, Pos: [125, 131, 138] ccc => cc, Pos: [126, 132, 137] ccc => cc, Pos: [129, 133] cc => I, Pos: [129, 133] cc => I, Pos: [134, 149] cc => I, Pos: [134, 149] cc => I, Pos: [137, 142] cc => I, Pos: [137, 142] cc => I, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [151, 157, 163] ccc => cc, Pos: [159, 169] cc => I, Pos: [159, 169] cc => I, Pos: [172, 188] cc => I, Pos: [172, 188] cc => I, Pos: [173, 182] cc => I, Pos: [173, 182] cc => I, Pos: [183, 202] cc => I, Pos: [183, 202] cc => I, Pos: [187, 191, 195] ccc => cc, Pos: [189, 197] cc => I, Pos: [189, 197] cc => I, Pos: [193, 196] cc => I, Pos: [193, 196] cc => I, Pos: [194, 199] cc => I, Pos: [194, 199] cc => I, Pos: [195, 203] cc => I, Pos: [195, 203] cc => I, Pos: [196, 207] cc => I, Pos: [196, 207] cc => I, Pos: [198, 200, 206] ccc => cc, Pos: [201, 221] cc => I, Pos: [201, 221] cc => I, Pos: [206, 215, 218] ccc => cc, Pos: [209, 212] cc => I, Pos: [209, 212] cc => I]

Plan: 1
[Pos: [5, 8, 21] ccc => cc,
 Pos: [6, 12] cc => I,
 Pos: [15, 20] cc => I,
 Pos: [16, 19] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [26, 29, 34] ccc => cc,
 Pos: [42, 59] cc => I,
 Pos: [44, 53] cc => I,
 Pos: [49, 66] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [58, 68] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [69, 81] cc => I,
 Pos: [72, 89] cc => I,
 Pos: [73, 79] cc => I,
 Pos: [77, 83, 92] ccc => cc,
 Pos: [90, 103] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [114, 120, 121] ccc => cc,
 Pos: [124, 130, 136] ccc => cc,
 Pos: [125, 131, 138] ccc => cc,
 Pos: [126, 132, 137] ccc => cc,
 Pos: [129, 133] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [143, 151] cc => I,
 Pos: [147, 153] cc => I,
 Pos: [159, 169] cc => I,
 Pos: [172, 188] cc => I,
 Pos: [173, 182] cc => I,
 Pos: [183, 202] cc => I,
 Pos: [187, 191, 195] ccc => cc,
 Pos: [189, 197] cc => I,
 Pos: [193, 196] cc => I,
 Pos: [194, 199] cc => I,
 Pos: [198, 200, 206] ccc => cc,
 Pos: [201, 221] cc => I,
 Pos: [209, 212] cc => I]
Change: 39, Saving: 38

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.09444880485534668

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 8, 21] ccc => cc,
 Pos: [6, 12] cc => I,
 Pos: [15, 20] cc => I,
 Pos: [16, 19] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [26, 29, 34] ccc => cc,
 Pos: [42, 59] cc => I,
 Pos: [44, 53] cc => I,
 Pos: [49, 66] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [58, 68] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [69, 81] cc => I,
 Pos: [72, 89] cc => I,
 Pos: [73, 79] cc => I,
 Pos: [77, 83, 92] ccc => cc,
 Pos: [90, 103] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [114, 120, 121] ccc => cc,
 Pos: [124, 130, 136] ccc => cc,
 Pos: [125, 131, 138] ccc => cc,
 Pos: [126, 132, 137] ccc => cc,
 Pos: [129, 133] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [143, 151] cc => I,
 Pos: [147, 153] cc => I,
 Pos: [159, 169] cc => I,
 Pos: [172, 188] cc => I,
 Pos: [173, 182] cc => I,
 Pos: [183, 202] cc => I,
 Pos: [187, 191, 195] ccc => cc,
 Pos: [189, 197] cc => I,
 Pos: [193, 196] cc => I,
 Pos: [194, 199] cc => I,
 Pos: [198, 200, 206] ccc => cc,
 Pos: [201, 221] cc => I,
 Pos: [209, 212] cc => I]
Change: 39, Saving: 38

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 8, 21] ccc => cc
Apply:  Pos: [6, 12] cc => I
Apply:  Pos: [15, 20] cc => I
Apply:  Pos: [16, 19] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [26, 29, 34] ccc => cc
Apply:  Pos: [42, 59] cc => I
Apply:  Pos: [44, 53] cc => I
Apply:  Pos: [49, 66] cc => I
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [58, 68] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [69, 81] cc => I
Apply:  Pos: [72, 89] cc => I
Apply:  Pos: [73, 79] cc => I
Apply:  Pos: [77, 83, 92] ccc => cc
Apply:  Pos: [90, 103] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [113, 118] cc => I
Apply:  Pos: [114, 120, 121] ccc => cc
Apply:  Pos: [124, 130, 136] ccc => cc
Apply:  Pos: [125, 131, 138] ccc => cc
Apply:  Pos: [126, 132, 137] ccc => cc
Apply:  Pos: [129, 133] cc => I
Apply:  Pos: [134, 149] cc => I
Apply:  Pos: [143, 151] cc => I
Apply:  Pos: [147, 153] cc => I
Apply:  Pos: [159, 169] cc => I
Apply:  Pos: [172, 188] cc => I
Apply:  Pos: [173, 182] cc => I
Apply:  Pos: [183, 202] cc => I
Apply:  Pos: [187, 191, 195] ccc => cc
Apply:  Pos: [189, 197] cc => I
Apply:  Pos: [193, 196] cc => I
Apply:  Pos: [194, 199] cc => I
Apply:  Pos: [198, 200, 206] ccc => cc
Apply:  Pos: [201, 221] cc => I
Apply:  Pos: [209, 212] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015626192092895508

[17, 1], [10, 9], [18, 2], [0, 7], [13, 15], [3, 14], [9, 2], [4, 14], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [13, 15], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [4, 14], [8, 16], [0, 18], [7, 17], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [7, 17], [2, 6], [3, 4], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [1, 19], [7, 16], [10, 6], [9, 2], [17, 19], [8, 16], [18, 1], [3, 4], [6, 3], [2, 1], [0, 17], [19, 4], [13, 11], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [8, 16], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [0, 17], [2, 5], [15, 17], [16, 19], [13, 11], [6, 14], [12, 9], [2, 5], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [12, 10], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [19, 4], [4, 14], [9, 2], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [5, 14], [11, 12], [10, 2], [5, 4], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  4.251618385314941

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[41, 58]
[56, 74]
[61, 82]
[83, 89]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 10, 15]
[24, 28, 39]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[137, 147, 150]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[41, 58]
[56, 74]
[61, 82]
[83, 89]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6562516689300537

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10, 15] ccc => cc, Pos: [7, 21] cc => I, Pos: [7, 21] cc => I, Pos: [24, 28, 39] ccc => cc, Pos: [41, 58] cc => I, Pos: [41, 58] cc => I, Pos: [56, 74] cc => I, Pos: [56, 74] cc => I, Pos: [61, 82] cc => I, Pos: [61, 82] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [137, 147, 150] ccc => cc]

Plan: 1
[Pos: [4, 10, 15] ccc => cc,
 Pos: [7, 21] cc => I,
 Pos: [24, 28, 39] ccc => cc,
 Pos: [41, 58] cc => I,
 Pos: [56, 74] cc => I,
 Pos: [61, 82] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [137, 147, 150] ccc => cc]
Change: 8, Saving: 8

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015623807907104492

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 10, 15] ccc => cc,
 Pos: [7, 21] cc => I,
 Pos: [24, 28, 39] ccc => cc,
 Pos: [41, 58] cc => I,
 Pos: [56, 74] cc => I,
 Pos: [61, 82] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [137, 147, 150] ccc => cc]
Change: 8, Saving: 8

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 10, 15] ccc => cc
Apply:  Pos: [7, 21] cc => I
Apply:  Pos: [24, 28, 39] ccc => cc
Apply:  Pos: [41, 58] cc => I
Apply:  Pos: [56, 74] cc => I
Apply:  Pos: [61, 82] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [137, 147, 150] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [1, 19], [7, 16], [10, 6], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [13, 11], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 9], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [12, 10], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [19, 4], [5, 4], [9, 2], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.671875476837158

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[48, 52, 56]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3751895427703857

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 52, 56] ccc => cc]

Plan: 1
[Pos: [48, 52, 56] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 52, 56] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [48, 52, 56] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [1, 19], [7, 16], [10, 3], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [13, 11], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 9], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [12, 10], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [5, 4], [19, 4], [9, 2], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.3751895427703857

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.359720230102539

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [1, 19], [7, 16], [10, 3], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [13, 11], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 9], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [12, 10], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [19, 4], [5, 4], [9, 2], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.359720230102539

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [142] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 284

Reduced: 
 - size: 83 (36.89%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07813310623168945

[17, 1], [10, 9], [18, 2], [0, 7], [13, 15], [3, 4], [1, 5], [9, 2], [4, 14], [12, 10], [11, 18], [15, 17], [1, 5], [10, 6], [18, 2], [15, 0], [17, 19], [8, 16], [18, 1], [17, 19], [15, 0], [3, 4], [0, 18], [13, 15], [17, 16], [10, 9], [6, 3], [0, 18], [2, 5], [9, 6], [4, 14], [8, 16], [0, 18], [7, 17], [6, 3], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [1, 16], [15, 0], [10, 9], [7, 8], [5, 14], [18, 2], [6, 3], [1, 19], [12, 0], [18, 5], [7, 17], [10, 9], [2, 6], [3, 4], [12, 18], [5, 4], [13, 11], [1, 16], [0, 7], [18, 2], [17, 16], [9, 6], [12, 10], [5, 4], [1, 19], [9, 2], [13, 11], [12, 0], [1, 5], [9, 6], [5, 14], [13, 11], [10, 2], [15, 17], [1, 19], [7, 8], [10, 6], [13, 11], [9, 2], [12, 0], [17, 19], [8, 16], [18, 1], [3, 4], [6, 3], [2, 1], [0, 17], [5, 14], [10, 9], [19, 4], [7, 8], [13, 11], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [17, 19], [10, 9], [9, 6], [12, 10], [1, 5], [8, 16], [13, 15], [18, 2], [4, 14], [17, 19], [9, 6], [19, 4], [10, 2], [0, 18], [10, 6], [18, 1], [19, 4], [0, 17], [2, 5], [10, 2], [15, 17], [16, 19], [11, 18], [6, 3], [12, 10], [2, 5], [7, 17], [12, 0], [13, 11], [3, 14], [10, 9], [12, 0], [13, 15], [1, 16], [11, 18], [12, 10], [6, 3], [0, 17], [8, 16], [18, 1], [12, 10], [5, 4], [1, 16], [9, 2], [11, 18], [10, 6], [17, 1], [13, 15], [0, 7], [5, 4], [16, 19], [10, 6], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [1, 16], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [1, 16], [11, 18], [9, 6], [3, 4], [17, 1], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [17, 1], [13, 15], [11, 18], [17, 16], [13, 11], [9, 2], [3, 4], [17, 19], [11, 12], [2, 1], [18, 5], [0, 7], [12, 10], [9, 2], [0, 7], [17, 19], [4, 14], [12, 10], [19, 4], [5, 3], [13, 15], [9, 2], [12, 18], [2, 6], [4, 14], [0, 7], [16, 19], [13, 11], [12, 0], [1, 19], [13, 11], [9, 6], [15, 17], [5, 14], [11, 12], [10, 2], [5, 4], [0, 7], [12, 10], [5, 3], [2, 1], [0, 17], [13, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 12]
[16, 19]
[15, 20]
[22, 27]
[27, 32]
[44, 53]
[42, 59]
[57, 65]
[49, 66]
[58, 68]
[63, 71]
[68, 73]
[66, 76]
[73, 79]
[69, 81]
[72, 89]
[79, 93]
[90, 103]
[102, 111]
[104, 112]
[113, 118]
[129, 133]
[137, 142]
[134, 149]
[143, 151]
[147, 153]
[159, 169]
[173, 182]
[172, 188]
[193, 196]
[189, 197]
[194, 199]
[183, 202]
[195, 203]
[196, 207]
[209, 212]
[201, 221]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[5, 8, 21]
[77, 83, 92]
[114, 120, 121]
[126, 132, 137]
[125, 131, 138]
[187, 191, 195]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[26, 29, 34]
[89, 98, 100]
[83, 92, 107]
[124, 130, 136]
[151, 157, 163]
[198, 200, 206]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[206, 215, 218]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 12]
[16, 19]
[15, 20]
[22, 27]
[27, 32]
[44, 53]
[42, 59]
[57, 65]
[49, 66]
[58, 68]
[63, 71]
[68, 73]
[66, 76]
[73, 79]
[69, 81]
[72, 89]
[79, 93]
[90, 103]
[102, 111]
[104, 112]
[113, 118]
[129, 133]
[137, 142]
[134, 149]
[143, 151]
[147, 153]
[159, 169]
[173, 182]
[172, 188]
[193, 196]
[189, 197]
[194, 199]
[183, 202]
[195, 203]
[196, 207]
[209, 212]
[201, 221]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.187811374664307

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 8, 21] ccc => cc, Pos: [6, 12] cc => I, Pos: [6, 12] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [16, 19] cc => I, Pos: [16, 19] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [26, 29, 34] ccc => cc, Pos: [27, 32] cc => I, Pos: [27, 32] cc => I, Pos: [42, 59] cc => I, Pos: [42, 59] cc => I, Pos: [44, 53] cc => I, Pos: [44, 53] cc => I, Pos: [49, 66] cc => I, Pos: [49, 66] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [58, 68] cc => I, Pos: [58, 68] cc => I, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [68, 73] cc => I, Pos: [68, 73] cc => I, Pos: [69, 81] cc => I, Pos: [69, 81] cc => I, Pos: [72, 89] cc => I, Pos: [72, 89] cc => I, Pos: [73, 79] cc => I, Pos: [73, 79] cc => I, Pos: [77, 83, 92] ccc => cc, Pos: [79, 93] cc => I, Pos: [79, 93] cc => I, Pos: [83, 92, 107] ccc => cc, Pos: [89, 98, 100] ccc => cc, Pos: [90, 103] cc => I, Pos: [90, 103] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [113, 118] cc => I, Pos: [113, 118] cc => I, Pos: [114, 120, 121] ccc => cc, Pos: [124, 130, 136] ccc => cc, Pos: [125, 131, 138] ccc => cc, Pos: [126, 132, 137] ccc => cc, Pos: [129, 133] cc => I, Pos: [129, 133] cc => I, Pos: [134, 149] cc => I, Pos: [134, 149] cc => I, Pos: [137, 142] cc => I, Pos: [137, 142] cc => I, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [151, 157, 163] ccc => cc, Pos: [159, 169] cc => I, Pos: [159, 169] cc => I, Pos: [172, 188] cc => I, Pos: [172, 188] cc => I, Pos: [173, 182] cc => I, Pos: [173, 182] cc => I, Pos: [183, 202] cc => I, Pos: [183, 202] cc => I, Pos: [187, 191, 195] ccc => cc, Pos: [189, 197] cc => I, Pos: [189, 197] cc => I, Pos: [193, 196] cc => I, Pos: [193, 196] cc => I, Pos: [194, 199] cc => I, Pos: [194, 199] cc => I, Pos: [195, 203] cc => I, Pos: [195, 203] cc => I, Pos: [196, 207] cc => I, Pos: [196, 207] cc => I, Pos: [198, 200, 206] ccc => cc, Pos: [201, 221] cc => I, Pos: [201, 221] cc => I, Pos: [206, 215, 218] ccc => cc, Pos: [209, 212] cc => I, Pos: [209, 212] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 8, 21] ccc => cc,
 Pos: [6, 12] cc => I,
 Pos: [15, 20] cc => I,
 Pos: [16, 19] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [26, 29, 34] ccc => cc,
 Pos: [42, 59] cc => I,
 Pos: [44, 53] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [68, 73] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [69, 81] cc => I,
 Pos: [72, 89] cc => I,
 Pos: [77, 83, 92] ccc => cc,
 Pos: [79, 93] cc => I,
 Pos: [90, 103] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [114, 120, 121] ccc => cc,
 Pos: [124, 130, 136] ccc => cc,
 Pos: [125, 131, 138] ccc => cc,
 Pos: [137, 142] cc => I,
 Pos: [129, 133] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [151, 157, 163] ccc => cc,
 Pos: [147, 153] cc => I,
 Pos: [159, 169] cc => I,
 Pos: [172, 188] cc => I,
 Pos: [173, 182] cc => I,
 Pos: [183, 202] cc => I,
 Pos: [187, 191, 195] ccc => cc,
 Pos: [189, 197] cc => I,
 Pos: [193, 196] cc => I,
 Pos: [194, 199] cc => I,
 Pos: [198, 200, 206] ccc => cc,
 Pos: [201, 221] cc => I,
 Pos: [209, 212] cc => I]
Change: 39, Saving: 138

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 8, 21] ccc => cc
Apply:  Pos: [6, 12] cc => I
Apply:  Pos: [15, 20] cc => I
Apply:  Pos: [16, 19] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [26, 29, 34] ccc => cc
Apply:  Pos: [42, 59] cc => I
Apply:  Pos: [44, 53] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [68, 73] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [69, 81] cc => I
Apply:  Pos: [72, 89] cc => I
Apply:  Pos: [77, 83, 92] ccc => cc
Apply:  Pos: [79, 93] cc => I
Apply:  Pos: [90, 103] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [113, 118] cc => I
Apply:  Pos: [114, 120, 121] ccc => cc
Apply:  Pos: [124, 130, 136] ccc => cc
Apply:  Pos: [125, 131, 138] ccc => cc
Apply:  Pos: [137, 142] cc => I
Apply:  Pos: [129, 133] cc => I
Apply:  Pos: [134, 149] cc => I
Apply:  Pos: [151, 157, 163] ccc => cc
Apply:  Pos: [147, 153] cc => I
Apply:  Pos: [159, 169] cc => I
Apply:  Pos: [172, 188] cc => I
Apply:  Pos: [173, 182] cc => I
Apply:  Pos: [183, 202] cc => I
Apply:  Pos: [187, 191, 195] ccc => cc
Apply:  Pos: [189, 197] cc => I
Apply:  Pos: [193, 196] cc => I
Apply:  Pos: [194, 199] cc => I
Apply:  Pos: [198, 200, 206] ccc => cc
Apply:  Pos: [201, 221] cc => I
Apply:  Pos: [209, 212] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 15], [3, 14], [9, 2], [4, 14], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [13, 15], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [4, 14], [8, 16], [0, 18], [7, 17], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [1, 19], [12, 0], [18, 5], [7, 17], [2, 6], [3, 4], [12, 18], [13, 11], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [7, 16], [10, 6], [9, 2], [17, 19], [8, 16], [18, 1], [3, 4], [6, 3], [2, 1], [0, 17], [19, 4], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [8, 16], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [0, 17], [2, 5], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [2, 5], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [5, 4], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [2, 5], [16, 19], [0, 18], [13, 11], [15, 17], [5, 4], [9, 6], [7, 8], [12, 0], [2, 6], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [19, 4], [4, 14], [9, 2], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [5, 14], [11, 12], [10, 2], [5, 4], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  4.187811374664307

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[42, 59]
[57, 74]
[62, 82]
[83, 89]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 10, 15]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[137, 147, 150]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[42, 59]
[57, 74]
[62, 82]
[83, 89]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6595709323883057

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10, 15] ccc => cc, Pos: [7, 21] cc => I, Pos: [7, 21] cc => I, Pos: [42, 59] cc => I, Pos: [42, 59] cc => I, Pos: [57, 74] cc => I, Pos: [57, 74] cc => I, Pos: [62, 82] cc => I, Pos: [62, 82] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [137, 147, 150] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 10, 15] ccc => cc,
 Pos: [7, 21] cc => I,
 Pos: [42, 59] cc => I,
 Pos: [57, 74] cc => I,
 Pos: [62, 82] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [137, 147, 150] ccc => cc]
Change: 7, Saving: 24

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 10, 15] ccc => cc
Apply:  Pos: [7, 21] cc => I
Apply:  Pos: [42, 59] cc => I
Apply:  Pos: [57, 74] cc => I
Apply:  Pos: [62, 82] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [137, 147, 150] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 17], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [1, 19], [12, 0], [18, 5], [7, 17], [2, 6], [12, 18], [13, 11], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [7, 16], [10, 6], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [5, 4], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [2, 5], [16, 19], [0, 18], [13, 11], [15, 17], [5, 4], [9, 6], [7, 8], [12, 0], [2, 6], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [19, 4], [5, 4], [9, 2], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.6595709323883057

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 54, 57]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.390916585922241

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [50, 54, 57] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [50, 54, 57] ccc => cc]
Change: 1, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [50, 54, 57] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 17], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [1, 19], [12, 0], [18, 5], [7, 17], [2, 6], [12, 18], [13, 11], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [7, 16], [10, 3], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [5, 4], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [2, 5], [16, 19], [0, 18], [13, 11], [15, 17], [5, 4], [9, 6], [7, 8], [12, 0], [2, 6], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [5, 4], [19, 4], [9, 2], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.390916585922241

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3763046264648438

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 17], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [1, 19], [12, 0], [18, 5], [7, 17], [2, 6], [12, 18], [13, 11], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [7, 16], [10, 3], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [5, 4], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [2, 5], [16, 19], [0, 18], [13, 11], [15, 17], [5, 4], [9, 6], [7, 8], [12, 0], [2, 6], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [19, 4], [5, 4], [9, 2], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.3763046264648438

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [143] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 286

Reduced: 
 - size: 82 (36.44%)
 - cycle: 164 (36.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374308586120605

[17, 1], [10, 9], [18, 2], [0, 7], [13, 15], [3, 4], [1, 5], [9, 2], [4, 14], [12, 10], [11, 18], [15, 17], [1, 5], [10, 6], [18, 2], [15, 0], [17, 19], [8, 16], [18, 1], [17, 19], [15, 0], [3, 4], [0, 18], [13, 15], [17, 16], [10, 9], [6, 3], [0, 18], [2, 5], [9, 6], [4, 14], [8, 16], [0, 18], [7, 17], [6, 3], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [1, 16], [15, 0], [10, 9], [7, 8], [5, 14], [18, 2], [6, 3], [1, 19], [12, 0], [18, 5], [7, 17], [10, 9], [2, 6], [3, 4], [12, 18], [5, 4], [13, 11], [1, 16], [0, 7], [18, 2], [17, 16], [9, 6], [12, 10], [5, 4], [1, 19], [9, 2], [13, 11], [12, 0], [1, 5], [9, 6], [5, 14], [13, 11], [10, 2], [15, 17], [1, 19], [7, 8], [10, 6], [13, 11], [9, 2], [12, 0], [17, 19], [8, 16], [18, 1], [3, 4], [6, 3], [2, 1], [0, 17], [5, 14], [10, 9], [19, 4], [7, 8], [13, 11], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [17, 19], [10, 9], [9, 6], [12, 10], [1, 5], [8, 16], [13, 15], [18, 2], [4, 14], [17, 19], [9, 6], [19, 4], [10, 2], [0, 18], [10, 6], [18, 1], [19, 4], [0, 17], [2, 5], [10, 2], [15, 17], [16, 19], [11, 18], [6, 3], [12, 10], [2, 5], [7, 17], [12, 0], [13, 11], [3, 14], [10, 9], [12, 0], [13, 15], [1, 16], [11, 18], [12, 10], [6, 3], [0, 17], [8, 16], [18, 1], [12, 10], [5, 4], [1, 16], [9, 2], [11, 18], [10, 6], [17, 1], [13, 15], [0, 7], [5, 4], [16, 19], [10, 6], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [1, 16], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [1, 16], [11, 18], [9, 6], [3, 4], [17, 1], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [17, 1], [13, 15], [11, 18], [17, 16], [13, 11], [9, 2], [3, 4], [17, 19], [11, 12], [2, 1], [18, 5], [0, 7], [12, 10], [9, 2], [0, 7], [17, 19], [4, 14], [12, 10], [19, 4], [5, 3], [13, 15], [9, 2], [12, 18], [2, 6], [4, 14], [0, 7], [16, 19], [13, 11], [12, 0], [1, 19], [13, 11], [9, 6], [15, 17], [5, 14], [11, 12], [10, 2], [5, 4], [0, 7], [12, 10], [5, 3], [2, 1], [0, 17], [13, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 12]
[16, 19]
[15, 20]
[22, 27]
[27, 32]
[44, 53]
[42, 59]
[57, 65]
[49, 66]
[58, 68]
[63, 71]
[68, 73]
[66, 76]
[73, 79]
[69, 81]
[72, 89]
[79, 93]
[90, 103]
[102, 111]
[104, 112]
[113, 118]
[129, 133]
[137, 142]
[134, 149]
[143, 151]
[147, 153]
[159, 169]
[173, 182]
[172, 188]
[193, 196]
[189, 197]
[194, 199]
[183, 202]
[195, 203]
[196, 207]
[209, 212]
[201, 221]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[5, 8, 21]
[77, 83, 92]
[114, 120, 121]
[126, 132, 137]
[125, 131, 138]
[187, 191, 195]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[26, 29, 34]
[89, 98, 100]
[83, 92, 107]
[124, 130, 136]
[151, 157, 163]
[198, 200, 206]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[206, 215, 218]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 12]
[16, 19]
[15, 20]
[22, 27]
[27, 32]
[44, 53]
[42, 59]
[57, 65]
[49, 66]
[58, 68]
[63, 71]
[68, 73]
[66, 76]
[73, 79]
[69, 81]
[72, 89]
[79, 93]
[90, 103]
[102, 111]
[104, 112]
[113, 118]
[129, 133]
[137, 142]
[134, 149]
[143, 151]
[147, 153]
[159, 169]
[173, 182]
[172, 188]
[193, 196]
[189, 197]
[194, 199]
[183, 202]
[195, 203]
[196, 207]
[209, 212]
[201, 221]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.205970287322998

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 8, 21] ccc => cc, Pos: [6, 12] cc => I, Pos: [6, 12] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [16, 19] cc => I, Pos: [16, 19] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [26, 29, 34] ccc => cc, Pos: [27, 32] cc => I, Pos: [27, 32] cc => I, Pos: [42, 59] cc => I, Pos: [42, 59] cc => I, Pos: [44, 53] cc => I, Pos: [44, 53] cc => I, Pos: [49, 66] cc => I, Pos: [49, 66] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [58, 68] cc => I, Pos: [58, 68] cc => I, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [68, 73] cc => I, Pos: [68, 73] cc => I, Pos: [69, 81] cc => I, Pos: [69, 81] cc => I, Pos: [72, 89] cc => I, Pos: [72, 89] cc => I, Pos: [73, 79] cc => I, Pos: [73, 79] cc => I, Pos: [77, 83, 92] ccc => cc, Pos: [79, 93] cc => I, Pos: [79, 93] cc => I, Pos: [83, 92, 107] ccc => cc, Pos: [89, 98, 100] ccc => cc, Pos: [90, 103] cc => I, Pos: [90, 103] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [113, 118] cc => I, Pos: [113, 118] cc => I, Pos: [114, 120, 121] ccc => cc, Pos: [124, 130, 136] ccc => cc, Pos: [125, 131, 138] ccc => cc, Pos: [126, 132, 137] ccc => cc, Pos: [129, 133] cc => I, Pos: [129, 133] cc => I, Pos: [134, 149] cc => I, Pos: [134, 149] cc => I, Pos: [137, 142] cc => I, Pos: [137, 142] cc => I, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [151, 157, 163] ccc => cc, Pos: [159, 169] cc => I, Pos: [159, 169] cc => I, Pos: [172, 188] cc => I, Pos: [172, 188] cc => I, Pos: [173, 182] cc => I, Pos: [173, 182] cc => I, Pos: [183, 202] cc => I, Pos: [183, 202] cc => I, Pos: [187, 191, 195] ccc => cc, Pos: [189, 197] cc => I, Pos: [189, 197] cc => I, Pos: [193, 196] cc => I, Pos: [193, 196] cc => I, Pos: [194, 199] cc => I, Pos: [194, 199] cc => I, Pos: [195, 203] cc => I, Pos: [195, 203] cc => I, Pos: [196, 207] cc => I, Pos: [196, 207] cc => I, Pos: [198, 200, 206] ccc => cc, Pos: [201, 221] cc => I, Pos: [201, 221] cc => I, Pos: [206, 215, 218] ccc => cc, Pos: [209, 212] cc => I, Pos: [209, 212] cc => I]

--------End Timer [Generate Plans]:  0.10938620567321777

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 8, 21] ccc => cc,
 Pos: [6, 12] cc => I,
 Pos: [15, 20] cc => I,
 Pos: [16, 19] cc => I,
 Pos: [27, 32] cc => I,
 Pos: [26, 29, 34] ccc => cc,
 Pos: [42, 59] cc => I,
 Pos: [44, 53] cc => I,
 Pos: [49, 66] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [68, 73] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [69, 81] cc => I,
 Pos: [89, 98, 100] ccc => cc,
 Pos: [77, 83, 92] ccc => cc,
 Pos: [79, 93] cc => I,
 Pos: [90, 103] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [114, 120, 121] ccc => cc,
 Pos: [124, 130, 136] ccc => cc,
 Pos: [125, 131, 138] ccc => cc,
 Pos: [137, 142] cc => I,
 Pos: [129, 133] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [151, 157, 163] ccc => cc,
 Pos: [147, 153] cc => I,
 Pos: [159, 169] cc => I,
 Pos: [172, 188] cc => I,
 Pos: [173, 182] cc => I,
 Pos: [183, 202] cc => I,
 Pos: [195, 203] cc => I,
 Pos: [189, 197] cc => I,
 Pos: [193, 196] cc => I,
 Pos: [194, 199] cc => I,
 Pos: [198, 200, 206] ccc => cc,
 Pos: [201, 221] cc => I,
 Pos: [209, 212] cc => I]
Change: 39, Saving: 39

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 8, 21] ccc => cc
Apply:  Pos: [6, 12] cc => I
Apply:  Pos: [15, 20] cc => I
Apply:  Pos: [16, 19] cc => I
Apply:  Pos: [27, 32] cc => I
Apply:  Pos: [26, 29, 34] ccc => cc
Apply:  Pos: [42, 59] cc => I
Apply:  Pos: [44, 53] cc => I
Apply:  Pos: [49, 66] cc => I
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [68, 73] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [69, 81] cc => I
Apply:  Pos: [89, 98, 100] ccc => cc
Apply:  Pos: [77, 83, 92] ccc => cc
Apply:  Pos: [79, 93] cc => I
Apply:  Pos: [90, 103] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [113, 118] cc => I
Apply:  Pos: [114, 120, 121] ccc => cc
Apply:  Pos: [124, 130, 136] ccc => cc
Apply:  Pos: [125, 131, 138] ccc => cc
Apply:  Pos: [137, 142] cc => I
Apply:  Pos: [129, 133] cc => I
Apply:  Pos: [134, 149] cc => I
Apply:  Pos: [151, 157, 163] ccc => cc
Apply:  Pos: [147, 153] cc => I
Apply:  Pos: [159, 169] cc => I
Apply:  Pos: [172, 188] cc => I
Apply:  Pos: [173, 182] cc => I
Apply:  Pos: [183, 202] cc => I
Apply:  Pos: [195, 203] cc => I
Apply:  Pos: [189, 197] cc => I
Apply:  Pos: [193, 196] cc => I
Apply:  Pos: [194, 199] cc => I
Apply:  Pos: [198, 200, 206] ccc => cc
Apply:  Pos: [201, 221] cc => I
Apply:  Pos: [209, 212] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 15], [3, 14], [9, 2], [4, 14], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [0, 18], [13, 15], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [4, 14], [8, 16], [7, 17], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [7, 17], [2, 6], [3, 4], [12, 18], [13, 11], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [5, 14], [10, 2], [15, 17], [1, 19], [7, 16], [10, 6], [9, 2], [17, 19], [8, 16], [18, 1], [3, 4], [6, 3], [2, 1], [0, 17], [18, 5], [19, 4], [10, 6], [1, 19], [11, 12], [3, 4], [5, 14], [6, 3], [2, 1], [12, 10], [1, 5], [8, 16], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [0, 17], [2, 5], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [2, 5], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [5, 4], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [2, 5], [16, 19], [0, 18], [13, 11], [15, 17], [5, 4], [9, 6], [7, 8], [12, 0], [2, 6], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 2], [11, 12], [2, 1], [18, 5], [19, 4], [4, 14], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [5, 14], [11, 12], [10, 2], [5, 4], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  4.315356492996216

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 22]
[41, 60]
[58, 75]
[63, 83]
[84, 90]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 10, 16]
[24, 28, 39]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[50, 64, 70]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[138, 147, 150]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 22]
[41, 60]
[58, 75]
[63, 83]
[84, 90]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.672727584838867

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10, 16] ccc => cc, Pos: [7, 22] cc => I, Pos: [7, 22] cc => I, Pos: [24, 28, 39] ccc => cc, Pos: [41, 60] cc => I, Pos: [41, 60] cc => I, Pos: [50, 64, 70] ccc => cc, Pos: [58, 75] cc => I, Pos: [58, 75] cc => I, Pos: [63, 83] cc => I, Pos: [63, 83] cc => I, Pos: [84, 90] cc => I, Pos: [84, 90] cc => I, Pos: [138, 147, 150] ccc => cc]

--------End Timer [Generate Plans]:  0.03125309944152832

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 10, 16] ccc => cc,
 Pos: [7, 22] cc => I,
 Pos: [24, 28, 39] ccc => cc,
 Pos: [41, 60] cc => I,
 Pos: [50, 64, 70] ccc => cc,
 Pos: [58, 75] cc => I,
 Pos: [63, 83] cc => I,
 Pos: [84, 90] cc => I,
 Pos: [138, 147, 150] ccc => cc]
Change: 9, Saving: 9

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 10, 16] ccc => cc
Apply:  Pos: [7, 22] cc => I
Apply:  Pos: [24, 28, 39] ccc => cc
Apply:  Pos: [41, 60] cc => I
Apply:  Pos: [50, 64, 70] ccc => cc
Apply:  Pos: [58, 75] cc => I
Apply:  Pos: [63, 83] cc => I
Apply:  Pos: [84, 90] cc => I
Apply:  Pos: [138, 147, 150] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [0, 18], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [13, 11], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [18, 5], [10, 2], [15, 17], [1, 19], [7, 16], [10, 6], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [5, 14], [19, 4], [10, 6], [1, 19], [11, 12], [3, 4], [6, 3], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [5, 4], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [2, 5], [16, 19], [0, 18], [13, 11], [15, 17], [5, 4], [9, 6], [7, 8], [12, 0], [2, 6], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 2], [11, 12], [2, 1], [18, 5], [19, 4], [5, 4], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.7039806842803955

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 54, 58]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.375239372253418

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [50, 54, 58] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [50, 54, 58] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [50, 54, 58] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [0, 18], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [13, 11], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [18, 5], [1, 5], [10, 2], [15, 17], [1, 19], [7, 16], [10, 3], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [5, 14], [19, 4], [1, 19], [11, 12], [3, 4], [6, 3], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [5, 4], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [2, 5], [16, 19], [0, 18], [13, 11], [15, 17], [5, 4], [9, 6], [7, 8], [12, 0], [2, 6], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 2], [11, 12], [2, 1], [18, 5], [5, 4], [19, 4], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.375239372253418

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.390916347503662

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [0, 18], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [13, 11], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [18, 5], [10, 2], [15, 17], [1, 19], [7, 16], [10, 3], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [5, 14], [19, 4], [1, 19], [11, 12], [3, 4], [6, 3], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [5, 4], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [2, 5], [16, 19], [0, 18], [13, 11], [15, 17], [5, 4], [9, 6], [7, 8], [12, 0], [2, 6], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 2], [11, 12], [2, 1], [18, 5], [19, 4], [5, 4], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.390916347503662

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [141] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 282

Reduced: 
 - size: 84 (37.33%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.0937490463256836

[17, 1], [10, 9], [18, 2], [0, 7], [13, 15], [3, 4], [1, 5], [9, 2], [4, 14], [12, 10], [11, 18], [15, 17], [1, 5], [10, 6], [18, 2], [15, 0], [17, 19], [8, 16], [18, 1], [17, 19], [15, 0], [3, 4], [0, 18], [13, 15], [17, 16], [10, 9], [6, 3], [0, 18], [2, 5], [9, 6], [4, 14], [8, 16], [0, 18], [7, 17], [6, 3], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [1, 16], [15, 0], [10, 9], [7, 8], [5, 14], [18, 2], [6, 3], [1, 19], [12, 0], [18, 5], [7, 17], [10, 9], [2, 6], [3, 4], [12, 18], [5, 4], [13, 11], [1, 16], [0, 7], [18, 2], [17, 16], [9, 6], [12, 10], [5, 4], [1, 19], [9, 2], [13, 11], [12, 0], [1, 5], [9, 6], [5, 14], [13, 11], [10, 2], [15, 17], [1, 19], [7, 8], [10, 6], [13, 11], [9, 2], [12, 0], [17, 19], [8, 16], [18, 1], [3, 4], [6, 3], [2, 1], [0, 17], [5, 14], [10, 9], [19, 4], [7, 8], [13, 11], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [17, 19], [10, 9], [9, 6], [12, 10], [1, 5], [8, 16], [13, 15], [18, 2], [4, 14], [17, 19], [9, 6], [19, 4], [10, 2], [0, 18], [10, 6], [18, 1], [19, 4], [0, 17], [2, 5], [10, 2], [15, 17], [16, 19], [11, 18], [6, 3], [12, 10], [2, 5], [7, 17], [12, 0], [13, 11], [3, 14], [10, 9], [12, 0], [13, 15], [1, 16], [11, 18], [12, 10], [6, 3], [0, 17], [8, 16], [18, 1], [12, 10], [5, 4], [1, 16], [9, 2], [11, 18], [10, 6], [17, 1], [13, 15], [0, 7], [5, 4], [16, 19], [10, 6], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [1, 16], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [1, 16], [11, 18], [9, 6], [3, 4], [17, 1], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [17, 1], [13, 15], [11, 18], [17, 16], [13, 11], [9, 2], [3, 4], [17, 19], [11, 12], [2, 1], [18, 5], [0, 7], [12, 10], [9, 2], [0, 7], [17, 19], [4, 14], [12, 10], [19, 4], [5, 3], [13, 15], [9, 2], [12, 18], [2, 6], [4, 14], [0, 7], [16, 19], [13, 11], [12, 0], [1, 19], [13, 11], [9, 6], [15, 17], [5, 14], [11, 12], [10, 2], [5, 4], [0, 7], [12, 10], [5, 3], [2, 1], [0, 17], [13, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 12]
[16, 19]
[15, 20]
[22, 27]
[27, 32]
[44, 53]
[42, 59]
[57, 65]
[49, 66]
[58, 68]
[63, 71]
[68, 73]
[66, 76]
[73, 79]
[69, 81]
[72, 89]
[79, 93]
[90, 103]
[102, 111]
[104, 112]
[113, 118]
[129, 133]
[137, 142]
[134, 149]
[143, 151]
[147, 153]
[159, 169]
[173, 182]
[172, 188]
[193, 196]
[189, 197]
[194, 199]
[183, 202]
[195, 203]
[196, 207]
[209, 212]
[201, 221]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[5, 8, 21]
[77, 83, 92]
[114, 120, 121]
[126, 132, 137]
[125, 131, 138]
[187, 191, 195]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[26, 29, 34]
[89, 98, 100]
[83, 92, 107]
[124, 130, 136]
[151, 157, 163]
[198, 200, 206]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[206, 215, 218]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 12]
[16, 19]
[15, 20]
[22, 27]
[27, 32]
[44, 53]
[42, 59]
[57, 65]
[49, 66]
[58, 68]
[63, 71]
[68, 73]
[66, 76]
[73, 79]
[69, 81]
[72, 89]
[79, 93]
[90, 103]
[102, 111]
[104, 112]
[113, 118]
[129, 133]
[137, 142]
[134, 149]
[143, 151]
[147, 153]
[159, 169]
[173, 182]
[172, 188]
[193, 196]
[189, 197]
[194, 199]
[183, 202]
[195, 203]
[196, 207]
[209, 212]
[201, 221]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.218699216842651

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 8, 21] ccc => cc, Pos: [6, 12] cc => I, Pos: [6, 12] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [16, 19] cc => I, Pos: [16, 19] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [26, 29, 34] ccc => cc, Pos: [27, 32] cc => I, Pos: [27, 32] cc => I, Pos: [42, 59] cc => I, Pos: [42, 59] cc => I, Pos: [44, 53] cc => I, Pos: [44, 53] cc => I, Pos: [49, 66] cc => I, Pos: [49, 66] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [58, 68] cc => I, Pos: [58, 68] cc => I, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [68, 73] cc => I, Pos: [68, 73] cc => I, Pos: [69, 81] cc => I, Pos: [69, 81] cc => I, Pos: [72, 89] cc => I, Pos: [72, 89] cc => I, Pos: [73, 79] cc => I, Pos: [73, 79] cc => I, Pos: [77, 83, 92] ccc => cc, Pos: [79, 93] cc => I, Pos: [79, 93] cc => I, Pos: [83, 92, 107] ccc => cc, Pos: [89, 98, 100] ccc => cc, Pos: [90, 103] cc => I, Pos: [90, 103] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [113, 118] cc => I, Pos: [113, 118] cc => I, Pos: [114, 120, 121] ccc => cc, Pos: [124, 130, 136] ccc => cc, Pos: [125, 131, 138] ccc => cc, Pos: [126, 132, 137] ccc => cc, Pos: [129, 133] cc => I, Pos: [129, 133] cc => I, Pos: [134, 149] cc => I, Pos: [134, 149] cc => I, Pos: [137, 142] cc => I, Pos: [137, 142] cc => I, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [151, 157, 163] ccc => cc, Pos: [159, 169] cc => I, Pos: [159, 169] cc => I, Pos: [172, 188] cc => I, Pos: [172, 188] cc => I, Pos: [173, 182] cc => I, Pos: [173, 182] cc => I, Pos: [183, 202] cc => I, Pos: [183, 202] cc => I, Pos: [187, 191, 195] ccc => cc, Pos: [189, 197] cc => I, Pos: [189, 197] cc => I, Pos: [193, 196] cc => I, Pos: [193, 196] cc => I, Pos: [194, 199] cc => I, Pos: [194, 199] cc => I, Pos: [195, 203] cc => I, Pos: [195, 203] cc => I, Pos: [196, 207] cc => I, Pos: [196, 207] cc => I, Pos: [198, 200, 206] ccc => cc, Pos: [201, 221] cc => I, Pos: [201, 221] cc => I, Pos: [206, 215, 218] ccc => cc, Pos: [209, 212] cc => I, Pos: [209, 212] cc => I]

--------End Timer [Generate Plans]:  0.09415197372436523

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 8, 21] ccc => cc,
 Pos: [6, 12] cc => I,
 Pos: [15, 20] cc => I,
 Pos: [16, 19] cc => I,
 Pos: [27, 32] cc => I,
 Pos: [26, 29, 34] ccc => cc,
 Pos: [42, 59] cc => I,
 Pos: [44, 53] cc => I,
 Pos: [49, 66] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [58, 68] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [69, 81] cc => I,
 Pos: [89, 98, 100] ccc => cc,
 Pos: [73, 79] cc => I,
 Pos: [83, 92, 107] ccc => cc,
 Pos: [90, 103] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [114, 120, 121] ccc => cc,
 Pos: [124, 130, 136] ccc => cc,
 Pos: [125, 131, 138] ccc => cc,
 Pos: [137, 142] cc => I,
 Pos: [129, 133] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [143, 151] cc => I,
 Pos: [147, 153] cc => I,
 Pos: [159, 169] cc => I,
 Pos: [172, 188] cc => I,
 Pos: [173, 182] cc => I,
 Pos: [183, 202] cc => I,
 Pos: [187, 191, 195] ccc => cc,
 Pos: [189, 197] cc => I,
 Pos: [196, 207] cc => I,
 Pos: [194, 199] cc => I,
 Pos: [206, 215, 218] ccc => cc,
 Pos: [201, 221] cc => I,
 Pos: [209, 212] cc => I]
Change: 39, Saving: 39

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 8, 21] ccc => cc
Apply:  Pos: [6, 12] cc => I
Apply:  Pos: [15, 20] cc => I
Apply:  Pos: [16, 19] cc => I
Apply:  Pos: [27, 32] cc => I
Apply:  Pos: [26, 29, 34] ccc => cc
Apply:  Pos: [42, 59] cc => I
Apply:  Pos: [44, 53] cc => I
Apply:  Pos: [49, 66] cc => I
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [58, 68] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [69, 81] cc => I
Apply:  Pos: [89, 98, 100] ccc => cc
Apply:  Pos: [73, 79] cc => I
Apply:  Pos: [83, 92, 107] ccc => cc
Apply:  Pos: [90, 103] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [113, 118] cc => I
Apply:  Pos: [114, 120, 121] ccc => cc
Apply:  Pos: [124, 130, 136] ccc => cc
Apply:  Pos: [125, 131, 138] ccc => cc
Apply:  Pos: [137, 142] cc => I
Apply:  Pos: [129, 133] cc => I
Apply:  Pos: [134, 149] cc => I
Apply:  Pos: [143, 151] cc => I
Apply:  Pos: [147, 153] cc => I
Apply:  Pos: [159, 169] cc => I
Apply:  Pos: [172, 188] cc => I
Apply:  Pos: [173, 182] cc => I
Apply:  Pos: [183, 202] cc => I
Apply:  Pos: [187, 191, 195] ccc => cc
Apply:  Pos: [189, 197] cc => I
Apply:  Pos: [196, 207] cc => I
Apply:  Pos: [194, 199] cc => I
Apply:  Pos: [206, 215, 218] ccc => cc
Apply:  Pos: [201, 221] cc => I
Apply:  Pos: [209, 212] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 15], [3, 14], [9, 2], [4, 14], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [0, 18], [13, 15], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [4, 14], [8, 16], [7, 17], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [7, 17], [2, 6], [3, 4], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [5, 14], [10, 2], [15, 17], [1, 19], [7, 8], [10, 6], [9, 2], [17, 19], [7, 8], [18, 1], [3, 4], [6, 3], [2, 1], [0, 17], [18, 5], [19, 4], [8, 16], [13, 11], [10, 6], [1, 19], [11, 12], [3, 4], [5, 14], [6, 3], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [0, 17], [2, 5], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [2, 5], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [0, 7], [4, 14], [19, 4], [9, 2], [12, 18], [2, 6], [5, 4], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  4.312851190567017

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 22]
[53, 57]
[41, 59]
[62, 83]
[84, 90]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 10, 16]
[24, 28, 39]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[49, 63, 71]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 22]
[53, 57]
[41, 59]
[62, 83]
[84, 90]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.703449010848999

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10, 16] ccc => cc, Pos: [7, 22] cc => I, Pos: [7, 22] cc => I, Pos: [24, 28, 39] ccc => cc, Pos: [41, 59] cc => I, Pos: [41, 59] cc => I, Pos: [49, 63, 71] ccc => cc, Pos: [53, 57] cc => I, Pos: [53, 57] cc => I, Pos: [62, 83] cc => I, Pos: [62, 83] cc => I, Pos: [84, 90] cc => I, Pos: [84, 90] cc => I]

--------End Timer [Generate Plans]:  0.015518665313720703

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 10, 16] ccc => cc,
 Pos: [7, 22] cc => I,
 Pos: [24, 28, 39] ccc => cc,
 Pos: [41, 59] cc => I,
 Pos: [49, 63, 71] ccc => cc,
 Pos: [53, 57] cc => I,
 Pos: [62, 83] cc => I,
 Pos: [84, 90] cc => I]
Change: 8, Saving: 8

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 10, 16] ccc => cc
Apply:  Pos: [7, 22] cc => I
Apply:  Pos: [24, 28, 39] ccc => cc
Apply:  Pos: [41, 59] cc => I
Apply:  Pos: [49, 63, 71] ccc => cc
Apply:  Pos: [53, 57] cc => I
Apply:  Pos: [62, 83] cc => I
Apply:  Pos: [84, 90] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [0, 18], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [18, 5], [10, 2], [15, 17], [1, 19], [10, 6], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [5, 14], [19, 4], [8, 16], [13, 11], [10, 6], [1, 19], [11, 12], [3, 4], [6, 3], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [0, 7], [4, 14], [19, 4], [9, 2], [12, 18], [2, 6], [5, 4], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.7189676761627197

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[48, 52, 58]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3912768363952637

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 52, 58] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 52, 58] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [48, 52, 58] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [0, 18], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [18, 5], [1, 5], [10, 2], [15, 17], [1, 19], [10, 3], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [5, 14], [19, 4], [8, 16], [13, 11], [1, 19], [11, 12], [3, 4], [6, 3], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [0, 7], [4, 14], [19, 4], [9, 2], [12, 18], [2, 6], [5, 4], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.3912768363952637

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3590657711029053

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [0, 18], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [18, 5], [10, 2], [15, 17], [1, 19], [10, 3], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [5, 14], [19, 4], [8, 16], [13, 11], [1, 19], [11, 12], [3, 4], [6, 3], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [0, 7], [4, 14], [19, 4], [9, 2], [12, 18], [2, 6], [5, 4], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.3590657711029053

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [142] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 284

Reduced: 
 - size: 83 (36.89%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07811880111694336

[17, 1], [10, 9], [18, 2], [0, 7], [13, 15], [3, 4], [1, 5], [9, 2], [4, 14], [12, 10], [11, 18], [15, 17], [1, 5], [10, 6], [18, 2], [15, 0], [17, 19], [8, 16], [18, 1], [17, 19], [15, 0], [3, 4], [0, 18], [13, 15], [17, 16], [10, 9], [6, 3], [0, 18], [2, 5], [9, 6], [4, 14], [8, 16], [0, 18], [7, 17], [6, 3], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [1, 16], [15, 0], [10, 9], [7, 8], [5, 14], [18, 2], [6, 3], [1, 19], [12, 0], [18, 5], [7, 17], [10, 9], [2, 6], [3, 4], [12, 18], [5, 4], [13, 11], [1, 16], [0, 7], [18, 2], [17, 16], [9, 6], [12, 10], [5, 4], [1, 19], [9, 2], [13, 11], [12, 0], [1, 5], [9, 6], [5, 14], [13, 11], [10, 2], [15, 17], [1, 19], [7, 8], [10, 6], [13, 11], [9, 2], [12, 0], [17, 19], [8, 16], [18, 1], [3, 4], [6, 3], [2, 1], [0, 17], [5, 14], [10, 9], [19, 4], [7, 8], [13, 11], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [17, 19], [10, 9], [9, 6], [12, 10], [1, 5], [8, 16], [13, 15], [18, 2], [4, 14], [17, 19], [9, 6], [19, 4], [10, 2], [0, 18], [10, 6], [18, 1], [19, 4], [0, 17], [2, 5], [10, 2], [15, 17], [16, 19], [11, 18], [6, 3], [12, 10], [2, 5], [7, 17], [12, 0], [13, 11], [3, 14], [10, 9], [12, 0], [13, 15], [1, 16], [11, 18], [12, 10], [6, 3], [0, 17], [8, 16], [18, 1], [12, 10], [5, 4], [1, 16], [9, 2], [11, 18], [10, 6], [17, 1], [13, 15], [0, 7], [5, 4], [16, 19], [10, 6], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [1, 16], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [1, 16], [11, 18], [9, 6], [3, 4], [17, 1], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [17, 1], [13, 15], [11, 18], [17, 16], [13, 11], [9, 2], [3, 4], [17, 19], [11, 12], [2, 1], [18, 5], [0, 7], [12, 10], [9, 2], [0, 7], [17, 19], [4, 14], [12, 10], [19, 4], [5, 3], [13, 15], [9, 2], [12, 18], [2, 6], [4, 14], [0, 7], [16, 19], [13, 11], [12, 0], [1, 19], [13, 11], [9, 6], [15, 17], [5, 14], [11, 12], [10, 2], [5, 4], [0, 7], [12, 10], [5, 3], [2, 1], [0, 17], [13, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 12]
[16, 19]
[15, 20]
[22, 27]
[27, 32]
[44, 53]
[42, 59]
[57, 65]
[49, 66]
[58, 68]
[63, 71]
[68, 73]
[66, 76]
[73, 79]
[69, 81]
[72, 89]
[79, 93]
[90, 103]
[102, 111]
[104, 112]
[113, 118]
[129, 133]
[137, 142]
[134, 149]
[143, 151]
[147, 153]
[159, 169]
[173, 182]
[172, 188]
[193, 196]
[189, 197]
[194, 199]
[183, 202]
[195, 203]
[196, 207]
[209, 212]
[201, 221]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[5, 8, 21]
[77, 83, 92]
[114, 120, 121]
[126, 132, 137]
[125, 131, 138]
[187, 191, 195]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[26, 29, 34]
[89, 98, 100]
[83, 92, 107]
[124, 130, 136]
[151, 157, 163]
[198, 200, 206]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[206, 215, 218]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 12]
[16, 19]
[15, 20]
[22, 27]
[27, 32]
[44, 53]
[42, 59]
[57, 65]
[49, 66]
[58, 68]
[63, 71]
[68, 73]
[66, 76]
[73, 79]
[69, 81]
[72, 89]
[79, 93]
[90, 103]
[102, 111]
[104, 112]
[113, 118]
[129, 133]
[137, 142]
[134, 149]
[143, 151]
[147, 153]
[159, 169]
[173, 182]
[172, 188]
[193, 196]
[189, 197]
[194, 199]
[183, 202]
[195, 203]
[196, 207]
[209, 212]
[201, 221]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.18750262260437

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 8, 21] ccc => cc, Pos: [6, 12] cc => I, Pos: [6, 12] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [16, 19] cc => I, Pos: [16, 19] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [26, 29, 34] ccc => cc, Pos: [27, 32] cc => I, Pos: [27, 32] cc => I, Pos: [42, 59] cc => I, Pos: [42, 59] cc => I, Pos: [44, 53] cc => I, Pos: [44, 53] cc => I, Pos: [49, 66] cc => I, Pos: [49, 66] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [58, 68] cc => I, Pos: [58, 68] cc => I, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [68, 73] cc => I, Pos: [68, 73] cc => I, Pos: [69, 81] cc => I, Pos: [69, 81] cc => I, Pos: [72, 89] cc => I, Pos: [72, 89] cc => I, Pos: [73, 79] cc => I, Pos: [73, 79] cc => I, Pos: [77, 83, 92] ccc => cc, Pos: [79, 93] cc => I, Pos: [79, 93] cc => I, Pos: [83, 92, 107] ccc => cc, Pos: [89, 98, 100] ccc => cc, Pos: [90, 103] cc => I, Pos: [90, 103] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [113, 118] cc => I, Pos: [113, 118] cc => I, Pos: [114, 120, 121] ccc => cc, Pos: [124, 130, 136] ccc => cc, Pos: [125, 131, 138] ccc => cc, Pos: [126, 132, 137] ccc => cc, Pos: [129, 133] cc => I, Pos: [129, 133] cc => I, Pos: [134, 149] cc => I, Pos: [134, 149] cc => I, Pos: [137, 142] cc => I, Pos: [137, 142] cc => I, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [151, 157, 163] ccc => cc, Pos: [159, 169] cc => I, Pos: [159, 169] cc => I, Pos: [172, 188] cc => I, Pos: [172, 188] cc => I, Pos: [173, 182] cc => I, Pos: [173, 182] cc => I, Pos: [183, 202] cc => I, Pos: [183, 202] cc => I, Pos: [187, 191, 195] ccc => cc, Pos: [189, 197] cc => I, Pos: [189, 197] cc => I, Pos: [193, 196] cc => I, Pos: [193, 196] cc => I, Pos: [194, 199] cc => I, Pos: [194, 199] cc => I, Pos: [195, 203] cc => I, Pos: [195, 203] cc => I, Pos: [196, 207] cc => I, Pos: [196, 207] cc => I, Pos: [198, 200, 206] ccc => cc, Pos: [201, 221] cc => I, Pos: [201, 221] cc => I, Pos: [206, 215, 218] ccc => cc, Pos: [209, 212] cc => I, Pos: [209, 212] cc => I]

--------End Timer [Generate Plans]:  0.10937142372131348

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 8, 21] ccc => cc,
 Pos: [6, 12] cc => I,
 Pos: [15, 20] cc => I,
 Pos: [16, 19] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [26, 29, 34] ccc => cc,
 Pos: [42, 59] cc => I,
 Pos: [44, 53] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [68, 73] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [69, 81] cc => I,
 Pos: [72, 89] cc => I,
 Pos: [77, 83, 92] ccc => cc,
 Pos: [79, 93] cc => I,
 Pos: [90, 103] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [114, 120, 121] ccc => cc,
 Pos: [124, 130, 136] ccc => cc,
 Pos: [125, 131, 138] ccc => cc,
 Pos: [126, 132, 137] ccc => cc,
 Pos: [129, 133] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [143, 151] cc => I,
 Pos: [147, 153] cc => I,
 Pos: [159, 169] cc => I,
 Pos: [172, 188] cc => I,
 Pos: [173, 182] cc => I,
 Pos: [183, 202] cc => I,
 Pos: [195, 203] cc => I,
 Pos: [189, 197] cc => I,
 Pos: [196, 207] cc => I,
 Pos: [194, 199] cc => I,
 Pos: [206, 215, 218] ccc => cc,
 Pos: [201, 221] cc => I,
 Pos: [209, 212] cc => I]
Change: 39, Saving: 38

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 8, 21] ccc => cc
Apply:  Pos: [6, 12] cc => I
Apply:  Pos: [15, 20] cc => I
Apply:  Pos: [16, 19] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [26, 29, 34] ccc => cc
Apply:  Pos: [42, 59] cc => I
Apply:  Pos: [44, 53] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [68, 73] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [69, 81] cc => I
Apply:  Pos: [72, 89] cc => I
Apply:  Pos: [77, 83, 92] ccc => cc
Apply:  Pos: [79, 93] cc => I
Apply:  Pos: [90, 103] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [113, 118] cc => I
Apply:  Pos: [114, 120, 121] ccc => cc
Apply:  Pos: [124, 130, 136] ccc => cc
Apply:  Pos: [125, 131, 138] ccc => cc
Apply:  Pos: [126, 132, 137] ccc => cc
Apply:  Pos: [129, 133] cc => I
Apply:  Pos: [134, 149] cc => I
Apply:  Pos: [143, 151] cc => I
Apply:  Pos: [147, 153] cc => I
Apply:  Pos: [159, 169] cc => I
Apply:  Pos: [172, 188] cc => I
Apply:  Pos: [173, 182] cc => I
Apply:  Pos: [183, 202] cc => I
Apply:  Pos: [195, 203] cc => I
Apply:  Pos: [189, 197] cc => I
Apply:  Pos: [196, 207] cc => I
Apply:  Pos: [194, 199] cc => I
Apply:  Pos: [206, 215, 218] ccc => cc
Apply:  Pos: [201, 221] cc => I
Apply:  Pos: [209, 212] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 15], [3, 14], [9, 2], [4, 14], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [13, 15], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [4, 14], [8, 16], [0, 18], [7, 17], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [1, 19], [12, 0], [18, 5], [7, 17], [2, 6], [3, 4], [12, 18], [13, 11], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [7, 16], [10, 6], [9, 2], [17, 19], [8, 16], [18, 1], [3, 4], [6, 3], [2, 1], [0, 17], [19, 4], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [8, 16], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [0, 17], [2, 5], [15, 17], [16, 19], [13, 11], [6, 14], [12, 9], [2, 5], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [12, 10], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 2], [11, 12], [2, 1], [18, 5], [0, 7], [4, 14], [19, 4], [12, 18], [2, 6], [5, 4], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  4.296874046325684

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[42, 59]
[57, 74]
[62, 82]
[83, 89]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 10, 15]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[42, 59]
[57, 74]
[62, 82]
[83, 89]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6405937671661377

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10, 15] ccc => cc, Pos: [7, 21] cc => I, Pos: [7, 21] cc => I, Pos: [42, 59] cc => I, Pos: [42, 59] cc => I, Pos: [57, 74] cc => I, Pos: [57, 74] cc => I, Pos: [62, 82] cc => I, Pos: [62, 82] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I]

--------End Timer [Generate Plans]:  0.01561117172241211

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 10, 15] ccc => cc,
 Pos: [7, 21] cc => I,
 Pos: [42, 59] cc => I,
 Pos: [57, 74] cc => I,
 Pos: [62, 82] cc => I,
 Pos: [83, 89] cc => I]
Change: 6, Saving: 6

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 10, 15] ccc => cc
Apply:  Pos: [7, 21] cc => I
Apply:  Pos: [42, 59] cc => I
Apply:  Pos: [57, 74] cc => I
Apply:  Pos: [62, 82] cc => I
Apply:  Pos: [83, 89] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 17], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [1, 19], [12, 0], [18, 5], [7, 17], [2, 6], [12, 18], [13, 11], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [7, 16], [10, 6], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 9], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [12, 10], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 2], [11, 12], [2, 1], [18, 5], [0, 7], [4, 14], [19, 4], [12, 18], [2, 6], [5, 4], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.65620493888855

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 54, 57]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.406747817993164

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [50, 54, 57] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [50, 54, 57] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [50, 54, 57] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 17], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [1, 19], [12, 0], [18, 5], [7, 17], [2, 6], [12, 18], [13, 11], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [7, 16], [10, 3], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 9], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [12, 10], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 2], [11, 12], [2, 1], [18, 5], [0, 7], [4, 14], [19, 4], [12, 18], [2, 6], [5, 4], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.406747817993164

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.374718427658081

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 17], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [1, 19], [12, 0], [18, 5], [7, 17], [2, 6], [12, 18], [13, 11], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [7, 16], [10, 3], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 9], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [12, 10], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 2], [11, 12], [2, 1], [18, 5], [0, 7], [4, 14], [19, 4], [12, 18], [2, 6], [5, 4], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.374718427658081

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [143] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 286

Reduced: 
 - size: 82 (36.44%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09375643730163574

[17, 1], [10, 9], [18, 2], [0, 7], [13, 15], [3, 4], [1, 5], [9, 2], [4, 14], [12, 10], [11, 18], [15, 17], [1, 5], [10, 6], [18, 2], [15, 0], [17, 19], [8, 16], [18, 1], [17, 19], [15, 0], [3, 4], [0, 18], [13, 15], [17, 16], [10, 9], [6, 3], [0, 18], [2, 5], [9, 6], [4, 14], [8, 16], [0, 18], [7, 17], [6, 3], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [1, 16], [15, 0], [10, 9], [7, 8], [5, 14], [18, 2], [6, 3], [1, 19], [12, 0], [18, 5], [7, 17], [10, 9], [2, 6], [3, 4], [12, 18], [5, 4], [13, 11], [1, 16], [0, 7], [18, 2], [17, 16], [9, 6], [12, 10], [5, 4], [1, 19], [9, 2], [13, 11], [12, 0], [1, 5], [9, 6], [5, 14], [13, 11], [10, 2], [15, 17], [1, 19], [7, 8], [10, 6], [13, 11], [9, 2], [12, 0], [17, 19], [8, 16], [18, 1], [3, 4], [6, 3], [2, 1], [0, 17], [5, 14], [10, 9], [19, 4], [7, 8], [13, 11], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [17, 19], [10, 9], [9, 6], [12, 10], [1, 5], [8, 16], [13, 15], [18, 2], [4, 14], [17, 19], [9, 6], [19, 4], [10, 2], [0, 18], [10, 6], [18, 1], [19, 4], [0, 17], [2, 5], [10, 2], [15, 17], [16, 19], [11, 18], [6, 3], [12, 10], [2, 5], [7, 17], [12, 0], [13, 11], [3, 14], [10, 9], [12, 0], [13, 15], [1, 16], [11, 18], [12, 10], [6, 3], [0, 17], [8, 16], [18, 1], [12, 10], [5, 4], [1, 16], [9, 2], [11, 18], [10, 6], [17, 1], [13, 15], [0, 7], [5, 4], [16, 19], [10, 6], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [1, 16], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [1, 16], [11, 18], [9, 6], [3, 4], [17, 1], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [17, 1], [13, 15], [11, 18], [17, 16], [13, 11], [9, 2], [3, 4], [17, 19], [11, 12], [2, 1], [18, 5], [0, 7], [12, 10], [9, 2], [0, 7], [17, 19], [4, 14], [12, 10], [19, 4], [5, 3], [13, 15], [9, 2], [12, 18], [2, 6], [4, 14], [0, 7], [16, 19], [13, 11], [12, 0], [1, 19], [13, 11], [9, 6], [15, 17], [5, 14], [11, 12], [10, 2], [5, 4], [0, 7], [12, 10], [5, 3], [2, 1], [0, 17], [13, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 12]
[16, 19]
[15, 20]
[22, 27]
[27, 32]
[44, 53]
[42, 59]
[57, 65]
[49, 66]
[58, 68]
[63, 71]
[68, 73]
[66, 76]
[73, 79]
[69, 81]
[72, 89]
[79, 93]
[90, 103]
[102, 111]
[104, 112]
[113, 118]
[129, 133]
[137, 142]
[134, 149]
[143, 151]
[147, 153]
[159, 169]
[173, 182]
[172, 188]
[193, 196]
[189, 197]
[194, 199]
[183, 202]
[195, 203]
[196, 207]
[209, 212]
[201, 221]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[5, 8, 21]
[77, 83, 92]
[114, 120, 121]
[126, 132, 137]
[125, 131, 138]
[187, 191, 195]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[26, 29, 34]
[89, 98, 100]
[83, 92, 107]
[124, 130, 136]
[151, 157, 163]
[198, 200, 206]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[206, 215, 218]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 12]
[16, 19]
[15, 20]
[22, 27]
[27, 32]
[44, 53]
[42, 59]
[57, 65]
[49, 66]
[58, 68]
[63, 71]
[68, 73]
[66, 76]
[73, 79]
[69, 81]
[72, 89]
[79, 93]
[90, 103]
[102, 111]
[104, 112]
[113, 118]
[129, 133]
[137, 142]
[134, 149]
[143, 151]
[147, 153]
[159, 169]
[173, 182]
[172, 188]
[193, 196]
[189, 197]
[194, 199]
[183, 202]
[195, 203]
[196, 207]
[209, 212]
[201, 221]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.250487327575684

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 8, 21] ccc => cc, Pos: [6, 12] cc => I, Pos: [6, 12] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [16, 19] cc => I, Pos: [16, 19] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [26, 29, 34] ccc => cc, Pos: [27, 32] cc => I, Pos: [27, 32] cc => I, Pos: [42, 59] cc => I, Pos: [42, 59] cc => I, Pos: [44, 53] cc => I, Pos: [44, 53] cc => I, Pos: [49, 66] cc => I, Pos: [49, 66] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [58, 68] cc => I, Pos: [58, 68] cc => I, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [68, 73] cc => I, Pos: [68, 73] cc => I, Pos: [69, 81] cc => I, Pos: [69, 81] cc => I, Pos: [72, 89] cc => I, Pos: [72, 89] cc => I, Pos: [73, 79] cc => I, Pos: [73, 79] cc => I, Pos: [77, 83, 92] ccc => cc, Pos: [79, 93] cc => I, Pos: [79, 93] cc => I, Pos: [83, 92, 107] ccc => cc, Pos: [89, 98, 100] ccc => cc, Pos: [90, 103] cc => I, Pos: [90, 103] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [113, 118] cc => I, Pos: [113, 118] cc => I, Pos: [114, 120, 121] ccc => cc, Pos: [124, 130, 136] ccc => cc, Pos: [125, 131, 138] ccc => cc, Pos: [126, 132, 137] ccc => cc, Pos: [129, 133] cc => I, Pos: [129, 133] cc => I, Pos: [134, 149] cc => I, Pos: [134, 149] cc => I, Pos: [137, 142] cc => I, Pos: [137, 142] cc => I, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [151, 157, 163] ccc => cc, Pos: [159, 169] cc => I, Pos: [159, 169] cc => I, Pos: [172, 188] cc => I, Pos: [172, 188] cc => I, Pos: [173, 182] cc => I, Pos: [173, 182] cc => I, Pos: [183, 202] cc => I, Pos: [183, 202] cc => I, Pos: [187, 191, 195] ccc => cc, Pos: [189, 197] cc => I, Pos: [189, 197] cc => I, Pos: [193, 196] cc => I, Pos: [193, 196] cc => I, Pos: [194, 199] cc => I, Pos: [194, 199] cc => I, Pos: [195, 203] cc => I, Pos: [195, 203] cc => I, Pos: [196, 207] cc => I, Pos: [196, 207] cc => I, Pos: [198, 200, 206] ccc => cc, Pos: [201, 221] cc => I, Pos: [201, 221] cc => I, Pos: [206, 215, 218] ccc => cc, Pos: [209, 212] cc => I, Pos: [209, 212] cc => I]

--------End Timer [Generate Plans]:  0.09374284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 8, 21] ccc => cc,
 Pos: [6, 12] cc => I,
 Pos: [15, 20] cc => I,
 Pos: [16, 19] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [26, 29, 34] ccc => cc,
 Pos: [42, 59] cc => I,
 Pos: [44, 53] cc => I,
 Pos: [49, 66] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [68, 73] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [69, 81] cc => I,
 Pos: [72, 89] cc => I,
 Pos: [83, 92, 107] ccc => cc,
 Pos: [79, 93] cc => I,
 Pos: [90, 103] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [114, 120, 121] ccc => cc,
 Pos: [124, 130, 136] ccc => cc,
 Pos: [125, 131, 138] ccc => cc,
 Pos: [137, 142] cc => I,
 Pos: [129, 133] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [143, 151] cc => I,
 Pos: [147, 153] cc => I,
 Pos: [159, 169] cc => I,
 Pos: [172, 188] cc => I,
 Pos: [173, 182] cc => I,
 Pos: [183, 202] cc => I,
 Pos: [195, 203] cc => I,
 Pos: [189, 197] cc => I,
 Pos: [196, 207] cc => I,
 Pos: [194, 199] cc => I,
 Pos: [206, 215, 218] ccc => cc,
 Pos: [201, 221] cc => I,
 Pos: [209, 212] cc => I]
Change: 39, Saving: 39

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 8, 21] ccc => cc
Apply:  Pos: [6, 12] cc => I
Apply:  Pos: [15, 20] cc => I
Apply:  Pos: [16, 19] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [26, 29, 34] ccc => cc
Apply:  Pos: [42, 59] cc => I
Apply:  Pos: [44, 53] cc => I
Apply:  Pos: [49, 66] cc => I
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [68, 73] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [69, 81] cc => I
Apply:  Pos: [72, 89] cc => I
Apply:  Pos: [83, 92, 107] ccc => cc
Apply:  Pos: [79, 93] cc => I
Apply:  Pos: [90, 103] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [113, 118] cc => I
Apply:  Pos: [114, 120, 121] ccc => cc
Apply:  Pos: [124, 130, 136] ccc => cc
Apply:  Pos: [125, 131, 138] ccc => cc
Apply:  Pos: [137, 142] cc => I
Apply:  Pos: [129, 133] cc => I
Apply:  Pos: [134, 149] cc => I
Apply:  Pos: [143, 151] cc => I
Apply:  Pos: [147, 153] cc => I
Apply:  Pos: [159, 169] cc => I
Apply:  Pos: [172, 188] cc => I
Apply:  Pos: [173, 182] cc => I
Apply:  Pos: [183, 202] cc => I
Apply:  Pos: [195, 203] cc => I
Apply:  Pos: [189, 197] cc => I
Apply:  Pos: [196, 207] cc => I
Apply:  Pos: [194, 199] cc => I
Apply:  Pos: [206, 215, 218] ccc => cc
Apply:  Pos: [201, 221] cc => I
Apply:  Pos: [209, 212] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 15], [3, 14], [9, 2], [4, 14], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [13, 15], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [4, 14], [8, 16], [0, 18], [7, 17], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [7, 17], [2, 6], [3, 4], [12, 18], [13, 11], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [1, 19], [7, 8], [10, 6], [9, 2], [17, 19], [7, 8], [18, 1], [3, 4], [6, 3], [2, 1], [0, 17], [19, 4], [8, 16], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [0, 17], [2, 5], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [2, 5], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 2], [11, 12], [2, 1], [18, 5], [0, 7], [4, 14], [19, 4], [12, 18], [2, 6], [5, 4], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  4.3442301750183105

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[53, 57]
[41, 59]
[62, 82]
[83, 89]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 10, 15]
[24, 28, 39]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[53, 57]
[41, 59]
[62, 82]
[83, 89]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6565322875976562

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10, 15] ccc => cc, Pos: [7, 21] cc => I, Pos: [7, 21] cc => I, Pos: [24, 28, 39] ccc => cc, Pos: [41, 59] cc => I, Pos: [41, 59] cc => I, Pos: [53, 57] cc => I, Pos: [53, 57] cc => I, Pos: [62, 82] cc => I, Pos: [62, 82] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I]

--------End Timer [Generate Plans]:  0.0312349796295166

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 10, 15] ccc => cc,
 Pos: [7, 21] cc => I,
 Pos: [24, 28, 39] ccc => cc,
 Pos: [41, 59] cc => I,
 Pos: [53, 57] cc => I,
 Pos: [62, 82] cc => I,
 Pos: [83, 89] cc => I]
Change: 7, Saving: 7

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 10, 15] ccc => cc
Apply:  Pos: [7, 21] cc => I
Apply:  Pos: [24, 28, 39] ccc => cc
Apply:  Pos: [41, 59] cc => I
Apply:  Pos: [53, 57] cc => I
Apply:  Pos: [62, 82] cc => I
Apply:  Pos: [83, 89] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [13, 11], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [1, 19], [10, 6], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [8, 16], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 2], [11, 12], [2, 1], [18, 5], [0, 7], [4, 14], [19, 4], [12, 18], [2, 6], [5, 4], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.687767267227173

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[48, 52, 56]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3908329010009766

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 52, 56] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 52, 56] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [48, 52, 56] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [13, 11], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [1, 19], [10, 3], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [8, 16], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 2], [11, 12], [2, 1], [18, 5], [0, 7], [4, 14], [19, 4], [12, 18], [2, 6], [5, 4], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.3908329010009766

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.375300407409668

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [13, 11], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [1, 19], [10, 3], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [8, 16], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 2], [11, 12], [2, 1], [18, 5], [0, 7], [4, 14], [19, 4], [12, 18], [2, 6], [5, 4], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.375300407409668

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [141] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 282

Reduced: 
 - size: 84 (37.33%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09375643730163574

[17, 1], [10, 9], [18, 2], [0, 7], [13, 15], [3, 4], [1, 5], [9, 2], [4, 14], [12, 10], [11, 18], [15, 17], [1, 5], [10, 6], [18, 2], [15, 0], [17, 19], [8, 16], [18, 1], [17, 19], [15, 0], [3, 4], [0, 18], [13, 15], [17, 16], [10, 9], [6, 3], [0, 18], [2, 5], [9, 6], [4, 14], [8, 16], [0, 18], [7, 17], [6, 3], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [1, 16], [15, 0], [10, 9], [7, 8], [5, 14], [18, 2], [6, 3], [1, 19], [12, 0], [18, 5], [7, 17], [10, 9], [2, 6], [3, 4], [12, 18], [5, 4], [13, 11], [1, 16], [0, 7], [18, 2], [17, 16], [9, 6], [12, 10], [5, 4], [1, 19], [9, 2], [13, 11], [12, 0], [1, 5], [9, 6], [5, 14], [13, 11], [10, 2], [15, 17], [1, 19], [7, 8], [10, 6], [13, 11], [9, 2], [12, 0], [17, 19], [8, 16], [18, 1], [3, 4], [6, 3], [2, 1], [0, 17], [5, 14], [10, 9], [19, 4], [7, 8], [13, 11], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [17, 19], [10, 9], [9, 6], [12, 10], [1, 5], [8, 16], [13, 15], [18, 2], [4, 14], [17, 19], [9, 6], [19, 4], [10, 2], [0, 18], [10, 6], [18, 1], [19, 4], [0, 17], [2, 5], [10, 2], [15, 17], [16, 19], [11, 18], [6, 3], [12, 10], [2, 5], [7, 17], [12, 0], [13, 11], [3, 14], [10, 9], [12, 0], [13, 15], [1, 16], [11, 18], [12, 10], [6, 3], [0, 17], [8, 16], [18, 1], [12, 10], [5, 4], [1, 16], [9, 2], [11, 18], [10, 6], [17, 1], [13, 15], [0, 7], [5, 4], [16, 19], [10, 6], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [1, 16], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [1, 16], [11, 18], [9, 6], [3, 4], [17, 1], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [17, 1], [13, 15], [11, 18], [17, 16], [13, 11], [9, 2], [3, 4], [17, 19], [11, 12], [2, 1], [18, 5], [0, 7], [12, 10], [9, 2], [0, 7], [17, 19], [4, 14], [12, 10], [19, 4], [5, 3], [13, 15], [9, 2], [12, 18], [2, 6], [4, 14], [0, 7], [16, 19], [13, 11], [12, 0], [1, 19], [13, 11], [9, 6], [15, 17], [5, 14], [11, 12], [10, 2], [5, 4], [0, 7], [12, 10], [5, 3], [2, 1], [0, 17], [13, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 12]
[16, 19]
[15, 20]
[22, 27]
[27, 32]
[44, 53]
[42, 59]
[57, 65]
[49, 66]
[58, 68]
[63, 71]
[68, 73]
[66, 76]
[73, 79]
[69, 81]
[72, 89]
[79, 93]
[90, 103]
[102, 111]
[104, 112]
[113, 118]
[129, 133]
[137, 142]
[134, 149]
[143, 151]
[147, 153]
[159, 169]
[173, 182]
[172, 188]
[193, 196]
[189, 197]
[194, 199]
[183, 202]
[195, 203]
[196, 207]
[209, 212]
[201, 221]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[5, 8, 21]
[77, 83, 92]
[114, 120, 121]
[126, 132, 137]
[125, 131, 138]
[187, 191, 195]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[26, 29, 34]
[89, 98, 100]
[83, 92, 107]
[124, 130, 136]
[151, 157, 163]
[198, 200, 206]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[206, 215, 218]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 12]
[16, 19]
[15, 20]
[22, 27]
[27, 32]
[44, 53]
[42, 59]
[57, 65]
[49, 66]
[58, 68]
[63, 71]
[68, 73]
[66, 76]
[73, 79]
[69, 81]
[72, 89]
[79, 93]
[90, 103]
[102, 111]
[104, 112]
[113, 118]
[129, 133]
[137, 142]
[134, 149]
[143, 151]
[147, 153]
[159, 169]
[173, 182]
[172, 188]
[193, 196]
[189, 197]
[194, 199]
[183, 202]
[195, 203]
[196, 207]
[209, 212]
[201, 221]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.2187659740448

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 8, 21] ccc => cc, Pos: [6, 12] cc => I, Pos: [6, 12] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [16, 19] cc => I, Pos: [16, 19] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [26, 29, 34] ccc => cc, Pos: [27, 32] cc => I, Pos: [27, 32] cc => I, Pos: [42, 59] cc => I, Pos: [42, 59] cc => I, Pos: [44, 53] cc => I, Pos: [44, 53] cc => I, Pos: [49, 66] cc => I, Pos: [49, 66] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [58, 68] cc => I, Pos: [58, 68] cc => I, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [68, 73] cc => I, Pos: [68, 73] cc => I, Pos: [69, 81] cc => I, Pos: [69, 81] cc => I, Pos: [72, 89] cc => I, Pos: [72, 89] cc => I, Pos: [73, 79] cc => I, Pos: [73, 79] cc => I, Pos: [77, 83, 92] ccc => cc, Pos: [79, 93] cc => I, Pos: [79, 93] cc => I, Pos: [83, 92, 107] ccc => cc, Pos: [89, 98, 100] ccc => cc, Pos: [90, 103] cc => I, Pos: [90, 103] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [113, 118] cc => I, Pos: [113, 118] cc => I, Pos: [114, 120, 121] ccc => cc, Pos: [124, 130, 136] ccc => cc, Pos: [125, 131, 138] ccc => cc, Pos: [126, 132, 137] ccc => cc, Pos: [129, 133] cc => I, Pos: [129, 133] cc => I, Pos: [134, 149] cc => I, Pos: [134, 149] cc => I, Pos: [137, 142] cc => I, Pos: [137, 142] cc => I, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [151, 157, 163] ccc => cc, Pos: [159, 169] cc => I, Pos: [159, 169] cc => I, Pos: [172, 188] cc => I, Pos: [172, 188] cc => I, Pos: [173, 182] cc => I, Pos: [173, 182] cc => I, Pos: [183, 202] cc => I, Pos: [183, 202] cc => I, Pos: [187, 191, 195] ccc => cc, Pos: [189, 197] cc => I, Pos: [189, 197] cc => I, Pos: [193, 196] cc => I, Pos: [193, 196] cc => I, Pos: [194, 199] cc => I, Pos: [194, 199] cc => I, Pos: [195, 203] cc => I, Pos: [195, 203] cc => I, Pos: [196, 207] cc => I, Pos: [196, 207] cc => I, Pos: [198, 200, 206] ccc => cc, Pos: [201, 221] cc => I, Pos: [201, 221] cc => I, Pos: [206, 215, 218] ccc => cc, Pos: [209, 212] cc => I, Pos: [209, 212] cc => I]

--------End Timer [Generate Plans]:  0.10938072204589844

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 8, 21] ccc => cc,
 Pos: [6, 12] cc => I,
 Pos: [15, 20] cc => I,
 Pos: [16, 19] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [26, 29, 34] ccc => cc,
 Pos: [42, 59] cc => I,
 Pos: [44, 53] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [58, 68] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [69, 81] cc => I,
 Pos: [72, 89] cc => I,
 Pos: [73, 79] cc => I,
 Pos: [83, 92, 107] ccc => cc,
 Pos: [90, 103] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [114, 120, 121] ccc => cc,
 Pos: [124, 130, 136] ccc => cc,
 Pos: [125, 131, 138] ccc => cc,
 Pos: [137, 142] cc => I,
 Pos: [129, 133] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [151, 157, 163] ccc => cc,
 Pos: [147, 153] cc => I,
 Pos: [159, 169] cc => I,
 Pos: [172, 188] cc => I,
 Pos: [173, 182] cc => I,
 Pos: [183, 202] cc => I,
 Pos: [195, 203] cc => I,
 Pos: [189, 197] cc => I,
 Pos: [196, 207] cc => I,
 Pos: [194, 199] cc => I,
 Pos: [206, 215, 218] ccc => cc,
 Pos: [201, 221] cc => I,
 Pos: [209, 212] cc => I]
Change: 39, Saving: 39

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 8, 21] ccc => cc
Apply:  Pos: [6, 12] cc => I
Apply:  Pos: [15, 20] cc => I
Apply:  Pos: [16, 19] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [26, 29, 34] ccc => cc
Apply:  Pos: [42, 59] cc => I
Apply:  Pos: [44, 53] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [58, 68] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [69, 81] cc => I
Apply:  Pos: [72, 89] cc => I
Apply:  Pos: [73, 79] cc => I
Apply:  Pos: [83, 92, 107] ccc => cc
Apply:  Pos: [90, 103] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [113, 118] cc => I
Apply:  Pos: [114, 120, 121] ccc => cc
Apply:  Pos: [124, 130, 136] ccc => cc
Apply:  Pos: [125, 131, 138] ccc => cc
Apply:  Pos: [137, 142] cc => I
Apply:  Pos: [129, 133] cc => I
Apply:  Pos: [134, 149] cc => I
Apply:  Pos: [151, 157, 163] ccc => cc
Apply:  Pos: [147, 153] cc => I
Apply:  Pos: [159, 169] cc => I
Apply:  Pos: [172, 188] cc => I
Apply:  Pos: [173, 182] cc => I
Apply:  Pos: [183, 202] cc => I
Apply:  Pos: [195, 203] cc => I
Apply:  Pos: [189, 197] cc => I
Apply:  Pos: [196, 207] cc => I
Apply:  Pos: [194, 199] cc => I
Apply:  Pos: [206, 215, 218] ccc => cc
Apply:  Pos: [201, 221] cc => I
Apply:  Pos: [209, 212] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 15], [3, 14], [9, 2], [4, 14], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [13, 15], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [4, 14], [8, 16], [0, 18], [7, 17], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [1, 19], [12, 0], [18, 5], [7, 17], [2, 6], [3, 4], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [7, 8], [10, 6], [9, 2], [17, 19], [7, 8], [18, 1], [3, 4], [6, 3], [2, 1], [0, 17], [19, 4], [8, 16], [13, 11], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [0, 17], [2, 5], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [2, 5], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [5, 4], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [2, 5], [16, 19], [0, 18], [13, 11], [15, 17], [5, 4], [9, 6], [7, 8], [12, 0], [2, 6], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 2], [11, 12], [2, 1], [18, 5], [0, 7], [4, 14], [19, 4], [12, 18], [2, 6], [5, 4], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  4.328146696090698

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[52, 56]
[42, 58]
[61, 82]
[83, 89]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 10, 15]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[52, 56]
[42, 58]
[61, 82]
[83, 89]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6718387603759766

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10, 15] ccc => cc, Pos: [7, 21] cc => I, Pos: [7, 21] cc => I, Pos: [42, 58] cc => I, Pos: [42, 58] cc => I, Pos: [52, 56] cc => I, Pos: [52, 56] cc => I, Pos: [61, 82] cc => I, Pos: [61, 82] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I]

--------End Timer [Generate Plans]:  0.015625

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 10, 15] ccc => cc,
 Pos: [7, 21] cc => I,
 Pos: [42, 58] cc => I,
 Pos: [52, 56] cc => I,
 Pos: [61, 82] cc => I,
 Pos: [83, 89] cc => I]
Change: 6, Saving: 6

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 10, 15] ccc => cc
Apply:  Pos: [7, 21] cc => I
Apply:  Pos: [42, 58] cc => I
Apply:  Pos: [52, 56] cc => I
Apply:  Pos: [61, 82] cc => I
Apply:  Pos: [83, 89] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 17], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [1, 19], [12, 0], [18, 5], [7, 17], [2, 6], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [10, 6], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [8, 16], [13, 11], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [5, 4], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [2, 5], [16, 19], [0, 18], [13, 11], [15, 17], [5, 4], [9, 6], [7, 8], [12, 0], [2, 6], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 2], [11, 12], [2, 1], [18, 5], [0, 7], [4, 14], [19, 4], [12, 18], [2, 6], [5, 4], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.6874637603759766

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[48, 52, 57]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4374749660491943

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 52, 57] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 52, 57] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [48, 52, 57] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 17], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [1, 19], [12, 0], [18, 5], [7, 17], [2, 6], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [10, 3], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [8, 16], [13, 11], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [5, 4], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [2, 5], [16, 19], [0, 18], [13, 11], [15, 17], [5, 4], [9, 6], [7, 8], [12, 0], [2, 6], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 2], [11, 12], [2, 1], [18, 5], [0, 7], [4, 14], [19, 4], [12, 18], [2, 6], [5, 4], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.4374749660491943

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.40535569190979

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 17], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [1, 19], [12, 0], [18, 5], [7, 17], [2, 6], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [10, 3], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [8, 16], [13, 11], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [5, 4], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [2, 5], [16, 19], [0, 18], [13, 11], [15, 17], [5, 4], [9, 6], [7, 8], [12, 0], [2, 6], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 2], [11, 12], [2, 1], [18, 5], [0, 7], [4, 14], [19, 4], [12, 18], [2, 6], [5, 4], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.40535569190979

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [143] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 286

Reduced: 
 - size: 82 (36.44%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07812309265136719

[17, 1], [10, 9], [18, 2], [0, 7], [13, 15], [3, 4], [1, 5], [9, 2], [4, 14], [12, 10], [11, 18], [15, 17], [1, 5], [10, 6], [18, 2], [15, 0], [17, 19], [8, 16], [18, 1], [17, 19], [15, 0], [3, 4], [0, 18], [13, 15], [17, 16], [10, 9], [6, 3], [0, 18], [2, 5], [9, 6], [4, 14], [8, 16], [0, 18], [7, 17], [6, 3], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [1, 16], [15, 0], [10, 9], [7, 8], [5, 14], [18, 2], [6, 3], [1, 19], [12, 0], [18, 5], [7, 17], [10, 9], [2, 6], [3, 4], [12, 18], [5, 4], [13, 11], [1, 16], [0, 7], [18, 2], [17, 16], [9, 6], [12, 10], [5, 4], [1, 19], [9, 2], [13, 11], [12, 0], [1, 5], [9, 6], [5, 14], [13, 11], [10, 2], [15, 17], [1, 19], [7, 8], [10, 6], [13, 11], [9, 2], [12, 0], [17, 19], [8, 16], [18, 1], [3, 4], [6, 3], [2, 1], [0, 17], [5, 14], [10, 9], [19, 4], [7, 8], [13, 11], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [17, 19], [10, 9], [9, 6], [12, 10], [1, 5], [8, 16], [13, 15], [18, 2], [4, 14], [17, 19], [9, 6], [19, 4], [10, 2], [0, 18], [10, 6], [18, 1], [19, 4], [0, 17], [2, 5], [10, 2], [15, 17], [16, 19], [11, 18], [6, 3], [12, 10], [2, 5], [7, 17], [12, 0], [13, 11], [3, 14], [10, 9], [12, 0], [13, 15], [1, 16], [11, 18], [12, 10], [6, 3], [0, 17], [8, 16], [18, 1], [12, 10], [5, 4], [1, 16], [9, 2], [11, 18], [10, 6], [17, 1], [13, 15], [0, 7], [5, 4], [16, 19], [10, 6], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [1, 16], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [1, 16], [11, 18], [9, 6], [3, 4], [17, 1], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [17, 1], [13, 15], [11, 18], [17, 16], [13, 11], [9, 2], [3, 4], [17, 19], [11, 12], [2, 1], [18, 5], [0, 7], [12, 10], [9, 2], [0, 7], [17, 19], [4, 14], [12, 10], [19, 4], [5, 3], [13, 15], [9, 2], [12, 18], [2, 6], [4, 14], [0, 7], [16, 19], [13, 11], [12, 0], [1, 19], [13, 11], [9, 6], [15, 17], [5, 14], [11, 12], [10, 2], [5, 4], [0, 7], [12, 10], [5, 3], [2, 1], [0, 17], [13, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 12]
[16, 19]
[15, 20]
[22, 27]
[27, 32]
[44, 53]
[42, 59]
[57, 65]
[49, 66]
[58, 68]
[63, 71]
[68, 73]
[66, 76]
[73, 79]
[69, 81]
[72, 89]
[79, 93]
[90, 103]
[102, 111]
[104, 112]
[113, 118]
[129, 133]
[137, 142]
[134, 149]
[143, 151]
[147, 153]
[159, 169]
[173, 182]
[172, 188]
[193, 196]
[189, 197]
[194, 199]
[183, 202]
[195, 203]
[196, 207]
[209, 212]
[201, 221]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[5, 8, 21]
[77, 83, 92]
[114, 120, 121]
[126, 132, 137]
[125, 131, 138]
[187, 191, 195]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[26, 29, 34]
[89, 98, 100]
[83, 92, 107]
[124, 130, 136]
[151, 157, 163]
[198, 200, 206]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[206, 215, 218]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 12]
[16, 19]
[15, 20]
[22, 27]
[27, 32]
[44, 53]
[42, 59]
[57, 65]
[49, 66]
[58, 68]
[63, 71]
[68, 73]
[66, 76]
[73, 79]
[69, 81]
[72, 89]
[79, 93]
[90, 103]
[102, 111]
[104, 112]
[113, 118]
[129, 133]
[137, 142]
[134, 149]
[143, 151]
[147, 153]
[159, 169]
[173, 182]
[172, 188]
[193, 196]
[189, 197]
[194, 199]
[183, 202]
[195, 203]
[196, 207]
[209, 212]
[201, 221]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.218688011169434

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 8, 21] ccc => cc, Pos: [6, 12] cc => I, Pos: [6, 12] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [16, 19] cc => I, Pos: [16, 19] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [26, 29, 34] ccc => cc, Pos: [27, 32] cc => I, Pos: [27, 32] cc => I, Pos: [42, 59] cc => I, Pos: [42, 59] cc => I, Pos: [44, 53] cc => I, Pos: [44, 53] cc => I, Pos: [49, 66] cc => I, Pos: [49, 66] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [58, 68] cc => I, Pos: [58, 68] cc => I, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [68, 73] cc => I, Pos: [68, 73] cc => I, Pos: [69, 81] cc => I, Pos: [69, 81] cc => I, Pos: [72, 89] cc => I, Pos: [72, 89] cc => I, Pos: [73, 79] cc => I, Pos: [73, 79] cc => I, Pos: [77, 83, 92] ccc => cc, Pos: [79, 93] cc => I, Pos: [79, 93] cc => I, Pos: [83, 92, 107] ccc => cc, Pos: [89, 98, 100] ccc => cc, Pos: [90, 103] cc => I, Pos: [90, 103] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [113, 118] cc => I, Pos: [113, 118] cc => I, Pos: [114, 120, 121] ccc => cc, Pos: [124, 130, 136] ccc => cc, Pos: [125, 131, 138] ccc => cc, Pos: [126, 132, 137] ccc => cc, Pos: [129, 133] cc => I, Pos: [129, 133] cc => I, Pos: [134, 149] cc => I, Pos: [134, 149] cc => I, Pos: [137, 142] cc => I, Pos: [137, 142] cc => I, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [151, 157, 163] ccc => cc, Pos: [159, 169] cc => I, Pos: [159, 169] cc => I, Pos: [172, 188] cc => I, Pos: [172, 188] cc => I, Pos: [173, 182] cc => I, Pos: [173, 182] cc => I, Pos: [183, 202] cc => I, Pos: [183, 202] cc => I, Pos: [187, 191, 195] ccc => cc, Pos: [189, 197] cc => I, Pos: [189, 197] cc => I, Pos: [193, 196] cc => I, Pos: [193, 196] cc => I, Pos: [194, 199] cc => I, Pos: [194, 199] cc => I, Pos: [195, 203] cc => I, Pos: [195, 203] cc => I, Pos: [196, 207] cc => I, Pos: [196, 207] cc => I, Pos: [198, 200, 206] ccc => cc, Pos: [201, 221] cc => I, Pos: [201, 221] cc => I, Pos: [206, 215, 218] ccc => cc, Pos: [209, 212] cc => I, Pos: [209, 212] cc => I]

--------End Timer [Generate Plans]:  0.10977315902709961

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 8, 21] ccc => cc,
 Pos: [6, 12] cc => I,
 Pos: [15, 20] cc => I,
 Pos: [16, 19] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [26, 29, 34] ccc => cc,
 Pos: [42, 59] cc => I,
 Pos: [44, 53] cc => I,
 Pos: [49, 66] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [58, 68] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [69, 81] cc => I,
 Pos: [72, 89] cc => I,
 Pos: [79, 93] cc => I,
 Pos: [77, 83, 92] ccc => cc,
 Pos: [90, 103] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [114, 120, 121] ccc => cc,
 Pos: [124, 130, 136] ccc => cc,
 Pos: [125, 131, 138] ccc => cc,
 Pos: [126, 132, 137] ccc => cc,
 Pos: [129, 133] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [143, 151] cc => I,
 Pos: [147, 153] cc => I,
 Pos: [159, 169] cc => I,
 Pos: [172, 188] cc => I,
 Pos: [173, 182] cc => I,
 Pos: [183, 202] cc => I,
 Pos: [195, 203] cc => I,
 Pos: [189, 197] cc => I,
 Pos: [196, 207] cc => I,
 Pos: [194, 199] cc => I,
 Pos: [198, 200, 206] ccc => cc,
 Pos: [201, 221] cc => I,
 Pos: [209, 212] cc => I]
Change: 39, Saving: 38

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 8, 21] ccc => cc
Apply:  Pos: [6, 12] cc => I
Apply:  Pos: [15, 20] cc => I
Apply:  Pos: [16, 19] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [26, 29, 34] ccc => cc
Apply:  Pos: [42, 59] cc => I
Apply:  Pos: [44, 53] cc => I
Apply:  Pos: [49, 66] cc => I
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [58, 68] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [69, 81] cc => I
Apply:  Pos: [72, 89] cc => I
Apply:  Pos: [79, 93] cc => I
Apply:  Pos: [77, 83, 92] ccc => cc
Apply:  Pos: [90, 103] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [113, 118] cc => I
Apply:  Pos: [114, 120, 121] ccc => cc
Apply:  Pos: [124, 130, 136] ccc => cc
Apply:  Pos: [125, 131, 138] ccc => cc
Apply:  Pos: [126, 132, 137] ccc => cc
Apply:  Pos: [129, 133] cc => I
Apply:  Pos: [134, 149] cc => I
Apply:  Pos: [143, 151] cc => I
Apply:  Pos: [147, 153] cc => I
Apply:  Pos: [159, 169] cc => I
Apply:  Pos: [172, 188] cc => I
Apply:  Pos: [173, 182] cc => I
Apply:  Pos: [183, 202] cc => I
Apply:  Pos: [195, 203] cc => I
Apply:  Pos: [189, 197] cc => I
Apply:  Pos: [196, 207] cc => I
Apply:  Pos: [194, 199] cc => I
Apply:  Pos: [198, 200, 206] ccc => cc
Apply:  Pos: [201, 221] cc => I
Apply:  Pos: [209, 212] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 15], [3, 14], [9, 2], [4, 14], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [13, 15], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [4, 14], [8, 16], [0, 18], [7, 17], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [7, 17], [2, 6], [3, 4], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [13, 11], [10, 2], [15, 17], [1, 19], [7, 16], [10, 6], [9, 2], [17, 19], [8, 16], [18, 1], [3, 4], [6, 3], [2, 1], [0, 17], [19, 4], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [8, 16], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [0, 17], [2, 5], [15, 17], [16, 19], [13, 11], [6, 14], [12, 9], [2, 5], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [12, 10], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 2], [11, 12], [2, 1], [18, 5], [0, 7], [19, 4], [4, 14], [12, 18], [2, 6], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [5, 14], [11, 12], [10, 2], [5, 4], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  4.328461170196533

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[41, 59]
[57, 74]
[62, 82]
[83, 89]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 10, 15]
[24, 28, 39]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[138, 146, 149]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[41, 59]
[57, 74]
[62, 82]
[83, 89]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.671600103378296

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10, 15] ccc => cc, Pos: [7, 21] cc => I, Pos: [7, 21] cc => I, Pos: [24, 28, 39] ccc => cc, Pos: [41, 59] cc => I, Pos: [41, 59] cc => I, Pos: [57, 74] cc => I, Pos: [57, 74] cc => I, Pos: [62, 82] cc => I, Pos: [62, 82] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [138, 146, 149] ccc => cc]

--------End Timer [Generate Plans]:  0.01561117172241211

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 10, 15] ccc => cc,
 Pos: [7, 21] cc => I,
 Pos: [24, 28, 39] ccc => cc,
 Pos: [41, 59] cc => I,
 Pos: [57, 74] cc => I,
 Pos: [62, 82] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [138, 146, 149] ccc => cc]
Change: 8, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 10, 15] ccc => cc
Apply:  Pos: [7, 21] cc => I
Apply:  Pos: [24, 28, 39] ccc => cc
Apply:  Pos: [41, 59] cc => I
Apply:  Pos: [57, 74] cc => I
Apply:  Pos: [62, 82] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [138, 146, 149] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [13, 11], [10, 2], [15, 17], [1, 19], [7, 16], [10, 6], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 9], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [12, 10], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 2], [11, 12], [2, 1], [18, 5], [0, 7], [19, 4], [5, 4], [12, 18], [2, 6], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.687211275100708

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[49, 53, 56]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.37508225440979

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [49, 53, 56] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [49, 53, 56] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [49, 53, 56] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [13, 11], [10, 2], [15, 17], [1, 19], [7, 16], [10, 3], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 9], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [12, 10], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 2], [11, 12], [2, 1], [18, 5], [0, 7], [5, 4], [19, 4], [12, 18], [2, 6], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.37508225440979

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3280999660491943

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [13, 11], [10, 2], [15, 17], [1, 19], [7, 16], [10, 3], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 9], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [12, 10], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 2], [11, 12], [2, 1], [18, 5], [0, 7], [19, 4], [5, 4], [12, 18], [2, 6], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.3280999660491943

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [141] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 282

Reduced: 
 - size: 84 (37.33%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09395122528076172

[17, 1], [10, 9], [18, 2], [0, 7], [13, 15], [3, 4], [1, 5], [9, 2], [4, 14], [12, 10], [11, 18], [15, 17], [1, 5], [10, 6], [18, 2], [15, 0], [17, 19], [8, 16], [18, 1], [17, 19], [15, 0], [3, 4], [0, 18], [13, 15], [17, 16], [10, 9], [6, 3], [0, 18], [2, 5], [9, 6], [4, 14], [8, 16], [0, 18], [7, 17], [6, 3], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [1, 16], [15, 0], [10, 9], [7, 8], [5, 14], [18, 2], [6, 3], [1, 19], [12, 0], [18, 5], [7, 17], [10, 9], [2, 6], [3, 4], [12, 18], [5, 4], [13, 11], [1, 16], [0, 7], [18, 2], [17, 16], [9, 6], [12, 10], [5, 4], [1, 19], [9, 2], [13, 11], [12, 0], [1, 5], [9, 6], [5, 14], [13, 11], [10, 2], [15, 17], [1, 19], [7, 8], [10, 6], [13, 11], [9, 2], [12, 0], [17, 19], [8, 16], [18, 1], [3, 4], [6, 3], [2, 1], [0, 17], [5, 14], [10, 9], [19, 4], [7, 8], [13, 11], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [17, 19], [10, 9], [9, 6], [12, 10], [1, 5], [8, 16], [13, 15], [18, 2], [4, 14], [17, 19], [9, 6], [19, 4], [10, 2], [0, 18], [10, 6], [18, 1], [19, 4], [0, 17], [2, 5], [10, 2], [15, 17], [16, 19], [11, 18], [6, 3], [12, 10], [2, 5], [7, 17], [12, 0], [13, 11], [3, 14], [10, 9], [12, 0], [13, 15], [1, 16], [11, 18], [12, 10], [6, 3], [0, 17], [8, 16], [18, 1], [12, 10], [5, 4], [1, 16], [9, 2], [11, 18], [10, 6], [17, 1], [13, 15], [0, 7], [5, 4], [16, 19], [10, 6], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [1, 16], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [1, 16], [11, 18], [9, 6], [3, 4], [17, 1], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [17, 1], [13, 15], [11, 18], [17, 16], [13, 11], [9, 2], [3, 4], [17, 19], [11, 12], [2, 1], [18, 5], [0, 7], [12, 10], [9, 2], [0, 7], [17, 19], [4, 14], [12, 10], [19, 4], [5, 3], [13, 15], [9, 2], [12, 18], [2, 6], [4, 14], [0, 7], [16, 19], [13, 11], [12, 0], [1, 19], [13, 11], [9, 6], [15, 17], [5, 14], [11, 12], [10, 2], [5, 4], [0, 7], [12, 10], [5, 3], [2, 1], [0, 17], [13, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 12]
[16, 19]
[15, 20]
[22, 27]
[27, 32]
[44, 53]
[42, 59]
[57, 65]
[49, 66]
[58, 68]
[63, 71]
[68, 73]
[66, 76]
[73, 79]
[69, 81]
[72, 89]
[79, 93]
[90, 103]
[102, 111]
[104, 112]
[113, 118]
[129, 133]
[137, 142]
[134, 149]
[143, 151]
[147, 153]
[159, 169]
[173, 182]
[172, 188]
[193, 196]
[189, 197]
[194, 199]
[183, 202]
[195, 203]
[196, 207]
[209, 212]
[201, 221]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[5, 8, 21]
[77, 83, 92]
[114, 120, 121]
[126, 132, 137]
[125, 131, 138]
[187, 191, 195]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[26, 29, 34]
[89, 98, 100]
[83, 92, 107]
[124, 130, 136]
[151, 157, 163]
[198, 200, 206]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[206, 215, 218]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 12]
[16, 19]
[15, 20]
[22, 27]
[27, 32]
[44, 53]
[42, 59]
[57, 65]
[49, 66]
[58, 68]
[63, 71]
[68, 73]
[66, 76]
[73, 79]
[69, 81]
[72, 89]
[79, 93]
[90, 103]
[102, 111]
[104, 112]
[113, 118]
[129, 133]
[137, 142]
[134, 149]
[143, 151]
[147, 153]
[159, 169]
[173, 182]
[172, 188]
[193, 196]
[189, 197]
[194, 199]
[183, 202]
[195, 203]
[196, 207]
[209, 212]
[201, 221]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.218492031097412

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 8, 21] ccc => cc, Pos: [6, 12] cc => I, Pos: [6, 12] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [16, 19] cc => I, Pos: [16, 19] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [26, 29, 34] ccc => cc, Pos: [27, 32] cc => I, Pos: [27, 32] cc => I, Pos: [42, 59] cc => I, Pos: [42, 59] cc => I, Pos: [44, 53] cc => I, Pos: [44, 53] cc => I, Pos: [49, 66] cc => I, Pos: [49, 66] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [58, 68] cc => I, Pos: [58, 68] cc => I, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [68, 73] cc => I, Pos: [68, 73] cc => I, Pos: [69, 81] cc => I, Pos: [69, 81] cc => I, Pos: [72, 89] cc => I, Pos: [72, 89] cc => I, Pos: [73, 79] cc => I, Pos: [73, 79] cc => I, Pos: [77, 83, 92] ccc => cc, Pos: [79, 93] cc => I, Pos: [79, 93] cc => I, Pos: [83, 92, 107] ccc => cc, Pos: [89, 98, 100] ccc => cc, Pos: [90, 103] cc => I, Pos: [90, 103] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [113, 118] cc => I, Pos: [113, 118] cc => I, Pos: [114, 120, 121] ccc => cc, Pos: [124, 130, 136] ccc => cc, Pos: [125, 131, 138] ccc => cc, Pos: [126, 132, 137] ccc => cc, Pos: [129, 133] cc => I, Pos: [129, 133] cc => I, Pos: [134, 149] cc => I, Pos: [134, 149] cc => I, Pos: [137, 142] cc => I, Pos: [137, 142] cc => I, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [151, 157, 163] ccc => cc, Pos: [159, 169] cc => I, Pos: [159, 169] cc => I, Pos: [172, 188] cc => I, Pos: [172, 188] cc => I, Pos: [173, 182] cc => I, Pos: [173, 182] cc => I, Pos: [183, 202] cc => I, Pos: [183, 202] cc => I, Pos: [187, 191, 195] ccc => cc, Pos: [189, 197] cc => I, Pos: [189, 197] cc => I, Pos: [193, 196] cc => I, Pos: [193, 196] cc => I, Pos: [194, 199] cc => I, Pos: [194, 199] cc => I, Pos: [195, 203] cc => I, Pos: [195, 203] cc => I, Pos: [196, 207] cc => I, Pos: [196, 207] cc => I, Pos: [198, 200, 206] ccc => cc, Pos: [201, 221] cc => I, Pos: [201, 221] cc => I, Pos: [206, 215, 218] ccc => cc, Pos: [209, 212] cc => I, Pos: [209, 212] cc => I]

--------End Timer [Generate Plans]:  0.10949563980102539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 8, 21] ccc => cc,
 Pos: [6, 12] cc => I,
 Pos: [15, 20] cc => I,
 Pos: [16, 19] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [26, 29, 34] ccc => cc,
 Pos: [42, 59] cc => I,
 Pos: [44, 53] cc => I,
 Pos: [49, 66] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [68, 73] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [69, 81] cc => I,
 Pos: [72, 89] cc => I,
 Pos: [77, 83, 92] ccc => cc,
 Pos: [79, 93] cc => I,
 Pos: [90, 103] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [114, 120, 121] ccc => cc,
 Pos: [124, 130, 136] ccc => cc,
 Pos: [125, 131, 138] ccc => cc,
 Pos: [137, 142] cc => I,
 Pos: [129, 133] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [143, 151] cc => I,
 Pos: [147, 153] cc => I,
 Pos: [159, 169] cc => I,
 Pos: [172, 188] cc => I,
 Pos: [173, 182] cc => I,
 Pos: [183, 202] cc => I,
 Pos: [187, 191, 195] ccc => cc,
 Pos: [189, 197] cc => I,
 Pos: [193, 196] cc => I,
 Pos: [194, 199] cc => I,
 Pos: [198, 200, 206] ccc => cc,
 Pos: [201, 221] cc => I,
 Pos: [209, 212] cc => I]
Change: 39, Saving: 39

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 8, 21] ccc => cc
Apply:  Pos: [6, 12] cc => I
Apply:  Pos: [15, 20] cc => I
Apply:  Pos: [16, 19] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [26, 29, 34] ccc => cc
Apply:  Pos: [42, 59] cc => I
Apply:  Pos: [44, 53] cc => I
Apply:  Pos: [49, 66] cc => I
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [68, 73] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [69, 81] cc => I
Apply:  Pos: [72, 89] cc => I
Apply:  Pos: [77, 83, 92] ccc => cc
Apply:  Pos: [79, 93] cc => I
Apply:  Pos: [90, 103] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [113, 118] cc => I
Apply:  Pos: [114, 120, 121] ccc => cc
Apply:  Pos: [124, 130, 136] ccc => cc
Apply:  Pos: [125, 131, 138] ccc => cc
Apply:  Pos: [137, 142] cc => I
Apply:  Pos: [129, 133] cc => I
Apply:  Pos: [134, 149] cc => I
Apply:  Pos: [143, 151] cc => I
Apply:  Pos: [147, 153] cc => I
Apply:  Pos: [159, 169] cc => I
Apply:  Pos: [172, 188] cc => I
Apply:  Pos: [173, 182] cc => I
Apply:  Pos: [183, 202] cc => I
Apply:  Pos: [187, 191, 195] ccc => cc
Apply:  Pos: [189, 197] cc => I
Apply:  Pos: [193, 196] cc => I
Apply:  Pos: [194, 199] cc => I
Apply:  Pos: [198, 200, 206] ccc => cc
Apply:  Pos: [201, 221] cc => I
Apply:  Pos: [209, 212] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 15], [3, 14], [9, 2], [4, 14], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [13, 15], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [4, 14], [8, 16], [0, 18], [7, 17], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [7, 17], [2, 6], [3, 4], [12, 18], [13, 11], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [1, 19], [7, 16], [10, 6], [9, 2], [17, 19], [8, 16], [18, 1], [3, 4], [6, 3], [2, 1], [0, 17], [19, 4], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [8, 16], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [0, 17], [2, 5], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [2, 5], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [19, 4], [4, 14], [9, 2], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [5, 14], [11, 12], [10, 2], [5, 4], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  4.3279876708984375

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[41, 59]
[57, 74]
[62, 82]
[83, 89]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 10, 15]
[24, 28, 39]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[136, 146, 149]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[41, 59]
[57, 74]
[62, 82]
[83, 89]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.749997854232788

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10, 15] ccc => cc, Pos: [7, 21] cc => I, Pos: [7, 21] cc => I, Pos: [24, 28, 39] ccc => cc, Pos: [41, 59] cc => I, Pos: [41, 59] cc => I, Pos: [57, 74] cc => I, Pos: [57, 74] cc => I, Pos: [62, 82] cc => I, Pos: [62, 82] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [136, 146, 149] ccc => cc]

--------End Timer [Generate Plans]:  0.01562356948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 10, 15] ccc => cc,
 Pos: [7, 21] cc => I,
 Pos: [24, 28, 39] ccc => cc,
 Pos: [41, 59] cc => I,
 Pos: [57, 74] cc => I,
 Pos: [62, 82] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [136, 146, 149] ccc => cc]
Change: 8, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 10, 15] ccc => cc
Apply:  Pos: [7, 21] cc => I
Apply:  Pos: [24, 28, 39] ccc => cc
Apply:  Pos: [41, 59] cc => I
Apply:  Pos: [57, 74] cc => I
Apply:  Pos: [62, 82] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [136, 146, 149] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [13, 11], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [1, 19], [7, 16], [10, 6], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [19, 4], [5, 4], [9, 2], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.7656214237213135

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[49, 53, 56]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3906097412109375

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [49, 53, 56] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [49, 53, 56] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [49, 53, 56] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [13, 11], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [1, 19], [7, 16], [10, 3], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [5, 4], [19, 4], [9, 2], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.3906097412109375

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3750739097595215

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [13, 11], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [1, 19], [7, 16], [10, 3], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 10], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [19, 4], [5, 4], [9, 2], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.3750739097595215

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [141] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 282

Reduced: 
 - size: 84 (37.33%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09375882148742676

[17, 1], [10, 9], [18, 2], [0, 7], [13, 15], [3, 4], [1, 5], [9, 2], [4, 14], [12, 10], [11, 18], [15, 17], [1, 5], [10, 6], [18, 2], [15, 0], [17, 19], [8, 16], [18, 1], [17, 19], [15, 0], [3, 4], [0, 18], [13, 15], [17, 16], [10, 9], [6, 3], [0, 18], [2, 5], [9, 6], [4, 14], [8, 16], [0, 18], [7, 17], [6, 3], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [1, 16], [15, 0], [10, 9], [7, 8], [5, 14], [18, 2], [6, 3], [1, 19], [12, 0], [18, 5], [7, 17], [10, 9], [2, 6], [3, 4], [12, 18], [5, 4], [13, 11], [1, 16], [0, 7], [18, 2], [17, 16], [9, 6], [12, 10], [5, 4], [1, 19], [9, 2], [13, 11], [12, 0], [1, 5], [9, 6], [5, 14], [13, 11], [10, 2], [15, 17], [1, 19], [7, 8], [10, 6], [13, 11], [9, 2], [12, 0], [17, 19], [8, 16], [18, 1], [3, 4], [6, 3], [2, 1], [0, 17], [5, 14], [10, 9], [19, 4], [7, 8], [13, 11], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [17, 19], [10, 9], [9, 6], [12, 10], [1, 5], [8, 16], [13, 15], [18, 2], [4, 14], [17, 19], [9, 6], [19, 4], [10, 2], [0, 18], [10, 6], [18, 1], [19, 4], [0, 17], [2, 5], [10, 2], [15, 17], [16, 19], [11, 18], [6, 3], [12, 10], [2, 5], [7, 17], [12, 0], [13, 11], [3, 14], [10, 9], [12, 0], [13, 15], [1, 16], [11, 18], [12, 10], [6, 3], [0, 17], [8, 16], [18, 1], [12, 10], [5, 4], [1, 16], [9, 2], [11, 18], [10, 6], [17, 1], [13, 15], [0, 7], [5, 4], [16, 19], [10, 6], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [1, 16], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [1, 16], [11, 18], [9, 6], [3, 4], [17, 1], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [17, 1], [13, 15], [11, 18], [17, 16], [13, 11], [9, 2], [3, 4], [17, 19], [11, 12], [2, 1], [18, 5], [0, 7], [12, 10], [9, 2], [0, 7], [17, 19], [4, 14], [12, 10], [19, 4], [5, 3], [13, 15], [9, 2], [12, 18], [2, 6], [4, 14], [0, 7], [16, 19], [13, 11], [12, 0], [1, 19], [13, 11], [9, 6], [15, 17], [5, 14], [11, 12], [10, 2], [5, 4], [0, 7], [12, 10], [5, 3], [2, 1], [0, 17], [13, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 12]
[16, 19]
[15, 20]
[22, 27]
[27, 32]
[44, 53]
[42, 59]
[57, 65]
[49, 66]
[58, 68]
[63, 71]
[68, 73]
[66, 76]
[73, 79]
[69, 81]
[72, 89]
[79, 93]
[90, 103]
[102, 111]
[104, 112]
[113, 118]
[129, 133]
[137, 142]
[134, 149]
[143, 151]
[147, 153]
[159, 169]
[173, 182]
[172, 188]
[193, 196]
[189, 197]
[194, 199]
[183, 202]
[195, 203]
[196, 207]
[209, 212]
[201, 221]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[5, 8, 21]
[77, 83, 92]
[114, 120, 121]
[126, 132, 137]
[125, 131, 138]
[187, 191, 195]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[26, 29, 34]
[89, 98, 100]
[83, 92, 107]
[124, 130, 136]
[151, 157, 163]
[198, 200, 206]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[206, 215, 218]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 12]
[16, 19]
[15, 20]
[22, 27]
[27, 32]
[44, 53]
[42, 59]
[57, 65]
[49, 66]
[58, 68]
[63, 71]
[68, 73]
[66, 76]
[73, 79]
[69, 81]
[72, 89]
[79, 93]
[90, 103]
[102, 111]
[104, 112]
[113, 118]
[129, 133]
[137, 142]
[134, 149]
[143, 151]
[147, 153]
[159, 169]
[173, 182]
[172, 188]
[193, 196]
[189, 197]
[194, 199]
[183, 202]
[195, 203]
[196, 207]
[209, 212]
[201, 221]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.171831130981445

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 8, 21] ccc => cc, Pos: [6, 12] cc => I, Pos: [6, 12] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [16, 19] cc => I, Pos: [16, 19] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [26, 29, 34] ccc => cc, Pos: [27, 32] cc => I, Pos: [27, 32] cc => I, Pos: [42, 59] cc => I, Pos: [42, 59] cc => I, Pos: [44, 53] cc => I, Pos: [44, 53] cc => I, Pos: [49, 66] cc => I, Pos: [49, 66] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [58, 68] cc => I, Pos: [58, 68] cc => I, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [68, 73] cc => I, Pos: [68, 73] cc => I, Pos: [69, 81] cc => I, Pos: [69, 81] cc => I, Pos: [72, 89] cc => I, Pos: [72, 89] cc => I, Pos: [73, 79] cc => I, Pos: [73, 79] cc => I, Pos: [77, 83, 92] ccc => cc, Pos: [79, 93] cc => I, Pos: [79, 93] cc => I, Pos: [83, 92, 107] ccc => cc, Pos: [89, 98, 100] ccc => cc, Pos: [90, 103] cc => I, Pos: [90, 103] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [113, 118] cc => I, Pos: [113, 118] cc => I, Pos: [114, 120, 121] ccc => cc, Pos: [124, 130, 136] ccc => cc, Pos: [125, 131, 138] ccc => cc, Pos: [126, 132, 137] ccc => cc, Pos: [129, 133] cc => I, Pos: [129, 133] cc => I, Pos: [134, 149] cc => I, Pos: [134, 149] cc => I, Pos: [137, 142] cc => I, Pos: [137, 142] cc => I, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [151, 157, 163] ccc => cc, Pos: [159, 169] cc => I, Pos: [159, 169] cc => I, Pos: [172, 188] cc => I, Pos: [172, 188] cc => I, Pos: [173, 182] cc => I, Pos: [173, 182] cc => I, Pos: [183, 202] cc => I, Pos: [183, 202] cc => I, Pos: [187, 191, 195] ccc => cc, Pos: [189, 197] cc => I, Pos: [189, 197] cc => I, Pos: [193, 196] cc => I, Pos: [193, 196] cc => I, Pos: [194, 199] cc => I, Pos: [194, 199] cc => I, Pos: [195, 203] cc => I, Pos: [195, 203] cc => I, Pos: [196, 207] cc => I, Pos: [196, 207] cc => I, Pos: [198, 200, 206] ccc => cc, Pos: [201, 221] cc => I, Pos: [201, 221] cc => I, Pos: [206, 215, 218] ccc => cc, Pos: [209, 212] cc => I, Pos: [209, 212] cc => I]

Plan: 1
[Pos: [5, 8, 21] ccc => cc,
 Pos: [6, 12] cc => I,
 Pos: [15, 20] cc => I,
 Pos: [16, 19] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [26, 29, 34] ccc => cc,
 Pos: [42, 59] cc => I,
 Pos: [44, 53] cc => I,
 Pos: [49, 66] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [58, 68] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [69, 81] cc => I,
 Pos: [72, 89] cc => I,
 Pos: [73, 79] cc => I,
 Pos: [77, 83, 92] ccc => cc,
 Pos: [90, 103] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [114, 120, 121] ccc => cc,
 Pos: [124, 130, 136] ccc => cc,
 Pos: [125, 131, 138] ccc => cc,
 Pos: [126, 132, 137] ccc => cc,
 Pos: [129, 133] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [143, 151] cc => I,
 Pos: [147, 153] cc => I,
 Pos: [159, 169] cc => I,
 Pos: [172, 188] cc => I,
 Pos: [173, 182] cc => I,
 Pos: [183, 202] cc => I,
 Pos: [187, 191, 195] ccc => cc,
 Pos: [189, 197] cc => I,
 Pos: [193, 196] cc => I,
 Pos: [194, 199] cc => I,
 Pos: [198, 200, 206] ccc => cc,
 Pos: [201, 221] cc => I,
 Pos: [209, 212] cc => I]
Change: 39, Saving: 38

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.10938239097595215

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 8, 21] ccc => cc,
 Pos: [6, 12] cc => I,
 Pos: [15, 20] cc => I,
 Pos: [16, 19] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [26, 29, 34] ccc => cc,
 Pos: [42, 59] cc => I,
 Pos: [44, 53] cc => I,
 Pos: [49, 66] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [58, 68] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [69, 81] cc => I,
 Pos: [72, 89] cc => I,
 Pos: [73, 79] cc => I,
 Pos: [77, 83, 92] ccc => cc,
 Pos: [90, 103] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [114, 120, 121] ccc => cc,
 Pos: [124, 130, 136] ccc => cc,
 Pos: [125, 131, 138] ccc => cc,
 Pos: [126, 132, 137] ccc => cc,
 Pos: [129, 133] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [143, 151] cc => I,
 Pos: [147, 153] cc => I,
 Pos: [159, 169] cc => I,
 Pos: [172, 188] cc => I,
 Pos: [173, 182] cc => I,
 Pos: [183, 202] cc => I,
 Pos: [187, 191, 195] ccc => cc,
 Pos: [189, 197] cc => I,
 Pos: [193, 196] cc => I,
 Pos: [194, 199] cc => I,
 Pos: [198, 200, 206] ccc => cc,
 Pos: [201, 221] cc => I,
 Pos: [209, 212] cc => I]
Change: 39, Saving: 38

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 8, 21] ccc => cc
Apply:  Pos: [6, 12] cc => I
Apply:  Pos: [15, 20] cc => I
Apply:  Pos: [16, 19] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [26, 29, 34] ccc => cc
Apply:  Pos: [42, 59] cc => I
Apply:  Pos: [44, 53] cc => I
Apply:  Pos: [49, 66] cc => I
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [58, 68] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [69, 81] cc => I
Apply:  Pos: [72, 89] cc => I
Apply:  Pos: [73, 79] cc => I
Apply:  Pos: [77, 83, 92] ccc => cc
Apply:  Pos: [90, 103] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [113, 118] cc => I
Apply:  Pos: [114, 120, 121] ccc => cc
Apply:  Pos: [124, 130, 136] ccc => cc
Apply:  Pos: [125, 131, 138] ccc => cc
Apply:  Pos: [126, 132, 137] ccc => cc
Apply:  Pos: [129, 133] cc => I
Apply:  Pos: [134, 149] cc => I
Apply:  Pos: [143, 151] cc => I
Apply:  Pos: [147, 153] cc => I
Apply:  Pos: [159, 169] cc => I
Apply:  Pos: [172, 188] cc => I
Apply:  Pos: [173, 182] cc => I
Apply:  Pos: [183, 202] cc => I
Apply:  Pos: [187, 191, 195] ccc => cc
Apply:  Pos: [189, 197] cc => I
Apply:  Pos: [193, 196] cc => I
Apply:  Pos: [194, 199] cc => I
Apply:  Pos: [198, 200, 206] ccc => cc
Apply:  Pos: [201, 221] cc => I
Apply:  Pos: [209, 212] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 15], [3, 14], [9, 2], [4, 14], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [13, 15], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [4, 14], [8, 16], [0, 18], [7, 17], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [7, 17], [2, 6], [3, 4], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [1, 19], [7, 16], [10, 6], [9, 2], [17, 19], [8, 16], [18, 1], [3, 4], [6, 3], [2, 1], [0, 17], [19, 4], [13, 11], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [8, 16], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [0, 17], [2, 5], [15, 17], [16, 19], [13, 11], [6, 14], [12, 9], [2, 5], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [12, 10], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [19, 4], [4, 14], [9, 2], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [5, 14], [11, 12], [10, 2], [5, 4], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  4.2812135219573975

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[41, 58]
[56, 74]
[61, 82]
[83, 89]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 10, 15]
[24, 28, 39]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[137, 147, 150]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 21]
[41, 58]
[56, 74]
[61, 82]
[83, 89]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.734442949295044

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10, 15] ccc => cc, Pos: [7, 21] cc => I, Pos: [7, 21] cc => I, Pos: [24, 28, 39] ccc => cc, Pos: [41, 58] cc => I, Pos: [41, 58] cc => I, Pos: [56, 74] cc => I, Pos: [56, 74] cc => I, Pos: [61, 82] cc => I, Pos: [61, 82] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [137, 147, 150] ccc => cc]

Plan: 1
[Pos: [4, 10, 15] ccc => cc,
 Pos: [7, 21] cc => I,
 Pos: [24, 28, 39] ccc => cc,
 Pos: [41, 58] cc => I,
 Pos: [56, 74] cc => I,
 Pos: [61, 82] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [137, 147, 150] ccc => cc]
Change: 8, Saving: 8

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015504598617553711

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 10, 15] ccc => cc,
 Pos: [7, 21] cc => I,
 Pos: [24, 28, 39] ccc => cc,
 Pos: [41, 58] cc => I,
 Pos: [56, 74] cc => I,
 Pos: [61, 82] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [137, 147, 150] ccc => cc]
Change: 8, Saving: 8

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 10, 15] ccc => cc
Apply:  Pos: [7, 21] cc => I
Apply:  Pos: [24, 28, 39] ccc => cc
Apply:  Pos: [41, 58] cc => I
Apply:  Pos: [56, 74] cc => I
Apply:  Pos: [61, 82] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [137, 147, 150] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [1, 19], [7, 16], [10, 6], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [13, 11], [10, 6], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 9], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [12, 10], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [19, 4], [5, 4], [9, 2], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.7499475479125977

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[48, 52, 56]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.390688180923462

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 52, 56] ccc => cc]

Plan: 1
[Pos: [48, 52, 56] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 52, 56] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [48, 52, 56] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [1, 19], [7, 16], [10, 3], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [13, 11], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 9], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [12, 10], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [5, 4], [19, 4], [9, 2], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.390688180923462

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3749778270721436

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[17, 1], [10, 9], [18, 2], [0, 7], [13, 17], [3, 14], [9, 2], [12, 10], [11, 18], [15, 17], [10, 6], [18, 2], [8, 16], [18, 1], [17, 16], [10, 9], [9, 6], [2, 5], [6, 3], [8, 16], [0, 18], [7, 1], [13, 11], [5, 4], [18, 2], [17, 1], [11, 0], [5, 3], [0, 18], [15, 0], [7, 8], [5, 14], [18, 2], [6, 3], [12, 0], [18, 5], [2, 6], [12, 18], [0, 7], [18, 2], [17, 16], [12, 10], [9, 2], [1, 5], [10, 2], [15, 17], [1, 19], [7, 16], [10, 3], [9, 2], [17, 19], [18, 1], [6, 3], [2, 1], [19, 4], [13, 11], [1, 19], [11, 12], [3, 4], [18, 5], [6, 3], [5, 14], [2, 1], [12, 10], [1, 5], [13, 15], [18, 2], [4, 14], [10, 5], [0, 18], [10, 6], [18, 1], [15, 17], [16, 19], [13, 11], [6, 14], [12, 9], [7, 17], [11, 18], [3, 14], [10, 9], [1, 16], [0, 17], [8, 16], [18, 1], [12, 10], [1, 16], [9, 2], [11, 18], [17, 1], [0, 7], [16, 19], [0, 18], [13, 11], [15, 17], [2, 5], [9, 6], [7, 8], [12, 0], [2, 6], [5, 4], [1, 19], [10, 9], [11, 0], [9, 2], [12, 10], [11, 18], [9, 6], [18, 5], [11, 12], [2, 6], [12, 18], [8, 16], [18, 2], [12, 10], [5, 14], [11, 18], [17, 16], [13, 11], [9, 1], [11, 12], [2, 1], [18, 5], [19, 4], [5, 4], [9, 2], [12, 18], [2, 6], [0, 7], [16, 19], [12, 0], [1, 19], [9, 6], [15, 17], [4, 14], [11, 12], [10, 2], [0, 7], [12, 10], [2, 1], [0, 17], [13, 15], ----End Timer [Execute Mapping]:  2.3749778270721436

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [142] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 284

Reduced: 
 - size: 83 (36.89%)
 - depth: 8 (17.78%)

