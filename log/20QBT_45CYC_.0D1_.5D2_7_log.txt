----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09450960159301758

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 10], [5, 6], [14, 16], [11, 8], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [11, 8], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [15, 10], [9, 13], [18, 12], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [5, 8], [1, 13], [6, 19], [0, 12], [7, 3], [9, 13], [10, 4], [5, 8], [0, 12], [19, 14], [17, 15], [5, 11], [13, 7], [3, 12], [8, 2], [18, 0], [13, 7], [11, 10], [0, 12], [9, 7], [15, 11], [2, 16], [18, 0], [4, 13], [17, 5], [15, 11], [0, 12], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [17, 15], [0, 3], [6, 8], [9, 13], [10, 4], [14, 2], [0, 3], [8, 18], [17, 5], [14, 2], [1, 13], [18, 0], [4, 13], [19, 2], [9, 1], [11, 10], [17, 5], [2, 18], [14, 16], [4, 13], [5, 11], [19, 2], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [19, 14], [8, 2], [11, 9], [1, 13], [17, 15], [19, 2], [1, 7], [10, 9], [0, 3], [6, 11], [17, 15], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [10, 9], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [17, 15], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [14, 16], [6, 19], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [14, 16], [11, 10], [4, 13], [5, 8], [1, 7], [18, 3], [15, 10], [6, 19], [14, 16], [18, 3], [9, 1], [11, 8], [6, 19], [0, 3], [19, 14], [15, 10], [11, 8], [1, 7], [0, 3], [9, 7], [5, 11], [1, 13], [8, 18], [0, 12], [9, 7], [8, 2], [4, 13], [0, 12], [8, 2], [9, 1], [17, 15], [18, 3], [5, 11], [0, 12], [15, 9], [4, 13], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [13, 7], [14, 2], [5, 6], [0, 12], [19, 16], [14, 2], [13, 7], [17, 5], [16, 0], [19, 14], [1, 7], [17, 5], [18, 12], [19, 16], [5, 6], [8, 18], [14, 2], [4, 13], [6, 19], [14, 2], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [17, 5], [0, 3], [1, 13], [11, 10], [17, 5], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 26]
[26, 31]
[33, 40]
[36, 41]
[45, 49]
[53, 58]
[68, 73]
[72, 76]
[75, 83]
[79, 86]
[95, 98]
[67, 102]
[102, 108]
[98, 109]
[105, 114]
[108, 123]
[133, 140]
[134, 147]
[140, 148]
[145, 149]
[147, 152]
[146, 155]
[151, 156]
[153, 158]
[159, 164]
[163, 167]
[165, 168]
[160, 172]
[167, 173]
[166, 175]
[173, 184]
[182, 186]
[181, 187]
[188, 192]
[197, 200]
[207, 211]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 13, 18]
[8, 15, 24]
[48, 51, 55]
[80, 84, 88]
[83, 87, 89]
[185, 189, 194]
[202, 203, 207]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[51, 55, 59]
[144, 150, 157]
[186, 190, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[135, 139, 145]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 26]
[26, 31]
[33, 40]
[36, 41]
[45, 49]
[53, 58]
[68, 73]
[72, 76]
[75, 83]
[79, 86]
[95, 98]
[67, 102]
[102, 108]
[98, 109]
[105, 114]
[108, 123]
[133, 140]
[134, 147]
[140, 148]
[145, 149]
[147, 152]
[146, 155]
[151, 156]
[153, 158]
[159, 164]
[163, 167]
[165, 168]
[160, 172]
[167, 173]
[166, 175]
[173, 184]
[182, 186]
[181, 187]
[188, 192]
[197, 200]
[207, 211]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.202305316925049

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [8, 15, 24] ccc => cc, Pos: [11, 13, 18] ccc => cc, Pos: [21, 26] cc => I, Pos: [21, 26] cc => I, Pos: [26, 31] cc => I, Pos: [26, 31] cc => I, Pos: [33, 40] cc => I, Pos: [33, 40] cc => I, Pos: [36, 41] cc => I, Pos: [36, 41] cc => I, Pos: [45, 49] cc => I, Pos: [45, 49] cc => I, Pos: [48, 51, 55] ccc => cc, Pos: [51, 55, 59] ccc => cc, Pos: [53, 58] cc => I, Pos: [53, 58] cc => I, Pos: [67, 102] cc => I, Pos: [67, 102] cc => I, Pos: [68, 73] cc => I, Pos: [68, 73] cc => I, Pos: [72, 76] cc => I, Pos: [72, 76] cc => I, Pos: [75, 83] cc => I, Pos: [75, 83] cc => I, Pos: [79, 86] cc => I, Pos: [79, 86] cc => I, Pos: [80, 84, 88] ccc => cc, Pos: [83, 87, 89] ccc => cc, Pos: [95, 98] cc => I, Pos: [95, 98] cc => I, Pos: [98, 109] cc => I, Pos: [98, 109] cc => I, Pos: [102, 108] cc => I, Pos: [102, 108] cc => I, Pos: [105, 114] cc => I, Pos: [105, 114] cc => I, Pos: [108, 123] cc => I, Pos: [108, 123] cc => I, Pos: [133, 140] cc => I, Pos: [133, 140] cc => I, Pos: [134, 147] cc => I, Pos: [134, 147] cc => I, Pos: [135, 139, 145] ccc => cc, Pos: [140, 148] cc => I, Pos: [140, 148] cc => I, Pos: [144, 150, 157] ccc => cc, Pos: [145, 149] cc => I, Pos: [145, 149] cc => I, Pos: [146, 155] cc => I, Pos: [146, 155] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [153, 158] cc => I, Pos: [153, 158] cc => I, Pos: [159, 164] cc => I, Pos: [159, 164] cc => I, Pos: [160, 172] cc => I, Pos: [160, 172] cc => I, Pos: [163, 167] cc => I, Pos: [163, 167] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [166, 175] cc => I, Pos: [166, 175] cc => I, Pos: [167, 173] cc => I, Pos: [167, 173] cc => I, Pos: [173, 184] cc => I, Pos: [173, 184] cc => I, Pos: [181, 187] cc => I, Pos: [181, 187] cc => I, Pos: [182, 186] cc => I, Pos: [182, 186] cc => I, Pos: [185, 189, 194] ccc => cc, Pos: [186, 190, 197] ccc => cc, Pos: [188, 192] cc => I, Pos: [188, 192] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [202, 203, 207] ccc => cc, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I]

Plan: 1
[Pos: [8, 15, 24] ccc => cc,
 Pos: [11, 13, 18] ccc => cc,
 Pos: [21, 26] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [36, 41] cc => I,
 Pos: [45, 49] cc => I,
 Pos: [48, 51, 55] ccc => cc,
 Pos: [53, 58] cc => I,
 Pos: [67, 102] cc => I,
 Pos: [68, 73] cc => I,
 Pos: [72, 76] cc => I,
 Pos: [75, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [80, 84, 88] ccc => cc,
 Pos: [95, 98] cc => I,
 Pos: [105, 114] cc => I,
 Pos: [108, 123] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [134, 147] cc => I,
 Pos: [135, 139, 145] ccc => cc,
 Pos: [144, 150, 157] ccc => cc,
 Pos: [146, 155] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [153, 158] cc => I,
 Pos: [159, 164] cc => I,
 Pos: [160, 172] cc => I,
 Pos: [163, 167] cc => I,
 Pos: [165, 168] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [173, 184] cc => I,
 Pos: [181, 187] cc => I,
 Pos: [182, 186] cc => I,
 Pos: [185, 189, 194] ccc => cc,
 Pos: [188, 192] cc => I,
 Pos: [197, 200] cc => I,
 Pos: [202, 203, 207] ccc => cc]
Change: 36, Saving: 128

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [8, 15, 24] ccc => cc,
 Pos: [11, 13, 18] ccc => cc,
 Pos: [21, 26] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [36, 41] cc => I,
 Pos: [45, 49] cc => I,
 Pos: [48, 51, 55] ccc => cc,
 Pos: [53, 58] cc => I,
 Pos: [67, 102] cc => I,
 Pos: [68, 73] cc => I,
 Pos: [72, 76] cc => I,
 Pos: [75, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [80, 84, 88] ccc => cc,
 Pos: [95, 98] cc => I,
 Pos: [105, 114] cc => I,
 Pos: [108, 123] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [134, 147] cc => I,
 Pos: [135, 139, 145] ccc => cc,
 Pos: [144, 150, 157] ccc => cc,
 Pos: [146, 155] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [153, 158] cc => I,
 Pos: [159, 164] cc => I,
 Pos: [160, 172] cc => I,
 Pos: [163, 167] cc => I,
 Pos: [165, 168] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [173, 184] cc => I,
 Pos: [181, 187] cc => I,
 Pos: [182, 186] cc => I,
 Pos: [185, 189, 194] ccc => cc,
 Pos: [188, 192] cc => I,
 Pos: [197, 200] cc => I,
 Pos: [202, 203, 207] ccc => cc]
Change: 36, Saving: 128

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [8, 15, 24] ccc => cc
Apply:  Pos: [11, 13, 18] ccc => cc
Apply:  Pos: [21, 26] cc => I
Apply:  Pos: [33, 40] cc => I
Apply:  Pos: [36, 41] cc => I
Apply:  Pos: [45, 49] cc => I
Apply:  Pos: [48, 51, 55] ccc => cc
Apply:  Pos: [53, 58] cc => I
Apply:  Pos: [67, 102] cc => I
Apply:  Pos: [68, 73] cc => I
Apply:  Pos: [72, 76] cc => I
Apply:  Pos: [75, 83] cc => I
Apply:  Pos: [79, 86] cc => I
Apply:  Pos: [80, 84, 88] ccc => cc
Apply:  Pos: [95, 98] cc => I
Apply:  Pos: [105, 114] cc => I
Apply:  Pos: [108, 123] cc => I
Apply:  Pos: [133, 140] cc => I
Apply:  Pos: [134, 147] cc => I
Apply:  Pos: [135, 139, 145] ccc => cc
Apply:  Pos: [144, 150, 157] ccc => cc
Apply:  Pos: [146, 155] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [153, 158] cc => I
Apply:  Pos: [159, 164] cc => I
Apply:  Pos: [160, 172] cc => I
Apply:  Pos: [163, 167] cc => I
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [166, 175] cc => I
Apply:  Pos: [173, 184] cc => I
Apply:  Pos: [181, 187] cc => I
Apply:  Pos: [182, 186] cc => I
Apply:  Pos: [185, 189, 194] ccc => cc
Apply:  Pos: [188, 192] cc => I
Apply:  Pos: [197, 200] cc => I
Apply:  Pos: [202, 203, 207] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [3, 12], [8, 2], [18, 12], [11, 10], [0, 12], [9, 7], [2, 16], [4, 13], [17, 5], [0, 12], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [18, 3], [13, 7], [11, 8], [10, 9], [3, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [18, 3], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [5, 6], [19, 0], [16, 0], [19, 14], [1, 7], [18, 12], [5, 6], [8, 18], [4, 13], [6, 19], [10, 4], [17, 6], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [17, 5], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  4.202305316925049

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[41, 46]
[128, 134]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[102, 107, 113]
[134, 137, 139]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 118, 121]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[139, 140, 147]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[41, 46]
[128, 134]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7808876037597656

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [41, 46] cc => I, Pos: [41, 46] cc => I, Pos: [102, 107, 113] ccc => cc, Pos: [113, 118, 121] ccc => cc, Pos: [128, 134] cc => I, Pos: [128, 134] cc => I, Pos: [134, 137, 139] ccc => cc, Pos: [139, 140, 147] ccc => cc]

Plan: 1
[Pos: [41, 46] cc => I,
 Pos: [102, 107, 113] ccc => cc,
 Pos: [128, 134] cc => I,
 Pos: [139, 140, 147] ccc => cc]
Change: 4, Saving: 12

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [41, 46] cc => I,
 Pos: [102, 107, 113] ccc => cc,
 Pos: [128, 134] cc => I,
 Pos: [139, 140, 147] ccc => cc]
Change: 4, Saving: 12

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [41, 46] cc => I
Apply:  Pos: [102, 107, 113] ccc => cc
Apply:  Pos: [128, 134] cc => I
Apply:  Pos: [139, 140, 147] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 1], [9, 13], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [3, 12], [8, 2], [18, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [2, 18], [8, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 12], [18, 0], [13, 7], [11, 8], [10, 9], [3, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [16, 0], [19, 14], [19, 0], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.7808876037597656

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 39, 45]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.640589714050293

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 39, 45] ccc => cc]

Plan: 1
[Pos: [37, 39, 45] ccc => cc]
Change: 1, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 39, 45] ccc => cc]
Change: 1, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 39, 45] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [18, 3], [8, 2], [3, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [18, 12], [13, 7], [11, 8], [10, 9], [3, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [16, 0], [19, 0], [19, 14], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.640589714050293

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[125, 137]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[97, 99, 100]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[125, 137]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.656259298324585

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [97, 99, 100] ccc => cc, Pos: [125, 137] cc => I, Pos: [125, 137] cc => I]

Plan: 1
[Pos: [97, 99, 100] ccc => cc, Pos: [125, 137] cc => I]
Change: 2, Saving: 6

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [97, 99, 100] ccc => cc, Pos: [125, 137] cc => I]
Change: 2, Saving: 6

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [97, 99, 100] ccc => cc
Apply:  Pos: [125, 137] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 1], [9, 13], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [18, 3], [8, 2], [3, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [2, 18], [8, 18], [1, 13], [15, 10], [19, 14], [5, 8], [18, 0], [11, 9], [0, 12], [13, 7], [11, 8], [10, 9], [3, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [19, 0], [19, 14], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.656259298324585

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[111, 120, 123]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.5624942779541016

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [111, 120, 123] ccc => cc]

Plan: 1
[Pos: [111, 120, 123] ccc => cc]
Change: 1, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [111, 120, 123] ccc => cc]
Change: 1, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [111, 120, 123] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [18, 3], [8, 2], [3, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [18, 0], [11, 9], [0, 12], [13, 7], [11, 8], [10, 9], [3, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [6, 19], [19, 16], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [19, 0], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.5624942779541016

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [150] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 300

Reduced: 
 - size: 75 (33.33%)
 - cycle: 150 (33.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09342765808105469

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 10], [5, 6], [14, 16], [11, 8], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [11, 8], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [15, 10], [9, 13], [18, 12], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [5, 8], [1, 13], [6, 19], [0, 12], [7, 3], [9, 13], [10, 4], [5, 8], [0, 12], [19, 14], [17, 15], [5, 11], [13, 7], [3, 12], [8, 2], [18, 0], [13, 7], [11, 10], [0, 12], [9, 7], [15, 11], [2, 16], [18, 0], [4, 13], [17, 5], [15, 11], [0, 12], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [17, 15], [0, 3], [6, 8], [9, 13], [10, 4], [14, 2], [0, 3], [8, 18], [17, 5], [14, 2], [1, 13], [18, 0], [4, 13], [19, 2], [9, 1], [11, 10], [17, 5], [2, 18], [14, 16], [4, 13], [5, 11], [19, 2], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [19, 14], [8, 2], [11, 9], [1, 13], [17, 15], [19, 2], [1, 7], [10, 9], [0, 3], [6, 11], [17, 15], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [10, 9], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [17, 15], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [14, 16], [6, 19], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [14, 16], [11, 10], [4, 13], [5, 8], [1, 7], [18, 3], [15, 10], [6, 19], [14, 16], [18, 3], [9, 1], [11, 8], [6, 19], [0, 3], [19, 14], [15, 10], [11, 8], [1, 7], [0, 3], [9, 7], [5, 11], [1, 13], [8, 18], [0, 12], [9, 7], [8, 2], [4, 13], [0, 12], [8, 2], [9, 1], [17, 15], [18, 3], [5, 11], [0, 12], [15, 9], [4, 13], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [13, 7], [14, 2], [5, 6], [0, 12], [19, 16], [14, 2], [13, 7], [17, 5], [16, 0], [19, 14], [1, 7], [17, 5], [18, 12], [19, 16], [5, 6], [8, 18], [14, 2], [4, 13], [6, 19], [14, 2], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [17, 5], [0, 3], [1, 13], [11, 10], [17, 5], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 26]
[26, 31]
[33, 40]
[36, 41]
[45, 49]
[53, 58]
[68, 73]
[72, 76]
[75, 83]
[79, 86]
[95, 98]
[67, 102]
[102, 108]
[98, 109]
[105, 114]
[108, 123]
[133, 140]
[134, 147]
[140, 148]
[145, 149]
[147, 152]
[146, 155]
[151, 156]
[153, 158]
[159, 164]
[163, 167]
[165, 168]
[160, 172]
[167, 173]
[166, 175]
[173, 184]
[182, 186]
[181, 187]
[188, 192]
[197, 200]
[207, 211]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 13, 18]
[8, 15, 24]
[48, 51, 55]
[80, 84, 88]
[83, 87, 89]
[185, 189, 194]
[202, 203, 207]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[51, 55, 59]
[144, 150, 157]
[186, 190, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[135, 139, 145]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 26]
[26, 31]
[33, 40]
[36, 41]
[45, 49]
[53, 58]
[68, 73]
[72, 76]
[75, 83]
[79, 86]
[95, 98]
[67, 102]
[102, 108]
[98, 109]
[105, 114]
[108, 123]
[133, 140]
[134, 147]
[140, 148]
[145, 149]
[147, 152]
[146, 155]
[151, 156]
[153, 158]
[159, 164]
[163, 167]
[165, 168]
[160, 172]
[167, 173]
[166, 175]
[173, 184]
[182, 186]
[181, 187]
[188, 192]
[197, 200]
[207, 211]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.171691656112671

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [8, 15, 24] ccc => cc, Pos: [11, 13, 18] ccc => cc, Pos: [21, 26] cc => I, Pos: [21, 26] cc => I, Pos: [26, 31] cc => I, Pos: [26, 31] cc => I, Pos: [33, 40] cc => I, Pos: [33, 40] cc => I, Pos: [36, 41] cc => I, Pos: [36, 41] cc => I, Pos: [45, 49] cc => I, Pos: [45, 49] cc => I, Pos: [48, 51, 55] ccc => cc, Pos: [51, 55, 59] ccc => cc, Pos: [53, 58] cc => I, Pos: [53, 58] cc => I, Pos: [67, 102] cc => I, Pos: [67, 102] cc => I, Pos: [68, 73] cc => I, Pos: [68, 73] cc => I, Pos: [72, 76] cc => I, Pos: [72, 76] cc => I, Pos: [75, 83] cc => I, Pos: [75, 83] cc => I, Pos: [79, 86] cc => I, Pos: [79, 86] cc => I, Pos: [80, 84, 88] ccc => cc, Pos: [83, 87, 89] ccc => cc, Pos: [95, 98] cc => I, Pos: [95, 98] cc => I, Pos: [98, 109] cc => I, Pos: [98, 109] cc => I, Pos: [102, 108] cc => I, Pos: [102, 108] cc => I, Pos: [105, 114] cc => I, Pos: [105, 114] cc => I, Pos: [108, 123] cc => I, Pos: [108, 123] cc => I, Pos: [133, 140] cc => I, Pos: [133, 140] cc => I, Pos: [134, 147] cc => I, Pos: [134, 147] cc => I, Pos: [135, 139, 145] ccc => cc, Pos: [140, 148] cc => I, Pos: [140, 148] cc => I, Pos: [144, 150, 157] ccc => cc, Pos: [145, 149] cc => I, Pos: [145, 149] cc => I, Pos: [146, 155] cc => I, Pos: [146, 155] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [153, 158] cc => I, Pos: [153, 158] cc => I, Pos: [159, 164] cc => I, Pos: [159, 164] cc => I, Pos: [160, 172] cc => I, Pos: [160, 172] cc => I, Pos: [163, 167] cc => I, Pos: [163, 167] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [166, 175] cc => I, Pos: [166, 175] cc => I, Pos: [167, 173] cc => I, Pos: [167, 173] cc => I, Pos: [173, 184] cc => I, Pos: [173, 184] cc => I, Pos: [181, 187] cc => I, Pos: [181, 187] cc => I, Pos: [182, 186] cc => I, Pos: [182, 186] cc => I, Pos: [185, 189, 194] ccc => cc, Pos: [186, 190, 197] ccc => cc, Pos: [188, 192] cc => I, Pos: [188, 192] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [202, 203, 207] ccc => cc, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I]

Plan: 1
[Pos: [8, 15, 24] ccc => cc,
 Pos: [11, 13, 18] ccc => cc,
 Pos: [21, 26] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [36, 41] cc => I,
 Pos: [45, 49] cc => I,
 Pos: [48, 51, 55] ccc => cc,
 Pos: [53, 58] cc => I,
 Pos: [67, 102] cc => I,
 Pos: [68, 73] cc => I,
 Pos: [72, 76] cc => I,
 Pos: [75, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [80, 84, 88] ccc => cc,
 Pos: [95, 98] cc => I,
 Pos: [105, 114] cc => I,
 Pos: [108, 123] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [134, 147] cc => I,
 Pos: [135, 139, 145] ccc => cc,
 Pos: [144, 150, 157] ccc => cc,
 Pos: [146, 155] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [153, 158] cc => I,
 Pos: [159, 164] cc => I,
 Pos: [160, 172] cc => I,
 Pos: [163, 167] cc => I,
 Pos: [165, 168] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [173, 184] cc => I,
 Pos: [181, 187] cc => I,
 Pos: [182, 186] cc => I,
 Pos: [185, 189, 194] ccc => cc,
 Pos: [188, 192] cc => I,
 Pos: [197, 200] cc => I,
 Pos: [202, 203, 207] ccc => cc]
Change: 36, Saving: 40

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.07828092575073242

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [8, 15, 24] ccc => cc,
 Pos: [11, 13, 18] ccc => cc,
 Pos: [21, 26] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [36, 41] cc => I,
 Pos: [45, 49] cc => I,
 Pos: [48, 51, 55] ccc => cc,
 Pos: [53, 58] cc => I,
 Pos: [67, 102] cc => I,
 Pos: [68, 73] cc => I,
 Pos: [72, 76] cc => I,
 Pos: [75, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [80, 84, 88] ccc => cc,
 Pos: [95, 98] cc => I,
 Pos: [105, 114] cc => I,
 Pos: [108, 123] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [134, 147] cc => I,
 Pos: [135, 139, 145] ccc => cc,
 Pos: [144, 150, 157] ccc => cc,
 Pos: [146, 155] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [153, 158] cc => I,
 Pos: [159, 164] cc => I,
 Pos: [160, 172] cc => I,
 Pos: [163, 167] cc => I,
 Pos: [165, 168] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [173, 184] cc => I,
 Pos: [181, 187] cc => I,
 Pos: [182, 186] cc => I,
 Pos: [185, 189, 194] ccc => cc,
 Pos: [188, 192] cc => I,
 Pos: [197, 200] cc => I,
 Pos: [202, 203, 207] ccc => cc]
Change: 36, Saving: 40

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [8, 15, 24] ccc => cc
Apply:  Pos: [11, 13, 18] ccc => cc
Apply:  Pos: [21, 26] cc => I
Apply:  Pos: [33, 40] cc => I
Apply:  Pos: [36, 41] cc => I
Apply:  Pos: [45, 49] cc => I
Apply:  Pos: [48, 51, 55] ccc => cc
Apply:  Pos: [53, 58] cc => I
Apply:  Pos: [67, 102] cc => I
Apply:  Pos: [68, 73] cc => I
Apply:  Pos: [72, 76] cc => I
Apply:  Pos: [75, 83] cc => I
Apply:  Pos: [79, 86] cc => I
Apply:  Pos: [80, 84, 88] ccc => cc
Apply:  Pos: [95, 98] cc => I
Apply:  Pos: [105, 114] cc => I
Apply:  Pos: [108, 123] cc => I
Apply:  Pos: [133, 140] cc => I
Apply:  Pos: [134, 147] cc => I
Apply:  Pos: [135, 139, 145] ccc => cc
Apply:  Pos: [144, 150, 157] ccc => cc
Apply:  Pos: [146, 155] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [153, 158] cc => I
Apply:  Pos: [159, 164] cc => I
Apply:  Pos: [160, 172] cc => I
Apply:  Pos: [163, 167] cc => I
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [166, 175] cc => I
Apply:  Pos: [173, 184] cc => I
Apply:  Pos: [181, 187] cc => I
Apply:  Pos: [182, 186] cc => I
Apply:  Pos: [185, 189, 194] ccc => cc
Apply:  Pos: [188, 192] cc => I
Apply:  Pos: [197, 200] cc => I
Apply:  Pos: [202, 203, 207] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015518903732299805

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [3, 12], [8, 2], [18, 12], [11, 10], [0, 12], [9, 7], [2, 16], [4, 13], [17, 5], [0, 12], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [18, 3], [13, 7], [11, 8], [10, 9], [3, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [18, 3], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [5, 6], [19, 0], [16, 0], [19, 14], [1, 7], [18, 12], [5, 6], [8, 18], [4, 13], [6, 19], [10, 4], [17, 6], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [17, 5], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  4.265491485595703

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[41, 46]
[128, 134]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[102, 107, 113]
[134, 137, 139]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 118, 121]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[139, 140, 147]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[41, 46]
[128, 134]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.749971866607666

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [41, 46] cc => I, Pos: [41, 46] cc => I, Pos: [102, 107, 113] ccc => cc, Pos: [113, 118, 121] ccc => cc, Pos: [128, 134] cc => I, Pos: [128, 134] cc => I, Pos: [134, 137, 139] ccc => cc, Pos: [139, 140, 147] ccc => cc]

Plan: 1
[Pos: [41, 46] cc => I,
 Pos: [102, 107, 113] ccc => cc,
 Pos: [128, 134] cc => I,
 Pos: [139, 140, 147] ccc => cc]
Change: 4, Saving: 3

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015607833862304688

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [41, 46] cc => I,
 Pos: [102, 107, 113] ccc => cc,
 Pos: [128, 134] cc => I,
 Pos: [139, 140, 147] ccc => cc]
Change: 4, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [41, 46] cc => I
Apply:  Pos: [102, 107, 113] ccc => cc
Apply:  Pos: [128, 134] cc => I
Apply:  Pos: [139, 140, 147] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 1], [9, 13], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [3, 12], [8, 2], [18, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [2, 18], [8, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 12], [18, 0], [13, 7], [11, 8], [10, 9], [3, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [16, 0], [19, 14], [19, 0], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.7655797004699707

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 39, 45]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6406564712524414

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 39, 45] ccc => cc]

Plan: 1
[Pos: [37, 39, 45] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 39, 45] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 39, 45] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [18, 3], [8, 2], [3, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [18, 12], [13, 7], [11, 8], [10, 9], [3, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [16, 0], [19, 0], [19, 14], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.6406564712524414

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[125, 137]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[97, 99, 100]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[125, 137]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.609349250793457

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [97, 99, 100] ccc => cc, Pos: [125, 137] cc => I, Pos: [125, 137] cc => I]

Plan: 1
[Pos: [97, 99, 100] ccc => cc, Pos: [125, 137] cc => I]
Change: 2, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [97, 99, 100] ccc => cc, Pos: [125, 137] cc => I]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [97, 99, 100] ccc => cc
Apply:  Pos: [125, 137] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 1], [9, 13], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [18, 3], [8, 2], [3, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [2, 18], [8, 18], [1, 13], [15, 10], [19, 14], [5, 8], [18, 0], [11, 9], [0, 12], [13, 7], [11, 8], [10, 9], [3, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [19, 0], [19, 14], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.609349250793457

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[111, 120, 123]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.593536138534546

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [111, 120, 123] ccc => cc]

Plan: 1
[Pos: [111, 120, 123] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [111, 120, 123] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [111, 120, 123] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [18, 3], [8, 2], [3, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [18, 0], [11, 9], [0, 12], [13, 7], [11, 8], [10, 9], [3, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [6, 19], [19, 16], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [19, 0], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.593536138534546

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [150] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 300

Reduced: 
 - size: 75 (33.33%)
 - depth: 11 (24.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07811951637268066

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 10], [5, 6], [14, 16], [11, 8], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [11, 8], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [15, 10], [9, 13], [18, 12], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [5, 8], [1, 13], [6, 19], [0, 12], [7, 3], [9, 13], [10, 4], [5, 8], [0, 12], [19, 14], [17, 15], [5, 11], [13, 7], [3, 12], [8, 2], [18, 0], [13, 7], [11, 10], [0, 12], [9, 7], [15, 11], [2, 16], [18, 0], [4, 13], [17, 5], [15, 11], [0, 12], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [17, 15], [0, 3], [6, 8], [9, 13], [10, 4], [14, 2], [0, 3], [8, 18], [17, 5], [14, 2], [1, 13], [18, 0], [4, 13], [19, 2], [9, 1], [11, 10], [17, 5], [2, 18], [14, 16], [4, 13], [5, 11], [19, 2], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [19, 14], [8, 2], [11, 9], [1, 13], [17, 15], [19, 2], [1, 7], [10, 9], [0, 3], [6, 11], [17, 15], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [10, 9], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [17, 15], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [14, 16], [6, 19], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [14, 16], [11, 10], [4, 13], [5, 8], [1, 7], [18, 3], [15, 10], [6, 19], [14, 16], [18, 3], [9, 1], [11, 8], [6, 19], [0, 3], [19, 14], [15, 10], [11, 8], [1, 7], [0, 3], [9, 7], [5, 11], [1, 13], [8, 18], [0, 12], [9, 7], [8, 2], [4, 13], [0, 12], [8, 2], [9, 1], [17, 15], [18, 3], [5, 11], [0, 12], [15, 9], [4, 13], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [13, 7], [14, 2], [5, 6], [0, 12], [19, 16], [14, 2], [13, 7], [17, 5], [16, 0], [19, 14], [1, 7], [17, 5], [18, 12], [19, 16], [5, 6], [8, 18], [14, 2], [4, 13], [6, 19], [14, 2], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [17, 5], [0, 3], [1, 13], [11, 10], [17, 5], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 26]
[26, 31]
[33, 40]
[36, 41]
[45, 49]
[53, 58]
[68, 73]
[72, 76]
[75, 83]
[79, 86]
[95, 98]
[67, 102]
[102, 108]
[98, 109]
[105, 114]
[108, 123]
[133, 140]
[134, 147]
[140, 148]
[145, 149]
[147, 152]
[146, 155]
[151, 156]
[153, 158]
[159, 164]
[163, 167]
[165, 168]
[160, 172]
[167, 173]
[166, 175]
[173, 184]
[182, 186]
[181, 187]
[188, 192]
[197, 200]
[207, 211]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 13, 18]
[8, 15, 24]
[48, 51, 55]
[80, 84, 88]
[83, 87, 89]
[185, 189, 194]
[202, 203, 207]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[51, 55, 59]
[144, 150, 157]
[186, 190, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[135, 139, 145]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 26]
[26, 31]
[33, 40]
[36, 41]
[45, 49]
[53, 58]
[68, 73]
[72, 76]
[75, 83]
[79, 86]
[95, 98]
[67, 102]
[102, 108]
[98, 109]
[105, 114]
[108, 123]
[133, 140]
[134, 147]
[140, 148]
[145, 149]
[147, 152]
[146, 155]
[151, 156]
[153, 158]
[159, 164]
[163, 167]
[165, 168]
[160, 172]
[167, 173]
[166, 175]
[173, 184]
[182, 186]
[181, 187]
[188, 192]
[197, 200]
[207, 211]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.151848793029785

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [8, 15, 24] ccc => cc, Pos: [11, 13, 18] ccc => cc, Pos: [21, 26] cc => I, Pos: [21, 26] cc => I, Pos: [26, 31] cc => I, Pos: [26, 31] cc => I, Pos: [33, 40] cc => I, Pos: [33, 40] cc => I, Pos: [36, 41] cc => I, Pos: [36, 41] cc => I, Pos: [45, 49] cc => I, Pos: [45, 49] cc => I, Pos: [48, 51, 55] ccc => cc, Pos: [51, 55, 59] ccc => cc, Pos: [53, 58] cc => I, Pos: [53, 58] cc => I, Pos: [67, 102] cc => I, Pos: [67, 102] cc => I, Pos: [68, 73] cc => I, Pos: [68, 73] cc => I, Pos: [72, 76] cc => I, Pos: [72, 76] cc => I, Pos: [75, 83] cc => I, Pos: [75, 83] cc => I, Pos: [79, 86] cc => I, Pos: [79, 86] cc => I, Pos: [80, 84, 88] ccc => cc, Pos: [83, 87, 89] ccc => cc, Pos: [95, 98] cc => I, Pos: [95, 98] cc => I, Pos: [98, 109] cc => I, Pos: [98, 109] cc => I, Pos: [102, 108] cc => I, Pos: [102, 108] cc => I, Pos: [105, 114] cc => I, Pos: [105, 114] cc => I, Pos: [108, 123] cc => I, Pos: [108, 123] cc => I, Pos: [133, 140] cc => I, Pos: [133, 140] cc => I, Pos: [134, 147] cc => I, Pos: [134, 147] cc => I, Pos: [135, 139, 145] ccc => cc, Pos: [140, 148] cc => I, Pos: [140, 148] cc => I, Pos: [144, 150, 157] ccc => cc, Pos: [145, 149] cc => I, Pos: [145, 149] cc => I, Pos: [146, 155] cc => I, Pos: [146, 155] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [153, 158] cc => I, Pos: [153, 158] cc => I, Pos: [159, 164] cc => I, Pos: [159, 164] cc => I, Pos: [160, 172] cc => I, Pos: [160, 172] cc => I, Pos: [163, 167] cc => I, Pos: [163, 167] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [166, 175] cc => I, Pos: [166, 175] cc => I, Pos: [167, 173] cc => I, Pos: [167, 173] cc => I, Pos: [173, 184] cc => I, Pos: [173, 184] cc => I, Pos: [181, 187] cc => I, Pos: [181, 187] cc => I, Pos: [182, 186] cc => I, Pos: [182, 186] cc => I, Pos: [185, 189, 194] ccc => cc, Pos: [186, 190, 197] ccc => cc, Pos: [188, 192] cc => I, Pos: [188, 192] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [202, 203, 207] ccc => cc, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I]

--------End Timer [Generate Plans]:  0.0156097412109375

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [8, 15, 24] ccc => cc,
 Pos: [11, 13, 18] ccc => cc,
 Pos: [21, 26] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [36, 41] cc => I,
 Pos: [45, 49] cc => I,
 Pos: [48, 51, 55] ccc => cc,
 Pos: [53, 58] cc => I,
 Pos: [102, 108] cc => I,
 Pos: [68, 73] cc => I,
 Pos: [72, 76] cc => I,
 Pos: [75, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [80, 84, 88] ccc => cc,
 Pos: [95, 98] cc => I,
 Pos: [105, 114] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [147, 152] cc => I,
 Pos: [145, 149] cc => I,
 Pos: [144, 150, 157] ccc => cc,
 Pos: [146, 155] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [153, 158] cc => I,
 Pos: [159, 164] cc => I,
 Pos: [160, 172] cc => I,
 Pos: [167, 173] cc => I,
 Pos: [165, 168] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [181, 187] cc => I,
 Pos: [186, 190, 197] ccc => cc,
 Pos: [185, 189, 194] ccc => cc,
 Pos: [188, 192] cc => I,
 Pos: [207, 211] cc => I]
Change: 33, Saving: 118

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [8, 15, 24] ccc => cc
Apply:  Pos: [11, 13, 18] ccc => cc
Apply:  Pos: [21, 26] cc => I
Apply:  Pos: [33, 40] cc => I
Apply:  Pos: [36, 41] cc => I
Apply:  Pos: [45, 49] cc => I
Apply:  Pos: [48, 51, 55] ccc => cc
Apply:  Pos: [53, 58] cc => I
Apply:  Pos: [102, 108] cc => I
Apply:  Pos: [68, 73] cc => I
Apply:  Pos: [72, 76] cc => I
Apply:  Pos: [75, 83] cc => I
Apply:  Pos: [79, 86] cc => I
Apply:  Pos: [80, 84, 88] ccc => cc
Apply:  Pos: [95, 98] cc => I
Apply:  Pos: [105, 114] cc => I
Apply:  Pos: [133, 140] cc => I
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [145, 149] cc => I
Apply:  Pos: [144, 150, 157] ccc => cc
Apply:  Pos: [146, 155] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [153, 158] cc => I
Apply:  Pos: [159, 164] cc => I
Apply:  Pos: [160, 172] cc => I
Apply:  Pos: [167, 173] cc => I
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [166, 175] cc => I
Apply:  Pos: [181, 187] cc => I
Apply:  Pos: [186, 190, 197] ccc => cc
Apply:  Pos: [185, 189, 194] ccc => cc
Apply:  Pos: [188, 192] cc => I
Apply:  Pos: [207, 211] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [3, 12], [8, 2], [18, 12], [11, 10], [0, 12], [9, 7], [2, 16], [4, 13], [17, 5], [0, 12], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [17, 15], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [17, 15], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [6, 19], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [19, 14], [1, 13], [8, 18], [0, 12], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [14, 2], [5, 6], [0, 12], [19, 0], [19, 14], [16, 0], [14, 2], [1, 7], [18, 12], [5, 6], [8, 18], [4, 13], [6, 19], [14, 2], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  4.167458534240723

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[41, 46]
[35, 54]
[54, 95]
[120, 132]
[131, 139]
[136, 143]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[92, 100, 105]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[115, 117, 127]
[130, 133, 136]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[41, 46]
[35, 54]
[54, 95]
[120, 132]
[131, 139]
[136, 143]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8736934661865234

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [35, 54] cc => I, Pos: [35, 54] cc => I, Pos: [41, 46] cc => I, Pos: [41, 46] cc => I, Pos: [54, 95] cc => I, Pos: [54, 95] cc => I, Pos: [92, 100, 105] ccc => cc, Pos: [115, 117, 127] ccc => cc, Pos: [120, 132] cc => I, Pos: [120, 132] cc => I, Pos: [130, 133, 136] ccc => cc, Pos: [131, 139] cc => I, Pos: [131, 139] cc => I, Pos: [136, 143] cc => I, Pos: [136, 143] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [54, 95] cc => I,
 Pos: [41, 46] cc => I,
 Pos: [92, 100, 105] ccc => cc,
 Pos: [115, 117, 127] ccc => cc,
 Pos: [120, 132] cc => I,
 Pos: [130, 133, 136] ccc => cc,
 Pos: [131, 139] cc => I]
Change: 7, Saving: 22

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [54, 95] cc => I
Apply:  Pos: [41, 46] cc => I
Apply:  Pos: [92, 100, 105] ccc => cc
Apply:  Pos: [115, 117, 127] ccc => cc
Apply:  Pos: [120, 132] cc => I
Apply:  Pos: [130, 133, 136] ccc => cc
Apply:  Pos: [131, 139] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 1], [9, 13], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [3, 12], [8, 2], [18, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 14], [10, 4], [5, 11], [2, 18], [8, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [19, 14], [1, 7], [14, 16], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [0, 3], [1, 18], [19, 14], [14, 2], [16, 0], [19, 0], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [14, 2], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.8736934661865234

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[96, 110]
[124, 132]
[126, 138]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[110, 112, 123]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 39, 45]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[96, 110]
[124, 132]
[126, 138]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.640676498413086

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 39, 45] ccc => cc, Pos: [96, 110] cc => I, Pos: [96, 110] cc => I, Pos: [110, 112, 123] ccc => cc, Pos: [124, 132] cc => I, Pos: [124, 132] cc => I, Pos: [126, 138] cc => I, Pos: [126, 138] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 39, 45] ccc => cc,
 Pos: [96, 110] cc => I,
 Pos: [124, 132] cc => I,
 Pos: [126, 138] cc => I]
Change: 4, Saving: 14

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 39, 45] ccc => cc
Apply:  Pos: [96, 110] cc => I
Apply:  Pos: [124, 132] cc => I
Apply:  Pos: [126, 138] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [18, 3], [8, 2], [3, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 14], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [5, 8], [0, 12], [11, 9], [18, 0], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [1, 7], [14, 16], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [0, 3], [1, 18], [19, 14], [19, 0], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.640676498413086

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.469088315963745

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 1], [9, 13], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [18, 3], [8, 2], [3, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 14], [10, 4], [5, 11], [2, 18], [8, 18], [1, 13], [15, 10], [5, 8], [0, 12], [11, 9], [18, 0], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [1, 7], [14, 16], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [0, 3], [1, 18], [19, 0], [19, 14], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.469088315963745

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [148] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 296

Reduced: 
 - size: 77 (34.22%)
 - cycle: 154 (34.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07811832427978516

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 10], [5, 6], [14, 16], [11, 8], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [11, 8], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [15, 10], [9, 13], [18, 12], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [5, 8], [1, 13], [6, 19], [0, 12], [7, 3], [9, 13], [10, 4], [5, 8], [0, 12], [19, 14], [17, 15], [5, 11], [13, 7], [3, 12], [8, 2], [18, 0], [13, 7], [11, 10], [0, 12], [9, 7], [15, 11], [2, 16], [18, 0], [4, 13], [17, 5], [15, 11], [0, 12], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [17, 15], [0, 3], [6, 8], [9, 13], [10, 4], [14, 2], [0, 3], [8, 18], [17, 5], [14, 2], [1, 13], [18, 0], [4, 13], [19, 2], [9, 1], [11, 10], [17, 5], [2, 18], [14, 16], [4, 13], [5, 11], [19, 2], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [19, 14], [8, 2], [11, 9], [1, 13], [17, 15], [19, 2], [1, 7], [10, 9], [0, 3], [6, 11], [17, 15], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [10, 9], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [17, 15], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [14, 16], [6, 19], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [14, 16], [11, 10], [4, 13], [5, 8], [1, 7], [18, 3], [15, 10], [6, 19], [14, 16], [18, 3], [9, 1], [11, 8], [6, 19], [0, 3], [19, 14], [15, 10], [11, 8], [1, 7], [0, 3], [9, 7], [5, 11], [1, 13], [8, 18], [0, 12], [9, 7], [8, 2], [4, 13], [0, 12], [8, 2], [9, 1], [17, 15], [18, 3], [5, 11], [0, 12], [15, 9], [4, 13], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [13, 7], [14, 2], [5, 6], [0, 12], [19, 16], [14, 2], [13, 7], [17, 5], [16, 0], [19, 14], [1, 7], [17, 5], [18, 12], [19, 16], [5, 6], [8, 18], [14, 2], [4, 13], [6, 19], [14, 2], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [17, 5], [0, 3], [1, 13], [11, 10], [17, 5], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 26]
[26, 31]
[33, 40]
[36, 41]
[45, 49]
[53, 58]
[68, 73]
[72, 76]
[75, 83]
[79, 86]
[95, 98]
[67, 102]
[102, 108]
[98, 109]
[105, 114]
[108, 123]
[133, 140]
[134, 147]
[140, 148]
[145, 149]
[147, 152]
[146, 155]
[151, 156]
[153, 158]
[159, 164]
[163, 167]
[165, 168]
[160, 172]
[167, 173]
[166, 175]
[173, 184]
[182, 186]
[181, 187]
[188, 192]
[197, 200]
[207, 211]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 13, 18]
[8, 15, 24]
[48, 51, 55]
[80, 84, 88]
[83, 87, 89]
[185, 189, 194]
[202, 203, 207]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[51, 55, 59]
[144, 150, 157]
[186, 190, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[135, 139, 145]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 26]
[26, 31]
[33, 40]
[36, 41]
[45, 49]
[53, 58]
[68, 73]
[72, 76]
[75, 83]
[79, 86]
[95, 98]
[67, 102]
[102, 108]
[98, 109]
[105, 114]
[108, 123]
[133, 140]
[134, 147]
[140, 148]
[145, 149]
[147, 152]
[146, 155]
[151, 156]
[153, 158]
[159, 164]
[163, 167]
[165, 168]
[160, 172]
[167, 173]
[166, 175]
[173, 184]
[182, 186]
[181, 187]
[188, 192]
[197, 200]
[207, 211]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.233257055282593

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [8, 15, 24] ccc => cc, Pos: [11, 13, 18] ccc => cc, Pos: [21, 26] cc => I, Pos: [21, 26] cc => I, Pos: [26, 31] cc => I, Pos: [26, 31] cc => I, Pos: [33, 40] cc => I, Pos: [33, 40] cc => I, Pos: [36, 41] cc => I, Pos: [36, 41] cc => I, Pos: [45, 49] cc => I, Pos: [45, 49] cc => I, Pos: [48, 51, 55] ccc => cc, Pos: [51, 55, 59] ccc => cc, Pos: [53, 58] cc => I, Pos: [53, 58] cc => I, Pos: [67, 102] cc => I, Pos: [67, 102] cc => I, Pos: [68, 73] cc => I, Pos: [68, 73] cc => I, Pos: [72, 76] cc => I, Pos: [72, 76] cc => I, Pos: [75, 83] cc => I, Pos: [75, 83] cc => I, Pos: [79, 86] cc => I, Pos: [79, 86] cc => I, Pos: [80, 84, 88] ccc => cc, Pos: [83, 87, 89] ccc => cc, Pos: [95, 98] cc => I, Pos: [95, 98] cc => I, Pos: [98, 109] cc => I, Pos: [98, 109] cc => I, Pos: [102, 108] cc => I, Pos: [102, 108] cc => I, Pos: [105, 114] cc => I, Pos: [105, 114] cc => I, Pos: [108, 123] cc => I, Pos: [108, 123] cc => I, Pos: [133, 140] cc => I, Pos: [133, 140] cc => I, Pos: [134, 147] cc => I, Pos: [134, 147] cc => I, Pos: [135, 139, 145] ccc => cc, Pos: [140, 148] cc => I, Pos: [140, 148] cc => I, Pos: [144, 150, 157] ccc => cc, Pos: [145, 149] cc => I, Pos: [145, 149] cc => I, Pos: [146, 155] cc => I, Pos: [146, 155] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [153, 158] cc => I, Pos: [153, 158] cc => I, Pos: [159, 164] cc => I, Pos: [159, 164] cc => I, Pos: [160, 172] cc => I, Pos: [160, 172] cc => I, Pos: [163, 167] cc => I, Pos: [163, 167] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [166, 175] cc => I, Pos: [166, 175] cc => I, Pos: [167, 173] cc => I, Pos: [167, 173] cc => I, Pos: [173, 184] cc => I, Pos: [173, 184] cc => I, Pos: [181, 187] cc => I, Pos: [181, 187] cc => I, Pos: [182, 186] cc => I, Pos: [182, 186] cc => I, Pos: [185, 189, 194] ccc => cc, Pos: [186, 190, 197] ccc => cc, Pos: [188, 192] cc => I, Pos: [188, 192] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [202, 203, 207] ccc => cc, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I]

--------End Timer [Generate Plans]:  0.09374451637268066

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [8, 15, 24] ccc => cc,
 Pos: [11, 13, 18] ccc => cc,
 Pos: [21, 26] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [36, 41] cc => I,
 Pos: [45, 49] cc => I,
 Pos: [51, 55, 59] ccc => cc,
 Pos: [53, 58] cc => I,
 Pos: [102, 108] cc => I,
 Pos: [68, 73] cc => I,
 Pos: [72, 76] cc => I,
 Pos: [83, 87, 89] ccc => cc,
 Pos: [79, 86] cc => I,
 Pos: [80, 84, 88] ccc => cc,
 Pos: [98, 109] cc => I,
 Pos: [105, 114] cc => I,
 Pos: [140, 148] cc => I,
 Pos: [134, 147] cc => I,
 Pos: [145, 149] cc => I,
 Pos: [144, 150, 157] ccc => cc,
 Pos: [146, 155] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [153, 158] cc => I,
 Pos: [159, 164] cc => I,
 Pos: [160, 172] cc => I,
 Pos: [163, 167] cc => I,
 Pos: [165, 168] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [173, 184] cc => I,
 Pos: [181, 187] cc => I,
 Pos: [182, 186] cc => I,
 Pos: [185, 189, 194] ccc => cc,
 Pos: [188, 192] cc => I,
 Pos: [197, 200] cc => I,
 Pos: [207, 211] cc => I]
Change: 35, Saving: 36

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [8, 15, 24] ccc => cc
Apply:  Pos: [11, 13, 18] ccc => cc
Apply:  Pos: [21, 26] cc => I
Apply:  Pos: [33, 40] cc => I
Apply:  Pos: [36, 41] cc => I
Apply:  Pos: [45, 49] cc => I
Apply:  Pos: [51, 55, 59] ccc => cc
Apply:  Pos: [53, 58] cc => I
Apply:  Pos: [102, 108] cc => I
Apply:  Pos: [68, 73] cc => I
Apply:  Pos: [72, 76] cc => I
Apply:  Pos: [83, 87, 89] ccc => cc
Apply:  Pos: [79, 86] cc => I
Apply:  Pos: [80, 84, 88] ccc => cc
Apply:  Pos: [98, 109] cc => I
Apply:  Pos: [105, 114] cc => I
Apply:  Pos: [140, 148] cc => I
Apply:  Pos: [134, 147] cc => I
Apply:  Pos: [145, 149] cc => I
Apply:  Pos: [144, 150, 157] ccc => cc
Apply:  Pos: [146, 155] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [153, 158] cc => I
Apply:  Pos: [159, 164] cc => I
Apply:  Pos: [160, 172] cc => I
Apply:  Pos: [163, 167] cc => I
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [166, 175] cc => I
Apply:  Pos: [173, 184] cc => I
Apply:  Pos: [181, 187] cc => I
Apply:  Pos: [182, 186] cc => I
Apply:  Pos: [185, 189, 194] ccc => cc
Apply:  Pos: [188, 192] cc => I
Apply:  Pos: [197, 200] cc => I
Apply:  Pos: [207, 211] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [3, 12], [8, 2], [18, 0], [11, 10], [18, 0], [9, 7], [2, 16], [0, 12], [4, 13], [17, 5], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [17, 15], [6, 8], [9, 13], [10, 4], [8, 18], [17, 5], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [17, 11], [2, 18], [14, 16], [5, 11], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [17, 15], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [14, 16], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [5, 6], [19, 0], [16, 0], [19, 14], [1, 7], [18, 12], [5, 6], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  4.327001571655273

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 41]
[35, 54]
[54, 96]
[130, 136]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 41]
[35, 54]
[54, 96]
[130, 136]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.828958749771118

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [35, 54] cc => I, Pos: [35, 54] cc => I, Pos: [39, 41] cc => I, Pos: [39, 41] cc => I, Pos: [54, 96] cc => I, Pos: [54, 96] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I]

--------End Timer [Generate Plans]:  0.015623807907104492

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [35, 54] cc => I, Pos: [39, 41] cc => I, Pos: [130, 136] cc => I]
Change: 3, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [35, 54] cc => I
Apply:  Pos: [39, 41] cc => I
Apply:  Pos: [130, 136] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 1], [9, 13], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [5, 11], [3, 12], [8, 2], [11, 10], [9, 7], [2, 16], [0, 12], [4, 13], [17, 5], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [17, 5], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [17, 11], [2, 18], [14, 16], [6, 11], [5, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [17, 15], [2, 18], [8, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [14, 16], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [16, 0], [19, 14], [19, 0], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.8445825576782227

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6949286460876465

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [5, 11], [3, 12], [8, 2], [11, 10], [9, 7], [2, 16], [0, 12], [4, 13], [17, 5], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [17, 5], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [17, 11], [2, 18], [14, 16], [5, 11], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [17, 15], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [14, 16], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [16, 0], [19, 0], [19, 14], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.6949286460876465

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [156] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 312

Reduced: 
 - size: 69 (30.67%)
 - depth: 11 (24.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09375691413879395

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 10], [5, 6], [14, 16], [11, 8], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [11, 8], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [15, 10], [9, 13], [18, 12], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [5, 8], [1, 13], [6, 19], [0, 12], [7, 3], [9, 13], [10, 4], [5, 8], [0, 12], [19, 14], [17, 15], [5, 11], [13, 7], [3, 12], [8, 2], [18, 0], [13, 7], [11, 10], [0, 12], [9, 7], [15, 11], [2, 16], [18, 0], [4, 13], [17, 5], [15, 11], [0, 12], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [17, 15], [0, 3], [6, 8], [9, 13], [10, 4], [14, 2], [0, 3], [8, 18], [17, 5], [14, 2], [1, 13], [18, 0], [4, 13], [19, 2], [9, 1], [11, 10], [17, 5], [2, 18], [14, 16], [4, 13], [5, 11], [19, 2], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [19, 14], [8, 2], [11, 9], [1, 13], [17, 15], [19, 2], [1, 7], [10, 9], [0, 3], [6, 11], [17, 15], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [10, 9], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [17, 15], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [14, 16], [6, 19], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [14, 16], [11, 10], [4, 13], [5, 8], [1, 7], [18, 3], [15, 10], [6, 19], [14, 16], [18, 3], [9, 1], [11, 8], [6, 19], [0, 3], [19, 14], [15, 10], [11, 8], [1, 7], [0, 3], [9, 7], [5, 11], [1, 13], [8, 18], [0, 12], [9, 7], [8, 2], [4, 13], [0, 12], [8, 2], [9, 1], [17, 15], [18, 3], [5, 11], [0, 12], [15, 9], [4, 13], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [13, 7], [14, 2], [5, 6], [0, 12], [19, 16], [14, 2], [13, 7], [17, 5], [16, 0], [19, 14], [1, 7], [17, 5], [18, 12], [19, 16], [5, 6], [8, 18], [14, 2], [4, 13], [6, 19], [14, 2], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [17, 5], [0, 3], [1, 13], [11, 10], [17, 5], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 26]
[26, 31]
[33, 40]
[36, 41]
[45, 49]
[53, 58]
[68, 73]
[72, 76]
[75, 83]
[79, 86]
[95, 98]
[67, 102]
[102, 108]
[98, 109]
[105, 114]
[108, 123]
[133, 140]
[134, 147]
[140, 148]
[145, 149]
[147, 152]
[146, 155]
[151, 156]
[153, 158]
[159, 164]
[163, 167]
[165, 168]
[160, 172]
[167, 173]
[166, 175]
[173, 184]
[182, 186]
[181, 187]
[188, 192]
[197, 200]
[207, 211]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 13, 18]
[8, 15, 24]
[48, 51, 55]
[80, 84, 88]
[83, 87, 89]
[185, 189, 194]
[202, 203, 207]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[51, 55, 59]
[144, 150, 157]
[186, 190, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[135, 139, 145]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 26]
[26, 31]
[33, 40]
[36, 41]
[45, 49]
[53, 58]
[68, 73]
[72, 76]
[75, 83]
[79, 86]
[95, 98]
[67, 102]
[102, 108]
[98, 109]
[105, 114]
[108, 123]
[133, 140]
[134, 147]
[140, 148]
[145, 149]
[147, 152]
[146, 155]
[151, 156]
[153, 158]
[159, 164]
[163, 167]
[165, 168]
[160, 172]
[167, 173]
[166, 175]
[173, 184]
[182, 186]
[181, 187]
[188, 192]
[197, 200]
[207, 211]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.203097820281982

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [8, 15, 24] ccc => cc, Pos: [11, 13, 18] ccc => cc, Pos: [21, 26] cc => I, Pos: [21, 26] cc => I, Pos: [26, 31] cc => I, Pos: [26, 31] cc => I, Pos: [33, 40] cc => I, Pos: [33, 40] cc => I, Pos: [36, 41] cc => I, Pos: [36, 41] cc => I, Pos: [45, 49] cc => I, Pos: [45, 49] cc => I, Pos: [48, 51, 55] ccc => cc, Pos: [51, 55, 59] ccc => cc, Pos: [53, 58] cc => I, Pos: [53, 58] cc => I, Pos: [67, 102] cc => I, Pos: [67, 102] cc => I, Pos: [68, 73] cc => I, Pos: [68, 73] cc => I, Pos: [72, 76] cc => I, Pos: [72, 76] cc => I, Pos: [75, 83] cc => I, Pos: [75, 83] cc => I, Pos: [79, 86] cc => I, Pos: [79, 86] cc => I, Pos: [80, 84, 88] ccc => cc, Pos: [83, 87, 89] ccc => cc, Pos: [95, 98] cc => I, Pos: [95, 98] cc => I, Pos: [98, 109] cc => I, Pos: [98, 109] cc => I, Pos: [102, 108] cc => I, Pos: [102, 108] cc => I, Pos: [105, 114] cc => I, Pos: [105, 114] cc => I, Pos: [108, 123] cc => I, Pos: [108, 123] cc => I, Pos: [133, 140] cc => I, Pos: [133, 140] cc => I, Pos: [134, 147] cc => I, Pos: [134, 147] cc => I, Pos: [135, 139, 145] ccc => cc, Pos: [140, 148] cc => I, Pos: [140, 148] cc => I, Pos: [144, 150, 157] ccc => cc, Pos: [145, 149] cc => I, Pos: [145, 149] cc => I, Pos: [146, 155] cc => I, Pos: [146, 155] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [153, 158] cc => I, Pos: [153, 158] cc => I, Pos: [159, 164] cc => I, Pos: [159, 164] cc => I, Pos: [160, 172] cc => I, Pos: [160, 172] cc => I, Pos: [163, 167] cc => I, Pos: [163, 167] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [166, 175] cc => I, Pos: [166, 175] cc => I, Pos: [167, 173] cc => I, Pos: [167, 173] cc => I, Pos: [173, 184] cc => I, Pos: [173, 184] cc => I, Pos: [181, 187] cc => I, Pos: [181, 187] cc => I, Pos: [182, 186] cc => I, Pos: [182, 186] cc => I, Pos: [185, 189, 194] ccc => cc, Pos: [186, 190, 197] ccc => cc, Pos: [188, 192] cc => I, Pos: [188, 192] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [202, 203, 207] ccc => cc, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I]

--------End Timer [Generate Plans]:  0.07813191413879395

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [8, 15, 24] ccc => cc,
 Pos: [11, 13, 18] ccc => cc,
 Pos: [26, 31] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [36, 41] cc => I,
 Pos: [45, 49] cc => I,
 Pos: [51, 55, 59] ccc => cc,
 Pos: [53, 58] cc => I,
 Pos: [67, 102] cc => I,
 Pos: [68, 73] cc => I,
 Pos: [72, 76] cc => I,
 Pos: [75, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [80, 84, 88] ccc => cc,
 Pos: [98, 109] cc => I,
 Pos: [105, 114] cc => I,
 Pos: [108, 123] cc => I,
 Pos: [140, 148] cc => I,
 Pos: [134, 147] cc => I,
 Pos: [145, 149] cc => I,
 Pos: [144, 150, 157] ccc => cc,
 Pos: [146, 155] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [153, 158] cc => I,
 Pos: [159, 164] cc => I,
 Pos: [160, 172] cc => I,
 Pos: [167, 173] cc => I,
 Pos: [165, 168] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [181, 187] cc => I,
 Pos: [182, 186] cc => I,
 Pos: [185, 189, 194] ccc => cc,
 Pos: [188, 192] cc => I,
 Pos: [197, 200] cc => I,
 Pos: [207, 211] cc => I]
Change: 35, Saving: 36

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [8, 15, 24] ccc => cc
Apply:  Pos: [11, 13, 18] ccc => cc
Apply:  Pos: [26, 31] cc => I
Apply:  Pos: [33, 40] cc => I
Apply:  Pos: [36, 41] cc => I
Apply:  Pos: [45, 49] cc => I
Apply:  Pos: [51, 55, 59] ccc => cc
Apply:  Pos: [53, 58] cc => I
Apply:  Pos: [67, 102] cc => I
Apply:  Pos: [68, 73] cc => I
Apply:  Pos: [72, 76] cc => I
Apply:  Pos: [75, 83] cc => I
Apply:  Pos: [79, 86] cc => I
Apply:  Pos: [80, 84, 88] ccc => cc
Apply:  Pos: [98, 109] cc => I
Apply:  Pos: [105, 114] cc => I
Apply:  Pos: [108, 123] cc => I
Apply:  Pos: [140, 148] cc => I
Apply:  Pos: [134, 147] cc => I
Apply:  Pos: [145, 149] cc => I
Apply:  Pos: [144, 150, 157] ccc => cc
Apply:  Pos: [146, 155] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [153, 158] cc => I
Apply:  Pos: [159, 164] cc => I
Apply:  Pos: [160, 172] cc => I
Apply:  Pos: [167, 173] cc => I
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [166, 175] cc => I
Apply:  Pos: [181, 187] cc => I
Apply:  Pos: [182, 186] cc => I
Apply:  Pos: [185, 189, 194] ccc => cc
Apply:  Pos: [188, 192] cc => I
Apply:  Pos: [197, 200] cc => I
Apply:  Pos: [207, 211] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [3, 12], [8, 2], [18, 0], [11, 10], [18, 0], [9, 7], [2, 16], [0, 12], [4, 13], [17, 5], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [14, 16], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [0, 12], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [5, 6], [0, 12], [19, 0], [16, 0], [19, 14], [1, 7], [18, 12], [5, 6], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  4.281229734420776

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 41]
[118, 129]
[128, 135]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 41]
[118, 129]
[128, 135]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7969069480895996

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [39, 41] cc => I, Pos: [39, 41] cc => I, Pos: [118, 129] cc => I, Pos: [118, 129] cc => I, Pos: [128, 135] cc => I, Pos: [128, 135] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [39, 41] cc => I, Pos: [118, 129] cc => I, Pos: [128, 135] cc => I]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [39, 41] cc => I
Apply:  Pos: [118, 129] cc => I
Apply:  Pos: [128, 135] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [9, 1], [9, 13], [19, 16], [15, 11], [13, 7], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [3, 12], [8, 2], [11, 10], [9, 7], [2, 16], [0, 12], [4, 13], [17, 5], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [2, 18], [8, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [14, 16], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [16, 0], [19, 14], [19, 0], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.7969069480895996

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6406328678131104

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [3, 12], [8, 2], [11, 10], [9, 7], [2, 16], [0, 12], [4, 13], [17, 5], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [14, 16], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [16, 0], [19, 0], [19, 14], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.6406328678131104

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [155] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 310

Reduced: 
 - size: 70 (31.11%)
 - depth: 11 (24.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09412670135498047

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 10], [5, 6], [14, 16], [11, 8], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [11, 8], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [15, 10], [9, 13], [18, 12], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [5, 8], [1, 13], [6, 19], [0, 12], [7, 3], [9, 13], [10, 4], [5, 8], [0, 12], [19, 14], [17, 15], [5, 11], [13, 7], [3, 12], [8, 2], [18, 0], [13, 7], [11, 10], [0, 12], [9, 7], [15, 11], [2, 16], [18, 0], [4, 13], [17, 5], [15, 11], [0, 12], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [17, 15], [0, 3], [6, 8], [9, 13], [10, 4], [14, 2], [0, 3], [8, 18], [17, 5], [14, 2], [1, 13], [18, 0], [4, 13], [19, 2], [9, 1], [11, 10], [17, 5], [2, 18], [14, 16], [4, 13], [5, 11], [19, 2], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [19, 14], [8, 2], [11, 9], [1, 13], [17, 15], [19, 2], [1, 7], [10, 9], [0, 3], [6, 11], [17, 15], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [10, 9], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [17, 15], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [14, 16], [6, 19], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [14, 16], [11, 10], [4, 13], [5, 8], [1, 7], [18, 3], [15, 10], [6, 19], [14, 16], [18, 3], [9, 1], [11, 8], [6, 19], [0, 3], [19, 14], [15, 10], [11, 8], [1, 7], [0, 3], [9, 7], [5, 11], [1, 13], [8, 18], [0, 12], [9, 7], [8, 2], [4, 13], [0, 12], [8, 2], [9, 1], [17, 15], [18, 3], [5, 11], [0, 12], [15, 9], [4, 13], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [13, 7], [14, 2], [5, 6], [0, 12], [19, 16], [14, 2], [13, 7], [17, 5], [16, 0], [19, 14], [1, 7], [17, 5], [18, 12], [19, 16], [5, 6], [8, 18], [14, 2], [4, 13], [6, 19], [14, 2], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [17, 5], [0, 3], [1, 13], [11, 10], [17, 5], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 26]
[26, 31]
[33, 40]
[36, 41]
[45, 49]
[53, 58]
[68, 73]
[72, 76]
[75, 83]
[79, 86]
[95, 98]
[67, 102]
[102, 108]
[98, 109]
[105, 114]
[108, 123]
[133, 140]
[134, 147]
[140, 148]
[145, 149]
[147, 152]
[146, 155]
[151, 156]
[153, 158]
[159, 164]
[163, 167]
[165, 168]
[160, 172]
[167, 173]
[166, 175]
[173, 184]
[182, 186]
[181, 187]
[188, 192]
[197, 200]
[207, 211]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 13, 18]
[8, 15, 24]
[48, 51, 55]
[80, 84, 88]
[83, 87, 89]
[185, 189, 194]
[202, 203, 207]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[51, 55, 59]
[144, 150, 157]
[186, 190, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[135, 139, 145]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 26]
[26, 31]
[33, 40]
[36, 41]
[45, 49]
[53, 58]
[68, 73]
[72, 76]
[75, 83]
[79, 86]
[95, 98]
[67, 102]
[102, 108]
[98, 109]
[105, 114]
[108, 123]
[133, 140]
[134, 147]
[140, 148]
[145, 149]
[147, 152]
[146, 155]
[151, 156]
[153, 158]
[159, 164]
[163, 167]
[165, 168]
[160, 172]
[167, 173]
[166, 175]
[173, 184]
[182, 186]
[181, 187]
[188, 192]
[197, 200]
[207, 211]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.187037706375122

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [8, 15, 24] ccc => cc, Pos: [11, 13, 18] ccc => cc, Pos: [21, 26] cc => I, Pos: [21, 26] cc => I, Pos: [26, 31] cc => I, Pos: [26, 31] cc => I, Pos: [33, 40] cc => I, Pos: [33, 40] cc => I, Pos: [36, 41] cc => I, Pos: [36, 41] cc => I, Pos: [45, 49] cc => I, Pos: [45, 49] cc => I, Pos: [48, 51, 55] ccc => cc, Pos: [51, 55, 59] ccc => cc, Pos: [53, 58] cc => I, Pos: [53, 58] cc => I, Pos: [67, 102] cc => I, Pos: [67, 102] cc => I, Pos: [68, 73] cc => I, Pos: [68, 73] cc => I, Pos: [72, 76] cc => I, Pos: [72, 76] cc => I, Pos: [75, 83] cc => I, Pos: [75, 83] cc => I, Pos: [79, 86] cc => I, Pos: [79, 86] cc => I, Pos: [80, 84, 88] ccc => cc, Pos: [83, 87, 89] ccc => cc, Pos: [95, 98] cc => I, Pos: [95, 98] cc => I, Pos: [98, 109] cc => I, Pos: [98, 109] cc => I, Pos: [102, 108] cc => I, Pos: [102, 108] cc => I, Pos: [105, 114] cc => I, Pos: [105, 114] cc => I, Pos: [108, 123] cc => I, Pos: [108, 123] cc => I, Pos: [133, 140] cc => I, Pos: [133, 140] cc => I, Pos: [134, 147] cc => I, Pos: [134, 147] cc => I, Pos: [135, 139, 145] ccc => cc, Pos: [140, 148] cc => I, Pos: [140, 148] cc => I, Pos: [144, 150, 157] ccc => cc, Pos: [145, 149] cc => I, Pos: [145, 149] cc => I, Pos: [146, 155] cc => I, Pos: [146, 155] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [153, 158] cc => I, Pos: [153, 158] cc => I, Pos: [159, 164] cc => I, Pos: [159, 164] cc => I, Pos: [160, 172] cc => I, Pos: [160, 172] cc => I, Pos: [163, 167] cc => I, Pos: [163, 167] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [166, 175] cc => I, Pos: [166, 175] cc => I, Pos: [167, 173] cc => I, Pos: [167, 173] cc => I, Pos: [173, 184] cc => I, Pos: [173, 184] cc => I, Pos: [181, 187] cc => I, Pos: [181, 187] cc => I, Pos: [182, 186] cc => I, Pos: [182, 186] cc => I, Pos: [185, 189, 194] ccc => cc, Pos: [186, 190, 197] ccc => cc, Pos: [188, 192] cc => I, Pos: [188, 192] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [202, 203, 207] ccc => cc, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I]

--------End Timer [Generate Plans]:  0.09374356269836426

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [8, 15, 24] ccc => cc,
 Pos: [11, 13, 18] ccc => cc,
 Pos: [26, 31] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [36, 41] cc => I,
 Pos: [45, 49] cc => I,
 Pos: [48, 51, 55] ccc => cc,
 Pos: [53, 58] cc => I,
 Pos: [67, 102] cc => I,
 Pos: [68, 73] cc => I,
 Pos: [72, 76] cc => I,
 Pos: [75, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [80, 84, 88] ccc => cc,
 Pos: [98, 109] cc => I,
 Pos: [105, 114] cc => I,
 Pos: [108, 123] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [147, 152] cc => I,
 Pos: [145, 149] cc => I,
 Pos: [144, 150, 157] ccc => cc,
 Pos: [146, 155] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [153, 158] cc => I,
 Pos: [159, 164] cc => I,
 Pos: [160, 172] cc => I,
 Pos: [163, 167] cc => I,
 Pos: [165, 168] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [173, 184] cc => I,
 Pos: [181, 187] cc => I,
 Pos: [182, 186] cc => I,
 Pos: [185, 189, 194] ccc => cc,
 Pos: [188, 192] cc => I,
 Pos: [197, 200] cc => I,
 Pos: [207, 211] cc => I]
Change: 36, Saving: 38

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [8, 15, 24] ccc => cc
Apply:  Pos: [11, 13, 18] ccc => cc
Apply:  Pos: [26, 31] cc => I
Apply:  Pos: [33, 40] cc => I
Apply:  Pos: [36, 41] cc => I
Apply:  Pos: [45, 49] cc => I
Apply:  Pos: [48, 51, 55] ccc => cc
Apply:  Pos: [53, 58] cc => I
Apply:  Pos: [67, 102] cc => I
Apply:  Pos: [68, 73] cc => I
Apply:  Pos: [72, 76] cc => I
Apply:  Pos: [75, 83] cc => I
Apply:  Pos: [79, 86] cc => I
Apply:  Pos: [80, 84, 88] ccc => cc
Apply:  Pos: [98, 109] cc => I
Apply:  Pos: [105, 114] cc => I
Apply:  Pos: [108, 123] cc => I
Apply:  Pos: [133, 140] cc => I
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [145, 149] cc => I
Apply:  Pos: [144, 150, 157] ccc => cc
Apply:  Pos: [146, 155] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [153, 158] cc => I
Apply:  Pos: [159, 164] cc => I
Apply:  Pos: [160, 172] cc => I
Apply:  Pos: [163, 167] cc => I
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [166, 175] cc => I
Apply:  Pos: [173, 184] cc => I
Apply:  Pos: [181, 187] cc => I
Apply:  Pos: [182, 186] cc => I
Apply:  Pos: [185, 189, 194] ccc => cc
Apply:  Pos: [188, 192] cc => I
Apply:  Pos: [197, 200] cc => I
Apply:  Pos: [207, 211] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [3, 12], [8, 2], [18, 12], [11, 10], [0, 12], [9, 7], [2, 16], [4, 13], [17, 5], [0, 12], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [6, 19], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [5, 6], [19, 0], [16, 0], [19, 14], [1, 7], [18, 12], [5, 6], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  4.280781269073486

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[41, 46]
[127, 133]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[91, 98, 103]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 115, 124]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[41, 46]
[127, 133]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7344048023223877

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [41, 46] cc => I, Pos: [41, 46] cc => I, Pos: [91, 98, 103] ccc => cc, Pos: [113, 115, 124] ccc => cc, Pos: [127, 133] cc => I, Pos: [127, 133] cc => I]

--------End Timer [Generate Plans]:  0.01563739776611328

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [41, 46] cc => I,
 Pos: [91, 98, 103] ccc => cc,
 Pos: [113, 115, 124] ccc => cc,
 Pos: [127, 133] cc => I]
Change: 4, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [41, 46] cc => I
Apply:  Pos: [91, 98, 103] ccc => cc
Apply:  Pos: [113, 115, 124] ccc => cc
Apply:  Pos: [127, 133] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [9, 1], [9, 13], [19, 16], [15, 11], [13, 7], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [3, 12], [8, 2], [18, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 14], [10, 4], [5, 11], [2, 18], [8, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [19, 14], [1, 7], [14, 16], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [0, 3], [1, 18], [16, 0], [19, 14], [19, 0], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.750042200088501

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[96, 110]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 39, 45]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[96, 110]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.594072103500366

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 39, 45] ccc => cc, Pos: [96, 110] cc => I, Pos: [96, 110] cc => I]

--------End Timer [Generate Plans]:  0.015610933303833008

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 39, 45] ccc => cc, Pos: [96, 110] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 39, 45] ccc => cc
Apply:  Pos: [96, 110] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [18, 3], [8, 2], [3, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 14], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [5, 8], [0, 12], [11, 9], [18, 0], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [1, 7], [14, 16], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [0, 3], [1, 18], [16, 0], [19, 0], [19, 14], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.609683036804199

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[121, 133]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[121, 133]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.531022310256958

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [121, 133] cc => I, Pos: [121, 133] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [121, 133] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [121, 133] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [9, 1], [9, 13], [19, 16], [15, 11], [13, 7], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [18, 3], [8, 2], [3, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 14], [10, 4], [5, 11], [2, 18], [8, 18], [1, 13], [15, 10], [5, 8], [0, 12], [11, 9], [18, 0], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [1, 7], [14, 16], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [0, 3], [1, 18], [19, 0], [19, 14], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.531022310256958

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.5151610374450684

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [18, 3], [8, 2], [3, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 14], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [5, 8], [0, 12], [11, 9], [18, 0], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [1, 7], [14, 16], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [0, 3], [1, 18], [19, 14], [19, 0], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.5151610374450684

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [148] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 296

Reduced: 
 - size: 77 (34.22%)
 - depth: 11 (24.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07813167572021484

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 10], [5, 6], [14, 16], [11, 8], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [11, 8], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [15, 10], [9, 13], [18, 12], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [5, 8], [1, 13], [6, 19], [0, 12], [7, 3], [9, 13], [10, 4], [5, 8], [0, 12], [19, 14], [17, 15], [5, 11], [13, 7], [3, 12], [8, 2], [18, 0], [13, 7], [11, 10], [0, 12], [9, 7], [15, 11], [2, 16], [18, 0], [4, 13], [17, 5], [15, 11], [0, 12], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [17, 15], [0, 3], [6, 8], [9, 13], [10, 4], [14, 2], [0, 3], [8, 18], [17, 5], [14, 2], [1, 13], [18, 0], [4, 13], [19, 2], [9, 1], [11, 10], [17, 5], [2, 18], [14, 16], [4, 13], [5, 11], [19, 2], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [19, 14], [8, 2], [11, 9], [1, 13], [17, 15], [19, 2], [1, 7], [10, 9], [0, 3], [6, 11], [17, 15], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [10, 9], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [17, 15], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [14, 16], [6, 19], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [14, 16], [11, 10], [4, 13], [5, 8], [1, 7], [18, 3], [15, 10], [6, 19], [14, 16], [18, 3], [9, 1], [11, 8], [6, 19], [0, 3], [19, 14], [15, 10], [11, 8], [1, 7], [0, 3], [9, 7], [5, 11], [1, 13], [8, 18], [0, 12], [9, 7], [8, 2], [4, 13], [0, 12], [8, 2], [9, 1], [17, 15], [18, 3], [5, 11], [0, 12], [15, 9], [4, 13], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [13, 7], [14, 2], [5, 6], [0, 12], [19, 16], [14, 2], [13, 7], [17, 5], [16, 0], [19, 14], [1, 7], [17, 5], [18, 12], [19, 16], [5, 6], [8, 18], [14, 2], [4, 13], [6, 19], [14, 2], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [17, 5], [0, 3], [1, 13], [11, 10], [17, 5], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 26]
[26, 31]
[33, 40]
[36, 41]
[45, 49]
[53, 58]
[68, 73]
[72, 76]
[75, 83]
[79, 86]
[95, 98]
[67, 102]
[102, 108]
[98, 109]
[105, 114]
[108, 123]
[133, 140]
[134, 147]
[140, 148]
[145, 149]
[147, 152]
[146, 155]
[151, 156]
[153, 158]
[159, 164]
[163, 167]
[165, 168]
[160, 172]
[167, 173]
[166, 175]
[173, 184]
[182, 186]
[181, 187]
[188, 192]
[197, 200]
[207, 211]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 13, 18]
[8, 15, 24]
[48, 51, 55]
[80, 84, 88]
[83, 87, 89]
[185, 189, 194]
[202, 203, 207]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[51, 55, 59]
[144, 150, 157]
[186, 190, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[135, 139, 145]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 26]
[26, 31]
[33, 40]
[36, 41]
[45, 49]
[53, 58]
[68, 73]
[72, 76]
[75, 83]
[79, 86]
[95, 98]
[67, 102]
[102, 108]
[98, 109]
[105, 114]
[108, 123]
[133, 140]
[134, 147]
[140, 148]
[145, 149]
[147, 152]
[146, 155]
[151, 156]
[153, 158]
[159, 164]
[163, 167]
[165, 168]
[160, 172]
[167, 173]
[166, 175]
[173, 184]
[182, 186]
[181, 187]
[188, 192]
[197, 200]
[207, 211]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.248491048812866

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [8, 15, 24] ccc => cc, Pos: [11, 13, 18] ccc => cc, Pos: [21, 26] cc => I, Pos: [21, 26] cc => I, Pos: [26, 31] cc => I, Pos: [26, 31] cc => I, Pos: [33, 40] cc => I, Pos: [33, 40] cc => I, Pos: [36, 41] cc => I, Pos: [36, 41] cc => I, Pos: [45, 49] cc => I, Pos: [45, 49] cc => I, Pos: [48, 51, 55] ccc => cc, Pos: [51, 55, 59] ccc => cc, Pos: [53, 58] cc => I, Pos: [53, 58] cc => I, Pos: [67, 102] cc => I, Pos: [67, 102] cc => I, Pos: [68, 73] cc => I, Pos: [68, 73] cc => I, Pos: [72, 76] cc => I, Pos: [72, 76] cc => I, Pos: [75, 83] cc => I, Pos: [75, 83] cc => I, Pos: [79, 86] cc => I, Pos: [79, 86] cc => I, Pos: [80, 84, 88] ccc => cc, Pos: [83, 87, 89] ccc => cc, Pos: [95, 98] cc => I, Pos: [95, 98] cc => I, Pos: [98, 109] cc => I, Pos: [98, 109] cc => I, Pos: [102, 108] cc => I, Pos: [102, 108] cc => I, Pos: [105, 114] cc => I, Pos: [105, 114] cc => I, Pos: [108, 123] cc => I, Pos: [108, 123] cc => I, Pos: [133, 140] cc => I, Pos: [133, 140] cc => I, Pos: [134, 147] cc => I, Pos: [134, 147] cc => I, Pos: [135, 139, 145] ccc => cc, Pos: [140, 148] cc => I, Pos: [140, 148] cc => I, Pos: [144, 150, 157] ccc => cc, Pos: [145, 149] cc => I, Pos: [145, 149] cc => I, Pos: [146, 155] cc => I, Pos: [146, 155] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [153, 158] cc => I, Pos: [153, 158] cc => I, Pos: [159, 164] cc => I, Pos: [159, 164] cc => I, Pos: [160, 172] cc => I, Pos: [160, 172] cc => I, Pos: [163, 167] cc => I, Pos: [163, 167] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [166, 175] cc => I, Pos: [166, 175] cc => I, Pos: [167, 173] cc => I, Pos: [167, 173] cc => I, Pos: [173, 184] cc => I, Pos: [173, 184] cc => I, Pos: [181, 187] cc => I, Pos: [181, 187] cc => I, Pos: [182, 186] cc => I, Pos: [182, 186] cc => I, Pos: [185, 189, 194] ccc => cc, Pos: [186, 190, 197] ccc => cc, Pos: [188, 192] cc => I, Pos: [188, 192] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [202, 203, 207] ccc => cc, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I]

--------End Timer [Generate Plans]:  0.09374189376831055

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [8, 15, 24] ccc => cc,
 Pos: [11, 13, 18] ccc => cc,
 Pos: [21, 26] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [36, 41] cc => I,
 Pos: [45, 49] cc => I,
 Pos: [48, 51, 55] ccc => cc,
 Pos: [53, 58] cc => I,
 Pos: [67, 102] cc => I,
 Pos: [68, 73] cc => I,
 Pos: [72, 76] cc => I,
 Pos: [75, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [80, 84, 88] ccc => cc,
 Pos: [95, 98] cc => I,
 Pos: [105, 114] cc => I,
 Pos: [108, 123] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [147, 152] cc => I,
 Pos: [145, 149] cc => I,
 Pos: [144, 150, 157] ccc => cc,
 Pos: [146, 155] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [153, 158] cc => I,
 Pos: [159, 164] cc => I,
 Pos: [160, 172] cc => I,
 Pos: [163, 167] cc => I,
 Pos: [165, 168] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [173, 184] cc => I,
 Pos: [181, 187] cc => I,
 Pos: [186, 190, 197] ccc => cc,
 Pos: [185, 189, 194] ccc => cc,
 Pos: [188, 192] cc => I,
 Pos: [207, 211] cc => I]
Change: 35, Saving: 37

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [8, 15, 24] ccc => cc
Apply:  Pos: [11, 13, 18] ccc => cc
Apply:  Pos: [21, 26] cc => I
Apply:  Pos: [33, 40] cc => I
Apply:  Pos: [36, 41] cc => I
Apply:  Pos: [45, 49] cc => I
Apply:  Pos: [48, 51, 55] ccc => cc
Apply:  Pos: [53, 58] cc => I
Apply:  Pos: [67, 102] cc => I
Apply:  Pos: [68, 73] cc => I
Apply:  Pos: [72, 76] cc => I
Apply:  Pos: [75, 83] cc => I
Apply:  Pos: [79, 86] cc => I
Apply:  Pos: [80, 84, 88] ccc => cc
Apply:  Pos: [95, 98] cc => I
Apply:  Pos: [105, 114] cc => I
Apply:  Pos: [108, 123] cc => I
Apply:  Pos: [133, 140] cc => I
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [145, 149] cc => I
Apply:  Pos: [144, 150, 157] ccc => cc
Apply:  Pos: [146, 155] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [153, 158] cc => I
Apply:  Pos: [159, 164] cc => I
Apply:  Pos: [160, 172] cc => I
Apply:  Pos: [163, 167] cc => I
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [166, 175] cc => I
Apply:  Pos: [173, 184] cc => I
Apply:  Pos: [181, 187] cc => I
Apply:  Pos: [186, 190, 197] ccc => cc
Apply:  Pos: [185, 189, 194] ccc => cc
Apply:  Pos: [188, 192] cc => I
Apply:  Pos: [207, 211] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [3, 12], [8, 2], [18, 12], [11, 10], [0, 12], [9, 7], [2, 16], [4, 13], [17, 5], [0, 12], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [6, 19], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [14, 2], [5, 6], [19, 0], [19, 14], [16, 0], [14, 2], [1, 7], [18, 12], [5, 6], [8, 18], [4, 13], [6, 19], [14, 2], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  4.342232942581177

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[41, 46]
[128, 135]
[132, 139]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[91, 98, 103]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 115, 124]
[127, 129, 132]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[41, 46]
[128, 135]
[132, 139]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.85957932472229

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [41, 46] cc => I, Pos: [41, 46] cc => I, Pos: [91, 98, 103] ccc => cc, Pos: [113, 115, 124] ccc => cc, Pos: [127, 129, 132] ccc => cc, Pos: [128, 135] cc => I, Pos: [128, 135] cc => I, Pos: [132, 139] cc => I, Pos: [132, 139] cc => I]

--------End Timer [Generate Plans]:  0.01562356948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [41, 46] cc => I,
 Pos: [91, 98, 103] ccc => cc,
 Pos: [113, 115, 124] ccc => cc,
 Pos: [127, 129, 132] ccc => cc,
 Pos: [128, 135] cc => I]
Change: 5, Saving: 5

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [41, 46] cc => I
Apply:  Pos: [91, 98, 103] ccc => cc
Apply:  Pos: [113, 115, 124] ccc => cc
Apply:  Pos: [127, 129, 132] ccc => cc
Apply:  Pos: [128, 135] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 1], [9, 13], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [3, 12], [8, 2], [18, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 14], [10, 4], [5, 11], [2, 18], [8, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [19, 14], [1, 7], [14, 16], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [0, 3], [1, 18], [19, 14], [14, 2], [16, 0], [19, 0], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [14, 2], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.8752028942108154

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[96, 110]
[124, 132]
[126, 138]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[110, 112, 123]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 39, 45]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[96, 110]
[124, 132]
[126, 138]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7350432872772217

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 39, 45] ccc => cc, Pos: [96, 110] cc => I, Pos: [96, 110] cc => I, Pos: [110, 112, 123] ccc => cc, Pos: [124, 132] cc => I, Pos: [124, 132] cc => I, Pos: [126, 138] cc => I, Pos: [126, 138] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 39, 45] ccc => cc,
 Pos: [96, 110] cc => I,
 Pos: [124, 132] cc => I,
 Pos: [126, 138] cc => I]
Change: 4, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 39, 45] ccc => cc
Apply:  Pos: [96, 110] cc => I
Apply:  Pos: [124, 132] cc => I
Apply:  Pos: [126, 138] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [18, 3], [8, 2], [3, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 14], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [5, 8], [0, 12], [11, 9], [18, 0], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [1, 7], [14, 16], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [0, 3], [1, 18], [19, 14], [19, 0], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.7350432872772217

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.5471351146698

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 1], [9, 13], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [18, 3], [8, 2], [3, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 14], [10, 4], [5, 11], [2, 18], [8, 18], [1, 13], [15, 10], [5, 8], [0, 12], [11, 9], [18, 0], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [1, 7], [14, 16], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [0, 3], [1, 18], [19, 0], [19, 14], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.5471351146698

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [148] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 296

Reduced: 
 - size: 77 (34.22%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07811975479125977

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 10], [5, 6], [14, 16], [11, 8], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [11, 8], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [15, 10], [9, 13], [18, 12], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [5, 8], [1, 13], [6, 19], [0, 12], [7, 3], [9, 13], [10, 4], [5, 8], [0, 12], [19, 14], [17, 15], [5, 11], [13, 7], [3, 12], [8, 2], [18, 0], [13, 7], [11, 10], [0, 12], [9, 7], [15, 11], [2, 16], [18, 0], [4, 13], [17, 5], [15, 11], [0, 12], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [17, 15], [0, 3], [6, 8], [9, 13], [10, 4], [14, 2], [0, 3], [8, 18], [17, 5], [14, 2], [1, 13], [18, 0], [4, 13], [19, 2], [9, 1], [11, 10], [17, 5], [2, 18], [14, 16], [4, 13], [5, 11], [19, 2], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [19, 14], [8, 2], [11, 9], [1, 13], [17, 15], [19, 2], [1, 7], [10, 9], [0, 3], [6, 11], [17, 15], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [10, 9], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [17, 15], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [14, 16], [6, 19], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [14, 16], [11, 10], [4, 13], [5, 8], [1, 7], [18, 3], [15, 10], [6, 19], [14, 16], [18, 3], [9, 1], [11, 8], [6, 19], [0, 3], [19, 14], [15, 10], [11, 8], [1, 7], [0, 3], [9, 7], [5, 11], [1, 13], [8, 18], [0, 12], [9, 7], [8, 2], [4, 13], [0, 12], [8, 2], [9, 1], [17, 15], [18, 3], [5, 11], [0, 12], [15, 9], [4, 13], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [13, 7], [14, 2], [5, 6], [0, 12], [19, 16], [14, 2], [13, 7], [17, 5], [16, 0], [19, 14], [1, 7], [17, 5], [18, 12], [19, 16], [5, 6], [8, 18], [14, 2], [4, 13], [6, 19], [14, 2], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [17, 5], [0, 3], [1, 13], [11, 10], [17, 5], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 26]
[26, 31]
[33, 40]
[36, 41]
[45, 49]
[53, 58]
[68, 73]
[72, 76]
[75, 83]
[79, 86]
[95, 98]
[67, 102]
[102, 108]
[98, 109]
[105, 114]
[108, 123]
[133, 140]
[134, 147]
[140, 148]
[145, 149]
[147, 152]
[146, 155]
[151, 156]
[153, 158]
[159, 164]
[163, 167]
[165, 168]
[160, 172]
[167, 173]
[166, 175]
[173, 184]
[182, 186]
[181, 187]
[188, 192]
[197, 200]
[207, 211]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 13, 18]
[8, 15, 24]
[48, 51, 55]
[80, 84, 88]
[83, 87, 89]
[185, 189, 194]
[202, 203, 207]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[51, 55, 59]
[144, 150, 157]
[186, 190, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[135, 139, 145]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 26]
[26, 31]
[33, 40]
[36, 41]
[45, 49]
[53, 58]
[68, 73]
[72, 76]
[75, 83]
[79, 86]
[95, 98]
[67, 102]
[102, 108]
[98, 109]
[105, 114]
[108, 123]
[133, 140]
[134, 147]
[140, 148]
[145, 149]
[147, 152]
[146, 155]
[151, 156]
[153, 158]
[159, 164]
[163, 167]
[165, 168]
[160, 172]
[167, 173]
[166, 175]
[173, 184]
[182, 186]
[181, 187]
[188, 192]
[197, 200]
[207, 211]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.234422922134399

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [8, 15, 24] ccc => cc, Pos: [11, 13, 18] ccc => cc, Pos: [21, 26] cc => I, Pos: [21, 26] cc => I, Pos: [26, 31] cc => I, Pos: [26, 31] cc => I, Pos: [33, 40] cc => I, Pos: [33, 40] cc => I, Pos: [36, 41] cc => I, Pos: [36, 41] cc => I, Pos: [45, 49] cc => I, Pos: [45, 49] cc => I, Pos: [48, 51, 55] ccc => cc, Pos: [51, 55, 59] ccc => cc, Pos: [53, 58] cc => I, Pos: [53, 58] cc => I, Pos: [67, 102] cc => I, Pos: [67, 102] cc => I, Pos: [68, 73] cc => I, Pos: [68, 73] cc => I, Pos: [72, 76] cc => I, Pos: [72, 76] cc => I, Pos: [75, 83] cc => I, Pos: [75, 83] cc => I, Pos: [79, 86] cc => I, Pos: [79, 86] cc => I, Pos: [80, 84, 88] ccc => cc, Pos: [83, 87, 89] ccc => cc, Pos: [95, 98] cc => I, Pos: [95, 98] cc => I, Pos: [98, 109] cc => I, Pos: [98, 109] cc => I, Pos: [102, 108] cc => I, Pos: [102, 108] cc => I, Pos: [105, 114] cc => I, Pos: [105, 114] cc => I, Pos: [108, 123] cc => I, Pos: [108, 123] cc => I, Pos: [133, 140] cc => I, Pos: [133, 140] cc => I, Pos: [134, 147] cc => I, Pos: [134, 147] cc => I, Pos: [135, 139, 145] ccc => cc, Pos: [140, 148] cc => I, Pos: [140, 148] cc => I, Pos: [144, 150, 157] ccc => cc, Pos: [145, 149] cc => I, Pos: [145, 149] cc => I, Pos: [146, 155] cc => I, Pos: [146, 155] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [153, 158] cc => I, Pos: [153, 158] cc => I, Pos: [159, 164] cc => I, Pos: [159, 164] cc => I, Pos: [160, 172] cc => I, Pos: [160, 172] cc => I, Pos: [163, 167] cc => I, Pos: [163, 167] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [166, 175] cc => I, Pos: [166, 175] cc => I, Pos: [167, 173] cc => I, Pos: [167, 173] cc => I, Pos: [173, 184] cc => I, Pos: [173, 184] cc => I, Pos: [181, 187] cc => I, Pos: [181, 187] cc => I, Pos: [182, 186] cc => I, Pos: [182, 186] cc => I, Pos: [185, 189, 194] ccc => cc, Pos: [186, 190, 197] ccc => cc, Pos: [188, 192] cc => I, Pos: [188, 192] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [202, 203, 207] ccc => cc, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I]

--------End Timer [Generate Plans]:  0.07812094688415527

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [8, 15, 24] ccc => cc,
 Pos: [11, 13, 18] ccc => cc,
 Pos: [21, 26] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [36, 41] cc => I,
 Pos: [45, 49] cc => I,
 Pos: [48, 51, 55] ccc => cc,
 Pos: [53, 58] cc => I,
 Pos: [67, 102] cc => I,
 Pos: [68, 73] cc => I,
 Pos: [72, 76] cc => I,
 Pos: [75, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [80, 84, 88] ccc => cc,
 Pos: [98, 109] cc => I,
 Pos: [105, 114] cc => I,
 Pos: [108, 123] cc => I,
 Pos: [140, 148] cc => I,
 Pos: [134, 147] cc => I,
 Pos: [145, 149] cc => I,
 Pos: [144, 150, 157] ccc => cc,
 Pos: [146, 155] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [153, 158] cc => I,
 Pos: [159, 164] cc => I,
 Pos: [160, 172] cc => I,
 Pos: [167, 173] cc => I,
 Pos: [165, 168] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [181, 187] cc => I,
 Pos: [186, 190, 197] ccc => cc,
 Pos: [185, 189, 194] ccc => cc,
 Pos: [188, 192] cc => I,
 Pos: [202, 203, 207] ccc => cc]
Change: 34, Saving: 37

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [8, 15, 24] ccc => cc
Apply:  Pos: [11, 13, 18] ccc => cc
Apply:  Pos: [21, 26] cc => I
Apply:  Pos: [33, 40] cc => I
Apply:  Pos: [36, 41] cc => I
Apply:  Pos: [45, 49] cc => I
Apply:  Pos: [48, 51, 55] ccc => cc
Apply:  Pos: [53, 58] cc => I
Apply:  Pos: [67, 102] cc => I
Apply:  Pos: [68, 73] cc => I
Apply:  Pos: [72, 76] cc => I
Apply:  Pos: [75, 83] cc => I
Apply:  Pos: [79, 86] cc => I
Apply:  Pos: [80, 84, 88] ccc => cc
Apply:  Pos: [98, 109] cc => I
Apply:  Pos: [105, 114] cc => I
Apply:  Pos: [108, 123] cc => I
Apply:  Pos: [140, 148] cc => I
Apply:  Pos: [134, 147] cc => I
Apply:  Pos: [145, 149] cc => I
Apply:  Pos: [144, 150, 157] ccc => cc
Apply:  Pos: [146, 155] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [153, 158] cc => I
Apply:  Pos: [159, 164] cc => I
Apply:  Pos: [160, 172] cc => I
Apply:  Pos: [167, 173] cc => I
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [166, 175] cc => I
Apply:  Pos: [181, 187] cc => I
Apply:  Pos: [186, 190, 197] ccc => cc
Apply:  Pos: [185, 189, 194] ccc => cc
Apply:  Pos: [188, 192] cc => I
Apply:  Pos: [202, 203, 207] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.01564168930053711

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [3, 12], [8, 2], [18, 12], [11, 10], [0, 12], [9, 7], [2, 16], [4, 13], [17, 5], [0, 12], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [14, 16], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [0, 12], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [14, 2], [5, 6], [0, 12], [19, 0], [19, 14], [16, 0], [14, 2], [1, 7], [18, 12], [5, 6], [8, 18], [4, 13], [6, 19], [14, 2], [10, 4], [17, 6], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [17, 5], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  4.328185558319092

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[41, 46]
[118, 130]
[129, 137]
[134, 141]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[137, 140, 143]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[128, 131, 134]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[143, 144, 151]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[41, 46]
[118, 130]
[129, 137]
[134, 141]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8906095027923584

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [41, 46] cc => I, Pos: [41, 46] cc => I, Pos: [118, 130] cc => I, Pos: [118, 130] cc => I, Pos: [128, 131, 134] ccc => cc, Pos: [129, 137] cc => I, Pos: [129, 137] cc => I, Pos: [134, 141] cc => I, Pos: [134, 141] cc => I, Pos: [137, 140, 143] ccc => cc, Pos: [143, 144, 151] ccc => cc]

--------End Timer [Generate Plans]:  0.015625715255737305

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [41, 46] cc => I,
 Pos: [118, 130] cc => I,
 Pos: [128, 131, 134] ccc => cc,
 Pos: [129, 137] cc => I,
 Pos: [143, 144, 151] ccc => cc]
Change: 5, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [41, 46] cc => I
Apply:  Pos: [118, 130] cc => I
Apply:  Pos: [128, 131, 134] ccc => cc
Apply:  Pos: [129, 137] cc => I
Apply:  Pos: [143, 144, 151] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 1], [9, 13], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [3, 12], [8, 2], [18, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [2, 18], [8, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [14, 16], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [19, 14], [14, 2], [16, 0], [19, 0], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [14, 2], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.9062352180480957

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[126, 134]
[128, 140]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[113, 122, 125]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 39, 45]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[126, 134]
[128, 140]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7191810607910156

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 39, 45] ccc => cc, Pos: [113, 122, 125] ccc => cc, Pos: [126, 134] cc => I, Pos: [126, 134] cc => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 39, 45] ccc => cc,
 Pos: [113, 122, 125] ccc => cc,
 Pos: [126, 134] cc => I,
 Pos: [128, 140] cc => I]
Change: 4, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 39, 45] ccc => cc
Apply:  Pos: [113, 122, 125] ccc => cc
Apply:  Pos: [126, 134] cc => I
Apply:  Pos: [128, 140] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [18, 3], [8, 2], [3, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [14, 16], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [1, 7], [6, 19], [19, 16], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [19, 0], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.7191810607910156

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.577932119369507

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 1], [9, 13], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [18, 3], [8, 2], [3, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [2, 18], [8, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [14, 16], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [1, 7], [6, 19], [19, 16], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [19, 0], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.577932119369507

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [151] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 302

Reduced: 
 - size: 74 (32.89%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07810544967651367

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 10], [5, 6], [14, 16], [11, 8], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [11, 8], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [15, 10], [9, 13], [18, 12], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [5, 8], [1, 13], [6, 19], [0, 12], [7, 3], [9, 13], [10, 4], [5, 8], [0, 12], [19, 14], [17, 15], [5, 11], [13, 7], [3, 12], [8, 2], [18, 0], [13, 7], [11, 10], [0, 12], [9, 7], [15, 11], [2, 16], [18, 0], [4, 13], [17, 5], [15, 11], [0, 12], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [17, 15], [0, 3], [6, 8], [9, 13], [10, 4], [14, 2], [0, 3], [8, 18], [17, 5], [14, 2], [1, 13], [18, 0], [4, 13], [19, 2], [9, 1], [11, 10], [17, 5], [2, 18], [14, 16], [4, 13], [5, 11], [19, 2], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [19, 14], [8, 2], [11, 9], [1, 13], [17, 15], [19, 2], [1, 7], [10, 9], [0, 3], [6, 11], [17, 15], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [10, 9], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [17, 15], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [14, 16], [6, 19], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [14, 16], [11, 10], [4, 13], [5, 8], [1, 7], [18, 3], [15, 10], [6, 19], [14, 16], [18, 3], [9, 1], [11, 8], [6, 19], [0, 3], [19, 14], [15, 10], [11, 8], [1, 7], [0, 3], [9, 7], [5, 11], [1, 13], [8, 18], [0, 12], [9, 7], [8, 2], [4, 13], [0, 12], [8, 2], [9, 1], [17, 15], [18, 3], [5, 11], [0, 12], [15, 9], [4, 13], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [13, 7], [14, 2], [5, 6], [0, 12], [19, 16], [14, 2], [13, 7], [17, 5], [16, 0], [19, 14], [1, 7], [17, 5], [18, 12], [19, 16], [5, 6], [8, 18], [14, 2], [4, 13], [6, 19], [14, 2], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [17, 5], [0, 3], [1, 13], [11, 10], [17, 5], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 26]
[26, 31]
[33, 40]
[36, 41]
[45, 49]
[53, 58]
[68, 73]
[72, 76]
[75, 83]
[79, 86]
[95, 98]
[67, 102]
[102, 108]
[98, 109]
[105, 114]
[108, 123]
[133, 140]
[134, 147]
[140, 148]
[145, 149]
[147, 152]
[146, 155]
[151, 156]
[153, 158]
[159, 164]
[163, 167]
[165, 168]
[160, 172]
[167, 173]
[166, 175]
[173, 184]
[182, 186]
[181, 187]
[188, 192]
[197, 200]
[207, 211]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 13, 18]
[8, 15, 24]
[48, 51, 55]
[80, 84, 88]
[83, 87, 89]
[185, 189, 194]
[202, 203, 207]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[51, 55, 59]
[144, 150, 157]
[186, 190, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[135, 139, 145]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 26]
[26, 31]
[33, 40]
[36, 41]
[45, 49]
[53, 58]
[68, 73]
[72, 76]
[75, 83]
[79, 86]
[95, 98]
[67, 102]
[102, 108]
[98, 109]
[105, 114]
[108, 123]
[133, 140]
[134, 147]
[140, 148]
[145, 149]
[147, 152]
[146, 155]
[151, 156]
[153, 158]
[159, 164]
[163, 167]
[165, 168]
[160, 172]
[167, 173]
[166, 175]
[173, 184]
[182, 186]
[181, 187]
[188, 192]
[197, 200]
[207, 211]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.2030627727508545

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [8, 15, 24] ccc => cc, Pos: [11, 13, 18] ccc => cc, Pos: [21, 26] cc => I, Pos: [21, 26] cc => I, Pos: [26, 31] cc => I, Pos: [26, 31] cc => I, Pos: [33, 40] cc => I, Pos: [33, 40] cc => I, Pos: [36, 41] cc => I, Pos: [36, 41] cc => I, Pos: [45, 49] cc => I, Pos: [45, 49] cc => I, Pos: [48, 51, 55] ccc => cc, Pos: [51, 55, 59] ccc => cc, Pos: [53, 58] cc => I, Pos: [53, 58] cc => I, Pos: [67, 102] cc => I, Pos: [67, 102] cc => I, Pos: [68, 73] cc => I, Pos: [68, 73] cc => I, Pos: [72, 76] cc => I, Pos: [72, 76] cc => I, Pos: [75, 83] cc => I, Pos: [75, 83] cc => I, Pos: [79, 86] cc => I, Pos: [79, 86] cc => I, Pos: [80, 84, 88] ccc => cc, Pos: [83, 87, 89] ccc => cc, Pos: [95, 98] cc => I, Pos: [95, 98] cc => I, Pos: [98, 109] cc => I, Pos: [98, 109] cc => I, Pos: [102, 108] cc => I, Pos: [102, 108] cc => I, Pos: [105, 114] cc => I, Pos: [105, 114] cc => I, Pos: [108, 123] cc => I, Pos: [108, 123] cc => I, Pos: [133, 140] cc => I, Pos: [133, 140] cc => I, Pos: [134, 147] cc => I, Pos: [134, 147] cc => I, Pos: [135, 139, 145] ccc => cc, Pos: [140, 148] cc => I, Pos: [140, 148] cc => I, Pos: [144, 150, 157] ccc => cc, Pos: [145, 149] cc => I, Pos: [145, 149] cc => I, Pos: [146, 155] cc => I, Pos: [146, 155] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [153, 158] cc => I, Pos: [153, 158] cc => I, Pos: [159, 164] cc => I, Pos: [159, 164] cc => I, Pos: [160, 172] cc => I, Pos: [160, 172] cc => I, Pos: [163, 167] cc => I, Pos: [163, 167] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [166, 175] cc => I, Pos: [166, 175] cc => I, Pos: [167, 173] cc => I, Pos: [167, 173] cc => I, Pos: [173, 184] cc => I, Pos: [173, 184] cc => I, Pos: [181, 187] cc => I, Pos: [181, 187] cc => I, Pos: [182, 186] cc => I, Pos: [182, 186] cc => I, Pos: [185, 189, 194] ccc => cc, Pos: [186, 190, 197] ccc => cc, Pos: [188, 192] cc => I, Pos: [188, 192] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [202, 203, 207] ccc => cc, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I]

--------End Timer [Generate Plans]:  0.09426736831665039

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [8, 15, 24] ccc => cc,
 Pos: [11, 13, 18] ccc => cc,
 Pos: [26, 31] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [36, 41] cc => I,
 Pos: [45, 49] cc => I,
 Pos: [48, 51, 55] ccc => cc,
 Pos: [53, 58] cc => I,
 Pos: [67, 102] cc => I,
 Pos: [68, 73] cc => I,
 Pos: [72, 76] cc => I,
 Pos: [75, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [80, 84, 88] ccc => cc,
 Pos: [95, 98] cc => I,
 Pos: [105, 114] cc => I,
 Pos: [108, 123] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [134, 147] cc => I,
 Pos: [145, 149] cc => I,
 Pos: [144, 150, 157] ccc => cc,
 Pos: [146, 155] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [153, 158] cc => I,
 Pos: [159, 164] cc => I,
 Pos: [160, 172] cc => I,
 Pos: [167, 173] cc => I,
 Pos: [165, 168] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [181, 187] cc => I,
 Pos: [182, 186] cc => I,
 Pos: [185, 189, 194] ccc => cc,
 Pos: [188, 192] cc => I,
 Pos: [197, 200] cc => I,
 Pos: [207, 211] cc => I]
Change: 35, Saving: 37

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [8, 15, 24] ccc => cc
Apply:  Pos: [11, 13, 18] ccc => cc
Apply:  Pos: [26, 31] cc => I
Apply:  Pos: [33, 40] cc => I
Apply:  Pos: [36, 41] cc => I
Apply:  Pos: [45, 49] cc => I
Apply:  Pos: [48, 51, 55] ccc => cc
Apply:  Pos: [53, 58] cc => I
Apply:  Pos: [67, 102] cc => I
Apply:  Pos: [68, 73] cc => I
Apply:  Pos: [72, 76] cc => I
Apply:  Pos: [75, 83] cc => I
Apply:  Pos: [79, 86] cc => I
Apply:  Pos: [80, 84, 88] ccc => cc
Apply:  Pos: [95, 98] cc => I
Apply:  Pos: [105, 114] cc => I
Apply:  Pos: [108, 123] cc => I
Apply:  Pos: [133, 140] cc => I
Apply:  Pos: [134, 147] cc => I
Apply:  Pos: [145, 149] cc => I
Apply:  Pos: [144, 150, 157] ccc => cc
Apply:  Pos: [146, 155] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [153, 158] cc => I
Apply:  Pos: [159, 164] cc => I
Apply:  Pos: [160, 172] cc => I
Apply:  Pos: [167, 173] cc => I
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [166, 175] cc => I
Apply:  Pos: [181, 187] cc => I
Apply:  Pos: [182, 186] cc => I
Apply:  Pos: [185, 189, 194] ccc => cc
Apply:  Pos: [188, 192] cc => I
Apply:  Pos: [197, 200] cc => I
Apply:  Pos: [207, 211] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [3, 12], [8, 2], [18, 12], [11, 10], [0, 12], [9, 7], [2, 16], [4, 13], [17, 5], [0, 12], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [0, 12], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [5, 6], [0, 12], [19, 0], [16, 0], [19, 14], [1, 7], [18, 12], [5, 6], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  4.297330141067505

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[41, 46]
[118, 129]
[128, 135]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[41, 46]
[118, 129]
[128, 135]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7965691089630127

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [41, 46] cc => I, Pos: [41, 46] cc => I, Pos: [118, 129] cc => I, Pos: [118, 129] cc => I, Pos: [128, 135] cc => I, Pos: [128, 135] cc => I]

--------End Timer [Generate Plans]:  0.015619039535522461

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [41, 46] cc => I, Pos: [118, 129] cc => I, Pos: [128, 135] cc => I]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [41, 46] cc => I
Apply:  Pos: [118, 129] cc => I
Apply:  Pos: [128, 135] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [9, 1], [9, 13], [19, 16], [15, 11], [13, 7], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [3, 12], [8, 2], [18, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [2, 18], [8, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [16, 0], [19, 14], [19, 0], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.812188148498535

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 39, 45]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.657097578048706

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 39, 45] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 39, 45] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 39, 45] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [18, 3], [8, 2], [3, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [16, 0], [19, 0], [19, 14], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.657097578048706

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[125, 137]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[125, 137]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6716346740722656

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [125, 137] cc => I, Pos: [125, 137] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [125, 137] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [125, 137] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [9, 1], [9, 13], [19, 16], [15, 11], [13, 7], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [18, 3], [8, 2], [3, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [2, 18], [8, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [19, 0], [19, 14], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.6716346740722656

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[112, 121, 124]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.5625040531158447

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [112, 121, 124] ccc => cc]

--------End Timer [Generate Plans]:  0.015625

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [112, 121, 124] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [112, 121, 124] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [18, 3], [8, 2], [3, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [6, 19], [19, 16], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [19, 0], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.5781290531158447

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [151] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 302

Reduced: 
 - size: 74 (32.89%)
 - depth: 11 (24.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07812094688415527

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 10], [5, 6], [14, 16], [11, 8], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [11, 8], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [15, 10], [9, 13], [18, 12], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [5, 8], [1, 13], [6, 19], [0, 12], [7, 3], [9, 13], [10, 4], [5, 8], [0, 12], [19, 14], [17, 15], [5, 11], [13, 7], [3, 12], [8, 2], [18, 0], [13, 7], [11, 10], [0, 12], [9, 7], [15, 11], [2, 16], [18, 0], [4, 13], [17, 5], [15, 11], [0, 12], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [17, 15], [0, 3], [6, 8], [9, 13], [10, 4], [14, 2], [0, 3], [8, 18], [17, 5], [14, 2], [1, 13], [18, 0], [4, 13], [19, 2], [9, 1], [11, 10], [17, 5], [2, 18], [14, 16], [4, 13], [5, 11], [19, 2], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [19, 14], [8, 2], [11, 9], [1, 13], [17, 15], [19, 2], [1, 7], [10, 9], [0, 3], [6, 11], [17, 15], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [10, 9], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [17, 15], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [14, 16], [6, 19], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [14, 16], [11, 10], [4, 13], [5, 8], [1, 7], [18, 3], [15, 10], [6, 19], [14, 16], [18, 3], [9, 1], [11, 8], [6, 19], [0, 3], [19, 14], [15, 10], [11, 8], [1, 7], [0, 3], [9, 7], [5, 11], [1, 13], [8, 18], [0, 12], [9, 7], [8, 2], [4, 13], [0, 12], [8, 2], [9, 1], [17, 15], [18, 3], [5, 11], [0, 12], [15, 9], [4, 13], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [13, 7], [14, 2], [5, 6], [0, 12], [19, 16], [14, 2], [13, 7], [17, 5], [16, 0], [19, 14], [1, 7], [17, 5], [18, 12], [19, 16], [5, 6], [8, 18], [14, 2], [4, 13], [6, 19], [14, 2], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [17, 5], [0, 3], [1, 13], [11, 10], [17, 5], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 26]
[26, 31]
[33, 40]
[36, 41]
[45, 49]
[53, 58]
[68, 73]
[72, 76]
[75, 83]
[79, 86]
[95, 98]
[67, 102]
[102, 108]
[98, 109]
[105, 114]
[108, 123]
[133, 140]
[134, 147]
[140, 148]
[145, 149]
[147, 152]
[146, 155]
[151, 156]
[153, 158]
[159, 164]
[163, 167]
[165, 168]
[160, 172]
[167, 173]
[166, 175]
[173, 184]
[182, 186]
[181, 187]
[188, 192]
[197, 200]
[207, 211]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 13, 18]
[8, 15, 24]
[48, 51, 55]
[80, 84, 88]
[83, 87, 89]
[185, 189, 194]
[202, 203, 207]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[51, 55, 59]
[144, 150, 157]
[186, 190, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[135, 139, 145]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 26]
[26, 31]
[33, 40]
[36, 41]
[45, 49]
[53, 58]
[68, 73]
[72, 76]
[75, 83]
[79, 86]
[95, 98]
[67, 102]
[102, 108]
[98, 109]
[105, 114]
[108, 123]
[133, 140]
[134, 147]
[140, 148]
[145, 149]
[147, 152]
[146, 155]
[151, 156]
[153, 158]
[159, 164]
[163, 167]
[165, 168]
[160, 172]
[167, 173]
[166, 175]
[173, 184]
[182, 186]
[181, 187]
[188, 192]
[197, 200]
[207, 211]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.250344276428223

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [8, 15, 24] ccc => cc, Pos: [11, 13, 18] ccc => cc, Pos: [21, 26] cc => I, Pos: [21, 26] cc => I, Pos: [26, 31] cc => I, Pos: [26, 31] cc => I, Pos: [33, 40] cc => I, Pos: [33, 40] cc => I, Pos: [36, 41] cc => I, Pos: [36, 41] cc => I, Pos: [45, 49] cc => I, Pos: [45, 49] cc => I, Pos: [48, 51, 55] ccc => cc, Pos: [51, 55, 59] ccc => cc, Pos: [53, 58] cc => I, Pos: [53, 58] cc => I, Pos: [67, 102] cc => I, Pos: [67, 102] cc => I, Pos: [68, 73] cc => I, Pos: [68, 73] cc => I, Pos: [72, 76] cc => I, Pos: [72, 76] cc => I, Pos: [75, 83] cc => I, Pos: [75, 83] cc => I, Pos: [79, 86] cc => I, Pos: [79, 86] cc => I, Pos: [80, 84, 88] ccc => cc, Pos: [83, 87, 89] ccc => cc, Pos: [95, 98] cc => I, Pos: [95, 98] cc => I, Pos: [98, 109] cc => I, Pos: [98, 109] cc => I, Pos: [102, 108] cc => I, Pos: [102, 108] cc => I, Pos: [105, 114] cc => I, Pos: [105, 114] cc => I, Pos: [108, 123] cc => I, Pos: [108, 123] cc => I, Pos: [133, 140] cc => I, Pos: [133, 140] cc => I, Pos: [134, 147] cc => I, Pos: [134, 147] cc => I, Pos: [135, 139, 145] ccc => cc, Pos: [140, 148] cc => I, Pos: [140, 148] cc => I, Pos: [144, 150, 157] ccc => cc, Pos: [145, 149] cc => I, Pos: [145, 149] cc => I, Pos: [146, 155] cc => I, Pos: [146, 155] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [153, 158] cc => I, Pos: [153, 158] cc => I, Pos: [159, 164] cc => I, Pos: [159, 164] cc => I, Pos: [160, 172] cc => I, Pos: [160, 172] cc => I, Pos: [163, 167] cc => I, Pos: [163, 167] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [166, 175] cc => I, Pos: [166, 175] cc => I, Pos: [167, 173] cc => I, Pos: [167, 173] cc => I, Pos: [173, 184] cc => I, Pos: [173, 184] cc => I, Pos: [181, 187] cc => I, Pos: [181, 187] cc => I, Pos: [182, 186] cc => I, Pos: [182, 186] cc => I, Pos: [185, 189, 194] ccc => cc, Pos: [186, 190, 197] ccc => cc, Pos: [188, 192] cc => I, Pos: [188, 192] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [202, 203, 207] ccc => cc, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I]

--------End Timer [Generate Plans]:  0.07792186737060547

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [8, 15, 24] ccc => cc,
 Pos: [11, 13, 18] ccc => cc,
 Pos: [21, 26] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [36, 41] cc => I,
 Pos: [45, 49] cc => I,
 Pos: [48, 51, 55] ccc => cc,
 Pos: [53, 58] cc => I,
 Pos: [67, 102] cc => I,
 Pos: [68, 73] cc => I,
 Pos: [72, 76] cc => I,
 Pos: [83, 87, 89] ccc => cc,
 Pos: [79, 86] cc => I,
 Pos: [80, 84, 88] ccc => cc,
 Pos: [98, 109] cc => I,
 Pos: [105, 114] cc => I,
 Pos: [108, 123] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [134, 147] cc => I,
 Pos: [145, 149] cc => I,
 Pos: [144, 150, 157] ccc => cc,
 Pos: [146, 155] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [153, 158] cc => I,
 Pos: [159, 164] cc => I,
 Pos: [160, 172] cc => I,
 Pos: [167, 173] cc => I,
 Pos: [165, 168] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [181, 187] cc => I,
 Pos: [186, 190, 197] ccc => cc,
 Pos: [185, 189, 194] ccc => cc,
 Pos: [188, 192] cc => I,
 Pos: [207, 211] cc => I]
Change: 34, Saving: 36

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [8, 15, 24] ccc => cc
Apply:  Pos: [11, 13, 18] ccc => cc
Apply:  Pos: [21, 26] cc => I
Apply:  Pos: [33, 40] cc => I
Apply:  Pos: [36, 41] cc => I
Apply:  Pos: [45, 49] cc => I
Apply:  Pos: [48, 51, 55] ccc => cc
Apply:  Pos: [53, 58] cc => I
Apply:  Pos: [67, 102] cc => I
Apply:  Pos: [68, 73] cc => I
Apply:  Pos: [72, 76] cc => I
Apply:  Pos: [83, 87, 89] ccc => cc
Apply:  Pos: [79, 86] cc => I
Apply:  Pos: [80, 84, 88] ccc => cc
Apply:  Pos: [98, 109] cc => I
Apply:  Pos: [105, 114] cc => I
Apply:  Pos: [108, 123] cc => I
Apply:  Pos: [133, 140] cc => I
Apply:  Pos: [134, 147] cc => I
Apply:  Pos: [145, 149] cc => I
Apply:  Pos: [144, 150, 157] ccc => cc
Apply:  Pos: [146, 155] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [153, 158] cc => I
Apply:  Pos: [159, 164] cc => I
Apply:  Pos: [160, 172] cc => I
Apply:  Pos: [167, 173] cc => I
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [166, 175] cc => I
Apply:  Pos: [181, 187] cc => I
Apply:  Pos: [186, 190, 197] ccc => cc
Apply:  Pos: [185, 189, 194] ccc => cc
Apply:  Pos: [188, 192] cc => I
Apply:  Pos: [207, 211] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.01550602912902832

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [3, 12], [8, 2], [18, 12], [11, 10], [0, 12], [9, 7], [2, 16], [4, 13], [17, 5], [0, 12], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [17, 5], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [17, 11], [2, 18], [14, 16], [5, 11], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [0, 12], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [14, 2], [5, 6], [0, 12], [19, 0], [19, 14], [16, 0], [14, 2], [1, 7], [18, 12], [5, 6], [8, 18], [4, 13], [6, 19], [14, 2], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  4.3437721729278564

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[41, 46]
[119, 131]
[130, 138]
[135, 142]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[129, 132, 135]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[41, 46]
[119, 131]
[130, 138]
[135, 142]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.906388521194458

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [41, 46] cc => I, Pos: [41, 46] cc => I, Pos: [119, 131] cc => I, Pos: [119, 131] cc => I, Pos: [129, 132, 135] ccc => cc, Pos: [130, 138] cc => I, Pos: [130, 138] cc => I, Pos: [135, 142] cc => I, Pos: [135, 142] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [41, 46] cc => I,
 Pos: [119, 131] cc => I,
 Pos: [129, 132, 135] ccc => cc,
 Pos: [130, 138] cc => I]
Change: 4, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [41, 46] cc => I
Apply:  Pos: [119, 131] cc => I
Apply:  Pos: [129, 132, 135] ccc => cc
Apply:  Pos: [130, 138] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 1], [9, 13], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [3, 12], [8, 2], [18, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [17, 5], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [17, 11], [2, 18], [14, 16], [6, 11], [5, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [2, 18], [8, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [19, 14], [14, 2], [16, 0], [19, 0], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [14, 2], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.906388521194458

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[127, 135]
[129, 141]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[114, 123, 126]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 39, 45]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[127, 135]
[129, 141]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7342512607574463

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 39, 45] ccc => cc, Pos: [114, 123, 126] ccc => cc, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [129, 141] cc => I, Pos: [129, 141] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 39, 45] ccc => cc,
 Pos: [114, 123, 126] ccc => cc,
 Pos: [127, 135] cc => I,
 Pos: [129, 141] cc => I]
Change: 4, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 39, 45] ccc => cc
Apply:  Pos: [114, 123, 126] ccc => cc
Apply:  Pos: [127, 135] cc => I
Apply:  Pos: [129, 141] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.01562356948852539

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [18, 3], [8, 2], [3, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [17, 5], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [17, 11], [2, 18], [14, 16], [5, 11], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [6, 19], [19, 16], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [19, 0], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.7498748302459717

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6094677448272705

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 1], [9, 13], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [18, 3], [8, 2], [3, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [17, 5], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [17, 11], [2, 18], [14, 16], [6, 11], [5, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [2, 18], [8, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [6, 19], [19, 16], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [19, 0], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.6094677448272705

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [152] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 304

Reduced: 
 - size: 73 (32.44%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374785423278809

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 10], [5, 6], [14, 16], [11, 8], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [11, 8], [14, 2], [16, 0], [18, 12], [6, 19], [14, 16], [15, 10], [9, 13], [18, 12], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [5, 8], [1, 13], [6, 19], [0, 12], [7, 3], [9, 13], [10, 4], [5, 8], [0, 12], [19, 14], [17, 15], [5, 11], [13, 7], [3, 12], [8, 2], [18, 0], [13, 7], [11, 10], [0, 12], [9, 7], [15, 11], [2, 16], [18, 0], [4, 13], [17, 5], [15, 11], [0, 12], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [17, 15], [0, 3], [6, 8], [9, 13], [10, 4], [14, 2], [0, 3], [8, 18], [17, 5], [14, 2], [1, 13], [18, 0], [4, 13], [19, 2], [9, 1], [11, 10], [17, 5], [2, 18], [14, 16], [4, 13], [5, 11], [19, 2], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [19, 14], [5, 8], [13, 7], [19, 14], [8, 2], [11, 9], [1, 13], [17, 15], [19, 2], [1, 7], [10, 9], [0, 3], [6, 11], [17, 15], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [10, 9], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [17, 15], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [14, 16], [6, 19], [3, 12], [13, 7], [11, 8], [10, 9], [18, 12], [14, 16], [11, 10], [4, 13], [5, 8], [1, 7], [18, 3], [15, 10], [6, 19], [14, 16], [18, 3], [9, 1], [11, 8], [6, 19], [0, 3], [19, 14], [15, 10], [11, 8], [1, 7], [0, 3], [9, 7], [5, 11], [1, 13], [8, 18], [0, 12], [9, 7], [8, 2], [4, 13], [0, 12], [8, 2], [9, 1], [17, 15], [18, 3], [5, 11], [0, 12], [15, 9], [4, 13], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [13, 7], [14, 2], [5, 6], [0, 12], [19, 16], [14, 2], [13, 7], [17, 5], [16, 0], [19, 14], [1, 7], [17, 5], [18, 12], [19, 16], [5, 6], [8, 18], [14, 2], [4, 13], [6, 19], [14, 2], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [17, 5], [0, 3], [1, 13], [11, 10], [17, 5], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 26]
[26, 31]
[33, 40]
[36, 41]
[45, 49]
[53, 58]
[68, 73]
[72, 76]
[75, 83]
[79, 86]
[95, 98]
[67, 102]
[102, 108]
[98, 109]
[105, 114]
[108, 123]
[133, 140]
[134, 147]
[140, 148]
[145, 149]
[147, 152]
[146, 155]
[151, 156]
[153, 158]
[159, 164]
[163, 167]
[165, 168]
[160, 172]
[167, 173]
[166, 175]
[173, 184]
[182, 186]
[181, 187]
[188, 192]
[197, 200]
[207, 211]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 13, 18]
[8, 15, 24]
[48, 51, 55]
[80, 84, 88]
[83, 87, 89]
[185, 189, 194]
[202, 203, 207]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[51, 55, 59]
[144, 150, 157]
[186, 190, 197]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[135, 139, 145]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 26]
[26, 31]
[33, 40]
[36, 41]
[45, 49]
[53, 58]
[68, 73]
[72, 76]
[75, 83]
[79, 86]
[95, 98]
[67, 102]
[102, 108]
[98, 109]
[105, 114]
[108, 123]
[133, 140]
[134, 147]
[140, 148]
[145, 149]
[147, 152]
[146, 155]
[151, 156]
[153, 158]
[159, 164]
[163, 167]
[165, 168]
[160, 172]
[167, 173]
[166, 175]
[173, 184]
[182, 186]
[181, 187]
[188, 192]
[197, 200]
[207, 211]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.171909809112549

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [8, 15, 24] ccc => cc, Pos: [11, 13, 18] ccc => cc, Pos: [21, 26] cc => I, Pos: [21, 26] cc => I, Pos: [26, 31] cc => I, Pos: [26, 31] cc => I, Pos: [33, 40] cc => I, Pos: [33, 40] cc => I, Pos: [36, 41] cc => I, Pos: [36, 41] cc => I, Pos: [45, 49] cc => I, Pos: [45, 49] cc => I, Pos: [48, 51, 55] ccc => cc, Pos: [51, 55, 59] ccc => cc, Pos: [53, 58] cc => I, Pos: [53, 58] cc => I, Pos: [67, 102] cc => I, Pos: [67, 102] cc => I, Pos: [68, 73] cc => I, Pos: [68, 73] cc => I, Pos: [72, 76] cc => I, Pos: [72, 76] cc => I, Pos: [75, 83] cc => I, Pos: [75, 83] cc => I, Pos: [79, 86] cc => I, Pos: [79, 86] cc => I, Pos: [80, 84, 88] ccc => cc, Pos: [83, 87, 89] ccc => cc, Pos: [95, 98] cc => I, Pos: [95, 98] cc => I, Pos: [98, 109] cc => I, Pos: [98, 109] cc => I, Pos: [102, 108] cc => I, Pos: [102, 108] cc => I, Pos: [105, 114] cc => I, Pos: [105, 114] cc => I, Pos: [108, 123] cc => I, Pos: [108, 123] cc => I, Pos: [133, 140] cc => I, Pos: [133, 140] cc => I, Pos: [134, 147] cc => I, Pos: [134, 147] cc => I, Pos: [135, 139, 145] ccc => cc, Pos: [140, 148] cc => I, Pos: [140, 148] cc => I, Pos: [144, 150, 157] ccc => cc, Pos: [145, 149] cc => I, Pos: [145, 149] cc => I, Pos: [146, 155] cc => I, Pos: [146, 155] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [153, 158] cc => I, Pos: [153, 158] cc => I, Pos: [159, 164] cc => I, Pos: [159, 164] cc => I, Pos: [160, 172] cc => I, Pos: [160, 172] cc => I, Pos: [163, 167] cc => I, Pos: [163, 167] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [166, 175] cc => I, Pos: [166, 175] cc => I, Pos: [167, 173] cc => I, Pos: [167, 173] cc => I, Pos: [173, 184] cc => I, Pos: [173, 184] cc => I, Pos: [181, 187] cc => I, Pos: [181, 187] cc => I, Pos: [182, 186] cc => I, Pos: [182, 186] cc => I, Pos: [185, 189, 194] ccc => cc, Pos: [186, 190, 197] ccc => cc, Pos: [188, 192] cc => I, Pos: [188, 192] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [202, 203, 207] ccc => cc, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I]

Plan: 1
[Pos: [8, 15, 24] ccc => cc,
 Pos: [11, 13, 18] ccc => cc,
 Pos: [21, 26] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [36, 41] cc => I,
 Pos: [45, 49] cc => I,
 Pos: [48, 51, 55] ccc => cc,
 Pos: [53, 58] cc => I,
 Pos: [67, 102] cc => I,
 Pos: [68, 73] cc => I,
 Pos: [72, 76] cc => I,
 Pos: [75, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [80, 84, 88] ccc => cc,
 Pos: [95, 98] cc => I,
 Pos: [105, 114] cc => I,
 Pos: [108, 123] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [134, 147] cc => I,
 Pos: [135, 139, 145] ccc => cc,
 Pos: [144, 150, 157] ccc => cc,
 Pos: [146, 155] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [153, 158] cc => I,
 Pos: [159, 164] cc => I,
 Pos: [160, 172] cc => I,
 Pos: [163, 167] cc => I,
 Pos: [165, 168] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [173, 184] cc => I,
 Pos: [181, 187] cc => I,
 Pos: [182, 186] cc => I,
 Pos: [185, 189, 194] ccc => cc,
 Pos: [188, 192] cc => I,
 Pos: [197, 200] cc => I,
 Pos: [202, 203, 207] ccc => cc]
Change: 36, Saving: 40

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.09374475479125977

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [8, 15, 24] ccc => cc,
 Pos: [11, 13, 18] ccc => cc,
 Pos: [21, 26] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [36, 41] cc => I,
 Pos: [45, 49] cc => I,
 Pos: [48, 51, 55] ccc => cc,
 Pos: [53, 58] cc => I,
 Pos: [67, 102] cc => I,
 Pos: [68, 73] cc => I,
 Pos: [72, 76] cc => I,
 Pos: [75, 83] cc => I,
 Pos: [79, 86] cc => I,
 Pos: [80, 84, 88] ccc => cc,
 Pos: [95, 98] cc => I,
 Pos: [105, 114] cc => I,
 Pos: [108, 123] cc => I,
 Pos: [133, 140] cc => I,
 Pos: [134, 147] cc => I,
 Pos: [135, 139, 145] ccc => cc,
 Pos: [144, 150, 157] ccc => cc,
 Pos: [146, 155] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [153, 158] cc => I,
 Pos: [159, 164] cc => I,
 Pos: [160, 172] cc => I,
 Pos: [163, 167] cc => I,
 Pos: [165, 168] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [173, 184] cc => I,
 Pos: [181, 187] cc => I,
 Pos: [182, 186] cc => I,
 Pos: [185, 189, 194] ccc => cc,
 Pos: [188, 192] cc => I,
 Pos: [197, 200] cc => I,
 Pos: [202, 203, 207] ccc => cc]
Change: 36, Saving: 40

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [8, 15, 24] ccc => cc
Apply:  Pos: [11, 13, 18] ccc => cc
Apply:  Pos: [21, 26] cc => I
Apply:  Pos: [33, 40] cc => I
Apply:  Pos: [36, 41] cc => I
Apply:  Pos: [45, 49] cc => I
Apply:  Pos: [48, 51, 55] ccc => cc
Apply:  Pos: [53, 58] cc => I
Apply:  Pos: [67, 102] cc => I
Apply:  Pos: [68, 73] cc => I
Apply:  Pos: [72, 76] cc => I
Apply:  Pos: [75, 83] cc => I
Apply:  Pos: [79, 86] cc => I
Apply:  Pos: [80, 84, 88] ccc => cc
Apply:  Pos: [95, 98] cc => I
Apply:  Pos: [105, 114] cc => I
Apply:  Pos: [108, 123] cc => I
Apply:  Pos: [133, 140] cc => I
Apply:  Pos: [134, 147] cc => I
Apply:  Pos: [135, 139, 145] ccc => cc
Apply:  Pos: [144, 150, 157] ccc => cc
Apply:  Pos: [146, 155] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [153, 158] cc => I
Apply:  Pos: [159, 164] cc => I
Apply:  Pos: [160, 172] cc => I
Apply:  Pos: [163, 167] cc => I
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [166, 175] cc => I
Apply:  Pos: [173, 184] cc => I
Apply:  Pos: [181, 187] cc => I
Apply:  Pos: [182, 186] cc => I
Apply:  Pos: [185, 189, 194] ccc => cc
Apply:  Pos: [188, 192] cc => I
Apply:  Pos: [197, 200] cc => I
Apply:  Pos: [202, 203, 207] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [3, 12], [8, 2], [18, 12], [11, 10], [0, 12], [9, 7], [2, 16], [4, 13], [17, 5], [0, 12], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [18, 3], [13, 7], [11, 8], [10, 9], [3, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [18, 3], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [5, 6], [19, 0], [16, 0], [19, 14], [1, 7], [18, 12], [5, 6], [8, 18], [4, 13], [6, 19], [10, 4], [17, 6], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [17, 5], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  4.265654563903809

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[41, 46]
[128, 134]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[102, 107, 113]
[134, 137, 139]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 118, 121]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[139, 140, 147]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[41, 46]
[128, 134]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7810230255126953

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [41, 46] cc => I, Pos: [41, 46] cc => I, Pos: [102, 107, 113] ccc => cc, Pos: [113, 118, 121] ccc => cc, Pos: [128, 134] cc => I, Pos: [128, 134] cc => I, Pos: [134, 137, 139] ccc => cc, Pos: [139, 140, 147] ccc => cc]

Plan: 1
[Pos: [41, 46] cc => I,
 Pos: [102, 107, 113] ccc => cc,
 Pos: [128, 134] cc => I,
 Pos: [139, 140, 147] ccc => cc]
Change: 4, Saving: 3

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [41, 46] cc => I,
 Pos: [102, 107, 113] ccc => cc,
 Pos: [128, 134] cc => I,
 Pos: [139, 140, 147] ccc => cc]
Change: 4, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [41, 46] cc => I
Apply:  Pos: [102, 107, 113] ccc => cc
Apply:  Pos: [128, 134] cc => I
Apply:  Pos: [139, 140, 147] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 1], [9, 13], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [3, 12], [8, 2], [18, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [18, 3], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [2, 18], [8, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 12], [18, 0], [13, 7], [11, 8], [10, 9], [3, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [16, 0], [19, 14], [19, 0], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.7810230255126953

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[37, 39, 45]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6406497955322266

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 39, 45] ccc => cc]

Plan: 1
[Pos: [37, 39, 45] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.01562786102294922

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 39, 45] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 39, 45] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [18, 3], [8, 2], [3, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [0, 12], [11, 9], [18, 0], [18, 12], [13, 7], [11, 8], [10, 9], [3, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [16, 0], [19, 0], [19, 14], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [16, 0], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.656277656555176

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[125, 137]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[97, 99, 100]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[125, 137]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.594010353088379

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [97, 99, 100] ccc => cc, Pos: [125, 137] cc => I, Pos: [125, 137] cc => I]

Plan: 1
[Pos: [97, 99, 100] ccc => cc, Pos: [125, 137] cc => I]
Change: 2, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [97, 99, 100] ccc => cc, Pos: [125, 137] cc => I]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [97, 99, 100] ccc => cc
Apply:  Pos: [125, 137] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 1], [9, 13], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [18, 3], [8, 2], [3, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [2, 18], [8, 18], [1, 13], [15, 10], [19, 14], [5, 8], [18, 0], [11, 9], [0, 12], [13, 7], [11, 8], [10, 9], [3, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [6, 19], [19, 14], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [19, 0], [19, 14], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.594010353088379

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[111, 120, 123]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.5153956413269043

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [111, 120, 123] ccc => cc]

Plan: 1
[Pos: [111, 120, 123] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015624284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [111, 120, 123] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [111, 120, 123] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 12], [13, 7], [15, 9], [19, 16], [2, 1], [6, 11], [18, 12], [9, 1], [15, 9], [5, 6], [14, 16], [11, 1], [0, 12], [8, 1], [2, 16], [10, 9], [3, 12], [4, 13], [14, 2], [16, 0], [6, 19], [14, 16], [9, 13], [9, 1], [19, 16], [15, 11], [13, 7], [18, 12], [14, 16], [1, 13], [6, 19], [7, 3], [9, 13], [10, 4], [19, 14], [17, 15], [5, 11], [18, 3], [8, 2], [3, 12], [11, 10], [9, 7], [2, 16], [4, 13], [17, 5], [5, 6], [9, 13], [16, 0], [8, 2], [10, 9], [4, 13], [6, 8], [9, 13], [10, 4], [8, 18], [1, 13], [18, 0], [19, 18], [9, 1], [11, 10], [2, 18], [14, 16], [5, 11], [17, 5], [6, 11], [16, 0], [18, 12], [8, 1], [9, 7], [5, 8], [13, 7], [8, 2], [11, 9], [1, 13], [19, 2], [1, 7], [0, 3], [6, 11], [19, 14], [5, 8], [3, 12], [2, 18], [14, 2], [18, 12], [13, 7], [6, 8], [2, 1], [0, 3], [6, 19], [10, 4], [5, 11], [8, 18], [2, 18], [1, 13], [15, 10], [19, 14], [5, 8], [18, 0], [11, 9], [0, 12], [13, 7], [11, 8], [10, 9], [3, 12], [11, 10], [4, 13], [5, 8], [9, 1], [14, 16], [1, 7], [6, 19], [19, 16], [1, 13], [8, 18], [9, 1], [17, 15], [18, 3], [15, 9], [11, 8], [2, 18], [14, 16], [0, 3], [1, 18], [19, 0], [1, 7], [18, 12], [8, 18], [4, 13], [6, 19], [10, 4], [17, 5], [5, 6], [10, 9], [1, 18], [0, 3], [1, 13], [11, 10], [9, 7], [19, 14], [15, 10], [8, 18], [5, 8], [13, 7], [14, 16], [18, 3], [2, 1], [11, 8], [17, 15], [1, 7], [6, 19], ----End Timer [Execute Mapping]:  2.531019926071167

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [150] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 300

Reduced: 
 - size: 75 (33.33%)
 - depth: 11 (24.44%)

