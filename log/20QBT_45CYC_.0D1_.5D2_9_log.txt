----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09372210502624512

[14, 13], [10, 4], [16, 1], [3, 17], [2, 11], [12, 14], [7, 11], [10, 5], [16, 1], [19, 13], [17, 6], [14, 13], [10, 5], [1, 15], [9, 4], [7, 11], [8, 17], [0, 3], [12, 19], [2, 18], [19, 13], [3, 2], [16, 0], [17, 10], [12, 13], [10, 4], [3, 2], [16, 0], [17, 6], [12, 13], [2, 6], [0, 3], [9, 5], [15, 7], [12, 13], [7, 11], [1, 15], [2, 6], [8, 3], [12, 14], [6, 18], [17, 19], [14, 19], [8, 3], [5, 4], [19, 6], [1, 3], [8, 17], [9, 4], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [9, 4], [17, 6], [1, 2], [9, 5], [12, 19], [3, 17], [2, 11], [12, 13], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [19, 13], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [19, 13], [18, 5], [17, 10], [15, 7], [3, 17], [9, 4], [16, 1], [2, 18], [19, 10], [3, 17], [2, 11], [12, 13], [8, 17], [6, 10], [12, 13], [15, 7], [14, 19], [2, 11], [17, 10], [16, 1], [6, 18], [7, 11], [9, 5], [10, 5], [7, 11], [14, 19], [2, 18], [3, 17], [1, 15], [10, 5], [19, 6], [16, 1], [0, 3], [2, 18], [9, 4], [10, 9], [3, 17], [6, 18], [16, 0], [7, 11], [10, 4], [3, 2], [0, 8], [7, 11], [16, 1], [19, 13], [10, 9], [14, 19], [0, 3], [18, 5], [10, 9], [3, 17], [14, 13], [2, 11], [16, 1], [18, 5], [10, 9], [16, 1], [6, 18], [0, 8], [12, 19], [19, 10], [5, 4], [0, 17], [1, 3], [11, 18], [19, 6], [1, 15], [13, 9], [16, 0], [2, 18], [19, 10], [16, 0], [1, 2], [8, 12], [3, 15], [19, 6], [14, 13], [10, 4], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [10, 5], [0, 8], [3, 2], [1, 15], [6, 18], [10, 9], [5, 4], [12, 13], [0, 8], [11, 18], [1, 15], [10, 5], [0, 8], [12, 19], [11, 18], [1, 2], [9, 4], [0, 8], [3, 15], [14, 19], [6, 18], [16, 1], [14, 13], [17, 10], [0, 8], [2, 18], [12, 14], [9, 4], [0, 8], [7, 11], [19, 6], [1, 2], [8, 3], [9, 5], [7, 11], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [5, 4], [10, 9], [0, 8], [15, 2], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [10, 4], [15, 2], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [10, 5], [0, 17], [1, 15], [19, 10], [9, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[7, 12]
[6, 15]
[21, 26]
[22, 27]
[24, 29]
[29, 34]
[30, 37]
[38, 43]
[48, 54]
[34, 61]
[67, 76]
[73, 81]
[80, 85]
[87, 90]
[79, 91]
[86, 93]
[82, 95]
[97, 100]
[92, 101]
[99, 105]
[102, 109]
[81, 110]
[100, 115]
[115, 119]
[107, 120]
[111, 122]
[122, 126]
[120, 130]
[125, 131]
[126, 132]
[130, 133]
[118, 135]
[137, 147]
[145, 148]
[142, 152]
[163, 170]
[165, 172]
[170, 174]
[171, 176]
[174, 179]
[179, 186]
[178, 189]
[186, 190]
[191, 196]
[214, 216]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[95, 104, 107]
[162, 168, 173]
[190, 194, 205]
[206, 209, 214]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[15, 33, 35]
[103, 108, 112]
[201, 206, 209]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[203, 213, 220]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[7, 12]
[6, 15]
[21, 26]
[22, 27]
[24, 29]
[29, 34]
[30, 37]
[38, 43]
[48, 54]
[34, 61]
[67, 76]
[73, 81]
[80, 85]
[87, 90]
[79, 91]
[86, 93]
[82, 95]
[97, 100]
[92, 101]
[99, 105]
[102, 109]
[81, 110]
[100, 115]
[115, 119]
[107, 120]
[111, 122]
[122, 126]
[120, 130]
[125, 131]
[126, 132]
[130, 133]
[118, 135]
[137, 147]
[145, 148]
[142, 152]
[163, 170]
[165, 172]
[170, 174]
[171, 176]
[174, 179]
[179, 186]
[178, 189]
[186, 190]
[191, 196]
[214, 216]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.2030699253082275

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [6, 15] cc => I, Pos: [6, 15] cc => I, Pos: [7, 12] cc => I, Pos: [7, 12] cc => I, Pos: [15, 33, 35] ccc => cc, Pos: [21, 26] cc => I, Pos: [21, 26] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [29, 34] cc => I, Pos: [29, 34] cc => I, Pos: [30, 37] cc => I, Pos: [30, 37] cc => I, Pos: [34, 61] cc => I, Pos: [34, 61] cc => I, Pos: [38, 43] cc => I, Pos: [38, 43] cc => I, Pos: [48, 54] cc => I, Pos: [48, 54] cc => I, Pos: [67, 76] cc => I, Pos: [67, 76] cc => I, Pos: [73, 81] cc => I, Pos: [73, 81] cc => I, Pos: [79, 91] cc => I, Pos: [79, 91] cc => I, Pos: [80, 85] cc => I, Pos: [80, 85] cc => I, Pos: [81, 110] cc => I, Pos: [81, 110] cc => I, Pos: [82, 95] cc => I, Pos: [82, 95] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [87, 90] cc => I, Pos: [87, 90] cc => I, Pos: [92, 101] cc => I, Pos: [92, 101] cc => I, Pos: [95, 104, 107] ccc => cc, Pos: [97, 100] cc => I, Pos: [97, 100] cc => I, Pos: [99, 105] cc => I, Pos: [99, 105] cc => I, Pos: [100, 115] cc => I, Pos: [100, 115] cc => I, Pos: [102, 109] cc => I, Pos: [102, 109] cc => I, Pos: [103, 108, 112] ccc => cc, Pos: [107, 120] cc => I, Pos: [107, 120] cc => I, Pos: [111, 122] cc => I, Pos: [111, 122] cc => I, Pos: [115, 119] cc => I, Pos: [115, 119] cc => I, Pos: [118, 135] cc => I, Pos: [118, 135] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [122, 126] cc => I, Pos: [122, 126] cc => I, Pos: [125, 131] cc => I, Pos: [125, 131] cc => I, Pos: [126, 132] cc => I, Pos: [126, 132] cc => I, Pos: [130, 133] cc => I, Pos: [130, 133] cc => I, Pos: [137, 147] cc => I, Pos: [137, 147] cc => I, Pos: [142, 152] cc => I, Pos: [142, 152] cc => I, Pos: [145, 148] cc => I, Pos: [145, 148] cc => I, Pos: [162, 168, 173] ccc => cc, Pos: [163, 170] cc => I, Pos: [163, 170] cc => I, Pos: [165, 172] cc => I, Pos: [165, 172] cc => I, Pos: [170, 174] cc => I, Pos: [170, 174] cc => I, Pos: [171, 176] cc => I, Pos: [171, 176] cc => I, Pos: [174, 179] cc => I, Pos: [174, 179] cc => I, Pos: [178, 189] cc => I, Pos: [178, 189] cc => I, Pos: [179, 186] cc => I, Pos: [179, 186] cc => I, Pos: [186, 190] cc => I, Pos: [186, 190] cc => I, Pos: [190, 194, 205] ccc => cc, Pos: [191, 196] cc => I, Pos: [191, 196] cc => I, Pos: [201, 206, 209] ccc => cc, Pos: [203, 213, 220] ccc => cc, Pos: [206, 209, 214] ccc => cc, Pos: [214, 216] cc => I, Pos: [214, 216] cc => I]

Plan: 1
[Pos: [2, 8] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [7, 12] cc => I,
 Pos: [21, 26] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [34, 61] cc => I,
 Pos: [38, 43] cc => I,
 Pos: [48, 54] cc => I,
 Pos: [67, 76] cc => I,
 Pos: [73, 81] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [82, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [87, 90] cc => I,
 Pos: [92, 101] cc => I,
 Pos: [97, 100] cc => I,
 Pos: [99, 105] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [103, 108, 112] ccc => cc,
 Pos: [107, 120] cc => I,
 Pos: [111, 122] cc => I,
 Pos: [115, 119] cc => I,
 Pos: [118, 135] cc => I,
 Pos: [125, 131] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [130, 133] cc => I,
 Pos: [137, 147] cc => I,
 Pos: [142, 152] cc => I,
 Pos: [145, 148] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 170] cc => I,
 Pos: [165, 172] cc => I,
 Pos: [171, 176] cc => I,
 Pos: [174, 179] cc => I,
 Pos: [178, 189] cc => I,
 Pos: [186, 190] cc => I,
 Pos: [191, 196] cc => I,
 Pos: [201, 206, 209] ccc => cc,
 Pos: [203, 213, 220] ccc => cc,
 Pos: [214, 216] cc => I]
Change: 43, Saving: 164

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 8] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [7, 12] cc => I,
 Pos: [21, 26] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [34, 61] cc => I,
 Pos: [38, 43] cc => I,
 Pos: [48, 54] cc => I,
 Pos: [67, 76] cc => I,
 Pos: [73, 81] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [82, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [87, 90] cc => I,
 Pos: [92, 101] cc => I,
 Pos: [97, 100] cc => I,
 Pos: [99, 105] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [103, 108, 112] ccc => cc,
 Pos: [107, 120] cc => I,
 Pos: [111, 122] cc => I,
 Pos: [115, 119] cc => I,
 Pos: [118, 135] cc => I,
 Pos: [125, 131] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [130, 133] cc => I,
 Pos: [137, 147] cc => I,
 Pos: [142, 152] cc => I,
 Pos: [145, 148] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 170] cc => I,
 Pos: [165, 172] cc => I,
 Pos: [171, 176] cc => I,
 Pos: [174, 179] cc => I,
 Pos: [178, 189] cc => I,
 Pos: [186, 190] cc => I,
 Pos: [191, 196] cc => I,
 Pos: [201, 206, 209] ccc => cc,
 Pos: [203, 213, 220] ccc => cc,
 Pos: [214, 216] cc => I]
Change: 43, Saving: 164

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [6, 15] cc => I
Apply:  Pos: [7, 12] cc => I
Apply:  Pos: [21, 26] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [30, 37] cc => I
Apply:  Pos: [34, 61] cc => I
Apply:  Pos: [38, 43] cc => I
Apply:  Pos: [48, 54] cc => I
Apply:  Pos: [67, 76] cc => I
Apply:  Pos: [73, 81] cc => I
Apply:  Pos: [79, 91] cc => I
Apply:  Pos: [80, 85] cc => I
Apply:  Pos: [82, 95] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [87, 90] cc => I
Apply:  Pos: [92, 101] cc => I
Apply:  Pos: [97, 100] cc => I
Apply:  Pos: [99, 105] cc => I
Apply:  Pos: [102, 109] cc => I
Apply:  Pos: [103, 108, 112] ccc => cc
Apply:  Pos: [107, 120] cc => I
Apply:  Pos: [111, 122] cc => I
Apply:  Pos: [115, 119] cc => I
Apply:  Pos: [118, 135] cc => I
Apply:  Pos: [125, 131] cc => I
Apply:  Pos: [126, 132] cc => I
Apply:  Pos: [130, 133] cc => I
Apply:  Pos: [137, 147] cc => I
Apply:  Pos: [142, 152] cc => I
Apply:  Pos: [145, 148] cc => I
Apply:  Pos: [162, 168, 173] ccc => cc
Apply:  Pos: [163, 170] cc => I
Apply:  Pos: [165, 172] cc => I
Apply:  Pos: [171, 176] cc => I
Apply:  Pos: [174, 179] cc => I
Apply:  Pos: [178, 189] cc => I
Apply:  Pos: [186, 190] cc => I
Apply:  Pos: [191, 196] cc => I
Apply:  Pos: [201, 206, 209] ccc => cc
Apply:  Pos: [203, 213, 220] ccc => cc
Apply:  Pos: [214, 216] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [0, 3], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [0, 3], [9, 5], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [9, 5], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [6, 18], [9, 5], [0, 3], [1, 15], [19, 6], [3, 17], [9, 4], [6, 18], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 13], [2, 11], [6, 18], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [1, 15], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [14, 13], [10, 4], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [10, 4], [3, 2], [6, 18], [10, 9], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [6, 18], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [9, 5], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [10, 5], [10, 9], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  4.2030699253082275

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 18]
[68, 78]
[64, 84]
[91, 98]
[101, 109]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[19, 27, 38]
[76, 85, 90]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 18]
[68, 78]
[64, 84]
[91, 98]
[101, 109]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4374802112579346

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 18] cc => I, Pos: [11, 18] cc => I, Pos: [19, 27, 38] ccc => cc, Pos: [64, 84] cc => I, Pos: [64, 84] cc => I, Pos: [68, 78] cc => I, Pos: [68, 78] cc => I, Pos: [76, 85, 90] ccc => cc, Pos: [91, 98] cc => I, Pos: [91, 98] cc => I, Pos: [101, 109] cc => I, Pos: [101, 109] cc => I]

Plan: 1
[Pos: [11, 18] cc => I,
 Pos: [19, 27, 38] ccc => cc,
 Pos: [64, 84] cc => I,
 Pos: [68, 78] cc => I,
 Pos: [76, 85, 90] ccc => cc,
 Pos: [91, 98] cc => I,
 Pos: [101, 109] cc => I]
Change: 7, Saving: 24

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 18] cc => I,
 Pos: [19, 27, 38] ccc => cc,
 Pos: [64, 84] cc => I,
 Pos: [68, 78] cc => I,
 Pos: [76, 85, 90] ccc => cc,
 Pos: [91, 98] cc => I,
 Pos: [101, 109] cc => I]
Change: 7, Saving: 24

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 18] cc => I
Apply:  Pos: [19, 27, 38] ccc => cc
Apply:  Pos: [64, 84] cc => I
Apply:  Pos: [68, 78] cc => I
Apply:  Pos: [76, 85, 90] ccc => cc
Apply:  Pos: [91, 98] cc => I
Apply:  Pos: [101, 109] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [14, 19], [17, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 18], [6, 10], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [10, 9], [5, 4], [12, 19], [12, 13], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [9, 5], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [10, 9], [10, 5], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.4374802112579346

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[106, 113, 114]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.1562793254852295

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [106, 113, 114] ccc => cc]

Plan: 1
[Pos: [106, 113, 114] ccc => cc]
Change: 1, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [106, 113, 114] ccc => cc]
Change: 1, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [106, 113, 114] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 10], [6, 18], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [10, 9], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [10, 9], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.1562793254852295

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[91, 100, 106]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.125009059906006

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [91, 100, 106] ccc => cc]

Plan: 1
[Pos: [91, 100, 106] ccc => cc]
Change: 1, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [91, 100, 106] ccc => cc]
Change: 1, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [91, 100, 106] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [14, 19], [17, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [6, 18], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [17, 10], [5, 4], [12, 19], [12, 13], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [10, 9], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.125009059906006

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.1093451976776123

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 18], [6, 10], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [17, 10], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [10, 9], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.1093451976776123

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [129] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 258

Reduced: 
 - size: 96 (42.67%)
 - cycle: 192 (42.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374356269836426

[14, 13], [10, 4], [16, 1], [3, 17], [2, 11], [12, 14], [7, 11], [10, 5], [16, 1], [19, 13], [17, 6], [14, 13], [10, 5], [1, 15], [9, 4], [7, 11], [8, 17], [0, 3], [12, 19], [2, 18], [19, 13], [3, 2], [16, 0], [17, 10], [12, 13], [10, 4], [3, 2], [16, 0], [17, 6], [12, 13], [2, 6], [0, 3], [9, 5], [15, 7], [12, 13], [7, 11], [1, 15], [2, 6], [8, 3], [12, 14], [6, 18], [17, 19], [14, 19], [8, 3], [5, 4], [19, 6], [1, 3], [8, 17], [9, 4], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [9, 4], [17, 6], [1, 2], [9, 5], [12, 19], [3, 17], [2, 11], [12, 13], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [19, 13], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [19, 13], [18, 5], [17, 10], [15, 7], [3, 17], [9, 4], [16, 1], [2, 18], [19, 10], [3, 17], [2, 11], [12, 13], [8, 17], [6, 10], [12, 13], [15, 7], [14, 19], [2, 11], [17, 10], [16, 1], [6, 18], [7, 11], [9, 5], [10, 5], [7, 11], [14, 19], [2, 18], [3, 17], [1, 15], [10, 5], [19, 6], [16, 1], [0, 3], [2, 18], [9, 4], [10, 9], [3, 17], [6, 18], [16, 0], [7, 11], [10, 4], [3, 2], [0, 8], [7, 11], [16, 1], [19, 13], [10, 9], [14, 19], [0, 3], [18, 5], [10, 9], [3, 17], [14, 13], [2, 11], [16, 1], [18, 5], [10, 9], [16, 1], [6, 18], [0, 8], [12, 19], [19, 10], [5, 4], [0, 17], [1, 3], [11, 18], [19, 6], [1, 15], [13, 9], [16, 0], [2, 18], [19, 10], [16, 0], [1, 2], [8, 12], [3, 15], [19, 6], [14, 13], [10, 4], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [10, 5], [0, 8], [3, 2], [1, 15], [6, 18], [10, 9], [5, 4], [12, 13], [0, 8], [11, 18], [1, 15], [10, 5], [0, 8], [12, 19], [11, 18], [1, 2], [9, 4], [0, 8], [3, 15], [14, 19], [6, 18], [16, 1], [14, 13], [17, 10], [0, 8], [2, 18], [12, 14], [9, 4], [0, 8], [7, 11], [19, 6], [1, 2], [8, 3], [9, 5], [7, 11], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [5, 4], [10, 9], [0, 8], [15, 2], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [10, 4], [15, 2], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [10, 5], [0, 17], [1, 15], [19, 10], [9, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[7, 12]
[6, 15]
[21, 26]
[22, 27]
[24, 29]
[29, 34]
[30, 37]
[38, 43]
[48, 54]
[34, 61]
[67, 76]
[73, 81]
[80, 85]
[87, 90]
[79, 91]
[86, 93]
[82, 95]
[97, 100]
[92, 101]
[99, 105]
[102, 109]
[81, 110]
[100, 115]
[115, 119]
[107, 120]
[111, 122]
[122, 126]
[120, 130]
[125, 131]
[126, 132]
[130, 133]
[118, 135]
[137, 147]
[145, 148]
[142, 152]
[163, 170]
[165, 172]
[170, 174]
[171, 176]
[174, 179]
[179, 186]
[178, 189]
[186, 190]
[191, 196]
[214, 216]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[95, 104, 107]
[162, 168, 173]
[190, 194, 205]
[206, 209, 214]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[15, 33, 35]
[103, 108, 112]
[201, 206, 209]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[203, 213, 220]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[7, 12]
[6, 15]
[21, 26]
[22, 27]
[24, 29]
[29, 34]
[30, 37]
[38, 43]
[48, 54]
[34, 61]
[67, 76]
[73, 81]
[80, 85]
[87, 90]
[79, 91]
[86, 93]
[82, 95]
[97, 100]
[92, 101]
[99, 105]
[102, 109]
[81, 110]
[100, 115]
[115, 119]
[107, 120]
[111, 122]
[122, 126]
[120, 130]
[125, 131]
[126, 132]
[130, 133]
[118, 135]
[137, 147]
[145, 148]
[142, 152]
[163, 170]
[165, 172]
[170, 174]
[171, 176]
[174, 179]
[179, 186]
[178, 189]
[186, 190]
[191, 196]
[214, 216]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.156289100646973

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [6, 15] cc => I, Pos: [6, 15] cc => I, Pos: [7, 12] cc => I, Pos: [7, 12] cc => I, Pos: [15, 33, 35] ccc => cc, Pos: [21, 26] cc => I, Pos: [21, 26] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [29, 34] cc => I, Pos: [29, 34] cc => I, Pos: [30, 37] cc => I, Pos: [30, 37] cc => I, Pos: [34, 61] cc => I, Pos: [34, 61] cc => I, Pos: [38, 43] cc => I, Pos: [38, 43] cc => I, Pos: [48, 54] cc => I, Pos: [48, 54] cc => I, Pos: [67, 76] cc => I, Pos: [67, 76] cc => I, Pos: [73, 81] cc => I, Pos: [73, 81] cc => I, Pos: [79, 91] cc => I, Pos: [79, 91] cc => I, Pos: [80, 85] cc => I, Pos: [80, 85] cc => I, Pos: [81, 110] cc => I, Pos: [81, 110] cc => I, Pos: [82, 95] cc => I, Pos: [82, 95] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [87, 90] cc => I, Pos: [87, 90] cc => I, Pos: [92, 101] cc => I, Pos: [92, 101] cc => I, Pos: [95, 104, 107] ccc => cc, Pos: [97, 100] cc => I, Pos: [97, 100] cc => I, Pos: [99, 105] cc => I, Pos: [99, 105] cc => I, Pos: [100, 115] cc => I, Pos: [100, 115] cc => I, Pos: [102, 109] cc => I, Pos: [102, 109] cc => I, Pos: [103, 108, 112] ccc => cc, Pos: [107, 120] cc => I, Pos: [107, 120] cc => I, Pos: [111, 122] cc => I, Pos: [111, 122] cc => I, Pos: [115, 119] cc => I, Pos: [115, 119] cc => I, Pos: [118, 135] cc => I, Pos: [118, 135] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [122, 126] cc => I, Pos: [122, 126] cc => I, Pos: [125, 131] cc => I, Pos: [125, 131] cc => I, Pos: [126, 132] cc => I, Pos: [126, 132] cc => I, Pos: [130, 133] cc => I, Pos: [130, 133] cc => I, Pos: [137, 147] cc => I, Pos: [137, 147] cc => I, Pos: [142, 152] cc => I, Pos: [142, 152] cc => I, Pos: [145, 148] cc => I, Pos: [145, 148] cc => I, Pos: [162, 168, 173] ccc => cc, Pos: [163, 170] cc => I, Pos: [163, 170] cc => I, Pos: [165, 172] cc => I, Pos: [165, 172] cc => I, Pos: [170, 174] cc => I, Pos: [170, 174] cc => I, Pos: [171, 176] cc => I, Pos: [171, 176] cc => I, Pos: [174, 179] cc => I, Pos: [174, 179] cc => I, Pos: [178, 189] cc => I, Pos: [178, 189] cc => I, Pos: [179, 186] cc => I, Pos: [179, 186] cc => I, Pos: [186, 190] cc => I, Pos: [186, 190] cc => I, Pos: [190, 194, 205] ccc => cc, Pos: [191, 196] cc => I, Pos: [191, 196] cc => I, Pos: [201, 206, 209] ccc => cc, Pos: [203, 213, 220] ccc => cc, Pos: [206, 209, 214] ccc => cc, Pos: [214, 216] cc => I, Pos: [214, 216] cc => I]

Plan: 1
[Pos: [2, 8] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [7, 12] cc => I,
 Pos: [21, 26] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [34, 61] cc => I,
 Pos: [38, 43] cc => I,
 Pos: [48, 54] cc => I,
 Pos: [67, 76] cc => I,
 Pos: [73, 81] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [82, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [87, 90] cc => I,
 Pos: [92, 101] cc => I,
 Pos: [97, 100] cc => I,
 Pos: [99, 105] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [103, 108, 112] ccc => cc,
 Pos: [107, 120] cc => I,
 Pos: [111, 122] cc => I,
 Pos: [115, 119] cc => I,
 Pos: [118, 135] cc => I,
 Pos: [125, 131] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [130, 133] cc => I,
 Pos: [137, 147] cc => I,
 Pos: [142, 152] cc => I,
 Pos: [145, 148] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 170] cc => I,
 Pos: [165, 172] cc => I,
 Pos: [171, 176] cc => I,
 Pos: [174, 179] cc => I,
 Pos: [178, 189] cc => I,
 Pos: [186, 190] cc => I,
 Pos: [191, 196] cc => I,
 Pos: [201, 206, 209] ccc => cc,
 Pos: [203, 213, 220] ccc => cc,
 Pos: [214, 216] cc => I]
Change: 43, Saving: 44

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.10938096046447754

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 8] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [7, 12] cc => I,
 Pos: [21, 26] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [34, 61] cc => I,
 Pos: [38, 43] cc => I,
 Pos: [48, 54] cc => I,
 Pos: [67, 76] cc => I,
 Pos: [73, 81] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [82, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [87, 90] cc => I,
 Pos: [92, 101] cc => I,
 Pos: [97, 100] cc => I,
 Pos: [99, 105] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [103, 108, 112] ccc => cc,
 Pos: [107, 120] cc => I,
 Pos: [111, 122] cc => I,
 Pos: [115, 119] cc => I,
 Pos: [118, 135] cc => I,
 Pos: [125, 131] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [130, 133] cc => I,
 Pos: [137, 147] cc => I,
 Pos: [142, 152] cc => I,
 Pos: [145, 148] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 170] cc => I,
 Pos: [165, 172] cc => I,
 Pos: [171, 176] cc => I,
 Pos: [174, 179] cc => I,
 Pos: [178, 189] cc => I,
 Pos: [186, 190] cc => I,
 Pos: [191, 196] cc => I,
 Pos: [201, 206, 209] ccc => cc,
 Pos: [203, 213, 220] ccc => cc,
 Pos: [214, 216] cc => I]
Change: 43, Saving: 44

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [6, 15] cc => I
Apply:  Pos: [7, 12] cc => I
Apply:  Pos: [21, 26] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [30, 37] cc => I
Apply:  Pos: [34, 61] cc => I
Apply:  Pos: [38, 43] cc => I
Apply:  Pos: [48, 54] cc => I
Apply:  Pos: [67, 76] cc => I
Apply:  Pos: [73, 81] cc => I
Apply:  Pos: [79, 91] cc => I
Apply:  Pos: [80, 85] cc => I
Apply:  Pos: [82, 95] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [87, 90] cc => I
Apply:  Pos: [92, 101] cc => I
Apply:  Pos: [97, 100] cc => I
Apply:  Pos: [99, 105] cc => I
Apply:  Pos: [102, 109] cc => I
Apply:  Pos: [103, 108, 112] ccc => cc
Apply:  Pos: [107, 120] cc => I
Apply:  Pos: [111, 122] cc => I
Apply:  Pos: [115, 119] cc => I
Apply:  Pos: [118, 135] cc => I
Apply:  Pos: [125, 131] cc => I
Apply:  Pos: [126, 132] cc => I
Apply:  Pos: [130, 133] cc => I
Apply:  Pos: [137, 147] cc => I
Apply:  Pos: [142, 152] cc => I
Apply:  Pos: [145, 148] cc => I
Apply:  Pos: [162, 168, 173] ccc => cc
Apply:  Pos: [163, 170] cc => I
Apply:  Pos: [165, 172] cc => I
Apply:  Pos: [171, 176] cc => I
Apply:  Pos: [174, 179] cc => I
Apply:  Pos: [178, 189] cc => I
Apply:  Pos: [186, 190] cc => I
Apply:  Pos: [191, 196] cc => I
Apply:  Pos: [201, 206, 209] ccc => cc
Apply:  Pos: [203, 213, 220] ccc => cc
Apply:  Pos: [214, 216] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [0, 3], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [0, 3], [9, 5], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [9, 5], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [6, 18], [9, 5], [0, 3], [1, 15], [19, 6], [3, 17], [9, 4], [6, 18], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 13], [2, 11], [6, 18], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [1, 15], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [14, 13], [10, 4], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [10, 4], [3, 2], [6, 18], [10, 9], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [6, 18], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [9, 5], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [10, 5], [10, 9], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  4.26567006111145

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 18]
[68, 78]
[64, 84]
[91, 98]
[101, 109]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[19, 27, 38]
[76, 85, 90]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 18]
[68, 78]
[64, 84]
[91, 98]
[101, 109]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.43752384185791

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 18] cc => I, Pos: [11, 18] cc => I, Pos: [19, 27, 38] ccc => cc, Pos: [64, 84] cc => I, Pos: [64, 84] cc => I, Pos: [68, 78] cc => I, Pos: [68, 78] cc => I, Pos: [76, 85, 90] ccc => cc, Pos: [91, 98] cc => I, Pos: [91, 98] cc => I, Pos: [101, 109] cc => I, Pos: [101, 109] cc => I]

Plan: 1
[Pos: [11, 18] cc => I,
 Pos: [19, 27, 38] ccc => cc,
 Pos: [64, 84] cc => I,
 Pos: [68, 78] cc => I,
 Pos: [76, 85, 90] ccc => cc,
 Pos: [91, 98] cc => I,
 Pos: [101, 109] cc => I]
Change: 7, Saving: 7

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 18] cc => I,
 Pos: [19, 27, 38] ccc => cc,
 Pos: [64, 84] cc => I,
 Pos: [68, 78] cc => I,
 Pos: [76, 85, 90] ccc => cc,
 Pos: [91, 98] cc => I,
 Pos: [101, 109] cc => I]
Change: 7, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 18] cc => I
Apply:  Pos: [19, 27, 38] ccc => cc
Apply:  Pos: [64, 84] cc => I
Apply:  Pos: [68, 78] cc => I
Apply:  Pos: [76, 85, 90] ccc => cc
Apply:  Pos: [91, 98] cc => I
Apply:  Pos: [101, 109] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [14, 19], [17, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 18], [6, 10], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [10, 9], [5, 4], [12, 19], [12, 13], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [9, 5], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [10, 9], [10, 5], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.4531478881835938

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[106, 113, 114]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.1405563354492188

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [106, 113, 114] ccc => cc]

Plan: 1
[Pos: [106, 113, 114] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [106, 113, 114] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [106, 113, 114] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 10], [6, 18], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [10, 9], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [10, 9], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.1405563354492188

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[91, 100, 106]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0781209468841553

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [91, 100, 106] ccc => cc]

Plan: 1
[Pos: [91, 100, 106] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [91, 100, 106] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [91, 100, 106] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [14, 19], [17, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [6, 18], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [17, 10], [5, 4], [12, 19], [12, 13], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [10, 9], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.0781209468841553

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0625009536743164

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 18], [6, 10], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [17, 10], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [10, 9], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.0625009536743164

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [129] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 258

Reduced: 
 - size: 96 (42.67%)
 - depth: 13 (28.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07811498641967773

[14, 13], [10, 4], [16, 1], [3, 17], [2, 11], [12, 14], [7, 11], [10, 5], [16, 1], [19, 13], [17, 6], [14, 13], [10, 5], [1, 15], [9, 4], [7, 11], [8, 17], [0, 3], [12, 19], [2, 18], [19, 13], [3, 2], [16, 0], [17, 10], [12, 13], [10, 4], [3, 2], [16, 0], [17, 6], [12, 13], [2, 6], [0, 3], [9, 5], [15, 7], [12, 13], [7, 11], [1, 15], [2, 6], [8, 3], [12, 14], [6, 18], [17, 19], [14, 19], [8, 3], [5, 4], [19, 6], [1, 3], [8, 17], [9, 4], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [9, 4], [17, 6], [1, 2], [9, 5], [12, 19], [3, 17], [2, 11], [12, 13], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [19, 13], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [19, 13], [18, 5], [17, 10], [15, 7], [3, 17], [9, 4], [16, 1], [2, 18], [19, 10], [3, 17], [2, 11], [12, 13], [8, 17], [6, 10], [12, 13], [15, 7], [14, 19], [2, 11], [17, 10], [16, 1], [6, 18], [7, 11], [9, 5], [10, 5], [7, 11], [14, 19], [2, 18], [3, 17], [1, 15], [10, 5], [19, 6], [16, 1], [0, 3], [2, 18], [9, 4], [10, 9], [3, 17], [6, 18], [16, 0], [7, 11], [10, 4], [3, 2], [0, 8], [7, 11], [16, 1], [19, 13], [10, 9], [14, 19], [0, 3], [18, 5], [10, 9], [3, 17], [14, 13], [2, 11], [16, 1], [18, 5], [10, 9], [16, 1], [6, 18], [0, 8], [12, 19], [19, 10], [5, 4], [0, 17], [1, 3], [11, 18], [19, 6], [1, 15], [13, 9], [16, 0], [2, 18], [19, 10], [16, 0], [1, 2], [8, 12], [3, 15], [19, 6], [14, 13], [10, 4], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [10, 5], [0, 8], [3, 2], [1, 15], [6, 18], [10, 9], [5, 4], [12, 13], [0, 8], [11, 18], [1, 15], [10, 5], [0, 8], [12, 19], [11, 18], [1, 2], [9, 4], [0, 8], [3, 15], [14, 19], [6, 18], [16, 1], [14, 13], [17, 10], [0, 8], [2, 18], [12, 14], [9, 4], [0, 8], [7, 11], [19, 6], [1, 2], [8, 3], [9, 5], [7, 11], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [5, 4], [10, 9], [0, 8], [15, 2], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [10, 4], [15, 2], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [10, 5], [0, 17], [1, 15], [19, 10], [9, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[7, 12]
[6, 15]
[21, 26]
[22, 27]
[24, 29]
[29, 34]
[30, 37]
[38, 43]
[48, 54]
[34, 61]
[67, 76]
[73, 81]
[80, 85]
[87, 90]
[79, 91]
[86, 93]
[82, 95]
[97, 100]
[92, 101]
[99, 105]
[102, 109]
[81, 110]
[100, 115]
[115, 119]
[107, 120]
[111, 122]
[122, 126]
[120, 130]
[125, 131]
[126, 132]
[130, 133]
[118, 135]
[137, 147]
[145, 148]
[142, 152]
[163, 170]
[165, 172]
[170, 174]
[171, 176]
[174, 179]
[179, 186]
[178, 189]
[186, 190]
[191, 196]
[214, 216]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[95, 104, 107]
[162, 168, 173]
[190, 194, 205]
[206, 209, 214]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[15, 33, 35]
[103, 108, 112]
[201, 206, 209]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[203, 213, 220]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[7, 12]
[6, 15]
[21, 26]
[22, 27]
[24, 29]
[29, 34]
[30, 37]
[38, 43]
[48, 54]
[34, 61]
[67, 76]
[73, 81]
[80, 85]
[87, 90]
[79, 91]
[86, 93]
[82, 95]
[97, 100]
[92, 101]
[99, 105]
[102, 109]
[81, 110]
[100, 115]
[115, 119]
[107, 120]
[111, 122]
[122, 126]
[120, 130]
[125, 131]
[126, 132]
[130, 133]
[118, 135]
[137, 147]
[145, 148]
[142, 152]
[163, 170]
[165, 172]
[170, 174]
[171, 176]
[174, 179]
[179, 186]
[178, 189]
[186, 190]
[191, 196]
[214, 216]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.188138246536255

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [6, 15] cc => I, Pos: [6, 15] cc => I, Pos: [7, 12] cc => I, Pos: [7, 12] cc => I, Pos: [15, 33, 35] ccc => cc, Pos: [21, 26] cc => I, Pos: [21, 26] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [29, 34] cc => I, Pos: [29, 34] cc => I, Pos: [30, 37] cc => I, Pos: [30, 37] cc => I, Pos: [34, 61] cc => I, Pos: [34, 61] cc => I, Pos: [38, 43] cc => I, Pos: [38, 43] cc => I, Pos: [48, 54] cc => I, Pos: [48, 54] cc => I, Pos: [67, 76] cc => I, Pos: [67, 76] cc => I, Pos: [73, 81] cc => I, Pos: [73, 81] cc => I, Pos: [79, 91] cc => I, Pos: [79, 91] cc => I, Pos: [80, 85] cc => I, Pos: [80, 85] cc => I, Pos: [81, 110] cc => I, Pos: [81, 110] cc => I, Pos: [82, 95] cc => I, Pos: [82, 95] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [87, 90] cc => I, Pos: [87, 90] cc => I, Pos: [92, 101] cc => I, Pos: [92, 101] cc => I, Pos: [95, 104, 107] ccc => cc, Pos: [97, 100] cc => I, Pos: [97, 100] cc => I, Pos: [99, 105] cc => I, Pos: [99, 105] cc => I, Pos: [100, 115] cc => I, Pos: [100, 115] cc => I, Pos: [102, 109] cc => I, Pos: [102, 109] cc => I, Pos: [103, 108, 112] ccc => cc, Pos: [107, 120] cc => I, Pos: [107, 120] cc => I, Pos: [111, 122] cc => I, Pos: [111, 122] cc => I, Pos: [115, 119] cc => I, Pos: [115, 119] cc => I, Pos: [118, 135] cc => I, Pos: [118, 135] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [122, 126] cc => I, Pos: [122, 126] cc => I, Pos: [125, 131] cc => I, Pos: [125, 131] cc => I, Pos: [126, 132] cc => I, Pos: [126, 132] cc => I, Pos: [130, 133] cc => I, Pos: [130, 133] cc => I, Pos: [137, 147] cc => I, Pos: [137, 147] cc => I, Pos: [142, 152] cc => I, Pos: [142, 152] cc => I, Pos: [145, 148] cc => I, Pos: [145, 148] cc => I, Pos: [162, 168, 173] ccc => cc, Pos: [163, 170] cc => I, Pos: [163, 170] cc => I, Pos: [165, 172] cc => I, Pos: [165, 172] cc => I, Pos: [170, 174] cc => I, Pos: [170, 174] cc => I, Pos: [171, 176] cc => I, Pos: [171, 176] cc => I, Pos: [174, 179] cc => I, Pos: [174, 179] cc => I, Pos: [178, 189] cc => I, Pos: [178, 189] cc => I, Pos: [179, 186] cc => I, Pos: [179, 186] cc => I, Pos: [186, 190] cc => I, Pos: [186, 190] cc => I, Pos: [190, 194, 205] ccc => cc, Pos: [191, 196] cc => I, Pos: [191, 196] cc => I, Pos: [201, 206, 209] ccc => cc, Pos: [203, 213, 220] ccc => cc, Pos: [206, 209, 214] ccc => cc, Pos: [214, 216] cc => I, Pos: [214, 216] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 8] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [7, 12] cc => I,
 Pos: [21, 26] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [34, 61] cc => I,
 Pos: [38, 43] cc => I,
 Pos: [48, 54] cc => I,
 Pos: [67, 76] cc => I,
 Pos: [73, 81] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [82, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [87, 90] cc => I,
 Pos: [92, 101] cc => I,
 Pos: [97, 100] cc => I,
 Pos: [99, 105] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [103, 108, 112] ccc => cc,
 Pos: [107, 120] cc => I,
 Pos: [111, 122] cc => I,
 Pos: [115, 119] cc => I,
 Pos: [118, 135] cc => I,
 Pos: [125, 131] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [130, 133] cc => I,
 Pos: [137, 147] cc => I,
 Pos: [142, 152] cc => I,
 Pos: [145, 148] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 170] cc => I,
 Pos: [165, 172] cc => I,
 Pos: [171, 176] cc => I,
 Pos: [174, 179] cc => I,
 Pos: [178, 189] cc => I,
 Pos: [190, 194, 205] ccc => cc,
 Pos: [191, 196] cc => I,
 Pos: [201, 206, 209] ccc => cc,
 Pos: [203, 213, 220] ccc => cc,
 Pos: [214, 216] cc => I]
Change: 43, Saving: 162

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [6, 15] cc => I
Apply:  Pos: [7, 12] cc => I
Apply:  Pos: [21, 26] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [30, 37] cc => I
Apply:  Pos: [34, 61] cc => I
Apply:  Pos: [38, 43] cc => I
Apply:  Pos: [48, 54] cc => I
Apply:  Pos: [67, 76] cc => I
Apply:  Pos: [73, 81] cc => I
Apply:  Pos: [79, 91] cc => I
Apply:  Pos: [80, 85] cc => I
Apply:  Pos: [82, 95] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [87, 90] cc => I
Apply:  Pos: [92, 101] cc => I
Apply:  Pos: [97, 100] cc => I
Apply:  Pos: [99, 105] cc => I
Apply:  Pos: [102, 109] cc => I
Apply:  Pos: [103, 108, 112] ccc => cc
Apply:  Pos: [107, 120] cc => I
Apply:  Pos: [111, 122] cc => I
Apply:  Pos: [115, 119] cc => I
Apply:  Pos: [118, 135] cc => I
Apply:  Pos: [125, 131] cc => I
Apply:  Pos: [126, 132] cc => I
Apply:  Pos: [130, 133] cc => I
Apply:  Pos: [137, 147] cc => I
Apply:  Pos: [142, 152] cc => I
Apply:  Pos: [145, 148] cc => I
Apply:  Pos: [162, 168, 173] ccc => cc
Apply:  Pos: [163, 170] cc => I
Apply:  Pos: [165, 172] cc => I
Apply:  Pos: [171, 176] cc => I
Apply:  Pos: [174, 179] cc => I
Apply:  Pos: [178, 189] cc => I
Apply:  Pos: [190, 194, 205] ccc => cc
Apply:  Pos: [191, 196] cc => I
Apply:  Pos: [201, 206, 209] ccc => cc
Apply:  Pos: [203, 213, 220] ccc => cc
Apply:  Pos: [214, 216] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [0, 3], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [0, 3], [9, 5], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [9, 5], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [6, 18], [9, 5], [0, 3], [1, 15], [19, 6], [3, 17], [9, 4], [6, 18], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 13], [2, 11], [6, 18], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [1, 15], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [14, 13], [10, 4], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [10, 4], [3, 2], [6, 18], [10, 9], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [6, 18], [16, 1], [14, 13], [17, 10], [0, 8], [2, 18], [12, 14], [0, 3], [19, 6], [1, 2], [8, 3], [9, 5], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [10, 5], [10, 9], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  4.188138246536255

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 18]
[68, 78]
[64, 84]
[91, 98]
[101, 109]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[19, 27, 38]
[76, 85, 90]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 18]
[68, 78]
[64, 84]
[91, 98]
[101, 109]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.39095139503479

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 18] cc => I, Pos: [11, 18] cc => I, Pos: [19, 27, 38] ccc => cc, Pos: [64, 84] cc => I, Pos: [64, 84] cc => I, Pos: [68, 78] cc => I, Pos: [68, 78] cc => I, Pos: [76, 85, 90] ccc => cc, Pos: [91, 98] cc => I, Pos: [91, 98] cc => I, Pos: [101, 109] cc => I, Pos: [101, 109] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 18] cc => I,
 Pos: [19, 27, 38] ccc => cc,
 Pos: [64, 84] cc => I,
 Pos: [68, 78] cc => I,
 Pos: [76, 85, 90] ccc => cc,
 Pos: [91, 98] cc => I,
 Pos: [101, 109] cc => I]
Change: 7, Saving: 24

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 18] cc => I
Apply:  Pos: [19, 27, 38] ccc => cc
Apply:  Pos: [64, 84] cc => I
Apply:  Pos: [68, 78] cc => I
Apply:  Pos: [76, 85, 90] ccc => cc
Apply:  Pos: [91, 98] cc => I
Apply:  Pos: [101, 109] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [14, 19], [17, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 18], [6, 10], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [10, 9], [5, 4], [12, 19], [12, 13], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [17, 10], [0, 8], [2, 18], [12, 14], [0, 3], [19, 6], [1, 2], [8, 3], [9, 5], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [10, 9], [10, 5], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.39095139503479

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[108, 115, 116]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.1253132820129395

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [108, 115, 116] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [108, 115, 116] ccc => cc]
Change: 1, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [108, 115, 116] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 10], [6, 18], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [10, 9], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [17, 10], [0, 8], [2, 18], [12, 14], [0, 3], [19, 6], [1, 2], [8, 3], [10, 9], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.140950918197632

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[91, 100, 108]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0940496921539307

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [91, 100, 108] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [91, 100, 108] ccc => cc]
Change: 1, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [91, 100, 108] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [14, 19], [17, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [6, 18], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [17, 10], [5, 4], [12, 19], [12, 13], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [10, 9], [0, 8], [2, 18], [12, 14], [0, 3], [19, 6], [1, 2], [8, 3], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.0940496921539307

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.07877516746521

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 18], [6, 10], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [17, 10], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [10, 9], [0, 8], [2, 18], [12, 14], [0, 3], [19, 6], [1, 2], [8, 3], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.07877516746521

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [130] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 260

Reduced: 
 - size: 95 (42.22%)
 - cycle: 190 (42.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374356269836426

[14, 13], [10, 4], [16, 1], [3, 17], [2, 11], [12, 14], [7, 11], [10, 5], [16, 1], [19, 13], [17, 6], [14, 13], [10, 5], [1, 15], [9, 4], [7, 11], [8, 17], [0, 3], [12, 19], [2, 18], [19, 13], [3, 2], [16, 0], [17, 10], [12, 13], [10, 4], [3, 2], [16, 0], [17, 6], [12, 13], [2, 6], [0, 3], [9, 5], [15, 7], [12, 13], [7, 11], [1, 15], [2, 6], [8, 3], [12, 14], [6, 18], [17, 19], [14, 19], [8, 3], [5, 4], [19, 6], [1, 3], [8, 17], [9, 4], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [9, 4], [17, 6], [1, 2], [9, 5], [12, 19], [3, 17], [2, 11], [12, 13], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [19, 13], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [19, 13], [18, 5], [17, 10], [15, 7], [3, 17], [9, 4], [16, 1], [2, 18], [19, 10], [3, 17], [2, 11], [12, 13], [8, 17], [6, 10], [12, 13], [15, 7], [14, 19], [2, 11], [17, 10], [16, 1], [6, 18], [7, 11], [9, 5], [10, 5], [7, 11], [14, 19], [2, 18], [3, 17], [1, 15], [10, 5], [19, 6], [16, 1], [0, 3], [2, 18], [9, 4], [10, 9], [3, 17], [6, 18], [16, 0], [7, 11], [10, 4], [3, 2], [0, 8], [7, 11], [16, 1], [19, 13], [10, 9], [14, 19], [0, 3], [18, 5], [10, 9], [3, 17], [14, 13], [2, 11], [16, 1], [18, 5], [10, 9], [16, 1], [6, 18], [0, 8], [12, 19], [19, 10], [5, 4], [0, 17], [1, 3], [11, 18], [19, 6], [1, 15], [13, 9], [16, 0], [2, 18], [19, 10], [16, 0], [1, 2], [8, 12], [3, 15], [19, 6], [14, 13], [10, 4], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [10, 5], [0, 8], [3, 2], [1, 15], [6, 18], [10, 9], [5, 4], [12, 13], [0, 8], [11, 18], [1, 15], [10, 5], [0, 8], [12, 19], [11, 18], [1, 2], [9, 4], [0, 8], [3, 15], [14, 19], [6, 18], [16, 1], [14, 13], [17, 10], [0, 8], [2, 18], [12, 14], [9, 4], [0, 8], [7, 11], [19, 6], [1, 2], [8, 3], [9, 5], [7, 11], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [5, 4], [10, 9], [0, 8], [15, 2], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [10, 4], [15, 2], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [10, 5], [0, 17], [1, 15], [19, 10], [9, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[7, 12]
[6, 15]
[21, 26]
[22, 27]
[24, 29]
[29, 34]
[30, 37]
[38, 43]
[48, 54]
[34, 61]
[67, 76]
[73, 81]
[80, 85]
[87, 90]
[79, 91]
[86, 93]
[82, 95]
[97, 100]
[92, 101]
[99, 105]
[102, 109]
[81, 110]
[100, 115]
[115, 119]
[107, 120]
[111, 122]
[122, 126]
[120, 130]
[125, 131]
[126, 132]
[130, 133]
[118, 135]
[137, 147]
[145, 148]
[142, 152]
[163, 170]
[165, 172]
[170, 174]
[171, 176]
[174, 179]
[179, 186]
[178, 189]
[186, 190]
[191, 196]
[214, 216]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[95, 104, 107]
[162, 168, 173]
[190, 194, 205]
[206, 209, 214]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[15, 33, 35]
[103, 108, 112]
[201, 206, 209]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[203, 213, 220]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[7, 12]
[6, 15]
[21, 26]
[22, 27]
[24, 29]
[29, 34]
[30, 37]
[38, 43]
[48, 54]
[34, 61]
[67, 76]
[73, 81]
[80, 85]
[87, 90]
[79, 91]
[86, 93]
[82, 95]
[97, 100]
[92, 101]
[99, 105]
[102, 109]
[81, 110]
[100, 115]
[115, 119]
[107, 120]
[111, 122]
[122, 126]
[120, 130]
[125, 131]
[126, 132]
[130, 133]
[118, 135]
[137, 147]
[145, 148]
[142, 152]
[163, 170]
[165, 172]
[170, 174]
[171, 176]
[174, 179]
[179, 186]
[178, 189]
[186, 190]
[191, 196]
[214, 216]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.221892833709717

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [6, 15] cc => I, Pos: [6, 15] cc => I, Pos: [7, 12] cc => I, Pos: [7, 12] cc => I, Pos: [15, 33, 35] ccc => cc, Pos: [21, 26] cc => I, Pos: [21, 26] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [29, 34] cc => I, Pos: [29, 34] cc => I, Pos: [30, 37] cc => I, Pos: [30, 37] cc => I, Pos: [34, 61] cc => I, Pos: [34, 61] cc => I, Pos: [38, 43] cc => I, Pos: [38, 43] cc => I, Pos: [48, 54] cc => I, Pos: [48, 54] cc => I, Pos: [67, 76] cc => I, Pos: [67, 76] cc => I, Pos: [73, 81] cc => I, Pos: [73, 81] cc => I, Pos: [79, 91] cc => I, Pos: [79, 91] cc => I, Pos: [80, 85] cc => I, Pos: [80, 85] cc => I, Pos: [81, 110] cc => I, Pos: [81, 110] cc => I, Pos: [82, 95] cc => I, Pos: [82, 95] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [87, 90] cc => I, Pos: [87, 90] cc => I, Pos: [92, 101] cc => I, Pos: [92, 101] cc => I, Pos: [95, 104, 107] ccc => cc, Pos: [97, 100] cc => I, Pos: [97, 100] cc => I, Pos: [99, 105] cc => I, Pos: [99, 105] cc => I, Pos: [100, 115] cc => I, Pos: [100, 115] cc => I, Pos: [102, 109] cc => I, Pos: [102, 109] cc => I, Pos: [103, 108, 112] ccc => cc, Pos: [107, 120] cc => I, Pos: [107, 120] cc => I, Pos: [111, 122] cc => I, Pos: [111, 122] cc => I, Pos: [115, 119] cc => I, Pos: [115, 119] cc => I, Pos: [118, 135] cc => I, Pos: [118, 135] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [122, 126] cc => I, Pos: [122, 126] cc => I, Pos: [125, 131] cc => I, Pos: [125, 131] cc => I, Pos: [126, 132] cc => I, Pos: [126, 132] cc => I, Pos: [130, 133] cc => I, Pos: [130, 133] cc => I, Pos: [137, 147] cc => I, Pos: [137, 147] cc => I, Pos: [142, 152] cc => I, Pos: [142, 152] cc => I, Pos: [145, 148] cc => I, Pos: [145, 148] cc => I, Pos: [162, 168, 173] ccc => cc, Pos: [163, 170] cc => I, Pos: [163, 170] cc => I, Pos: [165, 172] cc => I, Pos: [165, 172] cc => I, Pos: [170, 174] cc => I, Pos: [170, 174] cc => I, Pos: [171, 176] cc => I, Pos: [171, 176] cc => I, Pos: [174, 179] cc => I, Pos: [174, 179] cc => I, Pos: [178, 189] cc => I, Pos: [178, 189] cc => I, Pos: [179, 186] cc => I, Pos: [179, 186] cc => I, Pos: [186, 190] cc => I, Pos: [186, 190] cc => I, Pos: [190, 194, 205] ccc => cc, Pos: [191, 196] cc => I, Pos: [191, 196] cc => I, Pos: [201, 206, 209] ccc => cc, Pos: [203, 213, 220] ccc => cc, Pos: [206, 209, 214] ccc => cc, Pos: [214, 216] cc => I, Pos: [214, 216] cc => I]

--------End Timer [Generate Plans]:  0.09375643730163574

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 8] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [7, 12] cc => I,
 Pos: [21, 26] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [29, 34] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [38, 43] cc => I,
 Pos: [48, 54] cc => I,
 Pos: [67, 76] cc => I,
 Pos: [73, 81] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [82, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [87, 90] cc => I,
 Pos: [92, 101] cc => I,
 Pos: [97, 100] cc => I,
 Pos: [99, 105] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [103, 108, 112] ccc => cc,
 Pos: [107, 120] cc => I,
 Pos: [111, 122] cc => I,
 Pos: [115, 119] cc => I,
 Pos: [118, 135] cc => I,
 Pos: [125, 131] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [130, 133] cc => I,
 Pos: [137, 147] cc => I,
 Pos: [142, 152] cc => I,
 Pos: [145, 148] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [170, 174] cc => I,
 Pos: [165, 172] cc => I,
 Pos: [171, 176] cc => I,
 Pos: [178, 189] cc => I,
 Pos: [186, 190] cc => I,
 Pos: [191, 196] cc => I,
 Pos: [206, 209, 214] ccc => cc,
 Pos: [203, 213, 220] ccc => cc]
Change: 40, Saving: 40

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [6, 15] cc => I
Apply:  Pos: [7, 12] cc => I
Apply:  Pos: [21, 26] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [29, 34] cc => I
Apply:  Pos: [30, 37] cc => I
Apply:  Pos: [38, 43] cc => I
Apply:  Pos: [48, 54] cc => I
Apply:  Pos: [67, 76] cc => I
Apply:  Pos: [73, 81] cc => I
Apply:  Pos: [79, 91] cc => I
Apply:  Pos: [80, 85] cc => I
Apply:  Pos: [82, 95] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [87, 90] cc => I
Apply:  Pos: [92, 101] cc => I
Apply:  Pos: [97, 100] cc => I
Apply:  Pos: [99, 105] cc => I
Apply:  Pos: [102, 109] cc => I
Apply:  Pos: [103, 108, 112] ccc => cc
Apply:  Pos: [107, 120] cc => I
Apply:  Pos: [111, 122] cc => I
Apply:  Pos: [115, 119] cc => I
Apply:  Pos: [118, 135] cc => I
Apply:  Pos: [125, 131] cc => I
Apply:  Pos: [126, 132] cc => I
Apply:  Pos: [130, 133] cc => I
Apply:  Pos: [137, 147] cc => I
Apply:  Pos: [142, 152] cc => I
Apply:  Pos: [145, 148] cc => I
Apply:  Pos: [162, 168, 173] ccc => cc
Apply:  Pos: [170, 174] cc => I
Apply:  Pos: [165, 172] cc => I
Apply:  Pos: [171, 176] cc => I
Apply:  Pos: [178, 189] cc => I
Apply:  Pos: [186, 190] cc => I
Apply:  Pos: [191, 196] cc => I
Apply:  Pos: [206, 209, 214] ccc => cc
Apply:  Pos: [203, 213, 220] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [0, 3], [12, 19], [2, 18], [19, 13], [17, 10], [12, 13], [10, 4], [17, 6], [0, 3], [9, 5], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [9, 5], [12, 19], [3, 17], [2, 11], [12, 13], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [6, 18], [9, 5], [0, 3], [1, 15], [19, 6], [3, 17], [9, 4], [6, 18], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 13], [2, 11], [6, 18], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [1, 15], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [14, 13], [10, 4], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [10, 4], [0, 8], [3, 2], [6, 18], [10, 9], [5, 4], [12, 13], [12, 19], [1, 2], [0, 8], [3, 15], [14, 19], [6, 18], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [9, 5], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [10, 5], [10, 9], [0, 8], [15, 11], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  4.3156492710113525

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 19]
[16, 43]
[70, 80]
[66, 86]
[93, 100]
[102, 110]
[104, 113]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[20, 28, 39]
[78, 87, 92]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 19]
[16, 43]
[70, 80]
[66, 86]
[93, 100]
[102, 110]
[104, 113]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.550772190093994

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 19] cc => I, Pos: [11, 19] cc => I, Pos: [16, 43] cc => I, Pos: [16, 43] cc => I, Pos: [20, 28, 39] ccc => cc, Pos: [66, 86] cc => I, Pos: [66, 86] cc => I, Pos: [70, 80] cc => I, Pos: [70, 80] cc => I, Pos: [78, 87, 92] ccc => cc, Pos: [93, 100] cc => I, Pos: [93, 100] cc => I, Pos: [102, 110] cc => I, Pos: [102, 110] cc => I, Pos: [104, 113] cc => I, Pos: [104, 113] cc => I]

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 19] cc => I,
 Pos: [16, 43] cc => I,
 Pos: [20, 28, 39] ccc => cc,
 Pos: [66, 86] cc => I,
 Pos: [70, 80] cc => I,
 Pos: [78, 87, 92] ccc => cc,
 Pos: [93, 100] cc => I,
 Pos: [102, 110] cc => I,
 Pos: [104, 113] cc => I]
Change: 9, Saving: 9

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 19] cc => I
Apply:  Pos: [16, 43] cc => I
Apply:  Pos: [20, 28, 39] ccc => cc
Apply:  Pos: [66, 86] cc => I
Apply:  Pos: [70, 80] cc => I
Apply:  Pos: [78, 87, 92] ccc => cc
Apply:  Pos: [93, 100] cc => I
Apply:  Pos: [102, 110] cc => I
Apply:  Pos: [104, 113] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [14, 19], [17, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 18], [6, 10], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [10, 9], [5, 4], [12, 19], [12, 13], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [9, 5], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [10, 9], [10, 5], [0, 8], [15, 11], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.5663962364196777

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[106, 113, 114]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.236387014389038

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [106, 113, 114] ccc => cc]

--------End Timer [Generate Plans]:  0.015625476837158203

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [106, 113, 114] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [106, 113, 114] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 10], [6, 18], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [10, 9], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [10, 9], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [9, 5], [0, 8], [15, 11], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.2520124912261963

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[91, 100, 106]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.1564412117004395

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [91, 100, 106] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [91, 100, 106] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [91, 100, 106] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [14, 19], [17, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [6, 18], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [17, 10], [5, 4], [12, 19], [12, 13], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [10, 9], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [9, 5], [0, 8], [15, 11], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.1564412117004395

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.1565487384796143

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 18], [6, 10], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [17, 10], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [10, 9], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [9, 5], [0, 8], [15, 11], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.1565487384796143

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [131] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 262

Reduced: 
 - size: 94 (41.78%)
 - depth: 13 (28.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09375667572021484

[14, 13], [10, 4], [16, 1], [3, 17], [2, 11], [12, 14], [7, 11], [10, 5], [16, 1], [19, 13], [17, 6], [14, 13], [10, 5], [1, 15], [9, 4], [7, 11], [8, 17], [0, 3], [12, 19], [2, 18], [19, 13], [3, 2], [16, 0], [17, 10], [12, 13], [10, 4], [3, 2], [16, 0], [17, 6], [12, 13], [2, 6], [0, 3], [9, 5], [15, 7], [12, 13], [7, 11], [1, 15], [2, 6], [8, 3], [12, 14], [6, 18], [17, 19], [14, 19], [8, 3], [5, 4], [19, 6], [1, 3], [8, 17], [9, 4], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [9, 4], [17, 6], [1, 2], [9, 5], [12, 19], [3, 17], [2, 11], [12, 13], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [19, 13], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [19, 13], [18, 5], [17, 10], [15, 7], [3, 17], [9, 4], [16, 1], [2, 18], [19, 10], [3, 17], [2, 11], [12, 13], [8, 17], [6, 10], [12, 13], [15, 7], [14, 19], [2, 11], [17, 10], [16, 1], [6, 18], [7, 11], [9, 5], [10, 5], [7, 11], [14, 19], [2, 18], [3, 17], [1, 15], [10, 5], [19, 6], [16, 1], [0, 3], [2, 18], [9, 4], [10, 9], [3, 17], [6, 18], [16, 0], [7, 11], [10, 4], [3, 2], [0, 8], [7, 11], [16, 1], [19, 13], [10, 9], [14, 19], [0, 3], [18, 5], [10, 9], [3, 17], [14, 13], [2, 11], [16, 1], [18, 5], [10, 9], [16, 1], [6, 18], [0, 8], [12, 19], [19, 10], [5, 4], [0, 17], [1, 3], [11, 18], [19, 6], [1, 15], [13, 9], [16, 0], [2, 18], [19, 10], [16, 0], [1, 2], [8, 12], [3, 15], [19, 6], [14, 13], [10, 4], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [10, 5], [0, 8], [3, 2], [1, 15], [6, 18], [10, 9], [5, 4], [12, 13], [0, 8], [11, 18], [1, 15], [10, 5], [0, 8], [12, 19], [11, 18], [1, 2], [9, 4], [0, 8], [3, 15], [14, 19], [6, 18], [16, 1], [14, 13], [17, 10], [0, 8], [2, 18], [12, 14], [9, 4], [0, 8], [7, 11], [19, 6], [1, 2], [8, 3], [9, 5], [7, 11], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [5, 4], [10, 9], [0, 8], [15, 2], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [10, 4], [15, 2], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [10, 5], [0, 17], [1, 15], [19, 10], [9, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[7, 12]
[6, 15]
[21, 26]
[22, 27]
[24, 29]
[29, 34]
[30, 37]
[38, 43]
[48, 54]
[34, 61]
[67, 76]
[73, 81]
[80, 85]
[87, 90]
[79, 91]
[86, 93]
[82, 95]
[97, 100]
[92, 101]
[99, 105]
[102, 109]
[81, 110]
[100, 115]
[115, 119]
[107, 120]
[111, 122]
[122, 126]
[120, 130]
[125, 131]
[126, 132]
[130, 133]
[118, 135]
[137, 147]
[145, 148]
[142, 152]
[163, 170]
[165, 172]
[170, 174]
[171, 176]
[174, 179]
[179, 186]
[178, 189]
[186, 190]
[191, 196]
[214, 216]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[95, 104, 107]
[162, 168, 173]
[190, 194, 205]
[206, 209, 214]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[15, 33, 35]
[103, 108, 112]
[201, 206, 209]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[203, 213, 220]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[7, 12]
[6, 15]
[21, 26]
[22, 27]
[24, 29]
[29, 34]
[30, 37]
[38, 43]
[48, 54]
[34, 61]
[67, 76]
[73, 81]
[80, 85]
[87, 90]
[79, 91]
[86, 93]
[82, 95]
[97, 100]
[92, 101]
[99, 105]
[102, 109]
[81, 110]
[100, 115]
[115, 119]
[107, 120]
[111, 122]
[122, 126]
[120, 130]
[125, 131]
[126, 132]
[130, 133]
[118, 135]
[137, 147]
[145, 148]
[142, 152]
[163, 170]
[165, 172]
[170, 174]
[171, 176]
[174, 179]
[179, 186]
[178, 189]
[186, 190]
[191, 196]
[214, 216]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.218686103820801

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [6, 15] cc => I, Pos: [6, 15] cc => I, Pos: [7, 12] cc => I, Pos: [7, 12] cc => I, Pos: [15, 33, 35] ccc => cc, Pos: [21, 26] cc => I, Pos: [21, 26] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [29, 34] cc => I, Pos: [29, 34] cc => I, Pos: [30, 37] cc => I, Pos: [30, 37] cc => I, Pos: [34, 61] cc => I, Pos: [34, 61] cc => I, Pos: [38, 43] cc => I, Pos: [38, 43] cc => I, Pos: [48, 54] cc => I, Pos: [48, 54] cc => I, Pos: [67, 76] cc => I, Pos: [67, 76] cc => I, Pos: [73, 81] cc => I, Pos: [73, 81] cc => I, Pos: [79, 91] cc => I, Pos: [79, 91] cc => I, Pos: [80, 85] cc => I, Pos: [80, 85] cc => I, Pos: [81, 110] cc => I, Pos: [81, 110] cc => I, Pos: [82, 95] cc => I, Pos: [82, 95] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [87, 90] cc => I, Pos: [87, 90] cc => I, Pos: [92, 101] cc => I, Pos: [92, 101] cc => I, Pos: [95, 104, 107] ccc => cc, Pos: [97, 100] cc => I, Pos: [97, 100] cc => I, Pos: [99, 105] cc => I, Pos: [99, 105] cc => I, Pos: [100, 115] cc => I, Pos: [100, 115] cc => I, Pos: [102, 109] cc => I, Pos: [102, 109] cc => I, Pos: [103, 108, 112] ccc => cc, Pos: [107, 120] cc => I, Pos: [107, 120] cc => I, Pos: [111, 122] cc => I, Pos: [111, 122] cc => I, Pos: [115, 119] cc => I, Pos: [115, 119] cc => I, Pos: [118, 135] cc => I, Pos: [118, 135] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [122, 126] cc => I, Pos: [122, 126] cc => I, Pos: [125, 131] cc => I, Pos: [125, 131] cc => I, Pos: [126, 132] cc => I, Pos: [126, 132] cc => I, Pos: [130, 133] cc => I, Pos: [130, 133] cc => I, Pos: [137, 147] cc => I, Pos: [137, 147] cc => I, Pos: [142, 152] cc => I, Pos: [142, 152] cc => I, Pos: [145, 148] cc => I, Pos: [145, 148] cc => I, Pos: [162, 168, 173] ccc => cc, Pos: [163, 170] cc => I, Pos: [163, 170] cc => I, Pos: [165, 172] cc => I, Pos: [165, 172] cc => I, Pos: [170, 174] cc => I, Pos: [170, 174] cc => I, Pos: [171, 176] cc => I, Pos: [171, 176] cc => I, Pos: [174, 179] cc => I, Pos: [174, 179] cc => I, Pos: [178, 189] cc => I, Pos: [178, 189] cc => I, Pos: [179, 186] cc => I, Pos: [179, 186] cc => I, Pos: [186, 190] cc => I, Pos: [186, 190] cc => I, Pos: [190, 194, 205] ccc => cc, Pos: [191, 196] cc => I, Pos: [191, 196] cc => I, Pos: [201, 206, 209] ccc => cc, Pos: [203, 213, 220] ccc => cc, Pos: [206, 209, 214] ccc => cc, Pos: [214, 216] cc => I, Pos: [214, 216] cc => I]

--------End Timer [Generate Plans]:  0.09374499320983887

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 8] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [7, 12] cc => I,
 Pos: [21, 26] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [29, 34] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [38, 43] cc => I,
 Pos: [48, 54] cc => I,
 Pos: [67, 76] cc => I,
 Pos: [81, 110] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [82, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [87, 90] cc => I,
 Pos: [92, 101] cc => I,
 Pos: [100, 115] cc => I,
 Pos: [99, 105] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [103, 108, 112] ccc => cc,
 Pos: [120, 130] cc => I,
 Pos: [122, 126] cc => I,
 Pos: [118, 135] cc => I,
 Pos: [125, 131] cc => I,
 Pos: [137, 147] cc => I,
 Pos: [142, 152] cc => I,
 Pos: [145, 148] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [170, 174] cc => I,
 Pos: [165, 172] cc => I,
 Pos: [171, 176] cc => I,
 Pos: [178, 189] cc => I,
 Pos: [186, 190] cc => I,
 Pos: [191, 196] cc => I,
 Pos: [206, 209, 214] ccc => cc,
 Pos: [203, 213, 220] ccc => cc]
Change: 37, Saving: 37

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [6, 15] cc => I
Apply:  Pos: [7, 12] cc => I
Apply:  Pos: [21, 26] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [29, 34] cc => I
Apply:  Pos: [30, 37] cc => I
Apply:  Pos: [38, 43] cc => I
Apply:  Pos: [48, 54] cc => I
Apply:  Pos: [67, 76] cc => I
Apply:  Pos: [81, 110] cc => I
Apply:  Pos: [79, 91] cc => I
Apply:  Pos: [80, 85] cc => I
Apply:  Pos: [82, 95] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [87, 90] cc => I
Apply:  Pos: [92, 101] cc => I
Apply:  Pos: [100, 115] cc => I
Apply:  Pos: [99, 105] cc => I
Apply:  Pos: [102, 109] cc => I
Apply:  Pos: [103, 108, 112] ccc => cc
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [122, 126] cc => I
Apply:  Pos: [118, 135] cc => I
Apply:  Pos: [125, 131] cc => I
Apply:  Pos: [137, 147] cc => I
Apply:  Pos: [142, 152] cc => I
Apply:  Pos: [145, 148] cc => I
Apply:  Pos: [162, 168, 173] ccc => cc
Apply:  Pos: [170, 174] cc => I
Apply:  Pos: [165, 172] cc => I
Apply:  Pos: [171, 176] cc => I
Apply:  Pos: [178, 189] cc => I
Apply:  Pos: [186, 190] cc => I
Apply:  Pos: [191, 196] cc => I
Apply:  Pos: [206, 209, 214] ccc => cc
Apply:  Pos: [203, 213, 220] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [0, 3], [12, 19], [2, 18], [19, 13], [17, 10], [12, 13], [10, 4], [17, 6], [0, 3], [9, 5], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [9, 5], [12, 19], [3, 17], [2, 11], [12, 13], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [6, 18], [7, 11], [9, 5], [0, 3], [1, 15], [19, 6], [16, 1], [3, 17], [10, 9], [6, 18], [16, 0], [10, 4], [3, 2], [7, 11], [19, 13], [14, 19], [0, 3], [3, 17], [14, 13], [2, 11], [10, 9], [16, 1], [6, 18], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [1, 15], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [14, 13], [10, 4], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [10, 4], [0, 8], [3, 2], [6, 18], [10, 9], [5, 4], [12, 13], [12, 19], [1, 2], [0, 8], [3, 15], [14, 19], [6, 18], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [9, 5], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [10, 5], [10, 9], [0, 8], [15, 11], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  4.31243109703064

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 19]
[16, 43]
[48, 65]
[65, 77]
[72, 84]
[70, 85]
[73, 86]
[99, 106]
[108, 116]
[110, 119]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[20, 28, 39]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 19]
[16, 43]
[48, 65]
[65, 77]
[72, 84]
[70, 85]
[73, 86]
[99, 106]
[108, 116]
[110, 119]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6405906677246094

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 19] cc => I, Pos: [11, 19] cc => I, Pos: [16, 43] cc => I, Pos: [16, 43] cc => I, Pos: [20, 28, 39] ccc => cc, Pos: [48, 65] cc => I, Pos: [48, 65] cc => I, Pos: [65, 77] cc => I, Pos: [65, 77] cc => I, Pos: [70, 85] cc => I, Pos: [70, 85] cc => I, Pos: [72, 84] cc => I, Pos: [72, 84] cc => I, Pos: [73, 86] cc => I, Pos: [73, 86] cc => I, Pos: [99, 106] cc => I, Pos: [99, 106] cc => I, Pos: [108, 116] cc => I, Pos: [108, 116] cc => I, Pos: [110, 119] cc => I, Pos: [110, 119] cc => I]

--------End Timer [Generate Plans]:  0.031261444091796875

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 19] cc => I,
 Pos: [16, 43] cc => I,
 Pos: [20, 28, 39] ccc => cc,
 Pos: [48, 65] cc => I,
 Pos: [70, 85] cc => I,
 Pos: [72, 84] cc => I,
 Pos: [73, 86] cc => I,
 Pos: [99, 106] cc => I,
 Pos: [108, 116] cc => I,
 Pos: [110, 119] cc => I]
Change: 10, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 19] cc => I
Apply:  Pos: [16, 43] cc => I
Apply:  Pos: [20, 28, 39] ccc => cc
Apply:  Pos: [48, 65] cc => I
Apply:  Pos: [70, 85] cc => I
Apply:  Pos: [72, 84] cc => I
Apply:  Pos: [73, 86] cc => I
Apply:  Pos: [99, 106] cc => I
Apply:  Pos: [108, 116] cc => I
Apply:  Pos: [110, 119] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [14, 19], [17, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 18], [6, 10], [9, 5], [0, 3], [1, 15], [19, 6], [3, 17], [16, 0], [10, 4], [3, 2], [7, 11], [19, 13], [14, 19], [0, 3], [3, 17], [14, 13], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [1, 15], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [14, 13], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [10, 9], [5, 4], [12, 19], [12, 13], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [9, 5], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [10, 9], [10, 5], [0, 8], [15, 11], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.6718521118164062

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[61, 79]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[72, 80, 85]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[109, 116, 117]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[61, 79]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.281278133392334

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [61, 79] cc => I, Pos: [61, 79] cc => I, Pos: [72, 80, 85] ccc => cc, Pos: [109, 116, 117] ccc => cc]

--------End Timer [Generate Plans]:  0.015622854232788086

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [61, 79] cc => I,
 Pos: [72, 80, 85] ccc => cc,
 Pos: [109, 116, 117] ccc => cc]
Change: 3, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [61, 79] cc => I
Apply:  Pos: [72, 80, 85] ccc => cc
Apply:  Pos: [109, 116, 117] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 10], [6, 18], [9, 5], [0, 3], [19, 6], [3, 17], [16, 0], [10, 4], [3, 2], [7, 11], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [10, 9], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [10, 9], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [9, 5], [0, 8], [15, 11], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.296900987625122

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[91, 100, 106]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.203206777572632

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [91, 100, 106] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [91, 100, 106] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [91, 100, 106] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [14, 19], [17, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [6, 18], [9, 5], [0, 3], [19, 6], [3, 17], [16, 0], [10, 4], [3, 2], [7, 11], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [17, 10], [5, 4], [12, 19], [12, 13], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [10, 9], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [9, 5], [0, 8], [15, 11], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.203206777572632

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.1250112056732178

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 18], [6, 10], [9, 5], [0, 3], [19, 6], [3, 17], [16, 0], [10, 4], [3, 2], [7, 11], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [17, 10], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [10, 9], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [9, 5], [0, 8], [15, 11], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.1250112056732178

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [131] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 262

Reduced: 
 - size: 94 (41.78%)
 - depth: 13 (28.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09363508224487305

[14, 13], [10, 4], [16, 1], [3, 17], [2, 11], [12, 14], [7, 11], [10, 5], [16, 1], [19, 13], [17, 6], [14, 13], [10, 5], [1, 15], [9, 4], [7, 11], [8, 17], [0, 3], [12, 19], [2, 18], [19, 13], [3, 2], [16, 0], [17, 10], [12, 13], [10, 4], [3, 2], [16, 0], [17, 6], [12, 13], [2, 6], [0, 3], [9, 5], [15, 7], [12, 13], [7, 11], [1, 15], [2, 6], [8, 3], [12, 14], [6, 18], [17, 19], [14, 19], [8, 3], [5, 4], [19, 6], [1, 3], [8, 17], [9, 4], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [9, 4], [17, 6], [1, 2], [9, 5], [12, 19], [3, 17], [2, 11], [12, 13], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [19, 13], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [19, 13], [18, 5], [17, 10], [15, 7], [3, 17], [9, 4], [16, 1], [2, 18], [19, 10], [3, 17], [2, 11], [12, 13], [8, 17], [6, 10], [12, 13], [15, 7], [14, 19], [2, 11], [17, 10], [16, 1], [6, 18], [7, 11], [9, 5], [10, 5], [7, 11], [14, 19], [2, 18], [3, 17], [1, 15], [10, 5], [19, 6], [16, 1], [0, 3], [2, 18], [9, 4], [10, 9], [3, 17], [6, 18], [16, 0], [7, 11], [10, 4], [3, 2], [0, 8], [7, 11], [16, 1], [19, 13], [10, 9], [14, 19], [0, 3], [18, 5], [10, 9], [3, 17], [14, 13], [2, 11], [16, 1], [18, 5], [10, 9], [16, 1], [6, 18], [0, 8], [12, 19], [19, 10], [5, 4], [0, 17], [1, 3], [11, 18], [19, 6], [1, 15], [13, 9], [16, 0], [2, 18], [19, 10], [16, 0], [1, 2], [8, 12], [3, 15], [19, 6], [14, 13], [10, 4], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [10, 5], [0, 8], [3, 2], [1, 15], [6, 18], [10, 9], [5, 4], [12, 13], [0, 8], [11, 18], [1, 15], [10, 5], [0, 8], [12, 19], [11, 18], [1, 2], [9, 4], [0, 8], [3, 15], [14, 19], [6, 18], [16, 1], [14, 13], [17, 10], [0, 8], [2, 18], [12, 14], [9, 4], [0, 8], [7, 11], [19, 6], [1, 2], [8, 3], [9, 5], [7, 11], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [5, 4], [10, 9], [0, 8], [15, 2], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [10, 4], [15, 2], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [10, 5], [0, 17], [1, 15], [19, 10], [9, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[7, 12]
[6, 15]
[21, 26]
[22, 27]
[24, 29]
[29, 34]
[30, 37]
[38, 43]
[48, 54]
[34, 61]
[67, 76]
[73, 81]
[80, 85]
[87, 90]
[79, 91]
[86, 93]
[82, 95]
[97, 100]
[92, 101]
[99, 105]
[102, 109]
[81, 110]
[100, 115]
[115, 119]
[107, 120]
[111, 122]
[122, 126]
[120, 130]
[125, 131]
[126, 132]
[130, 133]
[118, 135]
[137, 147]
[145, 148]
[142, 152]
[163, 170]
[165, 172]
[170, 174]
[171, 176]
[174, 179]
[179, 186]
[178, 189]
[186, 190]
[191, 196]
[214, 216]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[95, 104, 107]
[162, 168, 173]
[190, 194, 205]
[206, 209, 214]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[15, 33, 35]
[103, 108, 112]
[201, 206, 209]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[203, 213, 220]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[7, 12]
[6, 15]
[21, 26]
[22, 27]
[24, 29]
[29, 34]
[30, 37]
[38, 43]
[48, 54]
[34, 61]
[67, 76]
[73, 81]
[80, 85]
[87, 90]
[79, 91]
[86, 93]
[82, 95]
[97, 100]
[92, 101]
[99, 105]
[102, 109]
[81, 110]
[100, 115]
[115, 119]
[107, 120]
[111, 122]
[122, 126]
[120, 130]
[125, 131]
[126, 132]
[130, 133]
[118, 135]
[137, 147]
[145, 148]
[142, 152]
[163, 170]
[165, 172]
[170, 174]
[171, 176]
[174, 179]
[179, 186]
[178, 189]
[186, 190]
[191, 196]
[214, 216]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.32832145690918

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [6, 15] cc => I, Pos: [6, 15] cc => I, Pos: [7, 12] cc => I, Pos: [7, 12] cc => I, Pos: [15, 33, 35] ccc => cc, Pos: [21, 26] cc => I, Pos: [21, 26] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [29, 34] cc => I, Pos: [29, 34] cc => I, Pos: [30, 37] cc => I, Pos: [30, 37] cc => I, Pos: [34, 61] cc => I, Pos: [34, 61] cc => I, Pos: [38, 43] cc => I, Pos: [38, 43] cc => I, Pos: [48, 54] cc => I, Pos: [48, 54] cc => I, Pos: [67, 76] cc => I, Pos: [67, 76] cc => I, Pos: [73, 81] cc => I, Pos: [73, 81] cc => I, Pos: [79, 91] cc => I, Pos: [79, 91] cc => I, Pos: [80, 85] cc => I, Pos: [80, 85] cc => I, Pos: [81, 110] cc => I, Pos: [81, 110] cc => I, Pos: [82, 95] cc => I, Pos: [82, 95] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [87, 90] cc => I, Pos: [87, 90] cc => I, Pos: [92, 101] cc => I, Pos: [92, 101] cc => I, Pos: [95, 104, 107] ccc => cc, Pos: [97, 100] cc => I, Pos: [97, 100] cc => I, Pos: [99, 105] cc => I, Pos: [99, 105] cc => I, Pos: [100, 115] cc => I, Pos: [100, 115] cc => I, Pos: [102, 109] cc => I, Pos: [102, 109] cc => I, Pos: [103, 108, 112] ccc => cc, Pos: [107, 120] cc => I, Pos: [107, 120] cc => I, Pos: [111, 122] cc => I, Pos: [111, 122] cc => I, Pos: [115, 119] cc => I, Pos: [115, 119] cc => I, Pos: [118, 135] cc => I, Pos: [118, 135] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [122, 126] cc => I, Pos: [122, 126] cc => I, Pos: [125, 131] cc => I, Pos: [125, 131] cc => I, Pos: [126, 132] cc => I, Pos: [126, 132] cc => I, Pos: [130, 133] cc => I, Pos: [130, 133] cc => I, Pos: [137, 147] cc => I, Pos: [137, 147] cc => I, Pos: [142, 152] cc => I, Pos: [142, 152] cc => I, Pos: [145, 148] cc => I, Pos: [145, 148] cc => I, Pos: [162, 168, 173] ccc => cc, Pos: [163, 170] cc => I, Pos: [163, 170] cc => I, Pos: [165, 172] cc => I, Pos: [165, 172] cc => I, Pos: [170, 174] cc => I, Pos: [170, 174] cc => I, Pos: [171, 176] cc => I, Pos: [171, 176] cc => I, Pos: [174, 179] cc => I, Pos: [174, 179] cc => I, Pos: [178, 189] cc => I, Pos: [178, 189] cc => I, Pos: [179, 186] cc => I, Pos: [179, 186] cc => I, Pos: [186, 190] cc => I, Pos: [186, 190] cc => I, Pos: [190, 194, 205] ccc => cc, Pos: [191, 196] cc => I, Pos: [191, 196] cc => I, Pos: [201, 206, 209] ccc => cc, Pos: [203, 213, 220] ccc => cc, Pos: [206, 209, 214] ccc => cc, Pos: [214, 216] cc => I, Pos: [214, 216] cc => I]

--------End Timer [Generate Plans]:  0.11113190650939941

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 8] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [7, 12] cc => I,
 Pos: [21, 26] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [29, 34] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [38, 43] cc => I,
 Pos: [48, 54] cc => I,
 Pos: [67, 76] cc => I,
 Pos: [73, 81] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [82, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [87, 90] cc => I,
 Pos: [92, 101] cc => I,
 Pos: [97, 100] cc => I,
 Pos: [99, 105] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [103, 108, 112] ccc => cc,
 Pos: [107, 120] cc => I,
 Pos: [111, 122] cc => I,
 Pos: [115, 119] cc => I,
 Pos: [118, 135] cc => I,
 Pos: [125, 131] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [130, 133] cc => I,
 Pos: [137, 147] cc => I,
 Pos: [142, 152] cc => I,
 Pos: [145, 148] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 170] cc => I,
 Pos: [165, 172] cc => I,
 Pos: [171, 176] cc => I,
 Pos: [179, 186] cc => I,
 Pos: [178, 189] cc => I,
 Pos: [190, 194, 205] ccc => cc,
 Pos: [191, 196] cc => I,
 Pos: [201, 206, 209] ccc => cc,
 Pos: [203, 213, 220] ccc => cc,
 Pos: [214, 216] cc => I]
Change: 42, Saving: 43

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [6, 15] cc => I
Apply:  Pos: [7, 12] cc => I
Apply:  Pos: [21, 26] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [29, 34] cc => I
Apply:  Pos: [30, 37] cc => I
Apply:  Pos: [38, 43] cc => I
Apply:  Pos: [48, 54] cc => I
Apply:  Pos: [67, 76] cc => I
Apply:  Pos: [73, 81] cc => I
Apply:  Pos: [79, 91] cc => I
Apply:  Pos: [80, 85] cc => I
Apply:  Pos: [82, 95] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [87, 90] cc => I
Apply:  Pos: [92, 101] cc => I
Apply:  Pos: [97, 100] cc => I
Apply:  Pos: [99, 105] cc => I
Apply:  Pos: [102, 109] cc => I
Apply:  Pos: [103, 108, 112] ccc => cc
Apply:  Pos: [107, 120] cc => I
Apply:  Pos: [111, 122] cc => I
Apply:  Pos: [115, 119] cc => I
Apply:  Pos: [118, 135] cc => I
Apply:  Pos: [125, 131] cc => I
Apply:  Pos: [126, 132] cc => I
Apply:  Pos: [130, 133] cc => I
Apply:  Pos: [137, 147] cc => I
Apply:  Pos: [142, 152] cc => I
Apply:  Pos: [145, 148] cc => I
Apply:  Pos: [162, 168, 173] ccc => cc
Apply:  Pos: [163, 170] cc => I
Apply:  Pos: [165, 172] cc => I
Apply:  Pos: [171, 176] cc => I
Apply:  Pos: [179, 186] cc => I
Apply:  Pos: [178, 189] cc => I
Apply:  Pos: [190, 194, 205] ccc => cc
Apply:  Pos: [191, 196] cc => I
Apply:  Pos: [201, 206, 209] ccc => cc
Apply:  Pos: [203, 213, 220] ccc => cc
Apply:  Pos: [214, 216] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [0, 3], [12, 19], [2, 18], [19, 13], [17, 10], [12, 13], [10, 4], [17, 6], [0, 3], [9, 5], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [9, 5], [12, 19], [3, 17], [2, 11], [12, 13], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [6, 18], [9, 5], [0, 3], [1, 15], [19, 6], [3, 17], [9, 4], [6, 18], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 13], [2, 11], [6, 18], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [1, 15], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [14, 13], [10, 4], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [10, 4], [3, 2], [6, 18], [10, 9], [5, 4], [12, 13], [0, 8], [12, 19], [1, 2], [3, 15], [14, 19], [6, 18], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [0, 3], [19, 6], [1, 2], [8, 3], [9, 5], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [10, 5], [10, 9], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  4.439453363418579

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 19]
[16, 43]
[70, 80]
[66, 86]
[93, 100]
[103, 112]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[20, 28, 39]
[78, 87, 92]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 19]
[16, 43]
[70, 80]
[66, 86]
[93, 100]
[103, 112]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.536667585372925

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 19] cc => I, Pos: [11, 19] cc => I, Pos: [16, 43] cc => I, Pos: [16, 43] cc => I, Pos: [20, 28, 39] ccc => cc, Pos: [66, 86] cc => I, Pos: [66, 86] cc => I, Pos: [70, 80] cc => I, Pos: [70, 80] cc => I, Pos: [78, 87, 92] ccc => cc, Pos: [93, 100] cc => I, Pos: [93, 100] cc => I, Pos: [103, 112] cc => I, Pos: [103, 112] cc => I]

--------End Timer [Generate Plans]:  0.01409912109375

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 19] cc => I,
 Pos: [16, 43] cc => I,
 Pos: [20, 28, 39] ccc => cc,
 Pos: [66, 86] cc => I,
 Pos: [70, 80] cc => I,
 Pos: [78, 87, 92] ccc => cc,
 Pos: [93, 100] cc => I,
 Pos: [103, 112] cc => I]
Change: 8, Saving: 8

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 19] cc => I
Apply:  Pos: [16, 43] cc => I
Apply:  Pos: [20, 28, 39] ccc => cc
Apply:  Pos: [66, 86] cc => I
Apply:  Pos: [70, 80] cc => I
Apply:  Pos: [78, 87, 92] ccc => cc
Apply:  Pos: [93, 100] cc => I
Apply:  Pos: [103, 112] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [14, 19], [17, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 18], [6, 10], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [10, 9], [5, 4], [12, 13], [0, 8], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [0, 3], [19, 6], [1, 2], [8, 3], [9, 5], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [10, 9], [10, 5], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.550766706466675

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[108, 115, 116]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.203547716140747

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [108, 115, 116] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [108, 115, 116] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [108, 115, 116] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 10], [6, 18], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [10, 9], [5, 4], [12, 13], [0, 8], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [0, 3], [19, 6], [1, 2], [8, 3], [10, 9], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.203547716140747

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[91, 101, 108]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.155855417251587

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [91, 101, 108] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [91, 101, 108] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [91, 101, 108] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [14, 19], [17, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [6, 18], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [17, 10], [5, 4], [12, 13], [0, 8], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [10, 9], [2, 18], [12, 14], [0, 3], [19, 6], [1, 2], [8, 3], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.155855417251587

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.1562886238098145

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 18], [6, 10], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [17, 10], [5, 4], [12, 13], [0, 8], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [10, 9], [2, 18], [12, 14], [0, 3], [19, 6], [1, 2], [8, 3], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.1562886238098145

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [130] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 260

Reduced: 
 - size: 95 (42.22%)
 - depth: 13 (28.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07811856269836426

[14, 13], [10, 4], [16, 1], [3, 17], [2, 11], [12, 14], [7, 11], [10, 5], [16, 1], [19, 13], [17, 6], [14, 13], [10, 5], [1, 15], [9, 4], [7, 11], [8, 17], [0, 3], [12, 19], [2, 18], [19, 13], [3, 2], [16, 0], [17, 10], [12, 13], [10, 4], [3, 2], [16, 0], [17, 6], [12, 13], [2, 6], [0, 3], [9, 5], [15, 7], [12, 13], [7, 11], [1, 15], [2, 6], [8, 3], [12, 14], [6, 18], [17, 19], [14, 19], [8, 3], [5, 4], [19, 6], [1, 3], [8, 17], [9, 4], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [9, 4], [17, 6], [1, 2], [9, 5], [12, 19], [3, 17], [2, 11], [12, 13], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [19, 13], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [19, 13], [18, 5], [17, 10], [15, 7], [3, 17], [9, 4], [16, 1], [2, 18], [19, 10], [3, 17], [2, 11], [12, 13], [8, 17], [6, 10], [12, 13], [15, 7], [14, 19], [2, 11], [17, 10], [16, 1], [6, 18], [7, 11], [9, 5], [10, 5], [7, 11], [14, 19], [2, 18], [3, 17], [1, 15], [10, 5], [19, 6], [16, 1], [0, 3], [2, 18], [9, 4], [10, 9], [3, 17], [6, 18], [16, 0], [7, 11], [10, 4], [3, 2], [0, 8], [7, 11], [16, 1], [19, 13], [10, 9], [14, 19], [0, 3], [18, 5], [10, 9], [3, 17], [14, 13], [2, 11], [16, 1], [18, 5], [10, 9], [16, 1], [6, 18], [0, 8], [12, 19], [19, 10], [5, 4], [0, 17], [1, 3], [11, 18], [19, 6], [1, 15], [13, 9], [16, 0], [2, 18], [19, 10], [16, 0], [1, 2], [8, 12], [3, 15], [19, 6], [14, 13], [10, 4], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [10, 5], [0, 8], [3, 2], [1, 15], [6, 18], [10, 9], [5, 4], [12, 13], [0, 8], [11, 18], [1, 15], [10, 5], [0, 8], [12, 19], [11, 18], [1, 2], [9, 4], [0, 8], [3, 15], [14, 19], [6, 18], [16, 1], [14, 13], [17, 10], [0, 8], [2, 18], [12, 14], [9, 4], [0, 8], [7, 11], [19, 6], [1, 2], [8, 3], [9, 5], [7, 11], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [5, 4], [10, 9], [0, 8], [15, 2], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [10, 4], [15, 2], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [10, 5], [0, 17], [1, 15], [19, 10], [9, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[7, 12]
[6, 15]
[21, 26]
[22, 27]
[24, 29]
[29, 34]
[30, 37]
[38, 43]
[48, 54]
[34, 61]
[67, 76]
[73, 81]
[80, 85]
[87, 90]
[79, 91]
[86, 93]
[82, 95]
[97, 100]
[92, 101]
[99, 105]
[102, 109]
[81, 110]
[100, 115]
[115, 119]
[107, 120]
[111, 122]
[122, 126]
[120, 130]
[125, 131]
[126, 132]
[130, 133]
[118, 135]
[137, 147]
[145, 148]
[142, 152]
[163, 170]
[165, 172]
[170, 174]
[171, 176]
[174, 179]
[179, 186]
[178, 189]
[186, 190]
[191, 196]
[214, 216]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[95, 104, 107]
[162, 168, 173]
[190, 194, 205]
[206, 209, 214]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[15, 33, 35]
[103, 108, 112]
[201, 206, 209]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[203, 213, 220]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[7, 12]
[6, 15]
[21, 26]
[22, 27]
[24, 29]
[29, 34]
[30, 37]
[38, 43]
[48, 54]
[34, 61]
[67, 76]
[73, 81]
[80, 85]
[87, 90]
[79, 91]
[86, 93]
[82, 95]
[97, 100]
[92, 101]
[99, 105]
[102, 109]
[81, 110]
[100, 115]
[115, 119]
[107, 120]
[111, 122]
[122, 126]
[120, 130]
[125, 131]
[126, 132]
[130, 133]
[118, 135]
[137, 147]
[145, 148]
[142, 152]
[163, 170]
[165, 172]
[170, 174]
[171, 176]
[174, 179]
[179, 186]
[178, 189]
[186, 190]
[191, 196]
[214, 216]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.249465703964233

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [6, 15] cc => I, Pos: [6, 15] cc => I, Pos: [7, 12] cc => I, Pos: [7, 12] cc => I, Pos: [15, 33, 35] ccc => cc, Pos: [21, 26] cc => I, Pos: [21, 26] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [29, 34] cc => I, Pos: [29, 34] cc => I, Pos: [30, 37] cc => I, Pos: [30, 37] cc => I, Pos: [34, 61] cc => I, Pos: [34, 61] cc => I, Pos: [38, 43] cc => I, Pos: [38, 43] cc => I, Pos: [48, 54] cc => I, Pos: [48, 54] cc => I, Pos: [67, 76] cc => I, Pos: [67, 76] cc => I, Pos: [73, 81] cc => I, Pos: [73, 81] cc => I, Pos: [79, 91] cc => I, Pos: [79, 91] cc => I, Pos: [80, 85] cc => I, Pos: [80, 85] cc => I, Pos: [81, 110] cc => I, Pos: [81, 110] cc => I, Pos: [82, 95] cc => I, Pos: [82, 95] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [87, 90] cc => I, Pos: [87, 90] cc => I, Pos: [92, 101] cc => I, Pos: [92, 101] cc => I, Pos: [95, 104, 107] ccc => cc, Pos: [97, 100] cc => I, Pos: [97, 100] cc => I, Pos: [99, 105] cc => I, Pos: [99, 105] cc => I, Pos: [100, 115] cc => I, Pos: [100, 115] cc => I, Pos: [102, 109] cc => I, Pos: [102, 109] cc => I, Pos: [103, 108, 112] ccc => cc, Pos: [107, 120] cc => I, Pos: [107, 120] cc => I, Pos: [111, 122] cc => I, Pos: [111, 122] cc => I, Pos: [115, 119] cc => I, Pos: [115, 119] cc => I, Pos: [118, 135] cc => I, Pos: [118, 135] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [122, 126] cc => I, Pos: [122, 126] cc => I, Pos: [125, 131] cc => I, Pos: [125, 131] cc => I, Pos: [126, 132] cc => I, Pos: [126, 132] cc => I, Pos: [130, 133] cc => I, Pos: [130, 133] cc => I, Pos: [137, 147] cc => I, Pos: [137, 147] cc => I, Pos: [142, 152] cc => I, Pos: [142, 152] cc => I, Pos: [145, 148] cc => I, Pos: [145, 148] cc => I, Pos: [162, 168, 173] ccc => cc, Pos: [163, 170] cc => I, Pos: [163, 170] cc => I, Pos: [165, 172] cc => I, Pos: [165, 172] cc => I, Pos: [170, 174] cc => I, Pos: [170, 174] cc => I, Pos: [171, 176] cc => I, Pos: [171, 176] cc => I, Pos: [174, 179] cc => I, Pos: [174, 179] cc => I, Pos: [178, 189] cc => I, Pos: [178, 189] cc => I, Pos: [179, 186] cc => I, Pos: [179, 186] cc => I, Pos: [186, 190] cc => I, Pos: [186, 190] cc => I, Pos: [190, 194, 205] ccc => cc, Pos: [191, 196] cc => I, Pos: [191, 196] cc => I, Pos: [201, 206, 209] ccc => cc, Pos: [203, 213, 220] ccc => cc, Pos: [206, 209, 214] ccc => cc, Pos: [214, 216] cc => I, Pos: [214, 216] cc => I]

--------End Timer [Generate Plans]:  0.10936808586120605

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 8] cc => I,
 Pos: [15, 33, 35] ccc => cc,
 Pos: [7, 12] cc => I,
 Pos: [21, 26] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [29, 34] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [38, 43] cc => I,
 Pos: [48, 54] cc => I,
 Pos: [67, 76] cc => I,
 Pos: [73, 81] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [95, 104, 107] ccc => cc,
 Pos: [86, 93] cc => I,
 Pos: [87, 90] cc => I,
 Pos: [92, 101] cc => I,
 Pos: [100, 115] cc => I,
 Pos: [99, 105] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [103, 108, 112] ccc => cc,
 Pos: [122, 126] cc => I,
 Pos: [118, 135] cc => I,
 Pos: [130, 133] cc => I,
 Pos: [125, 131] cc => I,
 Pos: [137, 147] cc => I,
 Pos: [142, 152] cc => I,
 Pos: [145, 148] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 170] cc => I,
 Pos: [165, 172] cc => I,
 Pos: [171, 176] cc => I,
 Pos: [174, 179] cc => I,
 Pos: [178, 189] cc => I,
 Pos: [186, 190] cc => I,
 Pos: [191, 196] cc => I,
 Pos: [206, 209, 214] ccc => cc,
 Pos: [203, 213, 220] ccc => cc]
Change: 38, Saving: 38

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [15, 33, 35] ccc => cc
Apply:  Pos: [7, 12] cc => I
Apply:  Pos: [21, 26] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [29, 34] cc => I
Apply:  Pos: [30, 37] cc => I
Apply:  Pos: [38, 43] cc => I
Apply:  Pos: [48, 54] cc => I
Apply:  Pos: [67, 76] cc => I
Apply:  Pos: [73, 81] cc => I
Apply:  Pos: [79, 91] cc => I
Apply:  Pos: [80, 85] cc => I
Apply:  Pos: [95, 104, 107] ccc => cc
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [87, 90] cc => I
Apply:  Pos: [92, 101] cc => I
Apply:  Pos: [100, 115] cc => I
Apply:  Pos: [99, 105] cc => I
Apply:  Pos: [102, 109] cc => I
Apply:  Pos: [103, 108, 112] ccc => cc
Apply:  Pos: [122, 126] cc => I
Apply:  Pos: [118, 135] cc => I
Apply:  Pos: [130, 133] cc => I
Apply:  Pos: [125, 131] cc => I
Apply:  Pos: [137, 147] cc => I
Apply:  Pos: [142, 152] cc => I
Apply:  Pos: [145, 148] cc => I
Apply:  Pos: [162, 168, 173] ccc => cc
Apply:  Pos: [163, 170] cc => I
Apply:  Pos: [165, 172] cc => I
Apply:  Pos: [171, 176] cc => I
Apply:  Pos: [174, 179] cc => I
Apply:  Pos: [178, 189] cc => I
Apply:  Pos: [186, 190] cc => I
Apply:  Pos: [191, 196] cc => I
Apply:  Pos: [206, 209, 214] ccc => cc
Apply:  Pos: [203, 213, 220] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [7, 11], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [15, 7], [8, 17], [0, 3], [12, 19], [2, 18], [19, 13], [17, 10], [12, 13], [10, 4], [17, 6], [0, 3], [9, 5], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [9, 5], [12, 19], [3, 17], [2, 11], [12, 13], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [16, 1], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [16, 15], [6, 18], [7, 11], [9, 5], [0, 3], [1, 15], [19, 6], [3, 17], [9, 4], [10, 9], [6, 18], [16, 0], [10, 4], [3, 2], [7, 11], [16, 1], [19, 13], [14, 19], [0, 3], [3, 17], [14, 13], [2, 11], [10, 9], [6, 18], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [1, 15], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [14, 13], [10, 4], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [10, 4], [3, 2], [6, 18], [10, 9], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [6, 18], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [9, 5], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [10, 5], [10, 9], [0, 8], [15, 11], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  4.3588337898254395

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[13, 21]
[18, 44]
[49, 67]
[67, 79]
[74, 87]
[75, 88]
[101, 108]
[111, 119]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[22, 29, 40]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[66, 71, 75]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[13, 21]
[18, 44]
[49, 67]
[67, 79]
[74, 87]
[75, 88]
[101, 108]
[111, 119]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6720328330993652

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [13, 21] cc => I, Pos: [13, 21] cc => I, Pos: [18, 44] cc => I, Pos: [18, 44] cc => I, Pos: [22, 29, 40] ccc => cc, Pos: [49, 67] cc => I, Pos: [49, 67] cc => I, Pos: [66, 71, 75] ccc => cc, Pos: [67, 79] cc => I, Pos: [67, 79] cc => I, Pos: [74, 87] cc => I, Pos: [74, 87] cc => I, Pos: [75, 88] cc => I, Pos: [75, 88] cc => I, Pos: [101, 108] cc => I, Pos: [101, 108] cc => I, Pos: [111, 119] cc => I, Pos: [111, 119] cc => I]

--------End Timer [Generate Plans]:  0.031261444091796875

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [13, 21] cc => I,
 Pos: [18, 44] cc => I,
 Pos: [22, 29, 40] ccc => cc,
 Pos: [49, 67] cc => I,
 Pos: [75, 88] cc => I,
 Pos: [74, 87] cc => I,
 Pos: [101, 108] cc => I,
 Pos: [111, 119] cc => I]
Change: 8, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [13, 21] cc => I
Apply:  Pos: [18, 44] cc => I
Apply:  Pos: [22, 29, 40] ccc => cc
Apply:  Pos: [49, 67] cc => I
Apply:  Pos: [75, 88] cc => I
Apply:  Pos: [74, 87] cc => I
Apply:  Pos: [101, 108] cc => I
Apply:  Pos: [111, 119] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [7, 11], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [15, 7], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [7, 11], [1, 15], [12, 14], [6, 18], [14, 19], [17, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [16, 1], [2, 18], [19, 10], [8, 17], [17, 10], [6, 10], [16, 15], [6, 18], [9, 5], [0, 3], [1, 15], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [7, 11], [16, 1], [19, 13], [14, 19], [0, 3], [3, 17], [14, 13], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [1, 15], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [14, 13], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [10, 9], [5, 4], [12, 19], [12, 13], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [9, 5], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [10, 9], [10, 5], [0, 8], [15, 11], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.703294277191162

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[76, 84, 89]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 120, 121]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.359596014022827

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [76, 84, 89] ccc => cc, Pos: [113, 120, 121] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [76, 84, 89] ccc => cc, Pos: [113, 120, 121] ccc => cc]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [76, 84, 89] ccc => cc
Apply:  Pos: [113, 120, 121] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [7, 11], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [15, 7], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [16, 1], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [16, 15], [6, 18], [9, 5], [0, 3], [1, 15], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [7, 11], [16, 1], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [1, 15], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [10, 9], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [10, 9], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [9, 5], [0, 8], [15, 11], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.359596014022827

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[97, 106, 112]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.29706072807312

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [97, 106, 112] ccc => cc]

--------End Timer [Generate Plans]:  0.015624284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [97, 106, 112] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [97, 106, 112] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [7, 11], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [15, 7], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [7, 11], [1, 15], [12, 14], [6, 18], [14, 19], [17, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [16, 1], [2, 18], [19, 10], [8, 17], [17, 10], [6, 10], [16, 15], [6, 18], [9, 5], [0, 3], [1, 15], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [7, 11], [16, 1], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [1, 15], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [17, 10], [5, 4], [12, 19], [12, 13], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [10, 9], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [9, 5], [0, 8], [15, 11], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.312685012817383

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.2815396785736084

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [7, 11], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [15, 7], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [16, 1], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [16, 15], [6, 18], [9, 5], [0, 3], [1, 15], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [7, 11], [16, 1], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [1, 15], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [17, 10], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [10, 9], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [9, 5], [0, 8], [15, 11], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.2815396785736084

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [137] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 34 - (small)
 - circuit cycle: 274

Reduced: 
 - size: 88 (39.11%)
 - depth: 11 (24.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374451637268066

[14, 13], [10, 4], [16, 1], [3, 17], [2, 11], [12, 14], [7, 11], [10, 5], [16, 1], [19, 13], [17, 6], [14, 13], [10, 5], [1, 15], [9, 4], [7, 11], [8, 17], [0, 3], [12, 19], [2, 18], [19, 13], [3, 2], [16, 0], [17, 10], [12, 13], [10, 4], [3, 2], [16, 0], [17, 6], [12, 13], [2, 6], [0, 3], [9, 5], [15, 7], [12, 13], [7, 11], [1, 15], [2, 6], [8, 3], [12, 14], [6, 18], [17, 19], [14, 19], [8, 3], [5, 4], [19, 6], [1, 3], [8, 17], [9, 4], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [9, 4], [17, 6], [1, 2], [9, 5], [12, 19], [3, 17], [2, 11], [12, 13], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [19, 13], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [19, 13], [18, 5], [17, 10], [15, 7], [3, 17], [9, 4], [16, 1], [2, 18], [19, 10], [3, 17], [2, 11], [12, 13], [8, 17], [6, 10], [12, 13], [15, 7], [14, 19], [2, 11], [17, 10], [16, 1], [6, 18], [7, 11], [9, 5], [10, 5], [7, 11], [14, 19], [2, 18], [3, 17], [1, 15], [10, 5], [19, 6], [16, 1], [0, 3], [2, 18], [9, 4], [10, 9], [3, 17], [6, 18], [16, 0], [7, 11], [10, 4], [3, 2], [0, 8], [7, 11], [16, 1], [19, 13], [10, 9], [14, 19], [0, 3], [18, 5], [10, 9], [3, 17], [14, 13], [2, 11], [16, 1], [18, 5], [10, 9], [16, 1], [6, 18], [0, 8], [12, 19], [19, 10], [5, 4], [0, 17], [1, 3], [11, 18], [19, 6], [1, 15], [13, 9], [16, 0], [2, 18], [19, 10], [16, 0], [1, 2], [8, 12], [3, 15], [19, 6], [14, 13], [10, 4], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [10, 5], [0, 8], [3, 2], [1, 15], [6, 18], [10, 9], [5, 4], [12, 13], [0, 8], [11, 18], [1, 15], [10, 5], [0, 8], [12, 19], [11, 18], [1, 2], [9, 4], [0, 8], [3, 15], [14, 19], [6, 18], [16, 1], [14, 13], [17, 10], [0, 8], [2, 18], [12, 14], [9, 4], [0, 8], [7, 11], [19, 6], [1, 2], [8, 3], [9, 5], [7, 11], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [5, 4], [10, 9], [0, 8], [15, 2], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [10, 4], [15, 2], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [10, 5], [0, 17], [1, 15], [19, 10], [9, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[7, 12]
[6, 15]
[21, 26]
[22, 27]
[24, 29]
[29, 34]
[30, 37]
[38, 43]
[48, 54]
[34, 61]
[67, 76]
[73, 81]
[80, 85]
[87, 90]
[79, 91]
[86, 93]
[82, 95]
[97, 100]
[92, 101]
[99, 105]
[102, 109]
[81, 110]
[100, 115]
[115, 119]
[107, 120]
[111, 122]
[122, 126]
[120, 130]
[125, 131]
[126, 132]
[130, 133]
[118, 135]
[137, 147]
[145, 148]
[142, 152]
[163, 170]
[165, 172]
[170, 174]
[171, 176]
[174, 179]
[179, 186]
[178, 189]
[186, 190]
[191, 196]
[214, 216]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[95, 104, 107]
[162, 168, 173]
[190, 194, 205]
[206, 209, 214]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[15, 33, 35]
[103, 108, 112]
[201, 206, 209]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[203, 213, 220]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[7, 12]
[6, 15]
[21, 26]
[22, 27]
[24, 29]
[29, 34]
[30, 37]
[38, 43]
[48, 54]
[34, 61]
[67, 76]
[73, 81]
[80, 85]
[87, 90]
[79, 91]
[86, 93]
[82, 95]
[97, 100]
[92, 101]
[99, 105]
[102, 109]
[81, 110]
[100, 115]
[115, 119]
[107, 120]
[111, 122]
[122, 126]
[120, 130]
[125, 131]
[126, 132]
[130, 133]
[118, 135]
[137, 147]
[145, 148]
[142, 152]
[163, 170]
[165, 172]
[170, 174]
[171, 176]
[174, 179]
[179, 186]
[178, 189]
[186, 190]
[191, 196]
[214, 216]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.234609842300415

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [6, 15] cc => I, Pos: [6, 15] cc => I, Pos: [7, 12] cc => I, Pos: [7, 12] cc => I, Pos: [15, 33, 35] ccc => cc, Pos: [21, 26] cc => I, Pos: [21, 26] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [29, 34] cc => I, Pos: [29, 34] cc => I, Pos: [30, 37] cc => I, Pos: [30, 37] cc => I, Pos: [34, 61] cc => I, Pos: [34, 61] cc => I, Pos: [38, 43] cc => I, Pos: [38, 43] cc => I, Pos: [48, 54] cc => I, Pos: [48, 54] cc => I, Pos: [67, 76] cc => I, Pos: [67, 76] cc => I, Pos: [73, 81] cc => I, Pos: [73, 81] cc => I, Pos: [79, 91] cc => I, Pos: [79, 91] cc => I, Pos: [80, 85] cc => I, Pos: [80, 85] cc => I, Pos: [81, 110] cc => I, Pos: [81, 110] cc => I, Pos: [82, 95] cc => I, Pos: [82, 95] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [87, 90] cc => I, Pos: [87, 90] cc => I, Pos: [92, 101] cc => I, Pos: [92, 101] cc => I, Pos: [95, 104, 107] ccc => cc, Pos: [97, 100] cc => I, Pos: [97, 100] cc => I, Pos: [99, 105] cc => I, Pos: [99, 105] cc => I, Pos: [100, 115] cc => I, Pos: [100, 115] cc => I, Pos: [102, 109] cc => I, Pos: [102, 109] cc => I, Pos: [103, 108, 112] ccc => cc, Pos: [107, 120] cc => I, Pos: [107, 120] cc => I, Pos: [111, 122] cc => I, Pos: [111, 122] cc => I, Pos: [115, 119] cc => I, Pos: [115, 119] cc => I, Pos: [118, 135] cc => I, Pos: [118, 135] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [122, 126] cc => I, Pos: [122, 126] cc => I, Pos: [125, 131] cc => I, Pos: [125, 131] cc => I, Pos: [126, 132] cc => I, Pos: [126, 132] cc => I, Pos: [130, 133] cc => I, Pos: [130, 133] cc => I, Pos: [137, 147] cc => I, Pos: [137, 147] cc => I, Pos: [142, 152] cc => I, Pos: [142, 152] cc => I, Pos: [145, 148] cc => I, Pos: [145, 148] cc => I, Pos: [162, 168, 173] ccc => cc, Pos: [163, 170] cc => I, Pos: [163, 170] cc => I, Pos: [165, 172] cc => I, Pos: [165, 172] cc => I, Pos: [170, 174] cc => I, Pos: [170, 174] cc => I, Pos: [171, 176] cc => I, Pos: [171, 176] cc => I, Pos: [174, 179] cc => I, Pos: [174, 179] cc => I, Pos: [178, 189] cc => I, Pos: [178, 189] cc => I, Pos: [179, 186] cc => I, Pos: [179, 186] cc => I, Pos: [186, 190] cc => I, Pos: [186, 190] cc => I, Pos: [190, 194, 205] ccc => cc, Pos: [191, 196] cc => I, Pos: [191, 196] cc => I, Pos: [201, 206, 209] ccc => cc, Pos: [203, 213, 220] ccc => cc, Pos: [206, 209, 214] ccc => cc, Pos: [214, 216] cc => I, Pos: [214, 216] cc => I]

--------End Timer [Generate Plans]:  0.10918831825256348

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 8] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [7, 12] cc => I,
 Pos: [21, 26] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [34, 61] cc => I,
 Pos: [38, 43] cc => I,
 Pos: [48, 54] cc => I,
 Pos: [67, 76] cc => I,
 Pos: [73, 81] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [82, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [87, 90] cc => I,
 Pos: [92, 101] cc => I,
 Pos: [100, 115] cc => I,
 Pos: [99, 105] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [103, 108, 112] ccc => cc,
 Pos: [107, 120] cc => I,
 Pos: [122, 126] cc => I,
 Pos: [118, 135] cc => I,
 Pos: [125, 131] cc => I,
 Pos: [130, 133] cc => I,
 Pos: [137, 147] cc => I,
 Pos: [142, 152] cc => I,
 Pos: [145, 148] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [170, 174] cc => I,
 Pos: [165, 172] cc => I,
 Pos: [171, 176] cc => I,
 Pos: [178, 189] cc => I,
 Pos: [186, 190] cc => I,
 Pos: [191, 196] cc => I,
 Pos: [201, 206, 209] ccc => cc,
 Pos: [203, 213, 220] ccc => cc,
 Pos: [214, 216] cc => I]
Change: 40, Saving: 41

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [6, 15] cc => I
Apply:  Pos: [7, 12] cc => I
Apply:  Pos: [21, 26] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [30, 37] cc => I
Apply:  Pos: [34, 61] cc => I
Apply:  Pos: [38, 43] cc => I
Apply:  Pos: [48, 54] cc => I
Apply:  Pos: [67, 76] cc => I
Apply:  Pos: [73, 81] cc => I
Apply:  Pos: [79, 91] cc => I
Apply:  Pos: [80, 85] cc => I
Apply:  Pos: [82, 95] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [87, 90] cc => I
Apply:  Pos: [92, 101] cc => I
Apply:  Pos: [100, 115] cc => I
Apply:  Pos: [99, 105] cc => I
Apply:  Pos: [102, 109] cc => I
Apply:  Pos: [103, 108, 112] ccc => cc
Apply:  Pos: [107, 120] cc => I
Apply:  Pos: [122, 126] cc => I
Apply:  Pos: [118, 135] cc => I
Apply:  Pos: [125, 131] cc => I
Apply:  Pos: [130, 133] cc => I
Apply:  Pos: [137, 147] cc => I
Apply:  Pos: [142, 152] cc => I
Apply:  Pos: [145, 148] cc => I
Apply:  Pos: [162, 168, 173] ccc => cc
Apply:  Pos: [170, 174] cc => I
Apply:  Pos: [165, 172] cc => I
Apply:  Pos: [171, 176] cc => I
Apply:  Pos: [178, 189] cc => I
Apply:  Pos: [186, 190] cc => I
Apply:  Pos: [191, 196] cc => I
Apply:  Pos: [201, 206, 209] ccc => cc
Apply:  Pos: [203, 213, 220] ccc => cc
Apply:  Pos: [214, 216] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [0, 3], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [0, 3], [9, 5], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [9, 5], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [6, 18], [7, 11], [9, 5], [0, 3], [1, 15], [19, 6], [3, 17], [9, 4], [10, 9], [6, 18], [16, 0], [10, 4], [3, 2], [7, 11], [19, 13], [14, 19], [0, 3], [3, 17], [14, 13], [2, 11], [10, 9], [6, 18], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [1, 15], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [14, 13], [10, 4], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [10, 4], [0, 8], [3, 2], [6, 18], [10, 9], [5, 4], [12, 13], [12, 19], [1, 2], [0, 8], [3, 15], [14, 19], [6, 18], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [9, 5], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [10, 5], [10, 9], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  4.3437981605529785

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 18]
[46, 62]
[62, 74]
[69, 81]
[70, 82]
[65, 88]
[95, 102]
[104, 112]
[106, 115]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[19, 27, 38]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 18]
[46, 62]
[62, 74]
[69, 81]
[70, 82]
[65, 88]
[95, 102]
[104, 112]
[106, 115]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.531266927719116

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 18] cc => I, Pos: [11, 18] cc => I, Pos: [19, 27, 38] ccc => cc, Pos: [46, 62] cc => I, Pos: [46, 62] cc => I, Pos: [62, 74] cc => I, Pos: [62, 74] cc => I, Pos: [65, 88] cc => I, Pos: [65, 88] cc => I, Pos: [69, 81] cc => I, Pos: [69, 81] cc => I, Pos: [70, 82] cc => I, Pos: [70, 82] cc => I, Pos: [95, 102] cc => I, Pos: [95, 102] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [106, 115] cc => I, Pos: [106, 115] cc => I]

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 18] cc => I,
 Pos: [19, 27, 38] ccc => cc,
 Pos: [46, 62] cc => I,
 Pos: [65, 88] cc => I,
 Pos: [69, 81] cc => I,
 Pos: [70, 82] cc => I,
 Pos: [95, 102] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [106, 115] cc => I]
Change: 9, Saving: 9

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 18] cc => I
Apply:  Pos: [19, 27, 38] ccc => cc
Apply:  Pos: [46, 62] cc => I
Apply:  Pos: [65, 88] cc => I
Apply:  Pos: [69, 81] cc => I
Apply:  Pos: [70, 82] cc => I
Apply:  Pos: [95, 102] cc => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [106, 115] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [14, 19], [17, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 18], [6, 10], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [7, 11], [19, 13], [14, 19], [0, 3], [3, 17], [14, 13], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [14, 13], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [10, 9], [5, 4], [12, 19], [12, 13], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [9, 5], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [10, 9], [10, 5], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.5468909740448

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[71, 78, 83]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[107, 114, 115]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.171799659729004

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [71, 78, 83] ccc => cc, Pos: [107, 114, 115] ccc => cc]

--------End Timer [Generate Plans]:  0.015624523162841797

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [71, 78, 83] ccc => cc, Pos: [107, 114, 115] ccc => cc]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [71, 78, 83] ccc => cc
Apply:  Pos: [107, 114, 115] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 10], [6, 18], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [7, 11], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [10, 9], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [10, 9], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.1874241828918457

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[91, 100, 106]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.109381914138794

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [91, 100, 106] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [91, 100, 106] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [91, 100, 106] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [14, 19], [17, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [6, 18], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [7, 11], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [17, 10], [5, 4], [12, 19], [12, 13], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [10, 9], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.109381914138794

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0938098430633545

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 18], [6, 10], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [7, 11], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [17, 10], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [10, 9], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.0938098430633545

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [129] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 258

Reduced: 
 - size: 96 (42.67%)
 - depth: 13 (28.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374356269836426

[14, 13], [10, 4], [16, 1], [3, 17], [2, 11], [12, 14], [7, 11], [10, 5], [16, 1], [19, 13], [17, 6], [14, 13], [10, 5], [1, 15], [9, 4], [7, 11], [8, 17], [0, 3], [12, 19], [2, 18], [19, 13], [3, 2], [16, 0], [17, 10], [12, 13], [10, 4], [3, 2], [16, 0], [17, 6], [12, 13], [2, 6], [0, 3], [9, 5], [15, 7], [12, 13], [7, 11], [1, 15], [2, 6], [8, 3], [12, 14], [6, 18], [17, 19], [14, 19], [8, 3], [5, 4], [19, 6], [1, 3], [8, 17], [9, 4], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [9, 4], [17, 6], [1, 2], [9, 5], [12, 19], [3, 17], [2, 11], [12, 13], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [19, 13], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [19, 13], [18, 5], [17, 10], [15, 7], [3, 17], [9, 4], [16, 1], [2, 18], [19, 10], [3, 17], [2, 11], [12, 13], [8, 17], [6, 10], [12, 13], [15, 7], [14, 19], [2, 11], [17, 10], [16, 1], [6, 18], [7, 11], [9, 5], [10, 5], [7, 11], [14, 19], [2, 18], [3, 17], [1, 15], [10, 5], [19, 6], [16, 1], [0, 3], [2, 18], [9, 4], [10, 9], [3, 17], [6, 18], [16, 0], [7, 11], [10, 4], [3, 2], [0, 8], [7, 11], [16, 1], [19, 13], [10, 9], [14, 19], [0, 3], [18, 5], [10, 9], [3, 17], [14, 13], [2, 11], [16, 1], [18, 5], [10, 9], [16, 1], [6, 18], [0, 8], [12, 19], [19, 10], [5, 4], [0, 17], [1, 3], [11, 18], [19, 6], [1, 15], [13, 9], [16, 0], [2, 18], [19, 10], [16, 0], [1, 2], [8, 12], [3, 15], [19, 6], [14, 13], [10, 4], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [10, 5], [0, 8], [3, 2], [1, 15], [6, 18], [10, 9], [5, 4], [12, 13], [0, 8], [11, 18], [1, 15], [10, 5], [0, 8], [12, 19], [11, 18], [1, 2], [9, 4], [0, 8], [3, 15], [14, 19], [6, 18], [16, 1], [14, 13], [17, 10], [0, 8], [2, 18], [12, 14], [9, 4], [0, 8], [7, 11], [19, 6], [1, 2], [8, 3], [9, 5], [7, 11], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [5, 4], [10, 9], [0, 8], [15, 2], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [10, 4], [15, 2], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [10, 5], [0, 17], [1, 15], [19, 10], [9, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[7, 12]
[6, 15]
[21, 26]
[22, 27]
[24, 29]
[29, 34]
[30, 37]
[38, 43]
[48, 54]
[34, 61]
[67, 76]
[73, 81]
[80, 85]
[87, 90]
[79, 91]
[86, 93]
[82, 95]
[97, 100]
[92, 101]
[99, 105]
[102, 109]
[81, 110]
[100, 115]
[115, 119]
[107, 120]
[111, 122]
[122, 126]
[120, 130]
[125, 131]
[126, 132]
[130, 133]
[118, 135]
[137, 147]
[145, 148]
[142, 152]
[163, 170]
[165, 172]
[170, 174]
[171, 176]
[174, 179]
[179, 186]
[178, 189]
[186, 190]
[191, 196]
[214, 216]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[95, 104, 107]
[162, 168, 173]
[190, 194, 205]
[206, 209, 214]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[15, 33, 35]
[103, 108, 112]
[201, 206, 209]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[203, 213, 220]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[7, 12]
[6, 15]
[21, 26]
[22, 27]
[24, 29]
[29, 34]
[30, 37]
[38, 43]
[48, 54]
[34, 61]
[67, 76]
[73, 81]
[80, 85]
[87, 90]
[79, 91]
[86, 93]
[82, 95]
[97, 100]
[92, 101]
[99, 105]
[102, 109]
[81, 110]
[100, 115]
[115, 119]
[107, 120]
[111, 122]
[122, 126]
[120, 130]
[125, 131]
[126, 132]
[130, 133]
[118, 135]
[137, 147]
[145, 148]
[142, 152]
[163, 170]
[165, 172]
[170, 174]
[171, 176]
[174, 179]
[179, 186]
[178, 189]
[186, 190]
[191, 196]
[214, 216]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.203205823898315

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [6, 15] cc => I, Pos: [6, 15] cc => I, Pos: [7, 12] cc => I, Pos: [7, 12] cc => I, Pos: [15, 33, 35] ccc => cc, Pos: [21, 26] cc => I, Pos: [21, 26] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [29, 34] cc => I, Pos: [29, 34] cc => I, Pos: [30, 37] cc => I, Pos: [30, 37] cc => I, Pos: [34, 61] cc => I, Pos: [34, 61] cc => I, Pos: [38, 43] cc => I, Pos: [38, 43] cc => I, Pos: [48, 54] cc => I, Pos: [48, 54] cc => I, Pos: [67, 76] cc => I, Pos: [67, 76] cc => I, Pos: [73, 81] cc => I, Pos: [73, 81] cc => I, Pos: [79, 91] cc => I, Pos: [79, 91] cc => I, Pos: [80, 85] cc => I, Pos: [80, 85] cc => I, Pos: [81, 110] cc => I, Pos: [81, 110] cc => I, Pos: [82, 95] cc => I, Pos: [82, 95] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [87, 90] cc => I, Pos: [87, 90] cc => I, Pos: [92, 101] cc => I, Pos: [92, 101] cc => I, Pos: [95, 104, 107] ccc => cc, Pos: [97, 100] cc => I, Pos: [97, 100] cc => I, Pos: [99, 105] cc => I, Pos: [99, 105] cc => I, Pos: [100, 115] cc => I, Pos: [100, 115] cc => I, Pos: [102, 109] cc => I, Pos: [102, 109] cc => I, Pos: [103, 108, 112] ccc => cc, Pos: [107, 120] cc => I, Pos: [107, 120] cc => I, Pos: [111, 122] cc => I, Pos: [111, 122] cc => I, Pos: [115, 119] cc => I, Pos: [115, 119] cc => I, Pos: [118, 135] cc => I, Pos: [118, 135] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [122, 126] cc => I, Pos: [122, 126] cc => I, Pos: [125, 131] cc => I, Pos: [125, 131] cc => I, Pos: [126, 132] cc => I, Pos: [126, 132] cc => I, Pos: [130, 133] cc => I, Pos: [130, 133] cc => I, Pos: [137, 147] cc => I, Pos: [137, 147] cc => I, Pos: [142, 152] cc => I, Pos: [142, 152] cc => I, Pos: [145, 148] cc => I, Pos: [145, 148] cc => I, Pos: [162, 168, 173] ccc => cc, Pos: [163, 170] cc => I, Pos: [163, 170] cc => I, Pos: [165, 172] cc => I, Pos: [165, 172] cc => I, Pos: [170, 174] cc => I, Pos: [170, 174] cc => I, Pos: [171, 176] cc => I, Pos: [171, 176] cc => I, Pos: [174, 179] cc => I, Pos: [174, 179] cc => I, Pos: [178, 189] cc => I, Pos: [178, 189] cc => I, Pos: [179, 186] cc => I, Pos: [179, 186] cc => I, Pos: [186, 190] cc => I, Pos: [186, 190] cc => I, Pos: [190, 194, 205] ccc => cc, Pos: [191, 196] cc => I, Pos: [191, 196] cc => I, Pos: [201, 206, 209] ccc => cc, Pos: [203, 213, 220] ccc => cc, Pos: [206, 209, 214] ccc => cc, Pos: [214, 216] cc => I, Pos: [214, 216] cc => I]

--------End Timer [Generate Plans]:  0.1095120906829834

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 8] cc => I,
 Pos: [15, 33, 35] ccc => cc,
 Pos: [7, 12] cc => I,
 Pos: [21, 26] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [34, 61] cc => I,
 Pos: [38, 43] cc => I,
 Pos: [48, 54] cc => I,
 Pos: [67, 76] cc => I,
 Pos: [81, 110] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [82, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [87, 90] cc => I,
 Pos: [92, 101] cc => I,
 Pos: [97, 100] cc => I,
 Pos: [99, 105] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [103, 108, 112] ccc => cc,
 Pos: [120, 130] cc => I,
 Pos: [122, 126] cc => I,
 Pos: [115, 119] cc => I,
 Pos: [118, 135] cc => I,
 Pos: [125, 131] cc => I,
 Pos: [137, 147] cc => I,
 Pos: [142, 152] cc => I,
 Pos: [145, 148] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 170] cc => I,
 Pos: [165, 172] cc => I,
 Pos: [171, 176] cc => I,
 Pos: [174, 179] cc => I,
 Pos: [178, 189] cc => I,
 Pos: [186, 190] cc => I,
 Pos: [191, 196] cc => I,
 Pos: [201, 206, 209] ccc => cc,
 Pos: [203, 213, 220] ccc => cc,
 Pos: [214, 216] cc => I]
Change: 41, Saving: 42

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [15, 33, 35] ccc => cc
Apply:  Pos: [7, 12] cc => I
Apply:  Pos: [21, 26] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [30, 37] cc => I
Apply:  Pos: [34, 61] cc => I
Apply:  Pos: [38, 43] cc => I
Apply:  Pos: [48, 54] cc => I
Apply:  Pos: [67, 76] cc => I
Apply:  Pos: [81, 110] cc => I
Apply:  Pos: [79, 91] cc => I
Apply:  Pos: [80, 85] cc => I
Apply:  Pos: [82, 95] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [87, 90] cc => I
Apply:  Pos: [92, 101] cc => I
Apply:  Pos: [97, 100] cc => I
Apply:  Pos: [99, 105] cc => I
Apply:  Pos: [102, 109] cc => I
Apply:  Pos: [103, 108, 112] ccc => cc
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [122, 126] cc => I
Apply:  Pos: [115, 119] cc => I
Apply:  Pos: [118, 135] cc => I
Apply:  Pos: [125, 131] cc => I
Apply:  Pos: [137, 147] cc => I
Apply:  Pos: [142, 152] cc => I
Apply:  Pos: [145, 148] cc => I
Apply:  Pos: [162, 168, 173] ccc => cc
Apply:  Pos: [163, 170] cc => I
Apply:  Pos: [165, 172] cc => I
Apply:  Pos: [171, 176] cc => I
Apply:  Pos: [174, 179] cc => I
Apply:  Pos: [178, 189] cc => I
Apply:  Pos: [186, 190] cc => I
Apply:  Pos: [191, 196] cc => I
Apply:  Pos: [201, 206, 209] ccc => cc
Apply:  Pos: [203, 213, 220] ccc => cc
Apply:  Pos: [214, 216] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [7, 11], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [15, 7], [8, 17], [0, 3], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [0, 3], [9, 5], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [9, 5], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [6, 18], [9, 5], [0, 3], [1, 15], [19, 6], [16, 1], [3, 17], [10, 9], [6, 18], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 13], [2, 11], [10, 9], [16, 1], [6, 18], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [1, 15], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [14, 13], [10, 4], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [10, 4], [3, 2], [6, 18], [10, 9], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [6, 18], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [9, 5], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [10, 5], [10, 9], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  4.312717914581299

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[13, 20]
[70, 81]
[68, 82]
[71, 83]
[96, 103]
[106, 114]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[21, 28, 39]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[13, 20]
[70, 81]
[68, 82]
[71, 83]
[96, 103]
[106, 114]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.499889850616455

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [13, 20] cc => I, Pos: [13, 20] cc => I, Pos: [21, 28, 39] ccc => cc, Pos: [68, 82] cc => I, Pos: [68, 82] cc => I, Pos: [70, 81] cc => I, Pos: [70, 81] cc => I, Pos: [71, 83] cc => I, Pos: [71, 83] cc => I, Pos: [96, 103] cc => I, Pos: [96, 103] cc => I, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I]

--------End Timer [Generate Plans]:  0.03124833106994629

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [13, 20] cc => I,
 Pos: [21, 28, 39] ccc => cc,
 Pos: [68, 82] cc => I,
 Pos: [70, 81] cc => I,
 Pos: [71, 83] cc => I,
 Pos: [96, 103] cc => I,
 Pos: [106, 114] cc => I]
Change: 7, Saving: 7

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [13, 20] cc => I
Apply:  Pos: [21, 28, 39] ccc => cc
Apply:  Pos: [68, 82] cc => I
Apply:  Pos: [70, 81] cc => I
Apply:  Pos: [71, 83] cc => I
Apply:  Pos: [96, 103] cc => I
Apply:  Pos: [106, 114] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [7, 11], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [15, 7], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [7, 11], [1, 15], [12, 14], [6, 18], [14, 19], [17, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 18], [6, 10], [9, 5], [0, 3], [1, 15], [19, 6], [3, 17], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 13], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [1, 15], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [14, 13], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [10, 9], [5, 4], [12, 19], [12, 13], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [9, 5], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [10, 9], [10, 5], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.5311381816864014

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[63, 80]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[73, 81, 86]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[110, 117, 118]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[63, 80]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.2187764644622803

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [63, 80] cc => I, Pos: [63, 80] cc => I, Pos: [73, 81, 86] ccc => cc, Pos: [110, 117, 118] ccc => cc]

--------End Timer [Generate Plans]:  0.015624284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [63, 80] cc => I,
 Pos: [73, 81, 86] ccc => cc,
 Pos: [110, 117, 118] ccc => cc]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [63, 80] cc => I
Apply:  Pos: [73, 81, 86] ccc => cc
Apply:  Pos: [110, 117, 118] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [7, 11], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [15, 7], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 10], [6, 18], [9, 5], [0, 3], [19, 6], [3, 17], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [10, 9], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [10, 9], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.234400749206543

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[92, 101, 107]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.1409807205200195

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [92, 101, 107] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [92, 101, 107] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [92, 101, 107] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [7, 11], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [15, 7], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [7, 11], [1, 15], [12, 14], [6, 18], [14, 19], [17, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [6, 18], [9, 5], [0, 3], [19, 6], [3, 17], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [17, 10], [5, 4], [12, 19], [12, 13], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [10, 9], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.1409807205200195

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0934412479400635

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [7, 11], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [15, 7], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 18], [6, 10], [9, 5], [0, 3], [19, 6], [3, 17], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [17, 10], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [10, 9], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.0934412479400635

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [130] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 260

Reduced: 
 - size: 95 (42.22%)
 - depth: 13 (28.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.0781104564666748

[14, 13], [10, 4], [16, 1], [3, 17], [2, 11], [12, 14], [7, 11], [10, 5], [16, 1], [19, 13], [17, 6], [14, 13], [10, 5], [1, 15], [9, 4], [7, 11], [8, 17], [0, 3], [12, 19], [2, 18], [19, 13], [3, 2], [16, 0], [17, 10], [12, 13], [10, 4], [3, 2], [16, 0], [17, 6], [12, 13], [2, 6], [0, 3], [9, 5], [15, 7], [12, 13], [7, 11], [1, 15], [2, 6], [8, 3], [12, 14], [6, 18], [17, 19], [14, 19], [8, 3], [5, 4], [19, 6], [1, 3], [8, 17], [9, 4], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [9, 4], [17, 6], [1, 2], [9, 5], [12, 19], [3, 17], [2, 11], [12, 13], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [19, 13], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [19, 13], [18, 5], [17, 10], [15, 7], [3, 17], [9, 4], [16, 1], [2, 18], [19, 10], [3, 17], [2, 11], [12, 13], [8, 17], [6, 10], [12, 13], [15, 7], [14, 19], [2, 11], [17, 10], [16, 1], [6, 18], [7, 11], [9, 5], [10, 5], [7, 11], [14, 19], [2, 18], [3, 17], [1, 15], [10, 5], [19, 6], [16, 1], [0, 3], [2, 18], [9, 4], [10, 9], [3, 17], [6, 18], [16, 0], [7, 11], [10, 4], [3, 2], [0, 8], [7, 11], [16, 1], [19, 13], [10, 9], [14, 19], [0, 3], [18, 5], [10, 9], [3, 17], [14, 13], [2, 11], [16, 1], [18, 5], [10, 9], [16, 1], [6, 18], [0, 8], [12, 19], [19, 10], [5, 4], [0, 17], [1, 3], [11, 18], [19, 6], [1, 15], [13, 9], [16, 0], [2, 18], [19, 10], [16, 0], [1, 2], [8, 12], [3, 15], [19, 6], [14, 13], [10, 4], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [10, 5], [0, 8], [3, 2], [1, 15], [6, 18], [10, 9], [5, 4], [12, 13], [0, 8], [11, 18], [1, 15], [10, 5], [0, 8], [12, 19], [11, 18], [1, 2], [9, 4], [0, 8], [3, 15], [14, 19], [6, 18], [16, 1], [14, 13], [17, 10], [0, 8], [2, 18], [12, 14], [9, 4], [0, 8], [7, 11], [19, 6], [1, 2], [8, 3], [9, 5], [7, 11], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [5, 4], [10, 9], [0, 8], [15, 2], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [10, 4], [15, 2], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [10, 5], [0, 17], [1, 15], [19, 10], [9, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[7, 12]
[6, 15]
[21, 26]
[22, 27]
[24, 29]
[29, 34]
[30, 37]
[38, 43]
[48, 54]
[34, 61]
[67, 76]
[73, 81]
[80, 85]
[87, 90]
[79, 91]
[86, 93]
[82, 95]
[97, 100]
[92, 101]
[99, 105]
[102, 109]
[81, 110]
[100, 115]
[115, 119]
[107, 120]
[111, 122]
[122, 126]
[120, 130]
[125, 131]
[126, 132]
[130, 133]
[118, 135]
[137, 147]
[145, 148]
[142, 152]
[163, 170]
[165, 172]
[170, 174]
[171, 176]
[174, 179]
[179, 186]
[178, 189]
[186, 190]
[191, 196]
[214, 216]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[95, 104, 107]
[162, 168, 173]
[190, 194, 205]
[206, 209, 214]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[15, 33, 35]
[103, 108, 112]
[201, 206, 209]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[203, 213, 220]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[7, 12]
[6, 15]
[21, 26]
[22, 27]
[24, 29]
[29, 34]
[30, 37]
[38, 43]
[48, 54]
[34, 61]
[67, 76]
[73, 81]
[80, 85]
[87, 90]
[79, 91]
[86, 93]
[82, 95]
[97, 100]
[92, 101]
[99, 105]
[102, 109]
[81, 110]
[100, 115]
[115, 119]
[107, 120]
[111, 122]
[122, 126]
[120, 130]
[125, 131]
[126, 132]
[130, 133]
[118, 135]
[137, 147]
[145, 148]
[142, 152]
[163, 170]
[165, 172]
[170, 174]
[171, 176]
[174, 179]
[179, 186]
[178, 189]
[186, 190]
[191, 196]
[214, 216]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.2501442432403564

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [6, 15] cc => I, Pos: [6, 15] cc => I, Pos: [7, 12] cc => I, Pos: [7, 12] cc => I, Pos: [15, 33, 35] ccc => cc, Pos: [21, 26] cc => I, Pos: [21, 26] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [29, 34] cc => I, Pos: [29, 34] cc => I, Pos: [30, 37] cc => I, Pos: [30, 37] cc => I, Pos: [34, 61] cc => I, Pos: [34, 61] cc => I, Pos: [38, 43] cc => I, Pos: [38, 43] cc => I, Pos: [48, 54] cc => I, Pos: [48, 54] cc => I, Pos: [67, 76] cc => I, Pos: [67, 76] cc => I, Pos: [73, 81] cc => I, Pos: [73, 81] cc => I, Pos: [79, 91] cc => I, Pos: [79, 91] cc => I, Pos: [80, 85] cc => I, Pos: [80, 85] cc => I, Pos: [81, 110] cc => I, Pos: [81, 110] cc => I, Pos: [82, 95] cc => I, Pos: [82, 95] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [87, 90] cc => I, Pos: [87, 90] cc => I, Pos: [92, 101] cc => I, Pos: [92, 101] cc => I, Pos: [95, 104, 107] ccc => cc, Pos: [97, 100] cc => I, Pos: [97, 100] cc => I, Pos: [99, 105] cc => I, Pos: [99, 105] cc => I, Pos: [100, 115] cc => I, Pos: [100, 115] cc => I, Pos: [102, 109] cc => I, Pos: [102, 109] cc => I, Pos: [103, 108, 112] ccc => cc, Pos: [107, 120] cc => I, Pos: [107, 120] cc => I, Pos: [111, 122] cc => I, Pos: [111, 122] cc => I, Pos: [115, 119] cc => I, Pos: [115, 119] cc => I, Pos: [118, 135] cc => I, Pos: [118, 135] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [122, 126] cc => I, Pos: [122, 126] cc => I, Pos: [125, 131] cc => I, Pos: [125, 131] cc => I, Pos: [126, 132] cc => I, Pos: [126, 132] cc => I, Pos: [130, 133] cc => I, Pos: [130, 133] cc => I, Pos: [137, 147] cc => I, Pos: [137, 147] cc => I, Pos: [142, 152] cc => I, Pos: [142, 152] cc => I, Pos: [145, 148] cc => I, Pos: [145, 148] cc => I, Pos: [162, 168, 173] ccc => cc, Pos: [163, 170] cc => I, Pos: [163, 170] cc => I, Pos: [165, 172] cc => I, Pos: [165, 172] cc => I, Pos: [170, 174] cc => I, Pos: [170, 174] cc => I, Pos: [171, 176] cc => I, Pos: [171, 176] cc => I, Pos: [174, 179] cc => I, Pos: [174, 179] cc => I, Pos: [178, 189] cc => I, Pos: [178, 189] cc => I, Pos: [179, 186] cc => I, Pos: [179, 186] cc => I, Pos: [186, 190] cc => I, Pos: [186, 190] cc => I, Pos: [190, 194, 205] ccc => cc, Pos: [191, 196] cc => I, Pos: [191, 196] cc => I, Pos: [201, 206, 209] ccc => cc, Pos: [203, 213, 220] ccc => cc, Pos: [206, 209, 214] ccc => cc, Pos: [214, 216] cc => I, Pos: [214, 216] cc => I]

--------End Timer [Generate Plans]:  0.1092672348022461

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 8] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [7, 12] cc => I,
 Pos: [21, 26] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [34, 61] cc => I,
 Pos: [38, 43] cc => I,
 Pos: [48, 54] cc => I,
 Pos: [67, 76] cc => I,
 Pos: [81, 110] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [95, 104, 107] ccc => cc,
 Pos: [86, 93] cc => I,
 Pos: [87, 90] cc => I,
 Pos: [92, 101] cc => I,
 Pos: [97, 100] cc => I,
 Pos: [99, 105] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [103, 108, 112] ccc => cc,
 Pos: [111, 122] cc => I,
 Pos: [115, 119] cc => I,
 Pos: [118, 135] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [125, 131] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [137, 147] cc => I,
 Pos: [142, 152] cc => I,
 Pos: [145, 148] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 170] cc => I,
 Pos: [165, 172] cc => I,
 Pos: [171, 176] cc => I,
 Pos: [179, 186] cc => I,
 Pos: [178, 189] cc => I,
 Pos: [190, 194, 205] ccc => cc,
 Pos: [191, 196] cc => I,
 Pos: [201, 206, 209] ccc => cc,
 Pos: [203, 213, 220] ccc => cc,
 Pos: [214, 216] cc => I]
Change: 42, Saving: 43

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [6, 15] cc => I
Apply:  Pos: [7, 12] cc => I
Apply:  Pos: [21, 26] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [30, 37] cc => I
Apply:  Pos: [34, 61] cc => I
Apply:  Pos: [38, 43] cc => I
Apply:  Pos: [48, 54] cc => I
Apply:  Pos: [67, 76] cc => I
Apply:  Pos: [81, 110] cc => I
Apply:  Pos: [79, 91] cc => I
Apply:  Pos: [80, 85] cc => I
Apply:  Pos: [95, 104, 107] ccc => cc
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [87, 90] cc => I
Apply:  Pos: [92, 101] cc => I
Apply:  Pos: [97, 100] cc => I
Apply:  Pos: [99, 105] cc => I
Apply:  Pos: [102, 109] cc => I
Apply:  Pos: [103, 108, 112] ccc => cc
Apply:  Pos: [111, 122] cc => I
Apply:  Pos: [115, 119] cc => I
Apply:  Pos: [118, 135] cc => I
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [125, 131] cc => I
Apply:  Pos: [126, 132] cc => I
Apply:  Pos: [137, 147] cc => I
Apply:  Pos: [142, 152] cc => I
Apply:  Pos: [145, 148] cc => I
Apply:  Pos: [162, 168, 173] ccc => cc
Apply:  Pos: [163, 170] cc => I
Apply:  Pos: [165, 172] cc => I
Apply:  Pos: [171, 176] cc => I
Apply:  Pos: [179, 186] cc => I
Apply:  Pos: [178, 189] cc => I
Apply:  Pos: [190, 194, 205] ccc => cc
Apply:  Pos: [191, 196] cc => I
Apply:  Pos: [201, 206, 209] ccc => cc
Apply:  Pos: [203, 213, 220] ccc => cc
Apply:  Pos: [214, 216] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [0, 3], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [0, 3], [9, 5], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [9, 5], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [18, 5], [17, 10], [16, 1], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [16, 15], [6, 18], [9, 5], [0, 3], [1, 15], [19, 6], [3, 17], [6, 18], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 13], [2, 11], [16, 1], [6, 18], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [1, 15], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [14, 13], [10, 4], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [10, 4], [3, 2], [6, 18], [10, 9], [5, 4], [12, 13], [0, 8], [12, 19], [1, 2], [3, 15], [14, 19], [6, 18], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [0, 3], [19, 6], [1, 2], [8, 3], [9, 5], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [10, 5], [10, 9], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  4.3594114780426025

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 18]
[70, 81]
[94, 101]
[104, 113]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[19, 27, 38]
[78, 88, 93]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[64, 68, 70]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 18]
[70, 81]
[94, 101]
[104, 113]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.484576940536499

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 18] cc => I, Pos: [11, 18] cc => I, Pos: [19, 27, 38] ccc => cc, Pos: [64, 68, 70] ccc => cc, Pos: [70, 81] cc => I, Pos: [70, 81] cc => I, Pos: [78, 88, 93] ccc => cc, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [104, 113] cc => I, Pos: [104, 113] cc => I]

--------End Timer [Generate Plans]:  0.01562809944152832

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 18] cc => I,
 Pos: [19, 27, 38] ccc => cc,
 Pos: [70, 81] cc => I,
 Pos: [78, 88, 93] ccc => cc,
 Pos: [94, 101] cc => I,
 Pos: [104, 113] cc => I]
Change: 6, Saving: 6

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 18] cc => I
Apply:  Pos: [19, 27, 38] ccc => cc
Apply:  Pos: [70, 81] cc => I
Apply:  Pos: [78, 88, 93] ccc => cc
Apply:  Pos: [94, 101] cc => I
Apply:  Pos: [104, 113] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [14, 19], [17, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [18, 5], [17, 10], [16, 1], [2, 18], [19, 10], [8, 17], [17, 10], [6, 10], [16, 15], [6, 18], [9, 5], [0, 3], [1, 15], [19, 6], [3, 17], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [16, 1], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [1, 15], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [10, 9], [5, 4], [12, 13], [0, 8], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [0, 3], [19, 6], [1, 2], [8, 3], [9, 5], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [10, 9], [10, 5], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.5002050399780273

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 120, 121]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.265448808670044

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [113, 120, 121] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [113, 120, 121] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [113, 120, 121] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [18, 5], [17, 10], [16, 1], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [16, 15], [6, 18], [9, 5], [0, 3], [1, 15], [19, 6], [3, 17], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [16, 1], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [1, 15], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [10, 9], [5, 4], [12, 13], [0, 8], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [0, 3], [19, 6], [1, 2], [8, 3], [10, 9], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.265448808670044

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[96, 106, 113]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.249605417251587

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [96, 106, 113] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [96, 106, 113] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [96, 106, 113] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [14, 19], [17, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [18, 5], [17, 10], [16, 1], [2, 18], [19, 10], [8, 17], [17, 10], [6, 10], [16, 15], [6, 18], [9, 5], [0, 3], [1, 15], [19, 6], [3, 17], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [16, 1], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [1, 15], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [17, 10], [5, 4], [12, 13], [0, 8], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [10, 9], [2, 18], [12, 14], [0, 3], [19, 6], [1, 2], [8, 3], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.249605417251587

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.2343595027923584

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [18, 5], [17, 10], [16, 1], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [16, 15], [6, 18], [9, 5], [0, 3], [1, 15], [19, 6], [3, 17], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [16, 1], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [1, 15], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [17, 10], [5, 4], [12, 13], [0, 8], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [10, 9], [2, 18], [12, 14], [0, 3], [19, 6], [1, 2], [8, 3], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.2343595027923584

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [135] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 33 - (small)
 - circuit cycle: 270

Reduced: 
 - size: 90 (40.00%)
 - depth: 12 (26.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09375691413879395

[14, 13], [10, 4], [16, 1], [3, 17], [2, 11], [12, 14], [7, 11], [10, 5], [16, 1], [19, 13], [17, 6], [14, 13], [10, 5], [1, 15], [9, 4], [7, 11], [8, 17], [0, 3], [12, 19], [2, 18], [19, 13], [3, 2], [16, 0], [17, 10], [12, 13], [10, 4], [3, 2], [16, 0], [17, 6], [12, 13], [2, 6], [0, 3], [9, 5], [15, 7], [12, 13], [7, 11], [1, 15], [2, 6], [8, 3], [12, 14], [6, 18], [17, 19], [14, 19], [8, 3], [5, 4], [19, 6], [1, 3], [8, 17], [9, 4], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [9, 4], [17, 6], [1, 2], [9, 5], [12, 19], [3, 17], [2, 11], [12, 13], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [19, 13], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [9, 4], [8, 3], [1, 2], [19, 13], [18, 5], [17, 10], [15, 7], [3, 17], [9, 4], [16, 1], [2, 18], [19, 10], [3, 17], [2, 11], [12, 13], [8, 17], [6, 10], [12, 13], [15, 7], [14, 19], [2, 11], [17, 10], [16, 1], [6, 18], [7, 11], [9, 5], [10, 5], [7, 11], [14, 19], [2, 18], [3, 17], [1, 15], [10, 5], [19, 6], [16, 1], [0, 3], [2, 18], [9, 4], [10, 9], [3, 17], [6, 18], [16, 0], [7, 11], [10, 4], [3, 2], [0, 8], [7, 11], [16, 1], [19, 13], [10, 9], [14, 19], [0, 3], [18, 5], [10, 9], [3, 17], [14, 13], [2, 11], [16, 1], [18, 5], [10, 9], [16, 1], [6, 18], [0, 8], [12, 19], [19, 10], [5, 4], [0, 17], [1, 3], [11, 18], [19, 6], [1, 15], [13, 9], [16, 0], [2, 18], [19, 10], [16, 0], [1, 2], [8, 12], [3, 15], [19, 6], [14, 13], [10, 4], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [10, 5], [0, 8], [3, 2], [1, 15], [6, 18], [10, 9], [5, 4], [12, 13], [0, 8], [11, 18], [1, 15], [10, 5], [0, 8], [12, 19], [11, 18], [1, 2], [9, 4], [0, 8], [3, 15], [14, 19], [6, 18], [16, 1], [14, 13], [17, 10], [0, 8], [2, 18], [12, 14], [9, 4], [0, 8], [7, 11], [19, 6], [1, 2], [8, 3], [9, 5], [7, 11], [12, 19], [6, 18], [1, 15], [17, 6], [2, 11], [19, 13], [5, 4], [10, 9], [0, 8], [15, 2], [8, 12], [3, 17], [2, 11], [14, 13], [19, 6], [1, 3], [10, 4], [15, 2], [19, 13], [15, 2], [11, 18], [8, 3], [14, 13], [10, 5], [0, 17], [1, 15], [19, 10], [9, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[7, 12]
[6, 15]
[21, 26]
[22, 27]
[24, 29]
[29, 34]
[30, 37]
[38, 43]
[48, 54]
[34, 61]
[67, 76]
[73, 81]
[80, 85]
[87, 90]
[79, 91]
[86, 93]
[82, 95]
[97, 100]
[92, 101]
[99, 105]
[102, 109]
[81, 110]
[100, 115]
[115, 119]
[107, 120]
[111, 122]
[122, 126]
[120, 130]
[125, 131]
[126, 132]
[130, 133]
[118, 135]
[137, 147]
[145, 148]
[142, 152]
[163, 170]
[165, 172]
[170, 174]
[171, 176]
[174, 179]
[179, 186]
[178, 189]
[186, 190]
[191, 196]
[214, 216]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[95, 104, 107]
[162, 168, 173]
[190, 194, 205]
[206, 209, 214]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[15, 33, 35]
[103, 108, 112]
[201, 206, 209]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[203, 213, 220]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[7, 12]
[6, 15]
[21, 26]
[22, 27]
[24, 29]
[29, 34]
[30, 37]
[38, 43]
[48, 54]
[34, 61]
[67, 76]
[73, 81]
[80, 85]
[87, 90]
[79, 91]
[86, 93]
[82, 95]
[97, 100]
[92, 101]
[99, 105]
[102, 109]
[81, 110]
[100, 115]
[115, 119]
[107, 120]
[111, 122]
[122, 126]
[120, 130]
[125, 131]
[126, 132]
[130, 133]
[118, 135]
[137, 147]
[145, 148]
[142, 152]
[163, 170]
[165, 172]
[170, 174]
[171, 176]
[174, 179]
[179, 186]
[178, 189]
[186, 190]
[191, 196]
[214, 216]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.187554597854614

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [6, 15] cc => I, Pos: [6, 15] cc => I, Pos: [7, 12] cc => I, Pos: [7, 12] cc => I, Pos: [15, 33, 35] ccc => cc, Pos: [21, 26] cc => I, Pos: [21, 26] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [29, 34] cc => I, Pos: [29, 34] cc => I, Pos: [30, 37] cc => I, Pos: [30, 37] cc => I, Pos: [34, 61] cc => I, Pos: [34, 61] cc => I, Pos: [38, 43] cc => I, Pos: [38, 43] cc => I, Pos: [48, 54] cc => I, Pos: [48, 54] cc => I, Pos: [67, 76] cc => I, Pos: [67, 76] cc => I, Pos: [73, 81] cc => I, Pos: [73, 81] cc => I, Pos: [79, 91] cc => I, Pos: [79, 91] cc => I, Pos: [80, 85] cc => I, Pos: [80, 85] cc => I, Pos: [81, 110] cc => I, Pos: [81, 110] cc => I, Pos: [82, 95] cc => I, Pos: [82, 95] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [87, 90] cc => I, Pos: [87, 90] cc => I, Pos: [92, 101] cc => I, Pos: [92, 101] cc => I, Pos: [95, 104, 107] ccc => cc, Pos: [97, 100] cc => I, Pos: [97, 100] cc => I, Pos: [99, 105] cc => I, Pos: [99, 105] cc => I, Pos: [100, 115] cc => I, Pos: [100, 115] cc => I, Pos: [102, 109] cc => I, Pos: [102, 109] cc => I, Pos: [103, 108, 112] ccc => cc, Pos: [107, 120] cc => I, Pos: [107, 120] cc => I, Pos: [111, 122] cc => I, Pos: [111, 122] cc => I, Pos: [115, 119] cc => I, Pos: [115, 119] cc => I, Pos: [118, 135] cc => I, Pos: [118, 135] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [122, 126] cc => I, Pos: [122, 126] cc => I, Pos: [125, 131] cc => I, Pos: [125, 131] cc => I, Pos: [126, 132] cc => I, Pos: [126, 132] cc => I, Pos: [130, 133] cc => I, Pos: [130, 133] cc => I, Pos: [137, 147] cc => I, Pos: [137, 147] cc => I, Pos: [142, 152] cc => I, Pos: [142, 152] cc => I, Pos: [145, 148] cc => I, Pos: [145, 148] cc => I, Pos: [162, 168, 173] ccc => cc, Pos: [163, 170] cc => I, Pos: [163, 170] cc => I, Pos: [165, 172] cc => I, Pos: [165, 172] cc => I, Pos: [170, 174] cc => I, Pos: [170, 174] cc => I, Pos: [171, 176] cc => I, Pos: [171, 176] cc => I, Pos: [174, 179] cc => I, Pos: [174, 179] cc => I, Pos: [178, 189] cc => I, Pos: [178, 189] cc => I, Pos: [179, 186] cc => I, Pos: [179, 186] cc => I, Pos: [186, 190] cc => I, Pos: [186, 190] cc => I, Pos: [190, 194, 205] ccc => cc, Pos: [191, 196] cc => I, Pos: [191, 196] cc => I, Pos: [201, 206, 209] ccc => cc, Pos: [203, 213, 220] ccc => cc, Pos: [206, 209, 214] ccc => cc, Pos: [214, 216] cc => I, Pos: [214, 216] cc => I]

Plan: 1
[Pos: [2, 8] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [7, 12] cc => I,
 Pos: [21, 26] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [34, 61] cc => I,
 Pos: [38, 43] cc => I,
 Pos: [48, 54] cc => I,
 Pos: [67, 76] cc => I,
 Pos: [73, 81] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [82, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [87, 90] cc => I,
 Pos: [92, 101] cc => I,
 Pos: [97, 100] cc => I,
 Pos: [99, 105] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [103, 108, 112] ccc => cc,
 Pos: [107, 120] cc => I,
 Pos: [111, 122] cc => I,
 Pos: [115, 119] cc => I,
 Pos: [118, 135] cc => I,
 Pos: [125, 131] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [130, 133] cc => I,
 Pos: [137, 147] cc => I,
 Pos: [142, 152] cc => I,
 Pos: [145, 148] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 170] cc => I,
 Pos: [165, 172] cc => I,
 Pos: [171, 176] cc => I,
 Pos: [174, 179] cc => I,
 Pos: [178, 189] cc => I,
 Pos: [186, 190] cc => I,
 Pos: [191, 196] cc => I,
 Pos: [201, 206, 209] ccc => cc,
 Pos: [203, 213, 220] ccc => cc,
 Pos: [214, 216] cc => I]
Change: 43, Saving: 44

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.10938334465026855

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 8] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [7, 12] cc => I,
 Pos: [21, 26] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [34, 61] cc => I,
 Pos: [38, 43] cc => I,
 Pos: [48, 54] cc => I,
 Pos: [67, 76] cc => I,
 Pos: [73, 81] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [82, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [87, 90] cc => I,
 Pos: [92, 101] cc => I,
 Pos: [97, 100] cc => I,
 Pos: [99, 105] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [103, 108, 112] ccc => cc,
 Pos: [107, 120] cc => I,
 Pos: [111, 122] cc => I,
 Pos: [115, 119] cc => I,
 Pos: [118, 135] cc => I,
 Pos: [125, 131] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [130, 133] cc => I,
 Pos: [137, 147] cc => I,
 Pos: [142, 152] cc => I,
 Pos: [145, 148] cc => I,
 Pos: [162, 168, 173] ccc => cc,
 Pos: [163, 170] cc => I,
 Pos: [165, 172] cc => I,
 Pos: [171, 176] cc => I,
 Pos: [174, 179] cc => I,
 Pos: [178, 189] cc => I,
 Pos: [186, 190] cc => I,
 Pos: [191, 196] cc => I,
 Pos: [201, 206, 209] ccc => cc,
 Pos: [203, 213, 220] ccc => cc,
 Pos: [214, 216] cc => I]
Change: 43, Saving: 44

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [6, 15] cc => I
Apply:  Pos: [7, 12] cc => I
Apply:  Pos: [21, 26] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [30, 37] cc => I
Apply:  Pos: [34, 61] cc => I
Apply:  Pos: [38, 43] cc => I
Apply:  Pos: [48, 54] cc => I
Apply:  Pos: [67, 76] cc => I
Apply:  Pos: [73, 81] cc => I
Apply:  Pos: [79, 91] cc => I
Apply:  Pos: [80, 85] cc => I
Apply:  Pos: [82, 95] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [87, 90] cc => I
Apply:  Pos: [92, 101] cc => I
Apply:  Pos: [97, 100] cc => I
Apply:  Pos: [99, 105] cc => I
Apply:  Pos: [102, 109] cc => I
Apply:  Pos: [103, 108, 112] ccc => cc
Apply:  Pos: [107, 120] cc => I
Apply:  Pos: [111, 122] cc => I
Apply:  Pos: [115, 119] cc => I
Apply:  Pos: [118, 135] cc => I
Apply:  Pos: [125, 131] cc => I
Apply:  Pos: [126, 132] cc => I
Apply:  Pos: [130, 133] cc => I
Apply:  Pos: [137, 147] cc => I
Apply:  Pos: [142, 152] cc => I
Apply:  Pos: [145, 148] cc => I
Apply:  Pos: [162, 168, 173] ccc => cc
Apply:  Pos: [163, 170] cc => I
Apply:  Pos: [165, 172] cc => I
Apply:  Pos: [171, 176] cc => I
Apply:  Pos: [174, 179] cc => I
Apply:  Pos: [178, 189] cc => I
Apply:  Pos: [186, 190] cc => I
Apply:  Pos: [191, 196] cc => I
Apply:  Pos: [201, 206, 209] ccc => cc
Apply:  Pos: [203, 213, 220] ccc => cc
Apply:  Pos: [214, 216] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [0, 3], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [0, 3], [9, 5], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [9, 5], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [6, 18], [9, 5], [0, 3], [1, 15], [19, 6], [3, 17], [9, 4], [6, 18], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 13], [2, 11], [6, 18], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [1, 15], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [14, 13], [10, 4], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [10, 4], [3, 2], [6, 18], [10, 9], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [6, 18], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [9, 5], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [10, 5], [10, 9], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  4.296937942504883

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 18]
[68, 78]
[64, 84]
[91, 98]
[101, 109]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[19, 27, 38]
[76, 85, 90]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 18]
[68, 78]
[64, 84]
[91, 98]
[101, 109]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.375087022781372

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 18] cc => I, Pos: [11, 18] cc => I, Pos: [19, 27, 38] ccc => cc, Pos: [64, 84] cc => I, Pos: [64, 84] cc => I, Pos: [68, 78] cc => I, Pos: [68, 78] cc => I, Pos: [76, 85, 90] ccc => cc, Pos: [91, 98] cc => I, Pos: [91, 98] cc => I, Pos: [101, 109] cc => I, Pos: [101, 109] cc => I]

Plan: 1
[Pos: [11, 18] cc => I,
 Pos: [19, 27, 38] ccc => cc,
 Pos: [64, 84] cc => I,
 Pos: [68, 78] cc => I,
 Pos: [76, 85, 90] ccc => cc,
 Pos: [91, 98] cc => I,
 Pos: [101, 109] cc => I]
Change: 7, Saving: 7

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0311429500579834

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 18] cc => I,
 Pos: [19, 27, 38] ccc => cc,
 Pos: [64, 84] cc => I,
 Pos: [68, 78] cc => I,
 Pos: [76, 85, 90] ccc => cc,
 Pos: [91, 98] cc => I,
 Pos: [101, 109] cc => I]
Change: 7, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 18] cc => I
Apply:  Pos: [19, 27, 38] ccc => cc
Apply:  Pos: [64, 84] cc => I
Apply:  Pos: [68, 78] cc => I
Apply:  Pos: [76, 85, 90] ccc => cc
Apply:  Pos: [91, 98] cc => I
Apply:  Pos: [101, 109] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [14, 19], [17, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 18], [6, 10], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [10, 9], [5, 4], [12, 19], [12, 13], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [9, 5], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [10, 9], [10, 5], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.4062299728393555

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[106, 113, 114]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.109323263168335

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [106, 113, 114] ccc => cc]

Plan: 1
[Pos: [106, 113, 114] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [106, 113, 114] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [106, 113, 114] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 10], [6, 18], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [10, 9], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [17, 10], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [10, 9], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.109323263168335

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[91, 100, 106]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.062528371810913

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [91, 100, 106] ccc => cc]

Plan: 1
[Pos: [91, 100, 106] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015610694885253906

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [91, 100, 106] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [91, 100, 106] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [14, 19], [17, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [6, 10], [17, 10], [6, 18], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [17, 10], [5, 4], [12, 19], [12, 13], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [10, 9], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.078139066696167

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.0624513626098633

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[14, 13], [10, 4], [3, 17], [2, 11], [12, 14], [19, 13], [17, 6], [14, 13], [1, 15], [9, 4], [8, 17], [12, 19], [2, 18], [19, 13], [17, 10], [10, 4], [17, 6], [9, 4], [15, 7], [7, 11], [1, 15], [12, 14], [6, 18], [17, 19], [14, 19], [5, 4], [19, 6], [1, 3], [8, 17], [15, 2], [17, 19], [16, 1], [0, 3], [6, 11], [17, 6], [1, 2], [12, 19], [3, 17], [2, 11], [6, 18], [10, 4], [17, 10], [3, 15], [7, 11], [0, 8], [8, 17], [19, 10], [12, 14], [3, 2], [8, 3], [1, 2], [18, 5], [17, 10], [2, 18], [19, 10], [8, 17], [17, 10], [6, 18], [6, 10], [9, 5], [0, 3], [19, 6], [3, 17], [9, 4], [16, 0], [10, 4], [3, 2], [19, 13], [14, 19], [0, 3], [3, 17], [14, 9], [2, 11], [12, 19], [5, 4], [0, 17], [1, 3], [11, 18], [13, 9], [2, 18], [1, 2], [8, 12], [3, 15], [6, 11], [16, 1], [18, 5], [15, 2], [14, 19], [19, 6], [9, 4], [3, 2], [17, 10], [5, 4], [12, 13], [12, 19], [1, 2], [3, 15], [14, 19], [16, 1], [14, 13], [10, 9], [2, 18], [12, 14], [19, 6], [1, 2], [8, 3], [12, 19], [6, 18], [1, 15], [17, 6], [15, 2], [19, 13], [9, 5], [0, 8], [2, 11], [8, 12], [3, 17], [14, 13], [19, 6], [1, 3], [5, 4], [19, 13], [11, 18], [8, 3], [14, 13], [0, 17], [1, 15], [19, 10], [9, 4], ----End Timer [Execute Mapping]:  2.0624513626098633

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [129] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 258

Reduced: 
 - size: 96 (42.67%)
 - depth: 13 (28.89%)

