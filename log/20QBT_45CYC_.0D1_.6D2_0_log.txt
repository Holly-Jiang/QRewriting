----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12525653839111328

[1, 0], [18, 4], [19, 8], [10, 2], [12, 6], [1, 17], [3, 14], [18, 4], [5, 15], [0, 12], [17, 6], [16, 7], [13, 11], [3, 14], [2, 18], [15, 9], [0, 12], [8, 17], [14, 15], [18, 9], [19, 1], [3, 5], [16, 7], [0, 12], [8, 17], [6, 4], [5, 2], [7, 13], [14, 15], [1, 17], [7, 13], [5, 14], [18, 9], [6, 4], [1, 17], [6, 4], [0, 12], [3, 15], [7, 8], [13, 11], [10, 5], [18, 9], [17, 6], [16, 19], [13, 11], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [11, 10], [4, 9], [5, 2], [17, 12], [5, 14], [1, 17], [16, 19], [11, 10], [7, 8], [15, 4], [5, 14], [17, 6], [0, 12], [8, 3], [18, 4], [5, 2], [8, 17], [14, 15], [11, 10], [6, 4], [1, 0], [5, 2], [19, 8], [18, 9], [11, 10], [0, 12], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 15], [14, 6], [18, 9], [16, 7], [11, 10], [2, 18], [0, 12], [15, 4], [13, 8], [16, 19], [3, 14], [13, 11], [2, 18], [7, 8], [5, 15], [4, 9], [12, 6], [3, 14], [1, 0], [19, 17], [11, 5], [8, 17], [19, 1], [13, 3], [14, 6], [18, 4], [0, 12], [11, 5], [0, 12], [10, 2], [15, 9], [17, 6], [7, 3], [11, 2], [5, 15], [7, 3], [17, 14], [18, 4], [11, 5], [17, 12], [19, 8], [15, 18], [14, 6], [16, 7], [3, 5], [19, 8], [17, 14], [11, 10], [18, 4], [7, 13], [0, 12], [3, 15], [17, 12], [7, 13], [11, 5], [18, 4], [3, 15], [10, 5], [19, 17], [13, 11], [8, 1], [18, 4], [3, 15], [18, 4], [8, 17], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [0, 12], [6, 4], [3, 14], [2, 18], [0, 12], [3, 15], [16, 19], [11, 5], [13, 8], [2, 18], [15, 4], [14, 6], [0, 12], [13, 3], [16, 7], [19, 8], [15, 18], [17, 14], [13, 3], [7, 8], [10, 5], [2, 18], [15, 9], [3, 5], [8, 17], [16, 19], [2, 18], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [11, 10], [5, 14], [8, 17], [15, 18], [12, 6], [4, 9], [5, 14], [1, 0], [8, 3], [18, 9], [11, 10], [14, 12], [6, 4], [11, 2], [7, 13], [18, 9], [8, 17], [17, 12], [8, 1], [16, 7], [5, 2], [15, 9], [13, 11], [14, 12], [15, 9], [10, 2], [8, 3], [1, 17], [6, 4], [16, 7], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [15, 9], [14, 12], [11, 2], [16, 19], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [8, 3], [18, 9], [14, 6], [19, 1], [4, 9], [8, 3], [16, 7], [15, 18], [3, 14], [7, 8], [4, 9], [1, 0], [11, 2], [12, 6], [19, 17], [8, 3], [5, 15], [10, 2], [6, 4], [16, 7], [8, 1], [14, 6], [3, 5], [18, 9], [19, 17], [16, 7], [8, 1], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 7]
[6, 13]
[9, 16]
[11, 22]
[16, 23]
[17, 24]
[18, 28]
[27, 30]
[19, 32]
[25, 33]
[29, 34]
[33, 35]
[23, 36]
[32, 41]
[39, 44]
[36, 48]
[43, 57]
[51, 58]
[55, 61]
[53, 66]
[58, 69]
[66, 72]
[69, 75]
[74, 84]
[76, 88]
[87, 94]
[92, 99]
[102, 109]
[108, 110]
[114, 117]
[107, 119]
[122, 127]
[131, 135]
[130, 137]
[133, 138]
[137, 143]
[138, 144]
[143, 145]
[152, 156]
[155, 161]
[156, 164]
[165, 170]
[173, 178]
[190, 195]
[189, 199]
[198, 204]
[191, 205]
[210, 213]
[197, 215]
[201, 217]
[208, 218]
[213, 224]
[177, 227]
[233, 238]
[237, 243]
[226, 245]
[247, 257]
[252, 258]
[253, 259]
[257, 260]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[75, 80, 86]
[82, 89, 96]
[118, 124, 128]
[186, 203, 208]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 71, 76]
[119, 123, 130]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[106, 113, 118]
[111, 115, 129]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 7]
[6, 13]
[9, 16]
[11, 22]
[16, 23]
[17, 24]
[18, 28]
[27, 30]
[19, 32]
[25, 33]
[29, 34]
[33, 35]
[23, 36]
[32, 41]
[39, 44]
[36, 48]
[43, 57]
[51, 58]
[55, 61]
[53, 66]
[58, 69]
[66, 72]
[69, 75]
[74, 84]
[76, 88]
[87, 94]
[92, 99]
[102, 109]
[108, 110]
[114, 117]
[107, 119]
[122, 127]
[131, 135]
[130, 137]
[133, 138]
[137, 143]
[138, 144]
[143, 145]
[152, 156]
[155, 161]
[156, 164]
[165, 170]
[173, 178]
[190, 195]
[189, 199]
[198, 204]
[191, 205]
[210, 213]
[197, 215]
[201, 217]
[208, 218]
[213, 224]
[177, 227]
[233, 238]
[237, 243]
[226, 245]
[247, 257]
[252, 258]
[253, 259]
[257, 260]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.202901363372803

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 7] cc => I, Pos: [1, 7] cc => I, Pos: [6, 13] cc => I, Pos: [6, 13] cc => I, Pos: [9, 16] cc => I, Pos: [9, 16] cc => I, Pos: [11, 22] cc => I, Pos: [11, 22] cc => I, Pos: [16, 23] cc => I, Pos: [16, 23] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [18, 28] cc => I, Pos: [18, 28] cc => I, Pos: [19, 32] cc => I, Pos: [19, 32] cc => I, Pos: [23, 36] cc => I, Pos: [23, 36] cc => I, Pos: [25, 33] cc => I, Pos: [25, 33] cc => I, Pos: [27, 30] cc => I, Pos: [27, 30] cc => I, Pos: [29, 34] cc => I, Pos: [29, 34] cc => I, Pos: [32, 41] cc => I, Pos: [32, 41] cc => I, Pos: [33, 35] cc => I, Pos: [33, 35] cc => I, Pos: [36, 48] cc => I, Pos: [36, 48] cc => I, Pos: [39, 44] cc => I, Pos: [39, 44] cc => I, Pos: [43, 57] cc => I, Pos: [43, 57] cc => I, Pos: [51, 58] cc => I, Pos: [51, 58] cc => I, Pos: [53, 66] cc => I, Pos: [53, 66] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [58, 69] cc => I, Pos: [58, 69] cc => I, Pos: [63, 71, 76] ccc => cc, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [69, 75] cc => I, Pos: [69, 75] cc => I, Pos: [74, 84] cc => I, Pos: [74, 84] cc => I, Pos: [75, 80, 86] ccc => cc, Pos: [76, 88] cc => I, Pos: [76, 88] cc => I, Pos: [82, 89, 96] ccc => cc, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [102, 109] cc => I, Pos: [102, 109] cc => I, Pos: [106, 113, 118] ccc => cc, Pos: [107, 119] cc => I, Pos: [107, 119] cc => I, Pos: [108, 110] cc => I, Pos: [108, 110] cc => I, Pos: [111, 115, 129] ccc => cc, Pos: [114, 117] cc => I, Pos: [114, 117] cc => I, Pos: [118, 124, 128] ccc => cc, Pos: [119, 123, 130] ccc => cc, Pos: [122, 127] cc => I, Pos: [122, 127] cc => I, Pos: [130, 137] cc => I, Pos: [130, 137] cc => I, Pos: [131, 135] cc => I, Pos: [131, 135] cc => I, Pos: [133, 138] cc => I, Pos: [133, 138] cc => I, Pos: [137, 143] cc => I, Pos: [137, 143] cc => I, Pos: [138, 144] cc => I, Pos: [138, 144] cc => I, Pos: [143, 145] cc => I, Pos: [143, 145] cc => I, Pos: [152, 156] cc => I, Pos: [152, 156] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [156, 164] cc => I, Pos: [156, 164] cc => I, Pos: [165, 170] cc => I, Pos: [165, 170] cc => I, Pos: [173, 178] cc => I, Pos: [173, 178] cc => I, Pos: [177, 227] cc => I, Pos: [177, 227] cc => I, Pos: [186, 203, 208] ccc => cc, Pos: [189, 199] cc => I, Pos: [189, 199] cc => I, Pos: [190, 195] cc => I, Pos: [190, 195] cc => I, Pos: [191, 205] cc => I, Pos: [191, 205] cc => I, Pos: [197, 215] cc => I, Pos: [197, 215] cc => I, Pos: [198, 204] cc => I, Pos: [198, 204] cc => I, Pos: [201, 217] cc => I, Pos: [201, 217] cc => I, Pos: [208, 218] cc => I, Pos: [208, 218] cc => I, Pos: [210, 213] cc => I, Pos: [210, 213] cc => I, Pos: [213, 224] cc => I, Pos: [213, 224] cc => I, Pos: [226, 245] cc => I, Pos: [226, 245] cc => I, Pos: [233, 238] cc => I, Pos: [233, 238] cc => I, Pos: [237, 243] cc => I, Pos: [237, 243] cc => I, Pos: [247, 257] cc => I, Pos: [247, 257] cc => I, Pos: [252, 258] cc => I, Pos: [252, 258] cc => I, Pos: [253, 259] cc => I, Pos: [253, 259] cc => I, Pos: [257, 260] cc => I, Pos: [257, 260] cc => I]

Plan: 1
[Pos: [1, 7] cc => I,
 Pos: [6, 13] cc => I,
 Pos: [9, 16] cc => I,
 Pos: [11, 22] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [18, 28] cc => I,
 Pos: [19, 32] cc => I,
 Pos: [23, 36] cc => I,
 Pos: [25, 33] cc => I,
 Pos: [27, 30] cc => I,
 Pos: [29, 34] cc => I,
 Pos: [39, 44] cc => I,
 Pos: [43, 57] cc => I,
 Pos: [51, 58] cc => I,
 Pos: [53, 66] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [63, 71, 76] ccc => cc,
 Pos: [69, 75] cc => I,
 Pos: [74, 84] cc => I,
 Pos: [82, 89, 96] ccc => cc,
 Pos: [87, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [106, 113, 118] ccc => cc,
 Pos: [107, 119] cc => I,
 Pos: [108, 110] cc => I,
 Pos: [111, 115, 129] ccc => cc,
 Pos: [114, 117] cc => I,
 Pos: [122, 127] cc => I,
 Pos: [130, 137] cc => I,
 Pos: [131, 135] cc => I,
 Pos: [133, 138] cc => I,
 Pos: [143, 145] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [165, 170] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 227] cc => I,
 Pos: [186, 203, 208] ccc => cc,
 Pos: [189, 199] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [191, 205] cc => I,
 Pos: [197, 215] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 217] cc => I,
 Pos: [210, 213] cc => I,
 Pos: [226, 245] cc => I,
 Pos: [233, 238] cc => I,
 Pos: [237, 243] cc => I,
 Pos: [247, 257] cc => I,
 Pos: [252, 258] cc => I,
 Pos: [253, 259] cc => I]
Change: 52, Saving: 198

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 7] cc => I,
 Pos: [6, 13] cc => I,
 Pos: [9, 16] cc => I,
 Pos: [11, 22] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [18, 28] cc => I,
 Pos: [19, 32] cc => I,
 Pos: [23, 36] cc => I,
 Pos: [25, 33] cc => I,
 Pos: [27, 30] cc => I,
 Pos: [29, 34] cc => I,
 Pos: [39, 44] cc => I,
 Pos: [43, 57] cc => I,
 Pos: [51, 58] cc => I,
 Pos: [53, 66] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [63, 71, 76] ccc => cc,
 Pos: [69, 75] cc => I,
 Pos: [74, 84] cc => I,
 Pos: [82, 89, 96] ccc => cc,
 Pos: [87, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [106, 113, 118] ccc => cc,
 Pos: [107, 119] cc => I,
 Pos: [108, 110] cc => I,
 Pos: [111, 115, 129] ccc => cc,
 Pos: [114, 117] cc => I,
 Pos: [122, 127] cc => I,
 Pos: [130, 137] cc => I,
 Pos: [131, 135] cc => I,
 Pos: [133, 138] cc => I,
 Pos: [143, 145] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [165, 170] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 227] cc => I,
 Pos: [186, 203, 208] ccc => cc,
 Pos: [189, 199] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [191, 205] cc => I,
 Pos: [197, 215] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 217] cc => I,
 Pos: [210, 213] cc => I,
 Pos: [226, 245] cc => I,
 Pos: [233, 238] cc => I,
 Pos: [237, 243] cc => I,
 Pos: [247, 257] cc => I,
 Pos: [252, 258] cc => I,
 Pos: [253, 259] cc => I]
Change: 52, Saving: 198

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 7] cc => I
Apply:  Pos: [6, 13] cc => I
Apply:  Pos: [9, 16] cc => I
Apply:  Pos: [11, 22] cc => I
Apply:  Pos: [17, 24] cc => I
Apply:  Pos: [18, 28] cc => I
Apply:  Pos: [19, 32] cc => I
Apply:  Pos: [23, 36] cc => I
Apply:  Pos: [25, 33] cc => I
Apply:  Pos: [27, 30] cc => I
Apply:  Pos: [29, 34] cc => I
Apply:  Pos: [39, 44] cc => I
Apply:  Pos: [43, 57] cc => I
Apply:  Pos: [51, 58] cc => I
Apply:  Pos: [53, 66] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [63, 71, 76] ccc => cc
Apply:  Pos: [69, 75] cc => I
Apply:  Pos: [74, 84] cc => I
Apply:  Pos: [82, 89, 96] ccc => cc
Apply:  Pos: [87, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [102, 109] cc => I
Apply:  Pos: [106, 113, 118] ccc => cc
Apply:  Pos: [107, 119] cc => I
Apply:  Pos: [108, 110] cc => I
Apply:  Pos: [111, 115, 129] ccc => cc
Apply:  Pos: [114, 117] cc => I
Apply:  Pos: [122, 127] cc => I
Apply:  Pos: [130, 137] cc => I
Apply:  Pos: [131, 135] cc => I
Apply:  Pos: [133, 138] cc => I
Apply:  Pos: [143, 145] cc => I
Apply:  Pos: [152, 156] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [165, 170] cc => I
Apply:  Pos: [173, 178] cc => I
Apply:  Pos: [177, 227] cc => I
Apply:  Pos: [186, 203, 208] ccc => cc
Apply:  Pos: [189, 199] cc => I
Apply:  Pos: [190, 195] cc => I
Apply:  Pos: [191, 205] cc => I
Apply:  Pos: [197, 215] cc => I
Apply:  Pos: [198, 204] cc => I
Apply:  Pos: [201, 217] cc => I
Apply:  Pos: [210, 213] cc => I
Apply:  Pos: [226, 245] cc => I
Apply:  Pos: [233, 238] cc => I
Apply:  Pos: [237, 243] cc => I
Apply:  Pos: [247, 257] cc => I
Apply:  Pos: [252, 258] cc => I
Apply:  Pos: [253, 259] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 6], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 2], [5, 14], [6, 4], [3, 15], [7, 8], [10, 5], [18, 9], [17, 6], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [1, 0], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [0, 12], [5, 2], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [11, 10], [0, 12], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [1, 0], [19, 17], [8, 17], [19, 1], [13, 3], [17, 14], [11, 10], [15, 9], [14, 6], [10, 2], [5, 15], [11, 5], [17, 12], [15, 18], [14, 6], [16, 7], [3, 5], [17, 14], [0, 12], [17, 12], [11, 5], [10, 5], [19, 17], [13, 11], [8, 1], [3, 15], [8, 17], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [3, 15], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [0, 12], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [19, 1], [16, 7], [15, 18], [3, 14], [7, 8], [1, 0], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----End Timer [Execute Mapping]:  5.202901363372803

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 50]
[66, 72]
[70, 76]
[77, 98]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 14, 19]
[83, 86, 91]
[147, 152, 170]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[13, 17, 39]
[49, 54, 64]
[79, 81, 85]
[71, 83, 86]
[136, 147, 152]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 50]
[66, 72]
[70, 76]
[77, 98]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.1093862056732178

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 14, 19] ccc => cc, Pos: [13, 17, 39] ccc => cc, Pos: [38, 50] cc => I, Pos: [38, 50] cc => I, Pos: [49, 54, 64] ccc => cc, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [71, 83, 86] ccc => cc, Pos: [77, 98] cc => I, Pos: [77, 98] cc => I, Pos: [79, 81, 85] ccc => cc, Pos: [83, 86, 91] ccc => cc, Pos: [136, 147, 152] ccc => cc, Pos: [147, 152, 170] ccc => cc]

Plan: 1
[Pos: [6, 14, 19] ccc => cc,
 Pos: [13, 17, 39] ccc => cc,
 Pos: [38, 50] cc => I,
 Pos: [49, 54, 64] ccc => cc,
 Pos: [66, 72] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [71, 83, 86] ccc => cc,
 Pos: [77, 98] cc => I,
 Pos: [79, 81, 85] ccc => cc,
 Pos: [136, 147, 152] ccc => cc]
Change: 10, Saving: 28

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 14, 19] ccc => cc,
 Pos: [13, 17, 39] ccc => cc,
 Pos: [38, 50] cc => I,
 Pos: [49, 54, 64] ccc => cc,
 Pos: [66, 72] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [71, 83, 86] ccc => cc,
 Pos: [77, 98] cc => I,
 Pos: [79, 81, 85] ccc => cc,
 Pos: [136, 147, 152] ccc => cc]
Change: 10, Saving: 28

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 14, 19] ccc => cc
Apply:  Pos: [13, 17, 39] ccc => cc
Apply:  Pos: [38, 50] cc => I
Apply:  Pos: [49, 54, 64] ccc => cc
Apply:  Pos: [66, 72] cc => I
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [71, 83, 86] ccc => cc
Apply:  Pos: [77, 98] cc => I
Apply:  Pos: [79, 81, 85] ccc => cc
Apply:  Pos: [136, 147, 152] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 14], [10, 5], [6, 4], [3, 15], [7, 8], [5, 2], [18, 9], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [1, 0], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [13, 11], [15, 4], [13, 8], [16, 19], [11, 10], [7, 8], [4, 9], [12, 6], [1, 0], [8, 17], [19, 1], [19, 17], [13, 3], [17, 14], [15, 9], [10, 2], [5, 15], [11, 5], [3, 15], [16, 7], [3, 5], [17, 14], [10, 5], [13, 11], [19, 17], [11, 5], [8, 1], [15, 18], [8, 17], [10, 5], [7, 8], [19, 1], [6, 4], [3, 15], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [19, 1], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----End Timer [Execute Mapping]:  3.1093862056732178

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 54]
[59, 67]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[64, 73, 80]
[123, 134, 156]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 54]
[59, 67]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.703073263168335

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [31, 54] cc => I, Pos: [31, 54] cc => I, Pos: [59, 67] cc => I, Pos: [59, 67] cc => I, Pos: [64, 73, 80] ccc => cc, Pos: [123, 134, 156] ccc => cc]

Plan: 1
[Pos: [31, 54] cc => I,
 Pos: [59, 67] cc => I,
 Pos: [64, 73, 80] ccc => cc,
 Pos: [123, 134, 156] ccc => cc]
Change: 4, Saving: 12

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [31, 54] cc => I,
 Pos: [59, 67] cc => I,
 Pos: [64, 73, 80] ccc => cc,
 Pos: [123, 134, 156] ccc => cc]
Change: 4, Saving: 12

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [31, 54] cc => I
Apply:  Pos: [59, 67] cc => I
Apply:  Pos: [64, 73, 80] ccc => cc
Apply:  Pos: [123, 134, 156] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 14], [10, 5], [6, 4], [3, 15], [7, 8], [5, 2], [18, 9], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [13, 11], [15, 4], [13, 8], [16, 19], [11, 10], [7, 8], [4, 9], [12, 6], [8, 17], [19, 17], [19, 1], [13, 3], [15, 9], [10, 2], [5, 15], [11, 5], [3, 18], [16, 7], [3, 5], [10, 5], [13, 11], [19, 17], [11, 5], [8, 1], [15, 18], [8, 17], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [19, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.703073263168335

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[69, 83]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[69, 83]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.703155994415283

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [69, 83] cc => I, Pos: [69, 83] cc => I]

Plan: 1
[Pos: [69, 83] cc => I]
Change: 1, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [69, 83] cc => I]
Change: 1, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [69, 83] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 14], [10, 5], [6, 4], [3, 15], [7, 8], [5, 2], [18, 9], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [13, 11], [15, 4], [13, 8], [16, 19], [11, 10], [7, 8], [4, 9], [12, 6], [19, 17], [8, 17], [19, 1], [13, 3], [15, 9], [10, 2], [5, 15], [11, 5], [3, 18], [16, 7], [10, 5], [3, 5], [13, 11], [19, 17], [11, 5], [8, 1], [8, 17], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [19, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.703155994415283

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[55, 66]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[55, 66]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.5312371253967285

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [55, 66] cc => I, Pos: [55, 66] cc => I]

Plan: 1
[Pos: [55, 66] cc => I]
Change: 1, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [55, 66] cc => I]
Change: 1, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [55, 66] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 14], [10, 5], [6, 4], [3, 15], [7, 8], [5, 2], [18, 9], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [13, 11], [15, 4], [13, 8], [16, 19], [11, 10], [7, 8], [4, 9], [12, 6], [8, 17], [19, 1], [13, 3], [15, 9], [10, 2], [5, 15], [11, 5], [3, 18], [16, 7], [3, 5], [10, 5], [13, 11], [11, 5], [8, 17], [8, 1], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [19, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.5312371253967285

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [147] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 294

Reduced: 
 - size: 123 (45.56%)
 - cycle: 246 (45.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936713218688965

[1, 0], [18, 4], [19, 8], [10, 2], [12, 6], [1, 17], [3, 14], [18, 4], [5, 15], [0, 12], [17, 6], [16, 7], [13, 11], [3, 14], [2, 18], [15, 9], [0, 12], [8, 17], [14, 15], [18, 9], [19, 1], [3, 5], [16, 7], [0, 12], [8, 17], [6, 4], [5, 2], [7, 13], [14, 15], [1, 17], [7, 13], [5, 14], [18, 9], [6, 4], [1, 17], [6, 4], [0, 12], [3, 15], [7, 8], [13, 11], [10, 5], [18, 9], [17, 6], [16, 19], [13, 11], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [11, 10], [4, 9], [5, 2], [17, 12], [5, 14], [1, 17], [16, 19], [11, 10], [7, 8], [15, 4], [5, 14], [17, 6], [0, 12], [8, 3], [18, 4], [5, 2], [8, 17], [14, 15], [11, 10], [6, 4], [1, 0], [5, 2], [19, 8], [18, 9], [11, 10], [0, 12], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 15], [14, 6], [18, 9], [16, 7], [11, 10], [2, 18], [0, 12], [15, 4], [13, 8], [16, 19], [3, 14], [13, 11], [2, 18], [7, 8], [5, 15], [4, 9], [12, 6], [3, 14], [1, 0], [19, 17], [11, 5], [8, 17], [19, 1], [13, 3], [14, 6], [18, 4], [0, 12], [11, 5], [0, 12], [10, 2], [15, 9], [17, 6], [7, 3], [11, 2], [5, 15], [7, 3], [17, 14], [18, 4], [11, 5], [17, 12], [19, 8], [15, 18], [14, 6], [16, 7], [3, 5], [19, 8], [17, 14], [11, 10], [18, 4], [7, 13], [0, 12], [3, 15], [17, 12], [7, 13], [11, 5], [18, 4], [3, 15], [10, 5], [19, 17], [13, 11], [8, 1], [18, 4], [3, 15], [18, 4], [8, 17], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [0, 12], [6, 4], [3, 14], [2, 18], [0, 12], [3, 15], [16, 19], [11, 5], [13, 8], [2, 18], [15, 4], [14, 6], [0, 12], [13, 3], [16, 7], [19, 8], [15, 18], [17, 14], [13, 3], [7, 8], [10, 5], [2, 18], [15, 9], [3, 5], [8, 17], [16, 19], [2, 18], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [11, 10], [5, 14], [8, 17], [15, 18], [12, 6], [4, 9], [5, 14], [1, 0], [8, 3], [18, 9], [11, 10], [14, 12], [6, 4], [11, 2], [7, 13], [18, 9], [8, 17], [17, 12], [8, 1], [16, 7], [5, 2], [15, 9], [13, 11], [14, 12], [15, 9], [10, 2], [8, 3], [1, 17], [6, 4], [16, 7], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [15, 9], [14, 12], [11, 2], [16, 19], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [8, 3], [18, 9], [14, 6], [19, 1], [4, 9], [8, 3], [16, 7], [15, 18], [3, 14], [7, 8], [4, 9], [1, 0], [11, 2], [12, 6], [19, 17], [8, 3], [5, 15], [10, 2], [6, 4], [16, 7], [8, 1], [14, 6], [3, 5], [18, 9], [19, 17], [16, 7], [8, 1], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 7]
[6, 13]
[9, 16]
[11, 22]
[16, 23]
[17, 24]
[18, 28]
[27, 30]
[19, 32]
[25, 33]
[29, 34]
[33, 35]
[23, 36]
[32, 41]
[39, 44]
[36, 48]
[43, 57]
[51, 58]
[55, 61]
[53, 66]
[58, 69]
[66, 72]
[69, 75]
[74, 84]
[76, 88]
[87, 94]
[92, 99]
[102, 109]
[108, 110]
[114, 117]
[107, 119]
[122, 127]
[131, 135]
[130, 137]
[133, 138]
[137, 143]
[138, 144]
[143, 145]
[152, 156]
[155, 161]
[156, 164]
[165, 170]
[173, 178]
[190, 195]
[189, 199]
[198, 204]
[191, 205]
[210, 213]
[197, 215]
[201, 217]
[208, 218]
[213, 224]
[177, 227]
[233, 238]
[237, 243]
[226, 245]
[247, 257]
[252, 258]
[253, 259]
[257, 260]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[75, 80, 86]
[82, 89, 96]
[118, 124, 128]
[186, 203, 208]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 71, 76]
[119, 123, 130]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[106, 113, 118]
[111, 115, 129]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 7]
[6, 13]
[9, 16]
[11, 22]
[16, 23]
[17, 24]
[18, 28]
[27, 30]
[19, 32]
[25, 33]
[29, 34]
[33, 35]
[23, 36]
[32, 41]
[39, 44]
[36, 48]
[43, 57]
[51, 58]
[55, 61]
[53, 66]
[58, 69]
[66, 72]
[69, 75]
[74, 84]
[76, 88]
[87, 94]
[92, 99]
[102, 109]
[108, 110]
[114, 117]
[107, 119]
[122, 127]
[131, 135]
[130, 137]
[133, 138]
[137, 143]
[138, 144]
[143, 145]
[152, 156]
[155, 161]
[156, 164]
[165, 170]
[173, 178]
[190, 195]
[189, 199]
[198, 204]
[191, 205]
[210, 213]
[197, 215]
[201, 217]
[208, 218]
[213, 224]
[177, 227]
[233, 238]
[237, 243]
[226, 245]
[247, 257]
[252, 258]
[253, 259]
[257, 260]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.140670299530029

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 7] cc => I, Pos: [1, 7] cc => I, Pos: [6, 13] cc => I, Pos: [6, 13] cc => I, Pos: [9, 16] cc => I, Pos: [9, 16] cc => I, Pos: [11, 22] cc => I, Pos: [11, 22] cc => I, Pos: [16, 23] cc => I, Pos: [16, 23] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [18, 28] cc => I, Pos: [18, 28] cc => I, Pos: [19, 32] cc => I, Pos: [19, 32] cc => I, Pos: [23, 36] cc => I, Pos: [23, 36] cc => I, Pos: [25, 33] cc => I, Pos: [25, 33] cc => I, Pos: [27, 30] cc => I, Pos: [27, 30] cc => I, Pos: [29, 34] cc => I, Pos: [29, 34] cc => I, Pos: [32, 41] cc => I, Pos: [32, 41] cc => I, Pos: [33, 35] cc => I, Pos: [33, 35] cc => I, Pos: [36, 48] cc => I, Pos: [36, 48] cc => I, Pos: [39, 44] cc => I, Pos: [39, 44] cc => I, Pos: [43, 57] cc => I, Pos: [43, 57] cc => I, Pos: [51, 58] cc => I, Pos: [51, 58] cc => I, Pos: [53, 66] cc => I, Pos: [53, 66] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [58, 69] cc => I, Pos: [58, 69] cc => I, Pos: [63, 71, 76] ccc => cc, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [69, 75] cc => I, Pos: [69, 75] cc => I, Pos: [74, 84] cc => I, Pos: [74, 84] cc => I, Pos: [75, 80, 86] ccc => cc, Pos: [76, 88] cc => I, Pos: [76, 88] cc => I, Pos: [82, 89, 96] ccc => cc, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [102, 109] cc => I, Pos: [102, 109] cc => I, Pos: [106, 113, 118] ccc => cc, Pos: [107, 119] cc => I, Pos: [107, 119] cc => I, Pos: [108, 110] cc => I, Pos: [108, 110] cc => I, Pos: [111, 115, 129] ccc => cc, Pos: [114, 117] cc => I, Pos: [114, 117] cc => I, Pos: [118, 124, 128] ccc => cc, Pos: [119, 123, 130] ccc => cc, Pos: [122, 127] cc => I, Pos: [122, 127] cc => I, Pos: [130, 137] cc => I, Pos: [130, 137] cc => I, Pos: [131, 135] cc => I, Pos: [131, 135] cc => I, Pos: [133, 138] cc => I, Pos: [133, 138] cc => I, Pos: [137, 143] cc => I, Pos: [137, 143] cc => I, Pos: [138, 144] cc => I, Pos: [138, 144] cc => I, Pos: [143, 145] cc => I, Pos: [143, 145] cc => I, Pos: [152, 156] cc => I, Pos: [152, 156] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [156, 164] cc => I, Pos: [156, 164] cc => I, Pos: [165, 170] cc => I, Pos: [165, 170] cc => I, Pos: [173, 178] cc => I, Pos: [173, 178] cc => I, Pos: [177, 227] cc => I, Pos: [177, 227] cc => I, Pos: [186, 203, 208] ccc => cc, Pos: [189, 199] cc => I, Pos: [189, 199] cc => I, Pos: [190, 195] cc => I, Pos: [190, 195] cc => I, Pos: [191, 205] cc => I, Pos: [191, 205] cc => I, Pos: [197, 215] cc => I, Pos: [197, 215] cc => I, Pos: [198, 204] cc => I, Pos: [198, 204] cc => I, Pos: [201, 217] cc => I, Pos: [201, 217] cc => I, Pos: [208, 218] cc => I, Pos: [208, 218] cc => I, Pos: [210, 213] cc => I, Pos: [210, 213] cc => I, Pos: [213, 224] cc => I, Pos: [213, 224] cc => I, Pos: [226, 245] cc => I, Pos: [226, 245] cc => I, Pos: [233, 238] cc => I, Pos: [233, 238] cc => I, Pos: [237, 243] cc => I, Pos: [237, 243] cc => I, Pos: [247, 257] cc => I, Pos: [247, 257] cc => I, Pos: [252, 258] cc => I, Pos: [252, 258] cc => I, Pos: [253, 259] cc => I, Pos: [253, 259] cc => I, Pos: [257, 260] cc => I, Pos: [257, 260] cc => I]

Plan: 1
[Pos: [1, 7] cc => I,
 Pos: [6, 13] cc => I,
 Pos: [9, 16] cc => I,
 Pos: [11, 22] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [18, 28] cc => I,
 Pos: [19, 32] cc => I,
 Pos: [23, 36] cc => I,
 Pos: [25, 33] cc => I,
 Pos: [27, 30] cc => I,
 Pos: [29, 34] cc => I,
 Pos: [39, 44] cc => I,
 Pos: [43, 57] cc => I,
 Pos: [51, 58] cc => I,
 Pos: [53, 66] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [63, 71, 76] ccc => cc,
 Pos: [69, 75] cc => I,
 Pos: [74, 84] cc => I,
 Pos: [82, 89, 96] ccc => cc,
 Pos: [87, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [106, 113, 118] ccc => cc,
 Pos: [107, 119] cc => I,
 Pos: [108, 110] cc => I,
 Pos: [111, 115, 129] ccc => cc,
 Pos: [114, 117] cc => I,
 Pos: [122, 127] cc => I,
 Pos: [130, 137] cc => I,
 Pos: [131, 135] cc => I,
 Pos: [133, 138] cc => I,
 Pos: [143, 145] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [165, 170] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 227] cc => I,
 Pos: [186, 203, 208] ccc => cc,
 Pos: [189, 199] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [191, 205] cc => I,
 Pos: [197, 215] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 217] cc => I,
 Pos: [210, 213] cc => I,
 Pos: [226, 245] cc => I,
 Pos: [233, 238] cc => I,
 Pos: [237, 243] cc => I,
 Pos: [247, 257] cc => I,
 Pos: [252, 258] cc => I,
 Pos: [253, 259] cc => I]
Change: 52, Saving: 52

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.14062809944152832

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 7] cc => I,
 Pos: [6, 13] cc => I,
 Pos: [9, 16] cc => I,
 Pos: [11, 22] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [18, 28] cc => I,
 Pos: [19, 32] cc => I,
 Pos: [23, 36] cc => I,
 Pos: [25, 33] cc => I,
 Pos: [27, 30] cc => I,
 Pos: [29, 34] cc => I,
 Pos: [39, 44] cc => I,
 Pos: [43, 57] cc => I,
 Pos: [51, 58] cc => I,
 Pos: [53, 66] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [63, 71, 76] ccc => cc,
 Pos: [69, 75] cc => I,
 Pos: [74, 84] cc => I,
 Pos: [82, 89, 96] ccc => cc,
 Pos: [87, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [106, 113, 118] ccc => cc,
 Pos: [107, 119] cc => I,
 Pos: [108, 110] cc => I,
 Pos: [111, 115, 129] ccc => cc,
 Pos: [114, 117] cc => I,
 Pos: [122, 127] cc => I,
 Pos: [130, 137] cc => I,
 Pos: [131, 135] cc => I,
 Pos: [133, 138] cc => I,
 Pos: [143, 145] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [165, 170] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 227] cc => I,
 Pos: [186, 203, 208] ccc => cc,
 Pos: [189, 199] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [191, 205] cc => I,
 Pos: [197, 215] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 217] cc => I,
 Pos: [210, 213] cc => I,
 Pos: [226, 245] cc => I,
 Pos: [233, 238] cc => I,
 Pos: [237, 243] cc => I,
 Pos: [247, 257] cc => I,
 Pos: [252, 258] cc => I,
 Pos: [253, 259] cc => I]
Change: 52, Saving: 52

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 7] cc => I
Apply:  Pos: [6, 13] cc => I
Apply:  Pos: [9, 16] cc => I
Apply:  Pos: [11, 22] cc => I
Apply:  Pos: [17, 24] cc => I
Apply:  Pos: [18, 28] cc => I
Apply:  Pos: [19, 32] cc => I
Apply:  Pos: [23, 36] cc => I
Apply:  Pos: [25, 33] cc => I
Apply:  Pos: [27, 30] cc => I
Apply:  Pos: [29, 34] cc => I
Apply:  Pos: [39, 44] cc => I
Apply:  Pos: [43, 57] cc => I
Apply:  Pos: [51, 58] cc => I
Apply:  Pos: [53, 66] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [63, 71, 76] ccc => cc
Apply:  Pos: [69, 75] cc => I
Apply:  Pos: [74, 84] cc => I
Apply:  Pos: [82, 89, 96] ccc => cc
Apply:  Pos: [87, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [102, 109] cc => I
Apply:  Pos: [106, 113, 118] ccc => cc
Apply:  Pos: [107, 119] cc => I
Apply:  Pos: [108, 110] cc => I
Apply:  Pos: [111, 115, 129] ccc => cc
Apply:  Pos: [114, 117] cc => I
Apply:  Pos: [122, 127] cc => I
Apply:  Pos: [130, 137] cc => I
Apply:  Pos: [131, 135] cc => I
Apply:  Pos: [133, 138] cc => I
Apply:  Pos: [143, 145] cc => I
Apply:  Pos: [152, 156] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [165, 170] cc => I
Apply:  Pos: [173, 178] cc => I
Apply:  Pos: [177, 227] cc => I
Apply:  Pos: [186, 203, 208] ccc => cc
Apply:  Pos: [189, 199] cc => I
Apply:  Pos: [190, 195] cc => I
Apply:  Pos: [191, 205] cc => I
Apply:  Pos: [197, 215] cc => I
Apply:  Pos: [198, 204] cc => I
Apply:  Pos: [201, 217] cc => I
Apply:  Pos: [210, 213] cc => I
Apply:  Pos: [226, 245] cc => I
Apply:  Pos: [233, 238] cc => I
Apply:  Pos: [237, 243] cc => I
Apply:  Pos: [247, 257] cc => I
Apply:  Pos: [252, 258] cc => I
Apply:  Pos: [253, 259] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 6], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 2], [5, 14], [6, 4], [3, 15], [7, 8], [10, 5], [18, 9], [17, 6], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [1, 0], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [0, 12], [5, 2], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [11, 10], [0, 12], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [1, 0], [19, 17], [8, 17], [19, 1], [13, 3], [17, 14], [11, 10], [15, 9], [14, 6], [10, 2], [5, 15], [11, 5], [17, 12], [15, 18], [14, 6], [16, 7], [3, 5], [17, 14], [0, 12], [17, 12], [11, 5], [10, 5], [19, 17], [13, 11], [8, 1], [3, 15], [8, 17], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [3, 15], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [0, 12], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [19, 1], [16, 7], [15, 18], [3, 14], [7, 8], [1, 0], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----End Timer [Execute Mapping]:  5.281298398971558

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 50]
[66, 72]
[70, 76]
[77, 98]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 14, 19]
[83, 86, 91]
[147, 152, 170]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[13, 17, 39]
[49, 54, 64]
[79, 81, 85]
[71, 83, 86]
[136, 147, 152]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 50]
[66, 72]
[70, 76]
[77, 98]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.984347343444824

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 14, 19] ccc => cc, Pos: [13, 17, 39] ccc => cc, Pos: [38, 50] cc => I, Pos: [38, 50] cc => I, Pos: [49, 54, 64] ccc => cc, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [71, 83, 86] ccc => cc, Pos: [77, 98] cc => I, Pos: [77, 98] cc => I, Pos: [79, 81, 85] ccc => cc, Pos: [83, 86, 91] ccc => cc, Pos: [136, 147, 152] ccc => cc, Pos: [147, 152, 170] ccc => cc]

Plan: 1
[Pos: [6, 14, 19] ccc => cc,
 Pos: [13, 17, 39] ccc => cc,
 Pos: [38, 50] cc => I,
 Pos: [49, 54, 64] ccc => cc,
 Pos: [66, 72] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [71, 83, 86] ccc => cc,
 Pos: [77, 98] cc => I,
 Pos: [79, 81, 85] ccc => cc,
 Pos: [136, 147, 152] ccc => cc]
Change: 10, Saving: 10

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.031235218048095703

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 14, 19] ccc => cc,
 Pos: [13, 17, 39] ccc => cc,
 Pos: [38, 50] cc => I,
 Pos: [49, 54, 64] ccc => cc,
 Pos: [66, 72] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [71, 83, 86] ccc => cc,
 Pos: [77, 98] cc => I,
 Pos: [79, 81, 85] ccc => cc,
 Pos: [136, 147, 152] ccc => cc]
Change: 10, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 14, 19] ccc => cc
Apply:  Pos: [13, 17, 39] ccc => cc
Apply:  Pos: [38, 50] cc => I
Apply:  Pos: [49, 54, 64] ccc => cc
Apply:  Pos: [66, 72] cc => I
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [71, 83, 86] ccc => cc
Apply:  Pos: [77, 98] cc => I
Apply:  Pos: [79, 81, 85] ccc => cc
Apply:  Pos: [136, 147, 152] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 14], [10, 5], [6, 4], [3, 15], [7, 8], [5, 2], [18, 9], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [1, 0], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [13, 11], [15, 4], [13, 8], [16, 19], [11, 10], [7, 8], [4, 9], [12, 6], [1, 0], [8, 17], [19, 1], [19, 17], [13, 3], [17, 14], [15, 9], [10, 2], [5, 15], [11, 5], [3, 15], [16, 7], [3, 5], [17, 14], [10, 5], [13, 11], [19, 17], [11, 5], [8, 1], [15, 18], [8, 17], [10, 5], [7, 8], [19, 1], [6, 4], [3, 15], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [19, 1], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----End Timer [Execute Mapping]:  3.01558256149292

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 54]
[59, 67]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[64, 73, 80]
[123, 134, 156]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 54]
[59, 67]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6717793941497803

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [31, 54] cc => I, Pos: [31, 54] cc => I, Pos: [59, 67] cc => I, Pos: [59, 67] cc => I, Pos: [64, 73, 80] ccc => cc, Pos: [123, 134, 156] ccc => cc]

Plan: 1
[Pos: [31, 54] cc => I,
 Pos: [59, 67] cc => I,
 Pos: [64, 73, 80] ccc => cc,
 Pos: [123, 134, 156] ccc => cc]
Change: 4, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015621185302734375

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [31, 54] cc => I,
 Pos: [59, 67] cc => I,
 Pos: [64, 73, 80] ccc => cc,
 Pos: [123, 134, 156] ccc => cc]
Change: 4, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [31, 54] cc => I
Apply:  Pos: [59, 67] cc => I
Apply:  Pos: [64, 73, 80] ccc => cc
Apply:  Pos: [123, 134, 156] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 14], [10, 5], [6, 4], [3, 15], [7, 8], [5, 2], [18, 9], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [13, 11], [15, 4], [13, 8], [16, 19], [11, 10], [7, 8], [4, 9], [12, 6], [8, 17], [19, 17], [19, 1], [13, 3], [15, 9], [10, 2], [5, 15], [11, 5], [3, 18], [16, 7], [3, 5], [10, 5], [13, 11], [19, 17], [11, 5], [8, 1], [15, 18], [8, 17], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [19, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.6874005794525146

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[69, 83]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[69, 83]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.5624279975891113

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [69, 83] cc => I, Pos: [69, 83] cc => I]

Plan: 1
[Pos: [69, 83] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [69, 83] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [69, 83] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 14], [10, 5], [6, 4], [3, 15], [7, 8], [5, 2], [18, 9], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [13, 11], [15, 4], [13, 8], [16, 19], [11, 10], [7, 8], [4, 9], [12, 6], [19, 17], [8, 17], [19, 1], [13, 3], [15, 9], [10, 2], [5, 15], [11, 5], [3, 18], [16, 7], [10, 5], [3, 5], [13, 11], [19, 17], [11, 5], [8, 1], [8, 17], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [19, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.5624279975891113

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[55, 66]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[55, 66]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.515688180923462

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [55, 66] cc => I, Pos: [55, 66] cc => I]

Plan: 1
[Pos: [55, 66] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [55, 66] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [55, 66] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 14], [10, 5], [6, 4], [3, 15], [7, 8], [5, 2], [18, 9], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [13, 11], [15, 4], [13, 8], [16, 19], [11, 10], [7, 8], [4, 9], [12, 6], [8, 17], [19, 1], [13, 3], [15, 9], [10, 2], [5, 15], [11, 5], [3, 18], [16, 7], [3, 5], [10, 5], [13, 11], [11, 5], [8, 17], [8, 1], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [19, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.515688180923462

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [147] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 294

Reduced: 
 - size: 123 (45.56%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10935521125793457

[1, 0], [18, 4], [19, 8], [10, 2], [12, 6], [1, 17], [3, 14], [18, 4], [5, 15], [0, 12], [17, 6], [16, 7], [13, 11], [3, 14], [2, 18], [15, 9], [0, 12], [8, 17], [14, 15], [18, 9], [19, 1], [3, 5], [16, 7], [0, 12], [8, 17], [6, 4], [5, 2], [7, 13], [14, 15], [1, 17], [7, 13], [5, 14], [18, 9], [6, 4], [1, 17], [6, 4], [0, 12], [3, 15], [7, 8], [13, 11], [10, 5], [18, 9], [17, 6], [16, 19], [13, 11], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [11, 10], [4, 9], [5, 2], [17, 12], [5, 14], [1, 17], [16, 19], [11, 10], [7, 8], [15, 4], [5, 14], [17, 6], [0, 12], [8, 3], [18, 4], [5, 2], [8, 17], [14, 15], [11, 10], [6, 4], [1, 0], [5, 2], [19, 8], [18, 9], [11, 10], [0, 12], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 15], [14, 6], [18, 9], [16, 7], [11, 10], [2, 18], [0, 12], [15, 4], [13, 8], [16, 19], [3, 14], [13, 11], [2, 18], [7, 8], [5, 15], [4, 9], [12, 6], [3, 14], [1, 0], [19, 17], [11, 5], [8, 17], [19, 1], [13, 3], [14, 6], [18, 4], [0, 12], [11, 5], [0, 12], [10, 2], [15, 9], [17, 6], [7, 3], [11, 2], [5, 15], [7, 3], [17, 14], [18, 4], [11, 5], [17, 12], [19, 8], [15, 18], [14, 6], [16, 7], [3, 5], [19, 8], [17, 14], [11, 10], [18, 4], [7, 13], [0, 12], [3, 15], [17, 12], [7, 13], [11, 5], [18, 4], [3, 15], [10, 5], [19, 17], [13, 11], [8, 1], [18, 4], [3, 15], [18, 4], [8, 17], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [0, 12], [6, 4], [3, 14], [2, 18], [0, 12], [3, 15], [16, 19], [11, 5], [13, 8], [2, 18], [15, 4], [14, 6], [0, 12], [13, 3], [16, 7], [19, 8], [15, 18], [17, 14], [13, 3], [7, 8], [10, 5], [2, 18], [15, 9], [3, 5], [8, 17], [16, 19], [2, 18], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [11, 10], [5, 14], [8, 17], [15, 18], [12, 6], [4, 9], [5, 14], [1, 0], [8, 3], [18, 9], [11, 10], [14, 12], [6, 4], [11, 2], [7, 13], [18, 9], [8, 17], [17, 12], [8, 1], [16, 7], [5, 2], [15, 9], [13, 11], [14, 12], [15, 9], [10, 2], [8, 3], [1, 17], [6, 4], [16, 7], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [15, 9], [14, 12], [11, 2], [16, 19], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [8, 3], [18, 9], [14, 6], [19, 1], [4, 9], [8, 3], [16, 7], [15, 18], [3, 14], [7, 8], [4, 9], [1, 0], [11, 2], [12, 6], [19, 17], [8, 3], [5, 15], [10, 2], [6, 4], [16, 7], [8, 1], [14, 6], [3, 5], [18, 9], [19, 17], [16, 7], [8, 1], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 7]
[6, 13]
[9, 16]
[11, 22]
[16, 23]
[17, 24]
[18, 28]
[27, 30]
[19, 32]
[25, 33]
[29, 34]
[33, 35]
[23, 36]
[32, 41]
[39, 44]
[36, 48]
[43, 57]
[51, 58]
[55, 61]
[53, 66]
[58, 69]
[66, 72]
[69, 75]
[74, 84]
[76, 88]
[87, 94]
[92, 99]
[102, 109]
[108, 110]
[114, 117]
[107, 119]
[122, 127]
[131, 135]
[130, 137]
[133, 138]
[137, 143]
[138, 144]
[143, 145]
[152, 156]
[155, 161]
[156, 164]
[165, 170]
[173, 178]
[190, 195]
[189, 199]
[198, 204]
[191, 205]
[210, 213]
[197, 215]
[201, 217]
[208, 218]
[213, 224]
[177, 227]
[233, 238]
[237, 243]
[226, 245]
[247, 257]
[252, 258]
[253, 259]
[257, 260]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[75, 80, 86]
[82, 89, 96]
[118, 124, 128]
[186, 203, 208]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 71, 76]
[119, 123, 130]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[106, 113, 118]
[111, 115, 129]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 7]
[6, 13]
[9, 16]
[11, 22]
[16, 23]
[17, 24]
[18, 28]
[27, 30]
[19, 32]
[25, 33]
[29, 34]
[33, 35]
[23, 36]
[32, 41]
[39, 44]
[36, 48]
[43, 57]
[51, 58]
[55, 61]
[53, 66]
[58, 69]
[66, 72]
[69, 75]
[74, 84]
[76, 88]
[87, 94]
[92, 99]
[102, 109]
[108, 110]
[114, 117]
[107, 119]
[122, 127]
[131, 135]
[130, 137]
[133, 138]
[137, 143]
[138, 144]
[143, 145]
[152, 156]
[155, 161]
[156, 164]
[165, 170]
[173, 178]
[190, 195]
[189, 199]
[198, 204]
[191, 205]
[210, 213]
[197, 215]
[201, 217]
[208, 218]
[213, 224]
[177, 227]
[233, 238]
[237, 243]
[226, 245]
[247, 257]
[252, 258]
[253, 259]
[257, 260]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.154448986053467

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 7] cc => I, Pos: [1, 7] cc => I, Pos: [6, 13] cc => I, Pos: [6, 13] cc => I, Pos: [9, 16] cc => I, Pos: [9, 16] cc => I, Pos: [11, 22] cc => I, Pos: [11, 22] cc => I, Pos: [16, 23] cc => I, Pos: [16, 23] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [18, 28] cc => I, Pos: [18, 28] cc => I, Pos: [19, 32] cc => I, Pos: [19, 32] cc => I, Pos: [23, 36] cc => I, Pos: [23, 36] cc => I, Pos: [25, 33] cc => I, Pos: [25, 33] cc => I, Pos: [27, 30] cc => I, Pos: [27, 30] cc => I, Pos: [29, 34] cc => I, Pos: [29, 34] cc => I, Pos: [32, 41] cc => I, Pos: [32, 41] cc => I, Pos: [33, 35] cc => I, Pos: [33, 35] cc => I, Pos: [36, 48] cc => I, Pos: [36, 48] cc => I, Pos: [39, 44] cc => I, Pos: [39, 44] cc => I, Pos: [43, 57] cc => I, Pos: [43, 57] cc => I, Pos: [51, 58] cc => I, Pos: [51, 58] cc => I, Pos: [53, 66] cc => I, Pos: [53, 66] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [58, 69] cc => I, Pos: [58, 69] cc => I, Pos: [63, 71, 76] ccc => cc, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [69, 75] cc => I, Pos: [69, 75] cc => I, Pos: [74, 84] cc => I, Pos: [74, 84] cc => I, Pos: [75, 80, 86] ccc => cc, Pos: [76, 88] cc => I, Pos: [76, 88] cc => I, Pos: [82, 89, 96] ccc => cc, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [102, 109] cc => I, Pos: [102, 109] cc => I, Pos: [106, 113, 118] ccc => cc, Pos: [107, 119] cc => I, Pos: [107, 119] cc => I, Pos: [108, 110] cc => I, Pos: [108, 110] cc => I, Pos: [111, 115, 129] ccc => cc, Pos: [114, 117] cc => I, Pos: [114, 117] cc => I, Pos: [118, 124, 128] ccc => cc, Pos: [119, 123, 130] ccc => cc, Pos: [122, 127] cc => I, Pos: [122, 127] cc => I, Pos: [130, 137] cc => I, Pos: [130, 137] cc => I, Pos: [131, 135] cc => I, Pos: [131, 135] cc => I, Pos: [133, 138] cc => I, Pos: [133, 138] cc => I, Pos: [137, 143] cc => I, Pos: [137, 143] cc => I, Pos: [138, 144] cc => I, Pos: [138, 144] cc => I, Pos: [143, 145] cc => I, Pos: [143, 145] cc => I, Pos: [152, 156] cc => I, Pos: [152, 156] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [156, 164] cc => I, Pos: [156, 164] cc => I, Pos: [165, 170] cc => I, Pos: [165, 170] cc => I, Pos: [173, 178] cc => I, Pos: [173, 178] cc => I, Pos: [177, 227] cc => I, Pos: [177, 227] cc => I, Pos: [186, 203, 208] ccc => cc, Pos: [189, 199] cc => I, Pos: [189, 199] cc => I, Pos: [190, 195] cc => I, Pos: [190, 195] cc => I, Pos: [191, 205] cc => I, Pos: [191, 205] cc => I, Pos: [197, 215] cc => I, Pos: [197, 215] cc => I, Pos: [198, 204] cc => I, Pos: [198, 204] cc => I, Pos: [201, 217] cc => I, Pos: [201, 217] cc => I, Pos: [208, 218] cc => I, Pos: [208, 218] cc => I, Pos: [210, 213] cc => I, Pos: [210, 213] cc => I, Pos: [213, 224] cc => I, Pos: [213, 224] cc => I, Pos: [226, 245] cc => I, Pos: [226, 245] cc => I, Pos: [233, 238] cc => I, Pos: [233, 238] cc => I, Pos: [237, 243] cc => I, Pos: [237, 243] cc => I, Pos: [247, 257] cc => I, Pos: [247, 257] cc => I, Pos: [252, 258] cc => I, Pos: [252, 258] cc => I, Pos: [253, 259] cc => I, Pos: [253, 259] cc => I, Pos: [257, 260] cc => I, Pos: [257, 260] cc => I]

--------End Timer [Generate Plans]:  0.015625715255737305

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 7] cc => I,
 Pos: [6, 13] cc => I,
 Pos: [16, 23] cc => I,
 Pos: [11, 22] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [18, 28] cc => I,
 Pos: [19, 32] cc => I,
 Pos: [25, 33] cc => I,
 Pos: [27, 30] cc => I,
 Pos: [29, 34] cc => I,
 Pos: [36, 48] cc => I,
 Pos: [39, 44] cc => I,
 Pos: [43, 57] cc => I,
 Pos: [51, 58] cc => I,
 Pos: [66, 72] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [63, 71, 76] ccc => cc,
 Pos: [69, 75] cc => I,
 Pos: [74, 84] cc => I,
 Pos: [82, 89, 96] ccc => cc,
 Pos: [87, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [106, 113, 118] ccc => cc,
 Pos: [119, 123, 130] ccc => cc,
 Pos: [108, 110] cc => I,
 Pos: [111, 115, 129] ccc => cc,
 Pos: [114, 117] cc => I,
 Pos: [122, 127] cc => I,
 Pos: [131, 135] cc => I,
 Pos: [133, 138] cc => I,
 Pos: [143, 145] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [165, 170] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 227] cc => I,
 Pos: [186, 203, 208] ccc => cc,
 Pos: [189, 199] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [191, 205] cc => I,
 Pos: [197, 215] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 217] cc => I,
 Pos: [213, 224] cc => I,
 Pos: [226, 245] cc => I,
 Pos: [233, 238] cc => I,
 Pos: [237, 243] cc => I,
 Pos: [247, 257] cc => I,
 Pos: [252, 258] cc => I,
 Pos: [253, 259] cc => I]
Change: 51, Saving: 192

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 7] cc => I
Apply:  Pos: [6, 13] cc => I
Apply:  Pos: [16, 23] cc => I
Apply:  Pos: [11, 22] cc => I
Apply:  Pos: [17, 24] cc => I
Apply:  Pos: [18, 28] cc => I
Apply:  Pos: [19, 32] cc => I
Apply:  Pos: [25, 33] cc => I
Apply:  Pos: [27, 30] cc => I
Apply:  Pos: [29, 34] cc => I
Apply:  Pos: [36, 48] cc => I
Apply:  Pos: [39, 44] cc => I
Apply:  Pos: [43, 57] cc => I
Apply:  Pos: [51, 58] cc => I
Apply:  Pos: [66, 72] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [63, 71, 76] ccc => cc
Apply:  Pos: [69, 75] cc => I
Apply:  Pos: [74, 84] cc => I
Apply:  Pos: [82, 89, 96] ccc => cc
Apply:  Pos: [87, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [102, 109] cc => I
Apply:  Pos: [106, 113, 118] ccc => cc
Apply:  Pos: [119, 123, 130] ccc => cc
Apply:  Pos: [108, 110] cc => I
Apply:  Pos: [111, 115, 129] ccc => cc
Apply:  Pos: [114, 117] cc => I
Apply:  Pos: [122, 127] cc => I
Apply:  Pos: [131, 135] cc => I
Apply:  Pos: [133, 138] cc => I
Apply:  Pos: [143, 145] cc => I
Apply:  Pos: [152, 156] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [165, 170] cc => I
Apply:  Pos: [173, 178] cc => I
Apply:  Pos: [177, 227] cc => I
Apply:  Pos: [186, 203, 208] ccc => cc
Apply:  Pos: [189, 199] cc => I
Apply:  Pos: [190, 195] cc => I
Apply:  Pos: [191, 205] cc => I
Apply:  Pos: [197, 215] cc => I
Apply:  Pos: [198, 204] cc => I
Apply:  Pos: [201, 217] cc => I
Apply:  Pos: [213, 224] cc => I
Apply:  Pos: [226, 245] cc => I
Apply:  Pos: [233, 238] cc => I
Apply:  Pos: [237, 243] cc => I
Apply:  Pos: [247, 257] cc => I
Apply:  Pos: [252, 258] cc => I
Apply:  Pos: [253, 259] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [0, 12], [17, 6], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 2], [5, 14], [6, 4], [3, 15], [7, 8], [10, 5], [18, 9], [17, 6], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [4, 9], [5, 2], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [1, 0], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [0, 12], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [11, 10], [0, 12], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [1, 0], [19, 17], [8, 17], [19, 1], [13, 3], [17, 14], [18, 4], [11, 10], [15, 9], [14, 6], [10, 2], [5, 15], [15, 18], [11, 5], [17, 12], [18, 4], [14, 6], [16, 7], [3, 5], [17, 14], [0, 12], [17, 12], [11, 5], [18, 4], [10, 5], [19, 17], [13, 11], [8, 1], [3, 15], [8, 17], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [3, 15], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [0, 12], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [15, 9], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [19, 1], [16, 7], [15, 18], [3, 14], [7, 8], [1, 0], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----End Timer [Execute Mapping]:  5.170074701309204

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 50]
[67, 74]
[72, 78]
[73, 81]
[79, 101]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[7, 15, 20]
[86, 89, 94]
[150, 155, 173]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[14, 18, 27]
[49, 54, 65]
[140, 150, 155]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 50]
[67, 74]
[72, 78]
[73, 81]
[79, 101]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.062685012817383

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 15, 20] ccc => cc, Pos: [14, 18, 27] ccc => cc, Pos: [39, 50] cc => I, Pos: [39, 50] cc => I, Pos: [49, 54, 65] ccc => cc, Pos: [67, 74] cc => I, Pos: [67, 74] cc => I, Pos: [72, 78] cc => I, Pos: [72, 78] cc => I, Pos: [73, 81] cc => I, Pos: [73, 81] cc => I, Pos: [79, 101] cc => I, Pos: [79, 101] cc => I, Pos: [86, 89, 94] ccc => cc, Pos: [140, 150, 155] ccc => cc, Pos: [150, 155, 173] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 15, 20] ccc => cc,
 Pos: [14, 18, 27] ccc => cc,
 Pos: [39, 50] cc => I,
 Pos: [49, 54, 65] ccc => cc,
 Pos: [67, 74] cc => I,
 Pos: [72, 78] cc => I,
 Pos: [73, 81] cc => I,
 Pos: [79, 101] cc => I,
 Pos: [86, 89, 94] ccc => cc,
 Pos: [150, 155, 173] ccc => cc]
Change: 10, Saving: 30

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 15, 20] ccc => cc
Apply:  Pos: [14, 18, 27] ccc => cc
Apply:  Pos: [39, 50] cc => I
Apply:  Pos: [49, 54, 65] ccc => cc
Apply:  Pos: [67, 74] cc => I
Apply:  Pos: [72, 78] cc => I
Apply:  Pos: [73, 81] cc => I
Apply:  Pos: [79, 101] cc => I
Apply:  Pos: [86, 89, 94] ccc => cc
Apply:  Pos: [150, 155, 173] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [0, 12], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 14], [10, 5], [6, 4], [3, 15], [7, 8], [5, 2], [18, 9], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [1, 0], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [13, 11], [15, 4], [13, 8], [16, 19], [11, 10], [7, 8], [4, 9], [12, 6], [1, 0], [8, 17], [19, 1], [19, 17], [13, 3], [17, 14], [18, 4], [15, 9], [10, 2], [5, 15], [15, 18], [11, 5], [16, 7], [3, 5], [17, 14], [11, 5], [10, 5], [19, 17], [13, 11], [8, 1], [3, 18], [8, 17], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [15, 9], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [19, 0], [16, 7], [15, 18], [3, 14], [7, 8], [1, 0], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  3.062685012817383

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 54]
[59, 68]
[77, 90]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[70, 72, 76]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 54]
[59, 68]
[77, 90]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7346394062042236

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [31, 54] cc => I, Pos: [31, 54] cc => I, Pos: [59, 68] cc => I, Pos: [59, 68] cc => I, Pos: [70, 72, 76] ccc => cc, Pos: [77, 90] cc => I, Pos: [77, 90] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [31, 54] cc => I,
 Pos: [59, 68] cc => I,
 Pos: [70, 72, 76] ccc => cc,
 Pos: [77, 90] cc => I]
Change: 4, Saving: 14

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [31, 54] cc => I
Apply:  Pos: [59, 68] cc => I
Apply:  Pos: [70, 72, 76] ccc => cc
Apply:  Pos: [77, 90] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [0, 12], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 14], [10, 5], [6, 4], [3, 15], [7, 8], [5, 2], [18, 9], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [13, 11], [15, 4], [13, 8], [16, 19], [11, 10], [7, 8], [4, 9], [12, 6], [8, 17], [19, 17], [19, 1], [13, 3], [18, 4], [15, 9], [10, 2], [5, 15], [15, 18], [11, 5], [16, 7], [3, 5], [10, 5], [13, 11], [19, 17], [11, 5], [8, 1], [3, 18], [8, 17], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [15, 9], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [19, 0], [16, 7], [15, 18], [3, 14], [7, 8], [1, 0], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.7346394062042236

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.5782854557037354

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [0, 12], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 14], [10, 5], [6, 4], [3, 15], [7, 8], [5, 2], [18, 9], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [13, 11], [15, 4], [13, 8], [16, 19], [11, 10], [7, 8], [4, 9], [12, 6], [19, 17], [8, 17], [19, 1], [13, 3], [18, 4], [15, 9], [10, 2], [5, 15], [15, 18], [11, 5], [16, 7], [10, 5], [3, 5], [13, 11], [19, 17], [11, 5], [8, 1], [3, 18], [8, 17], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [15, 9], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [19, 0], [16, 7], [15, 18], [3, 14], [7, 8], [1, 0], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.5782854557037354

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [152] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 304

Reduced: 
 - size: 118 (43.70%)
 - cycle: 236 (43.70%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09404850006103516

[1, 0], [18, 4], [19, 8], [10, 2], [12, 6], [1, 17], [3, 14], [18, 4], [5, 15], [0, 12], [17, 6], [16, 7], [13, 11], [3, 14], [2, 18], [15, 9], [0, 12], [8, 17], [14, 15], [18, 9], [19, 1], [3, 5], [16, 7], [0, 12], [8, 17], [6, 4], [5, 2], [7, 13], [14, 15], [1, 17], [7, 13], [5, 14], [18, 9], [6, 4], [1, 17], [6, 4], [0, 12], [3, 15], [7, 8], [13, 11], [10, 5], [18, 9], [17, 6], [16, 19], [13, 11], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [11, 10], [4, 9], [5, 2], [17, 12], [5, 14], [1, 17], [16, 19], [11, 10], [7, 8], [15, 4], [5, 14], [17, 6], [0, 12], [8, 3], [18, 4], [5, 2], [8, 17], [14, 15], [11, 10], [6, 4], [1, 0], [5, 2], [19, 8], [18, 9], [11, 10], [0, 12], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 15], [14, 6], [18, 9], [16, 7], [11, 10], [2, 18], [0, 12], [15, 4], [13, 8], [16, 19], [3, 14], [13, 11], [2, 18], [7, 8], [5, 15], [4, 9], [12, 6], [3, 14], [1, 0], [19, 17], [11, 5], [8, 17], [19, 1], [13, 3], [14, 6], [18, 4], [0, 12], [11, 5], [0, 12], [10, 2], [15, 9], [17, 6], [7, 3], [11, 2], [5, 15], [7, 3], [17, 14], [18, 4], [11, 5], [17, 12], [19, 8], [15, 18], [14, 6], [16, 7], [3, 5], [19, 8], [17, 14], [11, 10], [18, 4], [7, 13], [0, 12], [3, 15], [17, 12], [7, 13], [11, 5], [18, 4], [3, 15], [10, 5], [19, 17], [13, 11], [8, 1], [18, 4], [3, 15], [18, 4], [8, 17], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [0, 12], [6, 4], [3, 14], [2, 18], [0, 12], [3, 15], [16, 19], [11, 5], [13, 8], [2, 18], [15, 4], [14, 6], [0, 12], [13, 3], [16, 7], [19, 8], [15, 18], [17, 14], [13, 3], [7, 8], [10, 5], [2, 18], [15, 9], [3, 5], [8, 17], [16, 19], [2, 18], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [11, 10], [5, 14], [8, 17], [15, 18], [12, 6], [4, 9], [5, 14], [1, 0], [8, 3], [18, 9], [11, 10], [14, 12], [6, 4], [11, 2], [7, 13], [18, 9], [8, 17], [17, 12], [8, 1], [16, 7], [5, 2], [15, 9], [13, 11], [14, 12], [15, 9], [10, 2], [8, 3], [1, 17], [6, 4], [16, 7], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [15, 9], [14, 12], [11, 2], [16, 19], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [8, 3], [18, 9], [14, 6], [19, 1], [4, 9], [8, 3], [16, 7], [15, 18], [3, 14], [7, 8], [4, 9], [1, 0], [11, 2], [12, 6], [19, 17], [8, 3], [5, 15], [10, 2], [6, 4], [16, 7], [8, 1], [14, 6], [3, 5], [18, 9], [19, 17], [16, 7], [8, 1], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 7]
[6, 13]
[9, 16]
[11, 22]
[16, 23]
[17, 24]
[18, 28]
[27, 30]
[19, 32]
[25, 33]
[29, 34]
[33, 35]
[23, 36]
[32, 41]
[39, 44]
[36, 48]
[43, 57]
[51, 58]
[55, 61]
[53, 66]
[58, 69]
[66, 72]
[69, 75]
[74, 84]
[76, 88]
[87, 94]
[92, 99]
[102, 109]
[108, 110]
[114, 117]
[107, 119]
[122, 127]
[131, 135]
[130, 137]
[133, 138]
[137, 143]
[138, 144]
[143, 145]
[152, 156]
[155, 161]
[156, 164]
[165, 170]
[173, 178]
[190, 195]
[189, 199]
[198, 204]
[191, 205]
[210, 213]
[197, 215]
[201, 217]
[208, 218]
[213, 224]
[177, 227]
[233, 238]
[237, 243]
[226, 245]
[247, 257]
[252, 258]
[253, 259]
[257, 260]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[75, 80, 86]
[82, 89, 96]
[118, 124, 128]
[186, 203, 208]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 71, 76]
[119, 123, 130]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[106, 113, 118]
[111, 115, 129]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 7]
[6, 13]
[9, 16]
[11, 22]
[16, 23]
[17, 24]
[18, 28]
[27, 30]
[19, 32]
[25, 33]
[29, 34]
[33, 35]
[23, 36]
[32, 41]
[39, 44]
[36, 48]
[43, 57]
[51, 58]
[55, 61]
[53, 66]
[58, 69]
[66, 72]
[69, 75]
[74, 84]
[76, 88]
[87, 94]
[92, 99]
[102, 109]
[108, 110]
[114, 117]
[107, 119]
[122, 127]
[131, 135]
[130, 137]
[133, 138]
[137, 143]
[138, 144]
[143, 145]
[152, 156]
[155, 161]
[156, 164]
[165, 170]
[173, 178]
[190, 195]
[189, 199]
[198, 204]
[191, 205]
[210, 213]
[197, 215]
[201, 217]
[208, 218]
[213, 224]
[177, 227]
[233, 238]
[237, 243]
[226, 245]
[247, 257]
[252, 258]
[253, 259]
[257, 260]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.254227161407471

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 7] cc => I, Pos: [1, 7] cc => I, Pos: [6, 13] cc => I, Pos: [6, 13] cc => I, Pos: [9, 16] cc => I, Pos: [9, 16] cc => I, Pos: [11, 22] cc => I, Pos: [11, 22] cc => I, Pos: [16, 23] cc => I, Pos: [16, 23] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [18, 28] cc => I, Pos: [18, 28] cc => I, Pos: [19, 32] cc => I, Pos: [19, 32] cc => I, Pos: [23, 36] cc => I, Pos: [23, 36] cc => I, Pos: [25, 33] cc => I, Pos: [25, 33] cc => I, Pos: [27, 30] cc => I, Pos: [27, 30] cc => I, Pos: [29, 34] cc => I, Pos: [29, 34] cc => I, Pos: [32, 41] cc => I, Pos: [32, 41] cc => I, Pos: [33, 35] cc => I, Pos: [33, 35] cc => I, Pos: [36, 48] cc => I, Pos: [36, 48] cc => I, Pos: [39, 44] cc => I, Pos: [39, 44] cc => I, Pos: [43, 57] cc => I, Pos: [43, 57] cc => I, Pos: [51, 58] cc => I, Pos: [51, 58] cc => I, Pos: [53, 66] cc => I, Pos: [53, 66] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [58, 69] cc => I, Pos: [58, 69] cc => I, Pos: [63, 71, 76] ccc => cc, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [69, 75] cc => I, Pos: [69, 75] cc => I, Pos: [74, 84] cc => I, Pos: [74, 84] cc => I, Pos: [75, 80, 86] ccc => cc, Pos: [76, 88] cc => I, Pos: [76, 88] cc => I, Pos: [82, 89, 96] ccc => cc, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [102, 109] cc => I, Pos: [102, 109] cc => I, Pos: [106, 113, 118] ccc => cc, Pos: [107, 119] cc => I, Pos: [107, 119] cc => I, Pos: [108, 110] cc => I, Pos: [108, 110] cc => I, Pos: [111, 115, 129] ccc => cc, Pos: [114, 117] cc => I, Pos: [114, 117] cc => I, Pos: [118, 124, 128] ccc => cc, Pos: [119, 123, 130] ccc => cc, Pos: [122, 127] cc => I, Pos: [122, 127] cc => I, Pos: [130, 137] cc => I, Pos: [130, 137] cc => I, Pos: [131, 135] cc => I, Pos: [131, 135] cc => I, Pos: [133, 138] cc => I, Pos: [133, 138] cc => I, Pos: [137, 143] cc => I, Pos: [137, 143] cc => I, Pos: [138, 144] cc => I, Pos: [138, 144] cc => I, Pos: [143, 145] cc => I, Pos: [143, 145] cc => I, Pos: [152, 156] cc => I, Pos: [152, 156] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [156, 164] cc => I, Pos: [156, 164] cc => I, Pos: [165, 170] cc => I, Pos: [165, 170] cc => I, Pos: [173, 178] cc => I, Pos: [173, 178] cc => I, Pos: [177, 227] cc => I, Pos: [177, 227] cc => I, Pos: [186, 203, 208] ccc => cc, Pos: [189, 199] cc => I, Pos: [189, 199] cc => I, Pos: [190, 195] cc => I, Pos: [190, 195] cc => I, Pos: [191, 205] cc => I, Pos: [191, 205] cc => I, Pos: [197, 215] cc => I, Pos: [197, 215] cc => I, Pos: [198, 204] cc => I, Pos: [198, 204] cc => I, Pos: [201, 217] cc => I, Pos: [201, 217] cc => I, Pos: [208, 218] cc => I, Pos: [208, 218] cc => I, Pos: [210, 213] cc => I, Pos: [210, 213] cc => I, Pos: [213, 224] cc => I, Pos: [213, 224] cc => I, Pos: [226, 245] cc => I, Pos: [226, 245] cc => I, Pos: [233, 238] cc => I, Pos: [233, 238] cc => I, Pos: [237, 243] cc => I, Pos: [237, 243] cc => I, Pos: [247, 257] cc => I, Pos: [247, 257] cc => I, Pos: [252, 258] cc => I, Pos: [252, 258] cc => I, Pos: [253, 259] cc => I, Pos: [253, 259] cc => I, Pos: [257, 260] cc => I, Pos: [257, 260] cc => I]

--------End Timer [Generate Plans]:  0.14062952995300293

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 7] cc => I,
 Pos: [6, 13] cc => I,
 Pos: [9, 16] cc => I,
 Pos: [11, 22] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [18, 28] cc => I,
 Pos: [32, 41] cc => I,
 Pos: [36, 48] cc => I,
 Pos: [33, 35] cc => I,
 Pos: [27, 30] cc => I,
 Pos: [29, 34] cc => I,
 Pos: [39, 44] cc => I,
 Pos: [43, 57] cc => I,
 Pos: [58, 69] cc => I,
 Pos: [66, 72] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [76, 88] cc => I,
 Pos: [74, 84] cc => I,
 Pos: [75, 80, 86] ccc => cc,
 Pos: [82, 89, 96] ccc => cc,
 Pos: [87, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [118, 124, 128] ccc => cc,
 Pos: [107, 119] cc => I,
 Pos: [108, 110] cc => I,
 Pos: [111, 115, 129] ccc => cc,
 Pos: [114, 117] cc => I,
 Pos: [122, 127] cc => I,
 Pos: [130, 137] cc => I,
 Pos: [131, 135] cc => I,
 Pos: [138, 144] cc => I,
 Pos: [143, 145] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [165, 170] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 227] cc => I,
 Pos: [208, 218] cc => I,
 Pos: [189, 199] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [191, 205] cc => I,
 Pos: [197, 215] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 217] cc => I,
 Pos: [213, 224] cc => I,
 Pos: [226, 245] cc => I,
 Pos: [233, 238] cc => I,
 Pos: [237, 243] cc => I,
 Pos: [247, 257] cc => I,
 Pos: [252, 258] cc => I,
 Pos: [253, 259] cc => I]
Change: 52, Saving: 53

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 7] cc => I
Apply:  Pos: [6, 13] cc => I
Apply:  Pos: [9, 16] cc => I
Apply:  Pos: [11, 22] cc => I
Apply:  Pos: [17, 24] cc => I
Apply:  Pos: [18, 28] cc => I
Apply:  Pos: [32, 41] cc => I
Apply:  Pos: [36, 48] cc => I
Apply:  Pos: [33, 35] cc => I
Apply:  Pos: [27, 30] cc => I
Apply:  Pos: [29, 34] cc => I
Apply:  Pos: [39, 44] cc => I
Apply:  Pos: [43, 57] cc => I
Apply:  Pos: [58, 69] cc => I
Apply:  Pos: [66, 72] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [76, 88] cc => I
Apply:  Pos: [74, 84] cc => I
Apply:  Pos: [75, 80, 86] ccc => cc
Apply:  Pos: [82, 89, 96] ccc => cc
Apply:  Pos: [87, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [102, 109] cc => I
Apply:  Pos: [118, 124, 128] ccc => cc
Apply:  Pos: [107, 119] cc => I
Apply:  Pos: [108, 110] cc => I
Apply:  Pos: [111, 115, 129] ccc => cc
Apply:  Pos: [114, 117] cc => I
Apply:  Pos: [122, 127] cc => I
Apply:  Pos: [130, 137] cc => I
Apply:  Pos: [131, 135] cc => I
Apply:  Pos: [138, 144] cc => I
Apply:  Pos: [143, 145] cc => I
Apply:  Pos: [152, 156] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [165, 170] cc => I
Apply:  Pos: [173, 178] cc => I
Apply:  Pos: [177, 227] cc => I
Apply:  Pos: [208, 218] cc => I
Apply:  Pos: [189, 199] cc => I
Apply:  Pos: [190, 195] cc => I
Apply:  Pos: [191, 205] cc => I
Apply:  Pos: [197, 215] cc => I
Apply:  Pos: [198, 204] cc => I
Apply:  Pos: [201, 217] cc => I
Apply:  Pos: [213, 224] cc => I
Apply:  Pos: [226, 245] cc => I
Apply:  Pos: [233, 238] cc => I
Apply:  Pos: [237, 243] cc => I
Apply:  Pos: [247, 257] cc => I
Apply:  Pos: [252, 258] cc => I
Apply:  Pos: [253, 259] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 6], [13, 11], [2, 18], [15, 9], [18, 9], [19, 1], [3, 5], [0, 12], [6, 4], [5, 2], [5, 14], [3, 15], [7, 8], [10, 5], [17, 6], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [11, 10], [4, 9], [5, 2], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [0, 12], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [1, 0], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [1, 0], [19, 17], [8, 17], [19, 1], [13, 3], [14, 6], [11, 10], [15, 9], [17, 6], [10, 2], [5, 15], [17, 6], [11, 5], [17, 12], [15, 18], [14, 6], [16, 7], [3, 5], [0, 12], [3, 15], [17, 12], [11, 5], [10, 5], [19, 17], [13, 11], [8, 1], [8, 17], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [3, 15], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [0, 12], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [15, 9], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [19, 1], [16, 7], [15, 18], [3, 14], [7, 8], [1, 0], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----End Timer [Execute Mapping]:  5.394856691360474

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[40, 58]
[66, 69]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 14, 20]
[77, 86, 91]
[146, 151, 169]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[80, 82, 85]
[72, 77, 86]
[136, 146, 151]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[40, 58]
[66, 69]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.014495849609375

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 14, 20] ccc => cc, Pos: [40, 58] cc => I, Pos: [40, 58] cc => I, Pos: [66, 69] cc => I, Pos: [66, 69] cc => I, Pos: [72, 77, 86] ccc => cc, Pos: [77, 86, 91] ccc => cc, Pos: [80, 82, 85] ccc => cc, Pos: [136, 146, 151] ccc => cc, Pos: [146, 151, 169] ccc => cc]

--------End Timer [Generate Plans]:  0.015625

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 14, 20] ccc => cc,
 Pos: [40, 58] cc => I,
 Pos: [66, 69] cc => I,
 Pos: [77, 86, 91] ccc => cc,
 Pos: [80, 82, 85] ccc => cc,
 Pos: [146, 151, 169] ccc => cc]
Change: 6, Saving: 6

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 14, 20] ccc => cc
Apply:  Pos: [40, 58] cc => I
Apply:  Pos: [66, 69] cc => I
Apply:  Pos: [77, 86, 91] ccc => cc
Apply:  Pos: [80, 82, 85] ccc => cc
Apply:  Pos: [146, 151, 169] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [18, 9], [15, 9], [19, 1], [3, 5], [0, 12], [6, 4], [5, 14], [5, 2], [3, 15], [7, 8], [10, 5], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [11, 10], [4, 9], [5, 2], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [0, 12], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [8, 17], [19, 1], [19, 17], [13, 3], [14, 6], [11, 10], [15, 9], [10, 2], [5, 15], [11, 5], [17, 12], [15, 18], [14, 6], [16, 7], [3, 5], [0, 12], [3, 18], [17, 12], [10, 5], [13, 11], [19, 17], [11, 5], [8, 17], [8, 1], [15, 18], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [0, 12], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [15, 9], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [19, 0], [16, 7], [15, 18], [3, 14], [7, 8], [1, 0], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  3.030120849609375

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[60, 68]
[80, 94]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[60, 68]
[80, 94]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.812910795211792

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [60, 68] cc => I, Pos: [60, 68] cc => I, Pos: [80, 94] cc => I, Pos: [80, 94] cc => I]

--------End Timer [Generate Plans]:  0.015611410140991211

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [60, 68] cc => I, Pos: [80, 94] cc => I]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [60, 68] cc => I
Apply:  Pos: [80, 94] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [18, 9], [19, 1], [3, 5], [0, 12], [6, 4], [5, 2], [5, 14], [3, 15], [7, 8], [10, 5], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [11, 10], [4, 9], [5, 2], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [0, 12], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [8, 17], [19, 17], [19, 1], [13, 3], [11, 10], [15, 9], [10, 2], [5, 15], [11, 5], [17, 12], [15, 18], [16, 7], [3, 5], [0, 12], [3, 18], [17, 12], [10, 5], [13, 11], [19, 17], [11, 5], [8, 1], [8, 17], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [0, 12], [16, 7], [19, 8], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [15, 9], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [19, 0], [16, 7], [15, 18], [3, 14], [7, 8], [1, 0], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.828522205352783

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7348365783691406

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [18, 9], [15, 9], [19, 1], [3, 5], [0, 12], [6, 4], [5, 14], [5, 2], [3, 15], [7, 8], [10, 5], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [11, 10], [4, 9], [5, 2], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [0, 12], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [19, 17], [8, 17], [19, 1], [13, 3], [11, 10], [15, 9], [10, 2], [5, 15], [11, 5], [17, 12], [15, 18], [16, 7], [3, 5], [0, 12], [3, 18], [17, 12], [10, 5], [13, 11], [19, 17], [11, 5], [8, 17], [8, 1], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [0, 12], [16, 7], [19, 8], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [15, 9], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [19, 0], [16, 7], [15, 18], [3, 14], [7, 8], [1, 0], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.7348365783691406

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [158] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 316

Reduced: 
 - size: 112 (41.48%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.15616917610168457

[1, 0], [18, 4], [19, 8], [10, 2], [12, 6], [1, 17], [3, 14], [18, 4], [5, 15], [0, 12], [17, 6], [16, 7], [13, 11], [3, 14], [2, 18], [15, 9], [0, 12], [8, 17], [14, 15], [18, 9], [19, 1], [3, 5], [16, 7], [0, 12], [8, 17], [6, 4], [5, 2], [7, 13], [14, 15], [1, 17], [7, 13], [5, 14], [18, 9], [6, 4], [1, 17], [6, 4], [0, 12], [3, 15], [7, 8], [13, 11], [10, 5], [18, 9], [17, 6], [16, 19], [13, 11], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [11, 10], [4, 9], [5, 2], [17, 12], [5, 14], [1, 17], [16, 19], [11, 10], [7, 8], [15, 4], [5, 14], [17, 6], [0, 12], [8, 3], [18, 4], [5, 2], [8, 17], [14, 15], [11, 10], [6, 4], [1, 0], [5, 2], [19, 8], [18, 9], [11, 10], [0, 12], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 15], [14, 6], [18, 9], [16, 7], [11, 10], [2, 18], [0, 12], [15, 4], [13, 8], [16, 19], [3, 14], [13, 11], [2, 18], [7, 8], [5, 15], [4, 9], [12, 6], [3, 14], [1, 0], [19, 17], [11, 5], [8, 17], [19, 1], [13, 3], [14, 6], [18, 4], [0, 12], [11, 5], [0, 12], [10, 2], [15, 9], [17, 6], [7, 3], [11, 2], [5, 15], [7, 3], [17, 14], [18, 4], [11, 5], [17, 12], [19, 8], [15, 18], [14, 6], [16, 7], [3, 5], [19, 8], [17, 14], [11, 10], [18, 4], [7, 13], [0, 12], [3, 15], [17, 12], [7, 13], [11, 5], [18, 4], [3, 15], [10, 5], [19, 17], [13, 11], [8, 1], [18, 4], [3, 15], [18, 4], [8, 17], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [0, 12], [6, 4], [3, 14], [2, 18], [0, 12], [3, 15], [16, 19], [11, 5], [13, 8], [2, 18], [15, 4], [14, 6], [0, 12], [13, 3], [16, 7], [19, 8], [15, 18], [17, 14], [13, 3], [7, 8], [10, 5], [2, 18], [15, 9], [3, 5], [8, 17], [16, 19], [2, 18], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [11, 10], [5, 14], [8, 17], [15, 18], [12, 6], [4, 9], [5, 14], [1, 0], [8, 3], [18, 9], [11, 10], [14, 12], [6, 4], [11, 2], [7, 13], [18, 9], [8, 17], [17, 12], [8, 1], [16, 7], [5, 2], [15, 9], [13, 11], [14, 12], [15, 9], [10, 2], [8, 3], [1, 17], [6, 4], [16, 7], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [15, 9], [14, 12], [11, 2], [16, 19], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [8, 3], [18, 9], [14, 6], [19, 1], [4, 9], [8, 3], [16, 7], [15, 18], [3, 14], [7, 8], [4, 9], [1, 0], [11, 2], [12, 6], [19, 17], [8, 3], [5, 15], [10, 2], [6, 4], [16, 7], [8, 1], [14, 6], [3, 5], [18, 9], [19, 17], [16, 7], [8, 1], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 7]
[6, 13]
[9, 16]
[11, 22]
[16, 23]
[17, 24]
[18, 28]
[27, 30]
[19, 32]
[25, 33]
[29, 34]
[33, 35]
[23, 36]
[32, 41]
[39, 44]
[36, 48]
[43, 57]
[51, 58]
[55, 61]
[53, 66]
[58, 69]
[66, 72]
[69, 75]
[74, 84]
[76, 88]
[87, 94]
[92, 99]
[102, 109]
[108, 110]
[114, 117]
[107, 119]
[122, 127]
[131, 135]
[130, 137]
[133, 138]
[137, 143]
[138, 144]
[143, 145]
[152, 156]
[155, 161]
[156, 164]
[165, 170]
[173, 178]
[190, 195]
[189, 199]
[198, 204]
[191, 205]
[210, 213]
[197, 215]
[201, 217]
[208, 218]
[213, 224]
[177, 227]
[233, 238]
[237, 243]
[226, 245]
[247, 257]
[252, 258]
[253, 259]
[257, 260]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[75, 80, 86]
[82, 89, 96]
[118, 124, 128]
[186, 203, 208]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 71, 76]
[119, 123, 130]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[106, 113, 118]
[111, 115, 129]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 7]
[6, 13]
[9, 16]
[11, 22]
[16, 23]
[17, 24]
[18, 28]
[27, 30]
[19, 32]
[25, 33]
[29, 34]
[33, 35]
[23, 36]
[32, 41]
[39, 44]
[36, 48]
[43, 57]
[51, 58]
[55, 61]
[53, 66]
[58, 69]
[66, 72]
[69, 75]
[74, 84]
[76, 88]
[87, 94]
[92, 99]
[102, 109]
[108, 110]
[114, 117]
[107, 119]
[122, 127]
[131, 135]
[130, 137]
[133, 138]
[137, 143]
[138, 144]
[143, 145]
[152, 156]
[155, 161]
[156, 164]
[165, 170]
[173, 178]
[190, 195]
[189, 199]
[198, 204]
[191, 205]
[210, 213]
[197, 215]
[201, 217]
[208, 218]
[213, 224]
[177, 227]
[233, 238]
[237, 243]
[226, 245]
[247, 257]
[252, 258]
[253, 259]
[257, 260]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.218764066696167

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 7] cc => I, Pos: [1, 7] cc => I, Pos: [6, 13] cc => I, Pos: [6, 13] cc => I, Pos: [9, 16] cc => I, Pos: [9, 16] cc => I, Pos: [11, 22] cc => I, Pos: [11, 22] cc => I, Pos: [16, 23] cc => I, Pos: [16, 23] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [18, 28] cc => I, Pos: [18, 28] cc => I, Pos: [19, 32] cc => I, Pos: [19, 32] cc => I, Pos: [23, 36] cc => I, Pos: [23, 36] cc => I, Pos: [25, 33] cc => I, Pos: [25, 33] cc => I, Pos: [27, 30] cc => I, Pos: [27, 30] cc => I, Pos: [29, 34] cc => I, Pos: [29, 34] cc => I, Pos: [32, 41] cc => I, Pos: [32, 41] cc => I, Pos: [33, 35] cc => I, Pos: [33, 35] cc => I, Pos: [36, 48] cc => I, Pos: [36, 48] cc => I, Pos: [39, 44] cc => I, Pos: [39, 44] cc => I, Pos: [43, 57] cc => I, Pos: [43, 57] cc => I, Pos: [51, 58] cc => I, Pos: [51, 58] cc => I, Pos: [53, 66] cc => I, Pos: [53, 66] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [58, 69] cc => I, Pos: [58, 69] cc => I, Pos: [63, 71, 76] ccc => cc, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [69, 75] cc => I, Pos: [69, 75] cc => I, Pos: [74, 84] cc => I, Pos: [74, 84] cc => I, Pos: [75, 80, 86] ccc => cc, Pos: [76, 88] cc => I, Pos: [76, 88] cc => I, Pos: [82, 89, 96] ccc => cc, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [102, 109] cc => I, Pos: [102, 109] cc => I, Pos: [106, 113, 118] ccc => cc, Pos: [107, 119] cc => I, Pos: [107, 119] cc => I, Pos: [108, 110] cc => I, Pos: [108, 110] cc => I, Pos: [111, 115, 129] ccc => cc, Pos: [114, 117] cc => I, Pos: [114, 117] cc => I, Pos: [118, 124, 128] ccc => cc, Pos: [119, 123, 130] ccc => cc, Pos: [122, 127] cc => I, Pos: [122, 127] cc => I, Pos: [130, 137] cc => I, Pos: [130, 137] cc => I, Pos: [131, 135] cc => I, Pos: [131, 135] cc => I, Pos: [133, 138] cc => I, Pos: [133, 138] cc => I, Pos: [137, 143] cc => I, Pos: [137, 143] cc => I, Pos: [138, 144] cc => I, Pos: [138, 144] cc => I, Pos: [143, 145] cc => I, Pos: [143, 145] cc => I, Pos: [152, 156] cc => I, Pos: [152, 156] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [156, 164] cc => I, Pos: [156, 164] cc => I, Pos: [165, 170] cc => I, Pos: [165, 170] cc => I, Pos: [173, 178] cc => I, Pos: [173, 178] cc => I, Pos: [177, 227] cc => I, Pos: [177, 227] cc => I, Pos: [186, 203, 208] ccc => cc, Pos: [189, 199] cc => I, Pos: [189, 199] cc => I, Pos: [190, 195] cc => I, Pos: [190, 195] cc => I, Pos: [191, 205] cc => I, Pos: [191, 205] cc => I, Pos: [197, 215] cc => I, Pos: [197, 215] cc => I, Pos: [198, 204] cc => I, Pos: [198, 204] cc => I, Pos: [201, 217] cc => I, Pos: [201, 217] cc => I, Pos: [208, 218] cc => I, Pos: [208, 218] cc => I, Pos: [210, 213] cc => I, Pos: [210, 213] cc => I, Pos: [213, 224] cc => I, Pos: [213, 224] cc => I, Pos: [226, 245] cc => I, Pos: [226, 245] cc => I, Pos: [233, 238] cc => I, Pos: [233, 238] cc => I, Pos: [237, 243] cc => I, Pos: [237, 243] cc => I, Pos: [247, 257] cc => I, Pos: [247, 257] cc => I, Pos: [252, 258] cc => I, Pos: [252, 258] cc => I, Pos: [253, 259] cc => I, Pos: [253, 259] cc => I, Pos: [257, 260] cc => I, Pos: [257, 260] cc => I]

--------End Timer [Generate Plans]:  0.12499046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 7] cc => I,
 Pos: [6, 13] cc => I,
 Pos: [9, 16] cc => I,
 Pos: [11, 22] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [18, 28] cc => I,
 Pos: [32, 41] cc => I,
 Pos: [36, 48] cc => I,
 Pos: [33, 35] cc => I,
 Pos: [27, 30] cc => I,
 Pos: [29, 34] cc => I,
 Pos: [39, 44] cc => I,
 Pos: [43, 57] cc => I,
 Pos: [51, 58] cc => I,
 Pos: [53, 66] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [63, 71, 76] ccc => cc,
 Pos: [69, 75] cc => I,
 Pos: [74, 84] cc => I,
 Pos: [82, 89, 96] ccc => cc,
 Pos: [87, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [118, 124, 128] ccc => cc,
 Pos: [107, 119] cc => I,
 Pos: [108, 110] cc => I,
 Pos: [111, 115, 129] ccc => cc,
 Pos: [114, 117] cc => I,
 Pos: [122, 127] cc => I,
 Pos: [130, 137] cc => I,
 Pos: [131, 135] cc => I,
 Pos: [138, 144] cc => I,
 Pos: [143, 145] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [165, 170] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 227] cc => I,
 Pos: [208, 218] cc => I,
 Pos: [189, 199] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [191, 205] cc => I,
 Pos: [197, 215] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 217] cc => I,
 Pos: [213, 224] cc => I,
 Pos: [226, 245] cc => I,
 Pos: [233, 238] cc => I,
 Pos: [237, 243] cc => I,
 Pos: [247, 257] cc => I,
 Pos: [252, 258] cc => I,
 Pos: [253, 259] cc => I]
Change: 52, Saving: 52

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 7] cc => I
Apply:  Pos: [6, 13] cc => I
Apply:  Pos: [9, 16] cc => I
Apply:  Pos: [11, 22] cc => I
Apply:  Pos: [17, 24] cc => I
Apply:  Pos: [18, 28] cc => I
Apply:  Pos: [32, 41] cc => I
Apply:  Pos: [36, 48] cc => I
Apply:  Pos: [33, 35] cc => I
Apply:  Pos: [27, 30] cc => I
Apply:  Pos: [29, 34] cc => I
Apply:  Pos: [39, 44] cc => I
Apply:  Pos: [43, 57] cc => I
Apply:  Pos: [51, 58] cc => I
Apply:  Pos: [53, 66] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [63, 71, 76] ccc => cc
Apply:  Pos: [69, 75] cc => I
Apply:  Pos: [74, 84] cc => I
Apply:  Pos: [82, 89, 96] ccc => cc
Apply:  Pos: [87, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [102, 109] cc => I
Apply:  Pos: [118, 124, 128] ccc => cc
Apply:  Pos: [107, 119] cc => I
Apply:  Pos: [108, 110] cc => I
Apply:  Pos: [111, 115, 129] ccc => cc
Apply:  Pos: [114, 117] cc => I
Apply:  Pos: [122, 127] cc => I
Apply:  Pos: [130, 137] cc => I
Apply:  Pos: [131, 135] cc => I
Apply:  Pos: [138, 144] cc => I
Apply:  Pos: [143, 145] cc => I
Apply:  Pos: [152, 156] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [165, 170] cc => I
Apply:  Pos: [173, 178] cc => I
Apply:  Pos: [177, 227] cc => I
Apply:  Pos: [208, 218] cc => I
Apply:  Pos: [189, 199] cc => I
Apply:  Pos: [190, 195] cc => I
Apply:  Pos: [191, 205] cc => I
Apply:  Pos: [197, 215] cc => I
Apply:  Pos: [198, 204] cc => I
Apply:  Pos: [201, 217] cc => I
Apply:  Pos: [213, 224] cc => I
Apply:  Pos: [226, 245] cc => I
Apply:  Pos: [233, 238] cc => I
Apply:  Pos: [237, 243] cc => I
Apply:  Pos: [247, 257] cc => I
Apply:  Pos: [252, 258] cc => I
Apply:  Pos: [253, 259] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 6], [13, 11], [2, 18], [15, 9], [18, 9], [19, 1], [3, 5], [0, 12], [6, 4], [5, 2], [5, 14], [3, 15], [7, 8], [10, 5], [17, 6], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [1, 0], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [0, 12], [5, 2], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [11, 10], [0, 12], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [1, 0], [19, 17], [8, 17], [19, 1], [13, 3], [14, 6], [11, 10], [15, 9], [17, 6], [10, 2], [5, 15], [17, 6], [11, 5], [17, 12], [15, 18], [14, 6], [16, 7], [3, 5], [0, 12], [3, 15], [17, 12], [11, 5], [10, 5], [19, 17], [13, 11], [8, 1], [8, 17], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [3, 15], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [0, 12], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [15, 9], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [19, 1], [16, 7], [15, 18], [3, 14], [7, 8], [1, 0], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----End Timer [Execute Mapping]:  5.343754529953003

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 50]
[66, 69]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 14, 20]
[77, 86, 91]
[146, 151, 169]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[16, 19, 39]
[49, 54, 64]
[80, 82, 85]
[72, 77, 86]
[136, 146, 151]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 50]
[66, 69]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.000032901763916

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 14, 20] ccc => cc, Pos: [16, 19, 39] ccc => cc, Pos: [38, 50] cc => I, Pos: [38, 50] cc => I, Pos: [49, 54, 64] ccc => cc, Pos: [66, 69] cc => I, Pos: [66, 69] cc => I, Pos: [72, 77, 86] ccc => cc, Pos: [77, 86, 91] ccc => cc, Pos: [80, 82, 85] ccc => cc, Pos: [136, 146, 151] ccc => cc, Pos: [146, 151, 169] ccc => cc]

--------End Timer [Generate Plans]:  0.01562047004699707

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 14, 20] ccc => cc,
 Pos: [16, 19, 39] ccc => cc,
 Pos: [38, 50] cc => I,
 Pos: [49, 54, 64] ccc => cc,
 Pos: [66, 69] cc => I,
 Pos: [72, 77, 86] ccc => cc,
 Pos: [80, 82, 85] ccc => cc,
 Pos: [136, 146, 151] ccc => cc]
Change: 8, Saving: 8

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 14, 20] ccc => cc
Apply:  Pos: [16, 19, 39] ccc => cc
Apply:  Pos: [38, 50] cc => I
Apply:  Pos: [49, 54, 64] ccc => cc
Apply:  Pos: [66, 69] cc => I
Apply:  Pos: [72, 77, 86] ccc => cc
Apply:  Pos: [80, 82, 85] ccc => cc
Apply:  Pos: [136, 146, 151] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [18, 9], [15, 9], [19, 1], [3, 5], [0, 12], [6, 4], [5, 14], [10, 5], [3, 15], [7, 8], [5, 2], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [1, 0], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [13, 11], [15, 4], [13, 8], [16, 19], [11, 10], [7, 8], [4, 9], [12, 6], [1, 0], [8, 17], [19, 1], [19, 17], [13, 3], [14, 6], [15, 9], [10, 2], [5, 15], [11, 5], [17, 12], [3, 15], [14, 6], [16, 7], [3, 5], [0, 12], [15, 18], [17, 12], [10, 5], [13, 11], [19, 17], [11, 5], [8, 17], [8, 1], [10, 5], [7, 8], [19, 1], [6, 4], [3, 15], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [0, 12], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [15, 9], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [19, 1], [11, 5], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----End Timer [Execute Mapping]:  3.015653371810913

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 54]
[59, 66]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[65, 70, 83]
[127, 137, 159]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 54]
[59, 66]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7499945163726807

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [31, 54] cc => I, Pos: [31, 54] cc => I, Pos: [59, 66] cc => I, Pos: [59, 66] cc => I, Pos: [65, 70, 83] ccc => cc, Pos: [127, 137, 159] ccc => cc]

--------End Timer [Generate Plans]:  0.015624761581420898

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [31, 54] cc => I,
 Pos: [59, 66] cc => I,
 Pos: [65, 70, 83] ccc => cc,
 Pos: [127, 137, 159] ccc => cc]
Change: 4, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [31, 54] cc => I
Apply:  Pos: [59, 66] cc => I
Apply:  Pos: [65, 70, 83] ccc => cc
Apply:  Pos: [127, 137, 159] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [18, 9], [19, 1], [3, 5], [0, 12], [6, 4], [5, 14], [10, 5], [3, 15], [7, 8], [5, 2], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [13, 11], [15, 4], [13, 8], [16, 19], [11, 10], [7, 8], [4, 9], [12, 6], [8, 17], [19, 17], [19, 1], [13, 3], [15, 9], [10, 2], [5, 15], [11, 5], [17, 12], [3, 18], [16, 7], [3, 5], [0, 12], [15, 18], [17, 12], [10, 5], [13, 11], [19, 17], [11, 5], [8, 1], [8, 17], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [0, 12], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [15, 9], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [19, 0], [11, 5], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.7656192779541016

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[66, 87]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[66, 87]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6406095027923584

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [66, 87] cc => I, Pos: [66, 87] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [66, 87] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [66, 87] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [18, 9], [15, 9], [19, 1], [3, 5], [0, 12], [6, 4], [5, 14], [10, 5], [3, 15], [7, 8], [5, 2], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [13, 11], [15, 4], [13, 8], [16, 19], [11, 10], [7, 8], [4, 9], [12, 6], [19, 17], [8, 17], [19, 1], [13, 3], [15, 9], [10, 2], [5, 15], [11, 5], [17, 12], [3, 18], [16, 7], [3, 5], [0, 12], [17, 12], [10, 5], [13, 11], [19, 17], [11, 5], [8, 17], [8, 1], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [0, 12], [16, 7], [19, 8], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [15, 9], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [19, 0], [11, 5], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.6406095027923584

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[61, 65]
[66, 83]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[61, 65]
[66, 83]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.578139066696167

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [61, 65] cc => I, Pos: [61, 65] cc => I, Pos: [66, 83] cc => I, Pos: [66, 83] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [61, 65] cc => I, Pos: [66, 83] cc => I]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [61, 65] cc => I
Apply:  Pos: [66, 83] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [18, 9], [19, 1], [3, 5], [0, 12], [6, 4], [5, 14], [10, 5], [3, 15], [7, 8], [5, 2], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [13, 11], [15, 4], [13, 8], [16, 19], [11, 10], [7, 8], [4, 9], [12, 6], [8, 17], [19, 1], [19, 17], [13, 3], [15, 9], [10, 2], [5, 15], [11, 5], [3, 18], [16, 7], [3, 5], [10, 5], [13, 11], [19, 17], [11, 5], [8, 1], [8, 17], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [15, 9], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [19, 0], [11, 5], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.578139066696167

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [148] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 296

Reduced: 
 - size: 122 (45.19%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10935497283935547

[1, 0], [18, 4], [19, 8], [10, 2], [12, 6], [1, 17], [3, 14], [18, 4], [5, 15], [0, 12], [17, 6], [16, 7], [13, 11], [3, 14], [2, 18], [15, 9], [0, 12], [8, 17], [14, 15], [18, 9], [19, 1], [3, 5], [16, 7], [0, 12], [8, 17], [6, 4], [5, 2], [7, 13], [14, 15], [1, 17], [7, 13], [5, 14], [18, 9], [6, 4], [1, 17], [6, 4], [0, 12], [3, 15], [7, 8], [13, 11], [10, 5], [18, 9], [17, 6], [16, 19], [13, 11], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [11, 10], [4, 9], [5, 2], [17, 12], [5, 14], [1, 17], [16, 19], [11, 10], [7, 8], [15, 4], [5, 14], [17, 6], [0, 12], [8, 3], [18, 4], [5, 2], [8, 17], [14, 15], [11, 10], [6, 4], [1, 0], [5, 2], [19, 8], [18, 9], [11, 10], [0, 12], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 15], [14, 6], [18, 9], [16, 7], [11, 10], [2, 18], [0, 12], [15, 4], [13, 8], [16, 19], [3, 14], [13, 11], [2, 18], [7, 8], [5, 15], [4, 9], [12, 6], [3, 14], [1, 0], [19, 17], [11, 5], [8, 17], [19, 1], [13, 3], [14, 6], [18, 4], [0, 12], [11, 5], [0, 12], [10, 2], [15, 9], [17, 6], [7, 3], [11, 2], [5, 15], [7, 3], [17, 14], [18, 4], [11, 5], [17, 12], [19, 8], [15, 18], [14, 6], [16, 7], [3, 5], [19, 8], [17, 14], [11, 10], [18, 4], [7, 13], [0, 12], [3, 15], [17, 12], [7, 13], [11, 5], [18, 4], [3, 15], [10, 5], [19, 17], [13, 11], [8, 1], [18, 4], [3, 15], [18, 4], [8, 17], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [0, 12], [6, 4], [3, 14], [2, 18], [0, 12], [3, 15], [16, 19], [11, 5], [13, 8], [2, 18], [15, 4], [14, 6], [0, 12], [13, 3], [16, 7], [19, 8], [15, 18], [17, 14], [13, 3], [7, 8], [10, 5], [2, 18], [15, 9], [3, 5], [8, 17], [16, 19], [2, 18], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [11, 10], [5, 14], [8, 17], [15, 18], [12, 6], [4, 9], [5, 14], [1, 0], [8, 3], [18, 9], [11, 10], [14, 12], [6, 4], [11, 2], [7, 13], [18, 9], [8, 17], [17, 12], [8, 1], [16, 7], [5, 2], [15, 9], [13, 11], [14, 12], [15, 9], [10, 2], [8, 3], [1, 17], [6, 4], [16, 7], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [15, 9], [14, 12], [11, 2], [16, 19], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [8, 3], [18, 9], [14, 6], [19, 1], [4, 9], [8, 3], [16, 7], [15, 18], [3, 14], [7, 8], [4, 9], [1, 0], [11, 2], [12, 6], [19, 17], [8, 3], [5, 15], [10, 2], [6, 4], [16, 7], [8, 1], [14, 6], [3, 5], [18, 9], [19, 17], [16, 7], [8, 1], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 7]
[6, 13]
[9, 16]
[11, 22]
[16, 23]
[17, 24]
[18, 28]
[27, 30]
[19, 32]
[25, 33]
[29, 34]
[33, 35]
[23, 36]
[32, 41]
[39, 44]
[36, 48]
[43, 57]
[51, 58]
[55, 61]
[53, 66]
[58, 69]
[66, 72]
[69, 75]
[74, 84]
[76, 88]
[87, 94]
[92, 99]
[102, 109]
[108, 110]
[114, 117]
[107, 119]
[122, 127]
[131, 135]
[130, 137]
[133, 138]
[137, 143]
[138, 144]
[143, 145]
[152, 156]
[155, 161]
[156, 164]
[165, 170]
[173, 178]
[190, 195]
[189, 199]
[198, 204]
[191, 205]
[210, 213]
[197, 215]
[201, 217]
[208, 218]
[213, 224]
[177, 227]
[233, 238]
[237, 243]
[226, 245]
[247, 257]
[252, 258]
[253, 259]
[257, 260]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[75, 80, 86]
[82, 89, 96]
[118, 124, 128]
[186, 203, 208]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 71, 76]
[119, 123, 130]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[106, 113, 118]
[111, 115, 129]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 7]
[6, 13]
[9, 16]
[11, 22]
[16, 23]
[17, 24]
[18, 28]
[27, 30]
[19, 32]
[25, 33]
[29, 34]
[33, 35]
[23, 36]
[32, 41]
[39, 44]
[36, 48]
[43, 57]
[51, 58]
[55, 61]
[53, 66]
[58, 69]
[66, 72]
[69, 75]
[74, 84]
[76, 88]
[87, 94]
[92, 99]
[102, 109]
[108, 110]
[114, 117]
[107, 119]
[122, 127]
[131, 135]
[130, 137]
[133, 138]
[137, 143]
[138, 144]
[143, 145]
[152, 156]
[155, 161]
[156, 164]
[165, 170]
[173, 178]
[190, 195]
[189, 199]
[198, 204]
[191, 205]
[210, 213]
[197, 215]
[201, 217]
[208, 218]
[213, 224]
[177, 227]
[233, 238]
[237, 243]
[226, 245]
[247, 257]
[252, 258]
[253, 259]
[257, 260]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.3375084400177

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 7] cc => I, Pos: [1, 7] cc => I, Pos: [6, 13] cc => I, Pos: [6, 13] cc => I, Pos: [9, 16] cc => I, Pos: [9, 16] cc => I, Pos: [11, 22] cc => I, Pos: [11, 22] cc => I, Pos: [16, 23] cc => I, Pos: [16, 23] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [18, 28] cc => I, Pos: [18, 28] cc => I, Pos: [19, 32] cc => I, Pos: [19, 32] cc => I, Pos: [23, 36] cc => I, Pos: [23, 36] cc => I, Pos: [25, 33] cc => I, Pos: [25, 33] cc => I, Pos: [27, 30] cc => I, Pos: [27, 30] cc => I, Pos: [29, 34] cc => I, Pos: [29, 34] cc => I, Pos: [32, 41] cc => I, Pos: [32, 41] cc => I, Pos: [33, 35] cc => I, Pos: [33, 35] cc => I, Pos: [36, 48] cc => I, Pos: [36, 48] cc => I, Pos: [39, 44] cc => I, Pos: [39, 44] cc => I, Pos: [43, 57] cc => I, Pos: [43, 57] cc => I, Pos: [51, 58] cc => I, Pos: [51, 58] cc => I, Pos: [53, 66] cc => I, Pos: [53, 66] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [58, 69] cc => I, Pos: [58, 69] cc => I, Pos: [63, 71, 76] ccc => cc, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [69, 75] cc => I, Pos: [69, 75] cc => I, Pos: [74, 84] cc => I, Pos: [74, 84] cc => I, Pos: [75, 80, 86] ccc => cc, Pos: [76, 88] cc => I, Pos: [76, 88] cc => I, Pos: [82, 89, 96] ccc => cc, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [102, 109] cc => I, Pos: [102, 109] cc => I, Pos: [106, 113, 118] ccc => cc, Pos: [107, 119] cc => I, Pos: [107, 119] cc => I, Pos: [108, 110] cc => I, Pos: [108, 110] cc => I, Pos: [111, 115, 129] ccc => cc, Pos: [114, 117] cc => I, Pos: [114, 117] cc => I, Pos: [118, 124, 128] ccc => cc, Pos: [119, 123, 130] ccc => cc, Pos: [122, 127] cc => I, Pos: [122, 127] cc => I, Pos: [130, 137] cc => I, Pos: [130, 137] cc => I, Pos: [131, 135] cc => I, Pos: [131, 135] cc => I, Pos: [133, 138] cc => I, Pos: [133, 138] cc => I, Pos: [137, 143] cc => I, Pos: [137, 143] cc => I, Pos: [138, 144] cc => I, Pos: [138, 144] cc => I, Pos: [143, 145] cc => I, Pos: [143, 145] cc => I, Pos: [152, 156] cc => I, Pos: [152, 156] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [156, 164] cc => I, Pos: [156, 164] cc => I, Pos: [165, 170] cc => I, Pos: [165, 170] cc => I, Pos: [173, 178] cc => I, Pos: [173, 178] cc => I, Pos: [177, 227] cc => I, Pos: [177, 227] cc => I, Pos: [186, 203, 208] ccc => cc, Pos: [189, 199] cc => I, Pos: [189, 199] cc => I, Pos: [190, 195] cc => I, Pos: [190, 195] cc => I, Pos: [191, 205] cc => I, Pos: [191, 205] cc => I, Pos: [197, 215] cc => I, Pos: [197, 215] cc => I, Pos: [198, 204] cc => I, Pos: [198, 204] cc => I, Pos: [201, 217] cc => I, Pos: [201, 217] cc => I, Pos: [208, 218] cc => I, Pos: [208, 218] cc => I, Pos: [210, 213] cc => I, Pos: [210, 213] cc => I, Pos: [213, 224] cc => I, Pos: [213, 224] cc => I, Pos: [226, 245] cc => I, Pos: [226, 245] cc => I, Pos: [233, 238] cc => I, Pos: [233, 238] cc => I, Pos: [237, 243] cc => I, Pos: [237, 243] cc => I, Pos: [247, 257] cc => I, Pos: [247, 257] cc => I, Pos: [252, 258] cc => I, Pos: [252, 258] cc => I, Pos: [253, 259] cc => I, Pos: [253, 259] cc => I, Pos: [257, 260] cc => I, Pos: [257, 260] cc => I]

--------End Timer [Generate Plans]:  0.131300687789917

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 7] cc => I,
 Pos: [6, 13] cc => I,
 Pos: [16, 23] cc => I,
 Pos: [11, 22] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [18, 28] cc => I,
 Pos: [32, 41] cc => I,
 Pos: [25, 33] cc => I,
 Pos: [27, 30] cc => I,
 Pos: [29, 34] cc => I,
 Pos: [36, 48] cc => I,
 Pos: [39, 44] cc => I,
 Pos: [43, 57] cc => I,
 Pos: [58, 69] cc => I,
 Pos: [66, 72] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [63, 71, 76] ccc => cc,
 Pos: [74, 84] cc => I,
 Pos: [75, 80, 86] ccc => cc,
 Pos: [82, 89, 96] ccc => cc,
 Pos: [87, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [118, 124, 128] ccc => cc,
 Pos: [107, 119] cc => I,
 Pos: [108, 110] cc => I,
 Pos: [111, 115, 129] ccc => cc,
 Pos: [114, 117] cc => I,
 Pos: [122, 127] cc => I,
 Pos: [137, 143] cc => I,
 Pos: [131, 135] cc => I,
 Pos: [133, 138] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [165, 170] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 227] cc => I,
 Pos: [186, 203, 208] ccc => cc,
 Pos: [189, 199] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [191, 205] cc => I,
 Pos: [197, 215] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 217] cc => I,
 Pos: [210, 213] cc => I,
 Pos: [226, 245] cc => I,
 Pos: [233, 238] cc => I,
 Pos: [237, 243] cc => I,
 Pos: [247, 257] cc => I,
 Pos: [252, 258] cc => I,
 Pos: [253, 259] cc => I]
Change: 51, Saving: 52

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 7] cc => I
Apply:  Pos: [6, 13] cc => I
Apply:  Pos: [16, 23] cc => I
Apply:  Pos: [11, 22] cc => I
Apply:  Pos: [17, 24] cc => I
Apply:  Pos: [18, 28] cc => I
Apply:  Pos: [32, 41] cc => I
Apply:  Pos: [25, 33] cc => I
Apply:  Pos: [27, 30] cc => I
Apply:  Pos: [29, 34] cc => I
Apply:  Pos: [36, 48] cc => I
Apply:  Pos: [39, 44] cc => I
Apply:  Pos: [43, 57] cc => I
Apply:  Pos: [58, 69] cc => I
Apply:  Pos: [66, 72] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [63, 71, 76] ccc => cc
Apply:  Pos: [74, 84] cc => I
Apply:  Pos: [75, 80, 86] ccc => cc
Apply:  Pos: [82, 89, 96] ccc => cc
Apply:  Pos: [87, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [102, 109] cc => I
Apply:  Pos: [118, 124, 128] ccc => cc
Apply:  Pos: [107, 119] cc => I
Apply:  Pos: [108, 110] cc => I
Apply:  Pos: [111, 115, 129] ccc => cc
Apply:  Pos: [114, 117] cc => I
Apply:  Pos: [122, 127] cc => I
Apply:  Pos: [137, 143] cc => I
Apply:  Pos: [131, 135] cc => I
Apply:  Pos: [133, 138] cc => I
Apply:  Pos: [152, 156] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [165, 170] cc => I
Apply:  Pos: [173, 178] cc => I
Apply:  Pos: [177, 227] cc => I
Apply:  Pos: [186, 203, 208] ccc => cc
Apply:  Pos: [189, 199] cc => I
Apply:  Pos: [190, 195] cc => I
Apply:  Pos: [191, 205] cc => I
Apply:  Pos: [197, 215] cc => I
Apply:  Pos: [198, 204] cc => I
Apply:  Pos: [201, 217] cc => I
Apply:  Pos: [210, 213] cc => I
Apply:  Pos: [226, 245] cc => I
Apply:  Pos: [233, 238] cc => I
Apply:  Pos: [237, 243] cc => I
Apply:  Pos: [247, 257] cc => I
Apply:  Pos: [252, 258] cc => I
Apply:  Pos: [253, 259] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [0, 12], [17, 6], [13, 11], [2, 18], [15, 9], [18, 9], [19, 1], [3, 5], [5, 2], [5, 14], [6, 4], [3, 15], [7, 8], [10, 5], [17, 6], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [11, 10], [4, 9], [5, 2], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [1, 0], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [0, 12], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [0, 12], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [1, 0], [19, 17], [8, 17], [19, 1], [13, 3], [14, 6], [11, 10], [15, 9], [17, 6], [10, 2], [5, 15], [17, 6], [11, 5], [17, 12], [15, 18], [14, 6], [16, 7], [3, 5], [18, 4], [0, 12], [17, 12], [11, 5], [10, 5], [19, 17], [13, 11], [8, 1], [3, 15], [18, 4], [8, 17], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [3, 15], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [0, 12], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [19, 1], [16, 7], [15, 18], [3, 14], [7, 8], [1, 0], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----End Timer [Execute Mapping]:  5.468809127807617

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[40, 51]
[67, 70]
[72, 78]
[77, 86]
[79, 101]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[7, 16, 20]
[150, 155, 173]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[81, 83, 88]
[139, 150, 155]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[40, 51]
[67, 70]
[72, 78]
[77, 86]
[79, 101]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6686224937438965

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 16, 20] ccc => cc, Pos: [40, 51] cc => I, Pos: [40, 51] cc => I, Pos: [67, 70] cc => I, Pos: [67, 70] cc => I, Pos: [72, 78] cc => I, Pos: [72, 78] cc => I, Pos: [77, 86] cc => I, Pos: [77, 86] cc => I, Pos: [79, 101] cc => I, Pos: [79, 101] cc => I, Pos: [81, 83, 88] ccc => cc, Pos: [139, 150, 155] ccc => cc, Pos: [150, 155, 173] ccc => cc]

--------End Timer [Generate Plans]:  0.031247615814208984

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 16, 20] ccc => cc,
 Pos: [40, 51] cc => I,
 Pos: [67, 70] cc => I,
 Pos: [72, 78] cc => I,
 Pos: [77, 86] cc => I,
 Pos: [79, 101] cc => I,
 Pos: [81, 83, 88] ccc => cc,
 Pos: [139, 150, 155] ccc => cc]
Change: 8, Saving: 8

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 16, 20] ccc => cc
Apply:  Pos: [40, 51] cc => I
Apply:  Pos: [67, 70] cc => I
Apply:  Pos: [72, 78] cc => I
Apply:  Pos: [77, 86] cc => I
Apply:  Pos: [79, 101] cc => I
Apply:  Pos: [81, 83, 88] ccc => cc
Apply:  Pos: [139, 150, 155] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [0, 12], [17, 4], [13, 11], [2, 18], [18, 9], [15, 9], [19, 1], [3, 5], [5, 14], [5, 2], [6, 4], [3, 15], [7, 8], [10, 5], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [11, 10], [4, 9], [5, 2], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [1, 0], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [1, 0], [8, 17], [19, 1], [19, 17], [13, 3], [14, 6], [11, 10], [15, 9], [10, 2], [5, 15], [11, 5], [15, 18], [14, 6], [16, 7], [3, 5], [10, 5], [13, 11], [19, 17], [11, 5], [8, 1], [3, 15], [8, 17], [15, 18], [10, 5], [7, 8], [19, 1], [6, 4], [3, 15], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [19, 1], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----End Timer [Execute Mapping]:  3.6998701095581055

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[33, 56]
[61, 68]
[58, 73]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[76, 78, 84]
[127, 138, 160]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[67, 76, 78]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[33, 56]
[61, 68]
[58, 73]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  8.245356559753418

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [33, 56] cc => I, Pos: [33, 56] cc => I, Pos: [58, 73] cc => I, Pos: [58, 73] cc => I, Pos: [61, 68] cc => I, Pos: [61, 68] cc => I, Pos: [67, 76, 78] ccc => cc, Pos: [76, 78, 84] ccc => cc, Pos: [127, 138, 160] ccc => cc]

--------End Timer [Generate Plans]:  0.031247854232788086

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [33, 56] cc => I,
 Pos: [58, 73] cc => I,
 Pos: [61, 68] cc => I,
 Pos: [67, 76, 78] ccc => cc,
 Pos: [127, 138, 160] ccc => cc]
Change: 5, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [33, 56] cc => I
Apply:  Pos: [58, 73] cc => I
Apply:  Pos: [61, 68] cc => I
Apply:  Pos: [67, 76, 78] ccc => cc
Apply:  Pos: [127, 138, 160] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [0, 12], [17, 4], [13, 11], [2, 18], [15, 9], [18, 9], [19, 1], [3, 5], [5, 2], [5, 14], [6, 4], [3, 15], [7, 8], [10, 5], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [11, 10], [4, 9], [5, 2], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [8, 17], [19, 1], [13, 3], [11, 10], [15, 9], [10, 2], [5, 15], [11, 5], [3, 15], [16, 7], [10, 5], [3, 5], [13, 11], [11, 5], [8, 1], [15, 18], [8, 17], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [3, 15], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [19, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  8.276604413986206

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[55, 71]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[63, 70, 76]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[55, 71]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6722450256347656

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [55, 71] cc => I, Pos: [55, 71] cc => I, Pos: [63, 70, 76] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [55, 71] cc => I, Pos: [63, 70, 76] ccc => cc]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [55, 71] cc => I
Apply:  Pos: [63, 70, 76] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [0, 12], [17, 4], [13, 11], [2, 18], [18, 9], [15, 9], [19, 1], [3, 5], [5, 14], [5, 2], [6, 4], [3, 15], [7, 8], [10, 5], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [11, 10], [4, 9], [5, 2], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [19, 1], [13, 3], [11, 10], [15, 9], [10, 2], [5, 15], [11, 5], [3, 18], [16, 7], [3, 5], [10, 5], [13, 11], [11, 5], [8, 1], [15, 18], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [19, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.6722450256347656

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[69, 82]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[69, 82]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.624784469604492

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [69, 82] cc => I, Pos: [69, 82] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [69, 82] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [69, 82] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [0, 12], [17, 4], [13, 11], [2, 18], [15, 9], [18, 9], [19, 1], [3, 5], [5, 2], [5, 14], [6, 4], [3, 15], [7, 8], [10, 5], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [11, 10], [4, 9], [5, 2], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [19, 1], [13, 3], [11, 10], [15, 9], [10, 2], [5, 15], [11, 5], [3, 18], [16, 7], [10, 5], [3, 5], [13, 11], [11, 5], [8, 1], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [19, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.624784469604492

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [148] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 296

Reduced: 
 - size: 122 (45.19%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10970664024353027

[1, 0], [18, 4], [19, 8], [10, 2], [12, 6], [1, 17], [3, 14], [18, 4], [5, 15], [0, 12], [17, 6], [16, 7], [13, 11], [3, 14], [2, 18], [15, 9], [0, 12], [8, 17], [14, 15], [18, 9], [19, 1], [3, 5], [16, 7], [0, 12], [8, 17], [6, 4], [5, 2], [7, 13], [14, 15], [1, 17], [7, 13], [5, 14], [18, 9], [6, 4], [1, 17], [6, 4], [0, 12], [3, 15], [7, 8], [13, 11], [10, 5], [18, 9], [17, 6], [16, 19], [13, 11], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [11, 10], [4, 9], [5, 2], [17, 12], [5, 14], [1, 17], [16, 19], [11, 10], [7, 8], [15, 4], [5, 14], [17, 6], [0, 12], [8, 3], [18, 4], [5, 2], [8, 17], [14, 15], [11, 10], [6, 4], [1, 0], [5, 2], [19, 8], [18, 9], [11, 10], [0, 12], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 15], [14, 6], [18, 9], [16, 7], [11, 10], [2, 18], [0, 12], [15, 4], [13, 8], [16, 19], [3, 14], [13, 11], [2, 18], [7, 8], [5, 15], [4, 9], [12, 6], [3, 14], [1, 0], [19, 17], [11, 5], [8, 17], [19, 1], [13, 3], [14, 6], [18, 4], [0, 12], [11, 5], [0, 12], [10, 2], [15, 9], [17, 6], [7, 3], [11, 2], [5, 15], [7, 3], [17, 14], [18, 4], [11, 5], [17, 12], [19, 8], [15, 18], [14, 6], [16, 7], [3, 5], [19, 8], [17, 14], [11, 10], [18, 4], [7, 13], [0, 12], [3, 15], [17, 12], [7, 13], [11, 5], [18, 4], [3, 15], [10, 5], [19, 17], [13, 11], [8, 1], [18, 4], [3, 15], [18, 4], [8, 17], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [0, 12], [6, 4], [3, 14], [2, 18], [0, 12], [3, 15], [16, 19], [11, 5], [13, 8], [2, 18], [15, 4], [14, 6], [0, 12], [13, 3], [16, 7], [19, 8], [15, 18], [17, 14], [13, 3], [7, 8], [10, 5], [2, 18], [15, 9], [3, 5], [8, 17], [16, 19], [2, 18], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [11, 10], [5, 14], [8, 17], [15, 18], [12, 6], [4, 9], [5, 14], [1, 0], [8, 3], [18, 9], [11, 10], [14, 12], [6, 4], [11, 2], [7, 13], [18, 9], [8, 17], [17, 12], [8, 1], [16, 7], [5, 2], [15, 9], [13, 11], [14, 12], [15, 9], [10, 2], [8, 3], [1, 17], [6, 4], [16, 7], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [15, 9], [14, 12], [11, 2], [16, 19], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [8, 3], [18, 9], [14, 6], [19, 1], [4, 9], [8, 3], [16, 7], [15, 18], [3, 14], [7, 8], [4, 9], [1, 0], [11, 2], [12, 6], [19, 17], [8, 3], [5, 15], [10, 2], [6, 4], [16, 7], [8, 1], [14, 6], [3, 5], [18, 9], [19, 17], [16, 7], [8, 1], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 7]
[6, 13]
[9, 16]
[11, 22]
[16, 23]
[17, 24]
[18, 28]
[27, 30]
[19, 32]
[25, 33]
[29, 34]
[33, 35]
[23, 36]
[32, 41]
[39, 44]
[36, 48]
[43, 57]
[51, 58]
[55, 61]
[53, 66]
[58, 69]
[66, 72]
[69, 75]
[74, 84]
[76, 88]
[87, 94]
[92, 99]
[102, 109]
[108, 110]
[114, 117]
[107, 119]
[122, 127]
[131, 135]
[130, 137]
[133, 138]
[137, 143]
[138, 144]
[143, 145]
[152, 156]
[155, 161]
[156, 164]
[165, 170]
[173, 178]
[190, 195]
[189, 199]
[198, 204]
[191, 205]
[210, 213]
[197, 215]
[201, 217]
[208, 218]
[213, 224]
[177, 227]
[233, 238]
[237, 243]
[226, 245]
[247, 257]
[252, 258]
[253, 259]
[257, 260]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[75, 80, 86]
[82, 89, 96]
[118, 124, 128]
[186, 203, 208]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 71, 76]
[119, 123, 130]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[106, 113, 118]
[111, 115, 129]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 7]
[6, 13]
[9, 16]
[11, 22]
[16, 23]
[17, 24]
[18, 28]
[27, 30]
[19, 32]
[25, 33]
[29, 34]
[33, 35]
[23, 36]
[32, 41]
[39, 44]
[36, 48]
[43, 57]
[51, 58]
[55, 61]
[53, 66]
[58, 69]
[66, 72]
[69, 75]
[74, 84]
[76, 88]
[87, 94]
[92, 99]
[102, 109]
[108, 110]
[114, 117]
[107, 119]
[122, 127]
[131, 135]
[130, 137]
[133, 138]
[137, 143]
[138, 144]
[143, 145]
[152, 156]
[155, 161]
[156, 164]
[165, 170]
[173, 178]
[190, 195]
[189, 199]
[198, 204]
[191, 205]
[210, 213]
[197, 215]
[201, 217]
[208, 218]
[213, 224]
[177, 227]
[233, 238]
[237, 243]
[226, 245]
[247, 257]
[252, 258]
[253, 259]
[257, 260]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.264423847198486

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 7] cc => I, Pos: [1, 7] cc => I, Pos: [6, 13] cc => I, Pos: [6, 13] cc => I, Pos: [9, 16] cc => I, Pos: [9, 16] cc => I, Pos: [11, 22] cc => I, Pos: [11, 22] cc => I, Pos: [16, 23] cc => I, Pos: [16, 23] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [18, 28] cc => I, Pos: [18, 28] cc => I, Pos: [19, 32] cc => I, Pos: [19, 32] cc => I, Pos: [23, 36] cc => I, Pos: [23, 36] cc => I, Pos: [25, 33] cc => I, Pos: [25, 33] cc => I, Pos: [27, 30] cc => I, Pos: [27, 30] cc => I, Pos: [29, 34] cc => I, Pos: [29, 34] cc => I, Pos: [32, 41] cc => I, Pos: [32, 41] cc => I, Pos: [33, 35] cc => I, Pos: [33, 35] cc => I, Pos: [36, 48] cc => I, Pos: [36, 48] cc => I, Pos: [39, 44] cc => I, Pos: [39, 44] cc => I, Pos: [43, 57] cc => I, Pos: [43, 57] cc => I, Pos: [51, 58] cc => I, Pos: [51, 58] cc => I, Pos: [53, 66] cc => I, Pos: [53, 66] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [58, 69] cc => I, Pos: [58, 69] cc => I, Pos: [63, 71, 76] ccc => cc, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [69, 75] cc => I, Pos: [69, 75] cc => I, Pos: [74, 84] cc => I, Pos: [74, 84] cc => I, Pos: [75, 80, 86] ccc => cc, Pos: [76, 88] cc => I, Pos: [76, 88] cc => I, Pos: [82, 89, 96] ccc => cc, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [102, 109] cc => I, Pos: [102, 109] cc => I, Pos: [106, 113, 118] ccc => cc, Pos: [107, 119] cc => I, Pos: [107, 119] cc => I, Pos: [108, 110] cc => I, Pos: [108, 110] cc => I, Pos: [111, 115, 129] ccc => cc, Pos: [114, 117] cc => I, Pos: [114, 117] cc => I, Pos: [118, 124, 128] ccc => cc, Pos: [119, 123, 130] ccc => cc, Pos: [122, 127] cc => I, Pos: [122, 127] cc => I, Pos: [130, 137] cc => I, Pos: [130, 137] cc => I, Pos: [131, 135] cc => I, Pos: [131, 135] cc => I, Pos: [133, 138] cc => I, Pos: [133, 138] cc => I, Pos: [137, 143] cc => I, Pos: [137, 143] cc => I, Pos: [138, 144] cc => I, Pos: [138, 144] cc => I, Pos: [143, 145] cc => I, Pos: [143, 145] cc => I, Pos: [152, 156] cc => I, Pos: [152, 156] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [156, 164] cc => I, Pos: [156, 164] cc => I, Pos: [165, 170] cc => I, Pos: [165, 170] cc => I, Pos: [173, 178] cc => I, Pos: [173, 178] cc => I, Pos: [177, 227] cc => I, Pos: [177, 227] cc => I, Pos: [186, 203, 208] ccc => cc, Pos: [189, 199] cc => I, Pos: [189, 199] cc => I, Pos: [190, 195] cc => I, Pos: [190, 195] cc => I, Pos: [191, 205] cc => I, Pos: [191, 205] cc => I, Pos: [197, 215] cc => I, Pos: [197, 215] cc => I, Pos: [198, 204] cc => I, Pos: [198, 204] cc => I, Pos: [201, 217] cc => I, Pos: [201, 217] cc => I, Pos: [208, 218] cc => I, Pos: [208, 218] cc => I, Pos: [210, 213] cc => I, Pos: [210, 213] cc => I, Pos: [213, 224] cc => I, Pos: [213, 224] cc => I, Pos: [226, 245] cc => I, Pos: [226, 245] cc => I, Pos: [233, 238] cc => I, Pos: [233, 238] cc => I, Pos: [237, 243] cc => I, Pos: [237, 243] cc => I, Pos: [247, 257] cc => I, Pos: [247, 257] cc => I, Pos: [252, 258] cc => I, Pos: [252, 258] cc => I, Pos: [253, 259] cc => I, Pos: [253, 259] cc => I, Pos: [257, 260] cc => I, Pos: [257, 260] cc => I]

--------End Timer [Generate Plans]:  0.14061546325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 7] cc => I,
 Pos: [6, 13] cc => I,
 Pos: [9, 16] cc => I,
 Pos: [11, 22] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [18, 28] cc => I,
 Pos: [19, 32] cc => I,
 Pos: [36, 48] cc => I,
 Pos: [25, 33] cc => I,
 Pos: [27, 30] cc => I,
 Pos: [29, 34] cc => I,
 Pos: [39, 44] cc => I,
 Pos: [43, 57] cc => I,
 Pos: [51, 58] cc => I,
 Pos: [66, 72] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [76, 88] cc => I,
 Pos: [75, 80, 86] ccc => cc,
 Pos: [74, 84] cc => I,
 Pos: [82, 89, 96] ccc => cc,
 Pos: [87, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [118, 124, 128] ccc => cc,
 Pos: [107, 119] cc => I,
 Pos: [108, 110] cc => I,
 Pos: [111, 115, 129] ccc => cc,
 Pos: [114, 117] cc => I,
 Pos: [122, 127] cc => I,
 Pos: [130, 137] cc => I,
 Pos: [131, 135] cc => I,
 Pos: [138, 144] cc => I,
 Pos: [143, 145] cc => I,
 Pos: [156, 164] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [165, 170] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 227] cc => I,
 Pos: [186, 203, 208] ccc => cc,
 Pos: [189, 199] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [191, 205] cc => I,
 Pos: [197, 215] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 217] cc => I,
 Pos: [210, 213] cc => I,
 Pos: [226, 245] cc => I,
 Pos: [233, 238] cc => I,
 Pos: [237, 243] cc => I,
 Pos: [257, 260] cc => I,
 Pos: [252, 258] cc => I,
 Pos: [253, 259] cc => I]
Change: 52, Saving: 53

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 7] cc => I
Apply:  Pos: [6, 13] cc => I
Apply:  Pos: [9, 16] cc => I
Apply:  Pos: [11, 22] cc => I
Apply:  Pos: [17, 24] cc => I
Apply:  Pos: [18, 28] cc => I
Apply:  Pos: [19, 32] cc => I
Apply:  Pos: [36, 48] cc => I
Apply:  Pos: [25, 33] cc => I
Apply:  Pos: [27, 30] cc => I
Apply:  Pos: [29, 34] cc => I
Apply:  Pos: [39, 44] cc => I
Apply:  Pos: [43, 57] cc => I
Apply:  Pos: [51, 58] cc => I
Apply:  Pos: [66, 72] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [76, 88] cc => I
Apply:  Pos: [75, 80, 86] ccc => cc
Apply:  Pos: [74, 84] cc => I
Apply:  Pos: [82, 89, 96] ccc => cc
Apply:  Pos: [87, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [102, 109] cc => I
Apply:  Pos: [118, 124, 128] ccc => cc
Apply:  Pos: [107, 119] cc => I
Apply:  Pos: [108, 110] cc => I
Apply:  Pos: [111, 115, 129] ccc => cc
Apply:  Pos: [114, 117] cc => I
Apply:  Pos: [122, 127] cc => I
Apply:  Pos: [130, 137] cc => I
Apply:  Pos: [131, 135] cc => I
Apply:  Pos: [138, 144] cc => I
Apply:  Pos: [143, 145] cc => I
Apply:  Pos: [156, 164] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [165, 170] cc => I
Apply:  Pos: [173, 178] cc => I
Apply:  Pos: [177, 227] cc => I
Apply:  Pos: [186, 203, 208] ccc => cc
Apply:  Pos: [189, 199] cc => I
Apply:  Pos: [190, 195] cc => I
Apply:  Pos: [191, 205] cc => I
Apply:  Pos: [197, 215] cc => I
Apply:  Pos: [198, 204] cc => I
Apply:  Pos: [201, 217] cc => I
Apply:  Pos: [210, 213] cc => I
Apply:  Pos: [226, 245] cc => I
Apply:  Pos: [233, 238] cc => I
Apply:  Pos: [237, 243] cc => I
Apply:  Pos: [257, 260] cc => I
Apply:  Pos: [252, 258] cc => I
Apply:  Pos: [253, 259] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 6], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [0, 12], [5, 2], [5, 14], [6, 4], [3, 15], [7, 8], [10, 5], [18, 9], [17, 6], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [4, 9], [5, 2], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [0, 12], [8, 3], [18, 4], [8, 17], [14, 15], [11, 10], [6, 4], [1, 0], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [1, 0], [19, 17], [8, 17], [19, 1], [13, 3], [14, 6], [11, 10], [15, 9], [17, 6], [10, 2], [5, 15], [17, 6], [11, 5], [17, 12], [15, 18], [14, 6], [16, 7], [3, 5], [0, 12], [3, 15], [17, 12], [11, 5], [10, 5], [19, 17], [13, 11], [8, 1], [8, 17], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [0, 12], [6, 4], [3, 14], [3, 15], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [19, 1], [16, 7], [15, 18], [3, 14], [7, 8], [1, 0], [12, 6], [19, 17], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----End Timer [Execute Mapping]:  5.405039310455322

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[40, 58]
[66, 69]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 15, 20]
[77, 86, 92]
[147, 152, 170]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[14, 18, 27]
[80, 82, 85]
[72, 77, 86]
[136, 147, 152]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[40, 58]
[66, 69]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.047086238861084

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 15, 20] ccc => cc, Pos: [14, 18, 27] ccc => cc, Pos: [40, 58] cc => I, Pos: [40, 58] cc => I, Pos: [66, 69] cc => I, Pos: [66, 69] cc => I, Pos: [72, 77, 86] ccc => cc, Pos: [77, 86, 92] ccc => cc, Pos: [80, 82, 85] ccc => cc, Pos: [136, 147, 152] ccc => cc, Pos: [147, 152, 170] ccc => cc]

--------End Timer [Generate Plans]:  0.015624284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 15, 20] ccc => cc,
 Pos: [14, 18, 27] ccc => cc,
 Pos: [40, 58] cc => I,
 Pos: [66, 69] cc => I,
 Pos: [77, 86, 92] ccc => cc,
 Pos: [80, 82, 85] ccc => cc,
 Pos: [136, 147, 152] ccc => cc]
Change: 7, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 15, 20] ccc => cc
Apply:  Pos: [14, 18, 27] ccc => cc
Apply:  Pos: [40, 58] cc => I
Apply:  Pos: [66, 69] cc => I
Apply:  Pos: [77, 86, 92] ccc => cc
Apply:  Pos: [80, 82, 85] ccc => cc
Apply:  Pos: [136, 147, 152] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [0, 12], [5, 14], [10, 5], [6, 4], [3, 15], [7, 8], [5, 2], [18, 9], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [0, 12], [8, 3], [18, 4], [8, 17], [14, 15], [11, 10], [6, 4], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [8, 17], [19, 1], [19, 17], [13, 3], [14, 6], [11, 10], [15, 9], [10, 2], [5, 15], [11, 5], [17, 12], [15, 18], [14, 6], [16, 7], [3, 5], [0, 12], [3, 18], [17, 12], [10, 5], [13, 11], [19, 17], [11, 5], [8, 17], [8, 1], [15, 18], [10, 5], [7, 8], [19, 1], [0, 12], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [19, 1], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [19, 17], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----End Timer [Execute Mapping]:  3.0627105236053467

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[59, 67]
[79, 93]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[128, 139, 161]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[59, 67]
[79, 93]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.843926429748535

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [59, 67] cc => I, Pos: [59, 67] cc => I, Pos: [79, 93] cc => I, Pos: [79, 93] cc => I, Pos: [128, 139, 161] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [59, 67] cc => I, Pos: [79, 93] cc => I, Pos: [128, 139, 161] ccc => cc]
Change: 3, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [59, 67] cc => I
Apply:  Pos: [79, 93] cc => I
Apply:  Pos: [128, 139, 161] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [0, 12], [5, 14], [10, 5], [6, 4], [3, 15], [7, 8], [5, 2], [18, 9], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [0, 12], [8, 3], [18, 4], [8, 17], [14, 15], [11, 10], [6, 4], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [8, 17], [19, 17], [19, 1], [13, 3], [11, 10], [15, 9], [10, 2], [5, 15], [11, 5], [17, 12], [15, 18], [16, 7], [3, 5], [0, 12], [3, 18], [17, 12], [10, 5], [13, 11], [19, 17], [11, 5], [8, 1], [8, 17], [10, 5], [7, 8], [19, 1], [0, 12], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [19, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [19, 17], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.843926429748535

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.71917462348938

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [0, 12], [5, 14], [10, 5], [6, 4], [3, 15], [7, 8], [5, 2], [18, 9], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [0, 12], [8, 3], [18, 4], [8, 17], [14, 15], [11, 10], [6, 4], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [19, 17], [8, 17], [19, 1], [13, 3], [11, 10], [15, 9], [10, 2], [5, 15], [11, 5], [17, 12], [15, 18], [16, 7], [3, 5], [0, 12], [3, 18], [17, 12], [10, 5], [13, 11], [19, 17], [11, 5], [8, 17], [8, 1], [10, 5], [7, 8], [19, 1], [0, 12], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [19, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [19, 17], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.71917462348938

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [157] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 314

Reduced: 
 - size: 113 (41.85%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10937070846557617

[1, 0], [18, 4], [19, 8], [10, 2], [12, 6], [1, 17], [3, 14], [18, 4], [5, 15], [0, 12], [17, 6], [16, 7], [13, 11], [3, 14], [2, 18], [15, 9], [0, 12], [8, 17], [14, 15], [18, 9], [19, 1], [3, 5], [16, 7], [0, 12], [8, 17], [6, 4], [5, 2], [7, 13], [14, 15], [1, 17], [7, 13], [5, 14], [18, 9], [6, 4], [1, 17], [6, 4], [0, 12], [3, 15], [7, 8], [13, 11], [10, 5], [18, 9], [17, 6], [16, 19], [13, 11], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [11, 10], [4, 9], [5, 2], [17, 12], [5, 14], [1, 17], [16, 19], [11, 10], [7, 8], [15, 4], [5, 14], [17, 6], [0, 12], [8, 3], [18, 4], [5, 2], [8, 17], [14, 15], [11, 10], [6, 4], [1, 0], [5, 2], [19, 8], [18, 9], [11, 10], [0, 12], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 15], [14, 6], [18, 9], [16, 7], [11, 10], [2, 18], [0, 12], [15, 4], [13, 8], [16, 19], [3, 14], [13, 11], [2, 18], [7, 8], [5, 15], [4, 9], [12, 6], [3, 14], [1, 0], [19, 17], [11, 5], [8, 17], [19, 1], [13, 3], [14, 6], [18, 4], [0, 12], [11, 5], [0, 12], [10, 2], [15, 9], [17, 6], [7, 3], [11, 2], [5, 15], [7, 3], [17, 14], [18, 4], [11, 5], [17, 12], [19, 8], [15, 18], [14, 6], [16, 7], [3, 5], [19, 8], [17, 14], [11, 10], [18, 4], [7, 13], [0, 12], [3, 15], [17, 12], [7, 13], [11, 5], [18, 4], [3, 15], [10, 5], [19, 17], [13, 11], [8, 1], [18, 4], [3, 15], [18, 4], [8, 17], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [0, 12], [6, 4], [3, 14], [2, 18], [0, 12], [3, 15], [16, 19], [11, 5], [13, 8], [2, 18], [15, 4], [14, 6], [0, 12], [13, 3], [16, 7], [19, 8], [15, 18], [17, 14], [13, 3], [7, 8], [10, 5], [2, 18], [15, 9], [3, 5], [8, 17], [16, 19], [2, 18], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [11, 10], [5, 14], [8, 17], [15, 18], [12, 6], [4, 9], [5, 14], [1, 0], [8, 3], [18, 9], [11, 10], [14, 12], [6, 4], [11, 2], [7, 13], [18, 9], [8, 17], [17, 12], [8, 1], [16, 7], [5, 2], [15, 9], [13, 11], [14, 12], [15, 9], [10, 2], [8, 3], [1, 17], [6, 4], [16, 7], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [15, 9], [14, 12], [11, 2], [16, 19], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [8, 3], [18, 9], [14, 6], [19, 1], [4, 9], [8, 3], [16, 7], [15, 18], [3, 14], [7, 8], [4, 9], [1, 0], [11, 2], [12, 6], [19, 17], [8, 3], [5, 15], [10, 2], [6, 4], [16, 7], [8, 1], [14, 6], [3, 5], [18, 9], [19, 17], [16, 7], [8, 1], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 7]
[6, 13]
[9, 16]
[11, 22]
[16, 23]
[17, 24]
[18, 28]
[27, 30]
[19, 32]
[25, 33]
[29, 34]
[33, 35]
[23, 36]
[32, 41]
[39, 44]
[36, 48]
[43, 57]
[51, 58]
[55, 61]
[53, 66]
[58, 69]
[66, 72]
[69, 75]
[74, 84]
[76, 88]
[87, 94]
[92, 99]
[102, 109]
[108, 110]
[114, 117]
[107, 119]
[122, 127]
[131, 135]
[130, 137]
[133, 138]
[137, 143]
[138, 144]
[143, 145]
[152, 156]
[155, 161]
[156, 164]
[165, 170]
[173, 178]
[190, 195]
[189, 199]
[198, 204]
[191, 205]
[210, 213]
[197, 215]
[201, 217]
[208, 218]
[213, 224]
[177, 227]
[233, 238]
[237, 243]
[226, 245]
[247, 257]
[252, 258]
[253, 259]
[257, 260]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[75, 80, 86]
[82, 89, 96]
[118, 124, 128]
[186, 203, 208]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 71, 76]
[119, 123, 130]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[106, 113, 118]
[111, 115, 129]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 7]
[6, 13]
[9, 16]
[11, 22]
[16, 23]
[17, 24]
[18, 28]
[27, 30]
[19, 32]
[25, 33]
[29, 34]
[33, 35]
[23, 36]
[32, 41]
[39, 44]
[36, 48]
[43, 57]
[51, 58]
[55, 61]
[53, 66]
[58, 69]
[66, 72]
[69, 75]
[74, 84]
[76, 88]
[87, 94]
[92, 99]
[102, 109]
[108, 110]
[114, 117]
[107, 119]
[122, 127]
[131, 135]
[130, 137]
[133, 138]
[137, 143]
[138, 144]
[143, 145]
[152, 156]
[155, 161]
[156, 164]
[165, 170]
[173, 178]
[190, 195]
[189, 199]
[198, 204]
[191, 205]
[210, 213]
[197, 215]
[201, 217]
[208, 218]
[213, 224]
[177, 227]
[233, 238]
[237, 243]
[226, 245]
[247, 257]
[252, 258]
[253, 259]
[257, 260]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.281235218048096

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 7] cc => I, Pos: [1, 7] cc => I, Pos: [6, 13] cc => I, Pos: [6, 13] cc => I, Pos: [9, 16] cc => I, Pos: [9, 16] cc => I, Pos: [11, 22] cc => I, Pos: [11, 22] cc => I, Pos: [16, 23] cc => I, Pos: [16, 23] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [18, 28] cc => I, Pos: [18, 28] cc => I, Pos: [19, 32] cc => I, Pos: [19, 32] cc => I, Pos: [23, 36] cc => I, Pos: [23, 36] cc => I, Pos: [25, 33] cc => I, Pos: [25, 33] cc => I, Pos: [27, 30] cc => I, Pos: [27, 30] cc => I, Pos: [29, 34] cc => I, Pos: [29, 34] cc => I, Pos: [32, 41] cc => I, Pos: [32, 41] cc => I, Pos: [33, 35] cc => I, Pos: [33, 35] cc => I, Pos: [36, 48] cc => I, Pos: [36, 48] cc => I, Pos: [39, 44] cc => I, Pos: [39, 44] cc => I, Pos: [43, 57] cc => I, Pos: [43, 57] cc => I, Pos: [51, 58] cc => I, Pos: [51, 58] cc => I, Pos: [53, 66] cc => I, Pos: [53, 66] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [58, 69] cc => I, Pos: [58, 69] cc => I, Pos: [63, 71, 76] ccc => cc, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [69, 75] cc => I, Pos: [69, 75] cc => I, Pos: [74, 84] cc => I, Pos: [74, 84] cc => I, Pos: [75, 80, 86] ccc => cc, Pos: [76, 88] cc => I, Pos: [76, 88] cc => I, Pos: [82, 89, 96] ccc => cc, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [102, 109] cc => I, Pos: [102, 109] cc => I, Pos: [106, 113, 118] ccc => cc, Pos: [107, 119] cc => I, Pos: [107, 119] cc => I, Pos: [108, 110] cc => I, Pos: [108, 110] cc => I, Pos: [111, 115, 129] ccc => cc, Pos: [114, 117] cc => I, Pos: [114, 117] cc => I, Pos: [118, 124, 128] ccc => cc, Pos: [119, 123, 130] ccc => cc, Pos: [122, 127] cc => I, Pos: [122, 127] cc => I, Pos: [130, 137] cc => I, Pos: [130, 137] cc => I, Pos: [131, 135] cc => I, Pos: [131, 135] cc => I, Pos: [133, 138] cc => I, Pos: [133, 138] cc => I, Pos: [137, 143] cc => I, Pos: [137, 143] cc => I, Pos: [138, 144] cc => I, Pos: [138, 144] cc => I, Pos: [143, 145] cc => I, Pos: [143, 145] cc => I, Pos: [152, 156] cc => I, Pos: [152, 156] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [156, 164] cc => I, Pos: [156, 164] cc => I, Pos: [165, 170] cc => I, Pos: [165, 170] cc => I, Pos: [173, 178] cc => I, Pos: [173, 178] cc => I, Pos: [177, 227] cc => I, Pos: [177, 227] cc => I, Pos: [186, 203, 208] ccc => cc, Pos: [189, 199] cc => I, Pos: [189, 199] cc => I, Pos: [190, 195] cc => I, Pos: [190, 195] cc => I, Pos: [191, 205] cc => I, Pos: [191, 205] cc => I, Pos: [197, 215] cc => I, Pos: [197, 215] cc => I, Pos: [198, 204] cc => I, Pos: [198, 204] cc => I, Pos: [201, 217] cc => I, Pos: [201, 217] cc => I, Pos: [208, 218] cc => I, Pos: [208, 218] cc => I, Pos: [210, 213] cc => I, Pos: [210, 213] cc => I, Pos: [213, 224] cc => I, Pos: [213, 224] cc => I, Pos: [226, 245] cc => I, Pos: [226, 245] cc => I, Pos: [233, 238] cc => I, Pos: [233, 238] cc => I, Pos: [237, 243] cc => I, Pos: [237, 243] cc => I, Pos: [247, 257] cc => I, Pos: [247, 257] cc => I, Pos: [252, 258] cc => I, Pos: [252, 258] cc => I, Pos: [253, 259] cc => I, Pos: [253, 259] cc => I, Pos: [257, 260] cc => I, Pos: [257, 260] cc => I]

--------End Timer [Generate Plans]:  0.14061474800109863

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 7] cc => I,
 Pos: [6, 13] cc => I,
 Pos: [16, 23] cc => I,
 Pos: [11, 22] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [18, 28] cc => I,
 Pos: [19, 32] cc => I,
 Pos: [25, 33] cc => I,
 Pos: [27, 30] cc => I,
 Pos: [29, 34] cc => I,
 Pos: [36, 48] cc => I,
 Pos: [39, 44] cc => I,
 Pos: [43, 57] cc => I,
 Pos: [58, 69] cc => I,
 Pos: [53, 66] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [63, 71, 76] ccc => cc,
 Pos: [74, 84] cc => I,
 Pos: [75, 80, 86] ccc => cc,
 Pos: [82, 89, 96] ccc => cc,
 Pos: [87, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [106, 113, 118] ccc => cc,
 Pos: [107, 119] cc => I,
 Pos: [108, 110] cc => I,
 Pos: [111, 115, 129] ccc => cc,
 Pos: [114, 117] cc => I,
 Pos: [122, 127] cc => I,
 Pos: [137, 143] cc => I,
 Pos: [131, 135] cc => I,
 Pos: [138, 144] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [165, 170] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 227] cc => I,
 Pos: [208, 218] cc => I,
 Pos: [189, 199] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [191, 205] cc => I,
 Pos: [197, 215] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 217] cc => I,
 Pos: [210, 213] cc => I,
 Pos: [226, 245] cc => I,
 Pos: [233, 238] cc => I,
 Pos: [237, 243] cc => I,
 Pos: [257, 260] cc => I,
 Pos: [252, 258] cc => I,
 Pos: [253, 259] cc => I]
Change: 51, Saving: 52

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 7] cc => I
Apply:  Pos: [6, 13] cc => I
Apply:  Pos: [16, 23] cc => I
Apply:  Pos: [11, 22] cc => I
Apply:  Pos: [17, 24] cc => I
Apply:  Pos: [18, 28] cc => I
Apply:  Pos: [19, 32] cc => I
Apply:  Pos: [25, 33] cc => I
Apply:  Pos: [27, 30] cc => I
Apply:  Pos: [29, 34] cc => I
Apply:  Pos: [36, 48] cc => I
Apply:  Pos: [39, 44] cc => I
Apply:  Pos: [43, 57] cc => I
Apply:  Pos: [58, 69] cc => I
Apply:  Pos: [53, 66] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [63, 71, 76] ccc => cc
Apply:  Pos: [74, 84] cc => I
Apply:  Pos: [75, 80, 86] ccc => cc
Apply:  Pos: [82, 89, 96] ccc => cc
Apply:  Pos: [87, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [102, 109] cc => I
Apply:  Pos: [106, 113, 118] ccc => cc
Apply:  Pos: [107, 119] cc => I
Apply:  Pos: [108, 110] cc => I
Apply:  Pos: [111, 115, 129] ccc => cc
Apply:  Pos: [114, 117] cc => I
Apply:  Pos: [122, 127] cc => I
Apply:  Pos: [137, 143] cc => I
Apply:  Pos: [131, 135] cc => I
Apply:  Pos: [138, 144] cc => I
Apply:  Pos: [152, 156] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [165, 170] cc => I
Apply:  Pos: [173, 178] cc => I
Apply:  Pos: [177, 227] cc => I
Apply:  Pos: [208, 218] cc => I
Apply:  Pos: [189, 199] cc => I
Apply:  Pos: [190, 195] cc => I
Apply:  Pos: [191, 205] cc => I
Apply:  Pos: [197, 215] cc => I
Apply:  Pos: [198, 204] cc => I
Apply:  Pos: [201, 217] cc => I
Apply:  Pos: [210, 213] cc => I
Apply:  Pos: [226, 245] cc => I
Apply:  Pos: [233, 238] cc => I
Apply:  Pos: [237, 243] cc => I
Apply:  Pos: [257, 260] cc => I
Apply:  Pos: [252, 258] cc => I
Apply:  Pos: [253, 259] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [0, 12], [17, 6], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 2], [5, 14], [6, 4], [3, 15], [7, 8], [10, 5], [18, 9], [17, 6], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [11, 10], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [1, 0], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [0, 12], [5, 2], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [0, 12], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [1, 0], [19, 17], [8, 17], [19, 1], [13, 3], [17, 14], [11, 10], [15, 9], [14, 6], [10, 2], [5, 15], [11, 5], [17, 12], [15, 18], [14, 6], [16, 7], [3, 5], [17, 14], [18, 4], [0, 12], [3, 15], [17, 12], [11, 5], [10, 5], [19, 17], [13, 11], [8, 1], [18, 4], [8, 17], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [3, 15], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [0, 12], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [19, 1], [16, 7], [15, 18], [3, 14], [7, 8], [1, 0], [12, 6], [19, 17], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----End Timer [Execute Mapping]:  5.421849966049194

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 51]
[67, 73]
[77, 86]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[7, 15, 20]
[149, 154, 172]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[82, 84, 88]
[138, 149, 154]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 51]
[67, 73]
[77, 86]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.07810378074646

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 15, 20] ccc => cc, Pos: [39, 51] cc => I, Pos: [39, 51] cc => I, Pos: [67, 73] cc => I, Pos: [67, 73] cc => I, Pos: [77, 86] cc => I, Pos: [77, 86] cc => I, Pos: [82, 84, 88] ccc => cc, Pos: [138, 149, 154] ccc => cc, Pos: [149, 154, 172] ccc => cc]

--------End Timer [Generate Plans]:  0.015624523162841797

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 15, 20] ccc => cc,
 Pos: [39, 51] cc => I,
 Pos: [67, 73] cc => I,
 Pos: [77, 86] cc => I,
 Pos: [82, 84, 88] ccc => cc,
 Pos: [149, 154, 172] ccc => cc]
Change: 6, Saving: 6

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 15, 20] ccc => cc
Apply:  Pos: [39, 51] cc => I
Apply:  Pos: [67, 73] cc => I
Apply:  Pos: [77, 86] cc => I
Apply:  Pos: [82, 84, 88] ccc => cc
Apply:  Pos: [149, 154, 172] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [0, 12], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 14], [5, 2], [6, 4], [3, 15], [7, 8], [10, 5], [18, 9], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [11, 10], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [1, 0], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [5, 2], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [1, 0], [8, 17], [19, 1], [19, 17], [13, 3], [17, 14], [11, 10], [15, 9], [10, 2], [5, 15], [11, 5], [17, 12], [15, 18], [16, 7], [3, 5], [17, 14], [0, 12], [3, 15], [17, 12], [10, 5], [13, 11], [19, 17], [11, 5], [8, 1], [8, 17], [15, 18], [10, 5], [7, 8], [19, 1], [6, 4], [3, 15], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [0, 12], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [19, 0], [16, 7], [15, 18], [3, 14], [7, 8], [1, 0], [12, 6], [19, 17], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  3.0937283039093018

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[32, 56]
[61, 71]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[73, 81, 87]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[68, 73, 81]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[32, 56]
[61, 71]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8437559604644775

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [32, 56] cc => I, Pos: [32, 56] cc => I, Pos: [61, 71] cc => I, Pos: [61, 71] cc => I, Pos: [68, 73, 81] ccc => cc, Pos: [73, 81, 87] ccc => cc]

--------End Timer [Generate Plans]:  0.015611648559570312

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [32, 56] cc => I, Pos: [61, 71] cc => I, Pos: [68, 73, 81] ccc => cc]
Change: 3, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [32, 56] cc => I
Apply:  Pos: [61, 71] cc => I
Apply:  Pos: [68, 73, 81] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [0, 12], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 2], [5, 14], [6, 4], [3, 15], [7, 8], [10, 5], [18, 9], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [11, 10], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [5, 2], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [8, 17], [19, 17], [19, 1], [13, 3], [11, 10], [15, 9], [10, 2], [5, 15], [11, 5], [17, 12], [3, 15], [16, 7], [3, 5], [0, 12], [15, 18], [17, 12], [10, 5], [13, 11], [19, 17], [11, 5], [8, 17], [8, 1], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [3, 15], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [0, 12], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [19, 0], [16, 7], [15, 18], [3, 14], [7, 8], [1, 0], [12, 6], [19, 17], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.859367609024048

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[65, 69, 81]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.750091791152954

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [65, 69, 81] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [65, 69, 81] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [65, 69, 81] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [0, 12], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 14], [5, 2], [6, 4], [3, 15], [7, 8], [10, 5], [18, 9], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [11, 10], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [5, 2], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [19, 17], [8, 17], [19, 1], [13, 3], [11, 10], [15, 9], [10, 2], [5, 15], [11, 5], [17, 12], [3, 18], [16, 7], [3, 5], [0, 12], [15, 18], [17, 12], [10, 5], [13, 11], [19, 17], [11, 5], [8, 1], [8, 17], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [0, 12], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [19, 0], [16, 7], [15, 18], [3, 14], [7, 8], [1, 0], [12, 6], [19, 17], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.750091791152954

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[69, 90]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[69, 90]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.765730142593384

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [69, 90] cc => I, Pos: [69, 90] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [69, 90] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [69, 90] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [0, 12], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 2], [5, 14], [6, 4], [3, 15], [7, 8], [10, 5], [18, 9], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [11, 10], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [5, 2], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [8, 17], [19, 1], [19, 17], [13, 3], [11, 10], [15, 9], [10, 2], [5, 15], [11, 5], [17, 12], [3, 18], [16, 7], [3, 5], [0, 12], [17, 12], [10, 5], [13, 11], [19, 17], [11, 5], [8, 17], [8, 1], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [0, 12], [16, 7], [19, 8], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [19, 0], [16, 7], [15, 18], [3, 14], [7, 8], [1, 0], [12, 6], [19, 17], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.765730142593384

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [156] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 312

Reduced: 
 - size: 114 (42.22%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10952210426330566

[1, 0], [18, 4], [19, 8], [10, 2], [12, 6], [1, 17], [3, 14], [18, 4], [5, 15], [0, 12], [17, 6], [16, 7], [13, 11], [3, 14], [2, 18], [15, 9], [0, 12], [8, 17], [14, 15], [18, 9], [19, 1], [3, 5], [16, 7], [0, 12], [8, 17], [6, 4], [5, 2], [7, 13], [14, 15], [1, 17], [7, 13], [5, 14], [18, 9], [6, 4], [1, 17], [6, 4], [0, 12], [3, 15], [7, 8], [13, 11], [10, 5], [18, 9], [17, 6], [16, 19], [13, 11], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [11, 10], [4, 9], [5, 2], [17, 12], [5, 14], [1, 17], [16, 19], [11, 10], [7, 8], [15, 4], [5, 14], [17, 6], [0, 12], [8, 3], [18, 4], [5, 2], [8, 17], [14, 15], [11, 10], [6, 4], [1, 0], [5, 2], [19, 8], [18, 9], [11, 10], [0, 12], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 15], [14, 6], [18, 9], [16, 7], [11, 10], [2, 18], [0, 12], [15, 4], [13, 8], [16, 19], [3, 14], [13, 11], [2, 18], [7, 8], [5, 15], [4, 9], [12, 6], [3, 14], [1, 0], [19, 17], [11, 5], [8, 17], [19, 1], [13, 3], [14, 6], [18, 4], [0, 12], [11, 5], [0, 12], [10, 2], [15, 9], [17, 6], [7, 3], [11, 2], [5, 15], [7, 3], [17, 14], [18, 4], [11, 5], [17, 12], [19, 8], [15, 18], [14, 6], [16, 7], [3, 5], [19, 8], [17, 14], [11, 10], [18, 4], [7, 13], [0, 12], [3, 15], [17, 12], [7, 13], [11, 5], [18, 4], [3, 15], [10, 5], [19, 17], [13, 11], [8, 1], [18, 4], [3, 15], [18, 4], [8, 17], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [0, 12], [6, 4], [3, 14], [2, 18], [0, 12], [3, 15], [16, 19], [11, 5], [13, 8], [2, 18], [15, 4], [14, 6], [0, 12], [13, 3], [16, 7], [19, 8], [15, 18], [17, 14], [13, 3], [7, 8], [10, 5], [2, 18], [15, 9], [3, 5], [8, 17], [16, 19], [2, 18], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [11, 10], [5, 14], [8, 17], [15, 18], [12, 6], [4, 9], [5, 14], [1, 0], [8, 3], [18, 9], [11, 10], [14, 12], [6, 4], [11, 2], [7, 13], [18, 9], [8, 17], [17, 12], [8, 1], [16, 7], [5, 2], [15, 9], [13, 11], [14, 12], [15, 9], [10, 2], [8, 3], [1, 17], [6, 4], [16, 7], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [15, 9], [14, 12], [11, 2], [16, 19], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [8, 3], [18, 9], [14, 6], [19, 1], [4, 9], [8, 3], [16, 7], [15, 18], [3, 14], [7, 8], [4, 9], [1, 0], [11, 2], [12, 6], [19, 17], [8, 3], [5, 15], [10, 2], [6, 4], [16, 7], [8, 1], [14, 6], [3, 5], [18, 9], [19, 17], [16, 7], [8, 1], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 7]
[6, 13]
[9, 16]
[11, 22]
[16, 23]
[17, 24]
[18, 28]
[27, 30]
[19, 32]
[25, 33]
[29, 34]
[33, 35]
[23, 36]
[32, 41]
[39, 44]
[36, 48]
[43, 57]
[51, 58]
[55, 61]
[53, 66]
[58, 69]
[66, 72]
[69, 75]
[74, 84]
[76, 88]
[87, 94]
[92, 99]
[102, 109]
[108, 110]
[114, 117]
[107, 119]
[122, 127]
[131, 135]
[130, 137]
[133, 138]
[137, 143]
[138, 144]
[143, 145]
[152, 156]
[155, 161]
[156, 164]
[165, 170]
[173, 178]
[190, 195]
[189, 199]
[198, 204]
[191, 205]
[210, 213]
[197, 215]
[201, 217]
[208, 218]
[213, 224]
[177, 227]
[233, 238]
[237, 243]
[226, 245]
[247, 257]
[252, 258]
[253, 259]
[257, 260]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[75, 80, 86]
[82, 89, 96]
[118, 124, 128]
[186, 203, 208]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 71, 76]
[119, 123, 130]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[106, 113, 118]
[111, 115, 129]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 7]
[6, 13]
[9, 16]
[11, 22]
[16, 23]
[17, 24]
[18, 28]
[27, 30]
[19, 32]
[25, 33]
[29, 34]
[33, 35]
[23, 36]
[32, 41]
[39, 44]
[36, 48]
[43, 57]
[51, 58]
[55, 61]
[53, 66]
[58, 69]
[66, 72]
[69, 75]
[74, 84]
[76, 88]
[87, 94]
[92, 99]
[102, 109]
[108, 110]
[114, 117]
[107, 119]
[122, 127]
[131, 135]
[130, 137]
[133, 138]
[137, 143]
[138, 144]
[143, 145]
[152, 156]
[155, 161]
[156, 164]
[165, 170]
[173, 178]
[190, 195]
[189, 199]
[198, 204]
[191, 205]
[210, 213]
[197, 215]
[201, 217]
[208, 218]
[213, 224]
[177, 227]
[233, 238]
[237, 243]
[226, 245]
[247, 257]
[252, 258]
[253, 259]
[257, 260]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.156340599060059

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 7] cc => I, Pos: [1, 7] cc => I, Pos: [6, 13] cc => I, Pos: [6, 13] cc => I, Pos: [9, 16] cc => I, Pos: [9, 16] cc => I, Pos: [11, 22] cc => I, Pos: [11, 22] cc => I, Pos: [16, 23] cc => I, Pos: [16, 23] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [18, 28] cc => I, Pos: [18, 28] cc => I, Pos: [19, 32] cc => I, Pos: [19, 32] cc => I, Pos: [23, 36] cc => I, Pos: [23, 36] cc => I, Pos: [25, 33] cc => I, Pos: [25, 33] cc => I, Pos: [27, 30] cc => I, Pos: [27, 30] cc => I, Pos: [29, 34] cc => I, Pos: [29, 34] cc => I, Pos: [32, 41] cc => I, Pos: [32, 41] cc => I, Pos: [33, 35] cc => I, Pos: [33, 35] cc => I, Pos: [36, 48] cc => I, Pos: [36, 48] cc => I, Pos: [39, 44] cc => I, Pos: [39, 44] cc => I, Pos: [43, 57] cc => I, Pos: [43, 57] cc => I, Pos: [51, 58] cc => I, Pos: [51, 58] cc => I, Pos: [53, 66] cc => I, Pos: [53, 66] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [58, 69] cc => I, Pos: [58, 69] cc => I, Pos: [63, 71, 76] ccc => cc, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [69, 75] cc => I, Pos: [69, 75] cc => I, Pos: [74, 84] cc => I, Pos: [74, 84] cc => I, Pos: [75, 80, 86] ccc => cc, Pos: [76, 88] cc => I, Pos: [76, 88] cc => I, Pos: [82, 89, 96] ccc => cc, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [102, 109] cc => I, Pos: [102, 109] cc => I, Pos: [106, 113, 118] ccc => cc, Pos: [107, 119] cc => I, Pos: [107, 119] cc => I, Pos: [108, 110] cc => I, Pos: [108, 110] cc => I, Pos: [111, 115, 129] ccc => cc, Pos: [114, 117] cc => I, Pos: [114, 117] cc => I, Pos: [118, 124, 128] ccc => cc, Pos: [119, 123, 130] ccc => cc, Pos: [122, 127] cc => I, Pos: [122, 127] cc => I, Pos: [130, 137] cc => I, Pos: [130, 137] cc => I, Pos: [131, 135] cc => I, Pos: [131, 135] cc => I, Pos: [133, 138] cc => I, Pos: [133, 138] cc => I, Pos: [137, 143] cc => I, Pos: [137, 143] cc => I, Pos: [138, 144] cc => I, Pos: [138, 144] cc => I, Pos: [143, 145] cc => I, Pos: [143, 145] cc => I, Pos: [152, 156] cc => I, Pos: [152, 156] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [156, 164] cc => I, Pos: [156, 164] cc => I, Pos: [165, 170] cc => I, Pos: [165, 170] cc => I, Pos: [173, 178] cc => I, Pos: [173, 178] cc => I, Pos: [177, 227] cc => I, Pos: [177, 227] cc => I, Pos: [186, 203, 208] ccc => cc, Pos: [189, 199] cc => I, Pos: [189, 199] cc => I, Pos: [190, 195] cc => I, Pos: [190, 195] cc => I, Pos: [191, 205] cc => I, Pos: [191, 205] cc => I, Pos: [197, 215] cc => I, Pos: [197, 215] cc => I, Pos: [198, 204] cc => I, Pos: [198, 204] cc => I, Pos: [201, 217] cc => I, Pos: [201, 217] cc => I, Pos: [208, 218] cc => I, Pos: [208, 218] cc => I, Pos: [210, 213] cc => I, Pos: [210, 213] cc => I, Pos: [213, 224] cc => I, Pos: [213, 224] cc => I, Pos: [226, 245] cc => I, Pos: [226, 245] cc => I, Pos: [233, 238] cc => I, Pos: [233, 238] cc => I, Pos: [237, 243] cc => I, Pos: [237, 243] cc => I, Pos: [247, 257] cc => I, Pos: [247, 257] cc => I, Pos: [252, 258] cc => I, Pos: [252, 258] cc => I, Pos: [253, 259] cc => I, Pos: [253, 259] cc => I, Pos: [257, 260] cc => I, Pos: [257, 260] cc => I]

--------End Timer [Generate Plans]:  0.14043140411376953

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 7] cc => I,
 Pos: [6, 13] cc => I,
 Pos: [9, 16] cc => I,
 Pos: [11, 22] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [18, 28] cc => I,
 Pos: [19, 32] cc => I,
 Pos: [36, 48] cc => I,
 Pos: [33, 35] cc => I,
 Pos: [27, 30] cc => I,
 Pos: [29, 34] cc => I,
 Pos: [39, 44] cc => I,
 Pos: [43, 57] cc => I,
 Pos: [58, 69] cc => I,
 Pos: [53, 66] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [63, 71, 76] ccc => cc,
 Pos: [74, 84] cc => I,
 Pos: [75, 80, 86] ccc => cc,
 Pos: [82, 89, 96] ccc => cc,
 Pos: [87, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [118, 124, 128] ccc => cc,
 Pos: [107, 119] cc => I,
 Pos: [108, 110] cc => I,
 Pos: [111, 115, 129] ccc => cc,
 Pos: [114, 117] cc => I,
 Pos: [122, 127] cc => I,
 Pos: [130, 137] cc => I,
 Pos: [131, 135] cc => I,
 Pos: [133, 138] cc => I,
 Pos: [143, 145] cc => I,
 Pos: [156, 164] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [165, 170] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 227] cc => I,
 Pos: [208, 218] cc => I,
 Pos: [189, 199] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [191, 205] cc => I,
 Pos: [197, 215] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 217] cc => I,
 Pos: [213, 224] cc => I,
 Pos: [226, 245] cc => I,
 Pos: [233, 238] cc => I,
 Pos: [237, 243] cc => I,
 Pos: [247, 257] cc => I,
 Pos: [252, 258] cc => I,
 Pos: [253, 259] cc => I]
Change: 52, Saving: 53

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 7] cc => I
Apply:  Pos: [6, 13] cc => I
Apply:  Pos: [9, 16] cc => I
Apply:  Pos: [11, 22] cc => I
Apply:  Pos: [17, 24] cc => I
Apply:  Pos: [18, 28] cc => I
Apply:  Pos: [19, 32] cc => I
Apply:  Pos: [36, 48] cc => I
Apply:  Pos: [33, 35] cc => I
Apply:  Pos: [27, 30] cc => I
Apply:  Pos: [29, 34] cc => I
Apply:  Pos: [39, 44] cc => I
Apply:  Pos: [43, 57] cc => I
Apply:  Pos: [58, 69] cc => I
Apply:  Pos: [53, 66] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [63, 71, 76] ccc => cc
Apply:  Pos: [74, 84] cc => I
Apply:  Pos: [75, 80, 86] ccc => cc
Apply:  Pos: [82, 89, 96] ccc => cc
Apply:  Pos: [87, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [102, 109] cc => I
Apply:  Pos: [118, 124, 128] ccc => cc
Apply:  Pos: [107, 119] cc => I
Apply:  Pos: [108, 110] cc => I
Apply:  Pos: [111, 115, 129] ccc => cc
Apply:  Pos: [114, 117] cc => I
Apply:  Pos: [122, 127] cc => I
Apply:  Pos: [130, 137] cc => I
Apply:  Pos: [131, 135] cc => I
Apply:  Pos: [133, 138] cc => I
Apply:  Pos: [143, 145] cc => I
Apply:  Pos: [156, 164] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [165, 170] cc => I
Apply:  Pos: [173, 178] cc => I
Apply:  Pos: [177, 227] cc => I
Apply:  Pos: [208, 218] cc => I
Apply:  Pos: [189, 199] cc => I
Apply:  Pos: [190, 195] cc => I
Apply:  Pos: [191, 205] cc => I
Apply:  Pos: [197, 215] cc => I
Apply:  Pos: [198, 204] cc => I
Apply:  Pos: [201, 217] cc => I
Apply:  Pos: [213, 224] cc => I
Apply:  Pos: [226, 245] cc => I
Apply:  Pos: [233, 238] cc => I
Apply:  Pos: [237, 243] cc => I
Apply:  Pos: [247, 257] cc => I
Apply:  Pos: [252, 258] cc => I
Apply:  Pos: [253, 259] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 6], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [0, 12], [6, 4], [5, 2], [5, 14], [3, 15], [7, 8], [10, 5], [18, 9], [17, 6], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [11, 10], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [1, 0], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [0, 12], [5, 2], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [0, 12], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [1, 0], [19, 17], [8, 17], [19, 1], [13, 3], [14, 6], [11, 10], [15, 9], [17, 6], [10, 2], [5, 15], [17, 6], [11, 5], [17, 12], [15, 18], [14, 6], [16, 7], [3, 5], [0, 12], [17, 12], [11, 5], [10, 5], [19, 17], [13, 11], [8, 1], [3, 15], [8, 17], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [0, 12], [6, 4], [3, 14], [3, 15], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [15, 9], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [19, 1], [16, 7], [15, 18], [3, 14], [7, 8], [1, 0], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----End Timer [Execute Mapping]:  5.296772003173828

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 51]
[67, 70]
[72, 77]
[78, 91]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 13, 20]
[84, 87, 93]
[147, 152, 170]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[80, 82, 86]
[73, 84, 87]
[137, 147, 152]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 51]
[67, 70]
[72, 77]
[78, 91]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.01564359664917

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 13, 20] ccc => cc, Pos: [39, 51] cc => I, Pos: [39, 51] cc => I, Pos: [67, 70] cc => I, Pos: [67, 70] cc => I, Pos: [72, 77] cc => I, Pos: [72, 77] cc => I, Pos: [73, 84, 87] ccc => cc, Pos: [78, 91] cc => I, Pos: [78, 91] cc => I, Pos: [80, 82, 86] ccc => cc, Pos: [84, 87, 93] ccc => cc, Pos: [137, 147, 152] ccc => cc, Pos: [147, 152, 170] ccc => cc]

--------End Timer [Generate Plans]:  0.015611886978149414

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 13, 20] ccc => cc,
 Pos: [39, 51] cc => I,
 Pos: [67, 70] cc => I,
 Pos: [72, 77] cc => I,
 Pos: [73, 84, 87] ccc => cc,
 Pos: [78, 91] cc => I,
 Pos: [80, 82, 86] ccc => cc,
 Pos: [137, 147, 152] ccc => cc]
Change: 8, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 13, 20] ccc => cc
Apply:  Pos: [39, 51] cc => I
Apply:  Pos: [67, 70] cc => I
Apply:  Pos: [72, 77] cc => I
Apply:  Pos: [73, 84, 87] ccc => cc
Apply:  Pos: [78, 91] cc => I
Apply:  Pos: [80, 82, 86] ccc => cc
Apply:  Pos: [137, 147, 152] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [0, 12], [6, 4], [5, 14], [5, 2], [3, 15], [7, 8], [10, 5], [18, 9], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [11, 10], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [1, 0], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [5, 2], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [1, 0], [8, 17], [19, 1], [19, 17], [13, 3], [14, 6], [11, 10], [15, 9], [10, 2], [5, 15], [11, 5], [3, 15], [14, 6], [16, 7], [3, 5], [10, 5], [13, 11], [19, 17], [11, 5], [8, 1], [15, 18], [8, 17], [10, 5], [7, 8], [19, 1], [6, 4], [3, 15], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [15, 9], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [19, 1], [11, 5], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----End Timer [Execute Mapping]:  3.0312554836273193

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[32, 56]
[61, 68]
[58, 73]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[67, 76, 83]
[126, 136, 158]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[32, 56]
[61, 68]
[58, 73]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7656283378601074

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [32, 56] cc => I, Pos: [32, 56] cc => I, Pos: [58, 73] cc => I, Pos: [58, 73] cc => I, Pos: [61, 68] cc => I, Pos: [61, 68] cc => I, Pos: [67, 76, 83] ccc => cc, Pos: [126, 136, 158] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [32, 56] cc => I,
 Pos: [58, 73] cc => I,
 Pos: [61, 68] cc => I,
 Pos: [67, 76, 83] ccc => cc,
 Pos: [126, 136, 158] ccc => cc]
Change: 5, Saving: 5

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [32, 56] cc => I
Apply:  Pos: [58, 73] cc => I
Apply:  Pos: [61, 68] cc => I
Apply:  Pos: [67, 76, 83] ccc => cc
Apply:  Pos: [126, 136, 158] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [0, 12], [6, 4], [5, 2], [5, 14], [3, 15], [7, 8], [10, 5], [18, 9], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [11, 10], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [5, 2], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [8, 17], [19, 1], [13, 3], [11, 10], [15, 9], [10, 2], [5, 15], [11, 5], [3, 18], [16, 7], [10, 5], [3, 5], [13, 11], [11, 5], [8, 1], [15, 18], [8, 17], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [15, 9], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [19, 0], [11, 5], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.7656283378601074

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[55, 71]
[70, 84]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[55, 71]
[70, 84]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.5780913829803467

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [55, 71] cc => I, Pos: [55, 71] cc => I, Pos: [70, 84] cc => I, Pos: [70, 84] cc => I]

--------End Timer [Generate Plans]:  0.015629291534423828

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [55, 71] cc => I, Pos: [70, 84] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [55, 71] cc => I
Apply:  Pos: [70, 84] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [0, 12], [6, 4], [5, 14], [5, 2], [3, 15], [7, 8], [10, 5], [18, 9], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [11, 10], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [5, 2], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [19, 1], [13, 3], [11, 10], [15, 9], [10, 2], [5, 15], [11, 5], [3, 18], [16, 7], [3, 5], [10, 5], [13, 11], [11, 5], [8, 1], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [15, 9], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [19, 0], [11, 5], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.5937206745147705

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.515611171722412

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [0, 12], [6, 4], [5, 2], [5, 14], [3, 15], [7, 8], [10, 5], [18, 9], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [11, 10], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [5, 2], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [19, 1], [13, 3], [11, 10], [15, 9], [10, 2], [5, 15], [11, 5], [3, 18], [16, 7], [10, 5], [3, 5], [13, 11], [11, 5], [8, 1], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [15, 9], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [19, 0], [11, 5], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.515611171722412

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [147] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 294

Reduced: 
 - size: 123 (45.56%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10935425758361816

[1, 0], [18, 4], [19, 8], [10, 2], [12, 6], [1, 17], [3, 14], [18, 4], [5, 15], [0, 12], [17, 6], [16, 7], [13, 11], [3, 14], [2, 18], [15, 9], [0, 12], [8, 17], [14, 15], [18, 9], [19, 1], [3, 5], [16, 7], [0, 12], [8, 17], [6, 4], [5, 2], [7, 13], [14, 15], [1, 17], [7, 13], [5, 14], [18, 9], [6, 4], [1, 17], [6, 4], [0, 12], [3, 15], [7, 8], [13, 11], [10, 5], [18, 9], [17, 6], [16, 19], [13, 11], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [11, 10], [4, 9], [5, 2], [17, 12], [5, 14], [1, 17], [16, 19], [11, 10], [7, 8], [15, 4], [5, 14], [17, 6], [0, 12], [8, 3], [18, 4], [5, 2], [8, 17], [14, 15], [11, 10], [6, 4], [1, 0], [5, 2], [19, 8], [18, 9], [11, 10], [0, 12], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 15], [14, 6], [18, 9], [16, 7], [11, 10], [2, 18], [0, 12], [15, 4], [13, 8], [16, 19], [3, 14], [13, 11], [2, 18], [7, 8], [5, 15], [4, 9], [12, 6], [3, 14], [1, 0], [19, 17], [11, 5], [8, 17], [19, 1], [13, 3], [14, 6], [18, 4], [0, 12], [11, 5], [0, 12], [10, 2], [15, 9], [17, 6], [7, 3], [11, 2], [5, 15], [7, 3], [17, 14], [18, 4], [11, 5], [17, 12], [19, 8], [15, 18], [14, 6], [16, 7], [3, 5], [19, 8], [17, 14], [11, 10], [18, 4], [7, 13], [0, 12], [3, 15], [17, 12], [7, 13], [11, 5], [18, 4], [3, 15], [10, 5], [19, 17], [13, 11], [8, 1], [18, 4], [3, 15], [18, 4], [8, 17], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [0, 12], [6, 4], [3, 14], [2, 18], [0, 12], [3, 15], [16, 19], [11, 5], [13, 8], [2, 18], [15, 4], [14, 6], [0, 12], [13, 3], [16, 7], [19, 8], [15, 18], [17, 14], [13, 3], [7, 8], [10, 5], [2, 18], [15, 9], [3, 5], [8, 17], [16, 19], [2, 18], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [11, 10], [5, 14], [8, 17], [15, 18], [12, 6], [4, 9], [5, 14], [1, 0], [8, 3], [18, 9], [11, 10], [14, 12], [6, 4], [11, 2], [7, 13], [18, 9], [8, 17], [17, 12], [8, 1], [16, 7], [5, 2], [15, 9], [13, 11], [14, 12], [15, 9], [10, 2], [8, 3], [1, 17], [6, 4], [16, 7], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [15, 9], [14, 12], [11, 2], [16, 19], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [8, 3], [18, 9], [14, 6], [19, 1], [4, 9], [8, 3], [16, 7], [15, 18], [3, 14], [7, 8], [4, 9], [1, 0], [11, 2], [12, 6], [19, 17], [8, 3], [5, 15], [10, 2], [6, 4], [16, 7], [8, 1], [14, 6], [3, 5], [18, 9], [19, 17], [16, 7], [8, 1], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 7]
[6, 13]
[9, 16]
[11, 22]
[16, 23]
[17, 24]
[18, 28]
[27, 30]
[19, 32]
[25, 33]
[29, 34]
[33, 35]
[23, 36]
[32, 41]
[39, 44]
[36, 48]
[43, 57]
[51, 58]
[55, 61]
[53, 66]
[58, 69]
[66, 72]
[69, 75]
[74, 84]
[76, 88]
[87, 94]
[92, 99]
[102, 109]
[108, 110]
[114, 117]
[107, 119]
[122, 127]
[131, 135]
[130, 137]
[133, 138]
[137, 143]
[138, 144]
[143, 145]
[152, 156]
[155, 161]
[156, 164]
[165, 170]
[173, 178]
[190, 195]
[189, 199]
[198, 204]
[191, 205]
[210, 213]
[197, 215]
[201, 217]
[208, 218]
[213, 224]
[177, 227]
[233, 238]
[237, 243]
[226, 245]
[247, 257]
[252, 258]
[253, 259]
[257, 260]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[75, 80, 86]
[82, 89, 96]
[118, 124, 128]
[186, 203, 208]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 71, 76]
[119, 123, 130]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[106, 113, 118]
[111, 115, 129]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 7]
[6, 13]
[9, 16]
[11, 22]
[16, 23]
[17, 24]
[18, 28]
[27, 30]
[19, 32]
[25, 33]
[29, 34]
[33, 35]
[23, 36]
[32, 41]
[39, 44]
[36, 48]
[43, 57]
[51, 58]
[55, 61]
[53, 66]
[58, 69]
[66, 72]
[69, 75]
[74, 84]
[76, 88]
[87, 94]
[92, 99]
[102, 109]
[108, 110]
[114, 117]
[107, 119]
[122, 127]
[131, 135]
[130, 137]
[133, 138]
[137, 143]
[138, 144]
[143, 145]
[152, 156]
[155, 161]
[156, 164]
[165, 170]
[173, 178]
[190, 195]
[189, 199]
[198, 204]
[191, 205]
[210, 213]
[197, 215]
[201, 217]
[208, 218]
[213, 224]
[177, 227]
[233, 238]
[237, 243]
[226, 245]
[247, 257]
[252, 258]
[253, 259]
[257, 260]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.218742370605469

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 7] cc => I, Pos: [1, 7] cc => I, Pos: [6, 13] cc => I, Pos: [6, 13] cc => I, Pos: [9, 16] cc => I, Pos: [9, 16] cc => I, Pos: [11, 22] cc => I, Pos: [11, 22] cc => I, Pos: [16, 23] cc => I, Pos: [16, 23] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [18, 28] cc => I, Pos: [18, 28] cc => I, Pos: [19, 32] cc => I, Pos: [19, 32] cc => I, Pos: [23, 36] cc => I, Pos: [23, 36] cc => I, Pos: [25, 33] cc => I, Pos: [25, 33] cc => I, Pos: [27, 30] cc => I, Pos: [27, 30] cc => I, Pos: [29, 34] cc => I, Pos: [29, 34] cc => I, Pos: [32, 41] cc => I, Pos: [32, 41] cc => I, Pos: [33, 35] cc => I, Pos: [33, 35] cc => I, Pos: [36, 48] cc => I, Pos: [36, 48] cc => I, Pos: [39, 44] cc => I, Pos: [39, 44] cc => I, Pos: [43, 57] cc => I, Pos: [43, 57] cc => I, Pos: [51, 58] cc => I, Pos: [51, 58] cc => I, Pos: [53, 66] cc => I, Pos: [53, 66] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [58, 69] cc => I, Pos: [58, 69] cc => I, Pos: [63, 71, 76] ccc => cc, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [69, 75] cc => I, Pos: [69, 75] cc => I, Pos: [74, 84] cc => I, Pos: [74, 84] cc => I, Pos: [75, 80, 86] ccc => cc, Pos: [76, 88] cc => I, Pos: [76, 88] cc => I, Pos: [82, 89, 96] ccc => cc, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [102, 109] cc => I, Pos: [102, 109] cc => I, Pos: [106, 113, 118] ccc => cc, Pos: [107, 119] cc => I, Pos: [107, 119] cc => I, Pos: [108, 110] cc => I, Pos: [108, 110] cc => I, Pos: [111, 115, 129] ccc => cc, Pos: [114, 117] cc => I, Pos: [114, 117] cc => I, Pos: [118, 124, 128] ccc => cc, Pos: [119, 123, 130] ccc => cc, Pos: [122, 127] cc => I, Pos: [122, 127] cc => I, Pos: [130, 137] cc => I, Pos: [130, 137] cc => I, Pos: [131, 135] cc => I, Pos: [131, 135] cc => I, Pos: [133, 138] cc => I, Pos: [133, 138] cc => I, Pos: [137, 143] cc => I, Pos: [137, 143] cc => I, Pos: [138, 144] cc => I, Pos: [138, 144] cc => I, Pos: [143, 145] cc => I, Pos: [143, 145] cc => I, Pos: [152, 156] cc => I, Pos: [152, 156] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [156, 164] cc => I, Pos: [156, 164] cc => I, Pos: [165, 170] cc => I, Pos: [165, 170] cc => I, Pos: [173, 178] cc => I, Pos: [173, 178] cc => I, Pos: [177, 227] cc => I, Pos: [177, 227] cc => I, Pos: [186, 203, 208] ccc => cc, Pos: [189, 199] cc => I, Pos: [189, 199] cc => I, Pos: [190, 195] cc => I, Pos: [190, 195] cc => I, Pos: [191, 205] cc => I, Pos: [191, 205] cc => I, Pos: [197, 215] cc => I, Pos: [197, 215] cc => I, Pos: [198, 204] cc => I, Pos: [198, 204] cc => I, Pos: [201, 217] cc => I, Pos: [201, 217] cc => I, Pos: [208, 218] cc => I, Pos: [208, 218] cc => I, Pos: [210, 213] cc => I, Pos: [210, 213] cc => I, Pos: [213, 224] cc => I, Pos: [213, 224] cc => I, Pos: [226, 245] cc => I, Pos: [226, 245] cc => I, Pos: [233, 238] cc => I, Pos: [233, 238] cc => I, Pos: [237, 243] cc => I, Pos: [237, 243] cc => I, Pos: [247, 257] cc => I, Pos: [247, 257] cc => I, Pos: [252, 258] cc => I, Pos: [252, 258] cc => I, Pos: [253, 259] cc => I, Pos: [253, 259] cc => I, Pos: [257, 260] cc => I, Pos: [257, 260] cc => I]

--------End Timer [Generate Plans]:  0.14063382148742676

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 7] cc => I,
 Pos: [6, 13] cc => I,
 Pos: [9, 16] cc => I,
 Pos: [11, 22] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [18, 28] cc => I,
 Pos: [32, 41] cc => I,
 Pos: [36, 48] cc => I,
 Pos: [33, 35] cc => I,
 Pos: [27, 30] cc => I,
 Pos: [29, 34] cc => I,
 Pos: [39, 44] cc => I,
 Pos: [43, 57] cc => I,
 Pos: [51, 58] cc => I,
 Pos: [66, 72] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [76, 88] cc => I,
 Pos: [75, 80, 86] ccc => cc,
 Pos: [74, 84] cc => I,
 Pos: [82, 89, 96] ccc => cc,
 Pos: [87, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [118, 124, 128] ccc => cc,
 Pos: [119, 123, 130] ccc => cc,
 Pos: [108, 110] cc => I,
 Pos: [111, 115, 129] ccc => cc,
 Pos: [114, 117] cc => I,
 Pos: [122, 127] cc => I,
 Pos: [131, 135] cc => I,
 Pos: [138, 144] cc => I,
 Pos: [143, 145] cc => I,
 Pos: [156, 164] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [165, 170] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 227] cc => I,
 Pos: [208, 218] cc => I,
 Pos: [189, 199] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [191, 205] cc => I,
 Pos: [197, 215] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 217] cc => I,
 Pos: [210, 213] cc => I,
 Pos: [226, 245] cc => I,
 Pos: [233, 238] cc => I,
 Pos: [237, 243] cc => I,
 Pos: [247, 257] cc => I,
 Pos: [252, 258] cc => I,
 Pos: [253, 259] cc => I]
Change: 51, Saving: 52

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 7] cc => I
Apply:  Pos: [6, 13] cc => I
Apply:  Pos: [9, 16] cc => I
Apply:  Pos: [11, 22] cc => I
Apply:  Pos: [17, 24] cc => I
Apply:  Pos: [18, 28] cc => I
Apply:  Pos: [32, 41] cc => I
Apply:  Pos: [36, 48] cc => I
Apply:  Pos: [33, 35] cc => I
Apply:  Pos: [27, 30] cc => I
Apply:  Pos: [29, 34] cc => I
Apply:  Pos: [39, 44] cc => I
Apply:  Pos: [43, 57] cc => I
Apply:  Pos: [51, 58] cc => I
Apply:  Pos: [66, 72] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [76, 88] cc => I
Apply:  Pos: [75, 80, 86] ccc => cc
Apply:  Pos: [74, 84] cc => I
Apply:  Pos: [82, 89, 96] ccc => cc
Apply:  Pos: [87, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [102, 109] cc => I
Apply:  Pos: [118, 124, 128] ccc => cc
Apply:  Pos: [119, 123, 130] ccc => cc
Apply:  Pos: [108, 110] cc => I
Apply:  Pos: [111, 115, 129] ccc => cc
Apply:  Pos: [114, 117] cc => I
Apply:  Pos: [122, 127] cc => I
Apply:  Pos: [131, 135] cc => I
Apply:  Pos: [138, 144] cc => I
Apply:  Pos: [143, 145] cc => I
Apply:  Pos: [156, 164] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [165, 170] cc => I
Apply:  Pos: [173, 178] cc => I
Apply:  Pos: [177, 227] cc => I
Apply:  Pos: [208, 218] cc => I
Apply:  Pos: [189, 199] cc => I
Apply:  Pos: [190, 195] cc => I
Apply:  Pos: [191, 205] cc => I
Apply:  Pos: [197, 215] cc => I
Apply:  Pos: [198, 204] cc => I
Apply:  Pos: [201, 217] cc => I
Apply:  Pos: [210, 213] cc => I
Apply:  Pos: [226, 245] cc => I
Apply:  Pos: [233, 238] cc => I
Apply:  Pos: [237, 243] cc => I
Apply:  Pos: [247, 257] cc => I
Apply:  Pos: [252, 258] cc => I
Apply:  Pos: [253, 259] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 6], [13, 11], [2, 18], [15, 9], [18, 9], [19, 1], [3, 5], [0, 12], [6, 4], [5, 2], [5, 14], [3, 15], [7, 8], [10, 5], [17, 6], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [4, 9], [5, 2], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [0, 12], [8, 3], [18, 4], [8, 17], [14, 15], [11, 10], [6, 4], [1, 0], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [1, 0], [19, 17], [8, 17], [19, 1], [13, 3], [14, 6], [18, 4], [11, 10], [15, 9], [17, 6], [10, 2], [5, 15], [17, 6], [15, 18], [11, 5], [17, 12], [18, 4], [14, 6], [16, 7], [3, 5], [0, 12], [3, 15], [17, 12], [11, 5], [18, 4], [10, 5], [19, 17], [13, 11], [8, 1], [8, 17], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [0, 12], [6, 4], [3, 14], [3, 15], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [19, 1], [16, 7], [15, 18], [3, 14], [7, 8], [1, 0], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----End Timer [Execute Mapping]:  5.3593761920928955

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[40, 58]
[67, 70]
[74, 82]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 14, 20]
[149, 154, 172]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[16, 19, 27]
[138, 149, 154]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[40, 58]
[67, 70]
[74, 82]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.06250262260437

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 14, 20] ccc => cc, Pos: [16, 19, 27] ccc => cc, Pos: [40, 58] cc => I, Pos: [40, 58] cc => I, Pos: [67, 70] cc => I, Pos: [67, 70] cc => I, Pos: [74, 82] cc => I, Pos: [74, 82] cc => I, Pos: [138, 149, 154] ccc => cc, Pos: [149, 154, 172] ccc => cc]

--------End Timer [Generate Plans]:  0.015636205673217773

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 14, 20] ccc => cc,
 Pos: [16, 19, 27] ccc => cc,
 Pos: [40, 58] cc => I,
 Pos: [67, 70] cc => I,
 Pos: [74, 82] cc => I,
 Pos: [138, 149, 154] ccc => cc]
Change: 6, Saving: 6

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 14, 20] ccc => cc
Apply:  Pos: [16, 19, 27] ccc => cc
Apply:  Pos: [40, 58] cc => I
Apply:  Pos: [67, 70] cc => I
Apply:  Pos: [74, 82] cc => I
Apply:  Pos: [138, 149, 154] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [18, 9], [15, 9], [19, 1], [3, 5], [0, 12], [6, 4], [5, 14], [10, 5], [3, 15], [7, 8], [5, 2], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [0, 12], [8, 3], [18, 4], [8, 17], [14, 15], [11, 10], [6, 4], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [8, 17], [19, 1], [19, 17], [13, 3], [14, 6], [18, 4], [11, 10], [15, 9], [10, 2], [5, 15], [15, 18], [11, 5], [17, 12], [14, 6], [16, 7], [3, 5], [0, 12], [3, 15], [17, 12], [11, 5], [10, 5], [19, 17], [13, 11], [8, 17], [8, 1], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [0, 12], [6, 4], [3, 15], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [19, 1], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----End Timer [Execute Mapping]:  3.078138828277588

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[59, 68]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[72, 81, 88]
[130, 141, 163]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[75, 77, 80]
[65, 72, 81]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[59, 68]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8437225818634033

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [59, 68] cc => I, Pos: [59, 68] cc => I, Pos: [65, 72, 81] ccc => cc, Pos: [72, 81, 88] ccc => cc, Pos: [75, 77, 80] ccc => cc, Pos: [130, 141, 163] ccc => cc]

--------End Timer [Generate Plans]:  0.015609979629516602

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [59, 68] cc => I,
 Pos: [72, 81, 88] ccc => cc,
 Pos: [75, 77, 80] ccc => cc,
 Pos: [130, 141, 163] ccc => cc]
Change: 4, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [59, 68] cc => I
Apply:  Pos: [72, 81, 88] ccc => cc
Apply:  Pos: [75, 77, 80] ccc => cc
Apply:  Pos: [130, 141, 163] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [18, 9], [19, 1], [3, 5], [0, 12], [6, 4], [5, 14], [10, 5], [3, 15], [7, 8], [5, 2], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [0, 12], [8, 3], [18, 4], [8, 17], [14, 15], [11, 10], [6, 4], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [8, 17], [19, 17], [19, 1], [13, 3], [18, 4], [11, 10], [15, 9], [10, 2], [5, 15], [15, 18], [11, 5], [17, 12], [16, 7], [3, 5], [0, 12], [3, 18], [17, 12], [10, 5], [13, 11], [19, 17], [11, 5], [8, 1], [8, 17], [15, 18], [10, 5], [7, 8], [19, 1], [0, 12], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [19, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.85933256149292

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[78, 92]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[78, 92]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7498109340667725

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [78, 92] cc => I, Pos: [78, 92] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [78, 92] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [78, 92] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [18, 9], [15, 9], [19, 1], [3, 5], [0, 12], [6, 4], [5, 14], [10, 5], [3, 15], [7, 8], [5, 2], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [0, 12], [8, 3], [18, 4], [8, 17], [14, 15], [11, 10], [6, 4], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [19, 17], [8, 17], [19, 1], [13, 3], [18, 4], [11, 10], [15, 9], [10, 2], [5, 15], [15, 18], [11, 5], [17, 12], [16, 7], [3, 5], [0, 12], [3, 18], [17, 12], [10, 5], [13, 11], [19, 17], [11, 5], [8, 17], [8, 1], [10, 5], [7, 8], [19, 1], [0, 12], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [19, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.7498109340667725

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.70316481590271

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [18, 9], [19, 1], [3, 5], [0, 12], [6, 4], [5, 14], [10, 5], [3, 15], [7, 8], [5, 2], [7, 3], [18, 4], [8, 1], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [0, 12], [8, 3], [18, 4], [8, 17], [14, 15], [11, 10], [6, 4], [19, 8], [11, 2], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [8, 17], [19, 1], [19, 17], [13, 3], [18, 4], [11, 10], [15, 9], [10, 2], [5, 15], [15, 18], [11, 5], [17, 12], [16, 7], [3, 5], [0, 12], [3, 18], [17, 12], [10, 5], [13, 11], [19, 17], [11, 5], [8, 1], [8, 17], [10, 5], [7, 8], [19, 1], [0, 12], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [17, 12], [7, 8], [3, 14], [19, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.70316481590271

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [157] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 314

Reduced: 
 - size: 113 (41.85%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12497830390930176

[1, 0], [18, 4], [19, 8], [10, 2], [12, 6], [1, 17], [3, 14], [18, 4], [5, 15], [0, 12], [17, 6], [16, 7], [13, 11], [3, 14], [2, 18], [15, 9], [0, 12], [8, 17], [14, 15], [18, 9], [19, 1], [3, 5], [16, 7], [0, 12], [8, 17], [6, 4], [5, 2], [7, 13], [14, 15], [1, 17], [7, 13], [5, 14], [18, 9], [6, 4], [1, 17], [6, 4], [0, 12], [3, 15], [7, 8], [13, 11], [10, 5], [18, 9], [17, 6], [16, 19], [13, 11], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [11, 10], [4, 9], [5, 2], [17, 12], [5, 14], [1, 17], [16, 19], [11, 10], [7, 8], [15, 4], [5, 14], [17, 6], [0, 12], [8, 3], [18, 4], [5, 2], [8, 17], [14, 15], [11, 10], [6, 4], [1, 0], [5, 2], [19, 8], [18, 9], [11, 10], [0, 12], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 15], [14, 6], [18, 9], [16, 7], [11, 10], [2, 18], [0, 12], [15, 4], [13, 8], [16, 19], [3, 14], [13, 11], [2, 18], [7, 8], [5, 15], [4, 9], [12, 6], [3, 14], [1, 0], [19, 17], [11, 5], [8, 17], [19, 1], [13, 3], [14, 6], [18, 4], [0, 12], [11, 5], [0, 12], [10, 2], [15, 9], [17, 6], [7, 3], [11, 2], [5, 15], [7, 3], [17, 14], [18, 4], [11, 5], [17, 12], [19, 8], [15, 18], [14, 6], [16, 7], [3, 5], [19, 8], [17, 14], [11, 10], [18, 4], [7, 13], [0, 12], [3, 15], [17, 12], [7, 13], [11, 5], [18, 4], [3, 15], [10, 5], [19, 17], [13, 11], [8, 1], [18, 4], [3, 15], [18, 4], [8, 17], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [0, 12], [6, 4], [3, 14], [2, 18], [0, 12], [3, 15], [16, 19], [11, 5], [13, 8], [2, 18], [15, 4], [14, 6], [0, 12], [13, 3], [16, 7], [19, 8], [15, 18], [17, 14], [13, 3], [7, 8], [10, 5], [2, 18], [15, 9], [3, 5], [8, 17], [16, 19], [2, 18], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 7], [6, 4], [1, 17], [11, 10], [5, 14], [8, 17], [15, 18], [12, 6], [4, 9], [5, 14], [1, 0], [8, 3], [18, 9], [11, 10], [14, 12], [6, 4], [11, 2], [7, 13], [18, 9], [8, 17], [17, 12], [8, 1], [16, 7], [5, 2], [15, 9], [13, 11], [14, 12], [15, 9], [10, 2], [8, 3], [1, 17], [6, 4], [16, 7], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [15, 9], [14, 12], [11, 2], [16, 19], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [8, 3], [18, 9], [14, 6], [19, 1], [4, 9], [8, 3], [16, 7], [15, 18], [3, 14], [7, 8], [4, 9], [1, 0], [11, 2], [12, 6], [19, 17], [8, 3], [5, 15], [10, 2], [6, 4], [16, 7], [8, 1], [14, 6], [3, 5], [18, 9], [19, 17], [16, 7], [8, 1], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 7]
[6, 13]
[9, 16]
[11, 22]
[16, 23]
[17, 24]
[18, 28]
[27, 30]
[19, 32]
[25, 33]
[29, 34]
[33, 35]
[23, 36]
[32, 41]
[39, 44]
[36, 48]
[43, 57]
[51, 58]
[55, 61]
[53, 66]
[58, 69]
[66, 72]
[69, 75]
[74, 84]
[76, 88]
[87, 94]
[92, 99]
[102, 109]
[108, 110]
[114, 117]
[107, 119]
[122, 127]
[131, 135]
[130, 137]
[133, 138]
[137, 143]
[138, 144]
[143, 145]
[152, 156]
[155, 161]
[156, 164]
[165, 170]
[173, 178]
[190, 195]
[189, 199]
[198, 204]
[191, 205]
[210, 213]
[197, 215]
[201, 217]
[208, 218]
[213, 224]
[177, 227]
[233, 238]
[237, 243]
[226, 245]
[247, 257]
[252, 258]
[253, 259]
[257, 260]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[75, 80, 86]
[82, 89, 96]
[118, 124, 128]
[186, 203, 208]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 71, 76]
[119, 123, 130]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[106, 113, 118]
[111, 115, 129]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 7]
[6, 13]
[9, 16]
[11, 22]
[16, 23]
[17, 24]
[18, 28]
[27, 30]
[19, 32]
[25, 33]
[29, 34]
[33, 35]
[23, 36]
[32, 41]
[39, 44]
[36, 48]
[43, 57]
[51, 58]
[55, 61]
[53, 66]
[58, 69]
[66, 72]
[69, 75]
[74, 84]
[76, 88]
[87, 94]
[92, 99]
[102, 109]
[108, 110]
[114, 117]
[107, 119]
[122, 127]
[131, 135]
[130, 137]
[133, 138]
[137, 143]
[138, 144]
[143, 145]
[152, 156]
[155, 161]
[156, 164]
[165, 170]
[173, 178]
[190, 195]
[189, 199]
[198, 204]
[191, 205]
[210, 213]
[197, 215]
[201, 217]
[208, 218]
[213, 224]
[177, 227]
[233, 238]
[237, 243]
[226, 245]
[247, 257]
[252, 258]
[253, 259]
[257, 260]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.187588691711426

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 7] cc => I, Pos: [1, 7] cc => I, Pos: [6, 13] cc => I, Pos: [6, 13] cc => I, Pos: [9, 16] cc => I, Pos: [9, 16] cc => I, Pos: [11, 22] cc => I, Pos: [11, 22] cc => I, Pos: [16, 23] cc => I, Pos: [16, 23] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [18, 28] cc => I, Pos: [18, 28] cc => I, Pos: [19, 32] cc => I, Pos: [19, 32] cc => I, Pos: [23, 36] cc => I, Pos: [23, 36] cc => I, Pos: [25, 33] cc => I, Pos: [25, 33] cc => I, Pos: [27, 30] cc => I, Pos: [27, 30] cc => I, Pos: [29, 34] cc => I, Pos: [29, 34] cc => I, Pos: [32, 41] cc => I, Pos: [32, 41] cc => I, Pos: [33, 35] cc => I, Pos: [33, 35] cc => I, Pos: [36, 48] cc => I, Pos: [36, 48] cc => I, Pos: [39, 44] cc => I, Pos: [39, 44] cc => I, Pos: [43, 57] cc => I, Pos: [43, 57] cc => I, Pos: [51, 58] cc => I, Pos: [51, 58] cc => I, Pos: [53, 66] cc => I, Pos: [53, 66] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [58, 69] cc => I, Pos: [58, 69] cc => I, Pos: [63, 71, 76] ccc => cc, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [69, 75] cc => I, Pos: [69, 75] cc => I, Pos: [74, 84] cc => I, Pos: [74, 84] cc => I, Pos: [75, 80, 86] ccc => cc, Pos: [76, 88] cc => I, Pos: [76, 88] cc => I, Pos: [82, 89, 96] ccc => cc, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [102, 109] cc => I, Pos: [102, 109] cc => I, Pos: [106, 113, 118] ccc => cc, Pos: [107, 119] cc => I, Pos: [107, 119] cc => I, Pos: [108, 110] cc => I, Pos: [108, 110] cc => I, Pos: [111, 115, 129] ccc => cc, Pos: [114, 117] cc => I, Pos: [114, 117] cc => I, Pos: [118, 124, 128] ccc => cc, Pos: [119, 123, 130] ccc => cc, Pos: [122, 127] cc => I, Pos: [122, 127] cc => I, Pos: [130, 137] cc => I, Pos: [130, 137] cc => I, Pos: [131, 135] cc => I, Pos: [131, 135] cc => I, Pos: [133, 138] cc => I, Pos: [133, 138] cc => I, Pos: [137, 143] cc => I, Pos: [137, 143] cc => I, Pos: [138, 144] cc => I, Pos: [138, 144] cc => I, Pos: [143, 145] cc => I, Pos: [143, 145] cc => I, Pos: [152, 156] cc => I, Pos: [152, 156] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [156, 164] cc => I, Pos: [156, 164] cc => I, Pos: [165, 170] cc => I, Pos: [165, 170] cc => I, Pos: [173, 178] cc => I, Pos: [173, 178] cc => I, Pos: [177, 227] cc => I, Pos: [177, 227] cc => I, Pos: [186, 203, 208] ccc => cc, Pos: [189, 199] cc => I, Pos: [189, 199] cc => I, Pos: [190, 195] cc => I, Pos: [190, 195] cc => I, Pos: [191, 205] cc => I, Pos: [191, 205] cc => I, Pos: [197, 215] cc => I, Pos: [197, 215] cc => I, Pos: [198, 204] cc => I, Pos: [198, 204] cc => I, Pos: [201, 217] cc => I, Pos: [201, 217] cc => I, Pos: [208, 218] cc => I, Pos: [208, 218] cc => I, Pos: [210, 213] cc => I, Pos: [210, 213] cc => I, Pos: [213, 224] cc => I, Pos: [213, 224] cc => I, Pos: [226, 245] cc => I, Pos: [226, 245] cc => I, Pos: [233, 238] cc => I, Pos: [233, 238] cc => I, Pos: [237, 243] cc => I, Pos: [237, 243] cc => I, Pos: [247, 257] cc => I, Pos: [247, 257] cc => I, Pos: [252, 258] cc => I, Pos: [252, 258] cc => I, Pos: [253, 259] cc => I, Pos: [253, 259] cc => I, Pos: [257, 260] cc => I, Pos: [257, 260] cc => I]

Plan: 1
[Pos: [1, 7] cc => I,
 Pos: [6, 13] cc => I,
 Pos: [9, 16] cc => I,
 Pos: [11, 22] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [18, 28] cc => I,
 Pos: [19, 32] cc => I,
 Pos: [23, 36] cc => I,
 Pos: [25, 33] cc => I,
 Pos: [27, 30] cc => I,
 Pos: [29, 34] cc => I,
 Pos: [39, 44] cc => I,
 Pos: [43, 57] cc => I,
 Pos: [51, 58] cc => I,
 Pos: [53, 66] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [63, 71, 76] ccc => cc,
 Pos: [69, 75] cc => I,
 Pos: [74, 84] cc => I,
 Pos: [82, 89, 96] ccc => cc,
 Pos: [87, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [106, 113, 118] ccc => cc,
 Pos: [107, 119] cc => I,
 Pos: [108, 110] cc => I,
 Pos: [111, 115, 129] ccc => cc,
 Pos: [114, 117] cc => I,
 Pos: [122, 127] cc => I,
 Pos: [130, 137] cc => I,
 Pos: [131, 135] cc => I,
 Pos: [133, 138] cc => I,
 Pos: [143, 145] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [165, 170] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 227] cc => I,
 Pos: [186, 203, 208] ccc => cc,
 Pos: [189, 199] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [191, 205] cc => I,
 Pos: [197, 215] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 217] cc => I,
 Pos: [210, 213] cc => I,
 Pos: [226, 245] cc => I,
 Pos: [233, 238] cc => I,
 Pos: [237, 243] cc => I,
 Pos: [247, 257] cc => I,
 Pos: [252, 258] cc => I,
 Pos: [253, 259] cc => I]
Change: 52, Saving: 52

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.12498354911804199

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 7] cc => I,
 Pos: [6, 13] cc => I,
 Pos: [9, 16] cc => I,
 Pos: [11, 22] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [18, 28] cc => I,
 Pos: [19, 32] cc => I,
 Pos: [23, 36] cc => I,
 Pos: [25, 33] cc => I,
 Pos: [27, 30] cc => I,
 Pos: [29, 34] cc => I,
 Pos: [39, 44] cc => I,
 Pos: [43, 57] cc => I,
 Pos: [51, 58] cc => I,
 Pos: [53, 66] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [63, 71, 76] ccc => cc,
 Pos: [69, 75] cc => I,
 Pos: [74, 84] cc => I,
 Pos: [82, 89, 96] ccc => cc,
 Pos: [87, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [102, 109] cc => I,
 Pos: [106, 113, 118] ccc => cc,
 Pos: [107, 119] cc => I,
 Pos: [108, 110] cc => I,
 Pos: [111, 115, 129] ccc => cc,
 Pos: [114, 117] cc => I,
 Pos: [122, 127] cc => I,
 Pos: [130, 137] cc => I,
 Pos: [131, 135] cc => I,
 Pos: [133, 138] cc => I,
 Pos: [143, 145] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [165, 170] cc => I,
 Pos: [173, 178] cc => I,
 Pos: [177, 227] cc => I,
 Pos: [186, 203, 208] ccc => cc,
 Pos: [189, 199] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [191, 205] cc => I,
 Pos: [197, 215] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 217] cc => I,
 Pos: [210, 213] cc => I,
 Pos: [226, 245] cc => I,
 Pos: [233, 238] cc => I,
 Pos: [237, 243] cc => I,
 Pos: [247, 257] cc => I,
 Pos: [252, 258] cc => I,
 Pos: [253, 259] cc => I]
Change: 52, Saving: 52

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 7] cc => I
Apply:  Pos: [6, 13] cc => I
Apply:  Pos: [9, 16] cc => I
Apply:  Pos: [11, 22] cc => I
Apply:  Pos: [17, 24] cc => I
Apply:  Pos: [18, 28] cc => I
Apply:  Pos: [19, 32] cc => I
Apply:  Pos: [23, 36] cc => I
Apply:  Pos: [25, 33] cc => I
Apply:  Pos: [27, 30] cc => I
Apply:  Pos: [29, 34] cc => I
Apply:  Pos: [39, 44] cc => I
Apply:  Pos: [43, 57] cc => I
Apply:  Pos: [51, 58] cc => I
Apply:  Pos: [53, 66] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [63, 71, 76] ccc => cc
Apply:  Pos: [69, 75] cc => I
Apply:  Pos: [74, 84] cc => I
Apply:  Pos: [82, 89, 96] ccc => cc
Apply:  Pos: [87, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [102, 109] cc => I
Apply:  Pos: [106, 113, 118] ccc => cc
Apply:  Pos: [107, 119] cc => I
Apply:  Pos: [108, 110] cc => I
Apply:  Pos: [111, 115, 129] ccc => cc
Apply:  Pos: [114, 117] cc => I
Apply:  Pos: [122, 127] cc => I
Apply:  Pos: [130, 137] cc => I
Apply:  Pos: [131, 135] cc => I
Apply:  Pos: [133, 138] cc => I
Apply:  Pos: [143, 145] cc => I
Apply:  Pos: [152, 156] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [165, 170] cc => I
Apply:  Pos: [173, 178] cc => I
Apply:  Pos: [177, 227] cc => I
Apply:  Pos: [186, 203, 208] ccc => cc
Apply:  Pos: [189, 199] cc => I
Apply:  Pos: [190, 195] cc => I
Apply:  Pos: [191, 205] cc => I
Apply:  Pos: [197, 215] cc => I
Apply:  Pos: [198, 204] cc => I
Apply:  Pos: [201, 217] cc => I
Apply:  Pos: [210, 213] cc => I
Apply:  Pos: [226, 245] cc => I
Apply:  Pos: [233, 238] cc => I
Apply:  Pos: [237, 243] cc => I
Apply:  Pos: [247, 257] cc => I
Apply:  Pos: [252, 258] cc => I
Apply:  Pos: [253, 259] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 6], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 2], [5, 14], [6, 4], [3, 15], [7, 8], [10, 5], [18, 9], [17, 6], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [1, 0], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [0, 12], [5, 2], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [11, 10], [0, 12], [15, 4], [13, 8], [16, 19], [13, 11], [7, 8], [4, 9], [12, 6], [1, 0], [19, 17], [8, 17], [19, 1], [13, 3], [17, 14], [11, 10], [15, 9], [14, 6], [10, 2], [5, 15], [11, 5], [17, 12], [15, 18], [14, 6], [16, 7], [3, 5], [17, 14], [0, 12], [17, 12], [11, 5], [10, 5], [19, 17], [13, 11], [8, 1], [3, 15], [8, 17], [11, 5], [15, 18], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [3, 15], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [0, 12], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [1, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [19, 1], [16, 7], [15, 18], [3, 14], [7, 8], [1, 0], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----End Timer [Execute Mapping]:  5.312572240829468

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 50]
[66, 72]
[70, 76]
[77, 98]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 14, 19]
[83, 86, 91]
[147, 152, 170]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[13, 17, 39]
[49, 54, 64]
[79, 81, 85]
[71, 83, 86]
[136, 147, 152]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 50]
[66, 72]
[70, 76]
[77, 98]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9839136600494385

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 14, 19] ccc => cc, Pos: [13, 17, 39] ccc => cc, Pos: [38, 50] cc => I, Pos: [38, 50] cc => I, Pos: [49, 54, 64] ccc => cc, Pos: [66, 72] cc => I, Pos: [66, 72] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [71, 83, 86] ccc => cc, Pos: [77, 98] cc => I, Pos: [77, 98] cc => I, Pos: [79, 81, 85] ccc => cc, Pos: [83, 86, 91] ccc => cc, Pos: [136, 147, 152] ccc => cc, Pos: [147, 152, 170] ccc => cc]

Plan: 1
[Pos: [6, 14, 19] ccc => cc,
 Pos: [13, 17, 39] ccc => cc,
 Pos: [38, 50] cc => I,
 Pos: [49, 54, 64] ccc => cc,
 Pos: [66, 72] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [71, 83, 86] ccc => cc,
 Pos: [77, 98] cc => I,
 Pos: [79, 81, 85] ccc => cc,
 Pos: [136, 147, 152] ccc => cc]
Change: 10, Saving: 10

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015624523162841797

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 14, 19] ccc => cc,
 Pos: [13, 17, 39] ccc => cc,
 Pos: [38, 50] cc => I,
 Pos: [49, 54, 64] ccc => cc,
 Pos: [66, 72] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [71, 83, 86] ccc => cc,
 Pos: [77, 98] cc => I,
 Pos: [79, 81, 85] ccc => cc,
 Pos: [136, 147, 152] ccc => cc]
Change: 10, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 14, 19] ccc => cc
Apply:  Pos: [13, 17, 39] ccc => cc
Apply:  Pos: [38, 50] cc => I
Apply:  Pos: [49, 54, 64] ccc => cc
Apply:  Pos: [66, 72] cc => I
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [71, 83, 86] ccc => cc
Apply:  Pos: [77, 98] cc => I
Apply:  Pos: [79, 81, 85] ccc => cc
Apply:  Pos: [136, 147, 152] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 14], [10, 5], [6, 4], [3, 15], [7, 8], [5, 2], [18, 9], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [1, 0], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [13, 11], [15, 4], [13, 8], [16, 19], [11, 10], [7, 8], [4, 9], [12, 6], [1, 0], [8, 17], [19, 1], [19, 17], [13, 3], [17, 14], [15, 9], [10, 2], [5, 15], [11, 5], [3, 15], [16, 7], [3, 5], [17, 14], [10, 5], [13, 11], [19, 17], [11, 5], [8, 1], [15, 18], [8, 17], [10, 5], [7, 8], [19, 1], [6, 4], [3, 15], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [19, 1], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], [19, 1], ----End Timer [Execute Mapping]:  2.9995381832122803

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 54]
[59, 67]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[64, 73, 80]
[123, 134, 156]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 54]
[59, 67]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6562979221343994

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [31, 54] cc => I, Pos: [31, 54] cc => I, Pos: [59, 67] cc => I, Pos: [59, 67] cc => I, Pos: [64, 73, 80] ccc => cc, Pos: [123, 134, 156] ccc => cc]

Plan: 1
[Pos: [31, 54] cc => I,
 Pos: [59, 67] cc => I,
 Pos: [64, 73, 80] ccc => cc,
 Pos: [123, 134, 156] ccc => cc]
Change: 4, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015624523162841797

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [31, 54] cc => I,
 Pos: [59, 67] cc => I,
 Pos: [64, 73, 80] ccc => cc,
 Pos: [123, 134, 156] ccc => cc]
Change: 4, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [31, 54] cc => I
Apply:  Pos: [59, 67] cc => I
Apply:  Pos: [64, 73, 80] ccc => cc
Apply:  Pos: [123, 134, 156] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 14], [10, 5], [6, 4], [3, 15], [7, 8], [5, 2], [18, 9], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [13, 11], [15, 4], [13, 8], [16, 19], [11, 10], [7, 8], [4, 9], [12, 6], [8, 17], [19, 17], [19, 1], [13, 3], [15, 9], [10, 2], [5, 15], [11, 5], [3, 18], [16, 7], [3, 5], [10, 5], [13, 11], [19, 17], [11, 5], [8, 1], [15, 18], [8, 17], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [15, 18], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [19, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.671922445297241

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[69, 83]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[69, 83]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.5472028255462646

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [69, 83] cc => I, Pos: [69, 83] cc => I]

Plan: 1
[Pos: [69, 83] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [69, 83] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [69, 83] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 14], [10, 5], [6, 4], [3, 15], [7, 8], [5, 2], [18, 9], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [13, 11], [15, 4], [13, 8], [16, 19], [11, 10], [7, 8], [4, 9], [12, 6], [19, 17], [8, 17], [19, 1], [13, 3], [15, 9], [10, 2], [5, 15], [11, 5], [3, 18], [16, 7], [10, 5], [3, 5], [13, 11], [19, 17], [11, 5], [8, 1], [8, 17], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [19, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.5472028255462646

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[55, 66]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[55, 66]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4998793601989746

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [55, 66] cc => I, Pos: [55, 66] cc => I]

Plan: 1
[Pos: [55, 66] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015606403350830078

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [55, 66] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [55, 66] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 0], [19, 8], [10, 2], [12, 6], [1, 17], [5, 15], [17, 4], [13, 11], [2, 18], [15, 9], [19, 1], [3, 5], [5, 14], [10, 5], [6, 4], [3, 15], [7, 8], [5, 2], [18, 9], [7, 3], [18, 4], [8, 1], [0, 12], [15, 9], [14, 6], [4, 9], [17, 12], [1, 17], [7, 8], [15, 4], [17, 6], [8, 3], [18, 4], [8, 17], [14, 15], [6, 4], [19, 8], [1, 17], [7, 13], [3, 15], [10, 2], [8, 17], [5, 4], [14, 6], [16, 7], [13, 11], [15, 4], [13, 8], [16, 19], [11, 10], [7, 8], [4, 9], [12, 6], [8, 17], [19, 1], [13, 3], [15, 9], [10, 2], [5, 15], [11, 5], [3, 18], [16, 7], [3, 5], [10, 5], [13, 11], [11, 5], [8, 17], [8, 1], [10, 5], [7, 8], [19, 1], [6, 4], [3, 14], [16, 19], [11, 5], [13, 8], [15, 4], [14, 6], [16, 7], [19, 8], [17, 14], [7, 8], [10, 5], [15, 9], [3, 5], [8, 17], [17, 12], [13, 11], [5, 15], [7, 3], [4, 9], [5, 2], [3, 14], [16, 13], [6, 4], [1, 17], [15, 18], [12, 6], [4, 9], [1, 0], [14, 12], [11, 2], [7, 13], [17, 12], [8, 1], [5, 2], [13, 11], [14, 12], [10, 2], [1, 17], [16, 7], [17, 12], [7, 8], [3, 14], [19, 0], [11, 5], [15, 9], [14, 12], [4, 9], [13, 8], [10, 5], [14, 15], [11, 10], [18, 9], [14, 6], [1, 0], [16, 7], [15, 18], [3, 14], [7, 8], [12, 6], [8, 3], [5, 15], [10, 2], [6, 4], [14, 6], [3, 5], [18, 9], [19, 17], [15, 18], [7, 3], [13, 11], [8, 17], [3, 14], [18, 4], [10, 5], [12, 6], ----End Timer [Execute Mapping]:  2.5154857635498047

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [147] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 294

Reduced: 
 - size: 123 (45.56%)
 - depth: 9 (20.00%)

