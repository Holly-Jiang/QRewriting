----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.1093282699584961

[4, 18], [1, 8], [19, 5], [17, 12], [2, 10], [11, 6], [16, 15], [13, 14], [4, 18], [17, 12], [3, 6], [8, 19], [14, 9], [18, 7], [0, 13], [8, 12], [9, 3], [5, 6], [18, 7], [15, 13], [19, 12], [14, 10], [3, 6], [4, 18], [19, 14], [3, 6], [15, 0], [8, 12], [18, 2], [19, 14], [16, 4], [11, 3], [1, 0], [18, 7], [3, 6], [19, 5], [2, 9], [13, 14], [8, 12], [15, 0], [18, 7], [4, 2], [5, 6], [17, 19], [14, 10], [15, 13], [18, 7], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 9], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [7, 10], [2, 9], [8, 17], [19, 14], [4, 0], [17, 12], [11, 3], [1, 8], [15, 13], [18, 2], [7, 10], [19, 14], [5, 6], [4, 2], [5, 11], [13, 14], [19, 12], [1, 8], [0, 18], [4, 18], [10, 9], [0, 2], [13, 14], [19, 5], [1, 8], [18, 2], [17, 12], [1, 8], [19, 14], [0, 13], [11, 6], [10, 9], [4, 2], [12, 11], [13, 5], [15, 0], [4, 0], [8, 12], [18, 2], [17, 19], [5, 11], [16, 15], [16, 4], [13, 5], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [17, 19], [14, 9], [11, 6], [16, 15], [5, 3], [4, 2], [13, 19], [7, 10], [14, 9], [11, 6], [4, 2], [11, 6], [19, 14], [15, 1], [7, 10], [2, 9], [8, 19], [15, 1], [0, 18], [11, 3], [10, 9], [5, 6], [11, 3], [18, 7], [19, 14], [16, 15], [17, 12], [2, 9], [8, 12], [0, 18], [16, 4], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [7, 10], [15, 13], [2, 9], [7, 10], [19, 5], [1, 0], [13, 14], [16, 4], [4, 2], [15, 13], [1, 0], [8, 17], [7, 10], [5, 6], [4, 2], [1, 13], [17, 12], [11, 6], [0, 18], [16, 15], [14, 10], [5, 3], [4, 18], [17, 19], [7, 10], [0, 2], [5, 3], [12, 11], [0, 18], [9, 3], [1, 13], [2, 10], [16, 15], [17, 12], [8, 19], [5, 11], [18, 7], [2, 10], [14, 5], [1, 8], [0, 13], [17, 12], [18, 7], [2, 14], [9, 3], [5, 11], [16, 4], [8, 12], [17, 19], [18, 7], [11, 6], [8, 19], [5, 3], [15, 1], [10, 9], [13, 14], [4, 18], [11, 3], [8, 17], [13, 5], [19, 14], [4, 18], [8, 19], [14, 10], [11, 6], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [15, 1], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [16, 15], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [0, 2], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[3, 9]
[13, 18]
[22, 25]
[24, 29]
[27, 38]
[33, 40]
[40, 46]
[77, 87]
[80, 88]
[84, 94]
[92, 99]
[94, 101]
[101, 104]
[97, 108]
[118, 131]
[126, 133]
[129, 136]
[130, 137]
[133, 138]
[137, 139]
[135, 142]
[141, 145]
[147, 150]
[164, 167]
[161, 169]
[158, 171]
[169, 174]
[167, 176]
[172, 178]
[185, 190]
[179, 194]
[183, 196]
[195, 201]
[197, 205]
[200, 206]
[193, 208]
[206, 213]
[220, 225]
[214, 228]
[228, 238]
[247, 254]
[254, 260]
[255, 264]
[264, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[63, 67, 78]
[111, 117, 120]
[116, 124, 128]
[146, 151, 157]
[165, 170, 173]
[222, 232, 236]
[217, 229, 237]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[25, 31, 34]
[46, 49, 53]
[140, 144, 152]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[14, 19, 26]
[55, 63, 66]
[212, 215, 222]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[3, 9]
[13, 18]
[22, 25]
[24, 29]
[27, 38]
[33, 40]
[40, 46]
[77, 87]
[80, 88]
[84, 94]
[92, 99]
[94, 101]
[101, 104]
[97, 108]
[118, 131]
[126, 133]
[129, 136]
[130, 137]
[133, 138]
[137, 139]
[135, 142]
[141, 145]
[147, 150]
[164, 167]
[161, 169]
[158, 171]
[169, 174]
[167, 176]
[172, 178]
[185, 190]
[179, 194]
[183, 196]
[195, 201]
[197, 205]
[200, 206]
[193, 208]
[206, 213]
[220, 225]
[214, 228]
[228, 238]
[247, 254]
[254, 260]
[255, 264]
[264, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.21873140335083

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] cc => I, Pos: [0, 8] cc => I, Pos: [3, 9] cc => I, Pos: [3, 9] cc => I, Pos: [13, 18] cc => I, Pos: [13, 18] cc => I, Pos: [14, 19, 26] ccc => cc, Pos: [22, 25] cc => I, Pos: [22, 25] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [25, 31, 34] ccc => cc, Pos: [27, 38] cc => I, Pos: [27, 38] cc => I, Pos: [33, 40] cc => I, Pos: [33, 40] cc => I, Pos: [40, 46] cc => I, Pos: [40, 46] cc => I, Pos: [46, 49, 53] ccc => cc, Pos: [55, 63, 66] ccc => cc, Pos: [63, 67, 78] ccc => cc, Pos: [77, 87] cc => I, Pos: [77, 87] cc => I, Pos: [80, 88] cc => I, Pos: [80, 88] cc => I, Pos: [84, 94] cc => I, Pos: [84, 94] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [97, 108] cc => I, Pos: [97, 108] cc => I, Pos: [101, 104] cc => I, Pos: [101, 104] cc => I, Pos: [111, 117, 120] ccc => cc, Pos: [116, 124, 128] ccc => cc, Pos: [118, 131] cc => I, Pos: [118, 131] cc => I, Pos: [126, 133] cc => I, Pos: [126, 133] cc => I, Pos: [129, 136] cc => I, Pos: [129, 136] cc => I, Pos: [130, 137] cc => I, Pos: [130, 137] cc => I, Pos: [133, 138] cc => I, Pos: [133, 138] cc => I, Pos: [135, 142] cc => I, Pos: [135, 142] cc => I, Pos: [137, 139] cc => I, Pos: [137, 139] cc => I, Pos: [140, 144, 152] ccc => cc, Pos: [141, 145] cc => I, Pos: [141, 145] cc => I, Pos: [146, 151, 157] ccc => cc, Pos: [147, 150] cc => I, Pos: [147, 150] cc => I, Pos: [158, 171] cc => I, Pos: [158, 171] cc => I, Pos: [161, 169] cc => I, Pos: [161, 169] cc => I, Pos: [164, 167] cc => I, Pos: [164, 167] cc => I, Pos: [165, 170, 173] ccc => cc, Pos: [167, 176] cc => I, Pos: [167, 176] cc => I, Pos: [169, 174] cc => I, Pos: [169, 174] cc => I, Pos: [172, 178] cc => I, Pos: [172, 178] cc => I, Pos: [179, 194] cc => I, Pos: [179, 194] cc => I, Pos: [183, 196] cc => I, Pos: [183, 196] cc => I, Pos: [185, 190] cc => I, Pos: [185, 190] cc => I, Pos: [193, 208] cc => I, Pos: [193, 208] cc => I, Pos: [195, 201] cc => I, Pos: [195, 201] cc => I, Pos: [197, 205] cc => I, Pos: [197, 205] cc => I, Pos: [200, 206] cc => I, Pos: [200, 206] cc => I, Pos: [206, 213] cc => I, Pos: [206, 213] cc => I, Pos: [212, 215, 222] ccc => cc, Pos: [214, 228] cc => I, Pos: [214, 228] cc => I, Pos: [217, 229, 237] ccc => cc, Pos: [220, 225] cc => I, Pos: [220, 225] cc => I, Pos: [222, 232, 236] ccc => cc, Pos: [228, 238] cc => I, Pos: [228, 238] cc => I, Pos: [247, 254] cc => I, Pos: [247, 254] cc => I, Pos: [254, 260] cc => I, Pos: [254, 260] cc => I, Pos: [255, 264] cc => I, Pos: [255, 264] cc => I, Pos: [264, 268] cc => I, Pos: [264, 268] cc => I]

Plan: 1
[Pos: [0, 8] cc => I,
 Pos: [3, 9] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [14, 19, 26] ccc => cc,
 Pos: [22, 25] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [27, 38] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [46, 49, 53] ccc => cc,
 Pos: [55, 63, 66] ccc => cc,
 Pos: [77, 87] cc => I,
 Pos: [80, 88] cc => I,
 Pos: [84, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [97, 108] cc => I,
 Pos: [101, 104] cc => I,
 Pos: [111, 117, 120] ccc => cc,
 Pos: [116, 124, 128] ccc => cc,
 Pos: [118, 131] cc => I,
 Pos: [126, 133] cc => I,
 Pos: [129, 136] cc => I,
 Pos: [130, 137] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [140, 144, 152] ccc => cc,
 Pos: [141, 145] cc => I,
 Pos: [146, 151, 157] ccc => cc,
 Pos: [147, 150] cc => I,
 Pos: [158, 171] cc => I,
 Pos: [161, 169] cc => I,
 Pos: [164, 167] cc => I,
 Pos: [165, 170, 173] ccc => cc,
 Pos: [172, 178] cc => I,
 Pos: [179, 194] cc => I,
 Pos: [183, 196] cc => I,
 Pos: [185, 190] cc => I,
 Pos: [193, 208] cc => I,
 Pos: [195, 201] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [200, 206] cc => I,
 Pos: [212, 215, 222] ccc => cc,
 Pos: [214, 228] cc => I,
 Pos: [217, 229, 237] ccc => cc,
 Pos: [220, 225] cc => I,
 Pos: [247, 254] cc => I,
 Pos: [255, 264] cc => I]
Change: 45, Saving: 160

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] cc => I,
 Pos: [3, 9] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [14, 19, 26] ccc => cc,
 Pos: [22, 25] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [27, 38] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [46, 49, 53] ccc => cc,
 Pos: [55, 63, 66] ccc => cc,
 Pos: [77, 87] cc => I,
 Pos: [80, 88] cc => I,
 Pos: [84, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [97, 108] cc => I,
 Pos: [101, 104] cc => I,
 Pos: [111, 117, 120] ccc => cc,
 Pos: [116, 124, 128] ccc => cc,
 Pos: [118, 131] cc => I,
 Pos: [126, 133] cc => I,
 Pos: [129, 136] cc => I,
 Pos: [130, 137] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [140, 144, 152] ccc => cc,
 Pos: [141, 145] cc => I,
 Pos: [146, 151, 157] ccc => cc,
 Pos: [147, 150] cc => I,
 Pos: [158, 171] cc => I,
 Pos: [161, 169] cc => I,
 Pos: [164, 167] cc => I,
 Pos: [165, 170, 173] ccc => cc,
 Pos: [172, 178] cc => I,
 Pos: [179, 194] cc => I,
 Pos: [183, 196] cc => I,
 Pos: [185, 190] cc => I,
 Pos: [193, 208] cc => I,
 Pos: [195, 201] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [200, 206] cc => I,
 Pos: [212, 215, 222] ccc => cc,
 Pos: [214, 228] cc => I,
 Pos: [217, 229, 237] ccc => cc,
 Pos: [220, 225] cc => I,
 Pos: [247, 254] cc => I,
 Pos: [255, 264] cc => I]
Change: 45, Saving: 160

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 8] cc => I
Apply:  Pos: [3, 9] cc => I
Apply:  Pos: [13, 18] cc => I
Apply:  Pos: [14, 19, 26] ccc => cc
Apply:  Pos: [22, 25] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [27, 38] cc => I
Apply:  Pos: [33, 40] cc => I
Apply:  Pos: [46, 49, 53] ccc => cc
Apply:  Pos: [55, 63, 66] ccc => cc
Apply:  Pos: [77, 87] cc => I
Apply:  Pos: [80, 88] cc => I
Apply:  Pos: [84, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [97, 108] cc => I
Apply:  Pos: [101, 104] cc => I
Apply:  Pos: [111, 117, 120] ccc => cc
Apply:  Pos: [116, 124, 128] ccc => cc
Apply:  Pos: [118, 131] cc => I
Apply:  Pos: [126, 133] cc => I
Apply:  Pos: [129, 136] cc => I
Apply:  Pos: [130, 137] cc => I
Apply:  Pos: [135, 142] cc => I
Apply:  Pos: [140, 144, 152] ccc => cc
Apply:  Pos: [141, 145] cc => I
Apply:  Pos: [146, 151, 157] ccc => cc
Apply:  Pos: [147, 150] cc => I
Apply:  Pos: [158, 171] cc => I
Apply:  Pos: [161, 169] cc => I
Apply:  Pos: [164, 167] cc => I
Apply:  Pos: [165, 170, 173] ccc => cc
Apply:  Pos: [172, 178] cc => I
Apply:  Pos: [179, 194] cc => I
Apply:  Pos: [183, 196] cc => I
Apply:  Pos: [185, 190] cc => I
Apply:  Pos: [193, 208] cc => I
Apply:  Pos: [195, 201] cc => I
Apply:  Pos: [197, 205] cc => I
Apply:  Pos: [200, 206] cc => I
Apply:  Pos: [212, 215, 222] ccc => cc
Apply:  Pos: [214, 228] cc => I
Apply:  Pos: [217, 229, 237] ccc => cc
Apply:  Pos: [220, 225] cc => I
Apply:  Pos: [247, 254] cc => I
Apply:  Pos: [255, 264] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [14, 10], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [13, 14], [15, 0], [4, 2], [5, 6], [17, 19], [14, 10], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [18, 2], [5, 6], [4, 2], [5, 11], [19, 12], [0, 18], [4, 18], [0, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [5, 3], [13, 19], [4, 2], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [8, 17], [18, 7], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  5.21873140335083

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[15, 24, 29]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[66, 68, 71]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4531280994415283

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [15, 24, 29] ccc => cc, Pos: [66, 68, 71] ccc => cc]

Plan: 1
[Pos: [15, 24, 29] ccc => cc, Pos: [66, 68, 71] ccc => cc]
Change: 2, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [15, 24, 29] ccc => cc, Pos: [66, 68, 71] ccc => cc]
Change: 2, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [15, 24, 29] ccc => cc
Apply:  Pos: [66, 68, 71] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [4, 18], [5, 6], [18, 2], [5, 11], [19, 12], [0, 2], [0, 18], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [13, 11], [12, 11], [4, 0], [15, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [5, 3], [13, 19], [4, 2], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 17], [8, 12], [18, 7], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.4531280994415283

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[58, 65]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[58, 65]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4220662117004395

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [58, 65] cc => I, Pos: [58, 65] cc => I]

Plan: 1
[Pos: [58, 65] cc => I]
Change: 1, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [58, 65] cc => I]
Change: 1, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [58, 65] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [18, 2], [5, 11], [19, 12], [0, 18], [0, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [5, 3], [13, 19], [4, 2], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [8, 17], [18, 7], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.4220662117004395

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[65, 68, 69]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.343813896179199

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [65, 68, 69] ccc => cc]

Plan: 1
[Pos: [65, 68, 69] ccc => cc]
Change: 1, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [65, 68, 69] ccc => cc]
Change: 1, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [65, 68, 69] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [0, 18], [5, 11], [19, 12], [18, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [13, 11], [12, 11], [4, 0], [15, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [5, 3], [13, 19], [4, 2], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 17], [8, 12], [18, 7], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.343813896179199

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[68, 70]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[68, 70]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.359339952468872

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [68, 70] cc => I, Pos: [68, 70] cc => I]

Plan: 1
[Pos: [68, 70] cc => I]
Change: 1, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [68, 70] cc => I]
Change: 1, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [68, 70] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [0, 18], [5, 11], [19, 12], [19, 5], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [5, 3], [13, 19], [4, 2], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [8, 17], [18, 7], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.359339952468872

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [183] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 366

Reduced: 
 - size: 87 (32.22%)
 - cycle: 174 (32.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10938000679016113

[4, 18], [1, 8], [19, 5], [17, 12], [2, 10], [11, 6], [16, 15], [13, 14], [4, 18], [17, 12], [3, 6], [8, 19], [14, 9], [18, 7], [0, 13], [8, 12], [9, 3], [5, 6], [18, 7], [15, 13], [19, 12], [14, 10], [3, 6], [4, 18], [19, 14], [3, 6], [15, 0], [8, 12], [18, 2], [19, 14], [16, 4], [11, 3], [1, 0], [18, 7], [3, 6], [19, 5], [2, 9], [13, 14], [8, 12], [15, 0], [18, 7], [4, 2], [5, 6], [17, 19], [14, 10], [15, 13], [18, 7], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 9], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [7, 10], [2, 9], [8, 17], [19, 14], [4, 0], [17, 12], [11, 3], [1, 8], [15, 13], [18, 2], [7, 10], [19, 14], [5, 6], [4, 2], [5, 11], [13, 14], [19, 12], [1, 8], [0, 18], [4, 18], [10, 9], [0, 2], [13, 14], [19, 5], [1, 8], [18, 2], [17, 12], [1, 8], [19, 14], [0, 13], [11, 6], [10, 9], [4, 2], [12, 11], [13, 5], [15, 0], [4, 0], [8, 12], [18, 2], [17, 19], [5, 11], [16, 15], [16, 4], [13, 5], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [17, 19], [14, 9], [11, 6], [16, 15], [5, 3], [4, 2], [13, 19], [7, 10], [14, 9], [11, 6], [4, 2], [11, 6], [19, 14], [15, 1], [7, 10], [2, 9], [8, 19], [15, 1], [0, 18], [11, 3], [10, 9], [5, 6], [11, 3], [18, 7], [19, 14], [16, 15], [17, 12], [2, 9], [8, 12], [0, 18], [16, 4], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [7, 10], [15, 13], [2, 9], [7, 10], [19, 5], [1, 0], [13, 14], [16, 4], [4, 2], [15, 13], [1, 0], [8, 17], [7, 10], [5, 6], [4, 2], [1, 13], [17, 12], [11, 6], [0, 18], [16, 15], [14, 10], [5, 3], [4, 18], [17, 19], [7, 10], [0, 2], [5, 3], [12, 11], [0, 18], [9, 3], [1, 13], [2, 10], [16, 15], [17, 12], [8, 19], [5, 11], [18, 7], [2, 10], [14, 5], [1, 8], [0, 13], [17, 12], [18, 7], [2, 14], [9, 3], [5, 11], [16, 4], [8, 12], [17, 19], [18, 7], [11, 6], [8, 19], [5, 3], [15, 1], [10, 9], [13, 14], [4, 18], [11, 3], [8, 17], [13, 5], [19, 14], [4, 18], [8, 19], [14, 10], [11, 6], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [15, 1], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [16, 15], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [0, 2], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[3, 9]
[13, 18]
[22, 25]
[24, 29]
[27, 38]
[33, 40]
[40, 46]
[77, 87]
[80, 88]
[84, 94]
[92, 99]
[94, 101]
[101, 104]
[97, 108]
[118, 131]
[126, 133]
[129, 136]
[130, 137]
[133, 138]
[137, 139]
[135, 142]
[141, 145]
[147, 150]
[164, 167]
[161, 169]
[158, 171]
[169, 174]
[167, 176]
[172, 178]
[185, 190]
[179, 194]
[183, 196]
[195, 201]
[197, 205]
[200, 206]
[193, 208]
[206, 213]
[220, 225]
[214, 228]
[228, 238]
[247, 254]
[254, 260]
[255, 264]
[264, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[63, 67, 78]
[111, 117, 120]
[116, 124, 128]
[146, 151, 157]
[165, 170, 173]
[222, 232, 236]
[217, 229, 237]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[25, 31, 34]
[46, 49, 53]
[140, 144, 152]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[14, 19, 26]
[55, 63, 66]
[212, 215, 222]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[3, 9]
[13, 18]
[22, 25]
[24, 29]
[27, 38]
[33, 40]
[40, 46]
[77, 87]
[80, 88]
[84, 94]
[92, 99]
[94, 101]
[101, 104]
[97, 108]
[118, 131]
[126, 133]
[129, 136]
[130, 137]
[133, 138]
[137, 139]
[135, 142]
[141, 145]
[147, 150]
[164, 167]
[161, 169]
[158, 171]
[169, 174]
[167, 176]
[172, 178]
[185, 190]
[179, 194]
[183, 196]
[195, 201]
[197, 205]
[200, 206]
[193, 208]
[206, 213]
[220, 225]
[214, 228]
[228, 238]
[247, 254]
[254, 260]
[255, 264]
[264, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.156231641769409

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] cc => I, Pos: [0, 8] cc => I, Pos: [3, 9] cc => I, Pos: [3, 9] cc => I, Pos: [13, 18] cc => I, Pos: [13, 18] cc => I, Pos: [14, 19, 26] ccc => cc, Pos: [22, 25] cc => I, Pos: [22, 25] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [25, 31, 34] ccc => cc, Pos: [27, 38] cc => I, Pos: [27, 38] cc => I, Pos: [33, 40] cc => I, Pos: [33, 40] cc => I, Pos: [40, 46] cc => I, Pos: [40, 46] cc => I, Pos: [46, 49, 53] ccc => cc, Pos: [55, 63, 66] ccc => cc, Pos: [63, 67, 78] ccc => cc, Pos: [77, 87] cc => I, Pos: [77, 87] cc => I, Pos: [80, 88] cc => I, Pos: [80, 88] cc => I, Pos: [84, 94] cc => I, Pos: [84, 94] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [97, 108] cc => I, Pos: [97, 108] cc => I, Pos: [101, 104] cc => I, Pos: [101, 104] cc => I, Pos: [111, 117, 120] ccc => cc, Pos: [116, 124, 128] ccc => cc, Pos: [118, 131] cc => I, Pos: [118, 131] cc => I, Pos: [126, 133] cc => I, Pos: [126, 133] cc => I, Pos: [129, 136] cc => I, Pos: [129, 136] cc => I, Pos: [130, 137] cc => I, Pos: [130, 137] cc => I, Pos: [133, 138] cc => I, Pos: [133, 138] cc => I, Pos: [135, 142] cc => I, Pos: [135, 142] cc => I, Pos: [137, 139] cc => I, Pos: [137, 139] cc => I, Pos: [140, 144, 152] ccc => cc, Pos: [141, 145] cc => I, Pos: [141, 145] cc => I, Pos: [146, 151, 157] ccc => cc, Pos: [147, 150] cc => I, Pos: [147, 150] cc => I, Pos: [158, 171] cc => I, Pos: [158, 171] cc => I, Pos: [161, 169] cc => I, Pos: [161, 169] cc => I, Pos: [164, 167] cc => I, Pos: [164, 167] cc => I, Pos: [165, 170, 173] ccc => cc, Pos: [167, 176] cc => I, Pos: [167, 176] cc => I, Pos: [169, 174] cc => I, Pos: [169, 174] cc => I, Pos: [172, 178] cc => I, Pos: [172, 178] cc => I, Pos: [179, 194] cc => I, Pos: [179, 194] cc => I, Pos: [183, 196] cc => I, Pos: [183, 196] cc => I, Pos: [185, 190] cc => I, Pos: [185, 190] cc => I, Pos: [193, 208] cc => I, Pos: [193, 208] cc => I, Pos: [195, 201] cc => I, Pos: [195, 201] cc => I, Pos: [197, 205] cc => I, Pos: [197, 205] cc => I, Pos: [200, 206] cc => I, Pos: [200, 206] cc => I, Pos: [206, 213] cc => I, Pos: [206, 213] cc => I, Pos: [212, 215, 222] ccc => cc, Pos: [214, 228] cc => I, Pos: [214, 228] cc => I, Pos: [217, 229, 237] ccc => cc, Pos: [220, 225] cc => I, Pos: [220, 225] cc => I, Pos: [222, 232, 236] ccc => cc, Pos: [228, 238] cc => I, Pos: [228, 238] cc => I, Pos: [247, 254] cc => I, Pos: [247, 254] cc => I, Pos: [254, 260] cc => I, Pos: [254, 260] cc => I, Pos: [255, 264] cc => I, Pos: [255, 264] cc => I, Pos: [264, 268] cc => I, Pos: [264, 268] cc => I]

Plan: 1
[Pos: [0, 8] cc => I,
 Pos: [3, 9] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [14, 19, 26] ccc => cc,
 Pos: [22, 25] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [27, 38] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [46, 49, 53] ccc => cc,
 Pos: [55, 63, 66] ccc => cc,
 Pos: [77, 87] cc => I,
 Pos: [80, 88] cc => I,
 Pos: [84, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [97, 108] cc => I,
 Pos: [101, 104] cc => I,
 Pos: [111, 117, 120] ccc => cc,
 Pos: [116, 124, 128] ccc => cc,
 Pos: [118, 131] cc => I,
 Pos: [126, 133] cc => I,
 Pos: [129, 136] cc => I,
 Pos: [130, 137] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [140, 144, 152] ccc => cc,
 Pos: [141, 145] cc => I,
 Pos: [146, 151, 157] ccc => cc,
 Pos: [147, 150] cc => I,
 Pos: [158, 171] cc => I,
 Pos: [161, 169] cc => I,
 Pos: [164, 167] cc => I,
 Pos: [165, 170, 173] ccc => cc,
 Pos: [172, 178] cc => I,
 Pos: [179, 194] cc => I,
 Pos: [183, 196] cc => I,
 Pos: [185, 190] cc => I,
 Pos: [193, 208] cc => I,
 Pos: [195, 201] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [200, 206] cc => I,
 Pos: [212, 215, 222] ccc => cc,
 Pos: [214, 228] cc => I,
 Pos: [217, 229, 237] ccc => cc,
 Pos: [220, 225] cc => I,
 Pos: [247, 254] cc => I,
 Pos: [255, 264] cc => I]
Change: 45, Saving: 46

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.10938119888305664

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] cc => I,
 Pos: [3, 9] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [14, 19, 26] ccc => cc,
 Pos: [22, 25] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [27, 38] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [46, 49, 53] ccc => cc,
 Pos: [55, 63, 66] ccc => cc,
 Pos: [77, 87] cc => I,
 Pos: [80, 88] cc => I,
 Pos: [84, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [97, 108] cc => I,
 Pos: [101, 104] cc => I,
 Pos: [111, 117, 120] ccc => cc,
 Pos: [116, 124, 128] ccc => cc,
 Pos: [118, 131] cc => I,
 Pos: [126, 133] cc => I,
 Pos: [129, 136] cc => I,
 Pos: [130, 137] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [140, 144, 152] ccc => cc,
 Pos: [141, 145] cc => I,
 Pos: [146, 151, 157] ccc => cc,
 Pos: [147, 150] cc => I,
 Pos: [158, 171] cc => I,
 Pos: [161, 169] cc => I,
 Pos: [164, 167] cc => I,
 Pos: [165, 170, 173] ccc => cc,
 Pos: [172, 178] cc => I,
 Pos: [179, 194] cc => I,
 Pos: [183, 196] cc => I,
 Pos: [185, 190] cc => I,
 Pos: [193, 208] cc => I,
 Pos: [195, 201] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [200, 206] cc => I,
 Pos: [212, 215, 222] ccc => cc,
 Pos: [214, 228] cc => I,
 Pos: [217, 229, 237] ccc => cc,
 Pos: [220, 225] cc => I,
 Pos: [247, 254] cc => I,
 Pos: [255, 264] cc => I]
Change: 45, Saving: 46

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 8] cc => I
Apply:  Pos: [3, 9] cc => I
Apply:  Pos: [13, 18] cc => I
Apply:  Pos: [14, 19, 26] ccc => cc
Apply:  Pos: [22, 25] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [27, 38] cc => I
Apply:  Pos: [33, 40] cc => I
Apply:  Pos: [46, 49, 53] ccc => cc
Apply:  Pos: [55, 63, 66] ccc => cc
Apply:  Pos: [77, 87] cc => I
Apply:  Pos: [80, 88] cc => I
Apply:  Pos: [84, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [97, 108] cc => I
Apply:  Pos: [101, 104] cc => I
Apply:  Pos: [111, 117, 120] ccc => cc
Apply:  Pos: [116, 124, 128] ccc => cc
Apply:  Pos: [118, 131] cc => I
Apply:  Pos: [126, 133] cc => I
Apply:  Pos: [129, 136] cc => I
Apply:  Pos: [130, 137] cc => I
Apply:  Pos: [135, 142] cc => I
Apply:  Pos: [140, 144, 152] ccc => cc
Apply:  Pos: [141, 145] cc => I
Apply:  Pos: [146, 151, 157] ccc => cc
Apply:  Pos: [147, 150] cc => I
Apply:  Pos: [158, 171] cc => I
Apply:  Pos: [161, 169] cc => I
Apply:  Pos: [164, 167] cc => I
Apply:  Pos: [165, 170, 173] ccc => cc
Apply:  Pos: [172, 178] cc => I
Apply:  Pos: [179, 194] cc => I
Apply:  Pos: [183, 196] cc => I
Apply:  Pos: [185, 190] cc => I
Apply:  Pos: [193, 208] cc => I
Apply:  Pos: [195, 201] cc => I
Apply:  Pos: [197, 205] cc => I
Apply:  Pos: [200, 206] cc => I
Apply:  Pos: [212, 215, 222] ccc => cc
Apply:  Pos: [214, 228] cc => I
Apply:  Pos: [217, 229, 237] ccc => cc
Apply:  Pos: [220, 225] cc => I
Apply:  Pos: [247, 254] cc => I
Apply:  Pos: [255, 264] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [14, 10], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [13, 14], [15, 0], [4, 2], [5, 6], [17, 19], [14, 10], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [18, 2], [5, 6], [4, 2], [5, 11], [19, 12], [0, 18], [4, 18], [0, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [5, 3], [13, 19], [4, 2], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [8, 17], [18, 7], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  5.265612840652466

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[15, 24, 29]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[66, 68, 71]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.42232084274292

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [15, 24, 29] ccc => cc, Pos: [66, 68, 71] ccc => cc]

Plan: 1
[Pos: [15, 24, 29] ccc => cc, Pos: [66, 68, 71] ccc => cc]
Change: 2, Saving: 3

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [15, 24, 29] ccc => cc, Pos: [66, 68, 71] ccc => cc]
Change: 2, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [15, 24, 29] ccc => cc
Apply:  Pos: [66, 68, 71] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [4, 18], [5, 6], [18, 2], [5, 11], [19, 12], [0, 2], [0, 18], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [13, 11], [12, 11], [4, 0], [15, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [5, 3], [13, 19], [4, 2], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 17], [8, 12], [18, 7], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.42232084274292

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[58, 65]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[58, 65]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.312553644180298

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [58, 65] cc => I, Pos: [58, 65] cc => I]

Plan: 1
[Pos: [58, 65] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015629291534423828

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [58, 65] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [58, 65] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [18, 2], [5, 11], [19, 12], [0, 18], [0, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [5, 3], [13, 19], [4, 2], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [8, 17], [18, 7], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.3281829357147217

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[65, 68, 69]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2965822219848633

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [65, 68, 69] ccc => cc]

Plan: 1
[Pos: [65, 68, 69] ccc => cc]
Change: 1, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [65, 68, 69] ccc => cc]
Change: 1, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [65, 68, 69] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [0, 18], [5, 11], [19, 12], [18, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [13, 11], [12, 11], [4, 0], [15, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [5, 3], [13, 19], [4, 2], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 17], [8, 12], [18, 7], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.2965822219848633

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[68, 70]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[68, 70]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.281313896179199

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [68, 70] cc => I, Pos: [68, 70] cc => I]

Plan: 1
[Pos: [68, 70] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [68, 70] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [68, 70] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [0, 18], [5, 11], [19, 12], [19, 5], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [5, 3], [13, 19], [4, 2], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [8, 17], [18, 7], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.281313896179199

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [183] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 366

Reduced: 
 - size: 87 (32.22%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374427795410156

[4, 18], [1, 8], [19, 5], [17, 12], [2, 10], [11, 6], [16, 15], [13, 14], [4, 18], [17, 12], [3, 6], [8, 19], [14, 9], [18, 7], [0, 13], [8, 12], [9, 3], [5, 6], [18, 7], [15, 13], [19, 12], [14, 10], [3, 6], [4, 18], [19, 14], [3, 6], [15, 0], [8, 12], [18, 2], [19, 14], [16, 4], [11, 3], [1, 0], [18, 7], [3, 6], [19, 5], [2, 9], [13, 14], [8, 12], [15, 0], [18, 7], [4, 2], [5, 6], [17, 19], [14, 10], [15, 13], [18, 7], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 9], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [7, 10], [2, 9], [8, 17], [19, 14], [4, 0], [17, 12], [11, 3], [1, 8], [15, 13], [18, 2], [7, 10], [19, 14], [5, 6], [4, 2], [5, 11], [13, 14], [19, 12], [1, 8], [0, 18], [4, 18], [10, 9], [0, 2], [13, 14], [19, 5], [1, 8], [18, 2], [17, 12], [1, 8], [19, 14], [0, 13], [11, 6], [10, 9], [4, 2], [12, 11], [13, 5], [15, 0], [4, 0], [8, 12], [18, 2], [17, 19], [5, 11], [16, 15], [16, 4], [13, 5], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [17, 19], [14, 9], [11, 6], [16, 15], [5, 3], [4, 2], [13, 19], [7, 10], [14, 9], [11, 6], [4, 2], [11, 6], [19, 14], [15, 1], [7, 10], [2, 9], [8, 19], [15, 1], [0, 18], [11, 3], [10, 9], [5, 6], [11, 3], [18, 7], [19, 14], [16, 15], [17, 12], [2, 9], [8, 12], [0, 18], [16, 4], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [7, 10], [15, 13], [2, 9], [7, 10], [19, 5], [1, 0], [13, 14], [16, 4], [4, 2], [15, 13], [1, 0], [8, 17], [7, 10], [5, 6], [4, 2], [1, 13], [17, 12], [11, 6], [0, 18], [16, 15], [14, 10], [5, 3], [4, 18], [17, 19], [7, 10], [0, 2], [5, 3], [12, 11], [0, 18], [9, 3], [1, 13], [2, 10], [16, 15], [17, 12], [8, 19], [5, 11], [18, 7], [2, 10], [14, 5], [1, 8], [0, 13], [17, 12], [18, 7], [2, 14], [9, 3], [5, 11], [16, 4], [8, 12], [17, 19], [18, 7], [11, 6], [8, 19], [5, 3], [15, 1], [10, 9], [13, 14], [4, 18], [11, 3], [8, 17], [13, 5], [19, 14], [4, 18], [8, 19], [14, 10], [11, 6], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [15, 1], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [16, 15], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [0, 2], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[3, 9]
[13, 18]
[22, 25]
[24, 29]
[27, 38]
[33, 40]
[40, 46]
[77, 87]
[80, 88]
[84, 94]
[92, 99]
[94, 101]
[101, 104]
[97, 108]
[118, 131]
[126, 133]
[129, 136]
[130, 137]
[133, 138]
[137, 139]
[135, 142]
[141, 145]
[147, 150]
[164, 167]
[161, 169]
[158, 171]
[169, 174]
[167, 176]
[172, 178]
[185, 190]
[179, 194]
[183, 196]
[195, 201]
[197, 205]
[200, 206]
[193, 208]
[206, 213]
[220, 225]
[214, 228]
[228, 238]
[247, 254]
[254, 260]
[255, 264]
[264, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[63, 67, 78]
[111, 117, 120]
[116, 124, 128]
[146, 151, 157]
[165, 170, 173]
[222, 232, 236]
[217, 229, 237]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[25, 31, 34]
[46, 49, 53]
[140, 144, 152]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[14, 19, 26]
[55, 63, 66]
[212, 215, 222]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[3, 9]
[13, 18]
[22, 25]
[24, 29]
[27, 38]
[33, 40]
[40, 46]
[77, 87]
[80, 88]
[84, 94]
[92, 99]
[94, 101]
[101, 104]
[97, 108]
[118, 131]
[126, 133]
[129, 136]
[130, 137]
[133, 138]
[137, 139]
[135, 142]
[141, 145]
[147, 150]
[164, 167]
[161, 169]
[158, 171]
[169, 174]
[167, 176]
[172, 178]
[185, 190]
[179, 194]
[183, 196]
[195, 201]
[197, 205]
[200, 206]
[193, 208]
[206, 213]
[220, 225]
[214, 228]
[228, 238]
[247, 254]
[254, 260]
[255, 264]
[264, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.1571197509765625

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] cc => I, Pos: [0, 8] cc => I, Pos: [3, 9] cc => I, Pos: [3, 9] cc => I, Pos: [13, 18] cc => I, Pos: [13, 18] cc => I, Pos: [14, 19, 26] ccc => cc, Pos: [22, 25] cc => I, Pos: [22, 25] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [25, 31, 34] ccc => cc, Pos: [27, 38] cc => I, Pos: [27, 38] cc => I, Pos: [33, 40] cc => I, Pos: [33, 40] cc => I, Pos: [40, 46] cc => I, Pos: [40, 46] cc => I, Pos: [46, 49, 53] ccc => cc, Pos: [55, 63, 66] ccc => cc, Pos: [63, 67, 78] ccc => cc, Pos: [77, 87] cc => I, Pos: [77, 87] cc => I, Pos: [80, 88] cc => I, Pos: [80, 88] cc => I, Pos: [84, 94] cc => I, Pos: [84, 94] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [97, 108] cc => I, Pos: [97, 108] cc => I, Pos: [101, 104] cc => I, Pos: [101, 104] cc => I, Pos: [111, 117, 120] ccc => cc, Pos: [116, 124, 128] ccc => cc, Pos: [118, 131] cc => I, Pos: [118, 131] cc => I, Pos: [126, 133] cc => I, Pos: [126, 133] cc => I, Pos: [129, 136] cc => I, Pos: [129, 136] cc => I, Pos: [130, 137] cc => I, Pos: [130, 137] cc => I, Pos: [133, 138] cc => I, Pos: [133, 138] cc => I, Pos: [135, 142] cc => I, Pos: [135, 142] cc => I, Pos: [137, 139] cc => I, Pos: [137, 139] cc => I, Pos: [140, 144, 152] ccc => cc, Pos: [141, 145] cc => I, Pos: [141, 145] cc => I, Pos: [146, 151, 157] ccc => cc, Pos: [147, 150] cc => I, Pos: [147, 150] cc => I, Pos: [158, 171] cc => I, Pos: [158, 171] cc => I, Pos: [161, 169] cc => I, Pos: [161, 169] cc => I, Pos: [164, 167] cc => I, Pos: [164, 167] cc => I, Pos: [165, 170, 173] ccc => cc, Pos: [167, 176] cc => I, Pos: [167, 176] cc => I, Pos: [169, 174] cc => I, Pos: [169, 174] cc => I, Pos: [172, 178] cc => I, Pos: [172, 178] cc => I, Pos: [179, 194] cc => I, Pos: [179, 194] cc => I, Pos: [183, 196] cc => I, Pos: [183, 196] cc => I, Pos: [185, 190] cc => I, Pos: [185, 190] cc => I, Pos: [193, 208] cc => I, Pos: [193, 208] cc => I, Pos: [195, 201] cc => I, Pos: [195, 201] cc => I, Pos: [197, 205] cc => I, Pos: [197, 205] cc => I, Pos: [200, 206] cc => I, Pos: [200, 206] cc => I, Pos: [206, 213] cc => I, Pos: [206, 213] cc => I, Pos: [212, 215, 222] ccc => cc, Pos: [214, 228] cc => I, Pos: [214, 228] cc => I, Pos: [217, 229, 237] ccc => cc, Pos: [220, 225] cc => I, Pos: [220, 225] cc => I, Pos: [222, 232, 236] ccc => cc, Pos: [228, 238] cc => I, Pos: [228, 238] cc => I, Pos: [247, 254] cc => I, Pos: [247, 254] cc => I, Pos: [254, 260] cc => I, Pos: [254, 260] cc => I, Pos: [255, 264] cc => I, Pos: [255, 264] cc => I, Pos: [264, 268] cc => I, Pos: [264, 268] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] cc => I,
 Pos: [3, 9] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [14, 19, 26] ccc => cc,
 Pos: [22, 25] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [27, 38] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [46, 49, 53] ccc => cc,
 Pos: [55, 63, 66] ccc => cc,
 Pos: [77, 87] cc => I,
 Pos: [80, 88] cc => I,
 Pos: [94, 101] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [97, 108] cc => I,
 Pos: [111, 117, 120] ccc => cc,
 Pos: [116, 124, 128] ccc => cc,
 Pos: [118, 131] cc => I,
 Pos: [126, 133] cc => I,
 Pos: [129, 136] cc => I,
 Pos: [137, 139] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [140, 144, 152] ccc => cc,
 Pos: [141, 145] cc => I,
 Pos: [146, 151, 157] ccc => cc,
 Pos: [147, 150] cc => I,
 Pos: [158, 171] cc => I,
 Pos: [161, 169] cc => I,
 Pos: [164, 167] cc => I,
 Pos: [165, 170, 173] ccc => cc,
 Pos: [172, 178] cc => I,
 Pos: [179, 194] cc => I,
 Pos: [183, 196] cc => I,
 Pos: [185, 190] cc => I,
 Pos: [193, 208] cc => I,
 Pos: [195, 201] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [206, 213] cc => I,
 Pos: [222, 232, 236] ccc => cc,
 Pos: [214, 228] cc => I,
 Pos: [217, 229, 237] ccc => cc,
 Pos: [220, 225] cc => I,
 Pos: [254, 260] cc => I,
 Pos: [255, 264] cc => I]
Change: 44, Saving: 156

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 8] cc => I
Apply:  Pos: [3, 9] cc => I
Apply:  Pos: [13, 18] cc => I
Apply:  Pos: [14, 19, 26] ccc => cc
Apply:  Pos: [22, 25] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [27, 38] cc => I
Apply:  Pos: [33, 40] cc => I
Apply:  Pos: [46, 49, 53] ccc => cc
Apply:  Pos: [55, 63, 66] ccc => cc
Apply:  Pos: [77, 87] cc => I
Apply:  Pos: [80, 88] cc => I
Apply:  Pos: [94, 101] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [97, 108] cc => I
Apply:  Pos: [111, 117, 120] ccc => cc
Apply:  Pos: [116, 124, 128] ccc => cc
Apply:  Pos: [118, 131] cc => I
Apply:  Pos: [126, 133] cc => I
Apply:  Pos: [129, 136] cc => I
Apply:  Pos: [137, 139] cc => I
Apply:  Pos: [135, 142] cc => I
Apply:  Pos: [140, 144, 152] ccc => cc
Apply:  Pos: [141, 145] cc => I
Apply:  Pos: [146, 151, 157] ccc => cc
Apply:  Pos: [147, 150] cc => I
Apply:  Pos: [158, 171] cc => I
Apply:  Pos: [161, 169] cc => I
Apply:  Pos: [164, 167] cc => I
Apply:  Pos: [165, 170, 173] ccc => cc
Apply:  Pos: [172, 178] cc => I
Apply:  Pos: [179, 194] cc => I
Apply:  Pos: [183, 196] cc => I
Apply:  Pos: [185, 190] cc => I
Apply:  Pos: [193, 208] cc => I
Apply:  Pos: [195, 201] cc => I
Apply:  Pos: [197, 205] cc => I
Apply:  Pos: [206, 213] cc => I
Apply:  Pos: [222, 232, 236] ccc => cc
Apply:  Pos: [214, 228] cc => I
Apply:  Pos: [217, 229, 237] ccc => cc
Apply:  Pos: [220, 225] cc => I
Apply:  Pos: [254, 260] cc => I
Apply:  Pos: [255, 264] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [14, 10], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [13, 14], [15, 0], [4, 2], [5, 6], [17, 19], [14, 10], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [1, 8], [15, 13], [18, 2], [5, 6], [4, 2], [5, 11], [19, 12], [0, 18], [4, 18], [0, 2], [19, 5], [18, 2], [17, 12], [1, 8], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [11, 6], [5, 3], [13, 19], [4, 2], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [17, 19], [8, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [8, 12], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  5.1571197509765625

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[65, 78]
[144, 152]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[15, 24, 29]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[67, 69, 72]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[65, 78]
[144, 152]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4221749305725098

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [15, 24, 29] ccc => cc, Pos: [65, 78] cc => I, Pos: [65, 78] cc => I, Pos: [67, 69, 72] ccc => cc, Pos: [144, 152] cc => I, Pos: [144, 152] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [15, 24, 29] ccc => cc,
 Pos: [65, 78] cc => I,
 Pos: [67, 69, 72] ccc => cc,
 Pos: [144, 152] cc => I]
Change: 4, Saving: 12

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [15, 24, 29] ccc => cc
Apply:  Pos: [65, 78] cc => I
Apply:  Pos: [67, 69, 72] ccc => cc
Apply:  Pos: [144, 152] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [4, 18], [5, 6], [18, 2], [5, 11], [19, 12], [0, 2], [0, 18], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [13, 11], [12, 11], [4, 0], [15, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [11, 6], [5, 3], [13, 19], [4, 2], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 19], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.4221749305725098

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[58, 65]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[58, 65]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.344679594039917

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [58, 65] cc => I, Pos: [58, 65] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [58, 65] cc => I]
Change: 1, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [58, 65] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [18, 2], [5, 11], [19, 12], [0, 18], [0, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [11, 6], [5, 3], [13, 19], [4, 2], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [17, 19], [8, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.344679594039917

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[129, 133, 138]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[65, 68, 69]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2667694091796875

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [65, 68, 69] ccc => cc, Pos: [129, 133, 138] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [65, 68, 69] ccc => cc, Pos: [129, 133, 138] ccc => cc]
Change: 2, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [65, 68, 69] ccc => cc
Apply:  Pos: [129, 133, 138] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [0, 18], [5, 11], [19, 12], [18, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [13, 11], [12, 11], [4, 0], [15, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [11, 6], [5, 3], [13, 19], [4, 2], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [1, 8], [5, 11], [18, 7], [14, 5], [8, 19], [0, 13], [2, 14], [5, 11], [16, 4], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.2667694091796875

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[68, 70]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[68, 70]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.23529052734375

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [68, 70] cc => I, Pos: [68, 70] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [68, 70] cc => I]
Change: 1, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [68, 70] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [0, 18], [5, 11], [19, 12], [19, 5], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [11, 6], [5, 3], [13, 19], [4, 2], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [1, 8], [5, 11], [18, 7], [14, 5], [8, 19], [0, 13], [2, 14], [5, 11], [16, 4], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.23529052734375

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 360

Reduced: 
 - size: 90 (33.33%)
 - cycle: 180 (33.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936760902404785

[4, 18], [1, 8], [19, 5], [17, 12], [2, 10], [11, 6], [16, 15], [13, 14], [4, 18], [17, 12], [3, 6], [8, 19], [14, 9], [18, 7], [0, 13], [8, 12], [9, 3], [5, 6], [18, 7], [15, 13], [19, 12], [14, 10], [3, 6], [4, 18], [19, 14], [3, 6], [15, 0], [8, 12], [18, 2], [19, 14], [16, 4], [11, 3], [1, 0], [18, 7], [3, 6], [19, 5], [2, 9], [13, 14], [8, 12], [15, 0], [18, 7], [4, 2], [5, 6], [17, 19], [14, 10], [15, 13], [18, 7], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 9], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [7, 10], [2, 9], [8, 17], [19, 14], [4, 0], [17, 12], [11, 3], [1, 8], [15, 13], [18, 2], [7, 10], [19, 14], [5, 6], [4, 2], [5, 11], [13, 14], [19, 12], [1, 8], [0, 18], [4, 18], [10, 9], [0, 2], [13, 14], [19, 5], [1, 8], [18, 2], [17, 12], [1, 8], [19, 14], [0, 13], [11, 6], [10, 9], [4, 2], [12, 11], [13, 5], [15, 0], [4, 0], [8, 12], [18, 2], [17, 19], [5, 11], [16, 15], [16, 4], [13, 5], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [17, 19], [14, 9], [11, 6], [16, 15], [5, 3], [4, 2], [13, 19], [7, 10], [14, 9], [11, 6], [4, 2], [11, 6], [19, 14], [15, 1], [7, 10], [2, 9], [8, 19], [15, 1], [0, 18], [11, 3], [10, 9], [5, 6], [11, 3], [18, 7], [19, 14], [16, 15], [17, 12], [2, 9], [8, 12], [0, 18], [16, 4], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [7, 10], [15, 13], [2, 9], [7, 10], [19, 5], [1, 0], [13, 14], [16, 4], [4, 2], [15, 13], [1, 0], [8, 17], [7, 10], [5, 6], [4, 2], [1, 13], [17, 12], [11, 6], [0, 18], [16, 15], [14, 10], [5, 3], [4, 18], [17, 19], [7, 10], [0, 2], [5, 3], [12, 11], [0, 18], [9, 3], [1, 13], [2, 10], [16, 15], [17, 12], [8, 19], [5, 11], [18, 7], [2, 10], [14, 5], [1, 8], [0, 13], [17, 12], [18, 7], [2, 14], [9, 3], [5, 11], [16, 4], [8, 12], [17, 19], [18, 7], [11, 6], [8, 19], [5, 3], [15, 1], [10, 9], [13, 14], [4, 18], [11, 3], [8, 17], [13, 5], [19, 14], [4, 18], [8, 19], [14, 10], [11, 6], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [15, 1], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [16, 15], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [0, 2], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[3, 9]
[13, 18]
[22, 25]
[24, 29]
[27, 38]
[33, 40]
[40, 46]
[77, 87]
[80, 88]
[84, 94]
[92, 99]
[94, 101]
[101, 104]
[97, 108]
[118, 131]
[126, 133]
[129, 136]
[130, 137]
[133, 138]
[137, 139]
[135, 142]
[141, 145]
[147, 150]
[164, 167]
[161, 169]
[158, 171]
[169, 174]
[167, 176]
[172, 178]
[185, 190]
[179, 194]
[183, 196]
[195, 201]
[197, 205]
[200, 206]
[193, 208]
[206, 213]
[220, 225]
[214, 228]
[228, 238]
[247, 254]
[254, 260]
[255, 264]
[264, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[63, 67, 78]
[111, 117, 120]
[116, 124, 128]
[146, 151, 157]
[165, 170, 173]
[222, 232, 236]
[217, 229, 237]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[25, 31, 34]
[46, 49, 53]
[140, 144, 152]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[14, 19, 26]
[55, 63, 66]
[212, 215, 222]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[3, 9]
[13, 18]
[22, 25]
[24, 29]
[27, 38]
[33, 40]
[40, 46]
[77, 87]
[80, 88]
[84, 94]
[92, 99]
[94, 101]
[101, 104]
[97, 108]
[118, 131]
[126, 133]
[129, 136]
[130, 137]
[133, 138]
[137, 139]
[135, 142]
[141, 145]
[147, 150]
[164, 167]
[161, 169]
[158, 171]
[169, 174]
[167, 176]
[172, 178]
[185, 190]
[179, 194]
[183, 196]
[195, 201]
[197, 205]
[200, 206]
[193, 208]
[206, 213]
[220, 225]
[214, 228]
[228, 238]
[247, 254]
[254, 260]
[255, 264]
[264, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.234662771224976

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] cc => I, Pos: [0, 8] cc => I, Pos: [3, 9] cc => I, Pos: [3, 9] cc => I, Pos: [13, 18] cc => I, Pos: [13, 18] cc => I, Pos: [14, 19, 26] ccc => cc, Pos: [22, 25] cc => I, Pos: [22, 25] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [25, 31, 34] ccc => cc, Pos: [27, 38] cc => I, Pos: [27, 38] cc => I, Pos: [33, 40] cc => I, Pos: [33, 40] cc => I, Pos: [40, 46] cc => I, Pos: [40, 46] cc => I, Pos: [46, 49, 53] ccc => cc, Pos: [55, 63, 66] ccc => cc, Pos: [63, 67, 78] ccc => cc, Pos: [77, 87] cc => I, Pos: [77, 87] cc => I, Pos: [80, 88] cc => I, Pos: [80, 88] cc => I, Pos: [84, 94] cc => I, Pos: [84, 94] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [97, 108] cc => I, Pos: [97, 108] cc => I, Pos: [101, 104] cc => I, Pos: [101, 104] cc => I, Pos: [111, 117, 120] ccc => cc, Pos: [116, 124, 128] ccc => cc, Pos: [118, 131] cc => I, Pos: [118, 131] cc => I, Pos: [126, 133] cc => I, Pos: [126, 133] cc => I, Pos: [129, 136] cc => I, Pos: [129, 136] cc => I, Pos: [130, 137] cc => I, Pos: [130, 137] cc => I, Pos: [133, 138] cc => I, Pos: [133, 138] cc => I, Pos: [135, 142] cc => I, Pos: [135, 142] cc => I, Pos: [137, 139] cc => I, Pos: [137, 139] cc => I, Pos: [140, 144, 152] ccc => cc, Pos: [141, 145] cc => I, Pos: [141, 145] cc => I, Pos: [146, 151, 157] ccc => cc, Pos: [147, 150] cc => I, Pos: [147, 150] cc => I, Pos: [158, 171] cc => I, Pos: [158, 171] cc => I, Pos: [161, 169] cc => I, Pos: [161, 169] cc => I, Pos: [164, 167] cc => I, Pos: [164, 167] cc => I, Pos: [165, 170, 173] ccc => cc, Pos: [167, 176] cc => I, Pos: [167, 176] cc => I, Pos: [169, 174] cc => I, Pos: [169, 174] cc => I, Pos: [172, 178] cc => I, Pos: [172, 178] cc => I, Pos: [179, 194] cc => I, Pos: [179, 194] cc => I, Pos: [183, 196] cc => I, Pos: [183, 196] cc => I, Pos: [185, 190] cc => I, Pos: [185, 190] cc => I, Pos: [193, 208] cc => I, Pos: [193, 208] cc => I, Pos: [195, 201] cc => I, Pos: [195, 201] cc => I, Pos: [197, 205] cc => I, Pos: [197, 205] cc => I, Pos: [200, 206] cc => I, Pos: [200, 206] cc => I, Pos: [206, 213] cc => I, Pos: [206, 213] cc => I, Pos: [212, 215, 222] ccc => cc, Pos: [214, 228] cc => I, Pos: [214, 228] cc => I, Pos: [217, 229, 237] ccc => cc, Pos: [220, 225] cc => I, Pos: [220, 225] cc => I, Pos: [222, 232, 236] ccc => cc, Pos: [228, 238] cc => I, Pos: [228, 238] cc => I, Pos: [247, 254] cc => I, Pos: [247, 254] cc => I, Pos: [254, 260] cc => I, Pos: [254, 260] cc => I, Pos: [255, 264] cc => I, Pos: [255, 264] cc => I, Pos: [264, 268] cc => I, Pos: [264, 268] cc => I]

--------End Timer [Generate Plans]:  0.10936784744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] cc => I,
 Pos: [3, 9] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [14, 19, 26] ccc => cc,
 Pos: [22, 25] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [27, 38] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [46, 49, 53] ccc => cc,
 Pos: [63, 67, 78] ccc => cc,
 Pos: [77, 87] cc => I,
 Pos: [80, 88] cc => I,
 Pos: [94, 101] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [97, 108] cc => I,
 Pos: [111, 117, 120] ccc => cc,
 Pos: [116, 124, 128] ccc => cc,
 Pos: [118, 131] cc => I,
 Pos: [126, 133] cc => I,
 Pos: [129, 136] cc => I,
 Pos: [137, 139] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [140, 144, 152] ccc => cc,
 Pos: [141, 145] cc => I,
 Pos: [146, 151, 157] ccc => cc,
 Pos: [147, 150] cc => I,
 Pos: [158, 171] cc => I,
 Pos: [161, 169] cc => I,
 Pos: [164, 167] cc => I,
 Pos: [165, 170, 173] ccc => cc,
 Pos: [172, 178] cc => I,
 Pos: [179, 194] cc => I,
 Pos: [183, 196] cc => I,
 Pos: [185, 190] cc => I,
 Pos: [193, 208] cc => I,
 Pos: [195, 201] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [206, 213] cc => I,
 Pos: [222, 232, 236] ccc => cc,
 Pos: [228, 238] cc => I,
 Pos: [217, 229, 237] ccc => cc,
 Pos: [220, 225] cc => I,
 Pos: [254, 260] cc => I,
 Pos: [255, 264] cc => I]
Change: 44, Saving: 44

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 8] cc => I
Apply:  Pos: [3, 9] cc => I
Apply:  Pos: [13, 18] cc => I
Apply:  Pos: [14, 19, 26] ccc => cc
Apply:  Pos: [22, 25] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [27, 38] cc => I
Apply:  Pos: [33, 40] cc => I
Apply:  Pos: [46, 49, 53] ccc => cc
Apply:  Pos: [63, 67, 78] ccc => cc
Apply:  Pos: [77, 87] cc => I
Apply:  Pos: [80, 88] cc => I
Apply:  Pos: [94, 101] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [97, 108] cc => I
Apply:  Pos: [111, 117, 120] ccc => cc
Apply:  Pos: [116, 124, 128] ccc => cc
Apply:  Pos: [118, 131] cc => I
Apply:  Pos: [126, 133] cc => I
Apply:  Pos: [129, 136] cc => I
Apply:  Pos: [137, 139] cc => I
Apply:  Pos: [135, 142] cc => I
Apply:  Pos: [140, 144, 152] ccc => cc
Apply:  Pos: [141, 145] cc => I
Apply:  Pos: [146, 151, 157] ccc => cc
Apply:  Pos: [147, 150] cc => I
Apply:  Pos: [158, 171] cc => I
Apply:  Pos: [161, 169] cc => I
Apply:  Pos: [164, 167] cc => I
Apply:  Pos: [165, 170, 173] ccc => cc
Apply:  Pos: [172, 178] cc => I
Apply:  Pos: [179, 194] cc => I
Apply:  Pos: [183, 196] cc => I
Apply:  Pos: [185, 190] cc => I
Apply:  Pos: [193, 208] cc => I
Apply:  Pos: [195, 201] cc => I
Apply:  Pos: [197, 205] cc => I
Apply:  Pos: [206, 213] cc => I
Apply:  Pos: [222, 232, 236] ccc => cc
Apply:  Pos: [228, 238] cc => I
Apply:  Pos: [217, 229, 237] ccc => cc
Apply:  Pos: [220, 225] cc => I
Apply:  Pos: [254, 260] cc => I
Apply:  Pos: [255, 264] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [14, 10], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [13, 14], [15, 0], [4, 2], [5, 6], [17, 19], [14, 10], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 3], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [8, 17], [4, 0], [17, 12], [11, 3], [1, 8], [15, 13], [18, 2], [5, 6], [4, 2], [5, 11], [19, 12], [0, 18], [4, 18], [0, 2], [19, 5], [18, 2], [17, 12], [1, 8], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [11, 6], [5, 3], [13, 19], [4, 2], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [17, 19], [11, 6], [8, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [8, 12], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  5.3440306186676025

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[65, 78]
[144, 153]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[164, 169, 176]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[15, 24, 29]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[67, 69, 72]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[65, 78]
[144, 153]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.48494815826416

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [15, 24, 29] ccc => cc, Pos: [65, 78] cc => I, Pos: [65, 78] cc => I, Pos: [67, 69, 72] ccc => cc, Pos: [144, 153] cc => I, Pos: [144, 153] cc => I, Pos: [164, 169, 176] ccc => cc]

--------End Timer [Generate Plans]:  0.015624761581420898

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [15, 24, 29] ccc => cc,
 Pos: [65, 78] cc => I,
 Pos: [67, 69, 72] ccc => cc,
 Pos: [144, 153] cc => I,
 Pos: [164, 169, 176] ccc => cc]
Change: 5, Saving: 6

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [15, 24, 29] ccc => cc
Apply:  Pos: [65, 78] cc => I
Apply:  Pos: [67, 69, 72] ccc => cc
Apply:  Pos: [144, 153] cc => I
Apply:  Pos: [164, 169, 176] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 3], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [4, 18], [5, 6], [18, 2], [5, 11], [19, 12], [0, 2], [0, 18], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [13, 11], [12, 11], [4, 0], [15, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [11, 6], [5, 3], [13, 19], [4, 2], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [17, 19], [11, 6], [8, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 11], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.500572919845581

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[59, 65]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[59, 65]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3285109996795654

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [59, 65] cc => I, Pos: [59, 65] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [59, 65] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [59, 65] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 3], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [18, 2], [5, 11], [19, 12], [0, 18], [0, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [11, 6], [5, 3], [13, 19], [4, 2], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [17, 19], [11, 6], [8, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 11], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.3285109996795654

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[65, 68, 69]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3125734329223633

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [65, 68, 69] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [65, 68, 69] ccc => cc]
Change: 1, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [65, 68, 69] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 3], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [0, 18], [5, 11], [19, 12], [18, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [13, 11], [12, 11], [4, 0], [15, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [11, 6], [5, 3], [13, 19], [4, 2], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [17, 19], [11, 6], [8, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 11], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.3125734329223633

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[68, 70]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[68, 70]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.266444683074951

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [68, 70] cc => I, Pos: [68, 70] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [68, 70] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [68, 70] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 3], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [0, 18], [5, 11], [19, 12], [19, 5], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [11, 6], [5, 3], [13, 19], [4, 2], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [17, 19], [11, 6], [8, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 11], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.266444683074951

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 360

Reduced: 
 - size: 90 (33.33%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10935354232788086

[4, 18], [1, 8], [19, 5], [17, 12], [2, 10], [11, 6], [16, 15], [13, 14], [4, 18], [17, 12], [3, 6], [8, 19], [14, 9], [18, 7], [0, 13], [8, 12], [9, 3], [5, 6], [18, 7], [15, 13], [19, 12], [14, 10], [3, 6], [4, 18], [19, 14], [3, 6], [15, 0], [8, 12], [18, 2], [19, 14], [16, 4], [11, 3], [1, 0], [18, 7], [3, 6], [19, 5], [2, 9], [13, 14], [8, 12], [15, 0], [18, 7], [4, 2], [5, 6], [17, 19], [14, 10], [15, 13], [18, 7], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 9], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [7, 10], [2, 9], [8, 17], [19, 14], [4, 0], [17, 12], [11, 3], [1, 8], [15, 13], [18, 2], [7, 10], [19, 14], [5, 6], [4, 2], [5, 11], [13, 14], [19, 12], [1, 8], [0, 18], [4, 18], [10, 9], [0, 2], [13, 14], [19, 5], [1, 8], [18, 2], [17, 12], [1, 8], [19, 14], [0, 13], [11, 6], [10, 9], [4, 2], [12, 11], [13, 5], [15, 0], [4, 0], [8, 12], [18, 2], [17, 19], [5, 11], [16, 15], [16, 4], [13, 5], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [17, 19], [14, 9], [11, 6], [16, 15], [5, 3], [4, 2], [13, 19], [7, 10], [14, 9], [11, 6], [4, 2], [11, 6], [19, 14], [15, 1], [7, 10], [2, 9], [8, 19], [15, 1], [0, 18], [11, 3], [10, 9], [5, 6], [11, 3], [18, 7], [19, 14], [16, 15], [17, 12], [2, 9], [8, 12], [0, 18], [16, 4], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [7, 10], [15, 13], [2, 9], [7, 10], [19, 5], [1, 0], [13, 14], [16, 4], [4, 2], [15, 13], [1, 0], [8, 17], [7, 10], [5, 6], [4, 2], [1, 13], [17, 12], [11, 6], [0, 18], [16, 15], [14, 10], [5, 3], [4, 18], [17, 19], [7, 10], [0, 2], [5, 3], [12, 11], [0, 18], [9, 3], [1, 13], [2, 10], [16, 15], [17, 12], [8, 19], [5, 11], [18, 7], [2, 10], [14, 5], [1, 8], [0, 13], [17, 12], [18, 7], [2, 14], [9, 3], [5, 11], [16, 4], [8, 12], [17, 19], [18, 7], [11, 6], [8, 19], [5, 3], [15, 1], [10, 9], [13, 14], [4, 18], [11, 3], [8, 17], [13, 5], [19, 14], [4, 18], [8, 19], [14, 10], [11, 6], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [15, 1], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [16, 15], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [0, 2], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[3, 9]
[13, 18]
[22, 25]
[24, 29]
[27, 38]
[33, 40]
[40, 46]
[77, 87]
[80, 88]
[84, 94]
[92, 99]
[94, 101]
[101, 104]
[97, 108]
[118, 131]
[126, 133]
[129, 136]
[130, 137]
[133, 138]
[137, 139]
[135, 142]
[141, 145]
[147, 150]
[164, 167]
[161, 169]
[158, 171]
[169, 174]
[167, 176]
[172, 178]
[185, 190]
[179, 194]
[183, 196]
[195, 201]
[197, 205]
[200, 206]
[193, 208]
[206, 213]
[220, 225]
[214, 228]
[228, 238]
[247, 254]
[254, 260]
[255, 264]
[264, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[63, 67, 78]
[111, 117, 120]
[116, 124, 128]
[146, 151, 157]
[165, 170, 173]
[222, 232, 236]
[217, 229, 237]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[25, 31, 34]
[46, 49, 53]
[140, 144, 152]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[14, 19, 26]
[55, 63, 66]
[212, 215, 222]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[3, 9]
[13, 18]
[22, 25]
[24, 29]
[27, 38]
[33, 40]
[40, 46]
[77, 87]
[80, 88]
[84, 94]
[92, 99]
[94, 101]
[101, 104]
[97, 108]
[118, 131]
[126, 133]
[129, 136]
[130, 137]
[133, 138]
[137, 139]
[135, 142]
[141, 145]
[147, 150]
[164, 167]
[161, 169]
[158, 171]
[169, 174]
[167, 176]
[172, 178]
[185, 190]
[179, 194]
[183, 196]
[195, 201]
[197, 205]
[200, 206]
[193, 208]
[206, 213]
[220, 225]
[214, 228]
[228, 238]
[247, 254]
[254, 260]
[255, 264]
[264, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.250196933746338

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] cc => I, Pos: [0, 8] cc => I, Pos: [3, 9] cc => I, Pos: [3, 9] cc => I, Pos: [13, 18] cc => I, Pos: [13, 18] cc => I, Pos: [14, 19, 26] ccc => cc, Pos: [22, 25] cc => I, Pos: [22, 25] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [25, 31, 34] ccc => cc, Pos: [27, 38] cc => I, Pos: [27, 38] cc => I, Pos: [33, 40] cc => I, Pos: [33, 40] cc => I, Pos: [40, 46] cc => I, Pos: [40, 46] cc => I, Pos: [46, 49, 53] ccc => cc, Pos: [55, 63, 66] ccc => cc, Pos: [63, 67, 78] ccc => cc, Pos: [77, 87] cc => I, Pos: [77, 87] cc => I, Pos: [80, 88] cc => I, Pos: [80, 88] cc => I, Pos: [84, 94] cc => I, Pos: [84, 94] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [97, 108] cc => I, Pos: [97, 108] cc => I, Pos: [101, 104] cc => I, Pos: [101, 104] cc => I, Pos: [111, 117, 120] ccc => cc, Pos: [116, 124, 128] ccc => cc, Pos: [118, 131] cc => I, Pos: [118, 131] cc => I, Pos: [126, 133] cc => I, Pos: [126, 133] cc => I, Pos: [129, 136] cc => I, Pos: [129, 136] cc => I, Pos: [130, 137] cc => I, Pos: [130, 137] cc => I, Pos: [133, 138] cc => I, Pos: [133, 138] cc => I, Pos: [135, 142] cc => I, Pos: [135, 142] cc => I, Pos: [137, 139] cc => I, Pos: [137, 139] cc => I, Pos: [140, 144, 152] ccc => cc, Pos: [141, 145] cc => I, Pos: [141, 145] cc => I, Pos: [146, 151, 157] ccc => cc, Pos: [147, 150] cc => I, Pos: [147, 150] cc => I, Pos: [158, 171] cc => I, Pos: [158, 171] cc => I, Pos: [161, 169] cc => I, Pos: [161, 169] cc => I, Pos: [164, 167] cc => I, Pos: [164, 167] cc => I, Pos: [165, 170, 173] ccc => cc, Pos: [167, 176] cc => I, Pos: [167, 176] cc => I, Pos: [169, 174] cc => I, Pos: [169, 174] cc => I, Pos: [172, 178] cc => I, Pos: [172, 178] cc => I, Pos: [179, 194] cc => I, Pos: [179, 194] cc => I, Pos: [183, 196] cc => I, Pos: [183, 196] cc => I, Pos: [185, 190] cc => I, Pos: [185, 190] cc => I, Pos: [193, 208] cc => I, Pos: [193, 208] cc => I, Pos: [195, 201] cc => I, Pos: [195, 201] cc => I, Pos: [197, 205] cc => I, Pos: [197, 205] cc => I, Pos: [200, 206] cc => I, Pos: [200, 206] cc => I, Pos: [206, 213] cc => I, Pos: [206, 213] cc => I, Pos: [212, 215, 222] ccc => cc, Pos: [214, 228] cc => I, Pos: [214, 228] cc => I, Pos: [217, 229, 237] ccc => cc, Pos: [220, 225] cc => I, Pos: [220, 225] cc => I, Pos: [222, 232, 236] ccc => cc, Pos: [228, 238] cc => I, Pos: [228, 238] cc => I, Pos: [247, 254] cc => I, Pos: [247, 254] cc => I, Pos: [254, 260] cc => I, Pos: [254, 260] cc => I, Pos: [255, 264] cc => I, Pos: [255, 264] cc => I, Pos: [264, 268] cc => I, Pos: [264, 268] cc => I]

--------End Timer [Generate Plans]:  0.10920357704162598

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] cc => I,
 Pos: [3, 9] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [14, 19, 26] ccc => cc,
 Pos: [25, 31, 34] ccc => cc,
 Pos: [24, 29] cc => I,
 Pos: [27, 38] cc => I,
 Pos: [40, 46] cc => I,
 Pos: [63, 67, 78] ccc => cc,
 Pos: [77, 87] cc => I,
 Pos: [80, 88] cc => I,
 Pos: [84, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [97, 108] cc => I,
 Pos: [101, 104] cc => I,
 Pos: [111, 117, 120] ccc => cc,
 Pos: [116, 124, 128] ccc => cc,
 Pos: [118, 131] cc => I,
 Pos: [133, 138] cc => I,
 Pos: [129, 136] cc => I,
 Pos: [130, 137] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [140, 144, 152] ccc => cc,
 Pos: [141, 145] cc => I,
 Pos: [146, 151, 157] ccc => cc,
 Pos: [147, 150] cc => I,
 Pos: [158, 171] cc => I,
 Pos: [169, 174] cc => I,
 Pos: [167, 176] cc => I,
 Pos: [165, 170, 173] ccc => cc,
 Pos: [172, 178] cc => I,
 Pos: [179, 194] cc => I,
 Pos: [183, 196] cc => I,
 Pos: [185, 190] cc => I,
 Pos: [193, 208] cc => I,
 Pos: [195, 201] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [206, 213] cc => I,
 Pos: [212, 215, 222] ccc => cc,
 Pos: [228, 238] cc => I,
 Pos: [217, 229, 237] ccc => cc,
 Pos: [220, 225] cc => I,
 Pos: [254, 260] cc => I,
 Pos: [255, 264] cc => I]
Change: 44, Saving: 45

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 8] cc => I
Apply:  Pos: [3, 9] cc => I
Apply:  Pos: [13, 18] cc => I
Apply:  Pos: [14, 19, 26] ccc => cc
Apply:  Pos: [25, 31, 34] ccc => cc
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [27, 38] cc => I
Apply:  Pos: [40, 46] cc => I
Apply:  Pos: [63, 67, 78] ccc => cc
Apply:  Pos: [77, 87] cc => I
Apply:  Pos: [80, 88] cc => I
Apply:  Pos: [84, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [97, 108] cc => I
Apply:  Pos: [101, 104] cc => I
Apply:  Pos: [111, 117, 120] ccc => cc
Apply:  Pos: [116, 124, 128] ccc => cc
Apply:  Pos: [118, 131] cc => I
Apply:  Pos: [133, 138] cc => I
Apply:  Pos: [129, 136] cc => I
Apply:  Pos: [130, 137] cc => I
Apply:  Pos: [135, 142] cc => I
Apply:  Pos: [140, 144, 152] ccc => cc
Apply:  Pos: [141, 145] cc => I
Apply:  Pos: [146, 151, 157] ccc => cc
Apply:  Pos: [147, 150] cc => I
Apply:  Pos: [158, 171] cc => I
Apply:  Pos: [169, 174] cc => I
Apply:  Pos: [167, 176] cc => I
Apply:  Pos: [165, 170, 173] ccc => cc
Apply:  Pos: [172, 178] cc => I
Apply:  Pos: [179, 194] cc => I
Apply:  Pos: [183, 196] cc => I
Apply:  Pos: [185, 190] cc => I
Apply:  Pos: [193, 208] cc => I
Apply:  Pos: [195, 201] cc => I
Apply:  Pos: [197, 205] cc => I
Apply:  Pos: [206, 213] cc => I
Apply:  Pos: [212, 215, 222] ccc => cc
Apply:  Pos: [228, 238] cc => I
Apply:  Pos: [217, 229, 237] ccc => cc
Apply:  Pos: [220, 225] cc => I
Apply:  Pos: [254, 260] cc => I
Apply:  Pos: [255, 264] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [14, 10], [3, 6], [4, 18], [11, 3], [18, 2], [16, 4], [3, 6], [1, 0], [18, 7], [19, 5], [2, 9], [13, 14], [15, 0], [4, 2], [5, 6], [17, 19], [14, 10], [15, 13], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 3], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [18, 2], [5, 6], [4, 2], [5, 11], [19, 12], [0, 18], [4, 18], [0, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [5, 3], [13, 19], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [7, 10], [15, 14], [2, 9], [19, 5], [13, 14], [8, 17], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [8, 17], [11, 6], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  5.359400510787964

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[163, 169, 176]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[16, 18, 21]
[15, 26, 31]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[68, 70, 73]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.468717336654663

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [15, 26, 31] ccc => cc, Pos: [16, 18, 21] ccc => cc, Pos: [68, 70, 73] ccc => cc, Pos: [163, 169, 176] ccc => cc]

--------End Timer [Generate Plans]:  0.015624284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [15, 26, 31] ccc => cc,
 Pos: [16, 18, 21] ccc => cc,
 Pos: [68, 70, 73] ccc => cc,
 Pos: [163, 169, 176] ccc => cc]
Change: 4, Saving: 5

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [15, 26, 31] ccc => cc
Apply:  Pos: [16, 18, 21] ccc => cc
Apply:  Pos: [68, 70, 73] ccc => cc
Apply:  Pos: [163, 169, 176] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [11, 3], [4, 18], [3, 6], [18, 2], [16, 4], [1, 0], [18, 7], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 3], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [4, 18], [5, 6], [18, 2], [5, 11], [19, 12], [0, 2], [0, 18], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [13, 11], [12, 11], [4, 0], [15, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [5, 3], [13, 19], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [7, 10], [15, 14], [2, 9], [19, 5], [13, 14], [8, 17], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 17], [8, 12], [11, 6], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 11], [8, 17], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.484341621398926

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[60, 66]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[60, 66]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3750269412994385

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [60, 66] cc => I, Pos: [60, 66] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [60, 66] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [60, 66] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [11, 3], [4, 18], [3, 6], [18, 2], [16, 4], [1, 0], [18, 7], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 3], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [18, 2], [5, 11], [19, 12], [0, 18], [0, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [5, 3], [13, 19], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [7, 10], [15, 14], [2, 9], [19, 5], [13, 14], [8, 17], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [8, 17], [11, 6], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 11], [8, 17], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.3750269412994385

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[66, 69, 70]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.328192949295044

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [66, 69, 70] ccc => cc]

--------End Timer [Generate Plans]:  0.015642881393432617

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [66, 69, 70] ccc => cc]
Change: 1, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [66, 69, 70] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [11, 3], [4, 18], [3, 6], [18, 2], [16, 4], [1, 0], [18, 7], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 3], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [0, 18], [5, 11], [19, 12], [18, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [13, 11], [12, 11], [4, 0], [15, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [5, 3], [13, 19], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [7, 10], [15, 14], [2, 9], [19, 5], [13, 14], [8, 17], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 17], [8, 12], [11, 6], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 11], [8, 17], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.3438358306884766

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[69, 71]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[69, 71]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3280367851257324

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [69, 71] cc => I, Pos: [69, 71] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [69, 71] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [69, 71] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [11, 3], [4, 18], [3, 6], [18, 2], [16, 4], [1, 0], [18, 7], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 3], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [0, 18], [5, 11], [19, 12], [19, 5], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [5, 3], [13, 19], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [7, 10], [15, 14], [2, 9], [19, 5], [13, 14], [8, 17], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [8, 17], [11, 6], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 11], [8, 17], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.3280367851257324

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [183] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 366

Reduced: 
 - size: 87 (32.22%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936665534973145

[4, 18], [1, 8], [19, 5], [17, 12], [2, 10], [11, 6], [16, 15], [13, 14], [4, 18], [17, 12], [3, 6], [8, 19], [14, 9], [18, 7], [0, 13], [8, 12], [9, 3], [5, 6], [18, 7], [15, 13], [19, 12], [14, 10], [3, 6], [4, 18], [19, 14], [3, 6], [15, 0], [8, 12], [18, 2], [19, 14], [16, 4], [11, 3], [1, 0], [18, 7], [3, 6], [19, 5], [2, 9], [13, 14], [8, 12], [15, 0], [18, 7], [4, 2], [5, 6], [17, 19], [14, 10], [15, 13], [18, 7], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 9], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [7, 10], [2, 9], [8, 17], [19, 14], [4, 0], [17, 12], [11, 3], [1, 8], [15, 13], [18, 2], [7, 10], [19, 14], [5, 6], [4, 2], [5, 11], [13, 14], [19, 12], [1, 8], [0, 18], [4, 18], [10, 9], [0, 2], [13, 14], [19, 5], [1, 8], [18, 2], [17, 12], [1, 8], [19, 14], [0, 13], [11, 6], [10, 9], [4, 2], [12, 11], [13, 5], [15, 0], [4, 0], [8, 12], [18, 2], [17, 19], [5, 11], [16, 15], [16, 4], [13, 5], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [17, 19], [14, 9], [11, 6], [16, 15], [5, 3], [4, 2], [13, 19], [7, 10], [14, 9], [11, 6], [4, 2], [11, 6], [19, 14], [15, 1], [7, 10], [2, 9], [8, 19], [15, 1], [0, 18], [11, 3], [10, 9], [5, 6], [11, 3], [18, 7], [19, 14], [16, 15], [17, 12], [2, 9], [8, 12], [0, 18], [16, 4], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [7, 10], [15, 13], [2, 9], [7, 10], [19, 5], [1, 0], [13, 14], [16, 4], [4, 2], [15, 13], [1, 0], [8, 17], [7, 10], [5, 6], [4, 2], [1, 13], [17, 12], [11, 6], [0, 18], [16, 15], [14, 10], [5, 3], [4, 18], [17, 19], [7, 10], [0, 2], [5, 3], [12, 11], [0, 18], [9, 3], [1, 13], [2, 10], [16, 15], [17, 12], [8, 19], [5, 11], [18, 7], [2, 10], [14, 5], [1, 8], [0, 13], [17, 12], [18, 7], [2, 14], [9, 3], [5, 11], [16, 4], [8, 12], [17, 19], [18, 7], [11, 6], [8, 19], [5, 3], [15, 1], [10, 9], [13, 14], [4, 18], [11, 3], [8, 17], [13, 5], [19, 14], [4, 18], [8, 19], [14, 10], [11, 6], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [15, 1], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [16, 15], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [0, 2], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[3, 9]
[13, 18]
[22, 25]
[24, 29]
[27, 38]
[33, 40]
[40, 46]
[77, 87]
[80, 88]
[84, 94]
[92, 99]
[94, 101]
[101, 104]
[97, 108]
[118, 131]
[126, 133]
[129, 136]
[130, 137]
[133, 138]
[137, 139]
[135, 142]
[141, 145]
[147, 150]
[164, 167]
[161, 169]
[158, 171]
[169, 174]
[167, 176]
[172, 178]
[185, 190]
[179, 194]
[183, 196]
[195, 201]
[197, 205]
[200, 206]
[193, 208]
[206, 213]
[220, 225]
[214, 228]
[228, 238]
[247, 254]
[254, 260]
[255, 264]
[264, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[63, 67, 78]
[111, 117, 120]
[116, 124, 128]
[146, 151, 157]
[165, 170, 173]
[222, 232, 236]
[217, 229, 237]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[25, 31, 34]
[46, 49, 53]
[140, 144, 152]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[14, 19, 26]
[55, 63, 66]
[212, 215, 222]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[3, 9]
[13, 18]
[22, 25]
[24, 29]
[27, 38]
[33, 40]
[40, 46]
[77, 87]
[80, 88]
[84, 94]
[92, 99]
[94, 101]
[101, 104]
[97, 108]
[118, 131]
[126, 133]
[129, 136]
[130, 137]
[133, 138]
[137, 139]
[135, 142]
[141, 145]
[147, 150]
[164, 167]
[161, 169]
[158, 171]
[169, 174]
[167, 176]
[172, 178]
[185, 190]
[179, 194]
[183, 196]
[195, 201]
[197, 205]
[200, 206]
[193, 208]
[206, 213]
[220, 225]
[214, 228]
[228, 238]
[247, 254]
[254, 260]
[255, 264]
[264, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.343697786331177

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] cc => I, Pos: [0, 8] cc => I, Pos: [3, 9] cc => I, Pos: [3, 9] cc => I, Pos: [13, 18] cc => I, Pos: [13, 18] cc => I, Pos: [14, 19, 26] ccc => cc, Pos: [22, 25] cc => I, Pos: [22, 25] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [25, 31, 34] ccc => cc, Pos: [27, 38] cc => I, Pos: [27, 38] cc => I, Pos: [33, 40] cc => I, Pos: [33, 40] cc => I, Pos: [40, 46] cc => I, Pos: [40, 46] cc => I, Pos: [46, 49, 53] ccc => cc, Pos: [55, 63, 66] ccc => cc, Pos: [63, 67, 78] ccc => cc, Pos: [77, 87] cc => I, Pos: [77, 87] cc => I, Pos: [80, 88] cc => I, Pos: [80, 88] cc => I, Pos: [84, 94] cc => I, Pos: [84, 94] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [97, 108] cc => I, Pos: [97, 108] cc => I, Pos: [101, 104] cc => I, Pos: [101, 104] cc => I, Pos: [111, 117, 120] ccc => cc, Pos: [116, 124, 128] ccc => cc, Pos: [118, 131] cc => I, Pos: [118, 131] cc => I, Pos: [126, 133] cc => I, Pos: [126, 133] cc => I, Pos: [129, 136] cc => I, Pos: [129, 136] cc => I, Pos: [130, 137] cc => I, Pos: [130, 137] cc => I, Pos: [133, 138] cc => I, Pos: [133, 138] cc => I, Pos: [135, 142] cc => I, Pos: [135, 142] cc => I, Pos: [137, 139] cc => I, Pos: [137, 139] cc => I, Pos: [140, 144, 152] ccc => cc, Pos: [141, 145] cc => I, Pos: [141, 145] cc => I, Pos: [146, 151, 157] ccc => cc, Pos: [147, 150] cc => I, Pos: [147, 150] cc => I, Pos: [158, 171] cc => I, Pos: [158, 171] cc => I, Pos: [161, 169] cc => I, Pos: [161, 169] cc => I, Pos: [164, 167] cc => I, Pos: [164, 167] cc => I, Pos: [165, 170, 173] ccc => cc, Pos: [167, 176] cc => I, Pos: [167, 176] cc => I, Pos: [169, 174] cc => I, Pos: [169, 174] cc => I, Pos: [172, 178] cc => I, Pos: [172, 178] cc => I, Pos: [179, 194] cc => I, Pos: [179, 194] cc => I, Pos: [183, 196] cc => I, Pos: [183, 196] cc => I, Pos: [185, 190] cc => I, Pos: [185, 190] cc => I, Pos: [193, 208] cc => I, Pos: [193, 208] cc => I, Pos: [195, 201] cc => I, Pos: [195, 201] cc => I, Pos: [197, 205] cc => I, Pos: [197, 205] cc => I, Pos: [200, 206] cc => I, Pos: [200, 206] cc => I, Pos: [206, 213] cc => I, Pos: [206, 213] cc => I, Pos: [212, 215, 222] ccc => cc, Pos: [214, 228] cc => I, Pos: [214, 228] cc => I, Pos: [217, 229, 237] ccc => cc, Pos: [220, 225] cc => I, Pos: [220, 225] cc => I, Pos: [222, 232, 236] ccc => cc, Pos: [228, 238] cc => I, Pos: [228, 238] cc => I, Pos: [247, 254] cc => I, Pos: [247, 254] cc => I, Pos: [254, 260] cc => I, Pos: [254, 260] cc => I, Pos: [255, 264] cc => I, Pos: [255, 264] cc => I, Pos: [264, 268] cc => I, Pos: [264, 268] cc => I]

--------End Timer [Generate Plans]:  0.125197172164917

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] cc => I,
 Pos: [3, 9] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [14, 19, 26] ccc => cc,
 Pos: [22, 25] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [27, 38] cc => I,
 Pos: [40, 46] cc => I,
 Pos: [55, 63, 66] ccc => cc,
 Pos: [77, 87] cc => I,
 Pos: [80, 88] cc => I,
 Pos: [84, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [97, 108] cc => I,
 Pos: [101, 104] cc => I,
 Pos: [111, 117, 120] ccc => cc,
 Pos: [116, 124, 128] ccc => cc,
 Pos: [118, 131] cc => I,
 Pos: [126, 133] cc => I,
 Pos: [129, 136] cc => I,
 Pos: [137, 139] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [140, 144, 152] ccc => cc,
 Pos: [141, 145] cc => I,
 Pos: [146, 151, 157] ccc => cc,
 Pos: [147, 150] cc => I,
 Pos: [158, 171] cc => I,
 Pos: [169, 174] cc => I,
 Pos: [164, 167] cc => I,
 Pos: [165, 170, 173] ccc => cc,
 Pos: [172, 178] cc => I,
 Pos: [179, 194] cc => I,
 Pos: [183, 196] cc => I,
 Pos: [185, 190] cc => I,
 Pos: [193, 208] cc => I,
 Pos: [195, 201] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [206, 213] cc => I,
 Pos: [212, 215, 222] ccc => cc,
 Pos: [214, 228] cc => I,
 Pos: [217, 229, 237] ccc => cc,
 Pos: [220, 225] cc => I,
 Pos: [247, 254] cc => I,
 Pos: [264, 268] cc => I]
Change: 44, Saving: 45

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 8] cc => I
Apply:  Pos: [3, 9] cc => I
Apply:  Pos: [13, 18] cc => I
Apply:  Pos: [14, 19, 26] ccc => cc
Apply:  Pos: [22, 25] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [27, 38] cc => I
Apply:  Pos: [40, 46] cc => I
Apply:  Pos: [55, 63, 66] ccc => cc
Apply:  Pos: [77, 87] cc => I
Apply:  Pos: [80, 88] cc => I
Apply:  Pos: [84, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [97, 108] cc => I
Apply:  Pos: [101, 104] cc => I
Apply:  Pos: [111, 117, 120] ccc => cc
Apply:  Pos: [116, 124, 128] ccc => cc
Apply:  Pos: [118, 131] cc => I
Apply:  Pos: [126, 133] cc => I
Apply:  Pos: [129, 136] cc => I
Apply:  Pos: [137, 139] cc => I
Apply:  Pos: [135, 142] cc => I
Apply:  Pos: [140, 144, 152] ccc => cc
Apply:  Pos: [141, 145] cc => I
Apply:  Pos: [146, 151, 157] ccc => cc
Apply:  Pos: [147, 150] cc => I
Apply:  Pos: [158, 171] cc => I
Apply:  Pos: [169, 174] cc => I
Apply:  Pos: [164, 167] cc => I
Apply:  Pos: [165, 170, 173] ccc => cc
Apply:  Pos: [172, 178] cc => I
Apply:  Pos: [179, 194] cc => I
Apply:  Pos: [183, 196] cc => I
Apply:  Pos: [185, 190] cc => I
Apply:  Pos: [193, 208] cc => I
Apply:  Pos: [195, 201] cc => I
Apply:  Pos: [197, 205] cc => I
Apply:  Pos: [206, 213] cc => I
Apply:  Pos: [212, 215, 222] ccc => cc
Apply:  Pos: [214, 228] cc => I
Apply:  Pos: [217, 229, 237] ccc => cc
Apply:  Pos: [220, 225] cc => I
Apply:  Pos: [247, 254] cc => I
Apply:  Pos: [264, 268] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [14, 10], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [18, 7], [3, 6], [19, 5], [2, 9], [13, 14], [15, 0], [4, 2], [5, 6], [17, 19], [14, 10], [15, 13], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [18, 2], [5, 6], [4, 2], [5, 11], [19, 12], [0, 18], [4, 18], [0, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [11, 6], [5, 3], [13, 19], [4, 2], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [8, 17], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [11, 3], ----End Timer [Execute Mapping]:  5.468894958496094

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[15, 25, 30]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[67, 69, 72]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.5783677101135254

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [15, 25, 30] ccc => cc, Pos: [67, 69, 72] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [15, 25, 30] ccc => cc, Pos: [67, 69, 72] ccc => cc]
Change: 2, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [15, 25, 30] ccc => cc
Apply:  Pos: [67, 69, 72] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [18, 7], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [4, 18], [5, 6], [18, 2], [5, 11], [19, 12], [0, 2], [0, 18], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [13, 11], [12, 11], [4, 0], [15, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [11, 6], [5, 3], [13, 19], [4, 2], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 17], [8, 12], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [11, 3], ----End Timer [Execute Mapping]:  3.5783677101135254

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[59, 66]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[59, 66]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.562412738800049

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [59, 66] cc => I, Pos: [59, 66] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [59, 66] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [59, 66] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [18, 7], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [18, 2], [5, 11], [19, 12], [0, 18], [0, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [11, 6], [5, 3], [13, 19], [4, 2], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [8, 17], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [11, 3], ----End Timer [Execute Mapping]:  3.562412738800049

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[66, 69, 70]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.468722105026245

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [66, 69, 70] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [66, 69, 70] ccc => cc]
Change: 1, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [66, 69, 70] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [18, 7], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [0, 18], [5, 11], [19, 12], [18, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [13, 11], [12, 11], [4, 0], [15, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [11, 6], [5, 3], [13, 19], [4, 2], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 17], [8, 12], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [11, 3], ----End Timer [Execute Mapping]:  3.468722105026245

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[69, 71]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[69, 71]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.437497615814209

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [69, 71] cc => I, Pos: [69, 71] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [69, 71] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [69, 71] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [18, 7], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [0, 18], [5, 11], [19, 12], [19, 5], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [11, 6], [5, 3], [13, 19], [4, 2], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [8, 17], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [11, 3], ----End Timer [Execute Mapping]:  3.437497615814209

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [184] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 368

Reduced: 
 - size: 86 (31.85%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936188697814941

[4, 18], [1, 8], [19, 5], [17, 12], [2, 10], [11, 6], [16, 15], [13, 14], [4, 18], [17, 12], [3, 6], [8, 19], [14, 9], [18, 7], [0, 13], [8, 12], [9, 3], [5, 6], [18, 7], [15, 13], [19, 12], [14, 10], [3, 6], [4, 18], [19, 14], [3, 6], [15, 0], [8, 12], [18, 2], [19, 14], [16, 4], [11, 3], [1, 0], [18, 7], [3, 6], [19, 5], [2, 9], [13, 14], [8, 12], [15, 0], [18, 7], [4, 2], [5, 6], [17, 19], [14, 10], [15, 13], [18, 7], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 9], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [7, 10], [2, 9], [8, 17], [19, 14], [4, 0], [17, 12], [11, 3], [1, 8], [15, 13], [18, 2], [7, 10], [19, 14], [5, 6], [4, 2], [5, 11], [13, 14], [19, 12], [1, 8], [0, 18], [4, 18], [10, 9], [0, 2], [13, 14], [19, 5], [1, 8], [18, 2], [17, 12], [1, 8], [19, 14], [0, 13], [11, 6], [10, 9], [4, 2], [12, 11], [13, 5], [15, 0], [4, 0], [8, 12], [18, 2], [17, 19], [5, 11], [16, 15], [16, 4], [13, 5], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [17, 19], [14, 9], [11, 6], [16, 15], [5, 3], [4, 2], [13, 19], [7, 10], [14, 9], [11, 6], [4, 2], [11, 6], [19, 14], [15, 1], [7, 10], [2, 9], [8, 19], [15, 1], [0, 18], [11, 3], [10, 9], [5, 6], [11, 3], [18, 7], [19, 14], [16, 15], [17, 12], [2, 9], [8, 12], [0, 18], [16, 4], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [7, 10], [15, 13], [2, 9], [7, 10], [19, 5], [1, 0], [13, 14], [16, 4], [4, 2], [15, 13], [1, 0], [8, 17], [7, 10], [5, 6], [4, 2], [1, 13], [17, 12], [11, 6], [0, 18], [16, 15], [14, 10], [5, 3], [4, 18], [17, 19], [7, 10], [0, 2], [5, 3], [12, 11], [0, 18], [9, 3], [1, 13], [2, 10], [16, 15], [17, 12], [8, 19], [5, 11], [18, 7], [2, 10], [14, 5], [1, 8], [0, 13], [17, 12], [18, 7], [2, 14], [9, 3], [5, 11], [16, 4], [8, 12], [17, 19], [18, 7], [11, 6], [8, 19], [5, 3], [15, 1], [10, 9], [13, 14], [4, 18], [11, 3], [8, 17], [13, 5], [19, 14], [4, 18], [8, 19], [14, 10], [11, 6], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [15, 1], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [16, 15], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [0, 2], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[3, 9]
[13, 18]
[22, 25]
[24, 29]
[27, 38]
[33, 40]
[40, 46]
[77, 87]
[80, 88]
[84, 94]
[92, 99]
[94, 101]
[101, 104]
[97, 108]
[118, 131]
[126, 133]
[129, 136]
[130, 137]
[133, 138]
[137, 139]
[135, 142]
[141, 145]
[147, 150]
[164, 167]
[161, 169]
[158, 171]
[169, 174]
[167, 176]
[172, 178]
[185, 190]
[179, 194]
[183, 196]
[195, 201]
[197, 205]
[200, 206]
[193, 208]
[206, 213]
[220, 225]
[214, 228]
[228, 238]
[247, 254]
[254, 260]
[255, 264]
[264, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[63, 67, 78]
[111, 117, 120]
[116, 124, 128]
[146, 151, 157]
[165, 170, 173]
[222, 232, 236]
[217, 229, 237]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[25, 31, 34]
[46, 49, 53]
[140, 144, 152]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[14, 19, 26]
[55, 63, 66]
[212, 215, 222]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[3, 9]
[13, 18]
[22, 25]
[24, 29]
[27, 38]
[33, 40]
[40, 46]
[77, 87]
[80, 88]
[84, 94]
[92, 99]
[94, 101]
[101, 104]
[97, 108]
[118, 131]
[126, 133]
[129, 136]
[130, 137]
[133, 138]
[137, 139]
[135, 142]
[141, 145]
[147, 150]
[164, 167]
[161, 169]
[158, 171]
[169, 174]
[167, 176]
[172, 178]
[185, 190]
[179, 194]
[183, 196]
[195, 201]
[197, 205]
[200, 206]
[193, 208]
[206, 213]
[220, 225]
[214, 228]
[228, 238]
[247, 254]
[254, 260]
[255, 264]
[264, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.296064615249634

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] cc => I, Pos: [0, 8] cc => I, Pos: [3, 9] cc => I, Pos: [3, 9] cc => I, Pos: [13, 18] cc => I, Pos: [13, 18] cc => I, Pos: [14, 19, 26] ccc => cc, Pos: [22, 25] cc => I, Pos: [22, 25] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [25, 31, 34] ccc => cc, Pos: [27, 38] cc => I, Pos: [27, 38] cc => I, Pos: [33, 40] cc => I, Pos: [33, 40] cc => I, Pos: [40, 46] cc => I, Pos: [40, 46] cc => I, Pos: [46, 49, 53] ccc => cc, Pos: [55, 63, 66] ccc => cc, Pos: [63, 67, 78] ccc => cc, Pos: [77, 87] cc => I, Pos: [77, 87] cc => I, Pos: [80, 88] cc => I, Pos: [80, 88] cc => I, Pos: [84, 94] cc => I, Pos: [84, 94] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [97, 108] cc => I, Pos: [97, 108] cc => I, Pos: [101, 104] cc => I, Pos: [101, 104] cc => I, Pos: [111, 117, 120] ccc => cc, Pos: [116, 124, 128] ccc => cc, Pos: [118, 131] cc => I, Pos: [118, 131] cc => I, Pos: [126, 133] cc => I, Pos: [126, 133] cc => I, Pos: [129, 136] cc => I, Pos: [129, 136] cc => I, Pos: [130, 137] cc => I, Pos: [130, 137] cc => I, Pos: [133, 138] cc => I, Pos: [133, 138] cc => I, Pos: [135, 142] cc => I, Pos: [135, 142] cc => I, Pos: [137, 139] cc => I, Pos: [137, 139] cc => I, Pos: [140, 144, 152] ccc => cc, Pos: [141, 145] cc => I, Pos: [141, 145] cc => I, Pos: [146, 151, 157] ccc => cc, Pos: [147, 150] cc => I, Pos: [147, 150] cc => I, Pos: [158, 171] cc => I, Pos: [158, 171] cc => I, Pos: [161, 169] cc => I, Pos: [161, 169] cc => I, Pos: [164, 167] cc => I, Pos: [164, 167] cc => I, Pos: [165, 170, 173] ccc => cc, Pos: [167, 176] cc => I, Pos: [167, 176] cc => I, Pos: [169, 174] cc => I, Pos: [169, 174] cc => I, Pos: [172, 178] cc => I, Pos: [172, 178] cc => I, Pos: [179, 194] cc => I, Pos: [179, 194] cc => I, Pos: [183, 196] cc => I, Pos: [183, 196] cc => I, Pos: [185, 190] cc => I, Pos: [185, 190] cc => I, Pos: [193, 208] cc => I, Pos: [193, 208] cc => I, Pos: [195, 201] cc => I, Pos: [195, 201] cc => I, Pos: [197, 205] cc => I, Pos: [197, 205] cc => I, Pos: [200, 206] cc => I, Pos: [200, 206] cc => I, Pos: [206, 213] cc => I, Pos: [206, 213] cc => I, Pos: [212, 215, 222] ccc => cc, Pos: [214, 228] cc => I, Pos: [214, 228] cc => I, Pos: [217, 229, 237] ccc => cc, Pos: [220, 225] cc => I, Pos: [220, 225] cc => I, Pos: [222, 232, 236] ccc => cc, Pos: [228, 238] cc => I, Pos: [228, 238] cc => I, Pos: [247, 254] cc => I, Pos: [247, 254] cc => I, Pos: [254, 260] cc => I, Pos: [254, 260] cc => I, Pos: [255, 264] cc => I, Pos: [255, 264] cc => I, Pos: [264, 268] cc => I, Pos: [264, 268] cc => I]

--------End Timer [Generate Plans]:  0.10935497283935547

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] cc => I,
 Pos: [3, 9] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [14, 19, 26] ccc => cc,
 Pos: [22, 25] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [27, 38] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [46, 49, 53] ccc => cc,
 Pos: [55, 63, 66] ccc => cc,
 Pos: [77, 87] cc => I,
 Pos: [80, 88] cc => I,
 Pos: [94, 101] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [97, 108] cc => I,
 Pos: [111, 117, 120] ccc => cc,
 Pos: [116, 124, 128] ccc => cc,
 Pos: [118, 131] cc => I,
 Pos: [133, 138] cc => I,
 Pos: [129, 136] cc => I,
 Pos: [130, 137] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [140, 144, 152] ccc => cc,
 Pos: [141, 145] cc => I,
 Pos: [146, 151, 157] ccc => cc,
 Pos: [147, 150] cc => I,
 Pos: [158, 171] cc => I,
 Pos: [169, 174] cc => I,
 Pos: [164, 167] cc => I,
 Pos: [165, 170, 173] ccc => cc,
 Pos: [172, 178] cc => I,
 Pos: [179, 194] cc => I,
 Pos: [183, 196] cc => I,
 Pos: [185, 190] cc => I,
 Pos: [193, 208] cc => I,
 Pos: [195, 201] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [200, 206] cc => I,
 Pos: [212, 215, 222] ccc => cc,
 Pos: [228, 238] cc => I,
 Pos: [217, 229, 237] ccc => cc,
 Pos: [220, 225] cc => I,
 Pos: [254, 260] cc => I,
 Pos: [264, 268] cc => I]
Change: 44, Saving: 45

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 8] cc => I
Apply:  Pos: [3, 9] cc => I
Apply:  Pos: [13, 18] cc => I
Apply:  Pos: [14, 19, 26] ccc => cc
Apply:  Pos: [22, 25] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [27, 38] cc => I
Apply:  Pos: [33, 40] cc => I
Apply:  Pos: [46, 49, 53] ccc => cc
Apply:  Pos: [55, 63, 66] ccc => cc
Apply:  Pos: [77, 87] cc => I
Apply:  Pos: [80, 88] cc => I
Apply:  Pos: [94, 101] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [97, 108] cc => I
Apply:  Pos: [111, 117, 120] ccc => cc
Apply:  Pos: [116, 124, 128] ccc => cc
Apply:  Pos: [118, 131] cc => I
Apply:  Pos: [133, 138] cc => I
Apply:  Pos: [129, 136] cc => I
Apply:  Pos: [130, 137] cc => I
Apply:  Pos: [135, 142] cc => I
Apply:  Pos: [140, 144, 152] ccc => cc
Apply:  Pos: [141, 145] cc => I
Apply:  Pos: [146, 151, 157] ccc => cc
Apply:  Pos: [147, 150] cc => I
Apply:  Pos: [158, 171] cc => I
Apply:  Pos: [169, 174] cc => I
Apply:  Pos: [164, 167] cc => I
Apply:  Pos: [165, 170, 173] ccc => cc
Apply:  Pos: [172, 178] cc => I
Apply:  Pos: [179, 194] cc => I
Apply:  Pos: [183, 196] cc => I
Apply:  Pos: [185, 190] cc => I
Apply:  Pos: [193, 208] cc => I
Apply:  Pos: [195, 201] cc => I
Apply:  Pos: [197, 205] cc => I
Apply:  Pos: [200, 206] cc => I
Apply:  Pos: [212, 215, 222] ccc => cc
Apply:  Pos: [228, 238] cc => I
Apply:  Pos: [217, 229, 237] ccc => cc
Apply:  Pos: [220, 225] cc => I
Apply:  Pos: [254, 260] cc => I
Apply:  Pos: [264, 268] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [14, 10], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [13, 14], [15, 0], [4, 2], [5, 6], [17, 19], [14, 10], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [1, 8], [15, 13], [18, 2], [5, 6], [4, 2], [5, 11], [19, 12], [0, 18], [4, 18], [0, 2], [19, 5], [18, 2], [17, 12], [1, 8], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [5, 3], [13, 19], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [8, 17], [18, 7], [11, 6], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [11, 3], ----End Timer [Execute Mapping]:  5.405419588088989

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[65, 78]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[163, 169, 176]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[15, 24, 29]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[67, 69, 72]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[65, 78]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.5161845684051514

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [15, 24, 29] ccc => cc, Pos: [65, 78] cc => I, Pos: [65, 78] cc => I, Pos: [67, 69, 72] ccc => cc, Pos: [163, 169, 176] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [15, 24, 29] ccc => cc,
 Pos: [65, 78] cc => I,
 Pos: [67, 69, 72] ccc => cc,
 Pos: [163, 169, 176] ccc => cc]
Change: 4, Saving: 5

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [15, 24, 29] ccc => cc
Apply:  Pos: [65, 78] cc => I
Apply:  Pos: [67, 69, 72] ccc => cc
Apply:  Pos: [163, 169, 176] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [4, 18], [5, 6], [18, 2], [5, 11], [19, 12], [0, 2], [0, 18], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [13, 11], [12, 11], [4, 0], [15, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [5, 3], [13, 19], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 17], [8, 12], [18, 7], [11, 6], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 11], [8, 17], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [0, 18], [3, 6], [7, 10], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [11, 3], ----End Timer [Execute Mapping]:  3.5161845684051514

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[58, 65]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[58, 65]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.40674090385437

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [58, 65] cc => I, Pos: [58, 65] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [58, 65] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [58, 65] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [18, 2], [5, 11], [19, 12], [0, 18], [0, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [5, 3], [13, 19], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [8, 17], [18, 7], [11, 6], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 11], [8, 17], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [0, 18], [3, 6], [7, 10], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [11, 3], ----End Timer [Execute Mapping]:  3.40674090385437

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[65, 68, 69]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.360102415084839

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [65, 68, 69] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [65, 68, 69] ccc => cc]
Change: 1, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [65, 68, 69] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [0, 18], [5, 11], [19, 12], [18, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [13, 11], [12, 11], [4, 0], [15, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [5, 3], [13, 19], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 17], [8, 12], [18, 7], [11, 6], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 11], [8, 17], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [0, 18], [3, 6], [7, 10], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [11, 3], ----End Timer [Execute Mapping]:  3.360102415084839

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[68, 70]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[68, 70]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.32830810546875

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [68, 70] cc => I, Pos: [68, 70] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [68, 70] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [68, 70] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015624046325683594

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [0, 18], [5, 11], [19, 12], [19, 5], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [5, 3], [13, 19], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [8, 17], [18, 7], [11, 6], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 11], [8, 17], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [0, 18], [3, 6], [7, 10], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [11, 3], ----End Timer [Execute Mapping]:  3.3439321517944336

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [182] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 364

Reduced: 
 - size: 88 (32.59%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374833106994629

[4, 18], [1, 8], [19, 5], [17, 12], [2, 10], [11, 6], [16, 15], [13, 14], [4, 18], [17, 12], [3, 6], [8, 19], [14, 9], [18, 7], [0, 13], [8, 12], [9, 3], [5, 6], [18, 7], [15, 13], [19, 12], [14, 10], [3, 6], [4, 18], [19, 14], [3, 6], [15, 0], [8, 12], [18, 2], [19, 14], [16, 4], [11, 3], [1, 0], [18, 7], [3, 6], [19, 5], [2, 9], [13, 14], [8, 12], [15, 0], [18, 7], [4, 2], [5, 6], [17, 19], [14, 10], [15, 13], [18, 7], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 9], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [7, 10], [2, 9], [8, 17], [19, 14], [4, 0], [17, 12], [11, 3], [1, 8], [15, 13], [18, 2], [7, 10], [19, 14], [5, 6], [4, 2], [5, 11], [13, 14], [19, 12], [1, 8], [0, 18], [4, 18], [10, 9], [0, 2], [13, 14], [19, 5], [1, 8], [18, 2], [17, 12], [1, 8], [19, 14], [0, 13], [11, 6], [10, 9], [4, 2], [12, 11], [13, 5], [15, 0], [4, 0], [8, 12], [18, 2], [17, 19], [5, 11], [16, 15], [16, 4], [13, 5], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [17, 19], [14, 9], [11, 6], [16, 15], [5, 3], [4, 2], [13, 19], [7, 10], [14, 9], [11, 6], [4, 2], [11, 6], [19, 14], [15, 1], [7, 10], [2, 9], [8, 19], [15, 1], [0, 18], [11, 3], [10, 9], [5, 6], [11, 3], [18, 7], [19, 14], [16, 15], [17, 12], [2, 9], [8, 12], [0, 18], [16, 4], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [7, 10], [15, 13], [2, 9], [7, 10], [19, 5], [1, 0], [13, 14], [16, 4], [4, 2], [15, 13], [1, 0], [8, 17], [7, 10], [5, 6], [4, 2], [1, 13], [17, 12], [11, 6], [0, 18], [16, 15], [14, 10], [5, 3], [4, 18], [17, 19], [7, 10], [0, 2], [5, 3], [12, 11], [0, 18], [9, 3], [1, 13], [2, 10], [16, 15], [17, 12], [8, 19], [5, 11], [18, 7], [2, 10], [14, 5], [1, 8], [0, 13], [17, 12], [18, 7], [2, 14], [9, 3], [5, 11], [16, 4], [8, 12], [17, 19], [18, 7], [11, 6], [8, 19], [5, 3], [15, 1], [10, 9], [13, 14], [4, 18], [11, 3], [8, 17], [13, 5], [19, 14], [4, 18], [8, 19], [14, 10], [11, 6], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [15, 1], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [16, 15], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [0, 2], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[3, 9]
[13, 18]
[22, 25]
[24, 29]
[27, 38]
[33, 40]
[40, 46]
[77, 87]
[80, 88]
[84, 94]
[92, 99]
[94, 101]
[101, 104]
[97, 108]
[118, 131]
[126, 133]
[129, 136]
[130, 137]
[133, 138]
[137, 139]
[135, 142]
[141, 145]
[147, 150]
[164, 167]
[161, 169]
[158, 171]
[169, 174]
[167, 176]
[172, 178]
[185, 190]
[179, 194]
[183, 196]
[195, 201]
[197, 205]
[200, 206]
[193, 208]
[206, 213]
[220, 225]
[214, 228]
[228, 238]
[247, 254]
[254, 260]
[255, 264]
[264, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[63, 67, 78]
[111, 117, 120]
[116, 124, 128]
[146, 151, 157]
[165, 170, 173]
[222, 232, 236]
[217, 229, 237]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[25, 31, 34]
[46, 49, 53]
[140, 144, 152]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[14, 19, 26]
[55, 63, 66]
[212, 215, 222]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[3, 9]
[13, 18]
[22, 25]
[24, 29]
[27, 38]
[33, 40]
[40, 46]
[77, 87]
[80, 88]
[84, 94]
[92, 99]
[94, 101]
[101, 104]
[97, 108]
[118, 131]
[126, 133]
[129, 136]
[130, 137]
[133, 138]
[137, 139]
[135, 142]
[141, 145]
[147, 150]
[164, 167]
[161, 169]
[158, 171]
[169, 174]
[167, 176]
[172, 178]
[185, 190]
[179, 194]
[183, 196]
[195, 201]
[197, 205]
[200, 206]
[193, 208]
[206, 213]
[220, 225]
[214, 228]
[228, 238]
[247, 254]
[254, 260]
[255, 264]
[264, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.203141689300537

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] cc => I, Pos: [0, 8] cc => I, Pos: [3, 9] cc => I, Pos: [3, 9] cc => I, Pos: [13, 18] cc => I, Pos: [13, 18] cc => I, Pos: [14, 19, 26] ccc => cc, Pos: [22, 25] cc => I, Pos: [22, 25] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [25, 31, 34] ccc => cc, Pos: [27, 38] cc => I, Pos: [27, 38] cc => I, Pos: [33, 40] cc => I, Pos: [33, 40] cc => I, Pos: [40, 46] cc => I, Pos: [40, 46] cc => I, Pos: [46, 49, 53] ccc => cc, Pos: [55, 63, 66] ccc => cc, Pos: [63, 67, 78] ccc => cc, Pos: [77, 87] cc => I, Pos: [77, 87] cc => I, Pos: [80, 88] cc => I, Pos: [80, 88] cc => I, Pos: [84, 94] cc => I, Pos: [84, 94] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [97, 108] cc => I, Pos: [97, 108] cc => I, Pos: [101, 104] cc => I, Pos: [101, 104] cc => I, Pos: [111, 117, 120] ccc => cc, Pos: [116, 124, 128] ccc => cc, Pos: [118, 131] cc => I, Pos: [118, 131] cc => I, Pos: [126, 133] cc => I, Pos: [126, 133] cc => I, Pos: [129, 136] cc => I, Pos: [129, 136] cc => I, Pos: [130, 137] cc => I, Pos: [130, 137] cc => I, Pos: [133, 138] cc => I, Pos: [133, 138] cc => I, Pos: [135, 142] cc => I, Pos: [135, 142] cc => I, Pos: [137, 139] cc => I, Pos: [137, 139] cc => I, Pos: [140, 144, 152] ccc => cc, Pos: [141, 145] cc => I, Pos: [141, 145] cc => I, Pos: [146, 151, 157] ccc => cc, Pos: [147, 150] cc => I, Pos: [147, 150] cc => I, Pos: [158, 171] cc => I, Pos: [158, 171] cc => I, Pos: [161, 169] cc => I, Pos: [161, 169] cc => I, Pos: [164, 167] cc => I, Pos: [164, 167] cc => I, Pos: [165, 170, 173] ccc => cc, Pos: [167, 176] cc => I, Pos: [167, 176] cc => I, Pos: [169, 174] cc => I, Pos: [169, 174] cc => I, Pos: [172, 178] cc => I, Pos: [172, 178] cc => I, Pos: [179, 194] cc => I, Pos: [179, 194] cc => I, Pos: [183, 196] cc => I, Pos: [183, 196] cc => I, Pos: [185, 190] cc => I, Pos: [185, 190] cc => I, Pos: [193, 208] cc => I, Pos: [193, 208] cc => I, Pos: [195, 201] cc => I, Pos: [195, 201] cc => I, Pos: [197, 205] cc => I, Pos: [197, 205] cc => I, Pos: [200, 206] cc => I, Pos: [200, 206] cc => I, Pos: [206, 213] cc => I, Pos: [206, 213] cc => I, Pos: [212, 215, 222] ccc => cc, Pos: [214, 228] cc => I, Pos: [214, 228] cc => I, Pos: [217, 229, 237] ccc => cc, Pos: [220, 225] cc => I, Pos: [220, 225] cc => I, Pos: [222, 232, 236] ccc => cc, Pos: [228, 238] cc => I, Pos: [228, 238] cc => I, Pos: [247, 254] cc => I, Pos: [247, 254] cc => I, Pos: [254, 260] cc => I, Pos: [254, 260] cc => I, Pos: [255, 264] cc => I, Pos: [255, 264] cc => I, Pos: [264, 268] cc => I, Pos: [264, 268] cc => I]

--------End Timer [Generate Plans]:  0.12497830390930176

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] cc => I,
 Pos: [3, 9] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [14, 19, 26] ccc => cc,
 Pos: [22, 25] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [27, 38] cc => I,
 Pos: [40, 46] cc => I,
 Pos: [63, 67, 78] ccc => cc,
 Pos: [77, 87] cc => I,
 Pos: [80, 88] cc => I,
 Pos: [84, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [97, 108] cc => I,
 Pos: [101, 104] cc => I,
 Pos: [111, 117, 120] ccc => cc,
 Pos: [116, 124, 128] ccc => cc,
 Pos: [118, 131] cc => I,
 Pos: [133, 138] cc => I,
 Pos: [129, 136] cc => I,
 Pos: [137, 139] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [140, 144, 152] ccc => cc,
 Pos: [141, 145] cc => I,
 Pos: [146, 151, 157] ccc => cc,
 Pos: [147, 150] cc => I,
 Pos: [158, 171] cc => I,
 Pos: [161, 169] cc => I,
 Pos: [164, 167] cc => I,
 Pos: [165, 170, 173] ccc => cc,
 Pos: [172, 178] cc => I,
 Pos: [179, 194] cc => I,
 Pos: [183, 196] cc => I,
 Pos: [185, 190] cc => I,
 Pos: [193, 208] cc => I,
 Pos: [195, 201] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [206, 213] cc => I,
 Pos: [222, 232, 236] ccc => cc,
 Pos: [228, 238] cc => I,
 Pos: [217, 229, 237] ccc => cc,
 Pos: [220, 225] cc => I,
 Pos: [247, 254] cc => I,
 Pos: [255, 264] cc => I]
Change: 44, Saving: 44

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 8] cc => I
Apply:  Pos: [3, 9] cc => I
Apply:  Pos: [13, 18] cc => I
Apply:  Pos: [14, 19, 26] ccc => cc
Apply:  Pos: [22, 25] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [27, 38] cc => I
Apply:  Pos: [40, 46] cc => I
Apply:  Pos: [63, 67, 78] ccc => cc
Apply:  Pos: [77, 87] cc => I
Apply:  Pos: [80, 88] cc => I
Apply:  Pos: [84, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [97, 108] cc => I
Apply:  Pos: [101, 104] cc => I
Apply:  Pos: [111, 117, 120] ccc => cc
Apply:  Pos: [116, 124, 128] ccc => cc
Apply:  Pos: [118, 131] cc => I
Apply:  Pos: [133, 138] cc => I
Apply:  Pos: [129, 136] cc => I
Apply:  Pos: [137, 139] cc => I
Apply:  Pos: [135, 142] cc => I
Apply:  Pos: [140, 144, 152] ccc => cc
Apply:  Pos: [141, 145] cc => I
Apply:  Pos: [146, 151, 157] ccc => cc
Apply:  Pos: [147, 150] cc => I
Apply:  Pos: [158, 171] cc => I
Apply:  Pos: [161, 169] cc => I
Apply:  Pos: [164, 167] cc => I
Apply:  Pos: [165, 170, 173] ccc => cc
Apply:  Pos: [172, 178] cc => I
Apply:  Pos: [179, 194] cc => I
Apply:  Pos: [183, 196] cc => I
Apply:  Pos: [185, 190] cc => I
Apply:  Pos: [193, 208] cc => I
Apply:  Pos: [195, 201] cc => I
Apply:  Pos: [197, 205] cc => I
Apply:  Pos: [206, 213] cc => I
Apply:  Pos: [222, 232, 236] ccc => cc
Apply:  Pos: [228, 238] cc => I
Apply:  Pos: [217, 229, 237] ccc => cc
Apply:  Pos: [220, 225] cc => I
Apply:  Pos: [247, 254] cc => I
Apply:  Pos: [255, 264] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [14, 10], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [18, 7], [3, 6], [19, 5], [2, 9], [13, 14], [15, 0], [4, 2], [5, 6], [17, 19], [14, 10], [15, 13], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 3], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [18, 2], [5, 6], [4, 2], [5, 11], [19, 12], [0, 18], [4, 18], [0, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [11, 6], [5, 3], [13, 19], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [17, 19], [11, 6], [8, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [8, 12], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  5.328119993209839

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[143, 152]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[163, 168, 174]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[15, 25, 30]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[67, 69, 72]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[143, 152]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.468356132507324

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [15, 25, 30] ccc => cc, Pos: [67, 69, 72] ccc => cc, Pos: [143, 152] cc => I, Pos: [143, 152] cc => I, Pos: [163, 168, 174] ccc => cc]

--------End Timer [Generate Plans]:  0.015523433685302734

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [15, 25, 30] ccc => cc,
 Pos: [67, 69, 72] ccc => cc,
 Pos: [143, 152] cc => I,
 Pos: [163, 168, 174] ccc => cc]
Change: 4, Saving: 5

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [15, 25, 30] ccc => cc
Apply:  Pos: [67, 69, 72] ccc => cc
Apply:  Pos: [143, 152] cc => I
Apply:  Pos: [163, 168, 174] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [18, 7], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 3], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [4, 18], [5, 6], [18, 2], [5, 11], [19, 12], [0, 2], [0, 18], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [13, 11], [12, 11], [4, 0], [15, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [11, 6], [5, 3], [8, 19], [13, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [17, 19], [11, 6], [8, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 11], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.483879566192627

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[60, 66]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[60, 66]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3434641361236572

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [60, 66] cc => I, Pos: [60, 66] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [60, 66] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [60, 66] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [18, 7], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 3], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [18, 2], [5, 11], [19, 12], [0, 18], [0, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [11, 6], [5, 3], [13, 19], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [17, 19], [11, 6], [8, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 11], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.3434641361236572

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[66, 69, 70]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2968153953552246

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [66, 69, 70] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [66, 69, 70] ccc => cc]
Change: 1, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [66, 69, 70] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [18, 7], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 3], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [0, 18], [5, 11], [19, 12], [18, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [13, 11], [12, 11], [4, 0], [15, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [11, 6], [5, 3], [8, 19], [13, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [17, 19], [11, 6], [8, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 11], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.2968153953552246

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[69, 71]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[69, 71]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2814314365386963

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [69, 71] cc => I, Pos: [69, 71] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [69, 71] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [69, 71] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [18, 7], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 3], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [0, 18], [5, 11], [19, 12], [19, 5], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [11, 6], [5, 3], [13, 19], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [17, 19], [11, 6], [8, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 11], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.2814314365386963

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [181] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 362

Reduced: 
 - size: 89 (32.96%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10938167572021484

[4, 18], [1, 8], [19, 5], [17, 12], [2, 10], [11, 6], [16, 15], [13, 14], [4, 18], [17, 12], [3, 6], [8, 19], [14, 9], [18, 7], [0, 13], [8, 12], [9, 3], [5, 6], [18, 7], [15, 13], [19, 12], [14, 10], [3, 6], [4, 18], [19, 14], [3, 6], [15, 0], [8, 12], [18, 2], [19, 14], [16, 4], [11, 3], [1, 0], [18, 7], [3, 6], [19, 5], [2, 9], [13, 14], [8, 12], [15, 0], [18, 7], [4, 2], [5, 6], [17, 19], [14, 10], [15, 13], [18, 7], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 9], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [7, 10], [2, 9], [8, 17], [19, 14], [4, 0], [17, 12], [11, 3], [1, 8], [15, 13], [18, 2], [7, 10], [19, 14], [5, 6], [4, 2], [5, 11], [13, 14], [19, 12], [1, 8], [0, 18], [4, 18], [10, 9], [0, 2], [13, 14], [19, 5], [1, 8], [18, 2], [17, 12], [1, 8], [19, 14], [0, 13], [11, 6], [10, 9], [4, 2], [12, 11], [13, 5], [15, 0], [4, 0], [8, 12], [18, 2], [17, 19], [5, 11], [16, 15], [16, 4], [13, 5], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [17, 19], [14, 9], [11, 6], [16, 15], [5, 3], [4, 2], [13, 19], [7, 10], [14, 9], [11, 6], [4, 2], [11, 6], [19, 14], [15, 1], [7, 10], [2, 9], [8, 19], [15, 1], [0, 18], [11, 3], [10, 9], [5, 6], [11, 3], [18, 7], [19, 14], [16, 15], [17, 12], [2, 9], [8, 12], [0, 18], [16, 4], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [7, 10], [15, 13], [2, 9], [7, 10], [19, 5], [1, 0], [13, 14], [16, 4], [4, 2], [15, 13], [1, 0], [8, 17], [7, 10], [5, 6], [4, 2], [1, 13], [17, 12], [11, 6], [0, 18], [16, 15], [14, 10], [5, 3], [4, 18], [17, 19], [7, 10], [0, 2], [5, 3], [12, 11], [0, 18], [9, 3], [1, 13], [2, 10], [16, 15], [17, 12], [8, 19], [5, 11], [18, 7], [2, 10], [14, 5], [1, 8], [0, 13], [17, 12], [18, 7], [2, 14], [9, 3], [5, 11], [16, 4], [8, 12], [17, 19], [18, 7], [11, 6], [8, 19], [5, 3], [15, 1], [10, 9], [13, 14], [4, 18], [11, 3], [8, 17], [13, 5], [19, 14], [4, 18], [8, 19], [14, 10], [11, 6], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [15, 1], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [16, 15], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [0, 2], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[3, 9]
[13, 18]
[22, 25]
[24, 29]
[27, 38]
[33, 40]
[40, 46]
[77, 87]
[80, 88]
[84, 94]
[92, 99]
[94, 101]
[101, 104]
[97, 108]
[118, 131]
[126, 133]
[129, 136]
[130, 137]
[133, 138]
[137, 139]
[135, 142]
[141, 145]
[147, 150]
[164, 167]
[161, 169]
[158, 171]
[169, 174]
[167, 176]
[172, 178]
[185, 190]
[179, 194]
[183, 196]
[195, 201]
[197, 205]
[200, 206]
[193, 208]
[206, 213]
[220, 225]
[214, 228]
[228, 238]
[247, 254]
[254, 260]
[255, 264]
[264, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[63, 67, 78]
[111, 117, 120]
[116, 124, 128]
[146, 151, 157]
[165, 170, 173]
[222, 232, 236]
[217, 229, 237]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[25, 31, 34]
[46, 49, 53]
[140, 144, 152]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[14, 19, 26]
[55, 63, 66]
[212, 215, 222]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[3, 9]
[13, 18]
[22, 25]
[24, 29]
[27, 38]
[33, 40]
[40, 46]
[77, 87]
[80, 88]
[84, 94]
[92, 99]
[94, 101]
[101, 104]
[97, 108]
[118, 131]
[126, 133]
[129, 136]
[130, 137]
[133, 138]
[137, 139]
[135, 142]
[141, 145]
[147, 150]
[164, 167]
[161, 169]
[158, 171]
[169, 174]
[167, 176]
[172, 178]
[185, 190]
[179, 194]
[183, 196]
[195, 201]
[197, 205]
[200, 206]
[193, 208]
[206, 213]
[220, 225]
[214, 228]
[228, 238]
[247, 254]
[254, 260]
[255, 264]
[264, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.218796014785767

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] cc => I, Pos: [0, 8] cc => I, Pos: [3, 9] cc => I, Pos: [3, 9] cc => I, Pos: [13, 18] cc => I, Pos: [13, 18] cc => I, Pos: [14, 19, 26] ccc => cc, Pos: [22, 25] cc => I, Pos: [22, 25] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [25, 31, 34] ccc => cc, Pos: [27, 38] cc => I, Pos: [27, 38] cc => I, Pos: [33, 40] cc => I, Pos: [33, 40] cc => I, Pos: [40, 46] cc => I, Pos: [40, 46] cc => I, Pos: [46, 49, 53] ccc => cc, Pos: [55, 63, 66] ccc => cc, Pos: [63, 67, 78] ccc => cc, Pos: [77, 87] cc => I, Pos: [77, 87] cc => I, Pos: [80, 88] cc => I, Pos: [80, 88] cc => I, Pos: [84, 94] cc => I, Pos: [84, 94] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [97, 108] cc => I, Pos: [97, 108] cc => I, Pos: [101, 104] cc => I, Pos: [101, 104] cc => I, Pos: [111, 117, 120] ccc => cc, Pos: [116, 124, 128] ccc => cc, Pos: [118, 131] cc => I, Pos: [118, 131] cc => I, Pos: [126, 133] cc => I, Pos: [126, 133] cc => I, Pos: [129, 136] cc => I, Pos: [129, 136] cc => I, Pos: [130, 137] cc => I, Pos: [130, 137] cc => I, Pos: [133, 138] cc => I, Pos: [133, 138] cc => I, Pos: [135, 142] cc => I, Pos: [135, 142] cc => I, Pos: [137, 139] cc => I, Pos: [137, 139] cc => I, Pos: [140, 144, 152] ccc => cc, Pos: [141, 145] cc => I, Pos: [141, 145] cc => I, Pos: [146, 151, 157] ccc => cc, Pos: [147, 150] cc => I, Pos: [147, 150] cc => I, Pos: [158, 171] cc => I, Pos: [158, 171] cc => I, Pos: [161, 169] cc => I, Pos: [161, 169] cc => I, Pos: [164, 167] cc => I, Pos: [164, 167] cc => I, Pos: [165, 170, 173] ccc => cc, Pos: [167, 176] cc => I, Pos: [167, 176] cc => I, Pos: [169, 174] cc => I, Pos: [169, 174] cc => I, Pos: [172, 178] cc => I, Pos: [172, 178] cc => I, Pos: [179, 194] cc => I, Pos: [179, 194] cc => I, Pos: [183, 196] cc => I, Pos: [183, 196] cc => I, Pos: [185, 190] cc => I, Pos: [185, 190] cc => I, Pos: [193, 208] cc => I, Pos: [193, 208] cc => I, Pos: [195, 201] cc => I, Pos: [195, 201] cc => I, Pos: [197, 205] cc => I, Pos: [197, 205] cc => I, Pos: [200, 206] cc => I, Pos: [200, 206] cc => I, Pos: [206, 213] cc => I, Pos: [206, 213] cc => I, Pos: [212, 215, 222] ccc => cc, Pos: [214, 228] cc => I, Pos: [214, 228] cc => I, Pos: [217, 229, 237] ccc => cc, Pos: [220, 225] cc => I, Pos: [220, 225] cc => I, Pos: [222, 232, 236] ccc => cc, Pos: [228, 238] cc => I, Pos: [228, 238] cc => I, Pos: [247, 254] cc => I, Pos: [247, 254] cc => I, Pos: [254, 260] cc => I, Pos: [254, 260] cc => I, Pos: [255, 264] cc => I, Pos: [255, 264] cc => I, Pos: [264, 268] cc => I, Pos: [264, 268] cc => I]

--------End Timer [Generate Plans]:  0.10951662063598633

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] cc => I,
 Pos: [3, 9] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [14, 19, 26] ccc => cc,
 Pos: [22, 25] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [27, 38] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [46, 49, 53] ccc => cc,
 Pos: [63, 67, 78] ccc => cc,
 Pos: [77, 87] cc => I,
 Pos: [80, 88] cc => I,
 Pos: [94, 101] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [97, 108] cc => I,
 Pos: [111, 117, 120] ccc => cc,
 Pos: [116, 124, 128] ccc => cc,
 Pos: [118, 131] cc => I,
 Pos: [126, 133] cc => I,
 Pos: [129, 136] cc => I,
 Pos: [137, 139] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [140, 144, 152] ccc => cc,
 Pos: [141, 145] cc => I,
 Pos: [146, 151, 157] ccc => cc,
 Pos: [147, 150] cc => I,
 Pos: [158, 171] cc => I,
 Pos: [161, 169] cc => I,
 Pos: [167, 176] cc => I,
 Pos: [165, 170, 173] ccc => cc,
 Pos: [172, 178] cc => I,
 Pos: [179, 194] cc => I,
 Pos: [183, 196] cc => I,
 Pos: [185, 190] cc => I,
 Pos: [193, 208] cc => I,
 Pos: [195, 201] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [206, 213] cc => I,
 Pos: [222, 232, 236] ccc => cc,
 Pos: [214, 228] cc => I,
 Pos: [217, 229, 237] ccc => cc,
 Pos: [220, 225] cc => I,
 Pos: [247, 254] cc => I,
 Pos: [255, 264] cc => I]
Change: 44, Saving: 44

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 8] cc => I
Apply:  Pos: [3, 9] cc => I
Apply:  Pos: [13, 18] cc => I
Apply:  Pos: [14, 19, 26] ccc => cc
Apply:  Pos: [22, 25] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [27, 38] cc => I
Apply:  Pos: [33, 40] cc => I
Apply:  Pos: [46, 49, 53] ccc => cc
Apply:  Pos: [63, 67, 78] ccc => cc
Apply:  Pos: [77, 87] cc => I
Apply:  Pos: [80, 88] cc => I
Apply:  Pos: [94, 101] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [97, 108] cc => I
Apply:  Pos: [111, 117, 120] ccc => cc
Apply:  Pos: [116, 124, 128] ccc => cc
Apply:  Pos: [118, 131] cc => I
Apply:  Pos: [126, 133] cc => I
Apply:  Pos: [129, 136] cc => I
Apply:  Pos: [137, 139] cc => I
Apply:  Pos: [135, 142] cc => I
Apply:  Pos: [140, 144, 152] ccc => cc
Apply:  Pos: [141, 145] cc => I
Apply:  Pos: [146, 151, 157] ccc => cc
Apply:  Pos: [147, 150] cc => I
Apply:  Pos: [158, 171] cc => I
Apply:  Pos: [161, 169] cc => I
Apply:  Pos: [167, 176] cc => I
Apply:  Pos: [165, 170, 173] ccc => cc
Apply:  Pos: [172, 178] cc => I
Apply:  Pos: [179, 194] cc => I
Apply:  Pos: [183, 196] cc => I
Apply:  Pos: [185, 190] cc => I
Apply:  Pos: [193, 208] cc => I
Apply:  Pos: [195, 201] cc => I
Apply:  Pos: [197, 205] cc => I
Apply:  Pos: [206, 213] cc => I
Apply:  Pos: [222, 232, 236] ccc => cc
Apply:  Pos: [214, 228] cc => I
Apply:  Pos: [217, 229, 237] ccc => cc
Apply:  Pos: [220, 225] cc => I
Apply:  Pos: [247, 254] cc => I
Apply:  Pos: [255, 264] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [14, 10], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [13, 14], [15, 0], [4, 2], [5, 6], [17, 19], [14, 10], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 3], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [8, 17], [4, 0], [17, 12], [11, 3], [1, 8], [15, 13], [18, 2], [5, 6], [4, 2], [5, 11], [19, 12], [0, 18], [4, 18], [0, 2], [19, 5], [18, 2], [17, 12], [1, 8], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [11, 6], [5, 3], [13, 19], [4, 2], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [7, 10], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [17, 19], [8, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [8, 12], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  5.328312635421753

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[65, 78]
[144, 152]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[15, 24, 29]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[67, 69, 72]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[65, 78]
[144, 152]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4843008518218994

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [15, 24, 29] ccc => cc, Pos: [65, 78] cc => I, Pos: [65, 78] cc => I, Pos: [67, 69, 72] ccc => cc, Pos: [144, 152] cc => I, Pos: [144, 152] cc => I]

--------End Timer [Generate Plans]:  0.015628576278686523

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [15, 24, 29] ccc => cc,
 Pos: [65, 78] cc => I,
 Pos: [67, 69, 72] ccc => cc,
 Pos: [144, 152] cc => I]
Change: 4, Saving: 5

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [15, 24, 29] ccc => cc
Apply:  Pos: [65, 78] cc => I
Apply:  Pos: [67, 69, 72] ccc => cc
Apply:  Pos: [144, 152] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 3], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [4, 18], [5, 6], [18, 2], [5, 11], [19, 12], [0, 2], [0, 18], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [13, 11], [12, 11], [4, 0], [15, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [11, 6], [5, 3], [13, 19], [4, 2], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [7, 10], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 19], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.499929428100586

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[59, 65]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[59, 65]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3437838554382324

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [59, 65] cc => I, Pos: [59, 65] cc => I]

--------End Timer [Generate Plans]:  0.01562356948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [59, 65] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [59, 65] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 3], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [18, 2], [5, 11], [19, 12], [0, 18], [0, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [11, 6], [5, 3], [13, 19], [4, 2], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [7, 10], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [17, 19], [8, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.359407424926758

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[129, 133, 138]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[65, 68, 69]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2962582111358643

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [65, 68, 69] ccc => cc, Pos: [129, 133, 138] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [65, 68, 69] ccc => cc, Pos: [129, 133, 138] ccc => cc]
Change: 2, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [65, 68, 69] ccc => cc
Apply:  Pos: [129, 133, 138] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 3], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [0, 18], [5, 11], [19, 12], [18, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [13, 11], [12, 11], [4, 0], [15, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [11, 6], [5, 3], [13, 19], [4, 2], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [7, 10], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [1, 8], [5, 11], [18, 7], [14, 5], [8, 19], [0, 13], [2, 14], [5, 11], [16, 4], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.2962582111358643

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[68, 70]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[68, 70]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.250046730041504

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [68, 70] cc => I, Pos: [68, 70] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [68, 70] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [68, 70] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 3], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [0, 18], [5, 11], [19, 12], [19, 5], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [11, 6], [5, 3], [13, 19], [4, 2], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [7, 10], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [1, 8], [5, 11], [18, 7], [14, 5], [8, 19], [0, 13], [2, 14], [5, 11], [16, 4], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.250046730041504

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 360

Reduced: 
 - size: 90 (33.33%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10935354232788086

[4, 18], [1, 8], [19, 5], [17, 12], [2, 10], [11, 6], [16, 15], [13, 14], [4, 18], [17, 12], [3, 6], [8, 19], [14, 9], [18, 7], [0, 13], [8, 12], [9, 3], [5, 6], [18, 7], [15, 13], [19, 12], [14, 10], [3, 6], [4, 18], [19, 14], [3, 6], [15, 0], [8, 12], [18, 2], [19, 14], [16, 4], [11, 3], [1, 0], [18, 7], [3, 6], [19, 5], [2, 9], [13, 14], [8, 12], [15, 0], [18, 7], [4, 2], [5, 6], [17, 19], [14, 10], [15, 13], [18, 7], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 9], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [7, 10], [2, 9], [8, 17], [19, 14], [4, 0], [17, 12], [11, 3], [1, 8], [15, 13], [18, 2], [7, 10], [19, 14], [5, 6], [4, 2], [5, 11], [13, 14], [19, 12], [1, 8], [0, 18], [4, 18], [10, 9], [0, 2], [13, 14], [19, 5], [1, 8], [18, 2], [17, 12], [1, 8], [19, 14], [0, 13], [11, 6], [10, 9], [4, 2], [12, 11], [13, 5], [15, 0], [4, 0], [8, 12], [18, 2], [17, 19], [5, 11], [16, 15], [16, 4], [13, 5], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [17, 19], [14, 9], [11, 6], [16, 15], [5, 3], [4, 2], [13, 19], [7, 10], [14, 9], [11, 6], [4, 2], [11, 6], [19, 14], [15, 1], [7, 10], [2, 9], [8, 19], [15, 1], [0, 18], [11, 3], [10, 9], [5, 6], [11, 3], [18, 7], [19, 14], [16, 15], [17, 12], [2, 9], [8, 12], [0, 18], [16, 4], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [7, 10], [15, 13], [2, 9], [7, 10], [19, 5], [1, 0], [13, 14], [16, 4], [4, 2], [15, 13], [1, 0], [8, 17], [7, 10], [5, 6], [4, 2], [1, 13], [17, 12], [11, 6], [0, 18], [16, 15], [14, 10], [5, 3], [4, 18], [17, 19], [7, 10], [0, 2], [5, 3], [12, 11], [0, 18], [9, 3], [1, 13], [2, 10], [16, 15], [17, 12], [8, 19], [5, 11], [18, 7], [2, 10], [14, 5], [1, 8], [0, 13], [17, 12], [18, 7], [2, 14], [9, 3], [5, 11], [16, 4], [8, 12], [17, 19], [18, 7], [11, 6], [8, 19], [5, 3], [15, 1], [10, 9], [13, 14], [4, 18], [11, 3], [8, 17], [13, 5], [19, 14], [4, 18], [8, 19], [14, 10], [11, 6], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [15, 1], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [16, 15], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [0, 2], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[3, 9]
[13, 18]
[22, 25]
[24, 29]
[27, 38]
[33, 40]
[40, 46]
[77, 87]
[80, 88]
[84, 94]
[92, 99]
[94, 101]
[101, 104]
[97, 108]
[118, 131]
[126, 133]
[129, 136]
[130, 137]
[133, 138]
[137, 139]
[135, 142]
[141, 145]
[147, 150]
[164, 167]
[161, 169]
[158, 171]
[169, 174]
[167, 176]
[172, 178]
[185, 190]
[179, 194]
[183, 196]
[195, 201]
[197, 205]
[200, 206]
[193, 208]
[206, 213]
[220, 225]
[214, 228]
[228, 238]
[247, 254]
[254, 260]
[255, 264]
[264, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[63, 67, 78]
[111, 117, 120]
[116, 124, 128]
[146, 151, 157]
[165, 170, 173]
[222, 232, 236]
[217, 229, 237]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[25, 31, 34]
[46, 49, 53]
[140, 144, 152]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[14, 19, 26]
[55, 63, 66]
[212, 215, 222]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[3, 9]
[13, 18]
[22, 25]
[24, 29]
[27, 38]
[33, 40]
[40, 46]
[77, 87]
[80, 88]
[84, 94]
[92, 99]
[94, 101]
[101, 104]
[97, 108]
[118, 131]
[126, 133]
[129, 136]
[130, 137]
[133, 138]
[137, 139]
[135, 142]
[141, 145]
[147, 150]
[164, 167]
[161, 169]
[158, 171]
[169, 174]
[167, 176]
[172, 178]
[185, 190]
[179, 194]
[183, 196]
[195, 201]
[197, 205]
[200, 206]
[193, 208]
[206, 213]
[220, 225]
[214, 228]
[228, 238]
[247, 254]
[254, 260]
[255, 264]
[264, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.281206846237183

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] cc => I, Pos: [0, 8] cc => I, Pos: [3, 9] cc => I, Pos: [3, 9] cc => I, Pos: [13, 18] cc => I, Pos: [13, 18] cc => I, Pos: [14, 19, 26] ccc => cc, Pos: [22, 25] cc => I, Pos: [22, 25] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [25, 31, 34] ccc => cc, Pos: [27, 38] cc => I, Pos: [27, 38] cc => I, Pos: [33, 40] cc => I, Pos: [33, 40] cc => I, Pos: [40, 46] cc => I, Pos: [40, 46] cc => I, Pos: [46, 49, 53] ccc => cc, Pos: [55, 63, 66] ccc => cc, Pos: [63, 67, 78] ccc => cc, Pos: [77, 87] cc => I, Pos: [77, 87] cc => I, Pos: [80, 88] cc => I, Pos: [80, 88] cc => I, Pos: [84, 94] cc => I, Pos: [84, 94] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [97, 108] cc => I, Pos: [97, 108] cc => I, Pos: [101, 104] cc => I, Pos: [101, 104] cc => I, Pos: [111, 117, 120] ccc => cc, Pos: [116, 124, 128] ccc => cc, Pos: [118, 131] cc => I, Pos: [118, 131] cc => I, Pos: [126, 133] cc => I, Pos: [126, 133] cc => I, Pos: [129, 136] cc => I, Pos: [129, 136] cc => I, Pos: [130, 137] cc => I, Pos: [130, 137] cc => I, Pos: [133, 138] cc => I, Pos: [133, 138] cc => I, Pos: [135, 142] cc => I, Pos: [135, 142] cc => I, Pos: [137, 139] cc => I, Pos: [137, 139] cc => I, Pos: [140, 144, 152] ccc => cc, Pos: [141, 145] cc => I, Pos: [141, 145] cc => I, Pos: [146, 151, 157] ccc => cc, Pos: [147, 150] cc => I, Pos: [147, 150] cc => I, Pos: [158, 171] cc => I, Pos: [158, 171] cc => I, Pos: [161, 169] cc => I, Pos: [161, 169] cc => I, Pos: [164, 167] cc => I, Pos: [164, 167] cc => I, Pos: [165, 170, 173] ccc => cc, Pos: [167, 176] cc => I, Pos: [167, 176] cc => I, Pos: [169, 174] cc => I, Pos: [169, 174] cc => I, Pos: [172, 178] cc => I, Pos: [172, 178] cc => I, Pos: [179, 194] cc => I, Pos: [179, 194] cc => I, Pos: [183, 196] cc => I, Pos: [183, 196] cc => I, Pos: [185, 190] cc => I, Pos: [185, 190] cc => I, Pos: [193, 208] cc => I, Pos: [193, 208] cc => I, Pos: [195, 201] cc => I, Pos: [195, 201] cc => I, Pos: [197, 205] cc => I, Pos: [197, 205] cc => I, Pos: [200, 206] cc => I, Pos: [200, 206] cc => I, Pos: [206, 213] cc => I, Pos: [206, 213] cc => I, Pos: [212, 215, 222] ccc => cc, Pos: [214, 228] cc => I, Pos: [214, 228] cc => I, Pos: [217, 229, 237] ccc => cc, Pos: [220, 225] cc => I, Pos: [220, 225] cc => I, Pos: [222, 232, 236] ccc => cc, Pos: [228, 238] cc => I, Pos: [228, 238] cc => I, Pos: [247, 254] cc => I, Pos: [247, 254] cc => I, Pos: [254, 260] cc => I, Pos: [254, 260] cc => I, Pos: [255, 264] cc => I, Pos: [255, 264] cc => I, Pos: [264, 268] cc => I, Pos: [264, 268] cc => I]

--------End Timer [Generate Plans]:  0.10936832427978516

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] cc => I,
 Pos: [3, 9] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [14, 19, 26] ccc => cc,
 Pos: [25, 31, 34] ccc => cc,
 Pos: [24, 29] cc => I,
 Pos: [27, 38] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [46, 49, 53] ccc => cc,
 Pos: [55, 63, 66] ccc => cc,
 Pos: [77, 87] cc => I,
 Pos: [80, 88] cc => I,
 Pos: [94, 101] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [97, 108] cc => I,
 Pos: [111, 117, 120] ccc => cc,
 Pos: [116, 124, 128] ccc => cc,
 Pos: [118, 131] cc => I,
 Pos: [126, 133] cc => I,
 Pos: [129, 136] cc => I,
 Pos: [130, 137] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [140, 144, 152] ccc => cc,
 Pos: [141, 145] cc => I,
 Pos: [146, 151, 157] ccc => cc,
 Pos: [147, 150] cc => I,
 Pos: [158, 171] cc => I,
 Pos: [169, 174] cc => I,
 Pos: [164, 167] cc => I,
 Pos: [165, 170, 173] ccc => cc,
 Pos: [172, 178] cc => I,
 Pos: [179, 194] cc => I,
 Pos: [183, 196] cc => I,
 Pos: [185, 190] cc => I,
 Pos: [193, 208] cc => I,
 Pos: [195, 201] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [206, 213] cc => I,
 Pos: [212, 215, 222] ccc => cc,
 Pos: [214, 228] cc => I,
 Pos: [217, 229, 237] ccc => cc,
 Pos: [220, 225] cc => I,
 Pos: [247, 254] cc => I,
 Pos: [264, 268] cc => I]
Change: 44, Saving: 45

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 8] cc => I
Apply:  Pos: [3, 9] cc => I
Apply:  Pos: [13, 18] cc => I
Apply:  Pos: [14, 19, 26] ccc => cc
Apply:  Pos: [25, 31, 34] ccc => cc
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [27, 38] cc => I
Apply:  Pos: [33, 40] cc => I
Apply:  Pos: [46, 49, 53] ccc => cc
Apply:  Pos: [55, 63, 66] ccc => cc
Apply:  Pos: [77, 87] cc => I
Apply:  Pos: [80, 88] cc => I
Apply:  Pos: [94, 101] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [97, 108] cc => I
Apply:  Pos: [111, 117, 120] ccc => cc
Apply:  Pos: [116, 124, 128] ccc => cc
Apply:  Pos: [118, 131] cc => I
Apply:  Pos: [126, 133] cc => I
Apply:  Pos: [129, 136] cc => I
Apply:  Pos: [130, 137] cc => I
Apply:  Pos: [135, 142] cc => I
Apply:  Pos: [140, 144, 152] ccc => cc
Apply:  Pos: [141, 145] cc => I
Apply:  Pos: [146, 151, 157] ccc => cc
Apply:  Pos: [147, 150] cc => I
Apply:  Pos: [158, 171] cc => I
Apply:  Pos: [169, 174] cc => I
Apply:  Pos: [164, 167] cc => I
Apply:  Pos: [165, 170, 173] ccc => cc
Apply:  Pos: [172, 178] cc => I
Apply:  Pos: [179, 194] cc => I
Apply:  Pos: [183, 196] cc => I
Apply:  Pos: [185, 190] cc => I
Apply:  Pos: [193, 208] cc => I
Apply:  Pos: [195, 201] cc => I
Apply:  Pos: [197, 205] cc => I
Apply:  Pos: [206, 213] cc => I
Apply:  Pos: [212, 215, 222] ccc => cc
Apply:  Pos: [214, 228] cc => I
Apply:  Pos: [217, 229, 237] ccc => cc
Apply:  Pos: [220, 225] cc => I
Apply:  Pos: [247, 254] cc => I
Apply:  Pos: [264, 268] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [14, 10], [3, 6], [4, 18], [11, 3], [18, 2], [16, 4], [3, 6], [1, 0], [19, 5], [2, 9], [13, 14], [15, 0], [4, 2], [5, 6], [17, 19], [14, 10], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [1, 8], [15, 13], [18, 2], [5, 6], [4, 2], [5, 11], [19, 12], [0, 18], [4, 18], [0, 2], [19, 5], [18, 2], [17, 12], [1, 8], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [5, 3], [13, 19], [4, 2], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [8, 17], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [11, 3], ----End Timer [Execute Mapping]:  5.390575170516968

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[66, 79]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[16, 18, 21]
[15, 25, 30]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[68, 70, 73]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[66, 79]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.5468976497650146

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [15, 25, 30] ccc => cc, Pos: [16, 18, 21] ccc => cc, Pos: [66, 79] cc => I, Pos: [66, 79] cc => I, Pos: [68, 70, 73] ccc => cc]

--------End Timer [Generate Plans]:  0.015624761581420898

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [15, 25, 30] ccc => cc,
 Pos: [16, 18, 21] ccc => cc,
 Pos: [66, 79] cc => I,
 Pos: [68, 70, 73] ccc => cc]
Change: 4, Saving: 5

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [15, 25, 30] ccc => cc
Apply:  Pos: [16, 18, 21] ccc => cc
Apply:  Pos: [66, 79] cc => I
Apply:  Pos: [68, 70, 73] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [11, 3], [4, 18], [3, 6], [18, 2], [16, 4], [1, 0], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [4, 18], [5, 6], [18, 2], [5, 11], [19, 12], [0, 2], [0, 18], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [13, 11], [12, 11], [4, 0], [15, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [5, 3], [13, 19], [4, 2], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 17], [8, 12], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [11, 3], ----End Timer [Execute Mapping]:  3.5625224113464355

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[58, 65]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[58, 65]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3906755447387695

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [58, 65] cc => I, Pos: [58, 65] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [58, 65] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [58, 65] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [11, 3], [4, 18], [3, 6], [18, 2], [16, 4], [1, 0], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [18, 2], [5, 11], [19, 12], [0, 18], [0, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [5, 3], [13, 19], [4, 2], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [8, 17], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [11, 3], ----End Timer [Execute Mapping]:  3.3906755447387695

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[65, 68, 69]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.343709945678711

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [65, 68, 69] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [65, 68, 69] ccc => cc]
Change: 1, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [65, 68, 69] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [11, 3], [4, 18], [3, 6], [18, 2], [16, 4], [1, 0], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [0, 18], [5, 11], [19, 12], [18, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [13, 11], [12, 11], [4, 0], [15, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [5, 3], [13, 19], [4, 2], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 17], [8, 12], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [11, 3], ----End Timer [Execute Mapping]:  3.343709945678711

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[68, 70]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[68, 70]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3128504753112793

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [68, 70] cc => I, Pos: [68, 70] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [68, 70] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [68, 70] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [11, 3], [4, 18], [3, 6], [18, 2], [16, 4], [1, 0], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [0, 18], [5, 11], [19, 12], [19, 5], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [5, 3], [13, 19], [4, 2], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [18, 7], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [8, 17], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [11, 3], ----End Timer [Execute Mapping]:  3.3128504753112793

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [183] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 366

Reduced: 
 - size: 87 (32.22%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936784744262695

[4, 18], [1, 8], [19, 5], [17, 12], [2, 10], [11, 6], [16, 15], [13, 14], [4, 18], [17, 12], [3, 6], [8, 19], [14, 9], [18, 7], [0, 13], [8, 12], [9, 3], [5, 6], [18, 7], [15, 13], [19, 12], [14, 10], [3, 6], [4, 18], [19, 14], [3, 6], [15, 0], [8, 12], [18, 2], [19, 14], [16, 4], [11, 3], [1, 0], [18, 7], [3, 6], [19, 5], [2, 9], [13, 14], [8, 12], [15, 0], [18, 7], [4, 2], [5, 6], [17, 19], [14, 10], [15, 13], [18, 7], [2, 14], [17, 12], [0, 18], [19, 12], [14, 5], [3, 6], [18, 7], [17, 19], [10, 9], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [2, 9], [16, 4], [15, 13], [2, 10], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [7, 10], [2, 9], [8, 17], [19, 14], [4, 0], [17, 12], [11, 3], [1, 8], [15, 13], [18, 2], [7, 10], [19, 14], [5, 6], [4, 2], [5, 11], [13, 14], [19, 12], [1, 8], [0, 18], [4, 18], [10, 9], [0, 2], [13, 14], [19, 5], [1, 8], [18, 2], [17, 12], [1, 8], [19, 14], [0, 13], [11, 6], [10, 9], [4, 2], [12, 11], [13, 5], [15, 0], [4, 0], [8, 12], [18, 2], [17, 19], [5, 11], [16, 15], [16, 4], [13, 5], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [4, 2], [0, 13], [17, 19], [14, 9], [11, 6], [16, 15], [5, 3], [4, 2], [13, 19], [7, 10], [14, 9], [11, 6], [4, 2], [11, 6], [19, 14], [15, 1], [7, 10], [2, 9], [8, 19], [15, 1], [0, 18], [11, 3], [10, 9], [5, 6], [11, 3], [18, 7], [19, 14], [16, 15], [17, 12], [2, 9], [8, 12], [0, 18], [16, 4], [13, 5], [14, 9], [1, 0], [19, 12], [11, 6], [7, 10], [15, 13], [2, 9], [7, 10], [19, 5], [1, 0], [13, 14], [16, 4], [4, 2], [15, 13], [1, 0], [8, 17], [7, 10], [5, 6], [4, 2], [1, 13], [17, 12], [11, 6], [0, 18], [16, 15], [14, 10], [5, 3], [4, 18], [17, 19], [7, 10], [0, 2], [5, 3], [12, 11], [0, 18], [9, 3], [1, 13], [2, 10], [16, 15], [17, 12], [8, 19], [5, 11], [18, 7], [2, 10], [14, 5], [1, 8], [0, 13], [17, 12], [18, 7], [2, 14], [9, 3], [5, 11], [16, 4], [8, 12], [17, 19], [18, 7], [11, 6], [8, 19], [5, 3], [15, 1], [10, 9], [13, 14], [4, 18], [11, 3], [8, 17], [13, 5], [19, 14], [4, 18], [8, 19], [14, 10], [11, 6], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [15, 1], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [16, 15], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [16, 15], [0, 2], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [0, 2], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[3, 9]
[13, 18]
[22, 25]
[24, 29]
[27, 38]
[33, 40]
[40, 46]
[77, 87]
[80, 88]
[84, 94]
[92, 99]
[94, 101]
[101, 104]
[97, 108]
[118, 131]
[126, 133]
[129, 136]
[130, 137]
[133, 138]
[137, 139]
[135, 142]
[141, 145]
[147, 150]
[164, 167]
[161, 169]
[158, 171]
[169, 174]
[167, 176]
[172, 178]
[185, 190]
[179, 194]
[183, 196]
[195, 201]
[197, 205]
[200, 206]
[193, 208]
[206, 213]
[220, 225]
[214, 228]
[228, 238]
[247, 254]
[254, 260]
[255, 264]
[264, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[63, 67, 78]
[111, 117, 120]
[116, 124, 128]
[146, 151, 157]
[165, 170, 173]
[222, 232, 236]
[217, 229, 237]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[25, 31, 34]
[46, 49, 53]
[140, 144, 152]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[14, 19, 26]
[55, 63, 66]
[212, 215, 222]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[3, 9]
[13, 18]
[22, 25]
[24, 29]
[27, 38]
[33, 40]
[40, 46]
[77, 87]
[80, 88]
[84, 94]
[92, 99]
[94, 101]
[101, 104]
[97, 108]
[118, 131]
[126, 133]
[129, 136]
[130, 137]
[133, 138]
[137, 139]
[135, 142]
[141, 145]
[147, 150]
[164, 167]
[161, 169]
[158, 171]
[169, 174]
[167, 176]
[172, 178]
[185, 190]
[179, 194]
[183, 196]
[195, 201]
[197, 205]
[200, 206]
[193, 208]
[206, 213]
[220, 225]
[214, 228]
[228, 238]
[247, 254]
[254, 260]
[255, 264]
[264, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.171916246414185

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] cc => I, Pos: [0, 8] cc => I, Pos: [3, 9] cc => I, Pos: [3, 9] cc => I, Pos: [13, 18] cc => I, Pos: [13, 18] cc => I, Pos: [14, 19, 26] ccc => cc, Pos: [22, 25] cc => I, Pos: [22, 25] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [25, 31, 34] ccc => cc, Pos: [27, 38] cc => I, Pos: [27, 38] cc => I, Pos: [33, 40] cc => I, Pos: [33, 40] cc => I, Pos: [40, 46] cc => I, Pos: [40, 46] cc => I, Pos: [46, 49, 53] ccc => cc, Pos: [55, 63, 66] ccc => cc, Pos: [63, 67, 78] ccc => cc, Pos: [77, 87] cc => I, Pos: [77, 87] cc => I, Pos: [80, 88] cc => I, Pos: [80, 88] cc => I, Pos: [84, 94] cc => I, Pos: [84, 94] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [97, 108] cc => I, Pos: [97, 108] cc => I, Pos: [101, 104] cc => I, Pos: [101, 104] cc => I, Pos: [111, 117, 120] ccc => cc, Pos: [116, 124, 128] ccc => cc, Pos: [118, 131] cc => I, Pos: [118, 131] cc => I, Pos: [126, 133] cc => I, Pos: [126, 133] cc => I, Pos: [129, 136] cc => I, Pos: [129, 136] cc => I, Pos: [130, 137] cc => I, Pos: [130, 137] cc => I, Pos: [133, 138] cc => I, Pos: [133, 138] cc => I, Pos: [135, 142] cc => I, Pos: [135, 142] cc => I, Pos: [137, 139] cc => I, Pos: [137, 139] cc => I, Pos: [140, 144, 152] ccc => cc, Pos: [141, 145] cc => I, Pos: [141, 145] cc => I, Pos: [146, 151, 157] ccc => cc, Pos: [147, 150] cc => I, Pos: [147, 150] cc => I, Pos: [158, 171] cc => I, Pos: [158, 171] cc => I, Pos: [161, 169] cc => I, Pos: [161, 169] cc => I, Pos: [164, 167] cc => I, Pos: [164, 167] cc => I, Pos: [165, 170, 173] ccc => cc, Pos: [167, 176] cc => I, Pos: [167, 176] cc => I, Pos: [169, 174] cc => I, Pos: [169, 174] cc => I, Pos: [172, 178] cc => I, Pos: [172, 178] cc => I, Pos: [179, 194] cc => I, Pos: [179, 194] cc => I, Pos: [183, 196] cc => I, Pos: [183, 196] cc => I, Pos: [185, 190] cc => I, Pos: [185, 190] cc => I, Pos: [193, 208] cc => I, Pos: [193, 208] cc => I, Pos: [195, 201] cc => I, Pos: [195, 201] cc => I, Pos: [197, 205] cc => I, Pos: [197, 205] cc => I, Pos: [200, 206] cc => I, Pos: [200, 206] cc => I, Pos: [206, 213] cc => I, Pos: [206, 213] cc => I, Pos: [212, 215, 222] ccc => cc, Pos: [214, 228] cc => I, Pos: [214, 228] cc => I, Pos: [217, 229, 237] ccc => cc, Pos: [220, 225] cc => I, Pos: [220, 225] cc => I, Pos: [222, 232, 236] ccc => cc, Pos: [228, 238] cc => I, Pos: [228, 238] cc => I, Pos: [247, 254] cc => I, Pos: [247, 254] cc => I, Pos: [254, 260] cc => I, Pos: [254, 260] cc => I, Pos: [255, 264] cc => I, Pos: [255, 264] cc => I, Pos: [264, 268] cc => I, Pos: [264, 268] cc => I]

Plan: 1
[Pos: [0, 8] cc => I,
 Pos: [3, 9] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [14, 19, 26] ccc => cc,
 Pos: [22, 25] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [27, 38] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [46, 49, 53] ccc => cc,
 Pos: [55, 63, 66] ccc => cc,
 Pos: [77, 87] cc => I,
 Pos: [80, 88] cc => I,
 Pos: [84, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [97, 108] cc => I,
 Pos: [101, 104] cc => I,
 Pos: [111, 117, 120] ccc => cc,
 Pos: [116, 124, 128] ccc => cc,
 Pos: [118, 131] cc => I,
 Pos: [126, 133] cc => I,
 Pos: [129, 136] cc => I,
 Pos: [130, 137] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [140, 144, 152] ccc => cc,
 Pos: [141, 145] cc => I,
 Pos: [146, 151, 157] ccc => cc,
 Pos: [147, 150] cc => I,
 Pos: [158, 171] cc => I,
 Pos: [161, 169] cc => I,
 Pos: [164, 167] cc => I,
 Pos: [165, 170, 173] ccc => cc,
 Pos: [172, 178] cc => I,
 Pos: [179, 194] cc => I,
 Pos: [183, 196] cc => I,
 Pos: [185, 190] cc => I,
 Pos: [193, 208] cc => I,
 Pos: [195, 201] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [200, 206] cc => I,
 Pos: [212, 215, 222] ccc => cc,
 Pos: [214, 228] cc => I,
 Pos: [217, 229, 237] ccc => cc,
 Pos: [220, 225] cc => I,
 Pos: [247, 254] cc => I,
 Pos: [255, 264] cc => I]
Change: 45, Saving: 46

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.12499141693115234

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] cc => I,
 Pos: [3, 9] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [14, 19, 26] ccc => cc,
 Pos: [22, 25] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [27, 38] cc => I,
 Pos: [33, 40] cc => I,
 Pos: [46, 49, 53] ccc => cc,
 Pos: [55, 63, 66] ccc => cc,
 Pos: [77, 87] cc => I,
 Pos: [80, 88] cc => I,
 Pos: [84, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [97, 108] cc => I,
 Pos: [101, 104] cc => I,
 Pos: [111, 117, 120] ccc => cc,
 Pos: [116, 124, 128] ccc => cc,
 Pos: [118, 131] cc => I,
 Pos: [126, 133] cc => I,
 Pos: [129, 136] cc => I,
 Pos: [130, 137] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [140, 144, 152] ccc => cc,
 Pos: [141, 145] cc => I,
 Pos: [146, 151, 157] ccc => cc,
 Pos: [147, 150] cc => I,
 Pos: [158, 171] cc => I,
 Pos: [161, 169] cc => I,
 Pos: [164, 167] cc => I,
 Pos: [165, 170, 173] ccc => cc,
 Pos: [172, 178] cc => I,
 Pos: [179, 194] cc => I,
 Pos: [183, 196] cc => I,
 Pos: [185, 190] cc => I,
 Pos: [193, 208] cc => I,
 Pos: [195, 201] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [200, 206] cc => I,
 Pos: [212, 215, 222] ccc => cc,
 Pos: [214, 228] cc => I,
 Pos: [217, 229, 237] ccc => cc,
 Pos: [220, 225] cc => I,
 Pos: [247, 254] cc => I,
 Pos: [255, 264] cc => I]
Change: 45, Saving: 46

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 8] cc => I
Apply:  Pos: [3, 9] cc => I
Apply:  Pos: [13, 18] cc => I
Apply:  Pos: [14, 19, 26] ccc => cc
Apply:  Pos: [22, 25] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [27, 38] cc => I
Apply:  Pos: [33, 40] cc => I
Apply:  Pos: [46, 49, 53] ccc => cc
Apply:  Pos: [55, 63, 66] ccc => cc
Apply:  Pos: [77, 87] cc => I
Apply:  Pos: [80, 88] cc => I
Apply:  Pos: [84, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [97, 108] cc => I
Apply:  Pos: [101, 104] cc => I
Apply:  Pos: [111, 117, 120] ccc => cc
Apply:  Pos: [116, 124, 128] ccc => cc
Apply:  Pos: [118, 131] cc => I
Apply:  Pos: [126, 133] cc => I
Apply:  Pos: [129, 136] cc => I
Apply:  Pos: [130, 137] cc => I
Apply:  Pos: [135, 142] cc => I
Apply:  Pos: [140, 144, 152] ccc => cc
Apply:  Pos: [141, 145] cc => I
Apply:  Pos: [146, 151, 157] ccc => cc
Apply:  Pos: [147, 150] cc => I
Apply:  Pos: [158, 171] cc => I
Apply:  Pos: [161, 169] cc => I
Apply:  Pos: [164, 167] cc => I
Apply:  Pos: [165, 170, 173] ccc => cc
Apply:  Pos: [172, 178] cc => I
Apply:  Pos: [179, 194] cc => I
Apply:  Pos: [183, 196] cc => I
Apply:  Pos: [185, 190] cc => I
Apply:  Pos: [193, 208] cc => I
Apply:  Pos: [195, 201] cc => I
Apply:  Pos: [197, 205] cc => I
Apply:  Pos: [200, 206] cc => I
Apply:  Pos: [212, 215, 222] ccc => cc
Apply:  Pos: [214, 228] cc => I
Apply:  Pos: [217, 229, 237] ccc => cc
Apply:  Pos: [220, 225] cc => I
Apply:  Pos: [247, 254] cc => I
Apply:  Pos: [255, 264] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [14, 10], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [13, 14], [15, 0], [4, 2], [5, 6], [17, 19], [14, 10], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [18, 2], [5, 6], [4, 2], [5, 11], [19, 12], [0, 18], [4, 18], [0, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [5, 3], [13, 19], [4, 2], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [8, 17], [18, 7], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  5.296907663345337

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[15, 24, 29]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[66, 68, 71]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4062421321868896

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [15, 24, 29] ccc => cc, Pos: [66, 68, 71] ccc => cc]

Plan: 1
[Pos: [15, 24, 29] ccc => cc, Pos: [66, 68, 71] ccc => cc]
Change: 2, Saving: 3

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [15, 24, 29] ccc => cc, Pos: [66, 68, 71] ccc => cc]
Change: 2, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [15, 24, 29] ccc => cc
Apply:  Pos: [66, 68, 71] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [4, 18], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [4, 18], [5, 6], [18, 2], [5, 11], [19, 12], [0, 2], [0, 18], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [13, 11], [12, 11], [4, 0], [15, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [5, 3], [13, 19], [4, 2], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 17], [8, 12], [18, 7], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.4062421321868896

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[58, 65]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[58, 65]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3438851833343506

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [58, 65] cc => I, Pos: [58, 65] cc => I]

Plan: 1
[Pos: [58, 65] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015644311904907227

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [58, 65] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [58, 65] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [18, 2], [5, 11], [19, 12], [0, 18], [0, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [5, 3], [13, 19], [4, 2], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [8, 17], [18, 7], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.359529495239258

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[65, 68, 69]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.312520980834961

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [65, 68, 69] ccc => cc]

Plan: 1
[Pos: [65, 68, 69] ccc => cc]
Change: 1, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [65, 68, 69] ccc => cc]
Change: 1, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [65, 68, 69] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [0, 18], [5, 11], [19, 12], [18, 2], [19, 5], [18, 2], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [13, 11], [12, 11], [4, 0], [15, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [5, 3], [13, 19], [4, 2], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 17], [8, 12], [18, 7], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.312520980834961

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[68, 70]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[68, 70]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.281193494796753

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [68, 70] cc => I, Pos: [68, 70] cc => I]

Plan: 1
[Pos: [68, 70] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [68, 70] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [68, 70] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 8], [19, 5], [2, 10], [11, 6], [16, 15], [13, 14], [3, 6], [8, 19], [14, 9], [15, 0], [8, 12], [9, 3], [5, 6], [0, 13], [19, 12], [13, 14], [4, 18], [18, 2], [16, 4], [11, 3], [1, 0], [3, 6], [19, 5], [2, 9], [14, 10], [15, 0], [4, 2], [5, 6], [17, 19], [15, 13], [0, 18], [2, 14], [17, 12], [18, 7], [19, 12], [14, 5], [3, 6], [17, 19], [2, 10], [16, 15], [8, 12], [4, 18], [5, 6], [1, 8], [17, 12], [13, 14], [10, 9], [16, 4], [15, 13], [9, 3], [18, 7], [19, 14], [16, 15], [1, 0], [12, 11], [14, 5], [17, 19], [15, 0], [2, 9], [8, 17], [4, 0], [17, 12], [11, 3], [15, 13], [5, 6], [0, 18], [5, 11], [19, 12], [19, 5], [17, 12], [19, 14], [0, 13], [11, 6], [4, 2], [12, 11], [13, 11], [15, 0], [4, 0], [8, 12], [18, 2], [17, 12], [5, 11], [16, 4], [2, 14], [18, 7], [3, 6], [19, 12], [1, 8], [0, 13], [5, 3], [13, 19], [4, 2], [11, 6], [8, 19], [2, 9], [19, 14], [0, 7], [10, 9], [5, 6], [18, 7], [16, 15], [17, 12], [2, 9], [8, 12], [13, 5], [14, 9], [19, 12], [11, 6], [15, 14], [2, 9], [19, 5], [13, 14], [1, 0], [8, 17], [7, 10], [5, 6], [17, 12], [11, 6], [0, 18], [14, 10], [4, 18], [17, 19], [7, 10], [0, 2], [12, 11], [0, 18], [8, 19], [5, 11], [14, 5], [1, 8], [0, 13], [2, 14], [5, 11], [16, 4], [8, 12], [8, 17], [18, 7], [17, 19], [5, 3], [15, 0], [10, 9], [13, 14], [11, 3], [13, 5], [19, 14], [8, 19], [14, 10], [1, 0], [2, 9], [5, 3], [17, 12], [4, 2], [7, 10], [14, 5], [8, 17], [11, 6], [19, 12], [16, 4], [13, 19], [9, 3], [5, 11], [17, 12], [18, 7], [15, 0], [2, 9], [8, 19], [14, 5], [0, 18], [3, 6], [7, 10], [5, 6], [9, 3], [13, 19], [18, 7], [16, 15], [4, 18], [12, 11], [13, 14], [16, 4], [14, 5], [1, 13], [0, 2], [11, 3], ----End Timer [Execute Mapping]:  3.281193494796753

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [183] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 366

Reduced: 
 - size: 87 (32.22%)
 - depth: 6 (13.33%)

