----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936331748962402

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [11, 7], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [11, 7], [16, 13], [14, 7], [9, 1], [0, 12], [2, 19], [15, 16], [9, 1], [5, 7], [17, 10], [6, 11], [18, 3], [3, 16], [8, 1], [11, 7], [14, 4], [2, 0], [12, 5], [18, 15], [18, 3], [11, 7], [19, 8], [16, 5], [2, 12], [6, 14], [4, 9], [3, 14], [11, 7], [18, 16], [9, 1], [12, 5], [6, 14], [12, 13], [16, 5], [15, 3], [4, 9], [17, 18], [3, 14], [10, 6], [15, 16], [8, 1], [0, 19], [11, 7], [10, 3], [15, 16], [2, 12], [5, 7], [19, 8], [17, 18], [6, 14], [10, 3], [5, 7], [15, 16], [9, 1], [14, 4], [6, 11], [18, 3], [2, 0], [10, 14], [9, 1], [6, 11], [17, 18], [15, 16], [5, 7], [19, 8], [9, 1], [10, 3], [12, 13], [14, 4], [17, 18], [14, 5], [2, 19], [16, 12], [7, 4], [13, 9], [17, 10], [13, 1], [14, 4], [15, 3], [0, 19], [16, 12], [17, 18], [0, 19], [14, 4], [13, 1], [6, 11], [16, 12], [18, 16], [14, 5], [0, 19], [12, 13], [10, 6], [8, 1], [15, 3], [18, 15], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [18, 15], [10, 6], [13, 1], [2, 19], [14, 7], [16, 5], [15, 2], [3, 14], [13, 1], [7, 4], [12, 19], [15, 2], [12, 19], [3, 6], [13, 9], [5, 7], [18, 16], [15, 16], [14, 5], [12, 13], [11, 7], [2, 0], [8, 1], [15, 16], [7, 4], [2, 0], [10, 14], [3, 6], [12, 19], [13, 1], [15, 16], [3, 14], [4, 9], [8, 1], [17, 18], [5, 7], [2, 12], [15, 2], [13, 8], [5, 4], [0, 19], [14, 7], [18, 3], [6, 11], [15, 16], [0, 19], [13, 8], [10, 3], [4, 9], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [13, 8], [3, 16], [17, 18], [13, 8], [10, 14], [15, 16], [2, 0], [17, 18], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [6, 11], [14, 4], [13, 9], [2, 19], [17, 10], [12, 19], [5, 13], [15, 2], [18, 16], [10, 14], [8, 1], [7, 4], [12, 13], [17, 18], [10, 14], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [17, 18], [16, 5], [3, 6], [2, 12], [4, 9], [3, 16], [6, 11], [2, 0], [14, 4], [2, 0], [12, 19], [6, 11], [14, 4], [16, 5], [17, 18], [15, 2], [3, 6], [9, 1], [5, 4], [15, 2], [16, 13], [0, 19], [17, 10], [6, 11], [14, 4], [10, 6], [2, 19], [4, 9], [6, 11], [13, 1], [16, 12], [3, 14], [4, 9], [15, 16], [12, 13], [2, 0], [6, 11], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [17, 10], [15, 2], [18, 3], [16, 12], [5, 13], [0, 19], [8, 1], [10, 3], [5, 7], [6, 14], [2, 12], [8, 1], [13, 9], [10, 3], [14, 4], [16, 12], [6, 11], [2, 19], [8, 1], [6, 11], [16, 5], [0, 12], [15, 3], [13, 9], [17, 10], [14, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[14, 18]
[25, 31]
[31, 38]
[38, 53]
[50, 55]
[47, 59]
[54, 61]
[57, 62]
[55, 63]
[64, 70]
[66, 71]
[63, 73]
[62, 74]
[58, 75]
[70, 76]
[72, 80]
[83, 91]
[80, 92]
[90, 93]
[88, 94]
[87, 95]
[71, 96]
[91, 97]
[81, 99]
[93, 100]
[89, 104]
[105, 111]
[113, 119]
[117, 122]
[121, 123]
[128, 134]
[132, 136]
[124, 138]
[123, 139]
[134, 141]
[141, 155]
[151, 156]
[149, 157]
[157, 165]
[165, 168]
[167, 172]
[172, 177]
[188, 193]
[209, 211]
[208, 213]
[210, 214]
[202, 216]
[217, 221]
[229, 234]
[230, 238]
[250, 255]
[251, 257]
[255, 262]
[260, 263]
[256, 267]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[22, 23, 30]
[36, 40, 46]
[102, 107, 112]
[154, 174, 179]
[192, 199, 202]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[4, 10, 14]
[43, 56, 78]
[65, 69, 79]
[143, 150, 159]
[179, 204, 208]
[203, 207, 215]
[213, 218, 225]
[225, 227, 230]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[223, 228, 237]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[14, 18]
[25, 31]
[31, 38]
[38, 53]
[50, 55]
[47, 59]
[54, 61]
[57, 62]
[55, 63]
[64, 70]
[66, 71]
[63, 73]
[62, 74]
[58, 75]
[70, 76]
[72, 80]
[83, 91]
[80, 92]
[90, 93]
[88, 94]
[87, 95]
[71, 96]
[91, 97]
[81, 99]
[93, 100]
[89, 104]
[105, 111]
[113, 119]
[117, 122]
[121, 123]
[128, 134]
[132, 136]
[124, 138]
[123, 139]
[134, 141]
[141, 155]
[151, 156]
[149, 157]
[157, 165]
[165, 168]
[167, 172]
[172, 177]
[188, 193]
[209, 211]
[208, 213]
[210, 214]
[202, 216]
[217, 221]
[229, 234]
[230, 238]
[250, 255]
[251, 257]
[255, 262]
[260, 263]
[256, 267]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.187464714050293

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10, 14] ccc => cc, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [14, 18] cc => I, Pos: [14, 18] cc => I, Pos: [22, 23, 30] ccc => cc, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [31, 38] cc => I, Pos: [31, 38] cc => I, Pos: [36, 40, 46] ccc => cc, Pos: [38, 53] cc => I, Pos: [38, 53] cc => I, Pos: [43, 56, 78] ccc => cc, Pos: [47, 59] cc => I, Pos: [47, 59] cc => I, Pos: [50, 55] cc => I, Pos: [50, 55] cc => I, Pos: [54, 61] cc => I, Pos: [54, 61] cc => I, Pos: [55, 63] cc => I, Pos: [55, 63] cc => I, Pos: [57, 62] cc => I, Pos: [57, 62] cc => I, Pos: [58, 75] cc => I, Pos: [58, 75] cc => I, Pos: [62, 74] cc => I, Pos: [62, 74] cc => I, Pos: [63, 73] cc => I, Pos: [63, 73] cc => I, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [65, 69, 79] ccc => cc, Pos: [66, 71] cc => I, Pos: [66, 71] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [71, 96] cc => I, Pos: [71, 96] cc => I, Pos: [72, 80] cc => I, Pos: [72, 80] cc => I, Pos: [80, 92] cc => I, Pos: [80, 92] cc => I, Pos: [81, 99] cc => I, Pos: [81, 99] cc => I, Pos: [83, 91] cc => I, Pos: [83, 91] cc => I, Pos: [87, 95] cc => I, Pos: [87, 95] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 104] cc => I, Pos: [89, 104] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [91, 97] cc => I, Pos: [91, 97] cc => I, Pos: [93, 100] cc => I, Pos: [93, 100] cc => I, Pos: [102, 107, 112] ccc => cc, Pos: [105, 111] cc => I, Pos: [105, 111] cc => I, Pos: [113, 119] cc => I, Pos: [113, 119] cc => I, Pos: [117, 122] cc => I, Pos: [117, 122] cc => I, Pos: [121, 123] cc => I, Pos: [121, 123] cc => I, Pos: [123, 139] cc => I, Pos: [123, 139] cc => I, Pos: [124, 138] cc => I, Pos: [124, 138] cc => I, Pos: [128, 134] cc => I, Pos: [128, 134] cc => I, Pos: [132, 136] cc => I, Pos: [132, 136] cc => I, Pos: [134, 141] cc => I, Pos: [134, 141] cc => I, Pos: [141, 155] cc => I, Pos: [141, 155] cc => I, Pos: [143, 150, 159] ccc => cc, Pos: [149, 157] cc => I, Pos: [149, 157] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [154, 174, 179] ccc => cc, Pos: [157, 165] cc => I, Pos: [157, 165] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [167, 172] cc => I, Pos: [167, 172] cc => I, Pos: [172, 177] cc => I, Pos: [172, 177] cc => I, Pos: [179, 204, 208] ccc => cc, Pos: [188, 193] cc => I, Pos: [188, 193] cc => I, Pos: [192, 199, 202] ccc => cc, Pos: [202, 216] cc => I, Pos: [202, 216] cc => I, Pos: [203, 207, 215] ccc => cc, Pos: [208, 213] cc => I, Pos: [208, 213] cc => I, Pos: [209, 211] cc => I, Pos: [209, 211] cc => I, Pos: [210, 214] cc => I, Pos: [210, 214] cc => I, Pos: [213, 218, 225] ccc => cc, Pos: [217, 221] cc => I, Pos: [217, 221] cc => I, Pos: [223, 228, 237] ccc => cc, Pos: [225, 227, 230] ccc => cc, Pos: [229, 234] cc => I, Pos: [229, 234] cc => I, Pos: [230, 238] cc => I, Pos: [230, 238] cc => I, Pos: [250, 255] cc => I, Pos: [250, 255] cc => I, Pos: [251, 257] cc => I, Pos: [251, 257] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [256, 267] cc => I, Pos: [256, 267] cc => I, Pos: [260, 263] cc => I, Pos: [260, 263] cc => I]

Plan: 1
[Pos: [4, 10, 14] ccc => cc,
 Pos: [5, 11] cc => I,
 Pos: [22, 23, 30] ccc => cc,
 Pos: [25, 31] cc => I,
 Pos: [36, 40, 46] ccc => cc,
 Pos: [38, 53] cc => I,
 Pos: [43, 56, 78] ccc => cc,
 Pos: [47, 59] cc => I,
 Pos: [50, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [57, 62] cc => I,
 Pos: [58, 75] cc => I,
 Pos: [63, 73] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [65, 69, 79] ccc => cc,
 Pos: [66, 71] cc => I,
 Pos: [72, 80] cc => I,
 Pos: [81, 99] cc => I,
 Pos: [83, 91] cc => I,
 Pos: [87, 95] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [89, 104] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [102, 107, 112] ccc => cc,
 Pos: [105, 111] cc => I,
 Pos: [113, 119] cc => I,
 Pos: [117, 122] cc => I,
 Pos: [121, 123] cc => I,
 Pos: [124, 138] cc => I,
 Pos: [128, 134] cc => I,
 Pos: [132, 136] cc => I,
 Pos: [141, 155] cc => I,
 Pos: [143, 150, 159] ccc => cc,
 Pos: [149, 157] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [154, 174, 179] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [167, 172] cc => I,
 Pos: [188, 193] cc => I,
 Pos: [192, 199, 202] ccc => cc,
 Pos: [203, 207, 215] ccc => cc,
 Pos: [208, 213] cc => I,
 Pos: [209, 211] cc => I,
 Pos: [210, 214] cc => I,
 Pos: [217, 221] cc => I,
 Pos: [223, 228, 237] ccc => cc,
 Pos: [225, 227, 230] ccc => cc,
 Pos: [229, 234] cc => I,
 Pos: [250, 255] cc => I,
 Pos: [251, 257] cc => I,
 Pos: [256, 267] cc => I,
 Pos: [260, 263] cc => I]
Change: 52, Saving: 184

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 10, 14] ccc => cc,
 Pos: [5, 11] cc => I,
 Pos: [22, 23, 30] ccc => cc,
 Pos: [25, 31] cc => I,
 Pos: [36, 40, 46] ccc => cc,
 Pos: [38, 53] cc => I,
 Pos: [43, 56, 78] ccc => cc,
 Pos: [47, 59] cc => I,
 Pos: [50, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [57, 62] cc => I,
 Pos: [58, 75] cc => I,
 Pos: [63, 73] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [65, 69, 79] ccc => cc,
 Pos: [66, 71] cc => I,
 Pos: [72, 80] cc => I,
 Pos: [81, 99] cc => I,
 Pos: [83, 91] cc => I,
 Pos: [87, 95] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [89, 104] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [102, 107, 112] ccc => cc,
 Pos: [105, 111] cc => I,
 Pos: [113, 119] cc => I,
 Pos: [117, 122] cc => I,
 Pos: [121, 123] cc => I,
 Pos: [124, 138] cc => I,
 Pos: [128, 134] cc => I,
 Pos: [132, 136] cc => I,
 Pos: [141, 155] cc => I,
 Pos: [143, 150, 159] ccc => cc,
 Pos: [149, 157] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [154, 174, 179] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [167, 172] cc => I,
 Pos: [188, 193] cc => I,
 Pos: [192, 199, 202] ccc => cc,
 Pos: [203, 207, 215] ccc => cc,
 Pos: [208, 213] cc => I,
 Pos: [209, 211] cc => I,
 Pos: [210, 214] cc => I,
 Pos: [217, 221] cc => I,
 Pos: [223, 228, 237] ccc => cc,
 Pos: [225, 227, 230] ccc => cc,
 Pos: [229, 234] cc => I,
 Pos: [250, 255] cc => I,
 Pos: [251, 257] cc => I,
 Pos: [256, 267] cc => I,
 Pos: [260, 263] cc => I]
Change: 52, Saving: 184

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 10, 14] ccc => cc
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [22, 23, 30] ccc => cc
Apply:  Pos: [25, 31] cc => I
Apply:  Pos: [36, 40, 46] ccc => cc
Apply:  Pos: [38, 53] cc => I
Apply:  Pos: [43, 56, 78] ccc => cc
Apply:  Pos: [47, 59] cc => I
Apply:  Pos: [50, 55] cc => I
Apply:  Pos: [54, 61] cc => I
Apply:  Pos: [57, 62] cc => I
Apply:  Pos: [58, 75] cc => I
Apply:  Pos: [63, 73] cc => I
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [65, 69, 79] ccc => cc
Apply:  Pos: [66, 71] cc => I
Apply:  Pos: [72, 80] cc => I
Apply:  Pos: [81, 99] cc => I
Apply:  Pos: [83, 91] cc => I
Apply:  Pos: [87, 95] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [89, 104] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [102, 107, 112] ccc => cc
Apply:  Pos: [105, 111] cc => I
Apply:  Pos: [113, 119] cc => I
Apply:  Pos: [117, 122] cc => I
Apply:  Pos: [121, 123] cc => I
Apply:  Pos: [124, 138] cc => I
Apply:  Pos: [128, 134] cc => I
Apply:  Pos: [132, 136] cc => I
Apply:  Pos: [141, 155] cc => I
Apply:  Pos: [143, 150, 159] ccc => cc
Apply:  Pos: [149, 157] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [154, 174, 179] ccc => cc
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [167, 172] cc => I
Apply:  Pos: [188, 193] cc => I
Apply:  Pos: [192, 199, 202] ccc => cc
Apply:  Pos: [203, 207, 215] ccc => cc
Apply:  Pos: [208, 213] cc => I
Apply:  Pos: [209, 211] cc => I
Apply:  Pos: [210, 214] cc => I
Apply:  Pos: [217, 221] cc => I
Apply:  Pos: [223, 228, 237] ccc => cc
Apply:  Pos: [225, 227, 230] ccc => cc
Apply:  Pos: [229, 234] cc => I
Apply:  Pos: [250, 255] cc => I
Apply:  Pos: [251, 257] cc => I
Apply:  Pos: [256, 267] cc => I
Apply:  Pos: [260, 263] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [9, 1], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [9, 1], [5, 7], [17, 10], [6, 11], [18, 16], [3, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 12], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [2, 12], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [6, 14], [10, 14], [18, 3], [2, 0], [14, 4], [5, 7], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 10], [17, 18], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [8, 1], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [5, 7], [18, 16], [14, 5], [12, 13], [11, 7], [8, 1], [7, 4], [10, 14], [12, 19], [13, 1], [3, 14], [5, 4], [8, 1], [17, 18], [5, 7], [2, 12], [15, 2], [4, 9], [14, 7], [18, 3], [6, 7], [10, 3], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [2, 19], [17, 10], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 15], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [3, 6], [2, 12], [4, 9], [16, 5], [12, 19], [17, 18], [3, 6], [9, 1], [5, 4], [16, 13], [2, 0], [17, 10], [10, 6], [14, 4], [6, 11], [0, 19], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [6, 11], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [17, 10], [15, 2], [18, 3], [16, 12], [5, 13], [0, 19], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [8, 1], [16, 5], [0, 12], [15, 3], [17, 10], [14, 7], ----End Timer [Execute Mapping]:  5.187464714050293

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 15]
[63, 80]
[132, 139]
[115, 144]
[147, 154]
[160, 176]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[28, 34, 36]
[148, 157, 165]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[81, 86, 89]
[93, 95, 97]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 15]
[63, 80]
[132, 139]
[115, 144]
[147, 154]
[160, 176]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.171893358230591

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [9, 15] cc => I, Pos: [9, 15] cc => I, Pos: [28, 34, 36] ccc => cc, Pos: [63, 80] cc => I, Pos: [63, 80] cc => I, Pos: [81, 86, 89] ccc => cc, Pos: [93, 95, 97] ccc => cc, Pos: [115, 144] cc => I, Pos: [115, 144] cc => I, Pos: [132, 139] cc => I, Pos: [132, 139] cc => I, Pos: [147, 154] cc => I, Pos: [147, 154] cc => I, Pos: [148, 157, 165] ccc => cc, Pos: [160, 176] cc => I, Pos: [160, 176] cc => I]

Plan: 1
[Pos: [9, 15] cc => I,
 Pos: [28, 34, 36] ccc => cc,
 Pos: [63, 80] cc => I,
 Pos: [81, 86, 89] ccc => cc,
 Pos: [93, 95, 97] ccc => cc,
 Pos: [115, 144] cc => I,
 Pos: [132, 139] cc => I,
 Pos: [147, 154] cc => I,
 Pos: [148, 157, 165] ccc => cc,
 Pos: [160, 176] cc => I]
Change: 10, Saving: 32

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 15] cc => I,
 Pos: [28, 34, 36] ccc => cc,
 Pos: [63, 80] cc => I,
 Pos: [81, 86, 89] ccc => cc,
 Pos: [93, 95, 97] ccc => cc,
 Pos: [115, 144] cc => I,
 Pos: [132, 139] cc => I,
 Pos: [147, 154] cc => I,
 Pos: [148, 157, 165] ccc => cc,
 Pos: [160, 176] cc => I]
Change: 10, Saving: 32

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 15] cc => I
Apply:  Pos: [28, 34, 36] ccc => cc
Apply:  Pos: [63, 80] cc => I
Apply:  Pos: [81, 86, 89] ccc => cc
Apply:  Pos: [93, 95, 97] ccc => cc
Apply:  Pos: [115, 144] cc => I
Apply:  Pos: [132, 139] cc => I
Apply:  Pos: [147, 154] cc => I
Apply:  Pos: [148, 157, 165] ccc => cc
Apply:  Pos: [160, 176] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [3, 16], [18, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [10, 14], [6, 14], [18, 3], [2, 0], [14, 4], [5, 7], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 18], [17, 10], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [5, 7], [18, 16], [14, 5], [12, 13], [11, 7], [5, 7], [10, 14], [12, 19], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [6, 14], [18, 3], [14, 7], [10, 3], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [2, 19], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 15], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [17, 18], [9, 1], [5, 4], [16, 13], [2, 0], [10, 6], [14, 4], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [8, 1], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  3.171893358230591

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[71, 73, 75]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.827772617340088

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [71, 73, 75] ccc => cc]

Plan: 1
[Pos: [71, 73, 75] ccc => cc]
Change: 1, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [71, 73, 75] ccc => cc]
Change: 1, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [71, 73, 75] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [18, 16], [3, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [2, 5], [16, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [6, 14], [10, 14], [18, 3], [2, 0], [14, 4], [5, 7], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 10], [17, 18], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [14, 5], [18, 16], [5, 7], [12, 13], [11, 7], [10, 14], [12, 19], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [6, 14], [18, 3], [14, 7], [10, 3], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [12, 19], [2, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 15], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [17, 18], [9, 1], [5, 4], [16, 13], [2, 0], [10, 6], [14, 4], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 7], [5, 13], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [8, 1], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  2.827772617340088

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.796851396560669

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [3, 16], [18, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [10, 14], [6, 14], [18, 3], [2, 0], [14, 4], [5, 7], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 18], [17, 10], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [14, 5], [18, 16], [5, 7], [12, 13], [11, 7], [10, 14], [12, 19], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [6, 14], [18, 3], [14, 7], [10, 3], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [2, 19], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 15], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [17, 18], [9, 1], [5, 4], [16, 13], [2, 0], [10, 6], [14, 4], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [8, 1], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  2.796851396560669

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [161] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 322

Reduced: 
 - size: 109 (40.37%)
 - cycle: 218 (40.37%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936522483825684

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [11, 7], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [11, 7], [16, 13], [14, 7], [9, 1], [0, 12], [2, 19], [15, 16], [9, 1], [5, 7], [17, 10], [6, 11], [18, 3], [3, 16], [8, 1], [11, 7], [14, 4], [2, 0], [12, 5], [18, 15], [18, 3], [11, 7], [19, 8], [16, 5], [2, 12], [6, 14], [4, 9], [3, 14], [11, 7], [18, 16], [9, 1], [12, 5], [6, 14], [12, 13], [16, 5], [15, 3], [4, 9], [17, 18], [3, 14], [10, 6], [15, 16], [8, 1], [0, 19], [11, 7], [10, 3], [15, 16], [2, 12], [5, 7], [19, 8], [17, 18], [6, 14], [10, 3], [5, 7], [15, 16], [9, 1], [14, 4], [6, 11], [18, 3], [2, 0], [10, 14], [9, 1], [6, 11], [17, 18], [15, 16], [5, 7], [19, 8], [9, 1], [10, 3], [12, 13], [14, 4], [17, 18], [14, 5], [2, 19], [16, 12], [7, 4], [13, 9], [17, 10], [13, 1], [14, 4], [15, 3], [0, 19], [16, 12], [17, 18], [0, 19], [14, 4], [13, 1], [6, 11], [16, 12], [18, 16], [14, 5], [0, 19], [12, 13], [10, 6], [8, 1], [15, 3], [18, 15], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [18, 15], [10, 6], [13, 1], [2, 19], [14, 7], [16, 5], [15, 2], [3, 14], [13, 1], [7, 4], [12, 19], [15, 2], [12, 19], [3, 6], [13, 9], [5, 7], [18, 16], [15, 16], [14, 5], [12, 13], [11, 7], [2, 0], [8, 1], [15, 16], [7, 4], [2, 0], [10, 14], [3, 6], [12, 19], [13, 1], [15, 16], [3, 14], [4, 9], [8, 1], [17, 18], [5, 7], [2, 12], [15, 2], [13, 8], [5, 4], [0, 19], [14, 7], [18, 3], [6, 11], [15, 16], [0, 19], [13, 8], [10, 3], [4, 9], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [13, 8], [3, 16], [17, 18], [13, 8], [10, 14], [15, 16], [2, 0], [17, 18], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [6, 11], [14, 4], [13, 9], [2, 19], [17, 10], [12, 19], [5, 13], [15, 2], [18, 16], [10, 14], [8, 1], [7, 4], [12, 13], [17, 18], [10, 14], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [17, 18], [16, 5], [3, 6], [2, 12], [4, 9], [3, 16], [6, 11], [2, 0], [14, 4], [2, 0], [12, 19], [6, 11], [14, 4], [16, 5], [17, 18], [15, 2], [3, 6], [9, 1], [5, 4], [15, 2], [16, 13], [0, 19], [17, 10], [6, 11], [14, 4], [10, 6], [2, 19], [4, 9], [6, 11], [13, 1], [16, 12], [3, 14], [4, 9], [15, 16], [12, 13], [2, 0], [6, 11], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [17, 10], [15, 2], [18, 3], [16, 12], [5, 13], [0, 19], [8, 1], [10, 3], [5, 7], [6, 14], [2, 12], [8, 1], [13, 9], [10, 3], [14, 4], [16, 12], [6, 11], [2, 19], [8, 1], [6, 11], [16, 5], [0, 12], [15, 3], [13, 9], [17, 10], [14, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[14, 18]
[25, 31]
[31, 38]
[38, 53]
[50, 55]
[47, 59]
[54, 61]
[57, 62]
[55, 63]
[64, 70]
[66, 71]
[63, 73]
[62, 74]
[58, 75]
[70, 76]
[72, 80]
[83, 91]
[80, 92]
[90, 93]
[88, 94]
[87, 95]
[71, 96]
[91, 97]
[81, 99]
[93, 100]
[89, 104]
[105, 111]
[113, 119]
[117, 122]
[121, 123]
[128, 134]
[132, 136]
[124, 138]
[123, 139]
[134, 141]
[141, 155]
[151, 156]
[149, 157]
[157, 165]
[165, 168]
[167, 172]
[172, 177]
[188, 193]
[209, 211]
[208, 213]
[210, 214]
[202, 216]
[217, 221]
[229, 234]
[230, 238]
[250, 255]
[251, 257]
[255, 262]
[260, 263]
[256, 267]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[22, 23, 30]
[36, 40, 46]
[102, 107, 112]
[154, 174, 179]
[192, 199, 202]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[4, 10, 14]
[43, 56, 78]
[65, 69, 79]
[143, 150, 159]
[179, 204, 208]
[203, 207, 215]
[213, 218, 225]
[225, 227, 230]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[223, 228, 237]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[14, 18]
[25, 31]
[31, 38]
[38, 53]
[50, 55]
[47, 59]
[54, 61]
[57, 62]
[55, 63]
[64, 70]
[66, 71]
[63, 73]
[62, 74]
[58, 75]
[70, 76]
[72, 80]
[83, 91]
[80, 92]
[90, 93]
[88, 94]
[87, 95]
[71, 96]
[91, 97]
[81, 99]
[93, 100]
[89, 104]
[105, 111]
[113, 119]
[117, 122]
[121, 123]
[128, 134]
[132, 136]
[124, 138]
[123, 139]
[134, 141]
[141, 155]
[151, 156]
[149, 157]
[157, 165]
[165, 168]
[167, 172]
[172, 177]
[188, 193]
[209, 211]
[208, 213]
[210, 214]
[202, 216]
[217, 221]
[229, 234]
[230, 238]
[250, 255]
[251, 257]
[255, 262]
[260, 263]
[256, 267]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.171842336654663

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10, 14] ccc => cc, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [14, 18] cc => I, Pos: [14, 18] cc => I, Pos: [22, 23, 30] ccc => cc, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [31, 38] cc => I, Pos: [31, 38] cc => I, Pos: [36, 40, 46] ccc => cc, Pos: [38, 53] cc => I, Pos: [38, 53] cc => I, Pos: [43, 56, 78] ccc => cc, Pos: [47, 59] cc => I, Pos: [47, 59] cc => I, Pos: [50, 55] cc => I, Pos: [50, 55] cc => I, Pos: [54, 61] cc => I, Pos: [54, 61] cc => I, Pos: [55, 63] cc => I, Pos: [55, 63] cc => I, Pos: [57, 62] cc => I, Pos: [57, 62] cc => I, Pos: [58, 75] cc => I, Pos: [58, 75] cc => I, Pos: [62, 74] cc => I, Pos: [62, 74] cc => I, Pos: [63, 73] cc => I, Pos: [63, 73] cc => I, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [65, 69, 79] ccc => cc, Pos: [66, 71] cc => I, Pos: [66, 71] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [71, 96] cc => I, Pos: [71, 96] cc => I, Pos: [72, 80] cc => I, Pos: [72, 80] cc => I, Pos: [80, 92] cc => I, Pos: [80, 92] cc => I, Pos: [81, 99] cc => I, Pos: [81, 99] cc => I, Pos: [83, 91] cc => I, Pos: [83, 91] cc => I, Pos: [87, 95] cc => I, Pos: [87, 95] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 104] cc => I, Pos: [89, 104] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [91, 97] cc => I, Pos: [91, 97] cc => I, Pos: [93, 100] cc => I, Pos: [93, 100] cc => I, Pos: [102, 107, 112] ccc => cc, Pos: [105, 111] cc => I, Pos: [105, 111] cc => I, Pos: [113, 119] cc => I, Pos: [113, 119] cc => I, Pos: [117, 122] cc => I, Pos: [117, 122] cc => I, Pos: [121, 123] cc => I, Pos: [121, 123] cc => I, Pos: [123, 139] cc => I, Pos: [123, 139] cc => I, Pos: [124, 138] cc => I, Pos: [124, 138] cc => I, Pos: [128, 134] cc => I, Pos: [128, 134] cc => I, Pos: [132, 136] cc => I, Pos: [132, 136] cc => I, Pos: [134, 141] cc => I, Pos: [134, 141] cc => I, Pos: [141, 155] cc => I, Pos: [141, 155] cc => I, Pos: [143, 150, 159] ccc => cc, Pos: [149, 157] cc => I, Pos: [149, 157] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [154, 174, 179] ccc => cc, Pos: [157, 165] cc => I, Pos: [157, 165] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [167, 172] cc => I, Pos: [167, 172] cc => I, Pos: [172, 177] cc => I, Pos: [172, 177] cc => I, Pos: [179, 204, 208] ccc => cc, Pos: [188, 193] cc => I, Pos: [188, 193] cc => I, Pos: [192, 199, 202] ccc => cc, Pos: [202, 216] cc => I, Pos: [202, 216] cc => I, Pos: [203, 207, 215] ccc => cc, Pos: [208, 213] cc => I, Pos: [208, 213] cc => I, Pos: [209, 211] cc => I, Pos: [209, 211] cc => I, Pos: [210, 214] cc => I, Pos: [210, 214] cc => I, Pos: [213, 218, 225] ccc => cc, Pos: [217, 221] cc => I, Pos: [217, 221] cc => I, Pos: [223, 228, 237] ccc => cc, Pos: [225, 227, 230] ccc => cc, Pos: [229, 234] cc => I, Pos: [229, 234] cc => I, Pos: [230, 238] cc => I, Pos: [230, 238] cc => I, Pos: [250, 255] cc => I, Pos: [250, 255] cc => I, Pos: [251, 257] cc => I, Pos: [251, 257] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [256, 267] cc => I, Pos: [256, 267] cc => I, Pos: [260, 263] cc => I, Pos: [260, 263] cc => I]

Plan: 1
[Pos: [4, 10, 14] ccc => cc,
 Pos: [5, 11] cc => I,
 Pos: [22, 23, 30] ccc => cc,
 Pos: [25, 31] cc => I,
 Pos: [36, 40, 46] ccc => cc,
 Pos: [38, 53] cc => I,
 Pos: [43, 56, 78] ccc => cc,
 Pos: [47, 59] cc => I,
 Pos: [50, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [57, 62] cc => I,
 Pos: [58, 75] cc => I,
 Pos: [63, 73] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [65, 69, 79] ccc => cc,
 Pos: [66, 71] cc => I,
 Pos: [72, 80] cc => I,
 Pos: [81, 99] cc => I,
 Pos: [83, 91] cc => I,
 Pos: [87, 95] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [89, 104] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [102, 107, 112] ccc => cc,
 Pos: [105, 111] cc => I,
 Pos: [113, 119] cc => I,
 Pos: [117, 122] cc => I,
 Pos: [121, 123] cc => I,
 Pos: [124, 138] cc => I,
 Pos: [128, 134] cc => I,
 Pos: [132, 136] cc => I,
 Pos: [141, 155] cc => I,
 Pos: [143, 150, 159] ccc => cc,
 Pos: [149, 157] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [154, 174, 179] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [167, 172] cc => I,
 Pos: [188, 193] cc => I,
 Pos: [192, 199, 202] ccc => cc,
 Pos: [203, 207, 215] ccc => cc,
 Pos: [208, 213] cc => I,
 Pos: [209, 211] cc => I,
 Pos: [210, 214] cc => I,
 Pos: [217, 221] cc => I,
 Pos: [223, 228, 237] ccc => cc,
 Pos: [225, 227, 230] ccc => cc,
 Pos: [229, 234] cc => I,
 Pos: [250, 255] cc => I,
 Pos: [251, 257] cc => I,
 Pos: [256, 267] cc => I,
 Pos: [260, 263] cc => I]
Change: 52, Saving: 54

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.12497758865356445

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 10, 14] ccc => cc,
 Pos: [5, 11] cc => I,
 Pos: [22, 23, 30] ccc => cc,
 Pos: [25, 31] cc => I,
 Pos: [36, 40, 46] ccc => cc,
 Pos: [38, 53] cc => I,
 Pos: [43, 56, 78] ccc => cc,
 Pos: [47, 59] cc => I,
 Pos: [50, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [57, 62] cc => I,
 Pos: [58, 75] cc => I,
 Pos: [63, 73] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [65, 69, 79] ccc => cc,
 Pos: [66, 71] cc => I,
 Pos: [72, 80] cc => I,
 Pos: [81, 99] cc => I,
 Pos: [83, 91] cc => I,
 Pos: [87, 95] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [89, 104] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [102, 107, 112] ccc => cc,
 Pos: [105, 111] cc => I,
 Pos: [113, 119] cc => I,
 Pos: [117, 122] cc => I,
 Pos: [121, 123] cc => I,
 Pos: [124, 138] cc => I,
 Pos: [128, 134] cc => I,
 Pos: [132, 136] cc => I,
 Pos: [141, 155] cc => I,
 Pos: [143, 150, 159] ccc => cc,
 Pos: [149, 157] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [154, 174, 179] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [167, 172] cc => I,
 Pos: [188, 193] cc => I,
 Pos: [192, 199, 202] ccc => cc,
 Pos: [203, 207, 215] ccc => cc,
 Pos: [208, 213] cc => I,
 Pos: [209, 211] cc => I,
 Pos: [210, 214] cc => I,
 Pos: [217, 221] cc => I,
 Pos: [223, 228, 237] ccc => cc,
 Pos: [225, 227, 230] ccc => cc,
 Pos: [229, 234] cc => I,
 Pos: [250, 255] cc => I,
 Pos: [251, 257] cc => I,
 Pos: [256, 267] cc => I,
 Pos: [260, 263] cc => I]
Change: 52, Saving: 54

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 10, 14] ccc => cc
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [22, 23, 30] ccc => cc
Apply:  Pos: [25, 31] cc => I
Apply:  Pos: [36, 40, 46] ccc => cc
Apply:  Pos: [38, 53] cc => I
Apply:  Pos: [43, 56, 78] ccc => cc
Apply:  Pos: [47, 59] cc => I
Apply:  Pos: [50, 55] cc => I
Apply:  Pos: [54, 61] cc => I
Apply:  Pos: [57, 62] cc => I
Apply:  Pos: [58, 75] cc => I
Apply:  Pos: [63, 73] cc => I
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [65, 69, 79] ccc => cc
Apply:  Pos: [66, 71] cc => I
Apply:  Pos: [72, 80] cc => I
Apply:  Pos: [81, 99] cc => I
Apply:  Pos: [83, 91] cc => I
Apply:  Pos: [87, 95] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [89, 104] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [102, 107, 112] ccc => cc
Apply:  Pos: [105, 111] cc => I
Apply:  Pos: [113, 119] cc => I
Apply:  Pos: [117, 122] cc => I
Apply:  Pos: [121, 123] cc => I
Apply:  Pos: [124, 138] cc => I
Apply:  Pos: [128, 134] cc => I
Apply:  Pos: [132, 136] cc => I
Apply:  Pos: [141, 155] cc => I
Apply:  Pos: [143, 150, 159] ccc => cc
Apply:  Pos: [149, 157] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [154, 174, 179] ccc => cc
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [167, 172] cc => I
Apply:  Pos: [188, 193] cc => I
Apply:  Pos: [192, 199, 202] ccc => cc
Apply:  Pos: [203, 207, 215] ccc => cc
Apply:  Pos: [208, 213] cc => I
Apply:  Pos: [209, 211] cc => I
Apply:  Pos: [210, 214] cc => I
Apply:  Pos: [217, 221] cc => I
Apply:  Pos: [223, 228, 237] ccc => cc
Apply:  Pos: [225, 227, 230] ccc => cc
Apply:  Pos: [229, 234] cc => I
Apply:  Pos: [250, 255] cc => I
Apply:  Pos: [251, 257] cc => I
Apply:  Pos: [256, 267] cc => I
Apply:  Pos: [260, 263] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [9, 1], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [9, 1], [5, 7], [17, 10], [6, 11], [18, 16], [3, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 12], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [2, 12], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [6, 14], [10, 14], [18, 3], [2, 0], [14, 4], [5, 7], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 10], [17, 18], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [8, 1], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [5, 7], [18, 16], [14, 5], [12, 13], [11, 7], [8, 1], [7, 4], [10, 14], [12, 19], [13, 1], [3, 14], [5, 4], [8, 1], [17, 18], [5, 7], [2, 12], [15, 2], [4, 9], [14, 7], [18, 3], [6, 7], [10, 3], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [2, 19], [17, 10], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 15], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [3, 6], [2, 12], [4, 9], [16, 5], [12, 19], [17, 18], [3, 6], [9, 1], [5, 4], [16, 13], [2, 0], [17, 10], [10, 6], [14, 4], [6, 11], [0, 19], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [6, 11], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [17, 10], [15, 2], [18, 3], [16, 12], [5, 13], [0, 19], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [8, 1], [16, 5], [0, 12], [15, 3], [17, 10], [14, 7], ----End Timer [Execute Mapping]:  5.2968199253082275

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 15]
[63, 80]
[132, 139]
[115, 144]
[147, 154]
[160, 176]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[28, 34, 36]
[148, 157, 165]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[81, 86, 89]
[93, 95, 97]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 15]
[63, 80]
[132, 139]
[115, 144]
[147, 154]
[160, 176]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.125074625015259

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [9, 15] cc => I, Pos: [9, 15] cc => I, Pos: [28, 34, 36] ccc => cc, Pos: [63, 80] cc => I, Pos: [63, 80] cc => I, Pos: [81, 86, 89] ccc => cc, Pos: [93, 95, 97] ccc => cc, Pos: [115, 144] cc => I, Pos: [115, 144] cc => I, Pos: [132, 139] cc => I, Pos: [132, 139] cc => I, Pos: [147, 154] cc => I, Pos: [147, 154] cc => I, Pos: [148, 157, 165] ccc => cc, Pos: [160, 176] cc => I, Pos: [160, 176] cc => I]

Plan: 1
[Pos: [9, 15] cc => I,
 Pos: [28, 34, 36] ccc => cc,
 Pos: [63, 80] cc => I,
 Pos: [81, 86, 89] ccc => cc,
 Pos: [93, 95, 97] ccc => cc,
 Pos: [115, 144] cc => I,
 Pos: [132, 139] cc => I,
 Pos: [147, 154] cc => I,
 Pos: [148, 157, 165] ccc => cc,
 Pos: [160, 176] cc => I]
Change: 10, Saving: 10

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.031244277954101562

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 15] cc => I,
 Pos: [28, 34, 36] ccc => cc,
 Pos: [63, 80] cc => I,
 Pos: [81, 86, 89] ccc => cc,
 Pos: [93, 95, 97] ccc => cc,
 Pos: [115, 144] cc => I,
 Pos: [132, 139] cc => I,
 Pos: [147, 154] cc => I,
 Pos: [148, 157, 165] ccc => cc,
 Pos: [160, 176] cc => I]
Change: 10, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 15] cc => I
Apply:  Pos: [28, 34, 36] ccc => cc
Apply:  Pos: [63, 80] cc => I
Apply:  Pos: [81, 86, 89] ccc => cc
Apply:  Pos: [93, 95, 97] ccc => cc
Apply:  Pos: [115, 144] cc => I
Apply:  Pos: [132, 139] cc => I
Apply:  Pos: [147, 154] cc => I
Apply:  Pos: [148, 157, 165] ccc => cc
Apply:  Pos: [160, 176] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [3, 16], [18, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [10, 14], [6, 14], [18, 3], [2, 0], [14, 4], [5, 7], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 18], [17, 10], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [5, 7], [18, 16], [14, 5], [12, 13], [11, 7], [5, 7], [10, 14], [12, 19], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [6, 14], [18, 3], [14, 7], [10, 3], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [2, 19], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 15], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [17, 18], [9, 1], [5, 4], [16, 13], [2, 0], [10, 6], [14, 4], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [8, 1], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  3.1563189029693604

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[71, 73, 75]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.765857696533203

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [71, 73, 75] ccc => cc]

Plan: 1
[Pos: [71, 73, 75] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015505313873291016

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [71, 73, 75] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [71, 73, 75] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [18, 16], [3, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [2, 5], [16, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [6, 14], [10, 14], [18, 3], [2, 0], [14, 4], [5, 7], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 10], [17, 18], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [14, 5], [18, 16], [5, 7], [12, 13], [11, 7], [10, 14], [12, 19], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [6, 14], [18, 3], [14, 7], [10, 3], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [12, 19], [2, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 15], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [17, 18], [9, 1], [5, 4], [16, 13], [2, 0], [10, 6], [14, 4], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 7], [5, 13], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [8, 1], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  2.781363010406494

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7812745571136475

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [3, 16], [18, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [10, 14], [6, 14], [18, 3], [2, 0], [14, 4], [5, 7], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 18], [17, 10], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [14, 5], [18, 16], [5, 7], [12, 13], [11, 7], [10, 14], [12, 19], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [6, 14], [18, 3], [14, 7], [10, 3], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [2, 19], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 15], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [17, 18], [9, 1], [5, 4], [16, 13], [2, 0], [10, 6], [14, 4], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [8, 1], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  2.7812745571136475

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [161] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 322

Reduced: 
 - size: 109 (40.37%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374332427978516

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [11, 7], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [11, 7], [16, 13], [14, 7], [9, 1], [0, 12], [2, 19], [15, 16], [9, 1], [5, 7], [17, 10], [6, 11], [18, 3], [3, 16], [8, 1], [11, 7], [14, 4], [2, 0], [12, 5], [18, 15], [18, 3], [11, 7], [19, 8], [16, 5], [2, 12], [6, 14], [4, 9], [3, 14], [11, 7], [18, 16], [9, 1], [12, 5], [6, 14], [12, 13], [16, 5], [15, 3], [4, 9], [17, 18], [3, 14], [10, 6], [15, 16], [8, 1], [0, 19], [11, 7], [10, 3], [15, 16], [2, 12], [5, 7], [19, 8], [17, 18], [6, 14], [10, 3], [5, 7], [15, 16], [9, 1], [14, 4], [6, 11], [18, 3], [2, 0], [10, 14], [9, 1], [6, 11], [17, 18], [15, 16], [5, 7], [19, 8], [9, 1], [10, 3], [12, 13], [14, 4], [17, 18], [14, 5], [2, 19], [16, 12], [7, 4], [13, 9], [17, 10], [13, 1], [14, 4], [15, 3], [0, 19], [16, 12], [17, 18], [0, 19], [14, 4], [13, 1], [6, 11], [16, 12], [18, 16], [14, 5], [0, 19], [12, 13], [10, 6], [8, 1], [15, 3], [18, 15], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [18, 15], [10, 6], [13, 1], [2, 19], [14, 7], [16, 5], [15, 2], [3, 14], [13, 1], [7, 4], [12, 19], [15, 2], [12, 19], [3, 6], [13, 9], [5, 7], [18, 16], [15, 16], [14, 5], [12, 13], [11, 7], [2, 0], [8, 1], [15, 16], [7, 4], [2, 0], [10, 14], [3, 6], [12, 19], [13, 1], [15, 16], [3, 14], [4, 9], [8, 1], [17, 18], [5, 7], [2, 12], [15, 2], [13, 8], [5, 4], [0, 19], [14, 7], [18, 3], [6, 11], [15, 16], [0, 19], [13, 8], [10, 3], [4, 9], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [13, 8], [3, 16], [17, 18], [13, 8], [10, 14], [15, 16], [2, 0], [17, 18], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [6, 11], [14, 4], [13, 9], [2, 19], [17, 10], [12, 19], [5, 13], [15, 2], [18, 16], [10, 14], [8, 1], [7, 4], [12, 13], [17, 18], [10, 14], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [17, 18], [16, 5], [3, 6], [2, 12], [4, 9], [3, 16], [6, 11], [2, 0], [14, 4], [2, 0], [12, 19], [6, 11], [14, 4], [16, 5], [17, 18], [15, 2], [3, 6], [9, 1], [5, 4], [15, 2], [16, 13], [0, 19], [17, 10], [6, 11], [14, 4], [10, 6], [2, 19], [4, 9], [6, 11], [13, 1], [16, 12], [3, 14], [4, 9], [15, 16], [12, 13], [2, 0], [6, 11], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [17, 10], [15, 2], [18, 3], [16, 12], [5, 13], [0, 19], [8, 1], [10, 3], [5, 7], [6, 14], [2, 12], [8, 1], [13, 9], [10, 3], [14, 4], [16, 12], [6, 11], [2, 19], [8, 1], [6, 11], [16, 5], [0, 12], [15, 3], [13, 9], [17, 10], [14, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[14, 18]
[25, 31]
[31, 38]
[38, 53]
[50, 55]
[47, 59]
[54, 61]
[57, 62]
[55, 63]
[64, 70]
[66, 71]
[63, 73]
[62, 74]
[58, 75]
[70, 76]
[72, 80]
[83, 91]
[80, 92]
[90, 93]
[88, 94]
[87, 95]
[71, 96]
[91, 97]
[81, 99]
[93, 100]
[89, 104]
[105, 111]
[113, 119]
[117, 122]
[121, 123]
[128, 134]
[132, 136]
[124, 138]
[123, 139]
[134, 141]
[141, 155]
[151, 156]
[149, 157]
[157, 165]
[165, 168]
[167, 172]
[172, 177]
[188, 193]
[209, 211]
[208, 213]
[210, 214]
[202, 216]
[217, 221]
[229, 234]
[230, 238]
[250, 255]
[251, 257]
[255, 262]
[260, 263]
[256, 267]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[22, 23, 30]
[36, 40, 46]
[102, 107, 112]
[154, 174, 179]
[192, 199, 202]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[4, 10, 14]
[43, 56, 78]
[65, 69, 79]
[143, 150, 159]
[179, 204, 208]
[203, 207, 215]
[213, 218, 225]
[225, 227, 230]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[223, 228, 237]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[14, 18]
[25, 31]
[31, 38]
[38, 53]
[50, 55]
[47, 59]
[54, 61]
[57, 62]
[55, 63]
[64, 70]
[66, 71]
[63, 73]
[62, 74]
[58, 75]
[70, 76]
[72, 80]
[83, 91]
[80, 92]
[90, 93]
[88, 94]
[87, 95]
[71, 96]
[91, 97]
[81, 99]
[93, 100]
[89, 104]
[105, 111]
[113, 119]
[117, 122]
[121, 123]
[128, 134]
[132, 136]
[124, 138]
[123, 139]
[134, 141]
[141, 155]
[151, 156]
[149, 157]
[157, 165]
[165, 168]
[167, 172]
[172, 177]
[188, 193]
[209, 211]
[208, 213]
[210, 214]
[202, 216]
[217, 221]
[229, 234]
[230, 238]
[250, 255]
[251, 257]
[255, 262]
[260, 263]
[256, 267]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.13577675819397

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10, 14] ccc => cc, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [14, 18] cc => I, Pos: [14, 18] cc => I, Pos: [22, 23, 30] ccc => cc, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [31, 38] cc => I, Pos: [31, 38] cc => I, Pos: [36, 40, 46] ccc => cc, Pos: [38, 53] cc => I, Pos: [38, 53] cc => I, Pos: [43, 56, 78] ccc => cc, Pos: [47, 59] cc => I, Pos: [47, 59] cc => I, Pos: [50, 55] cc => I, Pos: [50, 55] cc => I, Pos: [54, 61] cc => I, Pos: [54, 61] cc => I, Pos: [55, 63] cc => I, Pos: [55, 63] cc => I, Pos: [57, 62] cc => I, Pos: [57, 62] cc => I, Pos: [58, 75] cc => I, Pos: [58, 75] cc => I, Pos: [62, 74] cc => I, Pos: [62, 74] cc => I, Pos: [63, 73] cc => I, Pos: [63, 73] cc => I, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [65, 69, 79] ccc => cc, Pos: [66, 71] cc => I, Pos: [66, 71] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [71, 96] cc => I, Pos: [71, 96] cc => I, Pos: [72, 80] cc => I, Pos: [72, 80] cc => I, Pos: [80, 92] cc => I, Pos: [80, 92] cc => I, Pos: [81, 99] cc => I, Pos: [81, 99] cc => I, Pos: [83, 91] cc => I, Pos: [83, 91] cc => I, Pos: [87, 95] cc => I, Pos: [87, 95] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 104] cc => I, Pos: [89, 104] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [91, 97] cc => I, Pos: [91, 97] cc => I, Pos: [93, 100] cc => I, Pos: [93, 100] cc => I, Pos: [102, 107, 112] ccc => cc, Pos: [105, 111] cc => I, Pos: [105, 111] cc => I, Pos: [113, 119] cc => I, Pos: [113, 119] cc => I, Pos: [117, 122] cc => I, Pos: [117, 122] cc => I, Pos: [121, 123] cc => I, Pos: [121, 123] cc => I, Pos: [123, 139] cc => I, Pos: [123, 139] cc => I, Pos: [124, 138] cc => I, Pos: [124, 138] cc => I, Pos: [128, 134] cc => I, Pos: [128, 134] cc => I, Pos: [132, 136] cc => I, Pos: [132, 136] cc => I, Pos: [134, 141] cc => I, Pos: [134, 141] cc => I, Pos: [141, 155] cc => I, Pos: [141, 155] cc => I, Pos: [143, 150, 159] ccc => cc, Pos: [149, 157] cc => I, Pos: [149, 157] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [154, 174, 179] ccc => cc, Pos: [157, 165] cc => I, Pos: [157, 165] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [167, 172] cc => I, Pos: [167, 172] cc => I, Pos: [172, 177] cc => I, Pos: [172, 177] cc => I, Pos: [179, 204, 208] ccc => cc, Pos: [188, 193] cc => I, Pos: [188, 193] cc => I, Pos: [192, 199, 202] ccc => cc, Pos: [202, 216] cc => I, Pos: [202, 216] cc => I, Pos: [203, 207, 215] ccc => cc, Pos: [208, 213] cc => I, Pos: [208, 213] cc => I, Pos: [209, 211] cc => I, Pos: [209, 211] cc => I, Pos: [210, 214] cc => I, Pos: [210, 214] cc => I, Pos: [213, 218, 225] ccc => cc, Pos: [217, 221] cc => I, Pos: [217, 221] cc => I, Pos: [223, 228, 237] ccc => cc, Pos: [225, 227, 230] ccc => cc, Pos: [229, 234] cc => I, Pos: [229, 234] cc => I, Pos: [230, 238] cc => I, Pos: [230, 238] cc => I, Pos: [250, 255] cc => I, Pos: [250, 255] cc => I, Pos: [251, 257] cc => I, Pos: [251, 257] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [256, 267] cc => I, Pos: [256, 267] cc => I, Pos: [260, 263] cc => I, Pos: [260, 263] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 18] cc => I,
 Pos: [5, 11] cc => I,
 Pos: [22, 23, 30] ccc => cc,
 Pos: [31, 38] cc => I,
 Pos: [36, 40, 46] ccc => cc,
 Pos: [43, 56, 78] ccc => cc,
 Pos: [47, 59] cc => I,
 Pos: [50, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [57, 62] cc => I,
 Pos: [58, 75] cc => I,
 Pos: [63, 73] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [65, 69, 79] ccc => cc,
 Pos: [66, 71] cc => I,
 Pos: [72, 80] cc => I,
 Pos: [81, 99] cc => I,
 Pos: [83, 91] cc => I,
 Pos: [87, 95] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [89, 104] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [102, 107, 112] ccc => cc,
 Pos: [105, 111] cc => I,
 Pos: [113, 119] cc => I,
 Pos: [117, 122] cc => I,
 Pos: [123, 139] cc => I,
 Pos: [124, 138] cc => I,
 Pos: [134, 141] cc => I,
 Pos: [132, 136] cc => I,
 Pos: [143, 150, 159] ccc => cc,
 Pos: [149, 157] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [154, 174, 179] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [167, 172] cc => I,
 Pos: [188, 193] cc => I,
 Pos: [202, 216] cc => I,
 Pos: [203, 207, 215] ccc => cc,
 Pos: [213, 218, 225] ccc => cc,
 Pos: [209, 211] cc => I,
 Pos: [210, 214] cc => I,
 Pos: [217, 221] cc => I,
 Pos: [223, 228, 237] ccc => cc,
 Pos: [229, 234] cc => I,
 Pos: [230, 238] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [251, 257] cc => I,
 Pos: [256, 267] cc => I,
 Pos: [260, 263] cc => I]
Change: 50, Saving: 180

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [14, 18] cc => I
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [22, 23, 30] ccc => cc
Apply:  Pos: [31, 38] cc => I
Apply:  Pos: [36, 40, 46] ccc => cc
Apply:  Pos: [43, 56, 78] ccc => cc
Apply:  Pos: [47, 59] cc => I
Apply:  Pos: [50, 55] cc => I
Apply:  Pos: [54, 61] cc => I
Apply:  Pos: [57, 62] cc => I
Apply:  Pos: [58, 75] cc => I
Apply:  Pos: [63, 73] cc => I
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [65, 69, 79] ccc => cc
Apply:  Pos: [66, 71] cc => I
Apply:  Pos: [72, 80] cc => I
Apply:  Pos: [81, 99] cc => I
Apply:  Pos: [83, 91] cc => I
Apply:  Pos: [87, 95] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [89, 104] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [102, 107, 112] ccc => cc
Apply:  Pos: [105, 111] cc => I
Apply:  Pos: [113, 119] cc => I
Apply:  Pos: [117, 122] cc => I
Apply:  Pos: [123, 139] cc => I
Apply:  Pos: [124, 138] cc => I
Apply:  Pos: [134, 141] cc => I
Apply:  Pos: [132, 136] cc => I
Apply:  Pos: [143, 150, 159] ccc => cc
Apply:  Pos: [149, 157] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [154, 174, 179] ccc => cc
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [167, 172] cc => I
Apply:  Pos: [188, 193] cc => I
Apply:  Pos: [202, 216] cc => I
Apply:  Pos: [203, 207, 215] ccc => cc
Apply:  Pos: [213, 218, 225] ccc => cc
Apply:  Pos: [209, 211] cc => I
Apply:  Pos: [210, 214] cc => I
Apply:  Pos: [217, 221] cc => I
Apply:  Pos: [223, 228, 237] ccc => cc
Apply:  Pos: [229, 234] cc => I
Apply:  Pos: [230, 238] cc => I
Apply:  Pos: [255, 262] cc => I
Apply:  Pos: [251, 257] cc => I
Apply:  Pos: [256, 267] cc => I
Apply:  Pos: [260, 263] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [18, 16], [3, 16], [8, 1], [11, 7], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 12], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [2, 12], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [11, 7], [12, 13], [6, 14], [9, 1], [10, 14], [18, 3], [2, 0], [14, 4], [5, 7], [10, 3], [2, 19], [7, 4], [13, 9], [17, 10], [17, 18], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [8, 1], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [12, 19], [13, 9], [5, 7], [18, 16], [15, 16], [14, 5], [12, 13], [11, 7], [8, 1], [7, 4], [10, 14], [13, 1], [3, 14], [5, 4], [8, 1], [17, 18], [5, 7], [2, 12], [15, 2], [4, 9], [14, 7], [18, 3], [6, 7], [15, 16], [10, 3], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [2, 19], [17, 10], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [3, 6], [2, 12], [4, 9], [16, 5], [6, 11], [12, 19], [3, 6], [6, 11], [9, 1], [5, 4], [16, 13], [2, 0], [17, 10], [14, 4], [10, 6], [0, 19], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [17, 10], [15, 2], [18, 3], [16, 12], [5, 13], [0, 19], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [17, 10], [14, 7], ----End Timer [Execute Mapping]:  5.13577675819397

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 43]
[64, 83]
[118, 148]
[162, 178]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[28, 34, 36]
[135, 140, 142]
[151, 159, 167]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[140, 142, 143]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[84, 88, 91]
[95, 97, 100]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 43]
[64, 83]
[118, 148]
[162, 178]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.1879048347473145

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [21, 43] cc => I, Pos: [21, 43] cc => I, Pos: [28, 34, 36] ccc => cc, Pos: [64, 83] cc => I, Pos: [64, 83] cc => I, Pos: [84, 88, 91] ccc => cc, Pos: [95, 97, 100] ccc => cc, Pos: [118, 148] cc => I, Pos: [118, 148] cc => I, Pos: [135, 140, 142] ccc => cc, Pos: [140, 142, 143] ccc => cc, Pos: [151, 159, 167] ccc => cc, Pos: [162, 178] cc => I, Pos: [162, 178] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [21, 43] cc => I,
 Pos: [28, 34, 36] ccc => cc,
 Pos: [64, 83] cc => I,
 Pos: [84, 88, 91] ccc => cc,
 Pos: [95, 97, 100] ccc => cc,
 Pos: [118, 148] cc => I,
 Pos: [140, 142, 143] ccc => cc,
 Pos: [151, 159, 167] ccc => cc,
 Pos: [162, 178] cc => I]
Change: 9, Saving: 26

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [21, 43] cc => I
Apply:  Pos: [28, 34, 36] ccc => cc
Apply:  Pos: [64, 83] cc => I
Apply:  Pos: [84, 88, 91] ccc => cc
Apply:  Pos: [95, 97, 100] ccc => cc
Apply:  Pos: [118, 148] cc => I
Apply:  Pos: [140, 142, 143] ccc => cc
Apply:  Pos: [151, 159, 167] ccc => cc
Apply:  Pos: [162, 178] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [3, 16], [18, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [6, 14], [9, 1], [10, 14], [18, 3], [2, 0], [14, 4], [5, 7], [10, 3], [2, 19], [7, 4], [13, 9], [17, 18], [17, 10], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [12, 19], [13, 9], [5, 7], [15, 16], [18, 16], [14, 5], [12, 13], [11, 7], [5, 7], [10, 14], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [6, 14], [18, 3], [14, 7], [15, 16], [10, 3], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [2, 19], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 6], [3, 16], [2, 12], [4, 9], [16, 5], [3, 6], [12, 19], [6, 11], [9, 1], [5, 4], [16, 13], [2, 0], [14, 4], [10, 6], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  3.1879048347473145

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[75, 92]
[128, 132]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[73, 76, 78]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[75, 92]
[128, 132]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9219555854797363

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [73, 76, 78] ccc => cc, Pos: [75, 92] cc => I, Pos: [75, 92] cc => I, Pos: [128, 132] cc => I, Pos: [128, 132] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [73, 76, 78] ccc => cc, Pos: [75, 92] cc => I, Pos: [128, 132] cc => I]
Change: 3, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [73, 76, 78] ccc => cc
Apply:  Pos: [75, 92] cc => I
Apply:  Pos: [128, 132] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [18, 16], [3, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [2, 5], [16, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [6, 14], [9, 1], [10, 14], [18, 3], [2, 0], [14, 4], [5, 7], [10, 3], [2, 19], [7, 4], [13, 9], [17, 10], [17, 18], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [12, 19], [13, 9], [14, 5], [18, 16], [5, 7], [12, 13], [11, 7], [10, 14], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [6, 14], [18, 3], [14, 7], [10, 3], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [12, 19], [2, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [6, 11], [9, 1], [5, 4], [16, 13], [2, 0], [14, 4], [10, 6], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  2.9219555854797363

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.795750379562378

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [3, 16], [18, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [6, 14], [9, 1], [10, 14], [18, 3], [2, 0], [14, 4], [5, 7], [10, 3], [2, 19], [7, 4], [13, 9], [17, 18], [17, 10], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [12, 19], [13, 9], [14, 5], [18, 16], [5, 7], [12, 13], [11, 7], [10, 14], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [6, 14], [18, 3], [14, 7], [10, 3], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [2, 19], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [6, 11], [9, 1], [5, 4], [16, 13], [2, 0], [14, 4], [10, 6], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  2.795750379562378

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [162] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 324

Reduced: 
 - size: 108 (40.00%)
 - cycle: 216 (40.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374070167541504

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [11, 7], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [11, 7], [16, 13], [14, 7], [9, 1], [0, 12], [2, 19], [15, 16], [9, 1], [5, 7], [17, 10], [6, 11], [18, 3], [3, 16], [8, 1], [11, 7], [14, 4], [2, 0], [12, 5], [18, 15], [18, 3], [11, 7], [19, 8], [16, 5], [2, 12], [6, 14], [4, 9], [3, 14], [11, 7], [18, 16], [9, 1], [12, 5], [6, 14], [12, 13], [16, 5], [15, 3], [4, 9], [17, 18], [3, 14], [10, 6], [15, 16], [8, 1], [0, 19], [11, 7], [10, 3], [15, 16], [2, 12], [5, 7], [19, 8], [17, 18], [6, 14], [10, 3], [5, 7], [15, 16], [9, 1], [14, 4], [6, 11], [18, 3], [2, 0], [10, 14], [9, 1], [6, 11], [17, 18], [15, 16], [5, 7], [19, 8], [9, 1], [10, 3], [12, 13], [14, 4], [17, 18], [14, 5], [2, 19], [16, 12], [7, 4], [13, 9], [17, 10], [13, 1], [14, 4], [15, 3], [0, 19], [16, 12], [17, 18], [0, 19], [14, 4], [13, 1], [6, 11], [16, 12], [18, 16], [14, 5], [0, 19], [12, 13], [10, 6], [8, 1], [15, 3], [18, 15], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [18, 15], [10, 6], [13, 1], [2, 19], [14, 7], [16, 5], [15, 2], [3, 14], [13, 1], [7, 4], [12, 19], [15, 2], [12, 19], [3, 6], [13, 9], [5, 7], [18, 16], [15, 16], [14, 5], [12, 13], [11, 7], [2, 0], [8, 1], [15, 16], [7, 4], [2, 0], [10, 14], [3, 6], [12, 19], [13, 1], [15, 16], [3, 14], [4, 9], [8, 1], [17, 18], [5, 7], [2, 12], [15, 2], [13, 8], [5, 4], [0, 19], [14, 7], [18, 3], [6, 11], [15, 16], [0, 19], [13, 8], [10, 3], [4, 9], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [13, 8], [3, 16], [17, 18], [13, 8], [10, 14], [15, 16], [2, 0], [17, 18], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [6, 11], [14, 4], [13, 9], [2, 19], [17, 10], [12, 19], [5, 13], [15, 2], [18, 16], [10, 14], [8, 1], [7, 4], [12, 13], [17, 18], [10, 14], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [17, 18], [16, 5], [3, 6], [2, 12], [4, 9], [3, 16], [6, 11], [2, 0], [14, 4], [2, 0], [12, 19], [6, 11], [14, 4], [16, 5], [17, 18], [15, 2], [3, 6], [9, 1], [5, 4], [15, 2], [16, 13], [0, 19], [17, 10], [6, 11], [14, 4], [10, 6], [2, 19], [4, 9], [6, 11], [13, 1], [16, 12], [3, 14], [4, 9], [15, 16], [12, 13], [2, 0], [6, 11], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [17, 10], [15, 2], [18, 3], [16, 12], [5, 13], [0, 19], [8, 1], [10, 3], [5, 7], [6, 14], [2, 12], [8, 1], [13, 9], [10, 3], [14, 4], [16, 12], [6, 11], [2, 19], [8, 1], [6, 11], [16, 5], [0, 12], [15, 3], [13, 9], [17, 10], [14, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[14, 18]
[25, 31]
[31, 38]
[38, 53]
[50, 55]
[47, 59]
[54, 61]
[57, 62]
[55, 63]
[64, 70]
[66, 71]
[63, 73]
[62, 74]
[58, 75]
[70, 76]
[72, 80]
[83, 91]
[80, 92]
[90, 93]
[88, 94]
[87, 95]
[71, 96]
[91, 97]
[81, 99]
[93, 100]
[89, 104]
[105, 111]
[113, 119]
[117, 122]
[121, 123]
[128, 134]
[132, 136]
[124, 138]
[123, 139]
[134, 141]
[141, 155]
[151, 156]
[149, 157]
[157, 165]
[165, 168]
[167, 172]
[172, 177]
[188, 193]
[209, 211]
[208, 213]
[210, 214]
[202, 216]
[217, 221]
[229, 234]
[230, 238]
[250, 255]
[251, 257]
[255, 262]
[260, 263]
[256, 267]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[22, 23, 30]
[36, 40, 46]
[102, 107, 112]
[154, 174, 179]
[192, 199, 202]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[4, 10, 14]
[43, 56, 78]
[65, 69, 79]
[143, 150, 159]
[179, 204, 208]
[203, 207, 215]
[213, 218, 225]
[225, 227, 230]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[223, 228, 237]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[14, 18]
[25, 31]
[31, 38]
[38, 53]
[50, 55]
[47, 59]
[54, 61]
[57, 62]
[55, 63]
[64, 70]
[66, 71]
[63, 73]
[62, 74]
[58, 75]
[70, 76]
[72, 80]
[83, 91]
[80, 92]
[90, 93]
[88, 94]
[87, 95]
[71, 96]
[91, 97]
[81, 99]
[93, 100]
[89, 104]
[105, 111]
[113, 119]
[117, 122]
[121, 123]
[128, 134]
[132, 136]
[124, 138]
[123, 139]
[134, 141]
[141, 155]
[151, 156]
[149, 157]
[157, 165]
[165, 168]
[167, 172]
[172, 177]
[188, 193]
[209, 211]
[208, 213]
[210, 214]
[202, 216]
[217, 221]
[229, 234]
[230, 238]
[250, 255]
[251, 257]
[255, 262]
[260, 263]
[256, 267]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.231030464172363

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10, 14] ccc => cc, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [14, 18] cc => I, Pos: [14, 18] cc => I, Pos: [22, 23, 30] ccc => cc, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [31, 38] cc => I, Pos: [31, 38] cc => I, Pos: [36, 40, 46] ccc => cc, Pos: [38, 53] cc => I, Pos: [38, 53] cc => I, Pos: [43, 56, 78] ccc => cc, Pos: [47, 59] cc => I, Pos: [47, 59] cc => I, Pos: [50, 55] cc => I, Pos: [50, 55] cc => I, Pos: [54, 61] cc => I, Pos: [54, 61] cc => I, Pos: [55, 63] cc => I, Pos: [55, 63] cc => I, Pos: [57, 62] cc => I, Pos: [57, 62] cc => I, Pos: [58, 75] cc => I, Pos: [58, 75] cc => I, Pos: [62, 74] cc => I, Pos: [62, 74] cc => I, Pos: [63, 73] cc => I, Pos: [63, 73] cc => I, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [65, 69, 79] ccc => cc, Pos: [66, 71] cc => I, Pos: [66, 71] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [71, 96] cc => I, Pos: [71, 96] cc => I, Pos: [72, 80] cc => I, Pos: [72, 80] cc => I, Pos: [80, 92] cc => I, Pos: [80, 92] cc => I, Pos: [81, 99] cc => I, Pos: [81, 99] cc => I, Pos: [83, 91] cc => I, Pos: [83, 91] cc => I, Pos: [87, 95] cc => I, Pos: [87, 95] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 104] cc => I, Pos: [89, 104] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [91, 97] cc => I, Pos: [91, 97] cc => I, Pos: [93, 100] cc => I, Pos: [93, 100] cc => I, Pos: [102, 107, 112] ccc => cc, Pos: [105, 111] cc => I, Pos: [105, 111] cc => I, Pos: [113, 119] cc => I, Pos: [113, 119] cc => I, Pos: [117, 122] cc => I, Pos: [117, 122] cc => I, Pos: [121, 123] cc => I, Pos: [121, 123] cc => I, Pos: [123, 139] cc => I, Pos: [123, 139] cc => I, Pos: [124, 138] cc => I, Pos: [124, 138] cc => I, Pos: [128, 134] cc => I, Pos: [128, 134] cc => I, Pos: [132, 136] cc => I, Pos: [132, 136] cc => I, Pos: [134, 141] cc => I, Pos: [134, 141] cc => I, Pos: [141, 155] cc => I, Pos: [141, 155] cc => I, Pos: [143, 150, 159] ccc => cc, Pos: [149, 157] cc => I, Pos: [149, 157] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [154, 174, 179] ccc => cc, Pos: [157, 165] cc => I, Pos: [157, 165] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [167, 172] cc => I, Pos: [167, 172] cc => I, Pos: [172, 177] cc => I, Pos: [172, 177] cc => I, Pos: [179, 204, 208] ccc => cc, Pos: [188, 193] cc => I, Pos: [188, 193] cc => I, Pos: [192, 199, 202] ccc => cc, Pos: [202, 216] cc => I, Pos: [202, 216] cc => I, Pos: [203, 207, 215] ccc => cc, Pos: [208, 213] cc => I, Pos: [208, 213] cc => I, Pos: [209, 211] cc => I, Pos: [209, 211] cc => I, Pos: [210, 214] cc => I, Pos: [210, 214] cc => I, Pos: [213, 218, 225] ccc => cc, Pos: [217, 221] cc => I, Pos: [217, 221] cc => I, Pos: [223, 228, 237] ccc => cc, Pos: [225, 227, 230] ccc => cc, Pos: [229, 234] cc => I, Pos: [229, 234] cc => I, Pos: [230, 238] cc => I, Pos: [230, 238] cc => I, Pos: [250, 255] cc => I, Pos: [250, 255] cc => I, Pos: [251, 257] cc => I, Pos: [251, 257] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [256, 267] cc => I, Pos: [256, 267] cc => I, Pos: [260, 263] cc => I, Pos: [260, 263] cc => I]

--------End Timer [Generate Plans]:  0.14060330390930176

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 10, 14] ccc => cc,
 Pos: [5, 11] cc => I,
 Pos: [22, 23, 30] ccc => cc,
 Pos: [25, 31] cc => I,
 Pos: [36, 40, 46] ccc => cc,
 Pos: [38, 53] cc => I,
 Pos: [43, 56, 78] ccc => cc,
 Pos: [47, 59] cc => I,
 Pos: [55, 63] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [62, 74] cc => I,
 Pos: [58, 75] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [65, 69, 79] ccc => cc,
 Pos: [66, 71] cc => I,
 Pos: [80, 92] cc => I,
 Pos: [81, 99] cc => I,
 Pos: [83, 91] cc => I,
 Pos: [87, 95] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [89, 104] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [102, 107, 112] ccc => cc,
 Pos: [105, 111] cc => I,
 Pos: [113, 119] cc => I,
 Pos: [117, 122] cc => I,
 Pos: [123, 139] cc => I,
 Pos: [124, 138] cc => I,
 Pos: [128, 134] cc => I,
 Pos: [132, 136] cc => I,
 Pos: [141, 155] cc => I,
 Pos: [143, 150, 159] ccc => cc,
 Pos: [149, 157] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [154, 174, 179] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [167, 172] cc => I,
 Pos: [188, 193] cc => I,
 Pos: [202, 216] cc => I,
 Pos: [203, 207, 215] ccc => cc,
 Pos: [208, 213] cc => I,
 Pos: [209, 211] cc => I,
 Pos: [210, 214] cc => I,
 Pos: [217, 221] cc => I,
 Pos: [223, 228, 237] ccc => cc,
 Pos: [230, 238] cc => I,
 Pos: [229, 234] cc => I,
 Pos: [250, 255] cc => I,
 Pos: [251, 257] cc => I,
 Pos: [256, 267] cc => I,
 Pos: [260, 263] cc => I]
Change: 51, Saving: 53

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 10, 14] ccc => cc
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [22, 23, 30] ccc => cc
Apply:  Pos: [25, 31] cc => I
Apply:  Pos: [36, 40, 46] ccc => cc
Apply:  Pos: [38, 53] cc => I
Apply:  Pos: [43, 56, 78] ccc => cc
Apply:  Pos: [47, 59] cc => I
Apply:  Pos: [55, 63] cc => I
Apply:  Pos: [54, 61] cc => I
Apply:  Pos: [62, 74] cc => I
Apply:  Pos: [58, 75] cc => I
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [65, 69, 79] ccc => cc
Apply:  Pos: [66, 71] cc => I
Apply:  Pos: [80, 92] cc => I
Apply:  Pos: [81, 99] cc => I
Apply:  Pos: [83, 91] cc => I
Apply:  Pos: [87, 95] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [89, 104] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [102, 107, 112] ccc => cc
Apply:  Pos: [105, 111] cc => I
Apply:  Pos: [113, 119] cc => I
Apply:  Pos: [117, 122] cc => I
Apply:  Pos: [123, 139] cc => I
Apply:  Pos: [124, 138] cc => I
Apply:  Pos: [128, 134] cc => I
Apply:  Pos: [132, 136] cc => I
Apply:  Pos: [141, 155] cc => I
Apply:  Pos: [143, 150, 159] ccc => cc
Apply:  Pos: [149, 157] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [154, 174, 179] ccc => cc
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [167, 172] cc => I
Apply:  Pos: [188, 193] cc => I
Apply:  Pos: [202, 216] cc => I
Apply:  Pos: [203, 207, 215] ccc => cc
Apply:  Pos: [208, 213] cc => I
Apply:  Pos: [209, 211] cc => I
Apply:  Pos: [210, 214] cc => I
Apply:  Pos: [217, 221] cc => I
Apply:  Pos: [223, 228, 237] ccc => cc
Apply:  Pos: [230, 238] cc => I
Apply:  Pos: [229, 234] cc => I
Apply:  Pos: [250, 255] cc => I
Apply:  Pos: [251, 257] cc => I
Apply:  Pos: [256, 267] cc => I
Apply:  Pos: [260, 263] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [9, 1], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [9, 1], [5, 7], [17, 10], [6, 11], [18, 16], [3, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 12], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [2, 12], [16, 5], [15, 3], [3, 14], [10, 6], [15, 16], [8, 1], [0, 19], [12, 13], [5, 7], [6, 14], [9, 1], [10, 14], [18, 3], [2, 0], [14, 4], [17, 18], [15, 16], [10, 3], [2, 19], [7, 4], [13, 9], [17, 10], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [8, 1], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [12, 19], [13, 9], [5, 7], [18, 16], [14, 5], [12, 13], [11, 7], [8, 1], [7, 4], [10, 14], [13, 1], [3, 14], [5, 4], [8, 1], [17, 18], [5, 7], [2, 12], [15, 2], [4, 9], [14, 7], [18, 3], [6, 7], [10, 3], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [2, 19], [17, 10], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [3, 6], [2, 12], [4, 9], [16, 5], [12, 19], [3, 6], [9, 1], [5, 4], [16, 13], [2, 0], [17, 10], [6, 11], [14, 4], [10, 6], [0, 19], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [17, 10], [15, 2], [18, 3], [16, 12], [5, 13], [0, 19], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [8, 1], [16, 5], [0, 12], [15, 3], [17, 10], [14, 7], ----End Timer [Execute Mapping]:  5.371633768081665

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 15]
[41, 53]
[65, 83]
[134, 140]
[117, 145]
[160, 176]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[28, 34, 36]
[149, 157, 165]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[84, 88, 91]
[95, 97, 99]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 15]
[41, 53]
[65, 83]
[134, 140]
[117, 145]
[160, 176]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.1740834712982178

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [9, 15] cc => I, Pos: [9, 15] cc => I, Pos: [28, 34, 36] ccc => cc, Pos: [41, 53] cc => I, Pos: [41, 53] cc => I, Pos: [65, 83] cc => I, Pos: [65, 83] cc => I, Pos: [84, 88, 91] ccc => cc, Pos: [95, 97, 99] ccc => cc, Pos: [117, 145] cc => I, Pos: [117, 145] cc => I, Pos: [134, 140] cc => I, Pos: [134, 140] cc => I, Pos: [149, 157, 165] ccc => cc, Pos: [160, 176] cc => I, Pos: [160, 176] cc => I]

--------End Timer [Generate Plans]:  0.0156252384185791

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 15] cc => I,
 Pos: [28, 34, 36] ccc => cc,
 Pos: [41, 53] cc => I,
 Pos: [65, 83] cc => I,
 Pos: [84, 88, 91] ccc => cc,
 Pos: [95, 97, 99] ccc => cc,
 Pos: [117, 145] cc => I,
 Pos: [134, 140] cc => I,
 Pos: [149, 157, 165] ccc => cc,
 Pos: [160, 176] cc => I]
Change: 10, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 15] cc => I
Apply:  Pos: [28, 34, 36] ccc => cc
Apply:  Pos: [41, 53] cc => I
Apply:  Pos: [65, 83] cc => I
Apply:  Pos: [84, 88, 91] ccc => cc
Apply:  Pos: [95, 97, 99] ccc => cc
Apply:  Pos: [117, 145] cc => I
Apply:  Pos: [134, 140] cc => I
Apply:  Pos: [149, 157, 165] ccc => cc
Apply:  Pos: [160, 176] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [3, 16], [18, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [5, 7], [6, 14], [9, 1], [10, 14], [18, 3], [2, 0], [14, 4], [17, 18], [10, 3], [2, 19], [7, 4], [13, 9], [17, 10], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [12, 19], [13, 9], [5, 7], [18, 16], [14, 5], [12, 13], [11, 7], [5, 7], [10, 14], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [6, 14], [18, 3], [14, 7], [10, 3], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [2, 19], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [9, 1], [5, 4], [16, 13], [2, 0], [6, 11], [14, 4], [10, 6], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [8, 1], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  3.189708709716797

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[72, 74, 76]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.828481674194336

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [72, 74, 76] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [72, 74, 76] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [72, 74, 76] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [18, 16], [3, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [2, 5], [16, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [5, 7], [6, 14], [9, 1], [10, 14], [18, 3], [2, 0], [14, 4], [17, 18], [10, 3], [2, 19], [7, 4], [13, 9], [17, 10], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [12, 19], [13, 9], [14, 5], [18, 16], [5, 7], [12, 13], [11, 7], [10, 14], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [6, 14], [18, 3], [14, 7], [10, 3], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [12, 19], [2, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [9, 1], [5, 4], [16, 13], [2, 0], [6, 11], [14, 4], [10, 6], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 7], [5, 13], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [8, 1], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  2.828481674194336

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.79762601852417

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [3, 16], [18, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [5, 7], [6, 14], [9, 1], [10, 14], [18, 3], [2, 0], [14, 4], [17, 18], [10, 3], [2, 19], [7, 4], [13, 9], [17, 10], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [12, 19], [13, 9], [14, 5], [18, 16], [5, 7], [12, 13], [11, 7], [10, 14], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [6, 14], [18, 3], [14, 7], [10, 3], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [2, 19], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [9, 1], [5, 4], [16, 13], [2, 0], [6, 11], [14, 4], [10, 6], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [8, 1], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  2.79762601852417

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [161] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 322

Reduced: 
 - size: 109 (40.37%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12416219711303711

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [11, 7], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [11, 7], [16, 13], [14, 7], [9, 1], [0, 12], [2, 19], [15, 16], [9, 1], [5, 7], [17, 10], [6, 11], [18, 3], [3, 16], [8, 1], [11, 7], [14, 4], [2, 0], [12, 5], [18, 15], [18, 3], [11, 7], [19, 8], [16, 5], [2, 12], [6, 14], [4, 9], [3, 14], [11, 7], [18, 16], [9, 1], [12, 5], [6, 14], [12, 13], [16, 5], [15, 3], [4, 9], [17, 18], [3, 14], [10, 6], [15, 16], [8, 1], [0, 19], [11, 7], [10, 3], [15, 16], [2, 12], [5, 7], [19, 8], [17, 18], [6, 14], [10, 3], [5, 7], [15, 16], [9, 1], [14, 4], [6, 11], [18, 3], [2, 0], [10, 14], [9, 1], [6, 11], [17, 18], [15, 16], [5, 7], [19, 8], [9, 1], [10, 3], [12, 13], [14, 4], [17, 18], [14, 5], [2, 19], [16, 12], [7, 4], [13, 9], [17, 10], [13, 1], [14, 4], [15, 3], [0, 19], [16, 12], [17, 18], [0, 19], [14, 4], [13, 1], [6, 11], [16, 12], [18, 16], [14, 5], [0, 19], [12, 13], [10, 6], [8, 1], [15, 3], [18, 15], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [18, 15], [10, 6], [13, 1], [2, 19], [14, 7], [16, 5], [15, 2], [3, 14], [13, 1], [7, 4], [12, 19], [15, 2], [12, 19], [3, 6], [13, 9], [5, 7], [18, 16], [15, 16], [14, 5], [12, 13], [11, 7], [2, 0], [8, 1], [15, 16], [7, 4], [2, 0], [10, 14], [3, 6], [12, 19], [13, 1], [15, 16], [3, 14], [4, 9], [8, 1], [17, 18], [5, 7], [2, 12], [15, 2], [13, 8], [5, 4], [0, 19], [14, 7], [18, 3], [6, 11], [15, 16], [0, 19], [13, 8], [10, 3], [4, 9], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [13, 8], [3, 16], [17, 18], [13, 8], [10, 14], [15, 16], [2, 0], [17, 18], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [6, 11], [14, 4], [13, 9], [2, 19], [17, 10], [12, 19], [5, 13], [15, 2], [18, 16], [10, 14], [8, 1], [7, 4], [12, 13], [17, 18], [10, 14], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [17, 18], [16, 5], [3, 6], [2, 12], [4, 9], [3, 16], [6, 11], [2, 0], [14, 4], [2, 0], [12, 19], [6, 11], [14, 4], [16, 5], [17, 18], [15, 2], [3, 6], [9, 1], [5, 4], [15, 2], [16, 13], [0, 19], [17, 10], [6, 11], [14, 4], [10, 6], [2, 19], [4, 9], [6, 11], [13, 1], [16, 12], [3, 14], [4, 9], [15, 16], [12, 13], [2, 0], [6, 11], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [17, 10], [15, 2], [18, 3], [16, 12], [5, 13], [0, 19], [8, 1], [10, 3], [5, 7], [6, 14], [2, 12], [8, 1], [13, 9], [10, 3], [14, 4], [16, 12], [6, 11], [2, 19], [8, 1], [6, 11], [16, 5], [0, 12], [15, 3], [13, 9], [17, 10], [14, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[14, 18]
[25, 31]
[31, 38]
[38, 53]
[50, 55]
[47, 59]
[54, 61]
[57, 62]
[55, 63]
[64, 70]
[66, 71]
[63, 73]
[62, 74]
[58, 75]
[70, 76]
[72, 80]
[83, 91]
[80, 92]
[90, 93]
[88, 94]
[87, 95]
[71, 96]
[91, 97]
[81, 99]
[93, 100]
[89, 104]
[105, 111]
[113, 119]
[117, 122]
[121, 123]
[128, 134]
[132, 136]
[124, 138]
[123, 139]
[134, 141]
[141, 155]
[151, 156]
[149, 157]
[157, 165]
[165, 168]
[167, 172]
[172, 177]
[188, 193]
[209, 211]
[208, 213]
[210, 214]
[202, 216]
[217, 221]
[229, 234]
[230, 238]
[250, 255]
[251, 257]
[255, 262]
[260, 263]
[256, 267]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[22, 23, 30]
[36, 40, 46]
[102, 107, 112]
[154, 174, 179]
[192, 199, 202]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[4, 10, 14]
[43, 56, 78]
[65, 69, 79]
[143, 150, 159]
[179, 204, 208]
[203, 207, 215]
[213, 218, 225]
[225, 227, 230]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[223, 228, 237]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[14, 18]
[25, 31]
[31, 38]
[38, 53]
[50, 55]
[47, 59]
[54, 61]
[57, 62]
[55, 63]
[64, 70]
[66, 71]
[63, 73]
[62, 74]
[58, 75]
[70, 76]
[72, 80]
[83, 91]
[80, 92]
[90, 93]
[88, 94]
[87, 95]
[71, 96]
[91, 97]
[81, 99]
[93, 100]
[89, 104]
[105, 111]
[113, 119]
[117, 122]
[121, 123]
[128, 134]
[132, 136]
[124, 138]
[123, 139]
[134, 141]
[141, 155]
[151, 156]
[149, 157]
[157, 165]
[165, 168]
[167, 172]
[172, 177]
[188, 193]
[209, 211]
[208, 213]
[210, 214]
[202, 216]
[217, 221]
[229, 234]
[230, 238]
[250, 255]
[251, 257]
[255, 262]
[260, 263]
[256, 267]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.234402894973755

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10, 14] ccc => cc, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [14, 18] cc => I, Pos: [14, 18] cc => I, Pos: [22, 23, 30] ccc => cc, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [31, 38] cc => I, Pos: [31, 38] cc => I, Pos: [36, 40, 46] ccc => cc, Pos: [38, 53] cc => I, Pos: [38, 53] cc => I, Pos: [43, 56, 78] ccc => cc, Pos: [47, 59] cc => I, Pos: [47, 59] cc => I, Pos: [50, 55] cc => I, Pos: [50, 55] cc => I, Pos: [54, 61] cc => I, Pos: [54, 61] cc => I, Pos: [55, 63] cc => I, Pos: [55, 63] cc => I, Pos: [57, 62] cc => I, Pos: [57, 62] cc => I, Pos: [58, 75] cc => I, Pos: [58, 75] cc => I, Pos: [62, 74] cc => I, Pos: [62, 74] cc => I, Pos: [63, 73] cc => I, Pos: [63, 73] cc => I, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [65, 69, 79] ccc => cc, Pos: [66, 71] cc => I, Pos: [66, 71] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [71, 96] cc => I, Pos: [71, 96] cc => I, Pos: [72, 80] cc => I, Pos: [72, 80] cc => I, Pos: [80, 92] cc => I, Pos: [80, 92] cc => I, Pos: [81, 99] cc => I, Pos: [81, 99] cc => I, Pos: [83, 91] cc => I, Pos: [83, 91] cc => I, Pos: [87, 95] cc => I, Pos: [87, 95] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 104] cc => I, Pos: [89, 104] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [91, 97] cc => I, Pos: [91, 97] cc => I, Pos: [93, 100] cc => I, Pos: [93, 100] cc => I, Pos: [102, 107, 112] ccc => cc, Pos: [105, 111] cc => I, Pos: [105, 111] cc => I, Pos: [113, 119] cc => I, Pos: [113, 119] cc => I, Pos: [117, 122] cc => I, Pos: [117, 122] cc => I, Pos: [121, 123] cc => I, Pos: [121, 123] cc => I, Pos: [123, 139] cc => I, Pos: [123, 139] cc => I, Pos: [124, 138] cc => I, Pos: [124, 138] cc => I, Pos: [128, 134] cc => I, Pos: [128, 134] cc => I, Pos: [132, 136] cc => I, Pos: [132, 136] cc => I, Pos: [134, 141] cc => I, Pos: [134, 141] cc => I, Pos: [141, 155] cc => I, Pos: [141, 155] cc => I, Pos: [143, 150, 159] ccc => cc, Pos: [149, 157] cc => I, Pos: [149, 157] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [154, 174, 179] ccc => cc, Pos: [157, 165] cc => I, Pos: [157, 165] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [167, 172] cc => I, Pos: [167, 172] cc => I, Pos: [172, 177] cc => I, Pos: [172, 177] cc => I, Pos: [179, 204, 208] ccc => cc, Pos: [188, 193] cc => I, Pos: [188, 193] cc => I, Pos: [192, 199, 202] ccc => cc, Pos: [202, 216] cc => I, Pos: [202, 216] cc => I, Pos: [203, 207, 215] ccc => cc, Pos: [208, 213] cc => I, Pos: [208, 213] cc => I, Pos: [209, 211] cc => I, Pos: [209, 211] cc => I, Pos: [210, 214] cc => I, Pos: [210, 214] cc => I, Pos: [213, 218, 225] ccc => cc, Pos: [217, 221] cc => I, Pos: [217, 221] cc => I, Pos: [223, 228, 237] ccc => cc, Pos: [225, 227, 230] ccc => cc, Pos: [229, 234] cc => I, Pos: [229, 234] cc => I, Pos: [230, 238] cc => I, Pos: [230, 238] cc => I, Pos: [250, 255] cc => I, Pos: [250, 255] cc => I, Pos: [251, 257] cc => I, Pos: [251, 257] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [256, 267] cc => I, Pos: [256, 267] cc => I, Pos: [260, 263] cc => I, Pos: [260, 263] cc => I]

--------End Timer [Generate Plans]:  0.12499022483825684

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 10, 14] ccc => cc,
 Pos: [5, 11] cc => I,
 Pos: [22, 23, 30] ccc => cc,
 Pos: [31, 38] cc => I,
 Pos: [36, 40, 46] ccc => cc,
 Pos: [43, 56, 78] ccc => cc,
 Pos: [47, 59] cc => I,
 Pos: [55, 63] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [62, 74] cc => I,
 Pos: [58, 75] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [65, 69, 79] ccc => cc,
 Pos: [71, 96] cc => I,
 Pos: [80, 92] cc => I,
 Pos: [81, 99] cc => I,
 Pos: [83, 91] cc => I,
 Pos: [87, 95] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [89, 104] cc => I,
 Pos: [93, 100] cc => I,
 Pos: [102, 107, 112] ccc => cc,
 Pos: [105, 111] cc => I,
 Pos: [113, 119] cc => I,
 Pos: [117, 122] cc => I,
 Pos: [121, 123] cc => I,
 Pos: [124, 138] cc => I,
 Pos: [134, 141] cc => I,
 Pos: [132, 136] cc => I,
 Pos: [143, 150, 159] ccc => cc,
 Pos: [157, 165] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [154, 174, 179] ccc => cc,
 Pos: [172, 177] cc => I,
 Pos: [188, 193] cc => I,
 Pos: [202, 216] cc => I,
 Pos: [203, 207, 215] ccc => cc,
 Pos: [208, 213] cc => I,
 Pos: [209, 211] cc => I,
 Pos: [210, 214] cc => I,
 Pos: [217, 221] cc => I,
 Pos: [223, 228, 237] ccc => cc,
 Pos: [230, 238] cc => I,
 Pos: [229, 234] cc => I,
 Pos: [250, 255] cc => I,
 Pos: [251, 257] cc => I,
 Pos: [256, 267] cc => I,
 Pos: [260, 263] cc => I]
Change: 48, Saving: 50

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 10, 14] ccc => cc
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [22, 23, 30] ccc => cc
Apply:  Pos: [31, 38] cc => I
Apply:  Pos: [36, 40, 46] ccc => cc
Apply:  Pos: [43, 56, 78] ccc => cc
Apply:  Pos: [47, 59] cc => I
Apply:  Pos: [55, 63] cc => I
Apply:  Pos: [54, 61] cc => I
Apply:  Pos: [62, 74] cc => I
Apply:  Pos: [58, 75] cc => I
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [65, 69, 79] ccc => cc
Apply:  Pos: [71, 96] cc => I
Apply:  Pos: [80, 92] cc => I
Apply:  Pos: [81, 99] cc => I
Apply:  Pos: [83, 91] cc => I
Apply:  Pos: [87, 95] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [89, 104] cc => I
Apply:  Pos: [93, 100] cc => I
Apply:  Pos: [102, 107, 112] ccc => cc
Apply:  Pos: [105, 111] cc => I
Apply:  Pos: [113, 119] cc => I
Apply:  Pos: [117, 122] cc => I
Apply:  Pos: [121, 123] cc => I
Apply:  Pos: [124, 138] cc => I
Apply:  Pos: [134, 141] cc => I
Apply:  Pos: [132, 136] cc => I
Apply:  Pos: [143, 150, 159] ccc => cc
Apply:  Pos: [157, 165] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [154, 174, 179] ccc => cc
Apply:  Pos: [172, 177] cc => I
Apply:  Pos: [188, 193] cc => I
Apply:  Pos: [202, 216] cc => I
Apply:  Pos: [203, 207, 215] ccc => cc
Apply:  Pos: [208, 213] cc => I
Apply:  Pos: [209, 211] cc => I
Apply:  Pos: [210, 214] cc => I
Apply:  Pos: [217, 221] cc => I
Apply:  Pos: [223, 228, 237] ccc => cc
Apply:  Pos: [230, 238] cc => I
Apply:  Pos: [229, 234] cc => I
Apply:  Pos: [250, 255] cc => I
Apply:  Pos: [251, 257] cc => I
Apply:  Pos: [256, 267] cc => I
Apply:  Pos: [260, 263] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [9, 1], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [9, 1], [5, 7], [17, 10], [6, 11], [18, 16], [3, 16], [8, 1], [11, 7], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 12], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [2, 12], [16, 5], [15, 3], [3, 14], [10, 6], [15, 16], [8, 1], [0, 19], [11, 7], [12, 13], [5, 7], [6, 14], [10, 14], [6, 11], [18, 3], [2, 0], [14, 4], [17, 18], [15, 16], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 10], [0, 19], [16, 12], [18, 16], [12, 13], [10, 14], [8, 1], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [5, 7], [18, 16], [15, 16], [14, 5], [12, 13], [11, 7], [8, 1], [7, 4], [10, 14], [12, 19], [13, 1], [3, 14], [5, 4], [8, 1], [17, 18], [5, 7], [2, 12], [15, 2], [13, 8], [4, 9], [14, 7], [18, 3], [6, 7], [15, 16], [10, 3], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [17, 18], [13, 8], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [16, 12], [14, 4], [13, 9], [2, 19], [17, 10], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [3, 6], [2, 12], [4, 9], [16, 5], [12, 19], [3, 6], [9, 1], [5, 4], [16, 13], [2, 0], [17, 10], [6, 11], [14, 4], [10, 6], [0, 19], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [17, 10], [15, 2], [18, 3], [16, 12], [5, 13], [0, 19], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [8, 1], [16, 5], [0, 12], [15, 3], [17, 10], [14, 7], ----End Timer [Execute Mapping]:  5.359393119812012

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 15]
[22, 45]
[42, 55]
[67, 85]
[97, 111]
[140, 146]
[123, 151]
[166, 182]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[29, 35, 37]
[155, 163, 171]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[86, 91, 94]
[99, 101, 104]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 15]
[22, 45]
[42, 55]
[67, 85]
[97, 111]
[140, 146]
[123, 151]
[166, 182]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.296912431716919

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [9, 15] cc => I, Pos: [9, 15] cc => I, Pos: [22, 45] cc => I, Pos: [22, 45] cc => I, Pos: [29, 35, 37] ccc => cc, Pos: [42, 55] cc => I, Pos: [42, 55] cc => I, Pos: [67, 85] cc => I, Pos: [67, 85] cc => I, Pos: [86, 91, 94] ccc => cc, Pos: [97, 111] cc => I, Pos: [97, 111] cc => I, Pos: [99, 101, 104] ccc => cc, Pos: [123, 151] cc => I, Pos: [123, 151] cc => I, Pos: [140, 146] cc => I, Pos: [140, 146] cc => I, Pos: [155, 163, 171] ccc => cc, Pos: [166, 182] cc => I, Pos: [166, 182] cc => I]

--------End Timer [Generate Plans]:  0.03126072883605957

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 15] cc => I,
 Pos: [22, 45] cc => I,
 Pos: [29, 35, 37] ccc => cc,
 Pos: [42, 55] cc => I,
 Pos: [67, 85] cc => I,
 Pos: [86, 91, 94] ccc => cc,
 Pos: [97, 111] cc => I,
 Pos: [99, 101, 104] ccc => cc,
 Pos: [123, 151] cc => I,
 Pos: [140, 146] cc => I,
 Pos: [155, 163, 171] ccc => cc,
 Pos: [166, 182] cc => I]
Change: 12, Saving: 12

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 15] cc => I
Apply:  Pos: [22, 45] cc => I
Apply:  Pos: [29, 35, 37] ccc => cc
Apply:  Pos: [42, 55] cc => I
Apply:  Pos: [67, 85] cc => I
Apply:  Pos: [86, 91, 94] ccc => cc
Apply:  Pos: [97, 111] cc => I
Apply:  Pos: [99, 101, 104] ccc => cc
Apply:  Pos: [123, 151] cc => I
Apply:  Pos: [140, 146] cc => I
Apply:  Pos: [155, 163, 171] ccc => cc
Apply:  Pos: [166, 182] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [3, 16], [18, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [5, 7], [10, 14], [6, 11], [6, 14], [18, 3], [2, 0], [14, 4], [17, 18], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 10], [0, 19], [16, 12], [18, 16], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [5, 7], [15, 16], [18, 16], [14, 5], [12, 13], [11, 7], [5, 7], [10, 14], [12, 19], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [6, 14], [18, 3], [14, 7], [15, 16], [10, 3], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [17, 18], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [16, 12], [14, 4], [13, 9], [2, 19], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [9, 1], [5, 4], [16, 13], [2, 0], [6, 11], [14, 4], [10, 6], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [8, 1], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  3.3281731605529785

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[73, 91]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[71, 74, 76]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[73, 91]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.843714475631714

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [71, 74, 76] ccc => cc, Pos: [73, 91] cc => I, Pos: [73, 91] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [71, 74, 76] ccc => cc, Pos: [73, 91] cc => I]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [71, 74, 76] ccc => cc
Apply:  Pos: [73, 91] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [18, 16], [3, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [2, 5], [16, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [5, 7], [10, 14], [6, 14], [6, 11], [18, 3], [2, 0], [14, 4], [17, 18], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 10], [0, 19], [16, 12], [18, 16], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [14, 5], [18, 16], [5, 7], [12, 13], [11, 7], [10, 14], [12, 19], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [6, 14], [18, 3], [14, 7], [10, 3], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [17, 18], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [16, 12], [14, 4], [13, 9], [12, 19], [2, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [9, 1], [5, 4], [16, 13], [2, 0], [6, 11], [14, 4], [10, 6], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 7], [5, 13], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [8, 1], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  2.843714475631714

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.781243324279785

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [3, 16], [18, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [5, 7], [6, 14], [10, 14], [6, 11], [18, 3], [2, 0], [14, 4], [17, 18], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 10], [0, 19], [16, 12], [18, 16], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [14, 5], [18, 16], [5, 7], [12, 13], [11, 7], [10, 14], [12, 19], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [6, 14], [18, 3], [14, 7], [10, 3], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [17, 18], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [16, 12], [14, 4], [13, 9], [2, 19], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [9, 1], [5, 4], [16, 13], [2, 0], [6, 11], [14, 4], [10, 6], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [8, 1], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  2.781243324279785

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [161] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 322

Reduced: 
 - size: 109 (40.37%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936260223388672

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [11, 7], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [11, 7], [16, 13], [14, 7], [9, 1], [0, 12], [2, 19], [15, 16], [9, 1], [5, 7], [17, 10], [6, 11], [18, 3], [3, 16], [8, 1], [11, 7], [14, 4], [2, 0], [12, 5], [18, 15], [18, 3], [11, 7], [19, 8], [16, 5], [2, 12], [6, 14], [4, 9], [3, 14], [11, 7], [18, 16], [9, 1], [12, 5], [6, 14], [12, 13], [16, 5], [15, 3], [4, 9], [17, 18], [3, 14], [10, 6], [15, 16], [8, 1], [0, 19], [11, 7], [10, 3], [15, 16], [2, 12], [5, 7], [19, 8], [17, 18], [6, 14], [10, 3], [5, 7], [15, 16], [9, 1], [14, 4], [6, 11], [18, 3], [2, 0], [10, 14], [9, 1], [6, 11], [17, 18], [15, 16], [5, 7], [19, 8], [9, 1], [10, 3], [12, 13], [14, 4], [17, 18], [14, 5], [2, 19], [16, 12], [7, 4], [13, 9], [17, 10], [13, 1], [14, 4], [15, 3], [0, 19], [16, 12], [17, 18], [0, 19], [14, 4], [13, 1], [6, 11], [16, 12], [18, 16], [14, 5], [0, 19], [12, 13], [10, 6], [8, 1], [15, 3], [18, 15], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [18, 15], [10, 6], [13, 1], [2, 19], [14, 7], [16, 5], [15, 2], [3, 14], [13, 1], [7, 4], [12, 19], [15, 2], [12, 19], [3, 6], [13, 9], [5, 7], [18, 16], [15, 16], [14, 5], [12, 13], [11, 7], [2, 0], [8, 1], [15, 16], [7, 4], [2, 0], [10, 14], [3, 6], [12, 19], [13, 1], [15, 16], [3, 14], [4, 9], [8, 1], [17, 18], [5, 7], [2, 12], [15, 2], [13, 8], [5, 4], [0, 19], [14, 7], [18, 3], [6, 11], [15, 16], [0, 19], [13, 8], [10, 3], [4, 9], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [13, 8], [3, 16], [17, 18], [13, 8], [10, 14], [15, 16], [2, 0], [17, 18], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [6, 11], [14, 4], [13, 9], [2, 19], [17, 10], [12, 19], [5, 13], [15, 2], [18, 16], [10, 14], [8, 1], [7, 4], [12, 13], [17, 18], [10, 14], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [17, 18], [16, 5], [3, 6], [2, 12], [4, 9], [3, 16], [6, 11], [2, 0], [14, 4], [2, 0], [12, 19], [6, 11], [14, 4], [16, 5], [17, 18], [15, 2], [3, 6], [9, 1], [5, 4], [15, 2], [16, 13], [0, 19], [17, 10], [6, 11], [14, 4], [10, 6], [2, 19], [4, 9], [6, 11], [13, 1], [16, 12], [3, 14], [4, 9], [15, 16], [12, 13], [2, 0], [6, 11], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [17, 10], [15, 2], [18, 3], [16, 12], [5, 13], [0, 19], [8, 1], [10, 3], [5, 7], [6, 14], [2, 12], [8, 1], [13, 9], [10, 3], [14, 4], [16, 12], [6, 11], [2, 19], [8, 1], [6, 11], [16, 5], [0, 12], [15, 3], [13, 9], [17, 10], [14, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[14, 18]
[25, 31]
[31, 38]
[38, 53]
[50, 55]
[47, 59]
[54, 61]
[57, 62]
[55, 63]
[64, 70]
[66, 71]
[63, 73]
[62, 74]
[58, 75]
[70, 76]
[72, 80]
[83, 91]
[80, 92]
[90, 93]
[88, 94]
[87, 95]
[71, 96]
[91, 97]
[81, 99]
[93, 100]
[89, 104]
[105, 111]
[113, 119]
[117, 122]
[121, 123]
[128, 134]
[132, 136]
[124, 138]
[123, 139]
[134, 141]
[141, 155]
[151, 156]
[149, 157]
[157, 165]
[165, 168]
[167, 172]
[172, 177]
[188, 193]
[209, 211]
[208, 213]
[210, 214]
[202, 216]
[217, 221]
[229, 234]
[230, 238]
[250, 255]
[251, 257]
[255, 262]
[260, 263]
[256, 267]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[22, 23, 30]
[36, 40, 46]
[102, 107, 112]
[154, 174, 179]
[192, 199, 202]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[4, 10, 14]
[43, 56, 78]
[65, 69, 79]
[143, 150, 159]
[179, 204, 208]
[203, 207, 215]
[213, 218, 225]
[225, 227, 230]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[223, 228, 237]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[14, 18]
[25, 31]
[31, 38]
[38, 53]
[50, 55]
[47, 59]
[54, 61]
[57, 62]
[55, 63]
[64, 70]
[66, 71]
[63, 73]
[62, 74]
[58, 75]
[70, 76]
[72, 80]
[83, 91]
[80, 92]
[90, 93]
[88, 94]
[87, 95]
[71, 96]
[91, 97]
[81, 99]
[93, 100]
[89, 104]
[105, 111]
[113, 119]
[117, 122]
[121, 123]
[128, 134]
[132, 136]
[124, 138]
[123, 139]
[134, 141]
[141, 155]
[151, 156]
[149, 157]
[157, 165]
[165, 168]
[167, 172]
[172, 177]
[188, 193]
[209, 211]
[208, 213]
[210, 214]
[202, 216]
[217, 221]
[229, 234]
[230, 238]
[250, 255]
[251, 257]
[255, 262]
[260, 263]
[256, 267]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.469524383544922

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10, 14] ccc => cc, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [14, 18] cc => I, Pos: [14, 18] cc => I, Pos: [22, 23, 30] ccc => cc, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [31, 38] cc => I, Pos: [31, 38] cc => I, Pos: [36, 40, 46] ccc => cc, Pos: [38, 53] cc => I, Pos: [38, 53] cc => I, Pos: [43, 56, 78] ccc => cc, Pos: [47, 59] cc => I, Pos: [47, 59] cc => I, Pos: [50, 55] cc => I, Pos: [50, 55] cc => I, Pos: [54, 61] cc => I, Pos: [54, 61] cc => I, Pos: [55, 63] cc => I, Pos: [55, 63] cc => I, Pos: [57, 62] cc => I, Pos: [57, 62] cc => I, Pos: [58, 75] cc => I, Pos: [58, 75] cc => I, Pos: [62, 74] cc => I, Pos: [62, 74] cc => I, Pos: [63, 73] cc => I, Pos: [63, 73] cc => I, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [65, 69, 79] ccc => cc, Pos: [66, 71] cc => I, Pos: [66, 71] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [71, 96] cc => I, Pos: [71, 96] cc => I, Pos: [72, 80] cc => I, Pos: [72, 80] cc => I, Pos: [80, 92] cc => I, Pos: [80, 92] cc => I, Pos: [81, 99] cc => I, Pos: [81, 99] cc => I, Pos: [83, 91] cc => I, Pos: [83, 91] cc => I, Pos: [87, 95] cc => I, Pos: [87, 95] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 104] cc => I, Pos: [89, 104] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [91, 97] cc => I, Pos: [91, 97] cc => I, Pos: [93, 100] cc => I, Pos: [93, 100] cc => I, Pos: [102, 107, 112] ccc => cc, Pos: [105, 111] cc => I, Pos: [105, 111] cc => I, Pos: [113, 119] cc => I, Pos: [113, 119] cc => I, Pos: [117, 122] cc => I, Pos: [117, 122] cc => I, Pos: [121, 123] cc => I, Pos: [121, 123] cc => I, Pos: [123, 139] cc => I, Pos: [123, 139] cc => I, Pos: [124, 138] cc => I, Pos: [124, 138] cc => I, Pos: [128, 134] cc => I, Pos: [128, 134] cc => I, Pos: [132, 136] cc => I, Pos: [132, 136] cc => I, Pos: [134, 141] cc => I, Pos: [134, 141] cc => I, Pos: [141, 155] cc => I, Pos: [141, 155] cc => I, Pos: [143, 150, 159] ccc => cc, Pos: [149, 157] cc => I, Pos: [149, 157] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [154, 174, 179] ccc => cc, Pos: [157, 165] cc => I, Pos: [157, 165] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [167, 172] cc => I, Pos: [167, 172] cc => I, Pos: [172, 177] cc => I, Pos: [172, 177] cc => I, Pos: [179, 204, 208] ccc => cc, Pos: [188, 193] cc => I, Pos: [188, 193] cc => I, Pos: [192, 199, 202] ccc => cc, Pos: [202, 216] cc => I, Pos: [202, 216] cc => I, Pos: [203, 207, 215] ccc => cc, Pos: [208, 213] cc => I, Pos: [208, 213] cc => I, Pos: [209, 211] cc => I, Pos: [209, 211] cc => I, Pos: [210, 214] cc => I, Pos: [210, 214] cc => I, Pos: [213, 218, 225] ccc => cc, Pos: [217, 221] cc => I, Pos: [217, 221] cc => I, Pos: [223, 228, 237] ccc => cc, Pos: [225, 227, 230] ccc => cc, Pos: [229, 234] cc => I, Pos: [229, 234] cc => I, Pos: [230, 238] cc => I, Pos: [230, 238] cc => I, Pos: [250, 255] cc => I, Pos: [250, 255] cc => I, Pos: [251, 257] cc => I, Pos: [251, 257] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [256, 267] cc => I, Pos: [256, 267] cc => I, Pos: [260, 263] cc => I, Pos: [260, 263] cc => I]

--------End Timer [Generate Plans]:  0.12463188171386719

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 18] cc => I,
 Pos: [5, 11] cc => I,
 Pos: [22, 23, 30] ccc => cc,
 Pos: [25, 31] cc => I,
 Pos: [36, 40, 46] ccc => cc,
 Pos: [38, 53] cc => I,
 Pos: [43, 56, 78] ccc => cc,
 Pos: [47, 59] cc => I,
 Pos: [50, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [62, 74] cc => I,
 Pos: [58, 75] cc => I,
 Pos: [63, 73] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [65, 69, 79] ccc => cc,
 Pos: [71, 96] cc => I,
 Pos: [80, 92] cc => I,
 Pos: [81, 99] cc => I,
 Pos: [91, 97] cc => I,
 Pos: [87, 95] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [89, 104] cc => I,
 Pos: [93, 100] cc => I,
 Pos: [102, 107, 112] ccc => cc,
 Pos: [105, 111] cc => I,
 Pos: [113, 119] cc => I,
 Pos: [117, 122] cc => I,
 Pos: [123, 139] cc => I,
 Pos: [124, 138] cc => I,
 Pos: [128, 134] cc => I,
 Pos: [132, 136] cc => I,
 Pos: [141, 155] cc => I,
 Pos: [143, 150, 159] ccc => cc,
 Pos: [157, 165] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [179, 204, 208] ccc => cc,
 Pos: [172, 177] cc => I,
 Pos: [188, 193] cc => I,
 Pos: [202, 216] cc => I,
 Pos: [203, 207, 215] ccc => cc,
 Pos: [209, 211] cc => I,
 Pos: [210, 214] cc => I,
 Pos: [225, 227, 230] ccc => cc,
 Pos: [217, 221] cc => I,
 Pos: [223, 228, 237] ccc => cc,
 Pos: [229, 234] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [251, 257] cc => I,
 Pos: [256, 267] cc => I,
 Pos: [260, 263] cc => I]
Change: 50, Saving: 52

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [14, 18] cc => I
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [22, 23, 30] ccc => cc
Apply:  Pos: [25, 31] cc => I
Apply:  Pos: [36, 40, 46] ccc => cc
Apply:  Pos: [38, 53] cc => I
Apply:  Pos: [43, 56, 78] ccc => cc
Apply:  Pos: [47, 59] cc => I
Apply:  Pos: [50, 55] cc => I
Apply:  Pos: [54, 61] cc => I
Apply:  Pos: [62, 74] cc => I
Apply:  Pos: [58, 75] cc => I
Apply:  Pos: [63, 73] cc => I
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [65, 69, 79] ccc => cc
Apply:  Pos: [71, 96] cc => I
Apply:  Pos: [80, 92] cc => I
Apply:  Pos: [81, 99] cc => I
Apply:  Pos: [91, 97] cc => I
Apply:  Pos: [87, 95] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [89, 104] cc => I
Apply:  Pos: [93, 100] cc => I
Apply:  Pos: [102, 107, 112] ccc => cc
Apply:  Pos: [105, 111] cc => I
Apply:  Pos: [113, 119] cc => I
Apply:  Pos: [117, 122] cc => I
Apply:  Pos: [123, 139] cc => I
Apply:  Pos: [124, 138] cc => I
Apply:  Pos: [128, 134] cc => I
Apply:  Pos: [132, 136] cc => I
Apply:  Pos: [141, 155] cc => I
Apply:  Pos: [143, 150, 159] ccc => cc
Apply:  Pos: [157, 165] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [179, 204, 208] ccc => cc
Apply:  Pos: [172, 177] cc => I
Apply:  Pos: [188, 193] cc => I
Apply:  Pos: [202, 216] cc => I
Apply:  Pos: [203, 207, 215] ccc => cc
Apply:  Pos: [209, 211] cc => I
Apply:  Pos: [210, 214] cc => I
Apply:  Pos: [225, 227, 230] ccc => cc
Apply:  Pos: [217, 221] cc => I
Apply:  Pos: [223, 228, 237] ccc => cc
Apply:  Pos: [229, 234] cc => I
Apply:  Pos: [255, 262] cc => I
Apply:  Pos: [251, 257] cc => I
Apply:  Pos: [256, 267] cc => I
Apply:  Pos: [260, 263] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015580177307128906

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [18, 16], [3, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 12], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [2, 12], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [5, 7], [6, 14], [10, 14], [6, 11], [18, 3], [2, 0], [14, 4], [17, 18], [9, 1], [10, 3], [2, 19], [16, 12], [7, 4], [13, 9], [17, 10], [0, 19], [18, 16], [12, 13], [10, 14], [8, 1], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [12, 19], [13, 9], [5, 7], [18, 16], [14, 5], [12, 13], [11, 7], [8, 1], [7, 4], [10, 14], [13, 1], [3, 14], [5, 4], [8, 1], [17, 18], [5, 7], [2, 12], [15, 2], [13, 8], [4, 9], [14, 7], [18, 3], [6, 11], [10, 3], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [17, 18], [13, 8], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [16, 12], [3, 6], [14, 4], [13, 9], [2, 19], [17, 10], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [6, 11], [2, 12], [4, 9], [16, 5], [12, 19], [6, 11], [3, 6], [9, 1], [5, 4], [16, 13], [2, 0], [17, 10], [10, 6], [14, 4], [6, 11], [0, 19], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [6, 11], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [17, 10], [15, 2], [18, 3], [16, 12], [5, 13], [0, 19], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [17, 10], [14, 7], ----End Timer [Execute Mapping]:  5.609736442565918

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[62, 80]
[91, 104]
[135, 140]
[117, 146]
[149, 156]
[162, 178]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[27, 33, 35]
[150, 159, 167]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[81, 85, 88]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[62, 80]
[91, 104]
[135, 140]
[117, 146]
[149, 156]
[162, 178]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3591175079345703

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [27, 33, 35] ccc => cc, Pos: [62, 80] cc => I, Pos: [62, 80] cc => I, Pos: [81, 85, 88] ccc => cc, Pos: [91, 104] cc => I, Pos: [91, 104] cc => I, Pos: [117, 146] cc => I, Pos: [117, 146] cc => I, Pos: [135, 140] cc => I, Pos: [135, 140] cc => I, Pos: [149, 156] cc => I, Pos: [149, 156] cc => I, Pos: [150, 159, 167] ccc => cc, Pos: [162, 178] cc => I, Pos: [162, 178] cc => I]

--------End Timer [Generate Plans]:  0.015619039535522461

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [27, 33, 35] ccc => cc,
 Pos: [62, 80] cc => I,
 Pos: [81, 85, 88] ccc => cc,
 Pos: [91, 104] cc => I,
 Pos: [117, 146] cc => I,
 Pos: [135, 140] cc => I,
 Pos: [149, 156] cc => I,
 Pos: [150, 159, 167] ccc => cc,
 Pos: [162, 178] cc => I]
Change: 9, Saving: 9

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [27, 33, 35] ccc => cc
Apply:  Pos: [62, 80] cc => I
Apply:  Pos: [81, 85, 88] ccc => cc
Apply:  Pos: [91, 104] cc => I
Apply:  Pos: [117, 146] cc => I
Apply:  Pos: [135, 140] cc => I
Apply:  Pos: [149, 156] cc => I
Apply:  Pos: [150, 159, 167] ccc => cc
Apply:  Pos: [162, 178] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [3, 16], [18, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [5, 7], [10, 14], [6, 11], [6, 14], [18, 3], [2, 0], [14, 4], [17, 18], [9, 1], [10, 3], [2, 19], [16, 12], [7, 4], [13, 9], [17, 10], [0, 19], [18, 16], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [12, 19], [13, 9], [5, 7], [18, 16], [14, 5], [12, 13], [11, 7], [5, 7], [10, 14], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [14, 7], [18, 3], [6, 11], [10, 3], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [17, 18], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [16, 12], [3, 6], [14, 4], [13, 9], [2, 19], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [3, 6], [9, 1], [5, 4], [16, 13], [2, 0], [10, 6], [14, 4], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  3.3747365474700928

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[107, 132]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[73, 75, 77]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[107, 132]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.267110586166382

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [73, 75, 77] ccc => cc, Pos: [107, 132] cc => I, Pos: [107, 132] cc => I]

--------End Timer [Generate Plans]:  0.0059967041015625

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [73, 75, 77] ccc => cc, Pos: [107, 132] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [73, 75, 77] ccc => cc
Apply:  Pos: [107, 132] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [18, 16], [3, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [2, 5], [16, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [5, 7], [10, 14], [6, 14], [6, 11], [18, 3], [2, 0], [14, 4], [17, 18], [9, 1], [10, 3], [2, 19], [16, 12], [7, 4], [13, 9], [17, 10], [0, 19], [18, 16], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [12, 19], [13, 9], [14, 5], [18, 16], [5, 7], [12, 13], [11, 7], [10, 14], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [14, 7], [18, 3], [6, 11], [10, 3], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [17, 18], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [16, 12], [14, 4], [13, 9], [12, 19], [2, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [9, 1], [5, 4], [16, 13], [2, 0], [10, 6], [14, 4], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  3.274106979370117

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9680840969085693

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [3, 16], [18, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [5, 7], [6, 14], [10, 14], [6, 11], [18, 3], [2, 0], [14, 4], [17, 18], [9, 1], [10, 3], [2, 19], [16, 12], [7, 4], [13, 9], [17, 10], [0, 19], [18, 16], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [12, 19], [13, 9], [14, 5], [18, 16], [5, 7], [12, 13], [11, 7], [10, 14], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [14, 7], [18, 3], [6, 11], [10, 3], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [17, 18], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [16, 12], [14, 4], [13, 9], [2, 19], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [9, 1], [5, 4], [16, 13], [2, 0], [10, 6], [14, 4], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  2.9680840969085693

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [162] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 324

Reduced: 
 - size: 108 (40.00%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09375739097595215

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [11, 7], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [11, 7], [16, 13], [14, 7], [9, 1], [0, 12], [2, 19], [15, 16], [9, 1], [5, 7], [17, 10], [6, 11], [18, 3], [3, 16], [8, 1], [11, 7], [14, 4], [2, 0], [12, 5], [18, 15], [18, 3], [11, 7], [19, 8], [16, 5], [2, 12], [6, 14], [4, 9], [3, 14], [11, 7], [18, 16], [9, 1], [12, 5], [6, 14], [12, 13], [16, 5], [15, 3], [4, 9], [17, 18], [3, 14], [10, 6], [15, 16], [8, 1], [0, 19], [11, 7], [10, 3], [15, 16], [2, 12], [5, 7], [19, 8], [17, 18], [6, 14], [10, 3], [5, 7], [15, 16], [9, 1], [14, 4], [6, 11], [18, 3], [2, 0], [10, 14], [9, 1], [6, 11], [17, 18], [15, 16], [5, 7], [19, 8], [9, 1], [10, 3], [12, 13], [14, 4], [17, 18], [14, 5], [2, 19], [16, 12], [7, 4], [13, 9], [17, 10], [13, 1], [14, 4], [15, 3], [0, 19], [16, 12], [17, 18], [0, 19], [14, 4], [13, 1], [6, 11], [16, 12], [18, 16], [14, 5], [0, 19], [12, 13], [10, 6], [8, 1], [15, 3], [18, 15], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [18, 15], [10, 6], [13, 1], [2, 19], [14, 7], [16, 5], [15, 2], [3, 14], [13, 1], [7, 4], [12, 19], [15, 2], [12, 19], [3, 6], [13, 9], [5, 7], [18, 16], [15, 16], [14, 5], [12, 13], [11, 7], [2, 0], [8, 1], [15, 16], [7, 4], [2, 0], [10, 14], [3, 6], [12, 19], [13, 1], [15, 16], [3, 14], [4, 9], [8, 1], [17, 18], [5, 7], [2, 12], [15, 2], [13, 8], [5, 4], [0, 19], [14, 7], [18, 3], [6, 11], [15, 16], [0, 19], [13, 8], [10, 3], [4, 9], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [13, 8], [3, 16], [17, 18], [13, 8], [10, 14], [15, 16], [2, 0], [17, 18], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [6, 11], [14, 4], [13, 9], [2, 19], [17, 10], [12, 19], [5, 13], [15, 2], [18, 16], [10, 14], [8, 1], [7, 4], [12, 13], [17, 18], [10, 14], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [17, 18], [16, 5], [3, 6], [2, 12], [4, 9], [3, 16], [6, 11], [2, 0], [14, 4], [2, 0], [12, 19], [6, 11], [14, 4], [16, 5], [17, 18], [15, 2], [3, 6], [9, 1], [5, 4], [15, 2], [16, 13], [0, 19], [17, 10], [6, 11], [14, 4], [10, 6], [2, 19], [4, 9], [6, 11], [13, 1], [16, 12], [3, 14], [4, 9], [15, 16], [12, 13], [2, 0], [6, 11], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [17, 10], [15, 2], [18, 3], [16, 12], [5, 13], [0, 19], [8, 1], [10, 3], [5, 7], [6, 14], [2, 12], [8, 1], [13, 9], [10, 3], [14, 4], [16, 12], [6, 11], [2, 19], [8, 1], [6, 11], [16, 5], [0, 12], [15, 3], [13, 9], [17, 10], [14, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[14, 18]
[25, 31]
[31, 38]
[38, 53]
[50, 55]
[47, 59]
[54, 61]
[57, 62]
[55, 63]
[64, 70]
[66, 71]
[63, 73]
[62, 74]
[58, 75]
[70, 76]
[72, 80]
[83, 91]
[80, 92]
[90, 93]
[88, 94]
[87, 95]
[71, 96]
[91, 97]
[81, 99]
[93, 100]
[89, 104]
[105, 111]
[113, 119]
[117, 122]
[121, 123]
[128, 134]
[132, 136]
[124, 138]
[123, 139]
[134, 141]
[141, 155]
[151, 156]
[149, 157]
[157, 165]
[165, 168]
[167, 172]
[172, 177]
[188, 193]
[209, 211]
[208, 213]
[210, 214]
[202, 216]
[217, 221]
[229, 234]
[230, 238]
[250, 255]
[251, 257]
[255, 262]
[260, 263]
[256, 267]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[22, 23, 30]
[36, 40, 46]
[102, 107, 112]
[154, 174, 179]
[192, 199, 202]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[4, 10, 14]
[43, 56, 78]
[65, 69, 79]
[143, 150, 159]
[179, 204, 208]
[203, 207, 215]
[213, 218, 225]
[225, 227, 230]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[223, 228, 237]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[14, 18]
[25, 31]
[31, 38]
[38, 53]
[50, 55]
[47, 59]
[54, 61]
[57, 62]
[55, 63]
[64, 70]
[66, 71]
[63, 73]
[62, 74]
[58, 75]
[70, 76]
[72, 80]
[83, 91]
[80, 92]
[90, 93]
[88, 94]
[87, 95]
[71, 96]
[91, 97]
[81, 99]
[93, 100]
[89, 104]
[105, 111]
[113, 119]
[117, 122]
[121, 123]
[128, 134]
[132, 136]
[124, 138]
[123, 139]
[134, 141]
[141, 155]
[151, 156]
[149, 157]
[157, 165]
[165, 168]
[167, 172]
[172, 177]
[188, 193]
[209, 211]
[208, 213]
[210, 214]
[202, 216]
[217, 221]
[229, 234]
[230, 238]
[250, 255]
[251, 257]
[255, 262]
[260, 263]
[256, 267]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.263643980026245

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10, 14] ccc => cc, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [14, 18] cc => I, Pos: [14, 18] cc => I, Pos: [22, 23, 30] ccc => cc, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [31, 38] cc => I, Pos: [31, 38] cc => I, Pos: [36, 40, 46] ccc => cc, Pos: [38, 53] cc => I, Pos: [38, 53] cc => I, Pos: [43, 56, 78] ccc => cc, Pos: [47, 59] cc => I, Pos: [47, 59] cc => I, Pos: [50, 55] cc => I, Pos: [50, 55] cc => I, Pos: [54, 61] cc => I, Pos: [54, 61] cc => I, Pos: [55, 63] cc => I, Pos: [55, 63] cc => I, Pos: [57, 62] cc => I, Pos: [57, 62] cc => I, Pos: [58, 75] cc => I, Pos: [58, 75] cc => I, Pos: [62, 74] cc => I, Pos: [62, 74] cc => I, Pos: [63, 73] cc => I, Pos: [63, 73] cc => I, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [65, 69, 79] ccc => cc, Pos: [66, 71] cc => I, Pos: [66, 71] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [71, 96] cc => I, Pos: [71, 96] cc => I, Pos: [72, 80] cc => I, Pos: [72, 80] cc => I, Pos: [80, 92] cc => I, Pos: [80, 92] cc => I, Pos: [81, 99] cc => I, Pos: [81, 99] cc => I, Pos: [83, 91] cc => I, Pos: [83, 91] cc => I, Pos: [87, 95] cc => I, Pos: [87, 95] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 104] cc => I, Pos: [89, 104] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [91, 97] cc => I, Pos: [91, 97] cc => I, Pos: [93, 100] cc => I, Pos: [93, 100] cc => I, Pos: [102, 107, 112] ccc => cc, Pos: [105, 111] cc => I, Pos: [105, 111] cc => I, Pos: [113, 119] cc => I, Pos: [113, 119] cc => I, Pos: [117, 122] cc => I, Pos: [117, 122] cc => I, Pos: [121, 123] cc => I, Pos: [121, 123] cc => I, Pos: [123, 139] cc => I, Pos: [123, 139] cc => I, Pos: [124, 138] cc => I, Pos: [124, 138] cc => I, Pos: [128, 134] cc => I, Pos: [128, 134] cc => I, Pos: [132, 136] cc => I, Pos: [132, 136] cc => I, Pos: [134, 141] cc => I, Pos: [134, 141] cc => I, Pos: [141, 155] cc => I, Pos: [141, 155] cc => I, Pos: [143, 150, 159] ccc => cc, Pos: [149, 157] cc => I, Pos: [149, 157] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [154, 174, 179] ccc => cc, Pos: [157, 165] cc => I, Pos: [157, 165] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [167, 172] cc => I, Pos: [167, 172] cc => I, Pos: [172, 177] cc => I, Pos: [172, 177] cc => I, Pos: [179, 204, 208] ccc => cc, Pos: [188, 193] cc => I, Pos: [188, 193] cc => I, Pos: [192, 199, 202] ccc => cc, Pos: [202, 216] cc => I, Pos: [202, 216] cc => I, Pos: [203, 207, 215] ccc => cc, Pos: [208, 213] cc => I, Pos: [208, 213] cc => I, Pos: [209, 211] cc => I, Pos: [209, 211] cc => I, Pos: [210, 214] cc => I, Pos: [210, 214] cc => I, Pos: [213, 218, 225] ccc => cc, Pos: [217, 221] cc => I, Pos: [217, 221] cc => I, Pos: [223, 228, 237] ccc => cc, Pos: [225, 227, 230] ccc => cc, Pos: [229, 234] cc => I, Pos: [229, 234] cc => I, Pos: [230, 238] cc => I, Pos: [230, 238] cc => I, Pos: [250, 255] cc => I, Pos: [250, 255] cc => I, Pos: [251, 257] cc => I, Pos: [251, 257] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [256, 267] cc => I, Pos: [256, 267] cc => I, Pos: [260, 263] cc => I, Pos: [260, 263] cc => I]

--------End Timer [Generate Plans]:  0.12497878074645996

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 18] cc => I,
 Pos: [5, 11] cc => I,
 Pos: [22, 23, 30] ccc => cc,
 Pos: [31, 38] cc => I,
 Pos: [36, 40, 46] ccc => cc,
 Pos: [43, 56, 78] ccc => cc,
 Pos: [47, 59] cc => I,
 Pos: [55, 63] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [57, 62] cc => I,
 Pos: [58, 75] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [65, 69, 79] ccc => cc,
 Pos: [66, 71] cc => I,
 Pos: [72, 80] cc => I,
 Pos: [81, 99] cc => I,
 Pos: [83, 91] cc => I,
 Pos: [87, 95] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [89, 104] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [102, 107, 112] ccc => cc,
 Pos: [105, 111] cc => I,
 Pos: [113, 119] cc => I,
 Pos: [117, 122] cc => I,
 Pos: [121, 123] cc => I,
 Pos: [124, 138] cc => I,
 Pos: [134, 141] cc => I,
 Pos: [132, 136] cc => I,
 Pos: [143, 150, 159] ccc => cc,
 Pos: [157, 165] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [179, 204, 208] ccc => cc,
 Pos: [172, 177] cc => I,
 Pos: [188, 193] cc => I,
 Pos: [202, 216] cc => I,
 Pos: [203, 207, 215] ccc => cc,
 Pos: [209, 211] cc => I,
 Pos: [210, 214] cc => I,
 Pos: [225, 227, 230] ccc => cc,
 Pos: [217, 221] cc => I,
 Pos: [223, 228, 237] ccc => cc,
 Pos: [229, 234] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [251, 257] cc => I,
 Pos: [256, 267] cc => I,
 Pos: [260, 263] cc => I]
Change: 47, Saving: 49

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [14, 18] cc => I
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [22, 23, 30] ccc => cc
Apply:  Pos: [31, 38] cc => I
Apply:  Pos: [36, 40, 46] ccc => cc
Apply:  Pos: [43, 56, 78] ccc => cc
Apply:  Pos: [47, 59] cc => I
Apply:  Pos: [55, 63] cc => I
Apply:  Pos: [54, 61] cc => I
Apply:  Pos: [57, 62] cc => I
Apply:  Pos: [58, 75] cc => I
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [65, 69, 79] ccc => cc
Apply:  Pos: [66, 71] cc => I
Apply:  Pos: [72, 80] cc => I
Apply:  Pos: [81, 99] cc => I
Apply:  Pos: [83, 91] cc => I
Apply:  Pos: [87, 95] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [89, 104] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [102, 107, 112] ccc => cc
Apply:  Pos: [105, 111] cc => I
Apply:  Pos: [113, 119] cc => I
Apply:  Pos: [117, 122] cc => I
Apply:  Pos: [121, 123] cc => I
Apply:  Pos: [124, 138] cc => I
Apply:  Pos: [134, 141] cc => I
Apply:  Pos: [132, 136] cc => I
Apply:  Pos: [143, 150, 159] ccc => cc
Apply:  Pos: [157, 165] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [179, 204, 208] ccc => cc
Apply:  Pos: [172, 177] cc => I
Apply:  Pos: [188, 193] cc => I
Apply:  Pos: [202, 216] cc => I
Apply:  Pos: [203, 207, 215] ccc => cc
Apply:  Pos: [209, 211] cc => I
Apply:  Pos: [210, 214] cc => I
Apply:  Pos: [225, 227, 230] ccc => cc
Apply:  Pos: [217, 221] cc => I
Apply:  Pos: [223, 228, 237] ccc => cc
Apply:  Pos: [229, 234] cc => I
Apply:  Pos: [255, 262] cc => I
Apply:  Pos: [251, 257] cc => I
Apply:  Pos: [256, 267] cc => I
Apply:  Pos: [260, 263] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [18, 16], [3, 16], [8, 1], [11, 7], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 12], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [2, 12], [16, 5], [15, 3], [3, 14], [10, 6], [15, 16], [8, 1], [0, 19], [11, 7], [12, 13], [6, 14], [10, 14], [18, 3], [2, 0], [14, 4], [15, 16], [5, 7], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 10], [17, 18], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [8, 1], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [5, 7], [18, 16], [15, 16], [14, 5], [12, 13], [11, 7], [8, 1], [7, 4], [10, 14], [12, 19], [13, 1], [3, 14], [5, 4], [8, 1], [17, 18], [5, 7], [2, 12], [15, 2], [13, 8], [4, 9], [14, 7], [18, 3], [6, 11], [15, 16], [10, 3], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [17, 18], [13, 8], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [16, 12], [3, 6], [14, 4], [13, 9], [2, 19], [17, 10], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [6, 11], [2, 12], [4, 9], [16, 5], [12, 19], [6, 11], [3, 6], [9, 1], [5, 4], [16, 13], [2, 0], [17, 10], [10, 6], [14, 4], [6, 11], [0, 19], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [6, 11], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [17, 10], [15, 2], [18, 3], [16, 12], [5, 13], [0, 19], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [17, 10], [14, 7], ----End Timer [Execute Mapping]:  5.388622760772705

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 44]
[41, 51]
[66, 84]
[96, 110]
[141, 146]
[123, 152]
[155, 162]
[168, 184]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[28, 34, 36]
[156, 165, 173]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[85, 90, 93]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[21, 44]
[41, 51]
[66, 84]
[96, 110]
[141, 146]
[123, 152]
[155, 162]
[168, 184]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3908462524414062

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [21, 44] cc => I, Pos: [21, 44] cc => I, Pos: [28, 34, 36] ccc => cc, Pos: [41, 51] cc => I, Pos: [41, 51] cc => I, Pos: [66, 84] cc => I, Pos: [66, 84] cc => I, Pos: [85, 90, 93] ccc => cc, Pos: [96, 110] cc => I, Pos: [96, 110] cc => I, Pos: [123, 152] cc => I, Pos: [123, 152] cc => I, Pos: [141, 146] cc => I, Pos: [141, 146] cc => I, Pos: [155, 162] cc => I, Pos: [155, 162] cc => I, Pos: [156, 165, 173] ccc => cc, Pos: [168, 184] cc => I, Pos: [168, 184] cc => I]

--------End Timer [Generate Plans]:  0.031248092651367188

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [21, 44] cc => I,
 Pos: [28, 34, 36] ccc => cc,
 Pos: [41, 51] cc => I,
 Pos: [66, 84] cc => I,
 Pos: [85, 90, 93] ccc => cc,
 Pos: [96, 110] cc => I,
 Pos: [123, 152] cc => I,
 Pos: [141, 146] cc => I,
 Pos: [155, 162] cc => I,
 Pos: [156, 165, 173] ccc => cc,
 Pos: [168, 184] cc => I]
Change: 11, Saving: 11

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [21, 44] cc => I
Apply:  Pos: [28, 34, 36] ccc => cc
Apply:  Pos: [41, 51] cc => I
Apply:  Pos: [66, 84] cc => I
Apply:  Pos: [85, 90, 93] ccc => cc
Apply:  Pos: [96, 110] cc => I
Apply:  Pos: [123, 152] cc => I
Apply:  Pos: [141, 146] cc => I
Apply:  Pos: [155, 162] cc => I
Apply:  Pos: [156, 165, 173] ccc => cc
Apply:  Pos: [168, 184] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [3, 16], [18, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [10, 14], [6, 14], [18, 3], [2, 0], [14, 4], [5, 7], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 18], [17, 10], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [5, 7], [15, 16], [18, 16], [14, 5], [12, 13], [11, 7], [5, 7], [10, 14], [12, 19], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [14, 7], [18, 3], [6, 11], [15, 16], [10, 3], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [17, 18], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [16, 12], [3, 6], [14, 4], [13, 9], [2, 19], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [3, 6], [9, 1], [5, 4], [16, 13], [2, 0], [10, 6], [14, 4], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  3.4220943450927734

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 92]
[109, 134]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[72, 75, 77]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 92]
[109, 134]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9377200603485107

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [72, 75, 77] ccc => cc, Pos: [74, 92] cc => I, Pos: [74, 92] cc => I, Pos: [109, 134] cc => I, Pos: [109, 134] cc => I]

--------End Timer [Generate Plans]:  0.015629291534423828

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [72, 75, 77] ccc => cc, Pos: [74, 92] cc => I, Pos: [109, 134] cc => I]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [72, 75, 77] ccc => cc
Apply:  Pos: [74, 92] cc => I
Apply:  Pos: [109, 134] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [18, 16], [3, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [2, 5], [16, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [6, 14], [10, 14], [18, 3], [2, 0], [14, 4], [5, 7], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 10], [17, 18], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [14, 5], [18, 16], [5, 7], [12, 13], [11, 7], [10, 14], [12, 19], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [14, 7], [18, 3], [6, 11], [10, 3], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [17, 18], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [16, 12], [14, 4], [13, 9], [12, 19], [2, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [9, 1], [5, 4], [16, 13], [2, 0], [10, 6], [14, 4], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  2.9533493518829346

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8594768047332764

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [3, 16], [18, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [10, 14], [6, 14], [18, 3], [2, 0], [14, 4], [5, 7], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 18], [17, 10], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [14, 5], [18, 16], [5, 7], [12, 13], [11, 7], [10, 14], [12, 19], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [14, 7], [18, 3], [6, 11], [10, 3], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [17, 18], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [16, 12], [14, 4], [13, 9], [2, 19], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [9, 1], [5, 4], [16, 13], [2, 0], [10, 6], [14, 4], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  2.8594768047332764

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [162] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 324

Reduced: 
 - size: 108 (40.00%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.1091756820678711

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [11, 7], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [11, 7], [16, 13], [14, 7], [9, 1], [0, 12], [2, 19], [15, 16], [9, 1], [5, 7], [17, 10], [6, 11], [18, 3], [3, 16], [8, 1], [11, 7], [14, 4], [2, 0], [12, 5], [18, 15], [18, 3], [11, 7], [19, 8], [16, 5], [2, 12], [6, 14], [4, 9], [3, 14], [11, 7], [18, 16], [9, 1], [12, 5], [6, 14], [12, 13], [16, 5], [15, 3], [4, 9], [17, 18], [3, 14], [10, 6], [15, 16], [8, 1], [0, 19], [11, 7], [10, 3], [15, 16], [2, 12], [5, 7], [19, 8], [17, 18], [6, 14], [10, 3], [5, 7], [15, 16], [9, 1], [14, 4], [6, 11], [18, 3], [2, 0], [10, 14], [9, 1], [6, 11], [17, 18], [15, 16], [5, 7], [19, 8], [9, 1], [10, 3], [12, 13], [14, 4], [17, 18], [14, 5], [2, 19], [16, 12], [7, 4], [13, 9], [17, 10], [13, 1], [14, 4], [15, 3], [0, 19], [16, 12], [17, 18], [0, 19], [14, 4], [13, 1], [6, 11], [16, 12], [18, 16], [14, 5], [0, 19], [12, 13], [10, 6], [8, 1], [15, 3], [18, 15], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [18, 15], [10, 6], [13, 1], [2, 19], [14, 7], [16, 5], [15, 2], [3, 14], [13, 1], [7, 4], [12, 19], [15, 2], [12, 19], [3, 6], [13, 9], [5, 7], [18, 16], [15, 16], [14, 5], [12, 13], [11, 7], [2, 0], [8, 1], [15, 16], [7, 4], [2, 0], [10, 14], [3, 6], [12, 19], [13, 1], [15, 16], [3, 14], [4, 9], [8, 1], [17, 18], [5, 7], [2, 12], [15, 2], [13, 8], [5, 4], [0, 19], [14, 7], [18, 3], [6, 11], [15, 16], [0, 19], [13, 8], [10, 3], [4, 9], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [13, 8], [3, 16], [17, 18], [13, 8], [10, 14], [15, 16], [2, 0], [17, 18], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [6, 11], [14, 4], [13, 9], [2, 19], [17, 10], [12, 19], [5, 13], [15, 2], [18, 16], [10, 14], [8, 1], [7, 4], [12, 13], [17, 18], [10, 14], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [17, 18], [16, 5], [3, 6], [2, 12], [4, 9], [3, 16], [6, 11], [2, 0], [14, 4], [2, 0], [12, 19], [6, 11], [14, 4], [16, 5], [17, 18], [15, 2], [3, 6], [9, 1], [5, 4], [15, 2], [16, 13], [0, 19], [17, 10], [6, 11], [14, 4], [10, 6], [2, 19], [4, 9], [6, 11], [13, 1], [16, 12], [3, 14], [4, 9], [15, 16], [12, 13], [2, 0], [6, 11], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [17, 10], [15, 2], [18, 3], [16, 12], [5, 13], [0, 19], [8, 1], [10, 3], [5, 7], [6, 14], [2, 12], [8, 1], [13, 9], [10, 3], [14, 4], [16, 12], [6, 11], [2, 19], [8, 1], [6, 11], [16, 5], [0, 12], [15, 3], [13, 9], [17, 10], [14, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[14, 18]
[25, 31]
[31, 38]
[38, 53]
[50, 55]
[47, 59]
[54, 61]
[57, 62]
[55, 63]
[64, 70]
[66, 71]
[63, 73]
[62, 74]
[58, 75]
[70, 76]
[72, 80]
[83, 91]
[80, 92]
[90, 93]
[88, 94]
[87, 95]
[71, 96]
[91, 97]
[81, 99]
[93, 100]
[89, 104]
[105, 111]
[113, 119]
[117, 122]
[121, 123]
[128, 134]
[132, 136]
[124, 138]
[123, 139]
[134, 141]
[141, 155]
[151, 156]
[149, 157]
[157, 165]
[165, 168]
[167, 172]
[172, 177]
[188, 193]
[209, 211]
[208, 213]
[210, 214]
[202, 216]
[217, 221]
[229, 234]
[230, 238]
[250, 255]
[251, 257]
[255, 262]
[260, 263]
[256, 267]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[22, 23, 30]
[36, 40, 46]
[102, 107, 112]
[154, 174, 179]
[192, 199, 202]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[4, 10, 14]
[43, 56, 78]
[65, 69, 79]
[143, 150, 159]
[179, 204, 208]
[203, 207, 215]
[213, 218, 225]
[225, 227, 230]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[223, 228, 237]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[14, 18]
[25, 31]
[31, 38]
[38, 53]
[50, 55]
[47, 59]
[54, 61]
[57, 62]
[55, 63]
[64, 70]
[66, 71]
[63, 73]
[62, 74]
[58, 75]
[70, 76]
[72, 80]
[83, 91]
[80, 92]
[90, 93]
[88, 94]
[87, 95]
[71, 96]
[91, 97]
[81, 99]
[93, 100]
[89, 104]
[105, 111]
[113, 119]
[117, 122]
[121, 123]
[128, 134]
[132, 136]
[124, 138]
[123, 139]
[134, 141]
[141, 155]
[151, 156]
[149, 157]
[157, 165]
[165, 168]
[167, 172]
[172, 177]
[188, 193]
[209, 211]
[208, 213]
[210, 214]
[202, 216]
[217, 221]
[229, 234]
[230, 238]
[250, 255]
[251, 257]
[255, 262]
[260, 263]
[256, 267]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.234415769577026

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10, 14] ccc => cc, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [14, 18] cc => I, Pos: [14, 18] cc => I, Pos: [22, 23, 30] ccc => cc, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [31, 38] cc => I, Pos: [31, 38] cc => I, Pos: [36, 40, 46] ccc => cc, Pos: [38, 53] cc => I, Pos: [38, 53] cc => I, Pos: [43, 56, 78] ccc => cc, Pos: [47, 59] cc => I, Pos: [47, 59] cc => I, Pos: [50, 55] cc => I, Pos: [50, 55] cc => I, Pos: [54, 61] cc => I, Pos: [54, 61] cc => I, Pos: [55, 63] cc => I, Pos: [55, 63] cc => I, Pos: [57, 62] cc => I, Pos: [57, 62] cc => I, Pos: [58, 75] cc => I, Pos: [58, 75] cc => I, Pos: [62, 74] cc => I, Pos: [62, 74] cc => I, Pos: [63, 73] cc => I, Pos: [63, 73] cc => I, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [65, 69, 79] ccc => cc, Pos: [66, 71] cc => I, Pos: [66, 71] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [71, 96] cc => I, Pos: [71, 96] cc => I, Pos: [72, 80] cc => I, Pos: [72, 80] cc => I, Pos: [80, 92] cc => I, Pos: [80, 92] cc => I, Pos: [81, 99] cc => I, Pos: [81, 99] cc => I, Pos: [83, 91] cc => I, Pos: [83, 91] cc => I, Pos: [87, 95] cc => I, Pos: [87, 95] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 104] cc => I, Pos: [89, 104] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [91, 97] cc => I, Pos: [91, 97] cc => I, Pos: [93, 100] cc => I, Pos: [93, 100] cc => I, Pos: [102, 107, 112] ccc => cc, Pos: [105, 111] cc => I, Pos: [105, 111] cc => I, Pos: [113, 119] cc => I, Pos: [113, 119] cc => I, Pos: [117, 122] cc => I, Pos: [117, 122] cc => I, Pos: [121, 123] cc => I, Pos: [121, 123] cc => I, Pos: [123, 139] cc => I, Pos: [123, 139] cc => I, Pos: [124, 138] cc => I, Pos: [124, 138] cc => I, Pos: [128, 134] cc => I, Pos: [128, 134] cc => I, Pos: [132, 136] cc => I, Pos: [132, 136] cc => I, Pos: [134, 141] cc => I, Pos: [134, 141] cc => I, Pos: [141, 155] cc => I, Pos: [141, 155] cc => I, Pos: [143, 150, 159] ccc => cc, Pos: [149, 157] cc => I, Pos: [149, 157] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [154, 174, 179] ccc => cc, Pos: [157, 165] cc => I, Pos: [157, 165] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [167, 172] cc => I, Pos: [167, 172] cc => I, Pos: [172, 177] cc => I, Pos: [172, 177] cc => I, Pos: [179, 204, 208] ccc => cc, Pos: [188, 193] cc => I, Pos: [188, 193] cc => I, Pos: [192, 199, 202] ccc => cc, Pos: [202, 216] cc => I, Pos: [202, 216] cc => I, Pos: [203, 207, 215] ccc => cc, Pos: [208, 213] cc => I, Pos: [208, 213] cc => I, Pos: [209, 211] cc => I, Pos: [209, 211] cc => I, Pos: [210, 214] cc => I, Pos: [210, 214] cc => I, Pos: [213, 218, 225] ccc => cc, Pos: [217, 221] cc => I, Pos: [217, 221] cc => I, Pos: [223, 228, 237] ccc => cc, Pos: [225, 227, 230] ccc => cc, Pos: [229, 234] cc => I, Pos: [229, 234] cc => I, Pos: [230, 238] cc => I, Pos: [230, 238] cc => I, Pos: [250, 255] cc => I, Pos: [250, 255] cc => I, Pos: [251, 257] cc => I, Pos: [251, 257] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [256, 267] cc => I, Pos: [256, 267] cc => I, Pos: [260, 263] cc => I, Pos: [260, 263] cc => I]

--------End Timer [Generate Plans]:  0.12500429153442383

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 10, 14] ccc => cc,
 Pos: [5, 11] cc => I,
 Pos: [22, 23, 30] ccc => cc,
 Pos: [31, 38] cc => I,
 Pos: [36, 40, 46] ccc => cc,
 Pos: [43, 56, 78] ccc => cc,
 Pos: [47, 59] cc => I,
 Pos: [55, 63] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [62, 74] cc => I,
 Pos: [58, 75] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [65, 69, 79] ccc => cc,
 Pos: [66, 71] cc => I,
 Pos: [80, 92] cc => I,
 Pos: [81, 99] cc => I,
 Pos: [91, 97] cc => I,
 Pos: [87, 95] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [89, 104] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [102, 107, 112] ccc => cc,
 Pos: [105, 111] cc => I,
 Pos: [113, 119] cc => I,
 Pos: [117, 122] cc => I,
 Pos: [121, 123] cc => I,
 Pos: [124, 138] cc => I,
 Pos: [134, 141] cc => I,
 Pos: [132, 136] cc => I,
 Pos: [143, 150, 159] ccc => cc,
 Pos: [157, 165] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [179, 204, 208] ccc => cc,
 Pos: [172, 177] cc => I,
 Pos: [188, 193] cc => I,
 Pos: [202, 216] cc => I,
 Pos: [203, 207, 215] ccc => cc,
 Pos: [209, 211] cc => I,
 Pos: [210, 214] cc => I,
 Pos: [213, 218, 225] ccc => cc,
 Pos: [217, 221] cc => I,
 Pos: [223, 228, 237] ccc => cc,
 Pos: [229, 234] cc => I,
 Pos: [230, 238] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [251, 257] cc => I,
 Pos: [256, 267] cc => I,
 Pos: [260, 263] cc => I]
Change: 48, Saving: 50

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 10, 14] ccc => cc
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [22, 23, 30] ccc => cc
Apply:  Pos: [31, 38] cc => I
Apply:  Pos: [36, 40, 46] ccc => cc
Apply:  Pos: [43, 56, 78] ccc => cc
Apply:  Pos: [47, 59] cc => I
Apply:  Pos: [55, 63] cc => I
Apply:  Pos: [54, 61] cc => I
Apply:  Pos: [62, 74] cc => I
Apply:  Pos: [58, 75] cc => I
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [65, 69, 79] ccc => cc
Apply:  Pos: [66, 71] cc => I
Apply:  Pos: [80, 92] cc => I
Apply:  Pos: [81, 99] cc => I
Apply:  Pos: [91, 97] cc => I
Apply:  Pos: [87, 95] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [89, 104] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [102, 107, 112] ccc => cc
Apply:  Pos: [105, 111] cc => I
Apply:  Pos: [113, 119] cc => I
Apply:  Pos: [117, 122] cc => I
Apply:  Pos: [121, 123] cc => I
Apply:  Pos: [124, 138] cc => I
Apply:  Pos: [134, 141] cc => I
Apply:  Pos: [132, 136] cc => I
Apply:  Pos: [143, 150, 159] ccc => cc
Apply:  Pos: [157, 165] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [179, 204, 208] ccc => cc
Apply:  Pos: [172, 177] cc => I
Apply:  Pos: [188, 193] cc => I
Apply:  Pos: [202, 216] cc => I
Apply:  Pos: [203, 207, 215] ccc => cc
Apply:  Pos: [209, 211] cc => I
Apply:  Pos: [210, 214] cc => I
Apply:  Pos: [213, 218, 225] ccc => cc
Apply:  Pos: [217, 221] cc => I
Apply:  Pos: [223, 228, 237] ccc => cc
Apply:  Pos: [229, 234] cc => I
Apply:  Pos: [230, 238] cc => I
Apply:  Pos: [255, 262] cc => I
Apply:  Pos: [251, 257] cc => I
Apply:  Pos: [256, 267] cc => I
Apply:  Pos: [260, 263] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [9, 1], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [9, 1], [5, 7], [17, 10], [6, 11], [18, 16], [3, 16], [8, 1], [11, 7], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 12], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [2, 12], [16, 5], [15, 3], [3, 14], [10, 6], [15, 16], [8, 1], [0, 19], [11, 7], [12, 13], [5, 7], [6, 14], [9, 1], [10, 14], [18, 3], [2, 0], [14, 4], [17, 18], [15, 16], [10, 3], [2, 19], [16, 12], [7, 4], [13, 9], [17, 10], [6, 11], [18, 16], [0, 19], [12, 13], [10, 14], [8, 1], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [5, 7], [18, 16], [15, 16], [14, 5], [12, 13], [11, 7], [8, 1], [7, 4], [10, 14], [12, 19], [13, 1], [3, 14], [5, 4], [8, 1], [17, 18], [5, 7], [2, 12], [15, 2], [13, 8], [4, 9], [14, 7], [18, 3], [6, 11], [15, 16], [10, 3], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [17, 18], [13, 8], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [16, 12], [3, 6], [14, 4], [13, 9], [2, 19], [17, 10], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [6, 11], [2, 12], [4, 9], [16, 5], [12, 19], [3, 6], [6, 11], [9, 1], [5, 4], [16, 13], [2, 0], [17, 10], [14, 4], [10, 6], [0, 19], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [17, 10], [15, 2], [18, 3], [16, 12], [5, 13], [0, 19], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [17, 10], [14, 7], ----End Timer [Execute Mapping]:  5.35942006111145

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 15]
[22, 45]
[42, 55]
[67, 85]
[97, 111]
[124, 153]
[167, 183]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[29, 35, 37]
[120, 142, 147]
[156, 164, 172]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[142, 147, 148]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[86, 91, 94]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 15]
[22, 45]
[42, 55]
[67, 85]
[97, 111]
[124, 153]
[167, 183]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3434746265411377

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [9, 15] cc => I, Pos: [9, 15] cc => I, Pos: [22, 45] cc => I, Pos: [22, 45] cc => I, Pos: [29, 35, 37] ccc => cc, Pos: [42, 55] cc => I, Pos: [42, 55] cc => I, Pos: [67, 85] cc => I, Pos: [67, 85] cc => I, Pos: [86, 91, 94] ccc => cc, Pos: [97, 111] cc => I, Pos: [97, 111] cc => I, Pos: [120, 142, 147] ccc => cc, Pos: [124, 153] cc => I, Pos: [124, 153] cc => I, Pos: [142, 147, 148] ccc => cc, Pos: [156, 164, 172] ccc => cc, Pos: [167, 183] cc => I, Pos: [167, 183] cc => I]

--------End Timer [Generate Plans]:  0.0312345027923584

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 15] cc => I,
 Pos: [22, 45] cc => I,
 Pos: [29, 35, 37] ccc => cc,
 Pos: [42, 55] cc => I,
 Pos: [67, 85] cc => I,
 Pos: [86, 91, 94] ccc => cc,
 Pos: [97, 111] cc => I,
 Pos: [142, 147, 148] ccc => cc,
 Pos: [124, 153] cc => I,
 Pos: [156, 164, 172] ccc => cc,
 Pos: [167, 183] cc => I]
Change: 11, Saving: 11

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 15] cc => I
Apply:  Pos: [22, 45] cc => I
Apply:  Pos: [29, 35, 37] ccc => cc
Apply:  Pos: [42, 55] cc => I
Apply:  Pos: [67, 85] cc => I
Apply:  Pos: [86, 91, 94] ccc => cc
Apply:  Pos: [97, 111] cc => I
Apply:  Pos: [142, 147, 148] ccc => cc
Apply:  Pos: [124, 153] cc => I
Apply:  Pos: [156, 164, 172] ccc => cc
Apply:  Pos: [167, 183] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [3, 16], [18, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [5, 7], [6, 14], [9, 1], [10, 14], [18, 3], [2, 0], [14, 4], [17, 18], [10, 3], [2, 19], [16, 12], [7, 4], [13, 9], [17, 10], [6, 11], [18, 16], [0, 19], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [5, 7], [15, 16], [18, 16], [14, 5], [12, 13], [11, 7], [5, 7], [10, 14], [12, 19], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [14, 7], [18, 3], [6, 11], [15, 16], [10, 3], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [17, 18], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [16, 12], [3, 6], [14, 4], [13, 9], [2, 19], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [3, 6], [2, 12], [4, 9], [16, 5], [12, 19], [6, 11], [9, 1], [5, 4], [16, 13], [2, 0], [14, 4], [10, 6], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  3.374709129333496

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[73, 91]
[108, 128]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[71, 74, 76]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[73, 91]
[108, 128]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.906200885772705

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [71, 74, 76] ccc => cc, Pos: [73, 91] cc => I, Pos: [73, 91] cc => I, Pos: [108, 128] cc => I, Pos: [108, 128] cc => I]

--------End Timer [Generate Plans]:  0.016149282455444336

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [71, 74, 76] ccc => cc, Pos: [73, 91] cc => I, Pos: [108, 128] cc => I]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [71, 74, 76] ccc => cc
Apply:  Pos: [73, 91] cc => I
Apply:  Pos: [108, 128] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [18, 16], [3, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [2, 5], [16, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [5, 7], [6, 14], [9, 1], [10, 14], [18, 3], [2, 0], [14, 4], [17, 18], [10, 3], [2, 19], [16, 12], [7, 4], [13, 9], [17, 10], [6, 11], [18, 16], [0, 19], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [14, 5], [18, 16], [5, 7], [12, 13], [11, 7], [10, 14], [12, 19], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [14, 7], [18, 3], [6, 11], [10, 3], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [17, 18], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [16, 12], [14, 4], [13, 9], [12, 19], [2, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [6, 11], [9, 1], [5, 4], [16, 13], [2, 0], [14, 4], [10, 6], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  2.9223501682281494

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8121237754821777

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [3, 16], [18, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [5, 7], [6, 14], [9, 1], [10, 14], [18, 3], [2, 0], [14, 4], [17, 18], [10, 3], [2, 19], [16, 12], [7, 4], [13, 9], [17, 10], [6, 11], [18, 16], [0, 19], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [14, 5], [18, 16], [5, 7], [12, 13], [11, 7], [10, 14], [12, 19], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [14, 7], [18, 3], [6, 11], [10, 3], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [17, 18], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [16, 12], [14, 4], [13, 9], [2, 19], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [6, 11], [9, 1], [5, 4], [16, 13], [2, 0], [14, 4], [10, 6], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  2.8121237754821777

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [162] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 324

Reduced: 
 - size: 108 (40.00%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10959339141845703

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [11, 7], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [11, 7], [16, 13], [14, 7], [9, 1], [0, 12], [2, 19], [15, 16], [9, 1], [5, 7], [17, 10], [6, 11], [18, 3], [3, 16], [8, 1], [11, 7], [14, 4], [2, 0], [12, 5], [18, 15], [18, 3], [11, 7], [19, 8], [16, 5], [2, 12], [6, 14], [4, 9], [3, 14], [11, 7], [18, 16], [9, 1], [12, 5], [6, 14], [12, 13], [16, 5], [15, 3], [4, 9], [17, 18], [3, 14], [10, 6], [15, 16], [8, 1], [0, 19], [11, 7], [10, 3], [15, 16], [2, 12], [5, 7], [19, 8], [17, 18], [6, 14], [10, 3], [5, 7], [15, 16], [9, 1], [14, 4], [6, 11], [18, 3], [2, 0], [10, 14], [9, 1], [6, 11], [17, 18], [15, 16], [5, 7], [19, 8], [9, 1], [10, 3], [12, 13], [14, 4], [17, 18], [14, 5], [2, 19], [16, 12], [7, 4], [13, 9], [17, 10], [13, 1], [14, 4], [15, 3], [0, 19], [16, 12], [17, 18], [0, 19], [14, 4], [13, 1], [6, 11], [16, 12], [18, 16], [14, 5], [0, 19], [12, 13], [10, 6], [8, 1], [15, 3], [18, 15], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [18, 15], [10, 6], [13, 1], [2, 19], [14, 7], [16, 5], [15, 2], [3, 14], [13, 1], [7, 4], [12, 19], [15, 2], [12, 19], [3, 6], [13, 9], [5, 7], [18, 16], [15, 16], [14, 5], [12, 13], [11, 7], [2, 0], [8, 1], [15, 16], [7, 4], [2, 0], [10, 14], [3, 6], [12, 19], [13, 1], [15, 16], [3, 14], [4, 9], [8, 1], [17, 18], [5, 7], [2, 12], [15, 2], [13, 8], [5, 4], [0, 19], [14, 7], [18, 3], [6, 11], [15, 16], [0, 19], [13, 8], [10, 3], [4, 9], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [13, 8], [3, 16], [17, 18], [13, 8], [10, 14], [15, 16], [2, 0], [17, 18], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [6, 11], [14, 4], [13, 9], [2, 19], [17, 10], [12, 19], [5, 13], [15, 2], [18, 16], [10, 14], [8, 1], [7, 4], [12, 13], [17, 18], [10, 14], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [17, 18], [16, 5], [3, 6], [2, 12], [4, 9], [3, 16], [6, 11], [2, 0], [14, 4], [2, 0], [12, 19], [6, 11], [14, 4], [16, 5], [17, 18], [15, 2], [3, 6], [9, 1], [5, 4], [15, 2], [16, 13], [0, 19], [17, 10], [6, 11], [14, 4], [10, 6], [2, 19], [4, 9], [6, 11], [13, 1], [16, 12], [3, 14], [4, 9], [15, 16], [12, 13], [2, 0], [6, 11], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [17, 10], [15, 2], [18, 3], [16, 12], [5, 13], [0, 19], [8, 1], [10, 3], [5, 7], [6, 14], [2, 12], [8, 1], [13, 9], [10, 3], [14, 4], [16, 12], [6, 11], [2, 19], [8, 1], [6, 11], [16, 5], [0, 12], [15, 3], [13, 9], [17, 10], [14, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[14, 18]
[25, 31]
[31, 38]
[38, 53]
[50, 55]
[47, 59]
[54, 61]
[57, 62]
[55, 63]
[64, 70]
[66, 71]
[63, 73]
[62, 74]
[58, 75]
[70, 76]
[72, 80]
[83, 91]
[80, 92]
[90, 93]
[88, 94]
[87, 95]
[71, 96]
[91, 97]
[81, 99]
[93, 100]
[89, 104]
[105, 111]
[113, 119]
[117, 122]
[121, 123]
[128, 134]
[132, 136]
[124, 138]
[123, 139]
[134, 141]
[141, 155]
[151, 156]
[149, 157]
[157, 165]
[165, 168]
[167, 172]
[172, 177]
[188, 193]
[209, 211]
[208, 213]
[210, 214]
[202, 216]
[217, 221]
[229, 234]
[230, 238]
[250, 255]
[251, 257]
[255, 262]
[260, 263]
[256, 267]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[22, 23, 30]
[36, 40, 46]
[102, 107, 112]
[154, 174, 179]
[192, 199, 202]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[4, 10, 14]
[43, 56, 78]
[65, 69, 79]
[143, 150, 159]
[179, 204, 208]
[203, 207, 215]
[213, 218, 225]
[225, 227, 230]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[223, 228, 237]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[14, 18]
[25, 31]
[31, 38]
[38, 53]
[50, 55]
[47, 59]
[54, 61]
[57, 62]
[55, 63]
[64, 70]
[66, 71]
[63, 73]
[62, 74]
[58, 75]
[70, 76]
[72, 80]
[83, 91]
[80, 92]
[90, 93]
[88, 94]
[87, 95]
[71, 96]
[91, 97]
[81, 99]
[93, 100]
[89, 104]
[105, 111]
[113, 119]
[117, 122]
[121, 123]
[128, 134]
[132, 136]
[124, 138]
[123, 139]
[134, 141]
[141, 155]
[151, 156]
[149, 157]
[157, 165]
[165, 168]
[167, 172]
[172, 177]
[188, 193]
[209, 211]
[208, 213]
[210, 214]
[202, 216]
[217, 221]
[229, 234]
[230, 238]
[250, 255]
[251, 257]
[255, 262]
[260, 263]
[256, 267]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.1873602867126465

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10, 14] ccc => cc, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [14, 18] cc => I, Pos: [14, 18] cc => I, Pos: [22, 23, 30] ccc => cc, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [31, 38] cc => I, Pos: [31, 38] cc => I, Pos: [36, 40, 46] ccc => cc, Pos: [38, 53] cc => I, Pos: [38, 53] cc => I, Pos: [43, 56, 78] ccc => cc, Pos: [47, 59] cc => I, Pos: [47, 59] cc => I, Pos: [50, 55] cc => I, Pos: [50, 55] cc => I, Pos: [54, 61] cc => I, Pos: [54, 61] cc => I, Pos: [55, 63] cc => I, Pos: [55, 63] cc => I, Pos: [57, 62] cc => I, Pos: [57, 62] cc => I, Pos: [58, 75] cc => I, Pos: [58, 75] cc => I, Pos: [62, 74] cc => I, Pos: [62, 74] cc => I, Pos: [63, 73] cc => I, Pos: [63, 73] cc => I, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [65, 69, 79] ccc => cc, Pos: [66, 71] cc => I, Pos: [66, 71] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [71, 96] cc => I, Pos: [71, 96] cc => I, Pos: [72, 80] cc => I, Pos: [72, 80] cc => I, Pos: [80, 92] cc => I, Pos: [80, 92] cc => I, Pos: [81, 99] cc => I, Pos: [81, 99] cc => I, Pos: [83, 91] cc => I, Pos: [83, 91] cc => I, Pos: [87, 95] cc => I, Pos: [87, 95] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 104] cc => I, Pos: [89, 104] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [91, 97] cc => I, Pos: [91, 97] cc => I, Pos: [93, 100] cc => I, Pos: [93, 100] cc => I, Pos: [102, 107, 112] ccc => cc, Pos: [105, 111] cc => I, Pos: [105, 111] cc => I, Pos: [113, 119] cc => I, Pos: [113, 119] cc => I, Pos: [117, 122] cc => I, Pos: [117, 122] cc => I, Pos: [121, 123] cc => I, Pos: [121, 123] cc => I, Pos: [123, 139] cc => I, Pos: [123, 139] cc => I, Pos: [124, 138] cc => I, Pos: [124, 138] cc => I, Pos: [128, 134] cc => I, Pos: [128, 134] cc => I, Pos: [132, 136] cc => I, Pos: [132, 136] cc => I, Pos: [134, 141] cc => I, Pos: [134, 141] cc => I, Pos: [141, 155] cc => I, Pos: [141, 155] cc => I, Pos: [143, 150, 159] ccc => cc, Pos: [149, 157] cc => I, Pos: [149, 157] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [154, 174, 179] ccc => cc, Pos: [157, 165] cc => I, Pos: [157, 165] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [167, 172] cc => I, Pos: [167, 172] cc => I, Pos: [172, 177] cc => I, Pos: [172, 177] cc => I, Pos: [179, 204, 208] ccc => cc, Pos: [188, 193] cc => I, Pos: [188, 193] cc => I, Pos: [192, 199, 202] ccc => cc, Pos: [202, 216] cc => I, Pos: [202, 216] cc => I, Pos: [203, 207, 215] ccc => cc, Pos: [208, 213] cc => I, Pos: [208, 213] cc => I, Pos: [209, 211] cc => I, Pos: [209, 211] cc => I, Pos: [210, 214] cc => I, Pos: [210, 214] cc => I, Pos: [213, 218, 225] ccc => cc, Pos: [217, 221] cc => I, Pos: [217, 221] cc => I, Pos: [223, 228, 237] ccc => cc, Pos: [225, 227, 230] ccc => cc, Pos: [229, 234] cc => I, Pos: [229, 234] cc => I, Pos: [230, 238] cc => I, Pos: [230, 238] cc => I, Pos: [250, 255] cc => I, Pos: [250, 255] cc => I, Pos: [251, 257] cc => I, Pos: [251, 257] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [256, 267] cc => I, Pos: [256, 267] cc => I, Pos: [260, 263] cc => I, Pos: [260, 263] cc => I]

--------End Timer [Generate Plans]:  0.14086413383483887

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 10, 14] ccc => cc,
 Pos: [5, 11] cc => I,
 Pos: [22, 23, 30] ccc => cc,
 Pos: [25, 31] cc => I,
 Pos: [36, 40, 46] ccc => cc,
 Pos: [38, 53] cc => I,
 Pos: [43, 56, 78] ccc => cc,
 Pos: [47, 59] cc => I,
 Pos: [50, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [62, 74] cc => I,
 Pos: [58, 75] cc => I,
 Pos: [63, 73] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [65, 69, 79] ccc => cc,
 Pos: [71, 96] cc => I,
 Pos: [80, 92] cc => I,
 Pos: [81, 99] cc => I,
 Pos: [83, 91] cc => I,
 Pos: [87, 95] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [89, 104] cc => I,
 Pos: [93, 100] cc => I,
 Pos: [102, 107, 112] ccc => cc,
 Pos: [105, 111] cc => I,
 Pos: [113, 119] cc => I,
 Pos: [117, 122] cc => I,
 Pos: [121, 123] cc => I,
 Pos: [124, 138] cc => I,
 Pos: [128, 134] cc => I,
 Pos: [132, 136] cc => I,
 Pos: [141, 155] cc => I,
 Pos: [143, 150, 159] ccc => cc,
 Pos: [157, 165] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [179, 204, 208] ccc => cc,
 Pos: [172, 177] cc => I,
 Pos: [188, 193] cc => I,
 Pos: [202, 216] cc => I,
 Pos: [203, 207, 215] ccc => cc,
 Pos: [209, 211] cc => I,
 Pos: [210, 214] cc => I,
 Pos: [213, 218, 225] ccc => cc,
 Pos: [217, 221] cc => I,
 Pos: [223, 228, 237] ccc => cc,
 Pos: [229, 234] cc => I,
 Pos: [230, 238] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [251, 257] cc => I,
 Pos: [256, 267] cc => I,
 Pos: [260, 263] cc => I]
Change: 51, Saving: 53

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 10, 14] ccc => cc
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [22, 23, 30] ccc => cc
Apply:  Pos: [25, 31] cc => I
Apply:  Pos: [36, 40, 46] ccc => cc
Apply:  Pos: [38, 53] cc => I
Apply:  Pos: [43, 56, 78] ccc => cc
Apply:  Pos: [47, 59] cc => I
Apply:  Pos: [50, 55] cc => I
Apply:  Pos: [54, 61] cc => I
Apply:  Pos: [62, 74] cc => I
Apply:  Pos: [58, 75] cc => I
Apply:  Pos: [63, 73] cc => I
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [65, 69, 79] ccc => cc
Apply:  Pos: [71, 96] cc => I
Apply:  Pos: [80, 92] cc => I
Apply:  Pos: [81, 99] cc => I
Apply:  Pos: [83, 91] cc => I
Apply:  Pos: [87, 95] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [89, 104] cc => I
Apply:  Pos: [93, 100] cc => I
Apply:  Pos: [102, 107, 112] ccc => cc
Apply:  Pos: [105, 111] cc => I
Apply:  Pos: [113, 119] cc => I
Apply:  Pos: [117, 122] cc => I
Apply:  Pos: [121, 123] cc => I
Apply:  Pos: [124, 138] cc => I
Apply:  Pos: [128, 134] cc => I
Apply:  Pos: [132, 136] cc => I
Apply:  Pos: [141, 155] cc => I
Apply:  Pos: [143, 150, 159] ccc => cc
Apply:  Pos: [157, 165] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [179, 204, 208] ccc => cc
Apply:  Pos: [172, 177] cc => I
Apply:  Pos: [188, 193] cc => I
Apply:  Pos: [202, 216] cc => I
Apply:  Pos: [203, 207, 215] ccc => cc
Apply:  Pos: [209, 211] cc => I
Apply:  Pos: [210, 214] cc => I
Apply:  Pos: [213, 218, 225] ccc => cc
Apply:  Pos: [217, 221] cc => I
Apply:  Pos: [223, 228, 237] ccc => cc
Apply:  Pos: [229, 234] cc => I
Apply:  Pos: [230, 238] cc => I
Apply:  Pos: [255, 262] cc => I
Apply:  Pos: [251, 257] cc => I
Apply:  Pos: [256, 267] cc => I
Apply:  Pos: [260, 263] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [9, 1], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [9, 1], [5, 7], [17, 10], [6, 11], [18, 16], [3, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 12], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [2, 12], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [5, 7], [6, 14], [10, 14], [6, 11], [18, 3], [2, 0], [14, 4], [17, 18], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 10], [0, 19], [16, 12], [18, 16], [12, 13], [10, 14], [8, 1], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [5, 7], [18, 16], [14, 5], [12, 13], [11, 7], [8, 1], [7, 4], [10, 14], [12, 19], [13, 1], [3, 14], [5, 4], [8, 1], [17, 18], [5, 7], [2, 12], [15, 2], [13, 8], [4, 9], [14, 7], [18, 3], [6, 11], [10, 3], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [17, 18], [13, 8], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [16, 12], [3, 6], [14, 4], [13, 9], [2, 19], [17, 10], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [6, 11], [2, 12], [4, 9], [16, 5], [12, 19], [3, 6], [6, 11], [9, 1], [5, 4], [16, 13], [2, 0], [17, 10], [14, 4], [10, 6], [0, 19], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [17, 10], [15, 2], [18, 3], [16, 12], [5, 13], [0, 19], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [17, 10], [14, 7], ----End Timer [Execute Mapping]:  5.328224420547485

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 15]
[63, 80]
[92, 105]
[118, 147]
[161, 177]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[28, 34, 36]
[114, 136, 141]
[150, 158, 166]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[136, 141, 142]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[81, 86, 89]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 15]
[63, 80]
[92, 105]
[118, 147]
[161, 177]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.187376022338867

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [9, 15] cc => I, Pos: [9, 15] cc => I, Pos: [28, 34, 36] ccc => cc, Pos: [63, 80] cc => I, Pos: [63, 80] cc => I, Pos: [81, 86, 89] ccc => cc, Pos: [92, 105] cc => I, Pos: [92, 105] cc => I, Pos: [114, 136, 141] ccc => cc, Pos: [118, 147] cc => I, Pos: [118, 147] cc => I, Pos: [136, 141, 142] ccc => cc, Pos: [150, 158, 166] ccc => cc, Pos: [161, 177] cc => I, Pos: [161, 177] cc => I]

--------End Timer [Generate Plans]:  0.015636682510375977

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 15] cc => I,
 Pos: [28, 34, 36] ccc => cc,
 Pos: [63, 80] cc => I,
 Pos: [81, 86, 89] ccc => cc,
 Pos: [92, 105] cc => I,
 Pos: [114, 136, 141] ccc => cc,
 Pos: [118, 147] cc => I,
 Pos: [150, 158, 166] ccc => cc,
 Pos: [161, 177] cc => I]
Change: 9, Saving: 9

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 15] cc => I
Apply:  Pos: [28, 34, 36] ccc => cc
Apply:  Pos: [63, 80] cc => I
Apply:  Pos: [81, 86, 89] ccc => cc
Apply:  Pos: [92, 105] cc => I
Apply:  Pos: [114, 136, 141] ccc => cc
Apply:  Pos: [118, 147] cc => I
Apply:  Pos: [150, 158, 166] ccc => cc
Apply:  Pos: [161, 177] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [3, 16], [18, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [5, 7], [10, 14], [6, 11], [6, 14], [18, 3], [2, 0], [14, 4], [17, 18], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 10], [0, 19], [16, 12], [18, 16], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [5, 7], [18, 16], [14, 5], [12, 13], [11, 7], [5, 7], [10, 14], [12, 19], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [14, 7], [18, 3], [6, 11], [10, 3], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [17, 18], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [16, 12], [3, 11], [14, 4], [13, 9], [2, 19], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [6, 11], [2, 12], [4, 9], [16, 5], [12, 19], [6, 11], [9, 1], [5, 4], [16, 13], [2, 0], [14, 4], [10, 6], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  3.203012704849243

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[127, 132]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[71, 73, 75]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[127, 132]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8749773502349854

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [71, 73, 75] ccc => cc, Pos: [127, 132] cc => I, Pos: [127, 132] cc => I]

--------End Timer [Generate Plans]:  0.015624284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [71, 73, 75] ccc => cc, Pos: [127, 132] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [71, 73, 75] ccc => cc
Apply:  Pos: [127, 132] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [18, 16], [3, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [2, 5], [16, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [5, 7], [10, 14], [6, 14], [6, 11], [18, 3], [2, 0], [14, 4], [17, 18], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 10], [0, 19], [16, 12], [18, 16], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [14, 5], [18, 16], [5, 7], [12, 13], [11, 7], [10, 14], [12, 19], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [14, 7], [18, 3], [6, 11], [10, 3], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [17, 18], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [16, 12], [3, 11], [14, 4], [13, 9], [12, 19], [2, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [9, 1], [5, 4], [16, 13], [2, 0], [14, 4], [10, 6], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  2.890601634979248

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.797067165374756

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [3, 16], [18, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [5, 7], [6, 14], [10, 14], [6, 11], [18, 3], [2, 0], [14, 4], [17, 18], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 10], [0, 19], [16, 12], [18, 16], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [14, 5], [18, 16], [5, 7], [12, 13], [11, 7], [10, 14], [12, 19], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [14, 7], [18, 3], [6, 11], [10, 3], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [17, 18], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [16, 12], [3, 11], [14, 4], [13, 9], [2, 19], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [9, 1], [5, 4], [16, 13], [2, 0], [14, 4], [10, 6], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  2.797067165374756

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [162] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 324

Reduced: 
 - size: 108 (40.00%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.109100341796875

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [11, 7], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [11, 7], [16, 13], [14, 7], [9, 1], [0, 12], [2, 19], [15, 16], [9, 1], [5, 7], [17, 10], [6, 11], [18, 3], [3, 16], [8, 1], [11, 7], [14, 4], [2, 0], [12, 5], [18, 15], [18, 3], [11, 7], [19, 8], [16, 5], [2, 12], [6, 14], [4, 9], [3, 14], [11, 7], [18, 16], [9, 1], [12, 5], [6, 14], [12, 13], [16, 5], [15, 3], [4, 9], [17, 18], [3, 14], [10, 6], [15, 16], [8, 1], [0, 19], [11, 7], [10, 3], [15, 16], [2, 12], [5, 7], [19, 8], [17, 18], [6, 14], [10, 3], [5, 7], [15, 16], [9, 1], [14, 4], [6, 11], [18, 3], [2, 0], [10, 14], [9, 1], [6, 11], [17, 18], [15, 16], [5, 7], [19, 8], [9, 1], [10, 3], [12, 13], [14, 4], [17, 18], [14, 5], [2, 19], [16, 12], [7, 4], [13, 9], [17, 10], [13, 1], [14, 4], [15, 3], [0, 19], [16, 12], [17, 18], [0, 19], [14, 4], [13, 1], [6, 11], [16, 12], [18, 16], [14, 5], [0, 19], [12, 13], [10, 6], [8, 1], [15, 3], [18, 15], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [18, 15], [10, 6], [13, 1], [2, 19], [14, 7], [16, 5], [15, 2], [3, 14], [13, 1], [7, 4], [12, 19], [15, 2], [12, 19], [3, 6], [13, 9], [5, 7], [18, 16], [15, 16], [14, 5], [12, 13], [11, 7], [2, 0], [8, 1], [15, 16], [7, 4], [2, 0], [10, 14], [3, 6], [12, 19], [13, 1], [15, 16], [3, 14], [4, 9], [8, 1], [17, 18], [5, 7], [2, 12], [15, 2], [13, 8], [5, 4], [0, 19], [14, 7], [18, 3], [6, 11], [15, 16], [0, 19], [13, 8], [10, 3], [4, 9], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [13, 8], [3, 16], [17, 18], [13, 8], [10, 14], [15, 16], [2, 0], [17, 18], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [6, 11], [14, 4], [13, 9], [2, 19], [17, 10], [12, 19], [5, 13], [15, 2], [18, 16], [10, 14], [8, 1], [7, 4], [12, 13], [17, 18], [10, 14], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [17, 18], [16, 5], [3, 6], [2, 12], [4, 9], [3, 16], [6, 11], [2, 0], [14, 4], [2, 0], [12, 19], [6, 11], [14, 4], [16, 5], [17, 18], [15, 2], [3, 6], [9, 1], [5, 4], [15, 2], [16, 13], [0, 19], [17, 10], [6, 11], [14, 4], [10, 6], [2, 19], [4, 9], [6, 11], [13, 1], [16, 12], [3, 14], [4, 9], [15, 16], [12, 13], [2, 0], [6, 11], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [17, 10], [15, 2], [18, 3], [16, 12], [5, 13], [0, 19], [8, 1], [10, 3], [5, 7], [6, 14], [2, 12], [8, 1], [13, 9], [10, 3], [14, 4], [16, 12], [6, 11], [2, 19], [8, 1], [6, 11], [16, 5], [0, 12], [15, 3], [13, 9], [17, 10], [14, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[14, 18]
[25, 31]
[31, 38]
[38, 53]
[50, 55]
[47, 59]
[54, 61]
[57, 62]
[55, 63]
[64, 70]
[66, 71]
[63, 73]
[62, 74]
[58, 75]
[70, 76]
[72, 80]
[83, 91]
[80, 92]
[90, 93]
[88, 94]
[87, 95]
[71, 96]
[91, 97]
[81, 99]
[93, 100]
[89, 104]
[105, 111]
[113, 119]
[117, 122]
[121, 123]
[128, 134]
[132, 136]
[124, 138]
[123, 139]
[134, 141]
[141, 155]
[151, 156]
[149, 157]
[157, 165]
[165, 168]
[167, 172]
[172, 177]
[188, 193]
[209, 211]
[208, 213]
[210, 214]
[202, 216]
[217, 221]
[229, 234]
[230, 238]
[250, 255]
[251, 257]
[255, 262]
[260, 263]
[256, 267]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[22, 23, 30]
[36, 40, 46]
[102, 107, 112]
[154, 174, 179]
[192, 199, 202]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[4, 10, 14]
[43, 56, 78]
[65, 69, 79]
[143, 150, 159]
[179, 204, 208]
[203, 207, 215]
[213, 218, 225]
[225, 227, 230]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[223, 228, 237]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[14, 18]
[25, 31]
[31, 38]
[38, 53]
[50, 55]
[47, 59]
[54, 61]
[57, 62]
[55, 63]
[64, 70]
[66, 71]
[63, 73]
[62, 74]
[58, 75]
[70, 76]
[72, 80]
[83, 91]
[80, 92]
[90, 93]
[88, 94]
[87, 95]
[71, 96]
[91, 97]
[81, 99]
[93, 100]
[89, 104]
[105, 111]
[113, 119]
[117, 122]
[121, 123]
[128, 134]
[132, 136]
[124, 138]
[123, 139]
[134, 141]
[141, 155]
[151, 156]
[149, 157]
[157, 165]
[165, 168]
[167, 172]
[172, 177]
[188, 193]
[209, 211]
[208, 213]
[210, 214]
[202, 216]
[217, 221]
[229, 234]
[230, 238]
[250, 255]
[251, 257]
[255, 262]
[260, 263]
[256, 267]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.234317064285278

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10, 14] ccc => cc, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [14, 18] cc => I, Pos: [14, 18] cc => I, Pos: [22, 23, 30] ccc => cc, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [31, 38] cc => I, Pos: [31, 38] cc => I, Pos: [36, 40, 46] ccc => cc, Pos: [38, 53] cc => I, Pos: [38, 53] cc => I, Pos: [43, 56, 78] ccc => cc, Pos: [47, 59] cc => I, Pos: [47, 59] cc => I, Pos: [50, 55] cc => I, Pos: [50, 55] cc => I, Pos: [54, 61] cc => I, Pos: [54, 61] cc => I, Pos: [55, 63] cc => I, Pos: [55, 63] cc => I, Pos: [57, 62] cc => I, Pos: [57, 62] cc => I, Pos: [58, 75] cc => I, Pos: [58, 75] cc => I, Pos: [62, 74] cc => I, Pos: [62, 74] cc => I, Pos: [63, 73] cc => I, Pos: [63, 73] cc => I, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [65, 69, 79] ccc => cc, Pos: [66, 71] cc => I, Pos: [66, 71] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [71, 96] cc => I, Pos: [71, 96] cc => I, Pos: [72, 80] cc => I, Pos: [72, 80] cc => I, Pos: [80, 92] cc => I, Pos: [80, 92] cc => I, Pos: [81, 99] cc => I, Pos: [81, 99] cc => I, Pos: [83, 91] cc => I, Pos: [83, 91] cc => I, Pos: [87, 95] cc => I, Pos: [87, 95] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 104] cc => I, Pos: [89, 104] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [91, 97] cc => I, Pos: [91, 97] cc => I, Pos: [93, 100] cc => I, Pos: [93, 100] cc => I, Pos: [102, 107, 112] ccc => cc, Pos: [105, 111] cc => I, Pos: [105, 111] cc => I, Pos: [113, 119] cc => I, Pos: [113, 119] cc => I, Pos: [117, 122] cc => I, Pos: [117, 122] cc => I, Pos: [121, 123] cc => I, Pos: [121, 123] cc => I, Pos: [123, 139] cc => I, Pos: [123, 139] cc => I, Pos: [124, 138] cc => I, Pos: [124, 138] cc => I, Pos: [128, 134] cc => I, Pos: [128, 134] cc => I, Pos: [132, 136] cc => I, Pos: [132, 136] cc => I, Pos: [134, 141] cc => I, Pos: [134, 141] cc => I, Pos: [141, 155] cc => I, Pos: [141, 155] cc => I, Pos: [143, 150, 159] ccc => cc, Pos: [149, 157] cc => I, Pos: [149, 157] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [154, 174, 179] ccc => cc, Pos: [157, 165] cc => I, Pos: [157, 165] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [167, 172] cc => I, Pos: [167, 172] cc => I, Pos: [172, 177] cc => I, Pos: [172, 177] cc => I, Pos: [179, 204, 208] ccc => cc, Pos: [188, 193] cc => I, Pos: [188, 193] cc => I, Pos: [192, 199, 202] ccc => cc, Pos: [202, 216] cc => I, Pos: [202, 216] cc => I, Pos: [203, 207, 215] ccc => cc, Pos: [208, 213] cc => I, Pos: [208, 213] cc => I, Pos: [209, 211] cc => I, Pos: [209, 211] cc => I, Pos: [210, 214] cc => I, Pos: [210, 214] cc => I, Pos: [213, 218, 225] ccc => cc, Pos: [217, 221] cc => I, Pos: [217, 221] cc => I, Pos: [223, 228, 237] ccc => cc, Pos: [225, 227, 230] ccc => cc, Pos: [229, 234] cc => I, Pos: [229, 234] cc => I, Pos: [230, 238] cc => I, Pos: [230, 238] cc => I, Pos: [250, 255] cc => I, Pos: [250, 255] cc => I, Pos: [251, 257] cc => I, Pos: [251, 257] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [256, 267] cc => I, Pos: [256, 267] cc => I, Pos: [260, 263] cc => I, Pos: [260, 263] cc => I]

--------End Timer [Generate Plans]:  0.12499642372131348

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 18] cc => I,
 Pos: [5, 11] cc => I,
 Pos: [22, 23, 30] ccc => cc,
 Pos: [25, 31] cc => I,
 Pos: [36, 40, 46] ccc => cc,
 Pos: [38, 53] cc => I,
 Pos: [43, 56, 78] ccc => cc,
 Pos: [47, 59] cc => I,
 Pos: [50, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [62, 74] cc => I,
 Pos: [58, 75] cc => I,
 Pos: [63, 73] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [65, 69, 79] ccc => cc,
 Pos: [71, 96] cc => I,
 Pos: [72, 80] cc => I,
 Pos: [81, 99] cc => I,
 Pos: [91, 97] cc => I,
 Pos: [87, 95] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [89, 104] cc => I,
 Pos: [93, 100] cc => I,
 Pos: [102, 107, 112] ccc => cc,
 Pos: [105, 111] cc => I,
 Pos: [113, 119] cc => I,
 Pos: [117, 122] cc => I,
 Pos: [123, 139] cc => I,
 Pos: [124, 138] cc => I,
 Pos: [128, 134] cc => I,
 Pos: [132, 136] cc => I,
 Pos: [141, 155] cc => I,
 Pos: [143, 150, 159] ccc => cc,
 Pos: [157, 165] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [154, 174, 179] ccc => cc,
 Pos: [167, 172] cc => I,
 Pos: [188, 193] cc => I,
 Pos: [202, 216] cc => I,
 Pos: [203, 207, 215] ccc => cc,
 Pos: [208, 213] cc => I,
 Pos: [209, 211] cc => I,
 Pos: [210, 214] cc => I,
 Pos: [217, 221] cc => I,
 Pos: [223, 228, 237] ccc => cc,
 Pos: [230, 238] cc => I,
 Pos: [229, 234] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [251, 257] cc => I,
 Pos: [256, 267] cc => I,
 Pos: [260, 263] cc => I]
Change: 51, Saving: 53

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [14, 18] cc => I
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [22, 23, 30] ccc => cc
Apply:  Pos: [25, 31] cc => I
Apply:  Pos: [36, 40, 46] ccc => cc
Apply:  Pos: [38, 53] cc => I
Apply:  Pos: [43, 56, 78] ccc => cc
Apply:  Pos: [47, 59] cc => I
Apply:  Pos: [50, 55] cc => I
Apply:  Pos: [54, 61] cc => I
Apply:  Pos: [62, 74] cc => I
Apply:  Pos: [58, 75] cc => I
Apply:  Pos: [63, 73] cc => I
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [65, 69, 79] ccc => cc
Apply:  Pos: [71, 96] cc => I
Apply:  Pos: [72, 80] cc => I
Apply:  Pos: [81, 99] cc => I
Apply:  Pos: [91, 97] cc => I
Apply:  Pos: [87, 95] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [89, 104] cc => I
Apply:  Pos: [93, 100] cc => I
Apply:  Pos: [102, 107, 112] ccc => cc
Apply:  Pos: [105, 111] cc => I
Apply:  Pos: [113, 119] cc => I
Apply:  Pos: [117, 122] cc => I
Apply:  Pos: [123, 139] cc => I
Apply:  Pos: [124, 138] cc => I
Apply:  Pos: [128, 134] cc => I
Apply:  Pos: [132, 136] cc => I
Apply:  Pos: [141, 155] cc => I
Apply:  Pos: [143, 150, 159] ccc => cc
Apply:  Pos: [157, 165] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [154, 174, 179] ccc => cc
Apply:  Pos: [167, 172] cc => I
Apply:  Pos: [188, 193] cc => I
Apply:  Pos: [202, 216] cc => I
Apply:  Pos: [203, 207, 215] ccc => cc
Apply:  Pos: [208, 213] cc => I
Apply:  Pos: [209, 211] cc => I
Apply:  Pos: [210, 214] cc => I
Apply:  Pos: [217, 221] cc => I
Apply:  Pos: [223, 228, 237] ccc => cc
Apply:  Pos: [230, 238] cc => I
Apply:  Pos: [229, 234] cc => I
Apply:  Pos: [255, 262] cc => I
Apply:  Pos: [251, 257] cc => I
Apply:  Pos: [256, 267] cc => I
Apply:  Pos: [260, 263] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [18, 16], [3, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 12], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [2, 12], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [5, 7], [6, 14], [9, 1], [10, 14], [6, 11], [18, 3], [2, 0], [14, 4], [10, 3], [2, 19], [16, 12], [7, 4], [13, 9], [17, 10], [0, 19], [17, 18], [18, 16], [12, 13], [10, 14], [8, 1], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [12, 19], [13, 9], [5, 7], [18, 16], [14, 5], [12, 13], [11, 7], [8, 1], [7, 4], [10, 14], [13, 1], [3, 14], [5, 4], [8, 1], [17, 18], [5, 7], [2, 12], [15, 2], [13, 8], [4, 9], [14, 7], [18, 3], [6, 7], [10, 3], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [13, 8], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [2, 19], [17, 10], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [3, 6], [2, 12], [4, 9], [16, 5], [12, 19], [3, 6], [9, 1], [5, 4], [16, 13], [2, 0], [17, 10], [6, 11], [14, 4], [10, 6], [0, 19], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [17, 10], [15, 2], [18, 3], [16, 12], [5, 13], [0, 19], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [17, 10], [14, 7], ----End Timer [Execute Mapping]:  5.359313488006592

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[62, 80]
[91, 103]
[133, 139]
[116, 144]
[159, 175]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[27, 33, 35]
[148, 156, 164]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[81, 85, 88]
[93, 95, 97]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[62, 80]
[91, 103]
[133, 139]
[116, 144]
[159, 175]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.1711127758026123

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [27, 33, 35] ccc => cc, Pos: [62, 80] cc => I, Pos: [62, 80] cc => I, Pos: [81, 85, 88] ccc => cc, Pos: [91, 103] cc => I, Pos: [91, 103] cc => I, Pos: [93, 95, 97] ccc => cc, Pos: [116, 144] cc => I, Pos: [116, 144] cc => I, Pos: [133, 139] cc => I, Pos: [133, 139] cc => I, Pos: [148, 156, 164] ccc => cc, Pos: [159, 175] cc => I, Pos: [159, 175] cc => I]

--------End Timer [Generate Plans]:  0.0312657356262207

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [27, 33, 35] ccc => cc,
 Pos: [62, 80] cc => I,
 Pos: [81, 85, 88] ccc => cc,
 Pos: [91, 103] cc => I,
 Pos: [93, 95, 97] ccc => cc,
 Pos: [116, 144] cc => I,
 Pos: [133, 139] cc => I,
 Pos: [148, 156, 164] ccc => cc,
 Pos: [159, 175] cc => I]
Change: 9, Saving: 9

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [27, 33, 35] ccc => cc
Apply:  Pos: [62, 80] cc => I
Apply:  Pos: [81, 85, 88] ccc => cc
Apply:  Pos: [91, 103] cc => I
Apply:  Pos: [93, 95, 97] ccc => cc
Apply:  Pos: [116, 144] cc => I
Apply:  Pos: [133, 139] cc => I
Apply:  Pos: [148, 156, 164] ccc => cc
Apply:  Pos: [159, 175] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [3, 16], [18, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [5, 7], [6, 14], [9, 1], [10, 14], [6, 11], [18, 3], [2, 0], [14, 4], [10, 3], [2, 19], [16, 12], [7, 4], [13, 9], [17, 10], [0, 19], [17, 18], [18, 16], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [12, 19], [13, 9], [5, 7], [18, 16], [14, 5], [12, 13], [11, 7], [5, 7], [10, 14], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [6, 14], [18, 3], [14, 7], [10, 3], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [2, 19], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [9, 1], [5, 4], [16, 13], [2, 0], [6, 11], [14, 4], [10, 6], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  3.202378511428833

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[73, 75, 77]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8280789852142334

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [73, 75, 77] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [73, 75, 77] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [73, 75, 77] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [18, 16], [3, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [2, 5], [16, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [5, 7], [6, 14], [9, 1], [10, 14], [6, 11], [18, 3], [2, 0], [14, 4], [10, 3], [2, 19], [16, 12], [7, 4], [13, 9], [17, 10], [0, 19], [17, 18], [18, 16], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [12, 19], [13, 9], [14, 5], [18, 16], [5, 7], [12, 13], [11, 7], [10, 14], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [6, 14], [18, 3], [14, 7], [10, 3], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [12, 19], [2, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [9, 1], [5, 4], [16, 13], [2, 0], [6, 11], [14, 4], [10, 6], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  2.8280789852142334

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8438618183135986

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [3, 16], [18, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [5, 7], [6, 14], [9, 1], [10, 14], [6, 11], [18, 3], [2, 0], [14, 4], [10, 3], [2, 19], [16, 12], [7, 4], [13, 9], [17, 10], [0, 19], [17, 18], [18, 16], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [12, 19], [13, 9], [14, 5], [18, 16], [5, 7], [12, 13], [11, 7], [10, 14], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [6, 14], [18, 3], [14, 7], [10, 3], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [2, 19], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 18], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [9, 1], [5, 4], [16, 13], [2, 0], [6, 11], [14, 4], [10, 6], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [8, 1], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  2.8438618183135986

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [162] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 324

Reduced: 
 - size: 108 (40.00%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12495160102844238

[5, 13], [16, 12], [15, 3], [17, 10], [9, 1], [11, 7], [12, 13], [18, 15], [3, 6], [10, 14], [4, 9], [11, 7], [16, 13], [14, 7], [9, 1], [0, 12], [2, 19], [15, 16], [9, 1], [5, 7], [17, 10], [6, 11], [18, 3], [3, 16], [8, 1], [11, 7], [14, 4], [2, 0], [12, 5], [18, 15], [18, 3], [11, 7], [19, 8], [16, 5], [2, 12], [6, 14], [4, 9], [3, 14], [11, 7], [18, 16], [9, 1], [12, 5], [6, 14], [12, 13], [16, 5], [15, 3], [4, 9], [17, 18], [3, 14], [10, 6], [15, 16], [8, 1], [0, 19], [11, 7], [10, 3], [15, 16], [2, 12], [5, 7], [19, 8], [17, 18], [6, 14], [10, 3], [5, 7], [15, 16], [9, 1], [14, 4], [6, 11], [18, 3], [2, 0], [10, 14], [9, 1], [6, 11], [17, 18], [15, 16], [5, 7], [19, 8], [9, 1], [10, 3], [12, 13], [14, 4], [17, 18], [14, 5], [2, 19], [16, 12], [7, 4], [13, 9], [17, 10], [13, 1], [14, 4], [15, 3], [0, 19], [16, 12], [17, 18], [0, 19], [14, 4], [13, 1], [6, 11], [16, 12], [18, 16], [14, 5], [0, 19], [12, 13], [10, 6], [8, 1], [15, 3], [18, 15], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [18, 15], [10, 6], [13, 1], [2, 19], [14, 7], [16, 5], [15, 2], [3, 14], [13, 1], [7, 4], [12, 19], [15, 2], [12, 19], [3, 6], [13, 9], [5, 7], [18, 16], [15, 16], [14, 5], [12, 13], [11, 7], [2, 0], [8, 1], [15, 16], [7, 4], [2, 0], [10, 14], [3, 6], [12, 19], [13, 1], [15, 16], [3, 14], [4, 9], [8, 1], [17, 18], [5, 7], [2, 12], [15, 2], [13, 8], [5, 4], [0, 19], [14, 7], [18, 3], [6, 11], [15, 16], [0, 19], [13, 8], [10, 3], [4, 9], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [13, 8], [3, 16], [17, 18], [13, 8], [10, 14], [15, 16], [2, 0], [17, 18], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [6, 11], [14, 4], [13, 9], [2, 19], [17, 10], [12, 19], [5, 13], [15, 2], [18, 16], [10, 14], [8, 1], [7, 4], [12, 13], [17, 18], [10, 14], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [17, 18], [16, 5], [3, 6], [2, 12], [4, 9], [3, 16], [6, 11], [2, 0], [14, 4], [2, 0], [12, 19], [6, 11], [14, 4], [16, 5], [17, 18], [15, 2], [3, 6], [9, 1], [5, 4], [15, 2], [16, 13], [0, 19], [17, 10], [6, 11], [14, 4], [10, 6], [2, 19], [4, 9], [6, 11], [13, 1], [16, 12], [3, 14], [4, 9], [15, 16], [12, 13], [2, 0], [6, 11], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [17, 10], [15, 2], [18, 3], [16, 12], [5, 13], [0, 19], [8, 1], [10, 3], [5, 7], [6, 14], [2, 12], [8, 1], [13, 9], [10, 3], [14, 4], [16, 12], [6, 11], [2, 19], [8, 1], [6, 11], [16, 5], [0, 12], [15, 3], [13, 9], [17, 10], [14, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[14, 18]
[25, 31]
[31, 38]
[38, 53]
[50, 55]
[47, 59]
[54, 61]
[57, 62]
[55, 63]
[64, 70]
[66, 71]
[63, 73]
[62, 74]
[58, 75]
[70, 76]
[72, 80]
[83, 91]
[80, 92]
[90, 93]
[88, 94]
[87, 95]
[71, 96]
[91, 97]
[81, 99]
[93, 100]
[89, 104]
[105, 111]
[113, 119]
[117, 122]
[121, 123]
[128, 134]
[132, 136]
[124, 138]
[123, 139]
[134, 141]
[141, 155]
[151, 156]
[149, 157]
[157, 165]
[165, 168]
[167, 172]
[172, 177]
[188, 193]
[209, 211]
[208, 213]
[210, 214]
[202, 216]
[217, 221]
[229, 234]
[230, 238]
[250, 255]
[251, 257]
[255, 262]
[260, 263]
[256, 267]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[22, 23, 30]
[36, 40, 46]
[102, 107, 112]
[154, 174, 179]
[192, 199, 202]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[4, 10, 14]
[43, 56, 78]
[65, 69, 79]
[143, 150, 159]
[179, 204, 208]
[203, 207, 215]
[213, 218, 225]
[225, 227, 230]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[223, 228, 237]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[14, 18]
[25, 31]
[31, 38]
[38, 53]
[50, 55]
[47, 59]
[54, 61]
[57, 62]
[55, 63]
[64, 70]
[66, 71]
[63, 73]
[62, 74]
[58, 75]
[70, 76]
[72, 80]
[83, 91]
[80, 92]
[90, 93]
[88, 94]
[87, 95]
[71, 96]
[91, 97]
[81, 99]
[93, 100]
[89, 104]
[105, 111]
[113, 119]
[117, 122]
[121, 123]
[128, 134]
[132, 136]
[124, 138]
[123, 139]
[134, 141]
[141, 155]
[151, 156]
[149, 157]
[157, 165]
[165, 168]
[167, 172]
[172, 177]
[188, 193]
[209, 211]
[208, 213]
[210, 214]
[202, 216]
[217, 221]
[229, 234]
[230, 238]
[250, 255]
[251, 257]
[255, 262]
[260, 263]
[256, 267]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.171867847442627

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10, 14] ccc => cc, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [14, 18] cc => I, Pos: [14, 18] cc => I, Pos: [22, 23, 30] ccc => cc, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [31, 38] cc => I, Pos: [31, 38] cc => I, Pos: [36, 40, 46] ccc => cc, Pos: [38, 53] cc => I, Pos: [38, 53] cc => I, Pos: [43, 56, 78] ccc => cc, Pos: [47, 59] cc => I, Pos: [47, 59] cc => I, Pos: [50, 55] cc => I, Pos: [50, 55] cc => I, Pos: [54, 61] cc => I, Pos: [54, 61] cc => I, Pos: [55, 63] cc => I, Pos: [55, 63] cc => I, Pos: [57, 62] cc => I, Pos: [57, 62] cc => I, Pos: [58, 75] cc => I, Pos: [58, 75] cc => I, Pos: [62, 74] cc => I, Pos: [62, 74] cc => I, Pos: [63, 73] cc => I, Pos: [63, 73] cc => I, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [65, 69, 79] ccc => cc, Pos: [66, 71] cc => I, Pos: [66, 71] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [71, 96] cc => I, Pos: [71, 96] cc => I, Pos: [72, 80] cc => I, Pos: [72, 80] cc => I, Pos: [80, 92] cc => I, Pos: [80, 92] cc => I, Pos: [81, 99] cc => I, Pos: [81, 99] cc => I, Pos: [83, 91] cc => I, Pos: [83, 91] cc => I, Pos: [87, 95] cc => I, Pos: [87, 95] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 104] cc => I, Pos: [89, 104] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [91, 97] cc => I, Pos: [91, 97] cc => I, Pos: [93, 100] cc => I, Pos: [93, 100] cc => I, Pos: [102, 107, 112] ccc => cc, Pos: [105, 111] cc => I, Pos: [105, 111] cc => I, Pos: [113, 119] cc => I, Pos: [113, 119] cc => I, Pos: [117, 122] cc => I, Pos: [117, 122] cc => I, Pos: [121, 123] cc => I, Pos: [121, 123] cc => I, Pos: [123, 139] cc => I, Pos: [123, 139] cc => I, Pos: [124, 138] cc => I, Pos: [124, 138] cc => I, Pos: [128, 134] cc => I, Pos: [128, 134] cc => I, Pos: [132, 136] cc => I, Pos: [132, 136] cc => I, Pos: [134, 141] cc => I, Pos: [134, 141] cc => I, Pos: [141, 155] cc => I, Pos: [141, 155] cc => I, Pos: [143, 150, 159] ccc => cc, Pos: [149, 157] cc => I, Pos: [149, 157] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [154, 174, 179] ccc => cc, Pos: [157, 165] cc => I, Pos: [157, 165] cc => I, Pos: [165, 168] cc => I, Pos: [165, 168] cc => I, Pos: [167, 172] cc => I, Pos: [167, 172] cc => I, Pos: [172, 177] cc => I, Pos: [172, 177] cc => I, Pos: [179, 204, 208] ccc => cc, Pos: [188, 193] cc => I, Pos: [188, 193] cc => I, Pos: [192, 199, 202] ccc => cc, Pos: [202, 216] cc => I, Pos: [202, 216] cc => I, Pos: [203, 207, 215] ccc => cc, Pos: [208, 213] cc => I, Pos: [208, 213] cc => I, Pos: [209, 211] cc => I, Pos: [209, 211] cc => I, Pos: [210, 214] cc => I, Pos: [210, 214] cc => I, Pos: [213, 218, 225] ccc => cc, Pos: [217, 221] cc => I, Pos: [217, 221] cc => I, Pos: [223, 228, 237] ccc => cc, Pos: [225, 227, 230] ccc => cc, Pos: [229, 234] cc => I, Pos: [229, 234] cc => I, Pos: [230, 238] cc => I, Pos: [230, 238] cc => I, Pos: [250, 255] cc => I, Pos: [250, 255] cc => I, Pos: [251, 257] cc => I, Pos: [251, 257] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [256, 267] cc => I, Pos: [256, 267] cc => I, Pos: [260, 263] cc => I, Pos: [260, 263] cc => I]

Plan: 1
[Pos: [4, 10, 14] ccc => cc,
 Pos: [5, 11] cc => I,
 Pos: [22, 23, 30] ccc => cc,
 Pos: [25, 31] cc => I,
 Pos: [36, 40, 46] ccc => cc,
 Pos: [38, 53] cc => I,
 Pos: [43, 56, 78] ccc => cc,
 Pos: [47, 59] cc => I,
 Pos: [50, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [57, 62] cc => I,
 Pos: [58, 75] cc => I,
 Pos: [63, 73] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [65, 69, 79] ccc => cc,
 Pos: [66, 71] cc => I,
 Pos: [72, 80] cc => I,
 Pos: [81, 99] cc => I,
 Pos: [83, 91] cc => I,
 Pos: [87, 95] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [89, 104] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [102, 107, 112] ccc => cc,
 Pos: [105, 111] cc => I,
 Pos: [113, 119] cc => I,
 Pos: [117, 122] cc => I,
 Pos: [121, 123] cc => I,
 Pos: [124, 138] cc => I,
 Pos: [128, 134] cc => I,
 Pos: [132, 136] cc => I,
 Pos: [141, 155] cc => I,
 Pos: [143, 150, 159] ccc => cc,
 Pos: [149, 157] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [154, 174, 179] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [167, 172] cc => I,
 Pos: [188, 193] cc => I,
 Pos: [192, 199, 202] ccc => cc,
 Pos: [203, 207, 215] ccc => cc,
 Pos: [208, 213] cc => I,
 Pos: [209, 211] cc => I,
 Pos: [210, 214] cc => I,
 Pos: [217, 221] cc => I,
 Pos: [223, 228, 237] ccc => cc,
 Pos: [225, 227, 230] ccc => cc,
 Pos: [229, 234] cc => I,
 Pos: [250, 255] cc => I,
 Pos: [251, 257] cc => I,
 Pos: [256, 267] cc => I,
 Pos: [260, 263] cc => I]
Change: 52, Saving: 54

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.12499570846557617

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 10, 14] ccc => cc,
 Pos: [5, 11] cc => I,
 Pos: [22, 23, 30] ccc => cc,
 Pos: [25, 31] cc => I,
 Pos: [36, 40, 46] ccc => cc,
 Pos: [38, 53] cc => I,
 Pos: [43, 56, 78] ccc => cc,
 Pos: [47, 59] cc => I,
 Pos: [50, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [57, 62] cc => I,
 Pos: [58, 75] cc => I,
 Pos: [63, 73] cc => I,
 Pos: [64, 70] cc => I,
 Pos: [65, 69, 79] ccc => cc,
 Pos: [66, 71] cc => I,
 Pos: [72, 80] cc => I,
 Pos: [81, 99] cc => I,
 Pos: [83, 91] cc => I,
 Pos: [87, 95] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [89, 104] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [102, 107, 112] ccc => cc,
 Pos: [105, 111] cc => I,
 Pos: [113, 119] cc => I,
 Pos: [117, 122] cc => I,
 Pos: [121, 123] cc => I,
 Pos: [124, 138] cc => I,
 Pos: [128, 134] cc => I,
 Pos: [132, 136] cc => I,
 Pos: [141, 155] cc => I,
 Pos: [143, 150, 159] ccc => cc,
 Pos: [149, 157] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [154, 174, 179] ccc => cc,
 Pos: [165, 168] cc => I,
 Pos: [167, 172] cc => I,
 Pos: [188, 193] cc => I,
 Pos: [192, 199, 202] ccc => cc,
 Pos: [203, 207, 215] ccc => cc,
 Pos: [208, 213] cc => I,
 Pos: [209, 211] cc => I,
 Pos: [210, 214] cc => I,
 Pos: [217, 221] cc => I,
 Pos: [223, 228, 237] ccc => cc,
 Pos: [225, 227, 230] ccc => cc,
 Pos: [229, 234] cc => I,
 Pos: [250, 255] cc => I,
 Pos: [251, 257] cc => I,
 Pos: [256, 267] cc => I,
 Pos: [260, 263] cc => I]
Change: 52, Saving: 54

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 10, 14] ccc => cc
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [22, 23, 30] ccc => cc
Apply:  Pos: [25, 31] cc => I
Apply:  Pos: [36, 40, 46] ccc => cc
Apply:  Pos: [38, 53] cc => I
Apply:  Pos: [43, 56, 78] ccc => cc
Apply:  Pos: [47, 59] cc => I
Apply:  Pos: [50, 55] cc => I
Apply:  Pos: [54, 61] cc => I
Apply:  Pos: [57, 62] cc => I
Apply:  Pos: [58, 75] cc => I
Apply:  Pos: [63, 73] cc => I
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [65, 69, 79] ccc => cc
Apply:  Pos: [66, 71] cc => I
Apply:  Pos: [72, 80] cc => I
Apply:  Pos: [81, 99] cc => I
Apply:  Pos: [83, 91] cc => I
Apply:  Pos: [87, 95] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [89, 104] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [102, 107, 112] ccc => cc
Apply:  Pos: [105, 111] cc => I
Apply:  Pos: [113, 119] cc => I
Apply:  Pos: [117, 122] cc => I
Apply:  Pos: [121, 123] cc => I
Apply:  Pos: [124, 138] cc => I
Apply:  Pos: [128, 134] cc => I
Apply:  Pos: [132, 136] cc => I
Apply:  Pos: [141, 155] cc => I
Apply:  Pos: [143, 150, 159] ccc => cc
Apply:  Pos: [149, 157] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [154, 174, 179] ccc => cc
Apply:  Pos: [165, 168] cc => I
Apply:  Pos: [167, 172] cc => I
Apply:  Pos: [188, 193] cc => I
Apply:  Pos: [192, 199, 202] ccc => cc
Apply:  Pos: [203, 207, 215] ccc => cc
Apply:  Pos: [208, 213] cc => I
Apply:  Pos: [209, 211] cc => I
Apply:  Pos: [210, 214] cc => I
Apply:  Pos: [217, 221] cc => I
Apply:  Pos: [223, 228, 237] ccc => cc
Apply:  Pos: [225, 227, 230] ccc => cc
Apply:  Pos: [229, 234] cc => I
Apply:  Pos: [250, 255] cc => I
Apply:  Pos: [251, 257] cc => I
Apply:  Pos: [256, 267] cc => I
Apply:  Pos: [260, 263] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [9, 1], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [9, 1], [5, 7], [17, 10], [6, 11], [18, 16], [3, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 12], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [2, 12], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [6, 14], [10, 14], [18, 3], [2, 0], [14, 4], [5, 7], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 10], [17, 18], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [8, 1], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [5, 7], [18, 16], [14, 5], [12, 13], [11, 7], [8, 1], [7, 4], [10, 14], [12, 19], [13, 1], [3, 14], [5, 4], [8, 1], [17, 18], [5, 7], [2, 12], [15, 2], [4, 9], [14, 7], [18, 3], [6, 7], [10, 3], [6, 14], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [2, 19], [17, 10], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 15], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [3, 6], [2, 12], [4, 9], [16, 5], [12, 19], [17, 18], [3, 6], [9, 1], [5, 4], [16, 13], [2, 0], [17, 10], [10, 6], [14, 4], [6, 11], [0, 19], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [6, 11], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [17, 10], [15, 2], [18, 3], [16, 12], [5, 13], [0, 19], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [8, 1], [16, 5], [0, 12], [15, 3], [17, 10], [14, 7], ----End Timer [Execute Mapping]:  5.296863555908203

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 15]
[63, 80]
[132, 139]
[115, 144]
[147, 154]
[160, 176]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[28, 34, 36]
[148, 157, 165]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[81, 86, 89]
[93, 95, 97]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 15]
[63, 80]
[132, 139]
[115, 144]
[147, 154]
[160, 176]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.1406681537628174

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [9, 15] cc => I, Pos: [9, 15] cc => I, Pos: [28, 34, 36] ccc => cc, Pos: [63, 80] cc => I, Pos: [63, 80] cc => I, Pos: [81, 86, 89] ccc => cc, Pos: [93, 95, 97] ccc => cc, Pos: [115, 144] cc => I, Pos: [115, 144] cc => I, Pos: [132, 139] cc => I, Pos: [132, 139] cc => I, Pos: [147, 154] cc => I, Pos: [147, 154] cc => I, Pos: [148, 157, 165] ccc => cc, Pos: [160, 176] cc => I, Pos: [160, 176] cc => I]

Plan: 1
[Pos: [9, 15] cc => I,
 Pos: [28, 34, 36] ccc => cc,
 Pos: [63, 80] cc => I,
 Pos: [81, 86, 89] ccc => cc,
 Pos: [93, 95, 97] ccc => cc,
 Pos: [115, 144] cc => I,
 Pos: [132, 139] cc => I,
 Pos: [147, 154] cc => I,
 Pos: [148, 157, 165] ccc => cc,
 Pos: [160, 176] cc => I]
Change: 10, Saving: 10

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.03126931190490723

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 15] cc => I,
 Pos: [28, 34, 36] ccc => cc,
 Pos: [63, 80] cc => I,
 Pos: [81, 86, 89] ccc => cc,
 Pos: [93, 95, 97] ccc => cc,
 Pos: [115, 144] cc => I,
 Pos: [132, 139] cc => I,
 Pos: [147, 154] cc => I,
 Pos: [148, 157, 165] ccc => cc,
 Pos: [160, 176] cc => I]
Change: 10, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 15] cc => I
Apply:  Pos: [28, 34, 36] ccc => cc
Apply:  Pos: [63, 80] cc => I
Apply:  Pos: [81, 86, 89] ccc => cc
Apply:  Pos: [93, 95, 97] ccc => cc
Apply:  Pos: [115, 144] cc => I
Apply:  Pos: [132, 139] cc => I
Apply:  Pos: [147, 154] cc => I
Apply:  Pos: [148, 157, 165] ccc => cc
Apply:  Pos: [160, 176] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [3, 16], [18, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [10, 14], [6, 14], [18, 3], [2, 0], [14, 4], [5, 7], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 18], [17, 10], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [5, 7], [18, 16], [14, 5], [12, 13], [11, 7], [5, 7], [10, 14], [12, 19], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [6, 14], [18, 3], [14, 7], [10, 3], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [2, 19], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 15], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [17, 18], [9, 1], [5, 4], [16, 13], [2, 0], [10, 6], [14, 4], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [8, 1], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  3.1719374656677246

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[71, 73, 75]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.796919822692871

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [71, 73, 75] ccc => cc]

Plan: 1
[Pos: [71, 73, 75] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [71, 73, 75] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [71, 73, 75] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [18, 16], [3, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [2, 5], [16, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [6, 14], [10, 14], [18, 3], [2, 0], [14, 4], [5, 7], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 10], [17, 18], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [14, 5], [18, 16], [5, 7], [12, 13], [11, 7], [10, 14], [12, 19], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [6, 14], [18, 3], [14, 7], [10, 3], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [12, 19], [2, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 15], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [17, 18], [9, 1], [5, 4], [16, 13], [2, 0], [10, 6], [14, 4], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 7], [5, 13], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [8, 1], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  2.796919822692871

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7658591270446777

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[5, 13], [16, 12], [15, 3], [17, 10], [4, 9], [12, 13], [18, 15], [3, 6], [10, 14], [16, 13], [14, 7], [0, 12], [2, 19], [15, 16], [5, 7], [17, 10], [6, 11], [3, 16], [18, 16], [8, 1], [14, 4], [2, 0], [12, 5], [18, 15], [19, 8], [16, 5], [2, 5], [6, 14], [4, 1], [3, 14], [18, 16], [9, 1], [12, 5], [6, 14], [16, 5], [15, 3], [3, 14], [10, 6], [8, 1], [0, 19], [12, 13], [10, 14], [6, 14], [18, 3], [2, 0], [14, 4], [5, 7], [9, 1], [10, 3], [2, 19], [7, 4], [13, 9], [17, 18], [17, 10], [6, 11], [16, 12], [18, 16], [0, 19], [12, 13], [10, 14], [2, 0], [6, 14], [16, 13], [12, 19], [11, 7], [2, 19], [14, 7], [16, 5], [3, 14], [7, 4], [13, 9], [14, 5], [18, 16], [5, 7], [12, 13], [11, 7], [10, 14], [12, 19], [13, 1], [3, 14], [7, 4], [8, 1], [17, 18], [2, 12], [15, 2], [4, 9], [6, 14], [18, 3], [14, 7], [10, 3], [12, 5], [18, 15], [14, 5], [2, 12], [3, 16], [10, 14], [15, 16], [2, 0], [3, 16], [11, 7], [13, 1], [19, 8], [17, 18], [16, 12], [14, 4], [13, 9], [2, 19], [12, 19], [5, 13], [15, 2], [18, 16], [8, 1], [7, 4], [12, 13], [17, 15], [8, 9], [13, 1], [0, 19], [5, 7], [16, 12], [18, 15], [14, 4], [13, 9], [3, 16], [2, 12], [4, 9], [16, 5], [12, 19], [17, 18], [9, 1], [5, 4], [16, 13], [2, 0], [10, 6], [14, 4], [0, 8], [13, 1], [16, 12], [3, 14], [15, 16], [12, 13], [14, 7], [10, 3], [19, 8], [9, 1], [11, 7], [15, 2], [18, 3], [16, 12], [5, 13], [5, 7], [6, 14], [2, 12], [14, 4], [16, 12], [2, 19], [8, 1], [16, 5], [0, 12], [15, 3], [14, 7], ----End Timer [Execute Mapping]:  2.7658591270446777

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [161] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 322

Reduced: 
 - size: 109 (40.37%)
 - depth: 8 (17.78%)

