----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499165534973145

[6, 4], [16, 0], [7, 14], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [6, 2], [11, 18], [7, 17], [9, 19], [0, 3], [12, 10], [16, 5], [6, 2], [4, 16], [15, 19], [13, 11], [3, 1], [7, 14], [6, 2], [15, 19], [18, 7], [3, 1], [12, 8], [6, 4], [15, 9], [7, 14], [5, 1], [0, 3], [10, 11], [2, 8], [13, 18], [6, 2], [5, 3], [15, 19], [12, 8], [4, 16], [11, 9], [7, 14], [2, 12], [16, 5], [4, 8], [13, 18], [15, 19], [1, 14], [2, 8], [15, 19], [0, 3], [18, 7], [6, 4], [4, 8], [13, 11], [16, 0], [7, 17], [12, 10], [6, 2], [3, 1], [8, 5], [18, 7], [19, 17], [16, 0], [10, 11], [12, 15], [5, 3], [13, 18], [15, 9], [11, 19], [7, 14], [8, 16], [5, 1], [8, 15], [19, 14], [12, 10], [13, 18], [5, 1], [12, 8], [7, 14], [6, 4], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [6, 4], [19, 14], [8, 15], [0, 3], [1, 14], [11, 19], [4, 5], [6, 2], [12, 10], [0, 3], [19, 14], [8, 15], [9, 3], [11, 18], [5, 1], [16, 0], [11, 19], [6, 2], [8, 15], [5, 3], [10, 13], [7, 14], [15, 11], [16, 0], [10, 13], [19, 17], [4, 5], [11, 9], [5, 3], [1, 14], [8, 15], [6, 2], [9, 3], [19, 17], [2, 12], [16, 0], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [11, 9], [6, 2], [7, 14], [4, 8], [5, 3], [14, 17], [11, 9], [10, 13], [12, 8], [15, 19], [6, 4], [16, 0], [5, 3], [7, 17], [2, 15], [13, 18], [6, 4], [9, 3], [1, 14], [18, 7], [6, 2], [16, 5], [13, 11], [19, 17], [0, 3], [10, 18], [8, 15], [19, 17], [13, 11], [5, 3], [12, 15], [2, 8], [10, 18], [5, 9], [10, 13], [19, 14], [18, 7], [16, 0], [4, 8], [5, 3], [11, 18], [12, 10], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [4, 8], [5, 9], [19, 7], [6, 2], [11, 18], [3, 1], [4, 8], [12, 10], [9, 1], [16, 5], [10, 11], [2, 8], [12, 15], [19, 17], [6, 4], [1, 14], [5, 9], [2, 8], [11, 18], [19, 7], [16, 0], [6, 4], [14, 17], [5, 3], [6, 4], [12, 10], [2, 8], [16, 0], [7, 17], [2, 12], [5, 3], [15, 11], [9, 1], [7, 17], [6, 4], [5, 9], [16, 0], [2, 15], [12, 8], [1, 14], [10, 11], [7, 14], [11, 19], [10, 13], [5, 1], [4, 16], [15, 9], [7, 14], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [13, 18], [2, 15], [11, 19], [7, 17], [9, 19], [12, 8], [15, 11], [6, 2], [5, 1], [14, 17], [12, 15], [10, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [8, 16], [10, 13], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [12, 10], [18, 7], [19, 17], [8, 16], [12, 10], [6, 2], [11, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 15]
[2, 20]
[15, 21]
[17, 22]
[19, 24]
[22, 36]
[28, 40]
[33, 44]
[36, 45]
[45, 48]
[54, 62]
[66, 75]
[71, 76]
[79, 85]
[57, 92]
[74, 93]
[88, 94]
[87, 96]
[92, 102]
[96, 103]
[100, 108]
[105, 109]
[102, 116]
[110, 118]
[108, 120]
[128, 133]
[129, 135]
[109, 136]
[133, 141]
[139, 145]
[152, 156]
[151, 157]
[154, 161]
[158, 168]
[168, 173]
[167, 176]
[176, 182]
[170, 183]
[187, 193]
[178, 195]
[166, 196]
[190, 197]
[197, 200]
[193, 202]
[196, 203]
[199, 206]
[204, 209]
[200, 210]
[203, 212]
[217, 223]
[214, 239]
[253, 266]
[263, 267]
[241, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 55, 60]
[90, 95, 101]
[192, 208, 211]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[20, 23, 28]
[16, 26, 38]
[104, 111, 113]
[212, 221, 225]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[234, 245, 254]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 15]
[2, 20]
[15, 21]
[17, 22]
[19, 24]
[22, 36]
[28, 40]
[33, 44]
[36, 45]
[45, 48]
[54, 62]
[66, 75]
[71, 76]
[79, 85]
[57, 92]
[74, 93]
[88, 94]
[87, 96]
[92, 102]
[96, 103]
[100, 108]
[105, 109]
[102, 116]
[110, 118]
[108, 120]
[128, 133]
[129, 135]
[109, 136]
[133, 141]
[139, 145]
[152, 156]
[151, 157]
[154, 161]
[158, 168]
[168, 173]
[167, 176]
[176, 182]
[170, 183]
[187, 193]
[178, 195]
[166, 196]
[190, 197]
[197, 200]
[193, 202]
[196, 203]
[199, 206]
[204, 209]
[200, 210]
[203, 212]
[217, 223]
[214, 239]
[253, 266]
[263, 267]
[241, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.249977111816406

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 20] cc => I, Pos: [2, 20] cc => I, Pos: [8, 15] cc => I, Pos: [8, 15] cc => I, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [16, 26, 38] ccc => cc, Pos: [17, 22] cc => I, Pos: [17, 22] cc => I, Pos: [19, 24] cc => I, Pos: [19, 24] cc => I, Pos: [20, 23, 28] ccc => cc, Pos: [22, 36] cc => I, Pos: [22, 36] cc => I, Pos: [28, 40] cc => I, Pos: [28, 40] cc => I, Pos: [33, 44] cc => I, Pos: [33, 44] cc => I, Pos: [36, 45] cc => I, Pos: [36, 45] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [50, 55, 60] ccc => cc, Pos: [54, 62] cc => I, Pos: [54, 62] cc => I, Pos: [57, 92] cc => I, Pos: [57, 92] cc => I, Pos: [66, 75] cc => I, Pos: [66, 75] cc => I, Pos: [71, 76] cc => I, Pos: [71, 76] cc => I, Pos: [74, 93] cc => I, Pos: [74, 93] cc => I, Pos: [79, 85] cc => I, Pos: [79, 85] cc => I, Pos: [87, 96] cc => I, Pos: [87, 96] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [90, 95, 101] ccc => cc, Pos: [92, 102] cc => I, Pos: [92, 102] cc => I, Pos: [96, 103] cc => I, Pos: [96, 103] cc => I, Pos: [100, 108] cc => I, Pos: [100, 108] cc => I, Pos: [102, 116] cc => I, Pos: [102, 116] cc => I, Pos: [104, 111, 113] ccc => cc, Pos: [105, 109] cc => I, Pos: [105, 109] cc => I, Pos: [108, 120] cc => I, Pos: [108, 120] cc => I, Pos: [109, 136] cc => I, Pos: [109, 136] cc => I, Pos: [110, 118] cc => I, Pos: [110, 118] cc => I, Pos: [128, 133] cc => I, Pos: [128, 133] cc => I, Pos: [129, 135] cc => I, Pos: [129, 135] cc => I, Pos: [133, 141] cc => I, Pos: [133, 141] cc => I, Pos: [139, 145] cc => I, Pos: [139, 145] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [152, 156] cc => I, Pos: [152, 156] cc => I, Pos: [154, 161] cc => I, Pos: [154, 161] cc => I, Pos: [158, 168] cc => I, Pos: [158, 168] cc => I, Pos: [166, 196] cc => I, Pos: [166, 196] cc => I, Pos: [167, 176] cc => I, Pos: [167, 176] cc => I, Pos: [168, 173] cc => I, Pos: [168, 173] cc => I, Pos: [170, 183] cc => I, Pos: [170, 183] cc => I, Pos: [176, 182] cc => I, Pos: [176, 182] cc => I, Pos: [178, 195] cc => I, Pos: [178, 195] cc => I, Pos: [187, 193] cc => I, Pos: [187, 193] cc => I, Pos: [190, 197] cc => I, Pos: [190, 197] cc => I, Pos: [192, 208, 211] ccc => cc, Pos: [193, 202] cc => I, Pos: [193, 202] cc => I, Pos: [196, 203] cc => I, Pos: [196, 203] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [199, 206] cc => I, Pos: [199, 206] cc => I, Pos: [200, 210] cc => I, Pos: [200, 210] cc => I, Pos: [203, 212] cc => I, Pos: [203, 212] cc => I, Pos: [204, 209] cc => I, Pos: [204, 209] cc => I, Pos: [212, 221, 225] ccc => cc, Pos: [214, 239] cc => I, Pos: [214, 239] cc => I, Pos: [217, 223] cc => I, Pos: [217, 223] cc => I, Pos: [234, 245, 254] ccc => cc, Pos: [241, 268] cc => I, Pos: [241, 268] cc => I, Pos: [253, 266] cc => I, Pos: [253, 266] cc => I, Pos: [263, 267] cc => I, Pos: [263, 267] cc => I]

Plan: 1
[Pos: [2, 20] cc => I,
 Pos: [8, 15] cc => I,
 Pos: [16, 26, 38] ccc => cc,
 Pos: [17, 22] cc => I,
 Pos: [19, 24] cc => I,
 Pos: [28, 40] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [36, 45] cc => I,
 Pos: [50, 55, 60] ccc => cc,
 Pos: [54, 62] cc => I,
 Pos: [57, 92] cc => I,
 Pos: [66, 75] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 93] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [87, 96] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [90, 95, 101] ccc => cc,
 Pos: [100, 108] cc => I,
 Pos: [102, 116] cc => I,
 Pos: [104, 111, 113] ccc => cc,
 Pos: [105, 109] cc => I,
 Pos: [110, 118] cc => I,
 Pos: [128, 133] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [139, 145] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [154, 161] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [166, 196] cc => I,
 Pos: [167, 176] cc => I,
 Pos: [170, 183] cc => I,
 Pos: [178, 195] cc => I,
 Pos: [187, 193] cc => I,
 Pos: [190, 197] cc => I,
 Pos: [192, 208, 211] ccc => cc,
 Pos: [199, 206] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [203, 212] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [214, 239] cc => I,
 Pos: [217, 223] cc => I,
 Pos: [234, 245, 254] ccc => cc,
 Pos: [241, 268] cc => I,
 Pos: [253, 266] cc => I,
 Pos: [263, 267] cc => I]
Change: 47, Saving: 176

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 20] cc => I,
 Pos: [8, 15] cc => I,
 Pos: [16, 26, 38] ccc => cc,
 Pos: [17, 22] cc => I,
 Pos: [19, 24] cc => I,
 Pos: [28, 40] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [36, 45] cc => I,
 Pos: [50, 55, 60] ccc => cc,
 Pos: [54, 62] cc => I,
 Pos: [57, 92] cc => I,
 Pos: [66, 75] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 93] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [87, 96] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [90, 95, 101] ccc => cc,
 Pos: [100, 108] cc => I,
 Pos: [102, 116] cc => I,
 Pos: [104, 111, 113] ccc => cc,
 Pos: [105, 109] cc => I,
 Pos: [110, 118] cc => I,
 Pos: [128, 133] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [139, 145] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [154, 161] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [166, 196] cc => I,
 Pos: [167, 176] cc => I,
 Pos: [170, 183] cc => I,
 Pos: [178, 195] cc => I,
 Pos: [187, 193] cc => I,
 Pos: [190, 197] cc => I,
 Pos: [192, 208, 211] ccc => cc,
 Pos: [199, 206] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [203, 212] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [214, 239] cc => I,
 Pos: [217, 223] cc => I,
 Pos: [234, 245, 254] ccc => cc,
 Pos: [241, 268] cc => I,
 Pos: [253, 266] cc => I,
 Pos: [263, 267] cc => I]
Change: 47, Saving: 176

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 20] cc => I
Apply:  Pos: [8, 15] cc => I
Apply:  Pos: [16, 26, 38] ccc => cc
Apply:  Pos: [17, 22] cc => I
Apply:  Pos: [19, 24] cc => I
Apply:  Pos: [28, 40] cc => I
Apply:  Pos: [33, 44] cc => I
Apply:  Pos: [36, 45] cc => I
Apply:  Pos: [50, 55, 60] ccc => cc
Apply:  Pos: [54, 62] cc => I
Apply:  Pos: [57, 92] cc => I
Apply:  Pos: [66, 75] cc => I
Apply:  Pos: [71, 76] cc => I
Apply:  Pos: [74, 93] cc => I
Apply:  Pos: [79, 85] cc => I
Apply:  Pos: [87, 96] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [90, 95, 101] ccc => cc
Apply:  Pos: [100, 108] cc => I
Apply:  Pos: [102, 116] cc => I
Apply:  Pos: [104, 111, 113] ccc => cc
Apply:  Pos: [105, 109] cc => I
Apply:  Pos: [110, 118] cc => I
Apply:  Pos: [128, 133] cc => I
Apply:  Pos: [129, 135] cc => I
Apply:  Pos: [139, 145] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [152, 156] cc => I
Apply:  Pos: [154, 161] cc => I
Apply:  Pos: [158, 168] cc => I
Apply:  Pos: [166, 196] cc => I
Apply:  Pos: [167, 176] cc => I
Apply:  Pos: [170, 183] cc => I
Apply:  Pos: [178, 195] cc => I
Apply:  Pos: [187, 193] cc => I
Apply:  Pos: [190, 197] cc => I
Apply:  Pos: [192, 208, 211] ccc => cc
Apply:  Pos: [199, 206] cc => I
Apply:  Pos: [200, 210] cc => I
Apply:  Pos: [203, 212] cc => I
Apply:  Pos: [204, 209] cc => I
Apply:  Pos: [214, 239] cc => I
Apply:  Pos: [217, 223] cc => I
Apply:  Pos: [234, 245, 254] ccc => cc
Apply:  Pos: [241, 268] cc => I
Apply:  Pos: [253, 266] cc => I
Apply:  Pos: [263, 267] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 4], [16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [0, 3], [12, 10], [16, 5], [6, 4], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [0, 3], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [15, 19], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 16], [8, 15], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [1, 14], [11, 14], [4, 5], [19, 14], [9, 3], [11, 18], [5, 1], [8, 15], [4, 5], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [16, 0], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [10, 13], [12, 8], [15, 19], [16, 0], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [18, 7], [6, 2], [16, 5], [0, 3], [8, 15], [12, 15], [2, 8], [5, 9], [10, 13], [19, 14], [18, 7], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [11, 18], [3, 1], [4, 8], [9, 1], [16, 5], [10, 11], [12, 15], [19, 17], [1, 14], [5, 1], [11, 18], [14, 17], [12, 10], [2, 8], [2, 12], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [10, 13], [5, 1], [4, 16], [15, 9], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [10, 13], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  5.249977111816406

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 13]
[10, 21]
[62, 64]
[100, 110]
[140, 154]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[63, 67, 69]
[78, 81, 93]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[119, 124, 129]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 13]
[10, 21]
[62, 64]
[100, 110]
[140, 154]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2501440048217773

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 13] cc => I, Pos: [0, 13] cc => I, Pos: [10, 21] cc => I, Pos: [10, 21] cc => I, Pos: [62, 64] cc => I, Pos: [62, 64] cc => I, Pos: [63, 67, 69] ccc => cc, Pos: [78, 81, 93] ccc => cc, Pos: [100, 110] cc => I, Pos: [100, 110] cc => I, Pos: [119, 124, 129] ccc => cc, Pos: [140, 154] cc => I, Pos: [140, 154] cc => I]

Plan: 1
[Pos: [0, 13] cc => I,
 Pos: [10, 21] cc => I,
 Pos: [62, 64] cc => I,
 Pos: [63, 67, 69] ccc => cc,
 Pos: [78, 81, 93] ccc => cc,
 Pos: [100, 110] cc => I,
 Pos: [119, 124, 129] ccc => cc,
 Pos: [140, 154] cc => I]
Change: 8, Saving: 26

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 13] cc => I,
 Pos: [10, 21] cc => I,
 Pos: [62, 64] cc => I,
 Pos: [63, 67, 69] ccc => cc,
 Pos: [78, 81, 93] ccc => cc,
 Pos: [100, 110] cc => I,
 Pos: [119, 124, 129] ccc => cc,
 Pos: [140, 154] cc => I]
Change: 8, Saving: 26

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 13] cc => I
Apply:  Pos: [10, 21] cc => I
Apply:  Pos: [62, 64] cc => I
Apply:  Pos: [63, 67, 69] ccc => cc
Apply:  Pos: [78, 81, 93] ccc => cc
Apply:  Pos: [100, 110] cc => I
Apply:  Pos: [119, 124, 129] ccc => cc
Apply:  Pos: [140, 154] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [12, 10], [16, 5], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [15, 19], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 15], [8, 16], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [1, 14], [11, 14], [4, 1], [9, 3], [11, 18], [5, 1], [8, 15], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [16, 3], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [10, 13], [12, 8], [15, 19], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [12, 15], [8, 15], [2, 8], [5, 9], [10, 13], [19, 14], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [2, 8], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [11, 9], [15, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  3.2501440048217773

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[83, 89, 99]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9840261936187744

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [83, 89, 99] ccc => cc]

Plan: 1
[Pos: [83, 89, 99] ccc => cc]
Change: 1, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [83, 89, 99] ccc => cc]
Change: 1, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [83, 89, 99] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [12, 10], [16, 5], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [15, 19], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 16], [8, 15], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [11, 14], [1, 14], [4, 1], [9, 3], [11, 18], [5, 1], [8, 15], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [16, 3], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [10, 18], [12, 8], [15, 19], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [8, 15], [12, 15], [2, 8], [5, 9], [19, 14], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 8], [2, 12], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [15, 9], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  2.9840261936187744

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9844155311584473

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [12, 10], [16, 5], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [15, 19], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 15], [8, 16], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [1, 14], [11, 14], [4, 1], [9, 3], [11, 18], [5, 1], [8, 15], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [16, 3], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [10, 18], [12, 8], [15, 19], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [12, 15], [8, 15], [2, 8], [5, 9], [19, 14], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [2, 8], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [11, 9], [15, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  2.9844155311584473

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [168] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 336

Reduced: 
 - size: 102 (37.78%)
 - cycle: 204 (37.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.1089482307434082

[6, 4], [16, 0], [7, 14], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [6, 2], [11, 18], [7, 17], [9, 19], [0, 3], [12, 10], [16, 5], [6, 2], [4, 16], [15, 19], [13, 11], [3, 1], [7, 14], [6, 2], [15, 19], [18, 7], [3, 1], [12, 8], [6, 4], [15, 9], [7, 14], [5, 1], [0, 3], [10, 11], [2, 8], [13, 18], [6, 2], [5, 3], [15, 19], [12, 8], [4, 16], [11, 9], [7, 14], [2, 12], [16, 5], [4, 8], [13, 18], [15, 19], [1, 14], [2, 8], [15, 19], [0, 3], [18, 7], [6, 4], [4, 8], [13, 11], [16, 0], [7, 17], [12, 10], [6, 2], [3, 1], [8, 5], [18, 7], [19, 17], [16, 0], [10, 11], [12, 15], [5, 3], [13, 18], [15, 9], [11, 19], [7, 14], [8, 16], [5, 1], [8, 15], [19, 14], [12, 10], [13, 18], [5, 1], [12, 8], [7, 14], [6, 4], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [6, 4], [19, 14], [8, 15], [0, 3], [1, 14], [11, 19], [4, 5], [6, 2], [12, 10], [0, 3], [19, 14], [8, 15], [9, 3], [11, 18], [5, 1], [16, 0], [11, 19], [6, 2], [8, 15], [5, 3], [10, 13], [7, 14], [15, 11], [16, 0], [10, 13], [19, 17], [4, 5], [11, 9], [5, 3], [1, 14], [8, 15], [6, 2], [9, 3], [19, 17], [2, 12], [16, 0], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [11, 9], [6, 2], [7, 14], [4, 8], [5, 3], [14, 17], [11, 9], [10, 13], [12, 8], [15, 19], [6, 4], [16, 0], [5, 3], [7, 17], [2, 15], [13, 18], [6, 4], [9, 3], [1, 14], [18, 7], [6, 2], [16, 5], [13, 11], [19, 17], [0, 3], [10, 18], [8, 15], [19, 17], [13, 11], [5, 3], [12, 15], [2, 8], [10, 18], [5, 9], [10, 13], [19, 14], [18, 7], [16, 0], [4, 8], [5, 3], [11, 18], [12, 10], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [4, 8], [5, 9], [19, 7], [6, 2], [11, 18], [3, 1], [4, 8], [12, 10], [9, 1], [16, 5], [10, 11], [2, 8], [12, 15], [19, 17], [6, 4], [1, 14], [5, 9], [2, 8], [11, 18], [19, 7], [16, 0], [6, 4], [14, 17], [5, 3], [6, 4], [12, 10], [2, 8], [16, 0], [7, 17], [2, 12], [5, 3], [15, 11], [9, 1], [7, 17], [6, 4], [5, 9], [16, 0], [2, 15], [12, 8], [1, 14], [10, 11], [7, 14], [11, 19], [10, 13], [5, 1], [4, 16], [15, 9], [7, 14], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [13, 18], [2, 15], [11, 19], [7, 17], [9, 19], [12, 8], [15, 11], [6, 2], [5, 1], [14, 17], [12, 15], [10, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [8, 16], [10, 13], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [12, 10], [18, 7], [19, 17], [8, 16], [12, 10], [6, 2], [11, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 15]
[2, 20]
[15, 21]
[17, 22]
[19, 24]
[22, 36]
[28, 40]
[33, 44]
[36, 45]
[45, 48]
[54, 62]
[66, 75]
[71, 76]
[79, 85]
[57, 92]
[74, 93]
[88, 94]
[87, 96]
[92, 102]
[96, 103]
[100, 108]
[105, 109]
[102, 116]
[110, 118]
[108, 120]
[128, 133]
[129, 135]
[109, 136]
[133, 141]
[139, 145]
[152, 156]
[151, 157]
[154, 161]
[158, 168]
[168, 173]
[167, 176]
[176, 182]
[170, 183]
[187, 193]
[178, 195]
[166, 196]
[190, 197]
[197, 200]
[193, 202]
[196, 203]
[199, 206]
[204, 209]
[200, 210]
[203, 212]
[217, 223]
[214, 239]
[253, 266]
[263, 267]
[241, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 55, 60]
[90, 95, 101]
[192, 208, 211]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[20, 23, 28]
[16, 26, 38]
[104, 111, 113]
[212, 221, 225]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[234, 245, 254]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 15]
[2, 20]
[15, 21]
[17, 22]
[19, 24]
[22, 36]
[28, 40]
[33, 44]
[36, 45]
[45, 48]
[54, 62]
[66, 75]
[71, 76]
[79, 85]
[57, 92]
[74, 93]
[88, 94]
[87, 96]
[92, 102]
[96, 103]
[100, 108]
[105, 109]
[102, 116]
[110, 118]
[108, 120]
[128, 133]
[129, 135]
[109, 136]
[133, 141]
[139, 145]
[152, 156]
[151, 157]
[154, 161]
[158, 168]
[168, 173]
[167, 176]
[176, 182]
[170, 183]
[187, 193]
[178, 195]
[166, 196]
[190, 197]
[197, 200]
[193, 202]
[196, 203]
[199, 206]
[204, 209]
[200, 210]
[203, 212]
[217, 223]
[214, 239]
[253, 266]
[263, 267]
[241, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.125000715255737

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 20] cc => I, Pos: [2, 20] cc => I, Pos: [8, 15] cc => I, Pos: [8, 15] cc => I, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [16, 26, 38] ccc => cc, Pos: [17, 22] cc => I, Pos: [17, 22] cc => I, Pos: [19, 24] cc => I, Pos: [19, 24] cc => I, Pos: [20, 23, 28] ccc => cc, Pos: [22, 36] cc => I, Pos: [22, 36] cc => I, Pos: [28, 40] cc => I, Pos: [28, 40] cc => I, Pos: [33, 44] cc => I, Pos: [33, 44] cc => I, Pos: [36, 45] cc => I, Pos: [36, 45] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [50, 55, 60] ccc => cc, Pos: [54, 62] cc => I, Pos: [54, 62] cc => I, Pos: [57, 92] cc => I, Pos: [57, 92] cc => I, Pos: [66, 75] cc => I, Pos: [66, 75] cc => I, Pos: [71, 76] cc => I, Pos: [71, 76] cc => I, Pos: [74, 93] cc => I, Pos: [74, 93] cc => I, Pos: [79, 85] cc => I, Pos: [79, 85] cc => I, Pos: [87, 96] cc => I, Pos: [87, 96] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [90, 95, 101] ccc => cc, Pos: [92, 102] cc => I, Pos: [92, 102] cc => I, Pos: [96, 103] cc => I, Pos: [96, 103] cc => I, Pos: [100, 108] cc => I, Pos: [100, 108] cc => I, Pos: [102, 116] cc => I, Pos: [102, 116] cc => I, Pos: [104, 111, 113] ccc => cc, Pos: [105, 109] cc => I, Pos: [105, 109] cc => I, Pos: [108, 120] cc => I, Pos: [108, 120] cc => I, Pos: [109, 136] cc => I, Pos: [109, 136] cc => I, Pos: [110, 118] cc => I, Pos: [110, 118] cc => I, Pos: [128, 133] cc => I, Pos: [128, 133] cc => I, Pos: [129, 135] cc => I, Pos: [129, 135] cc => I, Pos: [133, 141] cc => I, Pos: [133, 141] cc => I, Pos: [139, 145] cc => I, Pos: [139, 145] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [152, 156] cc => I, Pos: [152, 156] cc => I, Pos: [154, 161] cc => I, Pos: [154, 161] cc => I, Pos: [158, 168] cc => I, Pos: [158, 168] cc => I, Pos: [166, 196] cc => I, Pos: [166, 196] cc => I, Pos: [167, 176] cc => I, Pos: [167, 176] cc => I, Pos: [168, 173] cc => I, Pos: [168, 173] cc => I, Pos: [170, 183] cc => I, Pos: [170, 183] cc => I, Pos: [176, 182] cc => I, Pos: [176, 182] cc => I, Pos: [178, 195] cc => I, Pos: [178, 195] cc => I, Pos: [187, 193] cc => I, Pos: [187, 193] cc => I, Pos: [190, 197] cc => I, Pos: [190, 197] cc => I, Pos: [192, 208, 211] ccc => cc, Pos: [193, 202] cc => I, Pos: [193, 202] cc => I, Pos: [196, 203] cc => I, Pos: [196, 203] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [199, 206] cc => I, Pos: [199, 206] cc => I, Pos: [200, 210] cc => I, Pos: [200, 210] cc => I, Pos: [203, 212] cc => I, Pos: [203, 212] cc => I, Pos: [204, 209] cc => I, Pos: [204, 209] cc => I, Pos: [212, 221, 225] ccc => cc, Pos: [214, 239] cc => I, Pos: [214, 239] cc => I, Pos: [217, 223] cc => I, Pos: [217, 223] cc => I, Pos: [234, 245, 254] ccc => cc, Pos: [241, 268] cc => I, Pos: [241, 268] cc => I, Pos: [253, 266] cc => I, Pos: [253, 266] cc => I, Pos: [263, 267] cc => I, Pos: [263, 267] cc => I]

Plan: 1
[Pos: [2, 20] cc => I,
 Pos: [8, 15] cc => I,
 Pos: [16, 26, 38] ccc => cc,
 Pos: [17, 22] cc => I,
 Pos: [19, 24] cc => I,
 Pos: [28, 40] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [36, 45] cc => I,
 Pos: [50, 55, 60] ccc => cc,
 Pos: [54, 62] cc => I,
 Pos: [57, 92] cc => I,
 Pos: [66, 75] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 93] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [87, 96] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [90, 95, 101] ccc => cc,
 Pos: [100, 108] cc => I,
 Pos: [102, 116] cc => I,
 Pos: [104, 111, 113] ccc => cc,
 Pos: [105, 109] cc => I,
 Pos: [110, 118] cc => I,
 Pos: [128, 133] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [139, 145] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [154, 161] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [166, 196] cc => I,
 Pos: [167, 176] cc => I,
 Pos: [170, 183] cc => I,
 Pos: [178, 195] cc => I,
 Pos: [187, 193] cc => I,
 Pos: [190, 197] cc => I,
 Pos: [192, 208, 211] ccc => cc,
 Pos: [199, 206] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [203, 212] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [214, 239] cc => I,
 Pos: [217, 223] cc => I,
 Pos: [234, 245, 254] ccc => cc,
 Pos: [241, 268] cc => I,
 Pos: [253, 266] cc => I,
 Pos: [263, 267] cc => I]
Change: 47, Saving: 49

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.12526607513427734

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 20] cc => I,
 Pos: [8, 15] cc => I,
 Pos: [16, 26, 38] ccc => cc,
 Pos: [17, 22] cc => I,
 Pos: [19, 24] cc => I,
 Pos: [28, 40] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [36, 45] cc => I,
 Pos: [50, 55, 60] ccc => cc,
 Pos: [54, 62] cc => I,
 Pos: [57, 92] cc => I,
 Pos: [66, 75] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 93] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [87, 96] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [90, 95, 101] ccc => cc,
 Pos: [100, 108] cc => I,
 Pos: [102, 116] cc => I,
 Pos: [104, 111, 113] ccc => cc,
 Pos: [105, 109] cc => I,
 Pos: [110, 118] cc => I,
 Pos: [128, 133] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [139, 145] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [154, 161] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [166, 196] cc => I,
 Pos: [167, 176] cc => I,
 Pos: [170, 183] cc => I,
 Pos: [178, 195] cc => I,
 Pos: [187, 193] cc => I,
 Pos: [190, 197] cc => I,
 Pos: [192, 208, 211] ccc => cc,
 Pos: [199, 206] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [203, 212] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [214, 239] cc => I,
 Pos: [217, 223] cc => I,
 Pos: [234, 245, 254] ccc => cc,
 Pos: [241, 268] cc => I,
 Pos: [253, 266] cc => I,
 Pos: [263, 267] cc => I]
Change: 47, Saving: 49

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 20] cc => I
Apply:  Pos: [8, 15] cc => I
Apply:  Pos: [16, 26, 38] ccc => cc
Apply:  Pos: [17, 22] cc => I
Apply:  Pos: [19, 24] cc => I
Apply:  Pos: [28, 40] cc => I
Apply:  Pos: [33, 44] cc => I
Apply:  Pos: [36, 45] cc => I
Apply:  Pos: [50, 55, 60] ccc => cc
Apply:  Pos: [54, 62] cc => I
Apply:  Pos: [57, 92] cc => I
Apply:  Pos: [66, 75] cc => I
Apply:  Pos: [71, 76] cc => I
Apply:  Pos: [74, 93] cc => I
Apply:  Pos: [79, 85] cc => I
Apply:  Pos: [87, 96] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [90, 95, 101] ccc => cc
Apply:  Pos: [100, 108] cc => I
Apply:  Pos: [102, 116] cc => I
Apply:  Pos: [104, 111, 113] ccc => cc
Apply:  Pos: [105, 109] cc => I
Apply:  Pos: [110, 118] cc => I
Apply:  Pos: [128, 133] cc => I
Apply:  Pos: [129, 135] cc => I
Apply:  Pos: [139, 145] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [152, 156] cc => I
Apply:  Pos: [154, 161] cc => I
Apply:  Pos: [158, 168] cc => I
Apply:  Pos: [166, 196] cc => I
Apply:  Pos: [167, 176] cc => I
Apply:  Pos: [170, 183] cc => I
Apply:  Pos: [178, 195] cc => I
Apply:  Pos: [187, 193] cc => I
Apply:  Pos: [190, 197] cc => I
Apply:  Pos: [192, 208, 211] ccc => cc
Apply:  Pos: [199, 206] cc => I
Apply:  Pos: [200, 210] cc => I
Apply:  Pos: [203, 212] cc => I
Apply:  Pos: [204, 209] cc => I
Apply:  Pos: [214, 239] cc => I
Apply:  Pos: [217, 223] cc => I
Apply:  Pos: [234, 245, 254] ccc => cc
Apply:  Pos: [241, 268] cc => I
Apply:  Pos: [253, 266] cc => I
Apply:  Pos: [263, 267] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 4], [16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [0, 3], [12, 10], [16, 5], [6, 4], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [0, 3], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [15, 19], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 16], [8, 15], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [1, 14], [11, 14], [4, 5], [19, 14], [9, 3], [11, 18], [5, 1], [8, 15], [4, 5], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [16, 0], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [10, 13], [12, 8], [15, 19], [16, 0], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [18, 7], [6, 2], [16, 5], [0, 3], [8, 15], [12, 15], [2, 8], [5, 9], [10, 13], [19, 14], [18, 7], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [11, 18], [3, 1], [4, 8], [9, 1], [16, 5], [10, 11], [12, 15], [19, 17], [1, 14], [5, 1], [11, 18], [14, 17], [12, 10], [2, 8], [2, 12], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [10, 13], [5, 1], [4, 16], [15, 9], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [10, 13], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  5.250266790390015

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 13]
[10, 21]
[62, 64]
[100, 110]
[140, 154]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[63, 67, 69]
[78, 81, 93]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[119, 124, 129]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 13]
[10, 21]
[62, 64]
[100, 110]
[140, 154]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.20297908782959

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 13] cc => I, Pos: [0, 13] cc => I, Pos: [10, 21] cc => I, Pos: [10, 21] cc => I, Pos: [62, 64] cc => I, Pos: [62, 64] cc => I, Pos: [63, 67, 69] ccc => cc, Pos: [78, 81, 93] ccc => cc, Pos: [100, 110] cc => I, Pos: [100, 110] cc => I, Pos: [119, 124, 129] ccc => cc, Pos: [140, 154] cc => I, Pos: [140, 154] cc => I]

Plan: 1
[Pos: [0, 13] cc => I,
 Pos: [10, 21] cc => I,
 Pos: [62, 64] cc => I,
 Pos: [63, 67, 69] ccc => cc,
 Pos: [78, 81, 93] ccc => cc,
 Pos: [100, 110] cc => I,
 Pos: [119, 124, 129] ccc => cc,
 Pos: [140, 154] cc => I]
Change: 8, Saving: 7

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.031266212463378906

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 13] cc => I,
 Pos: [10, 21] cc => I,
 Pos: [62, 64] cc => I,
 Pos: [63, 67, 69] ccc => cc,
 Pos: [78, 81, 93] ccc => cc,
 Pos: [100, 110] cc => I,
 Pos: [119, 124, 129] ccc => cc,
 Pos: [140, 154] cc => I]
Change: 8, Saving: 7

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 13] cc => I
Apply:  Pos: [10, 21] cc => I
Apply:  Pos: [62, 64] cc => I
Apply:  Pos: [63, 67, 69] ccc => cc
Apply:  Pos: [78, 81, 93] ccc => cc
Apply:  Pos: [100, 110] cc => I
Apply:  Pos: [119, 124, 129] ccc => cc
Apply:  Pos: [140, 154] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [12, 10], [16, 5], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [15, 19], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 15], [8, 16], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [1, 14], [11, 14], [4, 1], [9, 3], [11, 18], [5, 1], [8, 15], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [16, 3], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [10, 13], [12, 8], [15, 19], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [12, 15], [8, 15], [2, 8], [5, 9], [10, 13], [19, 14], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [2, 8], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [11, 9], [15, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  3.2342453002929688

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[83, 89, 99]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.93747878074646

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [83, 89, 99] ccc => cc]

Plan: 1
[Pos: [83, 89, 99] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [83, 89, 99] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [83, 89, 99] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [12, 10], [16, 5], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [15, 19], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 16], [8, 15], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [11, 14], [1, 14], [4, 1], [9, 3], [11, 18], [5, 1], [8, 15], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [16, 3], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [10, 18], [12, 8], [15, 19], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [8, 15], [12, 15], [2, 8], [5, 9], [19, 14], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 8], [2, 12], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [15, 9], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  2.953104257583618

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.937481164932251

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [12, 10], [16, 5], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [15, 19], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 15], [8, 16], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [1, 14], [11, 14], [4, 1], [9, 3], [11, 18], [5, 1], [8, 15], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [16, 3], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [10, 18], [12, 8], [15, 19], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [12, 15], [8, 15], [2, 8], [5, 9], [19, 14], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [2, 8], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [11, 9], [15, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  2.937481164932251

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [168] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 336

Reduced: 
 - size: 102 (37.78%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374380111694336

[6, 4], [16, 0], [7, 14], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [6, 2], [11, 18], [7, 17], [9, 19], [0, 3], [12, 10], [16, 5], [6, 2], [4, 16], [15, 19], [13, 11], [3, 1], [7, 14], [6, 2], [15, 19], [18, 7], [3, 1], [12, 8], [6, 4], [15, 9], [7, 14], [5, 1], [0, 3], [10, 11], [2, 8], [13, 18], [6, 2], [5, 3], [15, 19], [12, 8], [4, 16], [11, 9], [7, 14], [2, 12], [16, 5], [4, 8], [13, 18], [15, 19], [1, 14], [2, 8], [15, 19], [0, 3], [18, 7], [6, 4], [4, 8], [13, 11], [16, 0], [7, 17], [12, 10], [6, 2], [3, 1], [8, 5], [18, 7], [19, 17], [16, 0], [10, 11], [12, 15], [5, 3], [13, 18], [15, 9], [11, 19], [7, 14], [8, 16], [5, 1], [8, 15], [19, 14], [12, 10], [13, 18], [5, 1], [12, 8], [7, 14], [6, 4], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [6, 4], [19, 14], [8, 15], [0, 3], [1, 14], [11, 19], [4, 5], [6, 2], [12, 10], [0, 3], [19, 14], [8, 15], [9, 3], [11, 18], [5, 1], [16, 0], [11, 19], [6, 2], [8, 15], [5, 3], [10, 13], [7, 14], [15, 11], [16, 0], [10, 13], [19, 17], [4, 5], [11, 9], [5, 3], [1, 14], [8, 15], [6, 2], [9, 3], [19, 17], [2, 12], [16, 0], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [11, 9], [6, 2], [7, 14], [4, 8], [5, 3], [14, 17], [11, 9], [10, 13], [12, 8], [15, 19], [6, 4], [16, 0], [5, 3], [7, 17], [2, 15], [13, 18], [6, 4], [9, 3], [1, 14], [18, 7], [6, 2], [16, 5], [13, 11], [19, 17], [0, 3], [10, 18], [8, 15], [19, 17], [13, 11], [5, 3], [12, 15], [2, 8], [10, 18], [5, 9], [10, 13], [19, 14], [18, 7], [16, 0], [4, 8], [5, 3], [11, 18], [12, 10], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [4, 8], [5, 9], [19, 7], [6, 2], [11, 18], [3, 1], [4, 8], [12, 10], [9, 1], [16, 5], [10, 11], [2, 8], [12, 15], [19, 17], [6, 4], [1, 14], [5, 9], [2, 8], [11, 18], [19, 7], [16, 0], [6, 4], [14, 17], [5, 3], [6, 4], [12, 10], [2, 8], [16, 0], [7, 17], [2, 12], [5, 3], [15, 11], [9, 1], [7, 17], [6, 4], [5, 9], [16, 0], [2, 15], [12, 8], [1, 14], [10, 11], [7, 14], [11, 19], [10, 13], [5, 1], [4, 16], [15, 9], [7, 14], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [13, 18], [2, 15], [11, 19], [7, 17], [9, 19], [12, 8], [15, 11], [6, 2], [5, 1], [14, 17], [12, 15], [10, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [8, 16], [10, 13], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [12, 10], [18, 7], [19, 17], [8, 16], [12, 10], [6, 2], [11, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 15]
[2, 20]
[15, 21]
[17, 22]
[19, 24]
[22, 36]
[28, 40]
[33, 44]
[36, 45]
[45, 48]
[54, 62]
[66, 75]
[71, 76]
[79, 85]
[57, 92]
[74, 93]
[88, 94]
[87, 96]
[92, 102]
[96, 103]
[100, 108]
[105, 109]
[102, 116]
[110, 118]
[108, 120]
[128, 133]
[129, 135]
[109, 136]
[133, 141]
[139, 145]
[152, 156]
[151, 157]
[154, 161]
[158, 168]
[168, 173]
[167, 176]
[176, 182]
[170, 183]
[187, 193]
[178, 195]
[166, 196]
[190, 197]
[197, 200]
[193, 202]
[196, 203]
[199, 206]
[204, 209]
[200, 210]
[203, 212]
[217, 223]
[214, 239]
[253, 266]
[263, 267]
[241, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 55, 60]
[90, 95, 101]
[192, 208, 211]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[20, 23, 28]
[16, 26, 38]
[104, 111, 113]
[212, 221, 225]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[234, 245, 254]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 15]
[2, 20]
[15, 21]
[17, 22]
[19, 24]
[22, 36]
[28, 40]
[33, 44]
[36, 45]
[45, 48]
[54, 62]
[66, 75]
[71, 76]
[79, 85]
[57, 92]
[74, 93]
[88, 94]
[87, 96]
[92, 102]
[96, 103]
[100, 108]
[105, 109]
[102, 116]
[110, 118]
[108, 120]
[128, 133]
[129, 135]
[109, 136]
[133, 141]
[139, 145]
[152, 156]
[151, 157]
[154, 161]
[158, 168]
[168, 173]
[167, 176]
[176, 182]
[170, 183]
[187, 193]
[178, 195]
[166, 196]
[190, 197]
[197, 200]
[193, 202]
[196, 203]
[199, 206]
[204, 209]
[200, 210]
[203, 212]
[217, 223]
[214, 239]
[253, 266]
[263, 267]
[241, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.137959718704224

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 20] cc => I, Pos: [2, 20] cc => I, Pos: [8, 15] cc => I, Pos: [8, 15] cc => I, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [16, 26, 38] ccc => cc, Pos: [17, 22] cc => I, Pos: [17, 22] cc => I, Pos: [19, 24] cc => I, Pos: [19, 24] cc => I, Pos: [20, 23, 28] ccc => cc, Pos: [22, 36] cc => I, Pos: [22, 36] cc => I, Pos: [28, 40] cc => I, Pos: [28, 40] cc => I, Pos: [33, 44] cc => I, Pos: [33, 44] cc => I, Pos: [36, 45] cc => I, Pos: [36, 45] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [50, 55, 60] ccc => cc, Pos: [54, 62] cc => I, Pos: [54, 62] cc => I, Pos: [57, 92] cc => I, Pos: [57, 92] cc => I, Pos: [66, 75] cc => I, Pos: [66, 75] cc => I, Pos: [71, 76] cc => I, Pos: [71, 76] cc => I, Pos: [74, 93] cc => I, Pos: [74, 93] cc => I, Pos: [79, 85] cc => I, Pos: [79, 85] cc => I, Pos: [87, 96] cc => I, Pos: [87, 96] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [90, 95, 101] ccc => cc, Pos: [92, 102] cc => I, Pos: [92, 102] cc => I, Pos: [96, 103] cc => I, Pos: [96, 103] cc => I, Pos: [100, 108] cc => I, Pos: [100, 108] cc => I, Pos: [102, 116] cc => I, Pos: [102, 116] cc => I, Pos: [104, 111, 113] ccc => cc, Pos: [105, 109] cc => I, Pos: [105, 109] cc => I, Pos: [108, 120] cc => I, Pos: [108, 120] cc => I, Pos: [109, 136] cc => I, Pos: [109, 136] cc => I, Pos: [110, 118] cc => I, Pos: [110, 118] cc => I, Pos: [128, 133] cc => I, Pos: [128, 133] cc => I, Pos: [129, 135] cc => I, Pos: [129, 135] cc => I, Pos: [133, 141] cc => I, Pos: [133, 141] cc => I, Pos: [139, 145] cc => I, Pos: [139, 145] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [152, 156] cc => I, Pos: [152, 156] cc => I, Pos: [154, 161] cc => I, Pos: [154, 161] cc => I, Pos: [158, 168] cc => I, Pos: [158, 168] cc => I, Pos: [166, 196] cc => I, Pos: [166, 196] cc => I, Pos: [167, 176] cc => I, Pos: [167, 176] cc => I, Pos: [168, 173] cc => I, Pos: [168, 173] cc => I, Pos: [170, 183] cc => I, Pos: [170, 183] cc => I, Pos: [176, 182] cc => I, Pos: [176, 182] cc => I, Pos: [178, 195] cc => I, Pos: [178, 195] cc => I, Pos: [187, 193] cc => I, Pos: [187, 193] cc => I, Pos: [190, 197] cc => I, Pos: [190, 197] cc => I, Pos: [192, 208, 211] ccc => cc, Pos: [193, 202] cc => I, Pos: [193, 202] cc => I, Pos: [196, 203] cc => I, Pos: [196, 203] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [199, 206] cc => I, Pos: [199, 206] cc => I, Pos: [200, 210] cc => I, Pos: [200, 210] cc => I, Pos: [203, 212] cc => I, Pos: [203, 212] cc => I, Pos: [204, 209] cc => I, Pos: [204, 209] cc => I, Pos: [212, 221, 225] ccc => cc, Pos: [214, 239] cc => I, Pos: [214, 239] cc => I, Pos: [217, 223] cc => I, Pos: [217, 223] cc => I, Pos: [234, 245, 254] ccc => cc, Pos: [241, 268] cc => I, Pos: [241, 268] cc => I, Pos: [253, 266] cc => I, Pos: [253, 266] cc => I, Pos: [263, 267] cc => I, Pos: [263, 267] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 20] cc => I,
 Pos: [8, 15] cc => I,
 Pos: [16, 26, 38] ccc => cc,
 Pos: [17, 22] cc => I,
 Pos: [19, 24] cc => I,
 Pos: [28, 40] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [50, 55, 60] ccc => cc,
 Pos: [54, 62] cc => I,
 Pos: [92, 102] cc => I,
 Pos: [66, 75] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 93] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [96, 103] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [90, 95, 101] ccc => cc,
 Pos: [100, 108] cc => I,
 Pos: [104, 111, 113] ccc => cc,
 Pos: [109, 136] cc => I,
 Pos: [110, 118] cc => I,
 Pos: [133, 141] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [139, 145] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [154, 161] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [166, 196] cc => I,
 Pos: [167, 176] cc => I,
 Pos: [170, 183] cc => I,
 Pos: [178, 195] cc => I,
 Pos: [193, 202] cc => I,
 Pos: [190, 197] cc => I,
 Pos: [192, 208, 211] ccc => cc,
 Pos: [199, 206] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [203, 212] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [214, 239] cc => I,
 Pos: [217, 223] cc => I,
 Pos: [234, 245, 254] ccc => cc,
 Pos: [241, 268] cc => I,
 Pos: [253, 266] cc => I,
 Pos: [263, 267] cc => I]
Change: 46, Saving: 172

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 20] cc => I
Apply:  Pos: [8, 15] cc => I
Apply:  Pos: [16, 26, 38] ccc => cc
Apply:  Pos: [17, 22] cc => I
Apply:  Pos: [19, 24] cc => I
Apply:  Pos: [28, 40] cc => I
Apply:  Pos: [33, 44] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [50, 55, 60] ccc => cc
Apply:  Pos: [54, 62] cc => I
Apply:  Pos: [92, 102] cc => I
Apply:  Pos: [66, 75] cc => I
Apply:  Pos: [71, 76] cc => I
Apply:  Pos: [74, 93] cc => I
Apply:  Pos: [79, 85] cc => I
Apply:  Pos: [96, 103] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [90, 95, 101] ccc => cc
Apply:  Pos: [100, 108] cc => I
Apply:  Pos: [104, 111, 113] ccc => cc
Apply:  Pos: [109, 136] cc => I
Apply:  Pos: [110, 118] cc => I
Apply:  Pos: [133, 141] cc => I
Apply:  Pos: [129, 135] cc => I
Apply:  Pos: [139, 145] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [152, 156] cc => I
Apply:  Pos: [154, 161] cc => I
Apply:  Pos: [158, 168] cc => I
Apply:  Pos: [166, 196] cc => I
Apply:  Pos: [167, 176] cc => I
Apply:  Pos: [170, 183] cc => I
Apply:  Pos: [178, 195] cc => I
Apply:  Pos: [193, 202] cc => I
Apply:  Pos: [190, 197] cc => I
Apply:  Pos: [192, 208, 211] ccc => cc
Apply:  Pos: [199, 206] cc => I
Apply:  Pos: [200, 210] cc => I
Apply:  Pos: [203, 212] cc => I
Apply:  Pos: [204, 209] cc => I
Apply:  Pos: [214, 239] cc => I
Apply:  Pos: [217, 223] cc => I
Apply:  Pos: [234, 245, 254] ccc => cc
Apply:  Pos: [241, 268] cc => I
Apply:  Pos: [253, 266] cc => I
Apply:  Pos: [263, 267] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 4], [16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [0, 3], [12, 10], [16, 5], [6, 4], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [0, 3], [10, 11], [2, 8], [6, 2], [5, 3], [15, 19], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [6, 2], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 16], [8, 15], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [8, 15], [1, 14], [11, 14], [4, 5], [19, 14], [9, 3], [11, 18], [5, 1], [4, 5], [10, 13], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [6, 2], [9, 3], [2, 12], [16, 0], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [6, 2], [7, 14], [4, 8], [14, 17], [12, 8], [15, 19], [16, 0], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [18, 7], [6, 2], [16, 5], [0, 3], [8, 15], [12, 15], [2, 8], [5, 9], [10, 13], [19, 14], [18, 7], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [11, 18], [3, 1], [4, 8], [9, 1], [16, 5], [10, 11], [2, 8], [12, 15], [19, 17], [1, 14], [5, 1], [11, 18], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [10, 13], [5, 1], [4, 16], [15, 9], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [10, 13], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  5.137959718704224

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 13]
[10, 21]
[41, 78]
[102, 112]
[142, 156]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[65, 69, 70]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[121, 126, 132]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 13]
[10, 21]
[41, 78]
[102, 112]
[142, 156]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2666656970977783

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 13] cc => I, Pos: [0, 13] cc => I, Pos: [10, 21] cc => I, Pos: [10, 21] cc => I, Pos: [41, 78] cc => I, Pos: [41, 78] cc => I, Pos: [65, 69, 70] ccc => cc, Pos: [102, 112] cc => I, Pos: [102, 112] cc => I, Pos: [121, 126, 132] ccc => cc, Pos: [142, 156] cc => I, Pos: [142, 156] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 13] cc => I,
 Pos: [10, 21] cc => I,
 Pos: [41, 78] cc => I,
 Pos: [65, 69, 70] ccc => cc,
 Pos: [102, 112] cc => I,
 Pos: [121, 126, 132] ccc => cc,
 Pos: [142, 156] cc => I]
Change: 7, Saving: 24

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 13] cc => I
Apply:  Pos: [10, 21] cc => I
Apply:  Pos: [41, 78] cc => I
Apply:  Pos: [65, 69, 70] ccc => cc
Apply:  Pos: [102, 112] cc => I
Apply:  Pos: [121, 126, 132] ccc => cc
Apply:  Pos: [142, 156] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [12, 10], [16, 5], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [15, 19], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 15], [8, 16], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [8, 15], [11, 14], [1, 14], [4, 1], [19, 14], [9, 3], [11, 18], [5, 1], [10, 13], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [16, 0], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [6, 2], [7, 14], [4, 8], [14, 17], [12, 8], [15, 19], [16, 0], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [12, 15], [8, 15], [2, 8], [5, 9], [10, 13], [19, 14], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [2, 8], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [11, 9], [15, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  3.2666656970977783

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[65, 92, 102]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9853367805480957

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [65, 92, 102] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [65, 92, 102] ccc => cc]
Change: 1, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [65, 92, 102] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [12, 10], [16, 5], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [15, 19], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 16], [8, 15], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [8, 15], [1, 14], [11, 14], [4, 1], [19, 14], [9, 3], [11, 18], [5, 1], [10, 18], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [16, 0], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [6, 2], [7, 14], [4, 8], [14, 17], [12, 8], [15, 19], [16, 0], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [8, 15], [12, 15], [2, 8], [5, 9], [19, 14], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [2, 8], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [15, 9], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  2.9853367805480957

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.002591848373413

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [12, 10], [16, 5], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [15, 19], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 15], [8, 16], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [8, 15], [11, 14], [1, 14], [4, 1], [19, 14], [9, 3], [11, 18], [5, 1], [10, 18], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [16, 0], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [6, 2], [7, 14], [4, 8], [14, 17], [12, 8], [15, 19], [16, 0], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [12, 15], [8, 15], [2, 8], [5, 9], [19, 14], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [2, 8], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [11, 9], [15, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  3.002591848373413

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [171] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 342

Reduced: 
 - size: 99 (36.67%)
 - cycle: 198 (36.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10937261581420898

[6, 4], [16, 0], [7, 14], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [6, 2], [11, 18], [7, 17], [9, 19], [0, 3], [12, 10], [16, 5], [6, 2], [4, 16], [15, 19], [13, 11], [3, 1], [7, 14], [6, 2], [15, 19], [18, 7], [3, 1], [12, 8], [6, 4], [15, 9], [7, 14], [5, 1], [0, 3], [10, 11], [2, 8], [13, 18], [6, 2], [5, 3], [15, 19], [12, 8], [4, 16], [11, 9], [7, 14], [2, 12], [16, 5], [4, 8], [13, 18], [15, 19], [1, 14], [2, 8], [15, 19], [0, 3], [18, 7], [6, 4], [4, 8], [13, 11], [16, 0], [7, 17], [12, 10], [6, 2], [3, 1], [8, 5], [18, 7], [19, 17], [16, 0], [10, 11], [12, 15], [5, 3], [13, 18], [15, 9], [11, 19], [7, 14], [8, 16], [5, 1], [8, 15], [19, 14], [12, 10], [13, 18], [5, 1], [12, 8], [7, 14], [6, 4], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [6, 4], [19, 14], [8, 15], [0, 3], [1, 14], [11, 19], [4, 5], [6, 2], [12, 10], [0, 3], [19, 14], [8, 15], [9, 3], [11, 18], [5, 1], [16, 0], [11, 19], [6, 2], [8, 15], [5, 3], [10, 13], [7, 14], [15, 11], [16, 0], [10, 13], [19, 17], [4, 5], [11, 9], [5, 3], [1, 14], [8, 15], [6, 2], [9, 3], [19, 17], [2, 12], [16, 0], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [11, 9], [6, 2], [7, 14], [4, 8], [5, 3], [14, 17], [11, 9], [10, 13], [12, 8], [15, 19], [6, 4], [16, 0], [5, 3], [7, 17], [2, 15], [13, 18], [6, 4], [9, 3], [1, 14], [18, 7], [6, 2], [16, 5], [13, 11], [19, 17], [0, 3], [10, 18], [8, 15], [19, 17], [13, 11], [5, 3], [12, 15], [2, 8], [10, 18], [5, 9], [10, 13], [19, 14], [18, 7], [16, 0], [4, 8], [5, 3], [11, 18], [12, 10], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [4, 8], [5, 9], [19, 7], [6, 2], [11, 18], [3, 1], [4, 8], [12, 10], [9, 1], [16, 5], [10, 11], [2, 8], [12, 15], [19, 17], [6, 4], [1, 14], [5, 9], [2, 8], [11, 18], [19, 7], [16, 0], [6, 4], [14, 17], [5, 3], [6, 4], [12, 10], [2, 8], [16, 0], [7, 17], [2, 12], [5, 3], [15, 11], [9, 1], [7, 17], [6, 4], [5, 9], [16, 0], [2, 15], [12, 8], [1, 14], [10, 11], [7, 14], [11, 19], [10, 13], [5, 1], [4, 16], [15, 9], [7, 14], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [13, 18], [2, 15], [11, 19], [7, 17], [9, 19], [12, 8], [15, 11], [6, 2], [5, 1], [14, 17], [12, 15], [10, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [8, 16], [10, 13], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [12, 10], [18, 7], [19, 17], [8, 16], [12, 10], [6, 2], [11, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 15]
[2, 20]
[15, 21]
[17, 22]
[19, 24]
[22, 36]
[28, 40]
[33, 44]
[36, 45]
[45, 48]
[54, 62]
[66, 75]
[71, 76]
[79, 85]
[57, 92]
[74, 93]
[88, 94]
[87, 96]
[92, 102]
[96, 103]
[100, 108]
[105, 109]
[102, 116]
[110, 118]
[108, 120]
[128, 133]
[129, 135]
[109, 136]
[133, 141]
[139, 145]
[152, 156]
[151, 157]
[154, 161]
[158, 168]
[168, 173]
[167, 176]
[176, 182]
[170, 183]
[187, 193]
[178, 195]
[166, 196]
[190, 197]
[197, 200]
[193, 202]
[196, 203]
[199, 206]
[204, 209]
[200, 210]
[203, 212]
[217, 223]
[214, 239]
[253, 266]
[263, 267]
[241, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 55, 60]
[90, 95, 101]
[192, 208, 211]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[20, 23, 28]
[16, 26, 38]
[104, 111, 113]
[212, 221, 225]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[234, 245, 254]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 15]
[2, 20]
[15, 21]
[17, 22]
[19, 24]
[22, 36]
[28, 40]
[33, 44]
[36, 45]
[45, 48]
[54, 62]
[66, 75]
[71, 76]
[79, 85]
[57, 92]
[74, 93]
[88, 94]
[87, 96]
[92, 102]
[96, 103]
[100, 108]
[105, 109]
[102, 116]
[110, 118]
[108, 120]
[128, 133]
[129, 135]
[109, 136]
[133, 141]
[139, 145]
[152, 156]
[151, 157]
[154, 161]
[158, 168]
[168, 173]
[167, 176]
[176, 182]
[170, 183]
[187, 193]
[178, 195]
[166, 196]
[190, 197]
[197, 200]
[193, 202]
[196, 203]
[199, 206]
[204, 209]
[200, 210]
[203, 212]
[217, 223]
[214, 239]
[253, 266]
[263, 267]
[241, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.230565786361694

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 20] cc => I, Pos: [2, 20] cc => I, Pos: [8, 15] cc => I, Pos: [8, 15] cc => I, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [16, 26, 38] ccc => cc, Pos: [17, 22] cc => I, Pos: [17, 22] cc => I, Pos: [19, 24] cc => I, Pos: [19, 24] cc => I, Pos: [20, 23, 28] ccc => cc, Pos: [22, 36] cc => I, Pos: [22, 36] cc => I, Pos: [28, 40] cc => I, Pos: [28, 40] cc => I, Pos: [33, 44] cc => I, Pos: [33, 44] cc => I, Pos: [36, 45] cc => I, Pos: [36, 45] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [50, 55, 60] ccc => cc, Pos: [54, 62] cc => I, Pos: [54, 62] cc => I, Pos: [57, 92] cc => I, Pos: [57, 92] cc => I, Pos: [66, 75] cc => I, Pos: [66, 75] cc => I, Pos: [71, 76] cc => I, Pos: [71, 76] cc => I, Pos: [74, 93] cc => I, Pos: [74, 93] cc => I, Pos: [79, 85] cc => I, Pos: [79, 85] cc => I, Pos: [87, 96] cc => I, Pos: [87, 96] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [90, 95, 101] ccc => cc, Pos: [92, 102] cc => I, Pos: [92, 102] cc => I, Pos: [96, 103] cc => I, Pos: [96, 103] cc => I, Pos: [100, 108] cc => I, Pos: [100, 108] cc => I, Pos: [102, 116] cc => I, Pos: [102, 116] cc => I, Pos: [104, 111, 113] ccc => cc, Pos: [105, 109] cc => I, Pos: [105, 109] cc => I, Pos: [108, 120] cc => I, Pos: [108, 120] cc => I, Pos: [109, 136] cc => I, Pos: [109, 136] cc => I, Pos: [110, 118] cc => I, Pos: [110, 118] cc => I, Pos: [128, 133] cc => I, Pos: [128, 133] cc => I, Pos: [129, 135] cc => I, Pos: [129, 135] cc => I, Pos: [133, 141] cc => I, Pos: [133, 141] cc => I, Pos: [139, 145] cc => I, Pos: [139, 145] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [152, 156] cc => I, Pos: [152, 156] cc => I, Pos: [154, 161] cc => I, Pos: [154, 161] cc => I, Pos: [158, 168] cc => I, Pos: [158, 168] cc => I, Pos: [166, 196] cc => I, Pos: [166, 196] cc => I, Pos: [167, 176] cc => I, Pos: [167, 176] cc => I, Pos: [168, 173] cc => I, Pos: [168, 173] cc => I, Pos: [170, 183] cc => I, Pos: [170, 183] cc => I, Pos: [176, 182] cc => I, Pos: [176, 182] cc => I, Pos: [178, 195] cc => I, Pos: [178, 195] cc => I, Pos: [187, 193] cc => I, Pos: [187, 193] cc => I, Pos: [190, 197] cc => I, Pos: [190, 197] cc => I, Pos: [192, 208, 211] ccc => cc, Pos: [193, 202] cc => I, Pos: [193, 202] cc => I, Pos: [196, 203] cc => I, Pos: [196, 203] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [199, 206] cc => I, Pos: [199, 206] cc => I, Pos: [200, 210] cc => I, Pos: [200, 210] cc => I, Pos: [203, 212] cc => I, Pos: [203, 212] cc => I, Pos: [204, 209] cc => I, Pos: [204, 209] cc => I, Pos: [212, 221, 225] ccc => cc, Pos: [214, 239] cc => I, Pos: [214, 239] cc => I, Pos: [217, 223] cc => I, Pos: [217, 223] cc => I, Pos: [234, 245, 254] ccc => cc, Pos: [241, 268] cc => I, Pos: [241, 268] cc => I, Pos: [253, 266] cc => I, Pos: [253, 266] cc => I, Pos: [263, 267] cc => I, Pos: [263, 267] cc => I]

--------End Timer [Generate Plans]:  0.12499189376831055

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 23, 28] ccc => cc,
 Pos: [8, 15] cc => I,
 Pos: [16, 26, 38] ccc => cc,
 Pos: [22, 36] cc => I,
 Pos: [19, 24] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [50, 55, 60] ccc => cc,
 Pos: [54, 62] cc => I,
 Pos: [57, 92] cc => I,
 Pos: [66, 75] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 93] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [87, 96] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [90, 95, 101] ccc => cc,
 Pos: [108, 120] cc => I,
 Pos: [102, 116] cc => I,
 Pos: [104, 111, 113] ccc => cc,
 Pos: [105, 109] cc => I,
 Pos: [110, 118] cc => I,
 Pos: [128, 133] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [139, 145] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [154, 161] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [196, 203] cc => I,
 Pos: [167, 176] cc => I,
 Pos: [170, 183] cc => I,
 Pos: [178, 195] cc => I,
 Pos: [193, 202] cc => I,
 Pos: [197, 200] cc => I,
 Pos: [192, 208, 211] ccc => cc,
 Pos: [199, 206] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [212, 221, 225] ccc => cc,
 Pos: [214, 239] cc => I,
 Pos: [217, 223] cc => I,
 Pos: [234, 245, 254] ccc => cc,
 Pos: [241, 268] cc => I,
 Pos: [253, 266] cc => I,
 Pos: [263, 267] cc => I]
Change: 45, Saving: 47

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 23, 28] ccc => cc
Apply:  Pos: [8, 15] cc => I
Apply:  Pos: [16, 26, 38] ccc => cc
Apply:  Pos: [22, 36] cc => I
Apply:  Pos: [19, 24] cc => I
Apply:  Pos: [33, 44] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [50, 55, 60] ccc => cc
Apply:  Pos: [54, 62] cc => I
Apply:  Pos: [57, 92] cc => I
Apply:  Pos: [66, 75] cc => I
Apply:  Pos: [71, 76] cc => I
Apply:  Pos: [74, 93] cc => I
Apply:  Pos: [79, 85] cc => I
Apply:  Pos: [87, 96] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [90, 95, 101] ccc => cc
Apply:  Pos: [108, 120] cc => I
Apply:  Pos: [102, 116] cc => I
Apply:  Pos: [104, 111, 113] ccc => cc
Apply:  Pos: [105, 109] cc => I
Apply:  Pos: [110, 118] cc => I
Apply:  Pos: [128, 133] cc => I
Apply:  Pos: [129, 135] cc => I
Apply:  Pos: [139, 145] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [152, 156] cc => I
Apply:  Pos: [154, 161] cc => I
Apply:  Pos: [158, 168] cc => I
Apply:  Pos: [196, 203] cc => I
Apply:  Pos: [167, 176] cc => I
Apply:  Pos: [170, 183] cc => I
Apply:  Pos: [178, 195] cc => I
Apply:  Pos: [193, 202] cc => I
Apply:  Pos: [197, 200] cc => I
Apply:  Pos: [192, 208, 211] ccc => cc
Apply:  Pos: [199, 206] cc => I
Apply:  Pos: [204, 209] cc => I
Apply:  Pos: [212, 221, 225] ccc => cc
Apply:  Pos: [214, 239] cc => I
Apply:  Pos: [217, 223] cc => I
Apply:  Pos: [234, 245, 254] ccc => cc
Apply:  Pos: [241, 268] cc => I
Apply:  Pos: [253, 266] cc => I
Apply:  Pos: [263, 267] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 4], [16, 0], [7, 14], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [0, 3], [12, 10], [16, 5], [6, 4], [15, 19], [13, 11], [18, 7], [6, 2], [7, 14], [12, 8], [4, 16], [15, 9], [5, 1], [0, 3], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [7, 14], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 16], [8, 15], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [1, 14], [11, 14], [4, 5], [19, 14], [9, 3], [11, 18], [5, 1], [16, 0], [8, 15], [4, 5], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [10, 13], [12, 8], [15, 19], [16, 0], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [18, 7], [6, 2], [16, 5], [0, 3], [8, 15], [12, 15], [2, 8], [5, 9], [10, 13], [19, 14], [18, 7], [16, 0], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [11, 18], [3, 1], [4, 8], [9, 1], [16, 5], [10, 11], [2, 8], [12, 15], [19, 17], [6, 4], [1, 14], [5, 1], [11, 18], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [6, 4], [4, 16], [2, 15], [1, 14], [10, 11], [11, 19], [10, 13], [5, 1], [16, 0], [15, 9], [11, 9], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [10, 13], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  5.355557680130005

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 14]
[11, 24]
[19, 31]
[65, 67]
[103, 113]
[132, 141]
[147, 160]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[66, 70, 73]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[123, 128, 135]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[10, 15, 22]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 14]
[11, 24]
[19, 31]
[65, 67]
[103, 113]
[132, 141]
[147, 160]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.390589952468872

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 14] cc => I, Pos: [0, 14] cc => I, Pos: [10, 15, 22] ccc => cc, Pos: [11, 24] cc => I, Pos: [11, 24] cc => I, Pos: [19, 31] cc => I, Pos: [19, 31] cc => I, Pos: [65, 67] cc => I, Pos: [65, 67] cc => I, Pos: [66, 70, 73] ccc => cc, Pos: [103, 113] cc => I, Pos: [103, 113] cc => I, Pos: [123, 128, 135] ccc => cc, Pos: [132, 141] cc => I, Pos: [132, 141] cc => I, Pos: [147, 160] cc => I, Pos: [147, 160] cc => I]

--------End Timer [Generate Plans]:  0.031145572662353516

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 14] cc => I,
 Pos: [10, 15, 22] ccc => cc,
 Pos: [11, 24] cc => I,
 Pos: [19, 31] cc => I,
 Pos: [65, 67] cc => I,
 Pos: [66, 70, 73] ccc => cc,
 Pos: [103, 113] cc => I,
 Pos: [123, 128, 135] ccc => cc,
 Pos: [132, 141] cc => I,
 Pos: [147, 160] cc => I]
Change: 10, Saving: 9

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 14] cc => I
Apply:  Pos: [10, 15, 22] ccc => cc
Apply:  Pos: [11, 24] cc => I
Apply:  Pos: [19, 31] cc => I
Apply:  Pos: [65, 67] cc => I
Apply:  Pos: [66, 70, 73] ccc => cc
Apply:  Pos: [103, 113] cc => I
Apply:  Pos: [123, 128, 135] ccc => cc
Apply:  Pos: [132, 141] cc => I
Apply:  Pos: [147, 160] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [7, 14], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [15, 9], [12, 10], [16, 5], [9, 19], [13, 11], [18, 7], [6, 2], [12, 8], [4, 16], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 15], [8, 16], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [1, 14], [11, 14], [4, 1], [9, 3], [11, 18], [5, 1], [16, 0], [8, 15], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [10, 13], [12, 8], [15, 19], [16, 0], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [12, 15], [8, 15], [2, 8], [5, 9], [10, 13], [19, 14], [16, 0], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [2, 8], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [4, 16], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [16, 0], [11, 9], [15, 9], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  3.4217355251312256

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[83, 90, 100]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.016756534576416

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [83, 90, 100] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [83, 90, 100] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [83, 90, 100] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [7, 14], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [15, 9], [12, 10], [16, 5], [9, 19], [13, 11], [18, 7], [6, 2], [12, 8], [4, 16], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 16], [8, 15], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [11, 14], [1, 14], [4, 1], [9, 3], [11, 18], [5, 1], [16, 0], [8, 15], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [10, 18], [12, 8], [15, 19], [16, 0], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [8, 15], [12, 15], [2, 8], [5, 9], [19, 14], [16, 0], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [2, 8], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [4, 16], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [16, 0], [15, 9], [11, 9], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  3.016756534576416

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.010049343109131

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [7, 14], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [15, 9], [12, 10], [16, 5], [9, 19], [13, 11], [18, 7], [6, 2], [12, 8], [4, 16], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 15], [8, 16], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [1, 14], [11, 14], [4, 1], [9, 3], [11, 18], [5, 1], [16, 0], [8, 15], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [10, 18], [12, 8], [15, 19], [16, 0], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [12, 15], [8, 15], [2, 8], [5, 9], [19, 14], [16, 0], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [2, 8], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [4, 16], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [16, 0], [11, 9], [15, 9], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  3.010049343109131

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [170] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 340

Reduced: 
 - size: 100 (37.04%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10938048362731934

[6, 4], [16, 0], [7, 14], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [6, 2], [11, 18], [7, 17], [9, 19], [0, 3], [12, 10], [16, 5], [6, 2], [4, 16], [15, 19], [13, 11], [3, 1], [7, 14], [6, 2], [15, 19], [18, 7], [3, 1], [12, 8], [6, 4], [15, 9], [7, 14], [5, 1], [0, 3], [10, 11], [2, 8], [13, 18], [6, 2], [5, 3], [15, 19], [12, 8], [4, 16], [11, 9], [7, 14], [2, 12], [16, 5], [4, 8], [13, 18], [15, 19], [1, 14], [2, 8], [15, 19], [0, 3], [18, 7], [6, 4], [4, 8], [13, 11], [16, 0], [7, 17], [12, 10], [6, 2], [3, 1], [8, 5], [18, 7], [19, 17], [16, 0], [10, 11], [12, 15], [5, 3], [13, 18], [15, 9], [11, 19], [7, 14], [8, 16], [5, 1], [8, 15], [19, 14], [12, 10], [13, 18], [5, 1], [12, 8], [7, 14], [6, 4], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [6, 4], [19, 14], [8, 15], [0, 3], [1, 14], [11, 19], [4, 5], [6, 2], [12, 10], [0, 3], [19, 14], [8, 15], [9, 3], [11, 18], [5, 1], [16, 0], [11, 19], [6, 2], [8, 15], [5, 3], [10, 13], [7, 14], [15, 11], [16, 0], [10, 13], [19, 17], [4, 5], [11, 9], [5, 3], [1, 14], [8, 15], [6, 2], [9, 3], [19, 17], [2, 12], [16, 0], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [11, 9], [6, 2], [7, 14], [4, 8], [5, 3], [14, 17], [11, 9], [10, 13], [12, 8], [15, 19], [6, 4], [16, 0], [5, 3], [7, 17], [2, 15], [13, 18], [6, 4], [9, 3], [1, 14], [18, 7], [6, 2], [16, 5], [13, 11], [19, 17], [0, 3], [10, 18], [8, 15], [19, 17], [13, 11], [5, 3], [12, 15], [2, 8], [10, 18], [5, 9], [10, 13], [19, 14], [18, 7], [16, 0], [4, 8], [5, 3], [11, 18], [12, 10], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [4, 8], [5, 9], [19, 7], [6, 2], [11, 18], [3, 1], [4, 8], [12, 10], [9, 1], [16, 5], [10, 11], [2, 8], [12, 15], [19, 17], [6, 4], [1, 14], [5, 9], [2, 8], [11, 18], [19, 7], [16, 0], [6, 4], [14, 17], [5, 3], [6, 4], [12, 10], [2, 8], [16, 0], [7, 17], [2, 12], [5, 3], [15, 11], [9, 1], [7, 17], [6, 4], [5, 9], [16, 0], [2, 15], [12, 8], [1, 14], [10, 11], [7, 14], [11, 19], [10, 13], [5, 1], [4, 16], [15, 9], [7, 14], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [13, 18], [2, 15], [11, 19], [7, 17], [9, 19], [12, 8], [15, 11], [6, 2], [5, 1], [14, 17], [12, 15], [10, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [8, 16], [10, 13], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [12, 10], [18, 7], [19, 17], [8, 16], [12, 10], [6, 2], [11, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 15]
[2, 20]
[15, 21]
[17, 22]
[19, 24]
[22, 36]
[28, 40]
[33, 44]
[36, 45]
[45, 48]
[54, 62]
[66, 75]
[71, 76]
[79, 85]
[57, 92]
[74, 93]
[88, 94]
[87, 96]
[92, 102]
[96, 103]
[100, 108]
[105, 109]
[102, 116]
[110, 118]
[108, 120]
[128, 133]
[129, 135]
[109, 136]
[133, 141]
[139, 145]
[152, 156]
[151, 157]
[154, 161]
[158, 168]
[168, 173]
[167, 176]
[176, 182]
[170, 183]
[187, 193]
[178, 195]
[166, 196]
[190, 197]
[197, 200]
[193, 202]
[196, 203]
[199, 206]
[204, 209]
[200, 210]
[203, 212]
[217, 223]
[214, 239]
[253, 266]
[263, 267]
[241, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 55, 60]
[90, 95, 101]
[192, 208, 211]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[20, 23, 28]
[16, 26, 38]
[104, 111, 113]
[212, 221, 225]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[234, 245, 254]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 15]
[2, 20]
[15, 21]
[17, 22]
[19, 24]
[22, 36]
[28, 40]
[33, 44]
[36, 45]
[45, 48]
[54, 62]
[66, 75]
[71, 76]
[79, 85]
[57, 92]
[74, 93]
[88, 94]
[87, 96]
[92, 102]
[96, 103]
[100, 108]
[105, 109]
[102, 116]
[110, 118]
[108, 120]
[128, 133]
[129, 135]
[109, 136]
[133, 141]
[139, 145]
[152, 156]
[151, 157]
[154, 161]
[158, 168]
[168, 173]
[167, 176]
[176, 182]
[170, 183]
[187, 193]
[178, 195]
[166, 196]
[190, 197]
[197, 200]
[193, 202]
[196, 203]
[199, 206]
[204, 209]
[200, 210]
[203, 212]
[217, 223]
[214, 239]
[253, 266]
[263, 267]
[241, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.203133821487427

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 20] cc => I, Pos: [2, 20] cc => I, Pos: [8, 15] cc => I, Pos: [8, 15] cc => I, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [16, 26, 38] ccc => cc, Pos: [17, 22] cc => I, Pos: [17, 22] cc => I, Pos: [19, 24] cc => I, Pos: [19, 24] cc => I, Pos: [20, 23, 28] ccc => cc, Pos: [22, 36] cc => I, Pos: [22, 36] cc => I, Pos: [28, 40] cc => I, Pos: [28, 40] cc => I, Pos: [33, 44] cc => I, Pos: [33, 44] cc => I, Pos: [36, 45] cc => I, Pos: [36, 45] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [50, 55, 60] ccc => cc, Pos: [54, 62] cc => I, Pos: [54, 62] cc => I, Pos: [57, 92] cc => I, Pos: [57, 92] cc => I, Pos: [66, 75] cc => I, Pos: [66, 75] cc => I, Pos: [71, 76] cc => I, Pos: [71, 76] cc => I, Pos: [74, 93] cc => I, Pos: [74, 93] cc => I, Pos: [79, 85] cc => I, Pos: [79, 85] cc => I, Pos: [87, 96] cc => I, Pos: [87, 96] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [90, 95, 101] ccc => cc, Pos: [92, 102] cc => I, Pos: [92, 102] cc => I, Pos: [96, 103] cc => I, Pos: [96, 103] cc => I, Pos: [100, 108] cc => I, Pos: [100, 108] cc => I, Pos: [102, 116] cc => I, Pos: [102, 116] cc => I, Pos: [104, 111, 113] ccc => cc, Pos: [105, 109] cc => I, Pos: [105, 109] cc => I, Pos: [108, 120] cc => I, Pos: [108, 120] cc => I, Pos: [109, 136] cc => I, Pos: [109, 136] cc => I, Pos: [110, 118] cc => I, Pos: [110, 118] cc => I, Pos: [128, 133] cc => I, Pos: [128, 133] cc => I, Pos: [129, 135] cc => I, Pos: [129, 135] cc => I, Pos: [133, 141] cc => I, Pos: [133, 141] cc => I, Pos: [139, 145] cc => I, Pos: [139, 145] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [152, 156] cc => I, Pos: [152, 156] cc => I, Pos: [154, 161] cc => I, Pos: [154, 161] cc => I, Pos: [158, 168] cc => I, Pos: [158, 168] cc => I, Pos: [166, 196] cc => I, Pos: [166, 196] cc => I, Pos: [167, 176] cc => I, Pos: [167, 176] cc => I, Pos: [168, 173] cc => I, Pos: [168, 173] cc => I, Pos: [170, 183] cc => I, Pos: [170, 183] cc => I, Pos: [176, 182] cc => I, Pos: [176, 182] cc => I, Pos: [178, 195] cc => I, Pos: [178, 195] cc => I, Pos: [187, 193] cc => I, Pos: [187, 193] cc => I, Pos: [190, 197] cc => I, Pos: [190, 197] cc => I, Pos: [192, 208, 211] ccc => cc, Pos: [193, 202] cc => I, Pos: [193, 202] cc => I, Pos: [196, 203] cc => I, Pos: [196, 203] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [199, 206] cc => I, Pos: [199, 206] cc => I, Pos: [200, 210] cc => I, Pos: [200, 210] cc => I, Pos: [203, 212] cc => I, Pos: [203, 212] cc => I, Pos: [204, 209] cc => I, Pos: [204, 209] cc => I, Pos: [212, 221, 225] ccc => cc, Pos: [214, 239] cc => I, Pos: [214, 239] cc => I, Pos: [217, 223] cc => I, Pos: [217, 223] cc => I, Pos: [234, 245, 254] ccc => cc, Pos: [241, 268] cc => I, Pos: [241, 268] cc => I, Pos: [253, 266] cc => I, Pos: [253, 266] cc => I, Pos: [263, 267] cc => I, Pos: [263, 267] cc => I]

--------End Timer [Generate Plans]:  0.12588953971862793

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 20] cc => I,
 Pos: [15, 21] cc => I,
 Pos: [16, 26, 38] ccc => cc,
 Pos: [22, 36] cc => I,
 Pos: [19, 24] cc => I,
 Pos: [28, 40] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [50, 55, 60] ccc => cc,
 Pos: [54, 62] cc => I,
 Pos: [57, 92] cc => I,
 Pos: [66, 75] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 93] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [96, 103] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [90, 95, 101] ccc => cc,
 Pos: [108, 120] cc => I,
 Pos: [102, 116] cc => I,
 Pos: [104, 111, 113] ccc => cc,
 Pos: [109, 136] cc => I,
 Pos: [110, 118] cc => I,
 Pos: [133, 141] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [139, 145] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [154, 161] cc => I,
 Pos: [168, 173] cc => I,
 Pos: [196, 203] cc => I,
 Pos: [167, 176] cc => I,
 Pos: [170, 183] cc => I,
 Pos: [178, 195] cc => I,
 Pos: [193, 202] cc => I,
 Pos: [197, 200] cc => I,
 Pos: [192, 208, 211] ccc => cc,
 Pos: [199, 206] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [212, 221, 225] ccc => cc,
 Pos: [214, 239] cc => I,
 Pos: [217, 223] cc => I,
 Pos: [234, 245, 254] ccc => cc,
 Pos: [241, 268] cc => I,
 Pos: [253, 266] cc => I,
 Pos: [263, 267] cc => I]
Change: 46, Saving: 48

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 20] cc => I
Apply:  Pos: [15, 21] cc => I
Apply:  Pos: [16, 26, 38] ccc => cc
Apply:  Pos: [22, 36] cc => I
Apply:  Pos: [19, 24] cc => I
Apply:  Pos: [28, 40] cc => I
Apply:  Pos: [33, 44] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [50, 55, 60] ccc => cc
Apply:  Pos: [54, 62] cc => I
Apply:  Pos: [57, 92] cc => I
Apply:  Pos: [66, 75] cc => I
Apply:  Pos: [71, 76] cc => I
Apply:  Pos: [74, 93] cc => I
Apply:  Pos: [79, 85] cc => I
Apply:  Pos: [96, 103] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [90, 95, 101] ccc => cc
Apply:  Pos: [108, 120] cc => I
Apply:  Pos: [102, 116] cc => I
Apply:  Pos: [104, 111, 113] ccc => cc
Apply:  Pos: [109, 136] cc => I
Apply:  Pos: [110, 118] cc => I
Apply:  Pos: [133, 141] cc => I
Apply:  Pos: [129, 135] cc => I
Apply:  Pos: [139, 145] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [152, 156] cc => I
Apply:  Pos: [154, 161] cc => I
Apply:  Pos: [168, 173] cc => I
Apply:  Pos: [196, 203] cc => I
Apply:  Pos: [167, 176] cc => I
Apply:  Pos: [170, 183] cc => I
Apply:  Pos: [178, 195] cc => I
Apply:  Pos: [193, 202] cc => I
Apply:  Pos: [197, 200] cc => I
Apply:  Pos: [192, 208, 211] ccc => cc
Apply:  Pos: [199, 206] cc => I
Apply:  Pos: [204, 209] cc => I
Apply:  Pos: [212, 221, 225] ccc => cc
Apply:  Pos: [214, 239] cc => I
Apply:  Pos: [217, 223] cc => I
Apply:  Pos: [234, 245, 254] ccc => cc
Apply:  Pos: [241, 268] cc => I
Apply:  Pos: [253, 266] cc => I
Apply:  Pos: [263, 267] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 4], [16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [6, 2], [11, 18], [7, 17], [9, 19], [0, 3], [12, 10], [16, 5], [6, 4], [15, 19], [13, 11], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [0, 3], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 16], [8, 15], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [8, 15], [1, 14], [11, 14], [4, 5], [19, 14], [9, 3], [11, 18], [5, 1], [16, 0], [4, 5], [10, 13], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [6, 2], [7, 14], [4, 8], [14, 17], [12, 8], [15, 19], [16, 0], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [18, 7], [6, 2], [16, 5], [0, 3], [8, 15], [5, 3], [12, 15], [2, 8], [5, 9], [10, 13], [19, 14], [18, 7], [16, 0], [11, 18], [9, 19], [2, 15], [13, 18], [15, 19], [5, 9], [6, 2], [11, 18], [3, 1], [4, 8], [9, 1], [16, 5], [10, 11], [2, 8], [12, 15], [19, 17], [6, 4], [1, 14], [5, 1], [11, 18], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [6, 4], [4, 16], [2, 15], [1, 14], [10, 11], [11, 19], [10, 13], [5, 1], [16, 0], [15, 9], [11, 9], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [10, 13], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  5.329023361206055

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 14]
[11, 22]
[100, 111]
[129, 138]
[144, 157]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[64, 68, 70]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[120, 125, 132]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[10, 15, 20]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 14]
[11, 22]
[100, 111]
[129, 138]
[144, 157]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3278450965881348

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 14] cc => I, Pos: [0, 14] cc => I, Pos: [10, 15, 20] ccc => cc, Pos: [11, 22] cc => I, Pos: [11, 22] cc => I, Pos: [64, 68, 70] ccc => cc, Pos: [100, 111] cc => I, Pos: [100, 111] cc => I, Pos: [120, 125, 132] ccc => cc, Pos: [129, 138] cc => I, Pos: [129, 138] cc => I, Pos: [144, 157] cc => I, Pos: [144, 157] cc => I]

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 14] cc => I,
 Pos: [10, 15, 20] ccc => cc,
 Pos: [11, 22] cc => I,
 Pos: [64, 68, 70] ccc => cc,
 Pos: [100, 111] cc => I,
 Pos: [120, 125, 132] ccc => cc,
 Pos: [129, 138] cc => I,
 Pos: [144, 157] cc => I]
Change: 8, Saving: 9

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 14] cc => I
Apply:  Pos: [10, 15, 20] ccc => cc
Apply:  Pos: [11, 22] cc => I
Apply:  Pos: [64, 68, 70] ccc => cc
Apply:  Pos: [100, 111] cc => I
Apply:  Pos: [120, 125, 132] ccc => cc
Apply:  Pos: [129, 138] cc => I
Apply:  Pos: [144, 157] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [6, 2], [11, 18], [7, 17], [15, 9], [12, 10], [16, 5], [9, 19], [13, 11], [18, 7], [12, 8], [4, 16], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 15], [8, 16], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [8, 15], [11, 14], [1, 14], [4, 1], [19, 14], [9, 3], [11, 18], [5, 1], [16, 0], [10, 13], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [6, 2], [7, 14], [4, 8], [14, 17], [12, 8], [15, 19], [16, 0], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [8, 15], [5, 3], [12, 15], [2, 8], [5, 9], [10, 13], [19, 14], [16, 0], [11, 18], [9, 19], [2, 15], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [2, 8], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [4, 16], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [16, 0], [11, 9], [15, 9], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  3.3434691429138184

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[65, 91, 102]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.0312278270721436

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [65, 91, 102] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [65, 91, 102] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [65, 91, 102] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [6, 2], [11, 18], [7, 17], [15, 9], [12, 10], [16, 5], [9, 19], [13, 11], [18, 7], [12, 8], [4, 16], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 16], [8, 15], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [8, 15], [1, 14], [11, 14], [4, 1], [19, 14], [9, 3], [11, 18], [5, 1], [16, 0], [10, 18], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [6, 2], [7, 14], [4, 8], [14, 17], [12, 8], [15, 19], [16, 0], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [8, 15], [5, 3], [12, 15], [2, 8], [5, 9], [19, 14], [16, 0], [11, 18], [9, 19], [2, 15], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [2, 8], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [4, 16], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [16, 0], [15, 9], [11, 9], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  3.0312278270721436

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.0157241821289062

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [6, 2], [11, 18], [7, 17], [15, 9], [12, 10], [16, 5], [9, 19], [13, 11], [18, 7], [12, 8], [4, 16], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 15], [8, 16], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [8, 15], [11, 14], [1, 14], [4, 1], [19, 14], [9, 3], [11, 18], [5, 1], [16, 0], [10, 18], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [6, 2], [7, 14], [4, 8], [14, 17], [12, 8], [15, 19], [16, 0], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [8, 15], [5, 3], [12, 15], [2, 8], [5, 9], [19, 14], [16, 0], [11, 18], [9, 19], [2, 15], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [2, 8], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [4, 16], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [16, 0], [11, 9], [15, 9], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  3.0157241821289062

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [171] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 342

Reduced: 
 - size: 99 (36.67%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936784744262695

[6, 4], [16, 0], [7, 14], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [6, 2], [11, 18], [7, 17], [9, 19], [0, 3], [12, 10], [16, 5], [6, 2], [4, 16], [15, 19], [13, 11], [3, 1], [7, 14], [6, 2], [15, 19], [18, 7], [3, 1], [12, 8], [6, 4], [15, 9], [7, 14], [5, 1], [0, 3], [10, 11], [2, 8], [13, 18], [6, 2], [5, 3], [15, 19], [12, 8], [4, 16], [11, 9], [7, 14], [2, 12], [16, 5], [4, 8], [13, 18], [15, 19], [1, 14], [2, 8], [15, 19], [0, 3], [18, 7], [6, 4], [4, 8], [13, 11], [16, 0], [7, 17], [12, 10], [6, 2], [3, 1], [8, 5], [18, 7], [19, 17], [16, 0], [10, 11], [12, 15], [5, 3], [13, 18], [15, 9], [11, 19], [7, 14], [8, 16], [5, 1], [8, 15], [19, 14], [12, 10], [13, 18], [5, 1], [12, 8], [7, 14], [6, 4], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [6, 4], [19, 14], [8, 15], [0, 3], [1, 14], [11, 19], [4, 5], [6, 2], [12, 10], [0, 3], [19, 14], [8, 15], [9, 3], [11, 18], [5, 1], [16, 0], [11, 19], [6, 2], [8, 15], [5, 3], [10, 13], [7, 14], [15, 11], [16, 0], [10, 13], [19, 17], [4, 5], [11, 9], [5, 3], [1, 14], [8, 15], [6, 2], [9, 3], [19, 17], [2, 12], [16, 0], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [11, 9], [6, 2], [7, 14], [4, 8], [5, 3], [14, 17], [11, 9], [10, 13], [12, 8], [15, 19], [6, 4], [16, 0], [5, 3], [7, 17], [2, 15], [13, 18], [6, 4], [9, 3], [1, 14], [18, 7], [6, 2], [16, 5], [13, 11], [19, 17], [0, 3], [10, 18], [8, 15], [19, 17], [13, 11], [5, 3], [12, 15], [2, 8], [10, 18], [5, 9], [10, 13], [19, 14], [18, 7], [16, 0], [4, 8], [5, 3], [11, 18], [12, 10], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [4, 8], [5, 9], [19, 7], [6, 2], [11, 18], [3, 1], [4, 8], [12, 10], [9, 1], [16, 5], [10, 11], [2, 8], [12, 15], [19, 17], [6, 4], [1, 14], [5, 9], [2, 8], [11, 18], [19, 7], [16, 0], [6, 4], [14, 17], [5, 3], [6, 4], [12, 10], [2, 8], [16, 0], [7, 17], [2, 12], [5, 3], [15, 11], [9, 1], [7, 17], [6, 4], [5, 9], [16, 0], [2, 15], [12, 8], [1, 14], [10, 11], [7, 14], [11, 19], [10, 13], [5, 1], [4, 16], [15, 9], [7, 14], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [13, 18], [2, 15], [11, 19], [7, 17], [9, 19], [12, 8], [15, 11], [6, 2], [5, 1], [14, 17], [12, 15], [10, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [8, 16], [10, 13], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [12, 10], [18, 7], [19, 17], [8, 16], [12, 10], [6, 2], [11, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 15]
[2, 20]
[15, 21]
[17, 22]
[19, 24]
[22, 36]
[28, 40]
[33, 44]
[36, 45]
[45, 48]
[54, 62]
[66, 75]
[71, 76]
[79, 85]
[57, 92]
[74, 93]
[88, 94]
[87, 96]
[92, 102]
[96, 103]
[100, 108]
[105, 109]
[102, 116]
[110, 118]
[108, 120]
[128, 133]
[129, 135]
[109, 136]
[133, 141]
[139, 145]
[152, 156]
[151, 157]
[154, 161]
[158, 168]
[168, 173]
[167, 176]
[176, 182]
[170, 183]
[187, 193]
[178, 195]
[166, 196]
[190, 197]
[197, 200]
[193, 202]
[196, 203]
[199, 206]
[204, 209]
[200, 210]
[203, 212]
[217, 223]
[214, 239]
[253, 266]
[263, 267]
[241, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 55, 60]
[90, 95, 101]
[192, 208, 211]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[20, 23, 28]
[16, 26, 38]
[104, 111, 113]
[212, 221, 225]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[234, 245, 254]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 15]
[2, 20]
[15, 21]
[17, 22]
[19, 24]
[22, 36]
[28, 40]
[33, 44]
[36, 45]
[45, 48]
[54, 62]
[66, 75]
[71, 76]
[79, 85]
[57, 92]
[74, 93]
[88, 94]
[87, 96]
[92, 102]
[96, 103]
[100, 108]
[105, 109]
[102, 116]
[110, 118]
[108, 120]
[128, 133]
[129, 135]
[109, 136]
[133, 141]
[139, 145]
[152, 156]
[151, 157]
[154, 161]
[158, 168]
[168, 173]
[167, 176]
[176, 182]
[170, 183]
[187, 193]
[178, 195]
[166, 196]
[190, 197]
[197, 200]
[193, 202]
[196, 203]
[199, 206]
[204, 209]
[200, 210]
[203, 212]
[217, 223]
[214, 239]
[253, 266]
[263, 267]
[241, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.140142202377319

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 20] cc => I, Pos: [2, 20] cc => I, Pos: [8, 15] cc => I, Pos: [8, 15] cc => I, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [16, 26, 38] ccc => cc, Pos: [17, 22] cc => I, Pos: [17, 22] cc => I, Pos: [19, 24] cc => I, Pos: [19, 24] cc => I, Pos: [20, 23, 28] ccc => cc, Pos: [22, 36] cc => I, Pos: [22, 36] cc => I, Pos: [28, 40] cc => I, Pos: [28, 40] cc => I, Pos: [33, 44] cc => I, Pos: [33, 44] cc => I, Pos: [36, 45] cc => I, Pos: [36, 45] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [50, 55, 60] ccc => cc, Pos: [54, 62] cc => I, Pos: [54, 62] cc => I, Pos: [57, 92] cc => I, Pos: [57, 92] cc => I, Pos: [66, 75] cc => I, Pos: [66, 75] cc => I, Pos: [71, 76] cc => I, Pos: [71, 76] cc => I, Pos: [74, 93] cc => I, Pos: [74, 93] cc => I, Pos: [79, 85] cc => I, Pos: [79, 85] cc => I, Pos: [87, 96] cc => I, Pos: [87, 96] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [90, 95, 101] ccc => cc, Pos: [92, 102] cc => I, Pos: [92, 102] cc => I, Pos: [96, 103] cc => I, Pos: [96, 103] cc => I, Pos: [100, 108] cc => I, Pos: [100, 108] cc => I, Pos: [102, 116] cc => I, Pos: [102, 116] cc => I, Pos: [104, 111, 113] ccc => cc, Pos: [105, 109] cc => I, Pos: [105, 109] cc => I, Pos: [108, 120] cc => I, Pos: [108, 120] cc => I, Pos: [109, 136] cc => I, Pos: [109, 136] cc => I, Pos: [110, 118] cc => I, Pos: [110, 118] cc => I, Pos: [128, 133] cc => I, Pos: [128, 133] cc => I, Pos: [129, 135] cc => I, Pos: [129, 135] cc => I, Pos: [133, 141] cc => I, Pos: [133, 141] cc => I, Pos: [139, 145] cc => I, Pos: [139, 145] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [152, 156] cc => I, Pos: [152, 156] cc => I, Pos: [154, 161] cc => I, Pos: [154, 161] cc => I, Pos: [158, 168] cc => I, Pos: [158, 168] cc => I, Pos: [166, 196] cc => I, Pos: [166, 196] cc => I, Pos: [167, 176] cc => I, Pos: [167, 176] cc => I, Pos: [168, 173] cc => I, Pos: [168, 173] cc => I, Pos: [170, 183] cc => I, Pos: [170, 183] cc => I, Pos: [176, 182] cc => I, Pos: [176, 182] cc => I, Pos: [178, 195] cc => I, Pos: [178, 195] cc => I, Pos: [187, 193] cc => I, Pos: [187, 193] cc => I, Pos: [190, 197] cc => I, Pos: [190, 197] cc => I, Pos: [192, 208, 211] ccc => cc, Pos: [193, 202] cc => I, Pos: [193, 202] cc => I, Pos: [196, 203] cc => I, Pos: [196, 203] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [199, 206] cc => I, Pos: [199, 206] cc => I, Pos: [200, 210] cc => I, Pos: [200, 210] cc => I, Pos: [203, 212] cc => I, Pos: [203, 212] cc => I, Pos: [204, 209] cc => I, Pos: [204, 209] cc => I, Pos: [212, 221, 225] ccc => cc, Pos: [214, 239] cc => I, Pos: [214, 239] cc => I, Pos: [217, 223] cc => I, Pos: [217, 223] cc => I, Pos: [234, 245, 254] ccc => cc, Pos: [241, 268] cc => I, Pos: [241, 268] cc => I, Pos: [253, 266] cc => I, Pos: [253, 266] cc => I, Pos: [263, 267] cc => I, Pos: [263, 267] cc => I]

--------End Timer [Generate Plans]:  0.10937237739562988

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 23, 28] ccc => cc,
 Pos: [8, 15] cc => I,
 Pos: [16, 26, 38] ccc => cc,
 Pos: [17, 22] cc => I,
 Pos: [19, 24] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [50, 55, 60] ccc => cc,
 Pos: [54, 62] cc => I,
 Pos: [92, 102] cc => I,
 Pos: [66, 75] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 93] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [96, 103] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [90, 95, 101] ccc => cc,
 Pos: [108, 120] cc => I,
 Pos: [104, 111, 113] ccc => cc,
 Pos: [109, 136] cc => I,
 Pos: [110, 118] cc => I,
 Pos: [128, 133] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [139, 145] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [154, 161] cc => I,
 Pos: [168, 173] cc => I,
 Pos: [166, 196] cc => I,
 Pos: [176, 182] cc => I,
 Pos: [170, 183] cc => I,
 Pos: [178, 195] cc => I,
 Pos: [193, 202] cc => I,
 Pos: [190, 197] cc => I,
 Pos: [192, 208, 211] ccc => cc,
 Pos: [199, 206] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [203, 212] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [214, 239] cc => I,
 Pos: [217, 223] cc => I,
 Pos: [234, 245, 254] ccc => cc,
 Pos: [241, 268] cc => I,
 Pos: [253, 266] cc => I,
 Pos: [263, 267] cc => I]
Change: 45, Saving: 47

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 23, 28] ccc => cc
Apply:  Pos: [8, 15] cc => I
Apply:  Pos: [16, 26, 38] ccc => cc
Apply:  Pos: [17, 22] cc => I
Apply:  Pos: [19, 24] cc => I
Apply:  Pos: [33, 44] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [50, 55, 60] ccc => cc
Apply:  Pos: [54, 62] cc => I
Apply:  Pos: [92, 102] cc => I
Apply:  Pos: [66, 75] cc => I
Apply:  Pos: [71, 76] cc => I
Apply:  Pos: [74, 93] cc => I
Apply:  Pos: [79, 85] cc => I
Apply:  Pos: [96, 103] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [90, 95, 101] ccc => cc
Apply:  Pos: [108, 120] cc => I
Apply:  Pos: [104, 111, 113] ccc => cc
Apply:  Pos: [109, 136] cc => I
Apply:  Pos: [110, 118] cc => I
Apply:  Pos: [128, 133] cc => I
Apply:  Pos: [129, 135] cc => I
Apply:  Pos: [139, 145] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [152, 156] cc => I
Apply:  Pos: [154, 161] cc => I
Apply:  Pos: [168, 173] cc => I
Apply:  Pos: [166, 196] cc => I
Apply:  Pos: [176, 182] cc => I
Apply:  Pos: [170, 183] cc => I
Apply:  Pos: [178, 195] cc => I
Apply:  Pos: [193, 202] cc => I
Apply:  Pos: [190, 197] cc => I
Apply:  Pos: [192, 208, 211] ccc => cc
Apply:  Pos: [199, 206] cc => I
Apply:  Pos: [200, 210] cc => I
Apply:  Pos: [203, 212] cc => I
Apply:  Pos: [204, 209] cc => I
Apply:  Pos: [214, 239] cc => I
Apply:  Pos: [217, 223] cc => I
Apply:  Pos: [234, 245, 254] ccc => cc
Apply:  Pos: [241, 268] cc => I
Apply:  Pos: [253, 266] cc => I
Apply:  Pos: [263, 267] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 4], [16, 0], [7, 14], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [0, 3], [12, 10], [16, 5], [6, 4], [13, 11], [18, 7], [6, 2], [7, 14], [12, 8], [4, 16], [15, 9], [5, 1], [0, 3], [10, 11], [2, 8], [6, 2], [5, 3], [15, 19], [12, 8], [11, 9], [7, 14], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [6, 2], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 16], [8, 15], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [8, 15], [1, 14], [11, 14], [4, 5], [19, 14], [9, 3], [11, 18], [5, 1], [16, 0], [4, 5], [10, 13], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [6, 2], [9, 3], [2, 12], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [12, 8], [15, 19], [16, 0], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [18, 7], [6, 2], [16, 5], [0, 3], [8, 15], [5, 3], [12, 15], [2, 8], [5, 9], [10, 13], [19, 14], [18, 7], [4, 8], [11, 18], [9, 19], [2, 15], [13, 18], [15, 19], [5, 9], [6, 2], [11, 18], [3, 1], [9, 1], [16, 5], [10, 11], [2, 8], [12, 15], [19, 17], [1, 14], [5, 1], [11, 18], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [10, 13], [5, 1], [4, 16], [15, 9], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [10, 13], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  5.249514579772949

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 14]
[11, 23]
[18, 31]
[44, 82]
[105, 116]
[145, 159]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[68, 72, 74]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[125, 129, 135]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 14]
[11, 23]
[18, 31]
[44, 82]
[105, 116]
[145, 159]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3321712017059326

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 14] cc => I, Pos: [0, 14] cc => I, Pos: [11, 23] cc => I, Pos: [11, 23] cc => I, Pos: [18, 31] cc => I, Pos: [18, 31] cc => I, Pos: [44, 82] cc => I, Pos: [44, 82] cc => I, Pos: [68, 72, 74] ccc => cc, Pos: [105, 116] cc => I, Pos: [105, 116] cc => I, Pos: [125, 129, 135] ccc => cc, Pos: [145, 159] cc => I, Pos: [145, 159] cc => I]

--------End Timer [Generate Plans]:  0.03188943862915039

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 14] cc => I,
 Pos: [11, 23] cc => I,
 Pos: [18, 31] cc => I,
 Pos: [44, 82] cc => I,
 Pos: [68, 72, 74] ccc => cc,
 Pos: [105, 116] cc => I,
 Pos: [125, 129, 135] ccc => cc,
 Pos: [145, 159] cc => I]
Change: 8, Saving: 9

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 14] cc => I
Apply:  Pos: [11, 23] cc => I
Apply:  Pos: [18, 31] cc => I
Apply:  Pos: [44, 82] cc => I
Apply:  Pos: [68, 72, 74] ccc => cc
Apply:  Pos: [105, 116] cc => I
Apply:  Pos: [125, 129, 135] ccc => cc
Apply:  Pos: [145, 159] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [7, 14], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [12, 10], [16, 5], [13, 11], [18, 7], [6, 2], [12, 8], [4, 16], [15, 9], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [15, 19], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 15], [8, 16], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [8, 15], [11, 14], [1, 14], [4, 1], [19, 14], [9, 3], [11, 18], [5, 1], [16, 0], [10, 13], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [12, 8], [15, 19], [16, 0], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [8, 15], [5, 3], [12, 15], [2, 8], [5, 9], [10, 13], [19, 14], [4, 8], [11, 18], [9, 19], [2, 15], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [9, 1], [3, 1], [16, 5], [11, 18], [2, 8], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [11, 9], [15, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  3.364060640335083

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[67, 93, 104]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.0308783054351807

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [67, 93, 104] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [67, 93, 104] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [67, 93, 104] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [7, 14], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [12, 10], [16, 5], [13, 11], [18, 7], [6, 2], [12, 8], [4, 16], [15, 9], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [15, 19], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 16], [8, 15], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [8, 15], [1, 14], [11, 14], [4, 1], [19, 14], [9, 3], [11, 18], [5, 1], [16, 0], [10, 18], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [12, 8], [15, 19], [16, 0], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [8, 15], [5, 3], [12, 15], [2, 8], [5, 9], [19, 14], [4, 8], [11, 18], [9, 19], [2, 15], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [9, 1], [16, 5], [11, 18], [2, 8], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [15, 9], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  3.0308783054351807

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.980091094970703

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [7, 14], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [12, 10], [16, 5], [13, 11], [18, 7], [6, 2], [12, 8], [4, 16], [15, 9], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [15, 19], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 15], [8, 16], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [8, 15], [11, 14], [1, 14], [4, 1], [19, 14], [9, 3], [11, 18], [5, 1], [16, 0], [10, 18], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [12, 8], [15, 19], [16, 0], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [8, 15], [5, 3], [12, 15], [2, 8], [5, 9], [19, 14], [4, 8], [11, 18], [9, 19], [2, 15], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [9, 1], [3, 1], [16, 5], [11, 18], [2, 8], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [11, 9], [15, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  2.980091094970703

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [172] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 41 - (small)
 - circuit cycle: 344

Reduced: 
 - size: 98 (36.30%)
 - depth: 4 (8.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936808586120605

[6, 4], [16, 0], [7, 14], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [6, 2], [11, 18], [7, 17], [9, 19], [0, 3], [12, 10], [16, 5], [6, 2], [4, 16], [15, 19], [13, 11], [3, 1], [7, 14], [6, 2], [15, 19], [18, 7], [3, 1], [12, 8], [6, 4], [15, 9], [7, 14], [5, 1], [0, 3], [10, 11], [2, 8], [13, 18], [6, 2], [5, 3], [15, 19], [12, 8], [4, 16], [11, 9], [7, 14], [2, 12], [16, 5], [4, 8], [13, 18], [15, 19], [1, 14], [2, 8], [15, 19], [0, 3], [18, 7], [6, 4], [4, 8], [13, 11], [16, 0], [7, 17], [12, 10], [6, 2], [3, 1], [8, 5], [18, 7], [19, 17], [16, 0], [10, 11], [12, 15], [5, 3], [13, 18], [15, 9], [11, 19], [7, 14], [8, 16], [5, 1], [8, 15], [19, 14], [12, 10], [13, 18], [5, 1], [12, 8], [7, 14], [6, 4], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [6, 4], [19, 14], [8, 15], [0, 3], [1, 14], [11, 19], [4, 5], [6, 2], [12, 10], [0, 3], [19, 14], [8, 15], [9, 3], [11, 18], [5, 1], [16, 0], [11, 19], [6, 2], [8, 15], [5, 3], [10, 13], [7, 14], [15, 11], [16, 0], [10, 13], [19, 17], [4, 5], [11, 9], [5, 3], [1, 14], [8, 15], [6, 2], [9, 3], [19, 17], [2, 12], [16, 0], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [11, 9], [6, 2], [7, 14], [4, 8], [5, 3], [14, 17], [11, 9], [10, 13], [12, 8], [15, 19], [6, 4], [16, 0], [5, 3], [7, 17], [2, 15], [13, 18], [6, 4], [9, 3], [1, 14], [18, 7], [6, 2], [16, 5], [13, 11], [19, 17], [0, 3], [10, 18], [8, 15], [19, 17], [13, 11], [5, 3], [12, 15], [2, 8], [10, 18], [5, 9], [10, 13], [19, 14], [18, 7], [16, 0], [4, 8], [5, 3], [11, 18], [12, 10], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [4, 8], [5, 9], [19, 7], [6, 2], [11, 18], [3, 1], [4, 8], [12, 10], [9, 1], [16, 5], [10, 11], [2, 8], [12, 15], [19, 17], [6, 4], [1, 14], [5, 9], [2, 8], [11, 18], [19, 7], [16, 0], [6, 4], [14, 17], [5, 3], [6, 4], [12, 10], [2, 8], [16, 0], [7, 17], [2, 12], [5, 3], [15, 11], [9, 1], [7, 17], [6, 4], [5, 9], [16, 0], [2, 15], [12, 8], [1, 14], [10, 11], [7, 14], [11, 19], [10, 13], [5, 1], [4, 16], [15, 9], [7, 14], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [13, 18], [2, 15], [11, 19], [7, 17], [9, 19], [12, 8], [15, 11], [6, 2], [5, 1], [14, 17], [12, 15], [10, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [8, 16], [10, 13], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [12, 10], [18, 7], [19, 17], [8, 16], [12, 10], [6, 2], [11, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 15]
[2, 20]
[15, 21]
[17, 22]
[19, 24]
[22, 36]
[28, 40]
[33, 44]
[36, 45]
[45, 48]
[54, 62]
[66, 75]
[71, 76]
[79, 85]
[57, 92]
[74, 93]
[88, 94]
[87, 96]
[92, 102]
[96, 103]
[100, 108]
[105, 109]
[102, 116]
[110, 118]
[108, 120]
[128, 133]
[129, 135]
[109, 136]
[133, 141]
[139, 145]
[152, 156]
[151, 157]
[154, 161]
[158, 168]
[168, 173]
[167, 176]
[176, 182]
[170, 183]
[187, 193]
[178, 195]
[166, 196]
[190, 197]
[197, 200]
[193, 202]
[196, 203]
[199, 206]
[204, 209]
[200, 210]
[203, 212]
[217, 223]
[214, 239]
[253, 266]
[263, 267]
[241, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 55, 60]
[90, 95, 101]
[192, 208, 211]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[20, 23, 28]
[16, 26, 38]
[104, 111, 113]
[212, 221, 225]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[234, 245, 254]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 15]
[2, 20]
[15, 21]
[17, 22]
[19, 24]
[22, 36]
[28, 40]
[33, 44]
[36, 45]
[45, 48]
[54, 62]
[66, 75]
[71, 76]
[79, 85]
[57, 92]
[74, 93]
[88, 94]
[87, 96]
[92, 102]
[96, 103]
[100, 108]
[105, 109]
[102, 116]
[110, 118]
[108, 120]
[128, 133]
[129, 135]
[109, 136]
[133, 141]
[139, 145]
[152, 156]
[151, 157]
[154, 161]
[158, 168]
[168, 173]
[167, 176]
[176, 182]
[170, 183]
[187, 193]
[178, 195]
[166, 196]
[190, 197]
[197, 200]
[193, 202]
[196, 203]
[199, 206]
[204, 209]
[200, 210]
[203, 212]
[217, 223]
[214, 239]
[253, 266]
[263, 267]
[241, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.297418117523193

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 20] cc => I, Pos: [2, 20] cc => I, Pos: [8, 15] cc => I, Pos: [8, 15] cc => I, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [16, 26, 38] ccc => cc, Pos: [17, 22] cc => I, Pos: [17, 22] cc => I, Pos: [19, 24] cc => I, Pos: [19, 24] cc => I, Pos: [20, 23, 28] ccc => cc, Pos: [22, 36] cc => I, Pos: [22, 36] cc => I, Pos: [28, 40] cc => I, Pos: [28, 40] cc => I, Pos: [33, 44] cc => I, Pos: [33, 44] cc => I, Pos: [36, 45] cc => I, Pos: [36, 45] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [50, 55, 60] ccc => cc, Pos: [54, 62] cc => I, Pos: [54, 62] cc => I, Pos: [57, 92] cc => I, Pos: [57, 92] cc => I, Pos: [66, 75] cc => I, Pos: [66, 75] cc => I, Pos: [71, 76] cc => I, Pos: [71, 76] cc => I, Pos: [74, 93] cc => I, Pos: [74, 93] cc => I, Pos: [79, 85] cc => I, Pos: [79, 85] cc => I, Pos: [87, 96] cc => I, Pos: [87, 96] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [90, 95, 101] ccc => cc, Pos: [92, 102] cc => I, Pos: [92, 102] cc => I, Pos: [96, 103] cc => I, Pos: [96, 103] cc => I, Pos: [100, 108] cc => I, Pos: [100, 108] cc => I, Pos: [102, 116] cc => I, Pos: [102, 116] cc => I, Pos: [104, 111, 113] ccc => cc, Pos: [105, 109] cc => I, Pos: [105, 109] cc => I, Pos: [108, 120] cc => I, Pos: [108, 120] cc => I, Pos: [109, 136] cc => I, Pos: [109, 136] cc => I, Pos: [110, 118] cc => I, Pos: [110, 118] cc => I, Pos: [128, 133] cc => I, Pos: [128, 133] cc => I, Pos: [129, 135] cc => I, Pos: [129, 135] cc => I, Pos: [133, 141] cc => I, Pos: [133, 141] cc => I, Pos: [139, 145] cc => I, Pos: [139, 145] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [152, 156] cc => I, Pos: [152, 156] cc => I, Pos: [154, 161] cc => I, Pos: [154, 161] cc => I, Pos: [158, 168] cc => I, Pos: [158, 168] cc => I, Pos: [166, 196] cc => I, Pos: [166, 196] cc => I, Pos: [167, 176] cc => I, Pos: [167, 176] cc => I, Pos: [168, 173] cc => I, Pos: [168, 173] cc => I, Pos: [170, 183] cc => I, Pos: [170, 183] cc => I, Pos: [176, 182] cc => I, Pos: [176, 182] cc => I, Pos: [178, 195] cc => I, Pos: [178, 195] cc => I, Pos: [187, 193] cc => I, Pos: [187, 193] cc => I, Pos: [190, 197] cc => I, Pos: [190, 197] cc => I, Pos: [192, 208, 211] ccc => cc, Pos: [193, 202] cc => I, Pos: [193, 202] cc => I, Pos: [196, 203] cc => I, Pos: [196, 203] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [199, 206] cc => I, Pos: [199, 206] cc => I, Pos: [200, 210] cc => I, Pos: [200, 210] cc => I, Pos: [203, 212] cc => I, Pos: [203, 212] cc => I, Pos: [204, 209] cc => I, Pos: [204, 209] cc => I, Pos: [212, 221, 225] ccc => cc, Pos: [214, 239] cc => I, Pos: [214, 239] cc => I, Pos: [217, 223] cc => I, Pos: [217, 223] cc => I, Pos: [234, 245, 254] ccc => cc, Pos: [241, 268] cc => I, Pos: [241, 268] cc => I, Pos: [253, 266] cc => I, Pos: [253, 266] cc => I, Pos: [263, 267] cc => I, Pos: [263, 267] cc => I]

--------End Timer [Generate Plans]:  0.12498998641967773

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 20] cc => I,
 Pos: [8, 15] cc => I,
 Pos: [16, 26, 38] ccc => cc,
 Pos: [17, 22] cc => I,
 Pos: [19, 24] cc => I,
 Pos: [28, 40] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [50, 55, 60] ccc => cc,
 Pos: [54, 62] cc => I,
 Pos: [92, 102] cc => I,
 Pos: [66, 75] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 93] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [96, 103] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [90, 95, 101] ccc => cc,
 Pos: [108, 120] cc => I,
 Pos: [104, 111, 113] ccc => cc,
 Pos: [109, 136] cc => I,
 Pos: [110, 118] cc => I,
 Pos: [133, 141] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [139, 145] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [154, 161] cc => I,
 Pos: [168, 173] cc => I,
 Pos: [166, 196] cc => I,
 Pos: [167, 176] cc => I,
 Pos: [170, 183] cc => I,
 Pos: [178, 195] cc => I,
 Pos: [187, 193] cc => I,
 Pos: [190, 197] cc => I,
 Pos: [192, 208, 211] ccc => cc,
 Pos: [199, 206] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [212, 221, 225] ccc => cc,
 Pos: [204, 209] cc => I,
 Pos: [214, 239] cc => I,
 Pos: [217, 223] cc => I,
 Pos: [234, 245, 254] ccc => cc,
 Pos: [241, 268] cc => I,
 Pos: [253, 266] cc => I,
 Pos: [263, 267] cc => I]
Change: 46, Saving: 48

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 20] cc => I
Apply:  Pos: [8, 15] cc => I
Apply:  Pos: [16, 26, 38] ccc => cc
Apply:  Pos: [17, 22] cc => I
Apply:  Pos: [19, 24] cc => I
Apply:  Pos: [28, 40] cc => I
Apply:  Pos: [33, 44] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [50, 55, 60] ccc => cc
Apply:  Pos: [54, 62] cc => I
Apply:  Pos: [92, 102] cc => I
Apply:  Pos: [66, 75] cc => I
Apply:  Pos: [71, 76] cc => I
Apply:  Pos: [74, 93] cc => I
Apply:  Pos: [79, 85] cc => I
Apply:  Pos: [96, 103] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [90, 95, 101] ccc => cc
Apply:  Pos: [108, 120] cc => I
Apply:  Pos: [104, 111, 113] ccc => cc
Apply:  Pos: [109, 136] cc => I
Apply:  Pos: [110, 118] cc => I
Apply:  Pos: [133, 141] cc => I
Apply:  Pos: [129, 135] cc => I
Apply:  Pos: [139, 145] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [152, 156] cc => I
Apply:  Pos: [154, 161] cc => I
Apply:  Pos: [168, 173] cc => I
Apply:  Pos: [166, 196] cc => I
Apply:  Pos: [167, 176] cc => I
Apply:  Pos: [170, 183] cc => I
Apply:  Pos: [178, 195] cc => I
Apply:  Pos: [187, 193] cc => I
Apply:  Pos: [190, 197] cc => I
Apply:  Pos: [192, 208, 211] ccc => cc
Apply:  Pos: [199, 206] cc => I
Apply:  Pos: [200, 210] cc => I
Apply:  Pos: [212, 221, 225] ccc => cc
Apply:  Pos: [204, 209] cc => I
Apply:  Pos: [214, 239] cc => I
Apply:  Pos: [217, 223] cc => I
Apply:  Pos: [234, 245, 254] ccc => cc
Apply:  Pos: [241, 268] cc => I
Apply:  Pos: [253, 266] cc => I
Apply:  Pos: [263, 267] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 4], [16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [0, 3], [12, 10], [16, 5], [6, 4], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [0, 3], [10, 11], [2, 8], [6, 2], [5, 3], [15, 19], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [6, 2], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 16], [8, 15], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [8, 15], [1, 14], [11, 14], [4, 5], [19, 14], [9, 3], [11, 18], [5, 1], [16, 0], [4, 5], [10, 13], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [6, 2], [9, 3], [2, 12], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [6, 2], [7, 14], [4, 8], [14, 17], [12, 8], [15, 19], [16, 0], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [18, 7], [6, 2], [16, 5], [0, 3], [8, 15], [5, 3], [12, 15], [2, 8], [5, 9], [10, 13], [19, 14], [18, 7], [11, 18], [9, 19], [2, 15], [13, 18], [15, 19], [5, 9], [6, 2], [11, 18], [3, 1], [4, 8], [9, 1], [16, 5], [10, 11], [12, 15], [19, 17], [1, 14], [5, 1], [11, 18], [14, 17], [12, 10], [2, 8], [16, 0], [2, 12], [15, 11], [9, 1], [4, 16], [2, 15], [1, 14], [10, 11], [11, 19], [10, 13], [5, 1], [16, 0], [15, 9], [11, 9], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [10, 13], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  5.422408103942871

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 13]
[10, 21]
[41, 79]
[102, 113]
[144, 157]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[65, 69, 71]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[121, 126, 131]
[135, 139, 146]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 13]
[10, 21]
[41, 79]
[102, 113]
[144, 157]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3908073902130127

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 13] cc => I, Pos: [0, 13] cc => I, Pos: [10, 21] cc => I, Pos: [10, 21] cc => I, Pos: [41, 79] cc => I, Pos: [41, 79] cc => I, Pos: [65, 69, 71] ccc => cc, Pos: [102, 113] cc => I, Pos: [102, 113] cc => I, Pos: [121, 126, 131] ccc => cc, Pos: [135, 139, 146] ccc => cc, Pos: [144, 157] cc => I, Pos: [144, 157] cc => I]

--------End Timer [Generate Plans]:  0.015611648559570312

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 13] cc => I,
 Pos: [10, 21] cc => I,
 Pos: [41, 79] cc => I,
 Pos: [65, 69, 71] ccc => cc,
 Pos: [102, 113] cc => I,
 Pos: [121, 126, 131] ccc => cc,
 Pos: [135, 139, 146] ccc => cc,
 Pos: [144, 157] cc => I]
Change: 8, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 13] cc => I
Apply:  Pos: [10, 21] cc => I
Apply:  Pos: [41, 79] cc => I
Apply:  Pos: [65, 69, 71] ccc => cc
Apply:  Pos: [102, 113] cc => I
Apply:  Pos: [121, 126, 131] ccc => cc
Apply:  Pos: [135, 139, 146] ccc => cc
Apply:  Pos: [144, 157] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [12, 10], [16, 5], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [15, 19], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 15], [8, 16], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [8, 15], [11, 14], [1, 14], [4, 1], [19, 14], [9, 3], [11, 18], [5, 1], [16, 0], [10, 13], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [6, 2], [7, 14], [4, 8], [14, 17], [12, 8], [15, 19], [16, 0], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [8, 15], [5, 3], [12, 15], [2, 8], [5, 9], [10, 13], [19, 14], [11, 18], [9, 19], [2, 15], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 8], [4, 16], [2, 12], [15, 11], [9, 1], [16, 0], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [11, 9], [15, 9], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  3.406419038772583

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[66, 92, 103]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.0782835483551025

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [66, 92, 103] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [66, 92, 103] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [66, 92, 103] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [12, 10], [16, 5], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [15, 19], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 16], [8, 15], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [8, 15], [1, 14], [11, 14], [4, 1], [19, 14], [9, 3], [11, 18], [5, 1], [16, 0], [10, 18], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [6, 2], [7, 14], [4, 8], [14, 17], [12, 8], [15, 19], [16, 0], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [8, 15], [5, 3], [12, 15], [2, 8], [5, 9], [19, 14], [11, 18], [9, 19], [2, 15], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 8], [4, 16], [2, 12], [15, 11], [9, 1], [16, 0], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [15, 9], [11, 9], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  3.0782835483551025

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.0315115451812744

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [12, 10], [16, 5], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [15, 19], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 15], [8, 16], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [8, 15], [11, 14], [1, 14], [4, 1], [19, 14], [9, 3], [11, 18], [5, 1], [16, 0], [10, 18], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [6, 2], [7, 14], [4, 8], [14, 17], [12, 8], [15, 19], [16, 0], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [8, 15], [5, 3], [12, 15], [2, 8], [5, 9], [19, 14], [11, 18], [9, 19], [2, 15], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 8], [4, 16], [2, 12], [15, 11], [9, 1], [16, 0], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [11, 9], [15, 9], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  3.0315115451812744

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [171] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 342

Reduced: 
 - size: 99 (36.67%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09402155876159668

[6, 4], [16, 0], [7, 14], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [6, 2], [11, 18], [7, 17], [9, 19], [0, 3], [12, 10], [16, 5], [6, 2], [4, 16], [15, 19], [13, 11], [3, 1], [7, 14], [6, 2], [15, 19], [18, 7], [3, 1], [12, 8], [6, 4], [15, 9], [7, 14], [5, 1], [0, 3], [10, 11], [2, 8], [13, 18], [6, 2], [5, 3], [15, 19], [12, 8], [4, 16], [11, 9], [7, 14], [2, 12], [16, 5], [4, 8], [13, 18], [15, 19], [1, 14], [2, 8], [15, 19], [0, 3], [18, 7], [6, 4], [4, 8], [13, 11], [16, 0], [7, 17], [12, 10], [6, 2], [3, 1], [8, 5], [18, 7], [19, 17], [16, 0], [10, 11], [12, 15], [5, 3], [13, 18], [15, 9], [11, 19], [7, 14], [8, 16], [5, 1], [8, 15], [19, 14], [12, 10], [13, 18], [5, 1], [12, 8], [7, 14], [6, 4], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [6, 4], [19, 14], [8, 15], [0, 3], [1, 14], [11, 19], [4, 5], [6, 2], [12, 10], [0, 3], [19, 14], [8, 15], [9, 3], [11, 18], [5, 1], [16, 0], [11, 19], [6, 2], [8, 15], [5, 3], [10, 13], [7, 14], [15, 11], [16, 0], [10, 13], [19, 17], [4, 5], [11, 9], [5, 3], [1, 14], [8, 15], [6, 2], [9, 3], [19, 17], [2, 12], [16, 0], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [11, 9], [6, 2], [7, 14], [4, 8], [5, 3], [14, 17], [11, 9], [10, 13], [12, 8], [15, 19], [6, 4], [16, 0], [5, 3], [7, 17], [2, 15], [13, 18], [6, 4], [9, 3], [1, 14], [18, 7], [6, 2], [16, 5], [13, 11], [19, 17], [0, 3], [10, 18], [8, 15], [19, 17], [13, 11], [5, 3], [12, 15], [2, 8], [10, 18], [5, 9], [10, 13], [19, 14], [18, 7], [16, 0], [4, 8], [5, 3], [11, 18], [12, 10], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [4, 8], [5, 9], [19, 7], [6, 2], [11, 18], [3, 1], [4, 8], [12, 10], [9, 1], [16, 5], [10, 11], [2, 8], [12, 15], [19, 17], [6, 4], [1, 14], [5, 9], [2, 8], [11, 18], [19, 7], [16, 0], [6, 4], [14, 17], [5, 3], [6, 4], [12, 10], [2, 8], [16, 0], [7, 17], [2, 12], [5, 3], [15, 11], [9, 1], [7, 17], [6, 4], [5, 9], [16, 0], [2, 15], [12, 8], [1, 14], [10, 11], [7, 14], [11, 19], [10, 13], [5, 1], [4, 16], [15, 9], [7, 14], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [13, 18], [2, 15], [11, 19], [7, 17], [9, 19], [12, 8], [15, 11], [6, 2], [5, 1], [14, 17], [12, 15], [10, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [8, 16], [10, 13], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [12, 10], [18, 7], [19, 17], [8, 16], [12, 10], [6, 2], [11, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 15]
[2, 20]
[15, 21]
[17, 22]
[19, 24]
[22, 36]
[28, 40]
[33, 44]
[36, 45]
[45, 48]
[54, 62]
[66, 75]
[71, 76]
[79, 85]
[57, 92]
[74, 93]
[88, 94]
[87, 96]
[92, 102]
[96, 103]
[100, 108]
[105, 109]
[102, 116]
[110, 118]
[108, 120]
[128, 133]
[129, 135]
[109, 136]
[133, 141]
[139, 145]
[152, 156]
[151, 157]
[154, 161]
[158, 168]
[168, 173]
[167, 176]
[176, 182]
[170, 183]
[187, 193]
[178, 195]
[166, 196]
[190, 197]
[197, 200]
[193, 202]
[196, 203]
[199, 206]
[204, 209]
[200, 210]
[203, 212]
[217, 223]
[214, 239]
[253, 266]
[263, 267]
[241, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 55, 60]
[90, 95, 101]
[192, 208, 211]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[20, 23, 28]
[16, 26, 38]
[104, 111, 113]
[212, 221, 225]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[234, 245, 254]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 15]
[2, 20]
[15, 21]
[17, 22]
[19, 24]
[22, 36]
[28, 40]
[33, 44]
[36, 45]
[45, 48]
[54, 62]
[66, 75]
[71, 76]
[79, 85]
[57, 92]
[74, 93]
[88, 94]
[87, 96]
[92, 102]
[96, 103]
[100, 108]
[105, 109]
[102, 116]
[110, 118]
[108, 120]
[128, 133]
[129, 135]
[109, 136]
[133, 141]
[139, 145]
[152, 156]
[151, 157]
[154, 161]
[158, 168]
[168, 173]
[167, 176]
[176, 182]
[170, 183]
[187, 193]
[178, 195]
[166, 196]
[190, 197]
[197, 200]
[193, 202]
[196, 203]
[199, 206]
[204, 209]
[200, 210]
[203, 212]
[217, 223]
[214, 239]
[253, 266]
[263, 267]
[241, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.218547582626343

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 20] cc => I, Pos: [2, 20] cc => I, Pos: [8, 15] cc => I, Pos: [8, 15] cc => I, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [16, 26, 38] ccc => cc, Pos: [17, 22] cc => I, Pos: [17, 22] cc => I, Pos: [19, 24] cc => I, Pos: [19, 24] cc => I, Pos: [20, 23, 28] ccc => cc, Pos: [22, 36] cc => I, Pos: [22, 36] cc => I, Pos: [28, 40] cc => I, Pos: [28, 40] cc => I, Pos: [33, 44] cc => I, Pos: [33, 44] cc => I, Pos: [36, 45] cc => I, Pos: [36, 45] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [50, 55, 60] ccc => cc, Pos: [54, 62] cc => I, Pos: [54, 62] cc => I, Pos: [57, 92] cc => I, Pos: [57, 92] cc => I, Pos: [66, 75] cc => I, Pos: [66, 75] cc => I, Pos: [71, 76] cc => I, Pos: [71, 76] cc => I, Pos: [74, 93] cc => I, Pos: [74, 93] cc => I, Pos: [79, 85] cc => I, Pos: [79, 85] cc => I, Pos: [87, 96] cc => I, Pos: [87, 96] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [90, 95, 101] ccc => cc, Pos: [92, 102] cc => I, Pos: [92, 102] cc => I, Pos: [96, 103] cc => I, Pos: [96, 103] cc => I, Pos: [100, 108] cc => I, Pos: [100, 108] cc => I, Pos: [102, 116] cc => I, Pos: [102, 116] cc => I, Pos: [104, 111, 113] ccc => cc, Pos: [105, 109] cc => I, Pos: [105, 109] cc => I, Pos: [108, 120] cc => I, Pos: [108, 120] cc => I, Pos: [109, 136] cc => I, Pos: [109, 136] cc => I, Pos: [110, 118] cc => I, Pos: [110, 118] cc => I, Pos: [128, 133] cc => I, Pos: [128, 133] cc => I, Pos: [129, 135] cc => I, Pos: [129, 135] cc => I, Pos: [133, 141] cc => I, Pos: [133, 141] cc => I, Pos: [139, 145] cc => I, Pos: [139, 145] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [152, 156] cc => I, Pos: [152, 156] cc => I, Pos: [154, 161] cc => I, Pos: [154, 161] cc => I, Pos: [158, 168] cc => I, Pos: [158, 168] cc => I, Pos: [166, 196] cc => I, Pos: [166, 196] cc => I, Pos: [167, 176] cc => I, Pos: [167, 176] cc => I, Pos: [168, 173] cc => I, Pos: [168, 173] cc => I, Pos: [170, 183] cc => I, Pos: [170, 183] cc => I, Pos: [176, 182] cc => I, Pos: [176, 182] cc => I, Pos: [178, 195] cc => I, Pos: [178, 195] cc => I, Pos: [187, 193] cc => I, Pos: [187, 193] cc => I, Pos: [190, 197] cc => I, Pos: [190, 197] cc => I, Pos: [192, 208, 211] ccc => cc, Pos: [193, 202] cc => I, Pos: [193, 202] cc => I, Pos: [196, 203] cc => I, Pos: [196, 203] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [199, 206] cc => I, Pos: [199, 206] cc => I, Pos: [200, 210] cc => I, Pos: [200, 210] cc => I, Pos: [203, 212] cc => I, Pos: [203, 212] cc => I, Pos: [204, 209] cc => I, Pos: [204, 209] cc => I, Pos: [212, 221, 225] ccc => cc, Pos: [214, 239] cc => I, Pos: [214, 239] cc => I, Pos: [217, 223] cc => I, Pos: [217, 223] cc => I, Pos: [234, 245, 254] ccc => cc, Pos: [241, 268] cc => I, Pos: [241, 268] cc => I, Pos: [253, 266] cc => I, Pos: [253, 266] cc => I, Pos: [263, 267] cc => I, Pos: [263, 267] cc => I]

--------End Timer [Generate Plans]:  0.12512779235839844

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 20] cc => I,
 Pos: [8, 15] cc => I,
 Pos: [16, 26, 38] ccc => cc,
 Pos: [22, 36] cc => I,
 Pos: [19, 24] cc => I,
 Pos: [28, 40] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [50, 55, 60] ccc => cc,
 Pos: [54, 62] cc => I,
 Pos: [92, 102] cc => I,
 Pos: [66, 75] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 93] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [87, 96] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [90, 95, 101] ccc => cc,
 Pos: [100, 108] cc => I,
 Pos: [104, 111, 113] ccc => cc,
 Pos: [105, 109] cc => I,
 Pos: [110, 118] cc => I,
 Pos: [133, 141] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [139, 145] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [154, 161] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [166, 196] cc => I,
 Pos: [176, 182] cc => I,
 Pos: [170, 183] cc => I,
 Pos: [178, 195] cc => I,
 Pos: [193, 202] cc => I,
 Pos: [197, 200] cc => I,
 Pos: [192, 208, 211] ccc => cc,
 Pos: [199, 206] cc => I,
 Pos: [203, 212] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [214, 239] cc => I,
 Pos: [217, 223] cc => I,
 Pos: [234, 245, 254] ccc => cc,
 Pos: [241, 268] cc => I,
 Pos: [253, 266] cc => I,
 Pos: [263, 267] cc => I]
Change: 45, Saving: 47

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 20] cc => I
Apply:  Pos: [8, 15] cc => I
Apply:  Pos: [16, 26, 38] ccc => cc
Apply:  Pos: [22, 36] cc => I
Apply:  Pos: [19, 24] cc => I
Apply:  Pos: [28, 40] cc => I
Apply:  Pos: [33, 44] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [50, 55, 60] ccc => cc
Apply:  Pos: [54, 62] cc => I
Apply:  Pos: [92, 102] cc => I
Apply:  Pos: [66, 75] cc => I
Apply:  Pos: [71, 76] cc => I
Apply:  Pos: [74, 93] cc => I
Apply:  Pos: [79, 85] cc => I
Apply:  Pos: [87, 96] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [90, 95, 101] ccc => cc
Apply:  Pos: [100, 108] cc => I
Apply:  Pos: [104, 111, 113] ccc => cc
Apply:  Pos: [105, 109] cc => I
Apply:  Pos: [110, 118] cc => I
Apply:  Pos: [133, 141] cc => I
Apply:  Pos: [129, 135] cc => I
Apply:  Pos: [139, 145] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [152, 156] cc => I
Apply:  Pos: [154, 161] cc => I
Apply:  Pos: [158, 168] cc => I
Apply:  Pos: [166, 196] cc => I
Apply:  Pos: [176, 182] cc => I
Apply:  Pos: [170, 183] cc => I
Apply:  Pos: [178, 195] cc => I
Apply:  Pos: [193, 202] cc => I
Apply:  Pos: [197, 200] cc => I
Apply:  Pos: [192, 208, 211] ccc => cc
Apply:  Pos: [199, 206] cc => I
Apply:  Pos: [203, 212] cc => I
Apply:  Pos: [204, 209] cc => I
Apply:  Pos: [214, 239] cc => I
Apply:  Pos: [217, 223] cc => I
Apply:  Pos: [234, 245, 254] ccc => cc
Apply:  Pos: [241, 268] cc => I
Apply:  Pos: [253, 266] cc => I
Apply:  Pos: [263, 267] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 4], [16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [0, 3], [12, 10], [16, 5], [6, 4], [15, 19], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [0, 3], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [6, 2], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 16], [8, 15], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [1, 14], [11, 14], [4, 5], [19, 14], [9, 3], [11, 18], [5, 1], [8, 15], [4, 5], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [6, 2], [9, 3], [2, 12], [16, 0], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [6, 2], [7, 14], [4, 8], [14, 17], [10, 13], [12, 8], [15, 19], [16, 0], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [18, 7], [6, 2], [16, 5], [0, 3], [8, 15], [12, 15], [2, 8], [5, 9], [10, 13], [19, 14], [18, 7], [4, 8], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [11, 18], [3, 1], [9, 1], [16, 5], [10, 11], [2, 8], [12, 15], [19, 17], [6, 4], [1, 14], [5, 1], [11, 18], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [6, 4], [2, 15], [1, 14], [10, 11], [11, 19], [10, 13], [5, 1], [4, 16], [15, 9], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [10, 13], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  5.343675374984741

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 13]
[10, 22]
[63, 65]
[41, 77]
[102, 112]
[130, 139]
[144, 158]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[64, 68, 70]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[122, 126, 133]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[9, 14, 20]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 13]
[10, 22]
[63, 65]
[41, 77]
[102, 112]
[130, 139]
[144, 158]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.374889612197876

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 13] cc => I, Pos: [0, 13] cc => I, Pos: [9, 14, 20] ccc => cc, Pos: [10, 22] cc => I, Pos: [10, 22] cc => I, Pos: [41, 77] cc => I, Pos: [41, 77] cc => I, Pos: [63, 65] cc => I, Pos: [63, 65] cc => I, Pos: [64, 68, 70] ccc => cc, Pos: [102, 112] cc => I, Pos: [102, 112] cc => I, Pos: [122, 126, 133] ccc => cc, Pos: [130, 139] cc => I, Pos: [130, 139] cc => I, Pos: [144, 158] cc => I, Pos: [144, 158] cc => I]

--------End Timer [Generate Plans]:  0.015624523162841797

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 13] cc => I,
 Pos: [9, 14, 20] ccc => cc,
 Pos: [10, 22] cc => I,
 Pos: [41, 77] cc => I,
 Pos: [63, 65] cc => I,
 Pos: [64, 68, 70] ccc => cc,
 Pos: [102, 112] cc => I,
 Pos: [122, 126, 133] ccc => cc,
 Pos: [130, 139] cc => I,
 Pos: [144, 158] cc => I]
Change: 10, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 13] cc => I
Apply:  Pos: [9, 14, 20] ccc => cc
Apply:  Pos: [10, 22] cc => I
Apply:  Pos: [41, 77] cc => I
Apply:  Pos: [63, 65] cc => I
Apply:  Pos: [64, 68, 70] ccc => cc
Apply:  Pos: [102, 112] cc => I
Apply:  Pos: [122, 126, 133] ccc => cc
Apply:  Pos: [130, 139] cc => I
Apply:  Pos: [144, 158] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [15, 9], [12, 10], [16, 5], [9, 19], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 15], [8, 16], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [1, 14], [11, 14], [4, 1], [9, 3], [11, 18], [5, 1], [8, 15], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [16, 0], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [6, 2], [7, 14], [4, 8], [14, 17], [10, 13], [12, 8], [15, 19], [16, 0], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [12, 15], [8, 15], [2, 8], [5, 9], [10, 13], [19, 14], [4, 8], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [9, 1], [3, 1], [16, 5], [11, 18], [2, 8], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [11, 9], [15, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  3.3905141353607178

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[83, 89, 99]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9533815383911133

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [83, 89, 99] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [83, 89, 99] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [83, 89, 99] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [15, 9], [12, 10], [16, 5], [9, 19], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 16], [8, 15], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [11, 14], [1, 14], [4, 1], [9, 3], [11, 18], [5, 1], [8, 15], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [16, 0], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [6, 2], [7, 14], [4, 8], [14, 17], [10, 18], [12, 8], [15, 19], [16, 0], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [8, 15], [12, 15], [2, 8], [5, 9], [19, 14], [4, 8], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [9, 1], [16, 5], [11, 18], [2, 8], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [15, 9], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  2.9533815383911133

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9530653953552246

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [15, 9], [12, 10], [16, 5], [9, 19], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 15], [8, 16], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [1, 14], [11, 14], [4, 1], [9, 3], [11, 18], [5, 1], [8, 15], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [16, 0], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [6, 2], [7, 14], [4, 8], [14, 17], [10, 18], [12, 8], [15, 19], [16, 0], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [12, 15], [8, 15], [2, 8], [5, 9], [19, 14], [4, 8], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [9, 1], [3, 1], [16, 5], [11, 18], [2, 8], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [11, 9], [15, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  2.9530653953552246

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [168] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 336

Reduced: 
 - size: 102 (37.78%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10925984382629395

[6, 4], [16, 0], [7, 14], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [6, 2], [11, 18], [7, 17], [9, 19], [0, 3], [12, 10], [16, 5], [6, 2], [4, 16], [15, 19], [13, 11], [3, 1], [7, 14], [6, 2], [15, 19], [18, 7], [3, 1], [12, 8], [6, 4], [15, 9], [7, 14], [5, 1], [0, 3], [10, 11], [2, 8], [13, 18], [6, 2], [5, 3], [15, 19], [12, 8], [4, 16], [11, 9], [7, 14], [2, 12], [16, 5], [4, 8], [13, 18], [15, 19], [1, 14], [2, 8], [15, 19], [0, 3], [18, 7], [6, 4], [4, 8], [13, 11], [16, 0], [7, 17], [12, 10], [6, 2], [3, 1], [8, 5], [18, 7], [19, 17], [16, 0], [10, 11], [12, 15], [5, 3], [13, 18], [15, 9], [11, 19], [7, 14], [8, 16], [5, 1], [8, 15], [19, 14], [12, 10], [13, 18], [5, 1], [12, 8], [7, 14], [6, 4], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [6, 4], [19, 14], [8, 15], [0, 3], [1, 14], [11, 19], [4, 5], [6, 2], [12, 10], [0, 3], [19, 14], [8, 15], [9, 3], [11, 18], [5, 1], [16, 0], [11, 19], [6, 2], [8, 15], [5, 3], [10, 13], [7, 14], [15, 11], [16, 0], [10, 13], [19, 17], [4, 5], [11, 9], [5, 3], [1, 14], [8, 15], [6, 2], [9, 3], [19, 17], [2, 12], [16, 0], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [11, 9], [6, 2], [7, 14], [4, 8], [5, 3], [14, 17], [11, 9], [10, 13], [12, 8], [15, 19], [6, 4], [16, 0], [5, 3], [7, 17], [2, 15], [13, 18], [6, 4], [9, 3], [1, 14], [18, 7], [6, 2], [16, 5], [13, 11], [19, 17], [0, 3], [10, 18], [8, 15], [19, 17], [13, 11], [5, 3], [12, 15], [2, 8], [10, 18], [5, 9], [10, 13], [19, 14], [18, 7], [16, 0], [4, 8], [5, 3], [11, 18], [12, 10], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [4, 8], [5, 9], [19, 7], [6, 2], [11, 18], [3, 1], [4, 8], [12, 10], [9, 1], [16, 5], [10, 11], [2, 8], [12, 15], [19, 17], [6, 4], [1, 14], [5, 9], [2, 8], [11, 18], [19, 7], [16, 0], [6, 4], [14, 17], [5, 3], [6, 4], [12, 10], [2, 8], [16, 0], [7, 17], [2, 12], [5, 3], [15, 11], [9, 1], [7, 17], [6, 4], [5, 9], [16, 0], [2, 15], [12, 8], [1, 14], [10, 11], [7, 14], [11, 19], [10, 13], [5, 1], [4, 16], [15, 9], [7, 14], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [13, 18], [2, 15], [11, 19], [7, 17], [9, 19], [12, 8], [15, 11], [6, 2], [5, 1], [14, 17], [12, 15], [10, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [8, 16], [10, 13], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [12, 10], [18, 7], [19, 17], [8, 16], [12, 10], [6, 2], [11, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 15]
[2, 20]
[15, 21]
[17, 22]
[19, 24]
[22, 36]
[28, 40]
[33, 44]
[36, 45]
[45, 48]
[54, 62]
[66, 75]
[71, 76]
[79, 85]
[57, 92]
[74, 93]
[88, 94]
[87, 96]
[92, 102]
[96, 103]
[100, 108]
[105, 109]
[102, 116]
[110, 118]
[108, 120]
[128, 133]
[129, 135]
[109, 136]
[133, 141]
[139, 145]
[152, 156]
[151, 157]
[154, 161]
[158, 168]
[168, 173]
[167, 176]
[176, 182]
[170, 183]
[187, 193]
[178, 195]
[166, 196]
[190, 197]
[197, 200]
[193, 202]
[196, 203]
[199, 206]
[204, 209]
[200, 210]
[203, 212]
[217, 223]
[214, 239]
[253, 266]
[263, 267]
[241, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 55, 60]
[90, 95, 101]
[192, 208, 211]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[20, 23, 28]
[16, 26, 38]
[104, 111, 113]
[212, 221, 225]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[234, 245, 254]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 15]
[2, 20]
[15, 21]
[17, 22]
[19, 24]
[22, 36]
[28, 40]
[33, 44]
[36, 45]
[45, 48]
[54, 62]
[66, 75]
[71, 76]
[79, 85]
[57, 92]
[74, 93]
[88, 94]
[87, 96]
[92, 102]
[96, 103]
[100, 108]
[105, 109]
[102, 116]
[110, 118]
[108, 120]
[128, 133]
[129, 135]
[109, 136]
[133, 141]
[139, 145]
[152, 156]
[151, 157]
[154, 161]
[158, 168]
[168, 173]
[167, 176]
[176, 182]
[170, 183]
[187, 193]
[178, 195]
[166, 196]
[190, 197]
[197, 200]
[193, 202]
[196, 203]
[199, 206]
[204, 209]
[200, 210]
[203, 212]
[217, 223]
[214, 239]
[253, 266]
[263, 267]
[241, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.171833038330078

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 20] cc => I, Pos: [2, 20] cc => I, Pos: [8, 15] cc => I, Pos: [8, 15] cc => I, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [16, 26, 38] ccc => cc, Pos: [17, 22] cc => I, Pos: [17, 22] cc => I, Pos: [19, 24] cc => I, Pos: [19, 24] cc => I, Pos: [20, 23, 28] ccc => cc, Pos: [22, 36] cc => I, Pos: [22, 36] cc => I, Pos: [28, 40] cc => I, Pos: [28, 40] cc => I, Pos: [33, 44] cc => I, Pos: [33, 44] cc => I, Pos: [36, 45] cc => I, Pos: [36, 45] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [50, 55, 60] ccc => cc, Pos: [54, 62] cc => I, Pos: [54, 62] cc => I, Pos: [57, 92] cc => I, Pos: [57, 92] cc => I, Pos: [66, 75] cc => I, Pos: [66, 75] cc => I, Pos: [71, 76] cc => I, Pos: [71, 76] cc => I, Pos: [74, 93] cc => I, Pos: [74, 93] cc => I, Pos: [79, 85] cc => I, Pos: [79, 85] cc => I, Pos: [87, 96] cc => I, Pos: [87, 96] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [90, 95, 101] ccc => cc, Pos: [92, 102] cc => I, Pos: [92, 102] cc => I, Pos: [96, 103] cc => I, Pos: [96, 103] cc => I, Pos: [100, 108] cc => I, Pos: [100, 108] cc => I, Pos: [102, 116] cc => I, Pos: [102, 116] cc => I, Pos: [104, 111, 113] ccc => cc, Pos: [105, 109] cc => I, Pos: [105, 109] cc => I, Pos: [108, 120] cc => I, Pos: [108, 120] cc => I, Pos: [109, 136] cc => I, Pos: [109, 136] cc => I, Pos: [110, 118] cc => I, Pos: [110, 118] cc => I, Pos: [128, 133] cc => I, Pos: [128, 133] cc => I, Pos: [129, 135] cc => I, Pos: [129, 135] cc => I, Pos: [133, 141] cc => I, Pos: [133, 141] cc => I, Pos: [139, 145] cc => I, Pos: [139, 145] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [152, 156] cc => I, Pos: [152, 156] cc => I, Pos: [154, 161] cc => I, Pos: [154, 161] cc => I, Pos: [158, 168] cc => I, Pos: [158, 168] cc => I, Pos: [166, 196] cc => I, Pos: [166, 196] cc => I, Pos: [167, 176] cc => I, Pos: [167, 176] cc => I, Pos: [168, 173] cc => I, Pos: [168, 173] cc => I, Pos: [170, 183] cc => I, Pos: [170, 183] cc => I, Pos: [176, 182] cc => I, Pos: [176, 182] cc => I, Pos: [178, 195] cc => I, Pos: [178, 195] cc => I, Pos: [187, 193] cc => I, Pos: [187, 193] cc => I, Pos: [190, 197] cc => I, Pos: [190, 197] cc => I, Pos: [192, 208, 211] ccc => cc, Pos: [193, 202] cc => I, Pos: [193, 202] cc => I, Pos: [196, 203] cc => I, Pos: [196, 203] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [199, 206] cc => I, Pos: [199, 206] cc => I, Pos: [200, 210] cc => I, Pos: [200, 210] cc => I, Pos: [203, 212] cc => I, Pos: [203, 212] cc => I, Pos: [204, 209] cc => I, Pos: [204, 209] cc => I, Pos: [212, 221, 225] ccc => cc, Pos: [214, 239] cc => I, Pos: [214, 239] cc => I, Pos: [217, 223] cc => I, Pos: [217, 223] cc => I, Pos: [234, 245, 254] ccc => cc, Pos: [241, 268] cc => I, Pos: [241, 268] cc => I, Pos: [253, 266] cc => I, Pos: [253, 266] cc => I, Pos: [263, 267] cc => I, Pos: [263, 267] cc => I]

--------End Timer [Generate Plans]:  0.12500429153442383

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 20] cc => I,
 Pos: [8, 15] cc => I,
 Pos: [16, 26, 38] ccc => cc,
 Pos: [22, 36] cc => I,
 Pos: [19, 24] cc => I,
 Pos: [28, 40] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [50, 55, 60] ccc => cc,
 Pos: [54, 62] cc => I,
 Pos: [92, 102] cc => I,
 Pos: [66, 75] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 93] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [96, 103] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [90, 95, 101] ccc => cc,
 Pos: [100, 108] cc => I,
 Pos: [104, 111, 113] ccc => cc,
 Pos: [105, 109] cc => I,
 Pos: [110, 118] cc => I,
 Pos: [128, 133] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [139, 145] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [154, 161] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [166, 196] cc => I,
 Pos: [176, 182] cc => I,
 Pos: [170, 183] cc => I,
 Pos: [178, 195] cc => I,
 Pos: [187, 193] cc => I,
 Pos: [190, 197] cc => I,
 Pos: [192, 208, 211] ccc => cc,
 Pos: [199, 206] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [203, 212] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [214, 239] cc => I,
 Pos: [217, 223] cc => I,
 Pos: [234, 245, 254] ccc => cc,
 Pos: [241, 268] cc => I,
 Pos: [253, 266] cc => I,
 Pos: [263, 267] cc => I]
Change: 46, Saving: 48

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 20] cc => I
Apply:  Pos: [8, 15] cc => I
Apply:  Pos: [16, 26, 38] ccc => cc
Apply:  Pos: [22, 36] cc => I
Apply:  Pos: [19, 24] cc => I
Apply:  Pos: [28, 40] cc => I
Apply:  Pos: [33, 44] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [50, 55, 60] ccc => cc
Apply:  Pos: [54, 62] cc => I
Apply:  Pos: [92, 102] cc => I
Apply:  Pos: [66, 75] cc => I
Apply:  Pos: [71, 76] cc => I
Apply:  Pos: [74, 93] cc => I
Apply:  Pos: [79, 85] cc => I
Apply:  Pos: [96, 103] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [90, 95, 101] ccc => cc
Apply:  Pos: [100, 108] cc => I
Apply:  Pos: [104, 111, 113] ccc => cc
Apply:  Pos: [105, 109] cc => I
Apply:  Pos: [110, 118] cc => I
Apply:  Pos: [128, 133] cc => I
Apply:  Pos: [129, 135] cc => I
Apply:  Pos: [139, 145] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [152, 156] cc => I
Apply:  Pos: [154, 161] cc => I
Apply:  Pos: [158, 168] cc => I
Apply:  Pos: [166, 196] cc => I
Apply:  Pos: [176, 182] cc => I
Apply:  Pos: [170, 183] cc => I
Apply:  Pos: [178, 195] cc => I
Apply:  Pos: [187, 193] cc => I
Apply:  Pos: [190, 197] cc => I
Apply:  Pos: [192, 208, 211] ccc => cc
Apply:  Pos: [199, 206] cc => I
Apply:  Pos: [200, 210] cc => I
Apply:  Pos: [203, 212] cc => I
Apply:  Pos: [204, 209] cc => I
Apply:  Pos: [214, 239] cc => I
Apply:  Pos: [217, 223] cc => I
Apply:  Pos: [234, 245, 254] ccc => cc
Apply:  Pos: [241, 268] cc => I
Apply:  Pos: [253, 266] cc => I
Apply:  Pos: [263, 267] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 4], [16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [0, 3], [12, 10], [16, 5], [6, 4], [15, 19], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [0, 3], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [6, 2], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 16], [8, 15], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [8, 15], [1, 14], [11, 14], [4, 5], [19, 14], [9, 3], [11, 18], [5, 1], [4, 5], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [6, 2], [9, 3], [2, 12], [16, 0], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [10, 13], [12, 8], [15, 19], [16, 0], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [18, 7], [6, 2], [16, 5], [0, 3], [8, 15], [12, 15], [2, 8], [5, 9], [10, 13], [19, 14], [18, 7], [4, 8], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [11, 18], [3, 1], [9, 1], [16, 5], [10, 11], [12, 15], [19, 17], [1, 14], [5, 1], [11, 18], [14, 17], [12, 10], [2, 8], [2, 12], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [10, 13], [5, 1], [4, 16], [15, 9], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [10, 13], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  5.296837329864502

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 13]
[10, 22]
[41, 77]
[102, 112]
[142, 156]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[65, 69, 70]
[80, 83, 95]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[122, 126, 131]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[9, 14, 20]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 13]
[10, 22]
[41, 77]
[102, 112]
[142, 156]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2968413829803467

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 13] cc => I, Pos: [0, 13] cc => I, Pos: [9, 14, 20] ccc => cc, Pos: [10, 22] cc => I, Pos: [10, 22] cc => I, Pos: [41, 77] cc => I, Pos: [41, 77] cc => I, Pos: [65, 69, 70] ccc => cc, Pos: [80, 83, 95] ccc => cc, Pos: [102, 112] cc => I, Pos: [102, 112] cc => I, Pos: [122, 126, 131] ccc => cc, Pos: [142, 156] cc => I, Pos: [142, 156] cc => I]

--------End Timer [Generate Plans]:  0.01561117172241211

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 13] cc => I,
 Pos: [9, 14, 20] ccc => cc,
 Pos: [10, 22] cc => I,
 Pos: [41, 77] cc => I,
 Pos: [65, 69, 70] ccc => cc,
 Pos: [80, 83, 95] ccc => cc,
 Pos: [102, 112] cc => I,
 Pos: [122, 126, 131] ccc => cc,
 Pos: [142, 156] cc => I]
Change: 9, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 13] cc => I
Apply:  Pos: [9, 14, 20] ccc => cc
Apply:  Pos: [10, 22] cc => I
Apply:  Pos: [41, 77] cc => I
Apply:  Pos: [65, 69, 70] ccc => cc
Apply:  Pos: [80, 83, 95] ccc => cc
Apply:  Pos: [102, 112] cc => I
Apply:  Pos: [122, 126, 131] ccc => cc
Apply:  Pos: [142, 156] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [15, 9], [12, 10], [16, 5], [9, 19], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 15], [8, 16], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [8, 15], [11, 14], [1, 14], [4, 1], [19, 14], [9, 3], [11, 18], [5, 1], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [16, 3], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [10, 13], [12, 8], [15, 19], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [12, 15], [8, 15], [2, 8], [5, 9], [10, 13], [19, 14], [4, 8], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [9, 1], [3, 1], [16, 5], [11, 18], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [2, 8], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [11, 9], [15, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  3.312452554702759

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[84, 90, 100]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9688284397125244

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [84, 90, 100] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [84, 90, 100] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [84, 90, 100] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [15, 9], [12, 10], [16, 5], [9, 19], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 16], [8, 15], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [8, 15], [1, 14], [11, 14], [4, 1], [19, 14], [9, 3], [11, 18], [5, 1], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [16, 3], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [10, 18], [12, 8], [15, 19], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [8, 15], [12, 15], [2, 8], [5, 9], [19, 14], [4, 8], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [9, 1], [16, 5], [11, 18], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 8], [2, 12], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [15, 9], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  2.9688284397125244

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.937495470046997

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [15, 9], [12, 10], [16, 5], [9, 19], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 15], [8, 16], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [8, 15], [11, 14], [1, 14], [4, 1], [19, 14], [9, 3], [11, 18], [5, 1], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [16, 3], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [10, 18], [12, 8], [15, 19], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [12, 15], [8, 15], [2, 8], [5, 9], [19, 14], [4, 8], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [9, 1], [3, 1], [16, 5], [11, 18], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [2, 8], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [11, 9], [15, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  2.937495470046997

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [169] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 338

Reduced: 
 - size: 101 (37.41%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936760902404785

[6, 4], [16, 0], [7, 14], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [6, 2], [11, 18], [7, 17], [9, 19], [0, 3], [12, 10], [16, 5], [6, 2], [4, 16], [15, 19], [13, 11], [3, 1], [7, 14], [6, 2], [15, 19], [18, 7], [3, 1], [12, 8], [6, 4], [15, 9], [7, 14], [5, 1], [0, 3], [10, 11], [2, 8], [13, 18], [6, 2], [5, 3], [15, 19], [12, 8], [4, 16], [11, 9], [7, 14], [2, 12], [16, 5], [4, 8], [13, 18], [15, 19], [1, 14], [2, 8], [15, 19], [0, 3], [18, 7], [6, 4], [4, 8], [13, 11], [16, 0], [7, 17], [12, 10], [6, 2], [3, 1], [8, 5], [18, 7], [19, 17], [16, 0], [10, 11], [12, 15], [5, 3], [13, 18], [15, 9], [11, 19], [7, 14], [8, 16], [5, 1], [8, 15], [19, 14], [12, 10], [13, 18], [5, 1], [12, 8], [7, 14], [6, 4], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [6, 4], [19, 14], [8, 15], [0, 3], [1, 14], [11, 19], [4, 5], [6, 2], [12, 10], [0, 3], [19, 14], [8, 15], [9, 3], [11, 18], [5, 1], [16, 0], [11, 19], [6, 2], [8, 15], [5, 3], [10, 13], [7, 14], [15, 11], [16, 0], [10, 13], [19, 17], [4, 5], [11, 9], [5, 3], [1, 14], [8, 15], [6, 2], [9, 3], [19, 17], [2, 12], [16, 0], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [11, 9], [6, 2], [7, 14], [4, 8], [5, 3], [14, 17], [11, 9], [10, 13], [12, 8], [15, 19], [6, 4], [16, 0], [5, 3], [7, 17], [2, 15], [13, 18], [6, 4], [9, 3], [1, 14], [18, 7], [6, 2], [16, 5], [13, 11], [19, 17], [0, 3], [10, 18], [8, 15], [19, 17], [13, 11], [5, 3], [12, 15], [2, 8], [10, 18], [5, 9], [10, 13], [19, 14], [18, 7], [16, 0], [4, 8], [5, 3], [11, 18], [12, 10], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [4, 8], [5, 9], [19, 7], [6, 2], [11, 18], [3, 1], [4, 8], [12, 10], [9, 1], [16, 5], [10, 11], [2, 8], [12, 15], [19, 17], [6, 4], [1, 14], [5, 9], [2, 8], [11, 18], [19, 7], [16, 0], [6, 4], [14, 17], [5, 3], [6, 4], [12, 10], [2, 8], [16, 0], [7, 17], [2, 12], [5, 3], [15, 11], [9, 1], [7, 17], [6, 4], [5, 9], [16, 0], [2, 15], [12, 8], [1, 14], [10, 11], [7, 14], [11, 19], [10, 13], [5, 1], [4, 16], [15, 9], [7, 14], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [13, 18], [2, 15], [11, 19], [7, 17], [9, 19], [12, 8], [15, 11], [6, 2], [5, 1], [14, 17], [12, 15], [10, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [8, 16], [10, 13], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [12, 10], [18, 7], [19, 17], [8, 16], [12, 10], [6, 2], [11, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 15]
[2, 20]
[15, 21]
[17, 22]
[19, 24]
[22, 36]
[28, 40]
[33, 44]
[36, 45]
[45, 48]
[54, 62]
[66, 75]
[71, 76]
[79, 85]
[57, 92]
[74, 93]
[88, 94]
[87, 96]
[92, 102]
[96, 103]
[100, 108]
[105, 109]
[102, 116]
[110, 118]
[108, 120]
[128, 133]
[129, 135]
[109, 136]
[133, 141]
[139, 145]
[152, 156]
[151, 157]
[154, 161]
[158, 168]
[168, 173]
[167, 176]
[176, 182]
[170, 183]
[187, 193]
[178, 195]
[166, 196]
[190, 197]
[197, 200]
[193, 202]
[196, 203]
[199, 206]
[204, 209]
[200, 210]
[203, 212]
[217, 223]
[214, 239]
[253, 266]
[263, 267]
[241, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 55, 60]
[90, 95, 101]
[192, 208, 211]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[20, 23, 28]
[16, 26, 38]
[104, 111, 113]
[212, 221, 225]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[234, 245, 254]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 15]
[2, 20]
[15, 21]
[17, 22]
[19, 24]
[22, 36]
[28, 40]
[33, 44]
[36, 45]
[45, 48]
[54, 62]
[66, 75]
[71, 76]
[79, 85]
[57, 92]
[74, 93]
[88, 94]
[87, 96]
[92, 102]
[96, 103]
[100, 108]
[105, 109]
[102, 116]
[110, 118]
[108, 120]
[128, 133]
[129, 135]
[109, 136]
[133, 141]
[139, 145]
[152, 156]
[151, 157]
[154, 161]
[158, 168]
[168, 173]
[167, 176]
[176, 182]
[170, 183]
[187, 193]
[178, 195]
[166, 196]
[190, 197]
[197, 200]
[193, 202]
[196, 203]
[199, 206]
[204, 209]
[200, 210]
[203, 212]
[217, 223]
[214, 239]
[253, 266]
[263, 267]
[241, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.234681606292725

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 20] cc => I, Pos: [2, 20] cc => I, Pos: [8, 15] cc => I, Pos: [8, 15] cc => I, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [16, 26, 38] ccc => cc, Pos: [17, 22] cc => I, Pos: [17, 22] cc => I, Pos: [19, 24] cc => I, Pos: [19, 24] cc => I, Pos: [20, 23, 28] ccc => cc, Pos: [22, 36] cc => I, Pos: [22, 36] cc => I, Pos: [28, 40] cc => I, Pos: [28, 40] cc => I, Pos: [33, 44] cc => I, Pos: [33, 44] cc => I, Pos: [36, 45] cc => I, Pos: [36, 45] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [50, 55, 60] ccc => cc, Pos: [54, 62] cc => I, Pos: [54, 62] cc => I, Pos: [57, 92] cc => I, Pos: [57, 92] cc => I, Pos: [66, 75] cc => I, Pos: [66, 75] cc => I, Pos: [71, 76] cc => I, Pos: [71, 76] cc => I, Pos: [74, 93] cc => I, Pos: [74, 93] cc => I, Pos: [79, 85] cc => I, Pos: [79, 85] cc => I, Pos: [87, 96] cc => I, Pos: [87, 96] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [90, 95, 101] ccc => cc, Pos: [92, 102] cc => I, Pos: [92, 102] cc => I, Pos: [96, 103] cc => I, Pos: [96, 103] cc => I, Pos: [100, 108] cc => I, Pos: [100, 108] cc => I, Pos: [102, 116] cc => I, Pos: [102, 116] cc => I, Pos: [104, 111, 113] ccc => cc, Pos: [105, 109] cc => I, Pos: [105, 109] cc => I, Pos: [108, 120] cc => I, Pos: [108, 120] cc => I, Pos: [109, 136] cc => I, Pos: [109, 136] cc => I, Pos: [110, 118] cc => I, Pos: [110, 118] cc => I, Pos: [128, 133] cc => I, Pos: [128, 133] cc => I, Pos: [129, 135] cc => I, Pos: [129, 135] cc => I, Pos: [133, 141] cc => I, Pos: [133, 141] cc => I, Pos: [139, 145] cc => I, Pos: [139, 145] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [152, 156] cc => I, Pos: [152, 156] cc => I, Pos: [154, 161] cc => I, Pos: [154, 161] cc => I, Pos: [158, 168] cc => I, Pos: [158, 168] cc => I, Pos: [166, 196] cc => I, Pos: [166, 196] cc => I, Pos: [167, 176] cc => I, Pos: [167, 176] cc => I, Pos: [168, 173] cc => I, Pos: [168, 173] cc => I, Pos: [170, 183] cc => I, Pos: [170, 183] cc => I, Pos: [176, 182] cc => I, Pos: [176, 182] cc => I, Pos: [178, 195] cc => I, Pos: [178, 195] cc => I, Pos: [187, 193] cc => I, Pos: [187, 193] cc => I, Pos: [190, 197] cc => I, Pos: [190, 197] cc => I, Pos: [192, 208, 211] ccc => cc, Pos: [193, 202] cc => I, Pos: [193, 202] cc => I, Pos: [196, 203] cc => I, Pos: [196, 203] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [199, 206] cc => I, Pos: [199, 206] cc => I, Pos: [200, 210] cc => I, Pos: [200, 210] cc => I, Pos: [203, 212] cc => I, Pos: [203, 212] cc => I, Pos: [204, 209] cc => I, Pos: [204, 209] cc => I, Pos: [212, 221, 225] ccc => cc, Pos: [214, 239] cc => I, Pos: [214, 239] cc => I, Pos: [217, 223] cc => I, Pos: [217, 223] cc => I, Pos: [234, 245, 254] ccc => cc, Pos: [241, 268] cc => I, Pos: [241, 268] cc => I, Pos: [253, 266] cc => I, Pos: [253, 266] cc => I, Pos: [263, 267] cc => I, Pos: [263, 267] cc => I]

--------End Timer [Generate Plans]:  0.12479233741760254

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 20] cc => I,
 Pos: [8, 15] cc => I,
 Pos: [16, 26, 38] ccc => cc,
 Pos: [22, 36] cc => I,
 Pos: [19, 24] cc => I,
 Pos: [28, 40] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [50, 55, 60] ccc => cc,
 Pos: [54, 62] cc => I,
 Pos: [57, 92] cc => I,
 Pos: [66, 75] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 93] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [87, 96] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [90, 95, 101] ccc => cc,
 Pos: [108, 120] cc => I,
 Pos: [102, 116] cc => I,
 Pos: [104, 111, 113] ccc => cc,
 Pos: [105, 109] cc => I,
 Pos: [110, 118] cc => I,
 Pos: [133, 141] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [139, 145] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [154, 161] cc => I,
 Pos: [168, 173] cc => I,
 Pos: [166, 196] cc => I,
 Pos: [167, 176] cc => I,
 Pos: [170, 183] cc => I,
 Pos: [178, 195] cc => I,
 Pos: [193, 202] cc => I,
 Pos: [190, 197] cc => I,
 Pos: [192, 208, 211] ccc => cc,
 Pos: [199, 206] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [203, 212] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [214, 239] cc => I,
 Pos: [217, 223] cc => I,
 Pos: [234, 245, 254] ccc => cc,
 Pos: [241, 268] cc => I,
 Pos: [253, 266] cc => I,
 Pos: [263, 267] cc => I]
Change: 47, Saving: 49

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 20] cc => I
Apply:  Pos: [8, 15] cc => I
Apply:  Pos: [16, 26, 38] ccc => cc
Apply:  Pos: [22, 36] cc => I
Apply:  Pos: [19, 24] cc => I
Apply:  Pos: [28, 40] cc => I
Apply:  Pos: [33, 44] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [50, 55, 60] ccc => cc
Apply:  Pos: [54, 62] cc => I
Apply:  Pos: [57, 92] cc => I
Apply:  Pos: [66, 75] cc => I
Apply:  Pos: [71, 76] cc => I
Apply:  Pos: [74, 93] cc => I
Apply:  Pos: [79, 85] cc => I
Apply:  Pos: [87, 96] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [90, 95, 101] ccc => cc
Apply:  Pos: [108, 120] cc => I
Apply:  Pos: [102, 116] cc => I
Apply:  Pos: [104, 111, 113] ccc => cc
Apply:  Pos: [105, 109] cc => I
Apply:  Pos: [110, 118] cc => I
Apply:  Pos: [133, 141] cc => I
Apply:  Pos: [129, 135] cc => I
Apply:  Pos: [139, 145] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [152, 156] cc => I
Apply:  Pos: [154, 161] cc => I
Apply:  Pos: [168, 173] cc => I
Apply:  Pos: [166, 196] cc => I
Apply:  Pos: [167, 176] cc => I
Apply:  Pos: [170, 183] cc => I
Apply:  Pos: [178, 195] cc => I
Apply:  Pos: [193, 202] cc => I
Apply:  Pos: [190, 197] cc => I
Apply:  Pos: [192, 208, 211] ccc => cc
Apply:  Pos: [199, 206] cc => I
Apply:  Pos: [200, 210] cc => I
Apply:  Pos: [203, 212] cc => I
Apply:  Pos: [204, 209] cc => I
Apply:  Pos: [214, 239] cc => I
Apply:  Pos: [217, 223] cc => I
Apply:  Pos: [234, 245, 254] ccc => cc
Apply:  Pos: [241, 268] cc => I
Apply:  Pos: [253, 266] cc => I
Apply:  Pos: [263, 267] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 4], [16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [0, 3], [12, 10], [16, 5], [6, 4], [15, 19], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [0, 3], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 16], [8, 15], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [1, 14], [11, 14], [4, 5], [19, 14], [9, 3], [11, 18], [5, 1], [16, 0], [8, 15], [4, 5], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [6, 2], [7, 14], [4, 8], [14, 17], [10, 13], [12, 8], [15, 19], [16, 0], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [18, 7], [6, 2], [16, 5], [0, 3], [8, 15], [5, 3], [12, 15], [2, 8], [5, 9], [10, 13], [19, 14], [18, 7], [11, 18], [9, 19], [2, 15], [13, 18], [15, 19], [5, 9], [6, 2], [11, 18], [3, 1], [4, 8], [9, 1], [16, 5], [10, 11], [2, 8], [12, 15], [19, 17], [1, 14], [5, 1], [11, 18], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [10, 13], [5, 1], [4, 16], [15, 9], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [10, 13], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  5.359473943710327

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 13]
[10, 22]
[62, 64]
[100, 111]
[140, 154]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[63, 67, 70]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[119, 124, 130]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[9, 14, 20]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 13]
[10, 22]
[62, 64]
[100, 111]
[140, 154]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2814362049102783

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 13] cc => I, Pos: [0, 13] cc => I, Pos: [9, 14, 20] ccc => cc, Pos: [10, 22] cc => I, Pos: [10, 22] cc => I, Pos: [62, 64] cc => I, Pos: [62, 64] cc => I, Pos: [63, 67, 70] ccc => cc, Pos: [100, 111] cc => I, Pos: [100, 111] cc => I, Pos: [119, 124, 130] ccc => cc, Pos: [140, 154] cc => I, Pos: [140, 154] cc => I]

--------End Timer [Generate Plans]:  0.015641212463378906

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 13] cc => I,
 Pos: [9, 14, 20] ccc => cc,
 Pos: [10, 22] cc => I,
 Pos: [62, 64] cc => I,
 Pos: [63, 67, 70] ccc => cc,
 Pos: [100, 111] cc => I,
 Pos: [119, 124, 130] ccc => cc,
 Pos: [140, 154] cc => I]
Change: 8, Saving: 7

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 13] cc => I
Apply:  Pos: [9, 14, 20] ccc => cc
Apply:  Pos: [10, 22] cc => I
Apply:  Pos: [62, 64] cc => I
Apply:  Pos: [63, 67, 70] ccc => cc
Apply:  Pos: [100, 111] cc => I
Apply:  Pos: [119, 124, 130] ccc => cc
Apply:  Pos: [140, 154] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [15, 9], [12, 10], [16, 5], [9, 19], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 15], [8, 16], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [1, 14], [11, 14], [4, 1], [9, 3], [11, 18], [5, 1], [16, 0], [8, 15], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [6, 2], [7, 14], [4, 8], [14, 17], [10, 13], [12, 8], [15, 19], [16, 0], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [8, 15], [5, 3], [12, 15], [2, 8], [5, 9], [10, 13], [19, 14], [11, 18], [9, 19], [2, 15], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [2, 8], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [11, 9], [15, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  3.2970774173736572

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[83, 89, 100]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9530904293060303

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [83, 89, 100] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [83, 89, 100] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [83, 89, 100] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [15, 9], [12, 10], [16, 5], [9, 19], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 16], [8, 15], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [11, 14], [1, 14], [4, 1], [9, 3], [11, 18], [5, 1], [16, 0], [8, 15], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [6, 2], [7, 14], [4, 8], [14, 17], [10, 18], [12, 8], [15, 19], [16, 0], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [8, 15], [5, 3], [12, 15], [2, 8], [5, 9], [19, 14], [11, 18], [9, 19], [2, 15], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [2, 8], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [15, 9], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  2.9530904293060303

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.937762498855591

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [15, 9], [12, 10], [16, 5], [9, 19], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 15], [8, 16], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [1, 14], [11, 14], [4, 1], [9, 3], [11, 18], [5, 1], [16, 0], [8, 15], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [6, 2], [7, 14], [4, 8], [14, 17], [10, 18], [12, 8], [15, 19], [16, 0], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [8, 15], [5, 3], [12, 15], [2, 8], [5, 9], [19, 14], [11, 18], [9, 19], [2, 15], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [2, 8], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [11, 9], [15, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  2.953404426574707

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [168] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 336

Reduced: 
 - size: 102 (37.78%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499046325683594

[6, 4], [16, 0], [7, 14], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [6, 2], [11, 18], [7, 17], [9, 19], [0, 3], [12, 10], [16, 5], [6, 2], [4, 16], [15, 19], [13, 11], [3, 1], [7, 14], [6, 2], [15, 19], [18, 7], [3, 1], [12, 8], [6, 4], [15, 9], [7, 14], [5, 1], [0, 3], [10, 11], [2, 8], [13, 18], [6, 2], [5, 3], [15, 19], [12, 8], [4, 16], [11, 9], [7, 14], [2, 12], [16, 5], [4, 8], [13, 18], [15, 19], [1, 14], [2, 8], [15, 19], [0, 3], [18, 7], [6, 4], [4, 8], [13, 11], [16, 0], [7, 17], [12, 10], [6, 2], [3, 1], [8, 5], [18, 7], [19, 17], [16, 0], [10, 11], [12, 15], [5, 3], [13, 18], [15, 9], [11, 19], [7, 14], [8, 16], [5, 1], [8, 15], [19, 14], [12, 10], [13, 18], [5, 1], [12, 8], [7, 14], [6, 4], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [6, 4], [19, 14], [8, 15], [0, 3], [1, 14], [11, 19], [4, 5], [6, 2], [12, 10], [0, 3], [19, 14], [8, 15], [9, 3], [11, 18], [5, 1], [16, 0], [11, 19], [6, 2], [8, 15], [5, 3], [10, 13], [7, 14], [15, 11], [16, 0], [10, 13], [19, 17], [4, 5], [11, 9], [5, 3], [1, 14], [8, 15], [6, 2], [9, 3], [19, 17], [2, 12], [16, 0], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [5, 3], [11, 9], [6, 2], [7, 14], [4, 8], [5, 3], [14, 17], [11, 9], [10, 13], [12, 8], [15, 19], [6, 4], [16, 0], [5, 3], [7, 17], [2, 15], [13, 18], [6, 4], [9, 3], [1, 14], [18, 7], [6, 2], [16, 5], [13, 11], [19, 17], [0, 3], [10, 18], [8, 15], [19, 17], [13, 11], [5, 3], [12, 15], [2, 8], [10, 18], [5, 9], [10, 13], [19, 14], [18, 7], [16, 0], [4, 8], [5, 3], [11, 18], [12, 10], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [4, 8], [5, 9], [19, 7], [6, 2], [11, 18], [3, 1], [4, 8], [12, 10], [9, 1], [16, 5], [10, 11], [2, 8], [12, 15], [19, 17], [6, 4], [1, 14], [5, 9], [2, 8], [11, 18], [19, 7], [16, 0], [6, 4], [14, 17], [5, 3], [6, 4], [12, 10], [2, 8], [16, 0], [7, 17], [2, 12], [5, 3], [15, 11], [9, 1], [7, 17], [6, 4], [5, 9], [16, 0], [2, 15], [12, 8], [1, 14], [10, 11], [7, 14], [11, 19], [10, 13], [5, 1], [4, 16], [15, 9], [7, 14], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [13, 18], [2, 15], [11, 19], [7, 17], [9, 19], [12, 8], [15, 11], [6, 2], [5, 1], [14, 17], [12, 15], [10, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [8, 16], [10, 13], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [12, 10], [18, 7], [19, 17], [8, 16], [12, 10], [6, 2], [11, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 15]
[2, 20]
[15, 21]
[17, 22]
[19, 24]
[22, 36]
[28, 40]
[33, 44]
[36, 45]
[45, 48]
[54, 62]
[66, 75]
[71, 76]
[79, 85]
[57, 92]
[74, 93]
[88, 94]
[87, 96]
[92, 102]
[96, 103]
[100, 108]
[105, 109]
[102, 116]
[110, 118]
[108, 120]
[128, 133]
[129, 135]
[109, 136]
[133, 141]
[139, 145]
[152, 156]
[151, 157]
[154, 161]
[158, 168]
[168, 173]
[167, 176]
[176, 182]
[170, 183]
[187, 193]
[178, 195]
[166, 196]
[190, 197]
[197, 200]
[193, 202]
[196, 203]
[199, 206]
[204, 209]
[200, 210]
[203, 212]
[217, 223]
[214, 239]
[253, 266]
[263, 267]
[241, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 55, 60]
[90, 95, 101]
[192, 208, 211]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[20, 23, 28]
[16, 26, 38]
[104, 111, 113]
[212, 221, 225]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[234, 245, 254]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 15]
[2, 20]
[15, 21]
[17, 22]
[19, 24]
[22, 36]
[28, 40]
[33, 44]
[36, 45]
[45, 48]
[54, 62]
[66, 75]
[71, 76]
[79, 85]
[57, 92]
[74, 93]
[88, 94]
[87, 96]
[92, 102]
[96, 103]
[100, 108]
[105, 109]
[102, 116]
[110, 118]
[108, 120]
[128, 133]
[129, 135]
[109, 136]
[133, 141]
[139, 145]
[152, 156]
[151, 157]
[154, 161]
[158, 168]
[168, 173]
[167, 176]
[176, 182]
[170, 183]
[187, 193]
[178, 195]
[166, 196]
[190, 197]
[197, 200]
[193, 202]
[196, 203]
[199, 206]
[204, 209]
[200, 210]
[203, 212]
[217, 223]
[214, 239]
[253, 266]
[263, 267]
[241, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.156219244003296

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 20] cc => I, Pos: [2, 20] cc => I, Pos: [8, 15] cc => I, Pos: [8, 15] cc => I, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [16, 26, 38] ccc => cc, Pos: [17, 22] cc => I, Pos: [17, 22] cc => I, Pos: [19, 24] cc => I, Pos: [19, 24] cc => I, Pos: [20, 23, 28] ccc => cc, Pos: [22, 36] cc => I, Pos: [22, 36] cc => I, Pos: [28, 40] cc => I, Pos: [28, 40] cc => I, Pos: [33, 44] cc => I, Pos: [33, 44] cc => I, Pos: [36, 45] cc => I, Pos: [36, 45] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [50, 55, 60] ccc => cc, Pos: [54, 62] cc => I, Pos: [54, 62] cc => I, Pos: [57, 92] cc => I, Pos: [57, 92] cc => I, Pos: [66, 75] cc => I, Pos: [66, 75] cc => I, Pos: [71, 76] cc => I, Pos: [71, 76] cc => I, Pos: [74, 93] cc => I, Pos: [74, 93] cc => I, Pos: [79, 85] cc => I, Pos: [79, 85] cc => I, Pos: [87, 96] cc => I, Pos: [87, 96] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [90, 95, 101] ccc => cc, Pos: [92, 102] cc => I, Pos: [92, 102] cc => I, Pos: [96, 103] cc => I, Pos: [96, 103] cc => I, Pos: [100, 108] cc => I, Pos: [100, 108] cc => I, Pos: [102, 116] cc => I, Pos: [102, 116] cc => I, Pos: [104, 111, 113] ccc => cc, Pos: [105, 109] cc => I, Pos: [105, 109] cc => I, Pos: [108, 120] cc => I, Pos: [108, 120] cc => I, Pos: [109, 136] cc => I, Pos: [109, 136] cc => I, Pos: [110, 118] cc => I, Pos: [110, 118] cc => I, Pos: [128, 133] cc => I, Pos: [128, 133] cc => I, Pos: [129, 135] cc => I, Pos: [129, 135] cc => I, Pos: [133, 141] cc => I, Pos: [133, 141] cc => I, Pos: [139, 145] cc => I, Pos: [139, 145] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [152, 156] cc => I, Pos: [152, 156] cc => I, Pos: [154, 161] cc => I, Pos: [154, 161] cc => I, Pos: [158, 168] cc => I, Pos: [158, 168] cc => I, Pos: [166, 196] cc => I, Pos: [166, 196] cc => I, Pos: [167, 176] cc => I, Pos: [167, 176] cc => I, Pos: [168, 173] cc => I, Pos: [168, 173] cc => I, Pos: [170, 183] cc => I, Pos: [170, 183] cc => I, Pos: [176, 182] cc => I, Pos: [176, 182] cc => I, Pos: [178, 195] cc => I, Pos: [178, 195] cc => I, Pos: [187, 193] cc => I, Pos: [187, 193] cc => I, Pos: [190, 197] cc => I, Pos: [190, 197] cc => I, Pos: [192, 208, 211] ccc => cc, Pos: [193, 202] cc => I, Pos: [193, 202] cc => I, Pos: [196, 203] cc => I, Pos: [196, 203] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [199, 206] cc => I, Pos: [199, 206] cc => I, Pos: [200, 210] cc => I, Pos: [200, 210] cc => I, Pos: [203, 212] cc => I, Pos: [203, 212] cc => I, Pos: [204, 209] cc => I, Pos: [204, 209] cc => I, Pos: [212, 221, 225] ccc => cc, Pos: [214, 239] cc => I, Pos: [214, 239] cc => I, Pos: [217, 223] cc => I, Pos: [217, 223] cc => I, Pos: [234, 245, 254] ccc => cc, Pos: [241, 268] cc => I, Pos: [241, 268] cc => I, Pos: [253, 266] cc => I, Pos: [253, 266] cc => I, Pos: [263, 267] cc => I, Pos: [263, 267] cc => I]

Plan: 1
[Pos: [2, 20] cc => I,
 Pos: [8, 15] cc => I,
 Pos: [16, 26, 38] ccc => cc,
 Pos: [17, 22] cc => I,
 Pos: [19, 24] cc => I,
 Pos: [28, 40] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [36, 45] cc => I,
 Pos: [50, 55, 60] ccc => cc,
 Pos: [54, 62] cc => I,
 Pos: [57, 92] cc => I,
 Pos: [66, 75] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 93] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [87, 96] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [90, 95, 101] ccc => cc,
 Pos: [100, 108] cc => I,
 Pos: [102, 116] cc => I,
 Pos: [104, 111, 113] ccc => cc,
 Pos: [105, 109] cc => I,
 Pos: [110, 118] cc => I,
 Pos: [128, 133] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [139, 145] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [154, 161] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [166, 196] cc => I,
 Pos: [167, 176] cc => I,
 Pos: [170, 183] cc => I,
 Pos: [178, 195] cc => I,
 Pos: [187, 193] cc => I,
 Pos: [190, 197] cc => I,
 Pos: [192, 208, 211] ccc => cc,
 Pos: [199, 206] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [203, 212] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [214, 239] cc => I,
 Pos: [217, 223] cc => I,
 Pos: [234, 245, 254] ccc => cc,
 Pos: [241, 268] cc => I,
 Pos: [253, 266] cc => I,
 Pos: [263, 267] cc => I]
Change: 47, Saving: 49

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.12500500679016113

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 20] cc => I,
 Pos: [8, 15] cc => I,
 Pos: [16, 26, 38] ccc => cc,
 Pos: [17, 22] cc => I,
 Pos: [19, 24] cc => I,
 Pos: [28, 40] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [36, 45] cc => I,
 Pos: [50, 55, 60] ccc => cc,
 Pos: [54, 62] cc => I,
 Pos: [57, 92] cc => I,
 Pos: [66, 75] cc => I,
 Pos: [71, 76] cc => I,
 Pos: [74, 93] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [87, 96] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [90, 95, 101] ccc => cc,
 Pos: [100, 108] cc => I,
 Pos: [102, 116] cc => I,
 Pos: [104, 111, 113] ccc => cc,
 Pos: [105, 109] cc => I,
 Pos: [110, 118] cc => I,
 Pos: [128, 133] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [139, 145] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [152, 156] cc => I,
 Pos: [154, 161] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [166, 196] cc => I,
 Pos: [167, 176] cc => I,
 Pos: [170, 183] cc => I,
 Pos: [178, 195] cc => I,
 Pos: [187, 193] cc => I,
 Pos: [190, 197] cc => I,
 Pos: [192, 208, 211] ccc => cc,
 Pos: [199, 206] cc => I,
 Pos: [200, 210] cc => I,
 Pos: [203, 212] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [214, 239] cc => I,
 Pos: [217, 223] cc => I,
 Pos: [234, 245, 254] ccc => cc,
 Pos: [241, 268] cc => I,
 Pos: [253, 266] cc => I,
 Pos: [263, 267] cc => I]
Change: 47, Saving: 49

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 20] cc => I
Apply:  Pos: [8, 15] cc => I
Apply:  Pos: [16, 26, 38] ccc => cc
Apply:  Pos: [17, 22] cc => I
Apply:  Pos: [19, 24] cc => I
Apply:  Pos: [28, 40] cc => I
Apply:  Pos: [33, 44] cc => I
Apply:  Pos: [36, 45] cc => I
Apply:  Pos: [50, 55, 60] ccc => cc
Apply:  Pos: [54, 62] cc => I
Apply:  Pos: [57, 92] cc => I
Apply:  Pos: [66, 75] cc => I
Apply:  Pos: [71, 76] cc => I
Apply:  Pos: [74, 93] cc => I
Apply:  Pos: [79, 85] cc => I
Apply:  Pos: [87, 96] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [90, 95, 101] ccc => cc
Apply:  Pos: [100, 108] cc => I
Apply:  Pos: [102, 116] cc => I
Apply:  Pos: [104, 111, 113] ccc => cc
Apply:  Pos: [105, 109] cc => I
Apply:  Pos: [110, 118] cc => I
Apply:  Pos: [128, 133] cc => I
Apply:  Pos: [129, 135] cc => I
Apply:  Pos: [139, 145] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [152, 156] cc => I
Apply:  Pos: [154, 161] cc => I
Apply:  Pos: [158, 168] cc => I
Apply:  Pos: [166, 196] cc => I
Apply:  Pos: [167, 176] cc => I
Apply:  Pos: [170, 183] cc => I
Apply:  Pos: [178, 195] cc => I
Apply:  Pos: [187, 193] cc => I
Apply:  Pos: [190, 197] cc => I
Apply:  Pos: [192, 208, 211] ccc => cc
Apply:  Pos: [199, 206] cc => I
Apply:  Pos: [200, 210] cc => I
Apply:  Pos: [203, 212] cc => I
Apply:  Pos: [204, 209] cc => I
Apply:  Pos: [214, 239] cc => I
Apply:  Pos: [217, 223] cc => I
Apply:  Pos: [234, 245, 254] ccc => cc
Apply:  Pos: [241, 268] cc => I
Apply:  Pos: [253, 266] cc => I
Apply:  Pos: [263, 267] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 4], [16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [0, 3], [12, 10], [16, 5], [6, 4], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [0, 3], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [15, 19], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 16], [8, 15], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [19, 14], [1, 14], [11, 14], [4, 5], [19, 14], [9, 3], [11, 18], [5, 1], [8, 15], [4, 5], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [16, 0], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [10, 13], [12, 8], [15, 19], [16, 0], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [18, 7], [6, 2], [16, 5], [0, 3], [8, 15], [12, 15], [2, 8], [5, 9], [10, 13], [19, 14], [18, 7], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [11, 18], [3, 1], [4, 8], [9, 1], [16, 5], [10, 11], [12, 15], [19, 17], [1, 14], [5, 1], [11, 18], [14, 17], [12, 10], [2, 8], [2, 12], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [10, 13], [5, 1], [4, 16], [15, 9], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [10, 13], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  5.281224250793457

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 13]
[10, 21]
[62, 64]
[100, 110]
[140, 154]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[63, 67, 69]
[78, 81, 93]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[119, 124, 129]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 13]
[10, 21]
[62, 64]
[100, 110]
[140, 154]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2343950271606445

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 13] cc => I, Pos: [0, 13] cc => I, Pos: [10, 21] cc => I, Pos: [10, 21] cc => I, Pos: [62, 64] cc => I, Pos: [62, 64] cc => I, Pos: [63, 67, 69] ccc => cc, Pos: [78, 81, 93] ccc => cc, Pos: [100, 110] cc => I, Pos: [100, 110] cc => I, Pos: [119, 124, 129] ccc => cc, Pos: [140, 154] cc => I, Pos: [140, 154] cc => I]

Plan: 1
[Pos: [0, 13] cc => I,
 Pos: [10, 21] cc => I,
 Pos: [62, 64] cc => I,
 Pos: [63, 67, 69] ccc => cc,
 Pos: [78, 81, 93] ccc => cc,
 Pos: [100, 110] cc => I,
 Pos: [119, 124, 129] ccc => cc,
 Pos: [140, 154] cc => I]
Change: 8, Saving: 7

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.031131982803344727

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 13] cc => I,
 Pos: [10, 21] cc => I,
 Pos: [62, 64] cc => I,
 Pos: [63, 67, 69] ccc => cc,
 Pos: [78, 81, 93] ccc => cc,
 Pos: [100, 110] cc => I,
 Pos: [119, 124, 129] ccc => cc,
 Pos: [140, 154] cc => I]
Change: 8, Saving: 7

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 13] cc => I
Apply:  Pos: [10, 21] cc => I
Apply:  Pos: [62, 64] cc => I
Apply:  Pos: [63, 67, 69] ccc => cc
Apply:  Pos: [78, 81, 93] ccc => cc
Apply:  Pos: [100, 110] cc => I
Apply:  Pos: [119, 124, 129] ccc => cc
Apply:  Pos: [140, 154] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [12, 10], [16, 5], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [15, 19], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 15], [8, 16], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [1, 14], [11, 14], [4, 1], [9, 3], [11, 18], [5, 1], [8, 15], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [16, 3], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [10, 13], [12, 8], [15, 19], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [12, 15], [8, 15], [2, 8], [5, 9], [10, 13], [19, 14], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [2, 8], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [11, 9], [15, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  3.2655270099639893

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[83, 89, 99]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9531071186065674

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [83, 89, 99] ccc => cc]

Plan: 1
[Pos: [83, 89, 99] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015623807907104492

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [83, 89, 99] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [83, 89, 99] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [12, 10], [16, 5], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [15, 19], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 16], [8, 15], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [11, 14], [1, 14], [4, 1], [9, 3], [11, 18], [5, 1], [8, 15], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [16, 3], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [10, 18], [12, 8], [15, 19], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [8, 15], [12, 15], [2, 8], [5, 9], [19, 14], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 8], [2, 12], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [15, 9], [11, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  2.968730926513672

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9063048362731934

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[16, 0], [9, 1], [13, 18], [2, 12], [8, 15], [10, 11], [11, 18], [7, 17], [9, 19], [12, 10], [16, 5], [13, 11], [6, 2], [18, 7], [12, 8], [4, 16], [15, 9], [5, 1], [10, 11], [2, 8], [6, 2], [5, 3], [12, 8], [11, 9], [2, 12], [16, 5], [4, 8], [1, 14], [2, 8], [15, 19], [0, 3], [18, 17], [6, 4], [4, 8], [13, 11], [7, 17], [12, 10], [3, 1], [8, 5], [19, 17], [10, 11], [12, 15], [5, 3], [15, 9], [11, 19], [7, 14], [8, 15], [8, 16], [19, 14], [12, 8], [7, 14], [11, 19], [15, 9], [9, 1], [18, 7], [16, 5], [1, 14], [11, 14], [4, 1], [9, 3], [11, 18], [5, 1], [8, 15], [7, 14], [15, 11], [5, 3], [11, 9], [1, 14], [8, 15], [9, 3], [2, 12], [16, 3], [4, 5], [15, 11], [0, 3], [2, 8], [19, 7], [10, 11], [15, 9], [6, 2], [7, 14], [4, 8], [14, 17], [10, 18], [12, 8], [15, 19], [5, 3], [7, 17], [2, 15], [13, 18], [9, 3], [1, 14], [6, 2], [16, 5], [0, 3], [12, 15], [8, 15], [2, 8], [5, 9], [19, 14], [11, 18], [9, 19], [2, 15], [5, 3], [13, 18], [15, 19], [5, 9], [6, 2], [10, 11], [3, 1], [4, 8], [9, 1], [16, 5], [11, 18], [12, 15], [19, 17], [1, 14], [5, 1], [14, 17], [12, 10], [2, 12], [2, 8], [15, 11], [9, 1], [2, 15], [1, 14], [10, 11], [11, 19], [5, 1], [4, 16], [11, 9], [15, 9], [16, 0], [6, 2], [19, 17], [10, 18], [3, 1], [12, 15], [14, 17], [6, 4], [16, 5], [2, 15], [11, 19], [7, 17], [9, 19], [15, 11], [5, 1], [14, 17], [12, 15], [13, 18], [4, 5], [9, 3], [11, 19], [7, 17], [15, 9], [5, 3], [1, 14], [19, 7], [4, 5], [8, 15], [13, 11], [7, 14], [9, 1], [8, 5], [15, 19], [18, 7], [19, 17], [11, 9], ----End Timer [Execute Mapping]:  2.9063048362731934

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [168] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 336

Reduced: 
 - size: 102 (37.78%)
 - depth: 5 (11.11%)

