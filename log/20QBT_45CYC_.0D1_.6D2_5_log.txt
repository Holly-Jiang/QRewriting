----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.1569652557373047

[4, 2], [6, 12], [0, 3], [10, 18], [7, 1], [4, 6], [0, 18], [2, 16], [11, 1], [9, 7], [12, 10], [3, 8], [4, 6], [9, 7], [8, 14], [19, 3], [17, 0], [2, 16], [5, 11], [12, 10], [4, 6], [5, 15], [2, 12], [10, 18], [1, 13], [17, 0], [9, 7], [6, 12], [19, 3], [17, 0], [10, 18], [2, 16], [9, 7], [6, 5], [0, 3], [9, 18], [11, 7], [16, 10], [6, 5], [17, 3], [2, 12], [19, 0], [11, 9], [6, 5], [16, 10], [18, 8], [0, 3], [2, 12], [6, 12], [16, 19], [1, 13], [11, 7], [17, 3], [18, 8], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [12, 5], [0, 18], [9, 7], [6, 11], [3, 8], [19, 17], [9, 18], [13, 14], [12, 5], [7, 1], [17, 3], [0, 9], [11, 1], [2, 12], [16, 19], [18, 14], [17, 3], [16, 19], [9, 7], [6, 12], [10, 18], [19, 17], [12, 10], [11, 1], [0, 9], [8, 13], [6, 5], [16, 19], [10, 18], [6, 5], [0, 9], [19, 17], [15, 7], [8, 13], [12, 10], [4, 2], [6, 11], [19, 17], [5, 15], [18, 14], [3, 8], [12, 11], [9, 1], [2, 10], [17, 3], [13, 14], [9, 18], [11, 1], [6, 5], [10, 0], [3, 8], [13, 14], [9, 7], [16, 10], [5, 15], [0, 18], [3, 8], [5, 15], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [7, 1], [12, 10], [0, 18], [8, 13], [9, 7], [6, 5], [19, 0], [17, 3], [2, 12], [8, 13], [4, 2], [17, 0], [16, 19], [7, 1], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [16, 19], [11, 7], [8, 14], [12, 5], [10, 9], [19, 3], [2, 16], [17, 0], [8, 14], [18, 13], [11, 1], [6, 12], [2, 16], [17, 0], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [18, 13], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [15, 7], [8, 14], [15, 7], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [18, 13], [6, 5], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [6, 5], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [1, 13], [4, 2], [10, 0], [5, 11], [16, 12], [8, 14], [15, 7], [9, 1], [19, 3], [8, 14], [2, 16], [15, 7], [1, 13], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [5, 15], [8, 13], [19, 3], [11, 7], [9, 1], [4, 6], [16, 10], [8, 13], [5, 15], [19, 0], [2, 12], [11, 7], [19, 0], [5, 15], [3, 8], [9, 1], [2, 12], [4, 6], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [5, 15], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [13, 14], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], [13, 14], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 12]
[9, 13]
[7, 17]
[10, 19]
[12, 20]
[16, 25]
[13, 26]
[15, 28]
[25, 29]
[23, 30]
[17, 31]
[26, 32]
[33, 38]
[38, 43]
[37, 44]
[40, 47]
[24, 50]
[36, 51]
[45, 53]
[64, 72]
[74, 80]
[78, 81]
[76, 87]
[90, 93]
[88, 94]
[89, 97]
[95, 101]
[109, 115]
[114, 120]
[118, 121]
[130, 136]
[136, 141]
[139, 149]
[151, 157]
[155, 161]
[156, 162]
[157, 164]
[158, 168]
[174, 176]
[176, 184]
[177, 187]
[187, 193]
[188, 194]
[196, 205]
[205, 209]
[206, 211]
[222, 228]
[221, 229]
[219, 231]
[224, 232]
[230, 233]
[229, 234]
[225, 236]
[231, 237]
[226, 238]
[236, 241]
[234, 247]
[256, 269]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[75, 82, 88]
[81, 85, 91]
[86, 92, 98]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[84, 86, 92]
[85, 91, 95]
[104, 108, 114]
[102, 112, 118]
[127, 131, 140]
[200, 207, 212]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 12]
[9, 13]
[7, 17]
[10, 19]
[12, 20]
[16, 25]
[13, 26]
[15, 28]
[25, 29]
[23, 30]
[17, 31]
[26, 32]
[33, 38]
[38, 43]
[37, 44]
[40, 47]
[24, 50]
[36, 51]
[45, 53]
[64, 72]
[74, 80]
[78, 81]
[76, 87]
[90, 93]
[88, 94]
[89, 97]
[95, 101]
[109, 115]
[114, 120]
[118, 121]
[130, 136]
[136, 141]
[139, 149]
[151, 157]
[155, 161]
[156, 162]
[157, 164]
[158, 168]
[174, 176]
[176, 184]
[177, 187]
[187, 193]
[188, 194]
[196, 205]
[205, 209]
[206, 211]
[222, 228]
[221, 229]
[219, 231]
[224, 232]
[230, 233]
[229, 234]
[225, 236]
[231, 237]
[226, 238]
[236, 241]
[234, 247]
[256, 269]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.202321767807007

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 12] cc => I, Pos: [5, 12] cc => I, Pos: [7, 17] cc => I, Pos: [7, 17] cc => I, Pos: [9, 13] cc => I, Pos: [9, 13] cc => I, Pos: [10, 19] cc => I, Pos: [10, 19] cc => I, Pos: [12, 20] cc => I, Pos: [12, 20] cc => I, Pos: [13, 26] cc => I, Pos: [13, 26] cc => I, Pos: [15, 28] cc => I, Pos: [15, 28] cc => I, Pos: [16, 25] cc => I, Pos: [16, 25] cc => I, Pos: [17, 31] cc => I, Pos: [17, 31] cc => I, Pos: [23, 30] cc => I, Pos: [23, 30] cc => I, Pos: [24, 50] cc => I, Pos: [24, 50] cc => I, Pos: [25, 29] cc => I, Pos: [25, 29] cc => I, Pos: [26, 32] cc => I, Pos: [26, 32] cc => I, Pos: [33, 38] cc => I, Pos: [33, 38] cc => I, Pos: [36, 51] cc => I, Pos: [36, 51] cc => I, Pos: [37, 44] cc => I, Pos: [37, 44] cc => I, Pos: [38, 43] cc => I, Pos: [38, 43] cc => I, Pos: [40, 47] cc => I, Pos: [40, 47] cc => I, Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [74, 80] cc => I, Pos: [74, 80] cc => I, Pos: [75, 82, 88] ccc => cc, Pos: [76, 87] cc => I, Pos: [76, 87] cc => I, Pos: [78, 81] cc => I, Pos: [78, 81] cc => I, Pos: [81, 85, 91] ccc => cc, Pos: [84, 86, 92] ccc => cc, Pos: [85, 91, 95] ccc => cc, Pos: [86, 92, 98] ccc => cc, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 97] cc => I, Pos: [89, 97] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [95, 101] cc => I, Pos: [95, 101] cc => I, Pos: [102, 112, 118] ccc => cc, Pos: [104, 108, 114] ccc => cc, Pos: [109, 115] cc => I, Pos: [109, 115] cc => I, Pos: [114, 120] cc => I, Pos: [114, 120] cc => I, Pos: [118, 121] cc => I, Pos: [118, 121] cc => I, Pos: [127, 131, 140] ccc => cc, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [136, 141] cc => I, Pos: [136, 141] cc => I, Pos: [139, 149] cc => I, Pos: [139, 149] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [156, 162] cc => I, Pos: [156, 162] cc => I, Pos: [157, 164] cc => I, Pos: [157, 164] cc => I, Pos: [158, 168] cc => I, Pos: [158, 168] cc => I, Pos: [174, 176] cc => I, Pos: [174, 176] cc => I, Pos: [176, 184] cc => I, Pos: [176, 184] cc => I, Pos: [177, 187] cc => I, Pos: [177, 187] cc => I, Pos: [187, 193] cc => I, Pos: [187, 193] cc => I, Pos: [188, 194] cc => I, Pos: [188, 194] cc => I, Pos: [196, 205] cc => I, Pos: [196, 205] cc => I, Pos: [200, 207, 212] ccc => cc, Pos: [205, 209] cc => I, Pos: [205, 209] cc => I, Pos: [206, 211] cc => I, Pos: [206, 211] cc => I, Pos: [219, 231] cc => I, Pos: [219, 231] cc => I, Pos: [221, 229] cc => I, Pos: [221, 229] cc => I, Pos: [222, 228] cc => I, Pos: [222, 228] cc => I, Pos: [224, 232] cc => I, Pos: [224, 232] cc => I, Pos: [225, 236] cc => I, Pos: [225, 236] cc => I, Pos: [226, 238] cc => I, Pos: [226, 238] cc => I, Pos: [229, 234] cc => I, Pos: [229, 234] cc => I, Pos: [230, 233] cc => I, Pos: [230, 233] cc => I, Pos: [231, 237] cc => I, Pos: [231, 237] cc => I, Pos: [234, 247] cc => I, Pos: [234, 247] cc => I, Pos: [236, 241] cc => I, Pos: [236, 241] cc => I, Pos: [256, 269] cc => I, Pos: [256, 269] cc => I]

Plan: 1
[Pos: [5, 12] cc => I,
 Pos: [7, 17] cc => I,
 Pos: [9, 13] cc => I,
 Pos: [10, 19] cc => I,
 Pos: [15, 28] cc => I,
 Pos: [16, 25] cc => I,
 Pos: [23, 30] cc => I,
 Pos: [24, 50] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [33, 38] cc => I,
 Pos: [36, 51] cc => I,
 Pos: [37, 44] cc => I,
 Pos: [40, 47] cc => I,
 Pos: [45, 53] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [74, 80] cc => I,
 Pos: [75, 82, 88] ccc => cc,
 Pos: [76, 87] cc => I,
 Pos: [78, 81] cc => I,
 Pos: [84, 86, 92] ccc => cc,
 Pos: [85, 91, 95] ccc => cc,
 Pos: [89, 97] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [102, 112, 118] ccc => cc,
 Pos: [104, 108, 114] ccc => cc,
 Pos: [109, 115] cc => I,
 Pos: [127, 131, 140] ccc => cc,
 Pos: [130, 136] cc => I,
 Pos: [139, 149] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [156, 162] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [174, 176] cc => I,
 Pos: [177, 187] cc => I,
 Pos: [188, 194] cc => I,
 Pos: [196, 205] cc => I,
 Pos: [200, 207, 212] ccc => cc,
 Pos: [206, 211] cc => I,
 Pos: [219, 231] cc => I,
 Pos: [221, 229] cc => I,
 Pos: [222, 228] cc => I,
 Pos: [224, 232] cc => I,
 Pos: [225, 236] cc => I,
 Pos: [226, 238] cc => I,
 Pos: [230, 233] cc => I,
 Pos: [234, 247] cc => I,
 Pos: [256, 269] cc => I]
Change: 48, Saving: 178

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 12] cc => I,
 Pos: [7, 17] cc => I,
 Pos: [9, 13] cc => I,
 Pos: [10, 19] cc => I,
 Pos: [15, 28] cc => I,
 Pos: [16, 25] cc => I,
 Pos: [23, 30] cc => I,
 Pos: [24, 50] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [33, 38] cc => I,
 Pos: [36, 51] cc => I,
 Pos: [37, 44] cc => I,
 Pos: [40, 47] cc => I,
 Pos: [45, 53] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [74, 80] cc => I,
 Pos: [75, 82, 88] ccc => cc,
 Pos: [76, 87] cc => I,
 Pos: [78, 81] cc => I,
 Pos: [84, 86, 92] ccc => cc,
 Pos: [85, 91, 95] ccc => cc,
 Pos: [89, 97] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [102, 112, 118] ccc => cc,
 Pos: [104, 108, 114] ccc => cc,
 Pos: [109, 115] cc => I,
 Pos: [127, 131, 140] ccc => cc,
 Pos: [130, 136] cc => I,
 Pos: [139, 149] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [156, 162] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [174, 176] cc => I,
 Pos: [177, 187] cc => I,
 Pos: [188, 194] cc => I,
 Pos: [196, 205] cc => I,
 Pos: [200, 207, 212] ccc => cc,
 Pos: [206, 211] cc => I,
 Pos: [219, 231] cc => I,
 Pos: [221, 229] cc => I,
 Pos: [222, 228] cc => I,
 Pos: [224, 232] cc => I,
 Pos: [225, 236] cc => I,
 Pos: [226, 238] cc => I,
 Pos: [230, 233] cc => I,
 Pos: [234, 247] cc => I,
 Pos: [256, 269] cc => I]
Change: 48, Saving: 178

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 12] cc => I
Apply:  Pos: [7, 17] cc => I
Apply:  Pos: [9, 13] cc => I
Apply:  Pos: [10, 19] cc => I
Apply:  Pos: [15, 28] cc => I
Apply:  Pos: [16, 25] cc => I
Apply:  Pos: [23, 30] cc => I
Apply:  Pos: [24, 50] cc => I
Apply:  Pos: [26, 32] cc => I
Apply:  Pos: [33, 38] cc => I
Apply:  Pos: [36, 51] cc => I
Apply:  Pos: [37, 44] cc => I
Apply:  Pos: [40, 47] cc => I
Apply:  Pos: [45, 53] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [74, 80] cc => I
Apply:  Pos: [75, 82, 88] ccc => cc
Apply:  Pos: [76, 87] cc => I
Apply:  Pos: [78, 81] cc => I
Apply:  Pos: [84, 86, 92] ccc => cc
Apply:  Pos: [85, 91, 95] ccc => cc
Apply:  Pos: [89, 97] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [102, 112, 118] ccc => cc
Apply:  Pos: [104, 108, 114] ccc => cc
Apply:  Pos: [109, 115] cc => I
Apply:  Pos: [127, 131, 140] ccc => cc
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [139, 149] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [156, 162] cc => I
Apply:  Pos: [158, 168] cc => I
Apply:  Pos: [174, 176] cc => I
Apply:  Pos: [177, 187] cc => I
Apply:  Pos: [188, 194] cc => I
Apply:  Pos: [196, 205] cc => I
Apply:  Pos: [200, 207, 212] ccc => cc
Apply:  Pos: [206, 211] cc => I
Apply:  Pos: [219, 231] cc => I
Apply:  Pos: [221, 229] cc => I
Apply:  Pos: [222, 228] cc => I
Apply:  Pos: [224, 232] cc => I
Apply:  Pos: [225, 236] cc => I
Apply:  Pos: [226, 238] cc => I
Apply:  Pos: [230, 233] cc => I
Apply:  Pos: [234, 247] cc => I
Apply:  Pos: [256, 269] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [6, 12], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [4, 6], [5, 15], [2, 12], [6, 12], [17, 0], [2, 16], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [6, 5], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [0, 18], [9, 7], [6, 11], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [18, 14], [9, 7], [6, 12], [12, 10], [16, 19], [10, 18], [19, 17], [0, 9], [15, 7], [12, 10], [4, 2], [6, 11], [19, 17], [6, 5], [18, 14], [17, 3], [12, 11], [9, 1], [2, 10], [3, 8], [9, 18], [11, 1], [5, 15], [10, 0], [9, 7], [16, 10], [0, 18], [3, 8], [5, 15], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [9, 7], [12, 10], [0, 18], [7, 1], [6, 5], [19, 0], [17, 3], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  5.202321767807007

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 57]
[52, 58]
[65, 73]
[68, 74]
[70, 80]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[34, 40, 50]
[49, 51, 55]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[1, 10, 12]
[11, 21, 27]
[40, 50, 52]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 57]
[52, 58]
[65, 73]
[68, 74]
[70, 80]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2343599796295166

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 10, 12] ccc => cc, Pos: [11, 21, 27] ccc => cc, Pos: [34, 40, 50] ccc => cc, Pos: [38, 57] cc => I, Pos: [38, 57] cc => I, Pos: [40, 50, 52] ccc => cc, Pos: [49, 51, 55] ccc => cc, Pos: [52, 58] cc => I, Pos: [52, 58] cc => I, Pos: [65, 73] cc => I, Pos: [65, 73] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [70, 80] cc => I, Pos: [70, 80] cc => I]

Plan: 1
[Pos: [1, 10, 12] ccc => cc,
 Pos: [11, 21, 27] ccc => cc,
 Pos: [34, 40, 50] ccc => cc,
 Pos: [38, 57] cc => I,
 Pos: [49, 51, 55] ccc => cc,
 Pos: [52, 58] cc => I,
 Pos: [65, 73] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [70, 80] cc => I]
Change: 9, Saving: 28

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 10, 12] ccc => cc,
 Pos: [11, 21, 27] ccc => cc,
 Pos: [34, 40, 50] ccc => cc,
 Pos: [38, 57] cc => I,
 Pos: [49, 51, 55] ccc => cc,
 Pos: [52, 58] cc => I,
 Pos: [65, 73] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [70, 80] cc => I]
Change: 9, Saving: 28

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 10, 12] ccc => cc
Apply:  Pos: [11, 21, 27] ccc => cc
Apply:  Pos: [34, 40, 50] ccc => cc
Apply:  Pos: [38, 57] cc => I
Apply:  Pos: [49, 51, 55] ccc => cc
Apply:  Pos: [52, 58] cc => I
Apply:  Pos: [65, 73] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [70, 80] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [4, 6], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [6, 12], [6, 5], [2, 12], [17, 0], [2, 16], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [5, 15], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [18, 14], [9, 7], [6, 12], [12, 18], [10, 18], [0, 9], [15, 7], [4, 2], [6, 5], [18, 14], [17, 3], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [7, 1], [6, 5], [19, 0], [17, 3], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  3.2499802112579346

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[12, 22]
[51, 70]
[53, 72]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[12, 22]
[51, 70]
[53, 72]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.937537670135498

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 22] cc => I, Pos: [12, 22] cc => I, Pos: [51, 70] cc => I, Pos: [51, 70] cc => I, Pos: [53, 72] cc => I, Pos: [53, 72] cc => I]

Plan: 1
[Pos: [12, 22] cc => I, Pos: [51, 70] cc => I, Pos: [53, 72] cc => I]
Change: 3, Saving: 12

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 22] cc => I, Pos: [51, 70] cc => I, Pos: [53, 72] cc => I]
Change: 3, Saving: 12

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 22] cc => I
Apply:  Pos: [51, 70] cc => I
Apply:  Pos: [53, 72] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 6], [4, 2], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [6, 5], [2, 12], [17, 0], [2, 16], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [5, 15], [0, 3], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [18, 14], [9, 7], [6, 12], [10, 18], [12, 18], [0, 9], [15, 7], [4, 2], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [7, 1], [19, 0], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  2.937537670135498

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.828096389770508

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[4, 2], [4, 6], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [6, 5], [2, 12], [17, 0], [2, 16], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [5, 15], [0, 3], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [18, 14], [9, 7], [6, 12], [12, 18], [10, 18], [0, 9], [15, 7], [4, 2], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [7, 1], [19, 0], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  2.828096389770508

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [161] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 322

Reduced: 
 - size: 109 (40.37%)
 - cycle: 218 (40.37%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936737060546875

[4, 2], [6, 12], [0, 3], [10, 18], [7, 1], [4, 6], [0, 18], [2, 16], [11, 1], [9, 7], [12, 10], [3, 8], [4, 6], [9, 7], [8, 14], [19, 3], [17, 0], [2, 16], [5, 11], [12, 10], [4, 6], [5, 15], [2, 12], [10, 18], [1, 13], [17, 0], [9, 7], [6, 12], [19, 3], [17, 0], [10, 18], [2, 16], [9, 7], [6, 5], [0, 3], [9, 18], [11, 7], [16, 10], [6, 5], [17, 3], [2, 12], [19, 0], [11, 9], [6, 5], [16, 10], [18, 8], [0, 3], [2, 12], [6, 12], [16, 19], [1, 13], [11, 7], [17, 3], [18, 8], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [12, 5], [0, 18], [9, 7], [6, 11], [3, 8], [19, 17], [9, 18], [13, 14], [12, 5], [7, 1], [17, 3], [0, 9], [11, 1], [2, 12], [16, 19], [18, 14], [17, 3], [16, 19], [9, 7], [6, 12], [10, 18], [19, 17], [12, 10], [11, 1], [0, 9], [8, 13], [6, 5], [16, 19], [10, 18], [6, 5], [0, 9], [19, 17], [15, 7], [8, 13], [12, 10], [4, 2], [6, 11], [19, 17], [5, 15], [18, 14], [3, 8], [12, 11], [9, 1], [2, 10], [17, 3], [13, 14], [9, 18], [11, 1], [6, 5], [10, 0], [3, 8], [13, 14], [9, 7], [16, 10], [5, 15], [0, 18], [3, 8], [5, 15], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [7, 1], [12, 10], [0, 18], [8, 13], [9, 7], [6, 5], [19, 0], [17, 3], [2, 12], [8, 13], [4, 2], [17, 0], [16, 19], [7, 1], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [16, 19], [11, 7], [8, 14], [12, 5], [10, 9], [19, 3], [2, 16], [17, 0], [8, 14], [18, 13], [11, 1], [6, 12], [2, 16], [17, 0], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [18, 13], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [15, 7], [8, 14], [15, 7], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [18, 13], [6, 5], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [6, 5], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [1, 13], [4, 2], [10, 0], [5, 11], [16, 12], [8, 14], [15, 7], [9, 1], [19, 3], [8, 14], [2, 16], [15, 7], [1, 13], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [5, 15], [8, 13], [19, 3], [11, 7], [9, 1], [4, 6], [16, 10], [8, 13], [5, 15], [19, 0], [2, 12], [11, 7], [19, 0], [5, 15], [3, 8], [9, 1], [2, 12], [4, 6], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [5, 15], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [13, 14], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], [13, 14], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 12]
[9, 13]
[7, 17]
[10, 19]
[12, 20]
[16, 25]
[13, 26]
[15, 28]
[25, 29]
[23, 30]
[17, 31]
[26, 32]
[33, 38]
[38, 43]
[37, 44]
[40, 47]
[24, 50]
[36, 51]
[45, 53]
[64, 72]
[74, 80]
[78, 81]
[76, 87]
[90, 93]
[88, 94]
[89, 97]
[95, 101]
[109, 115]
[114, 120]
[118, 121]
[130, 136]
[136, 141]
[139, 149]
[151, 157]
[155, 161]
[156, 162]
[157, 164]
[158, 168]
[174, 176]
[176, 184]
[177, 187]
[187, 193]
[188, 194]
[196, 205]
[205, 209]
[206, 211]
[222, 228]
[221, 229]
[219, 231]
[224, 232]
[230, 233]
[229, 234]
[225, 236]
[231, 237]
[226, 238]
[236, 241]
[234, 247]
[256, 269]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[75, 82, 88]
[81, 85, 91]
[86, 92, 98]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[84, 86, 92]
[85, 91, 95]
[104, 108, 114]
[102, 112, 118]
[127, 131, 140]
[200, 207, 212]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 12]
[9, 13]
[7, 17]
[10, 19]
[12, 20]
[16, 25]
[13, 26]
[15, 28]
[25, 29]
[23, 30]
[17, 31]
[26, 32]
[33, 38]
[38, 43]
[37, 44]
[40, 47]
[24, 50]
[36, 51]
[45, 53]
[64, 72]
[74, 80]
[78, 81]
[76, 87]
[90, 93]
[88, 94]
[89, 97]
[95, 101]
[109, 115]
[114, 120]
[118, 121]
[130, 136]
[136, 141]
[139, 149]
[151, 157]
[155, 161]
[156, 162]
[157, 164]
[158, 168]
[174, 176]
[176, 184]
[177, 187]
[187, 193]
[188, 194]
[196, 205]
[205, 209]
[206, 211]
[222, 228]
[221, 229]
[219, 231]
[224, 232]
[230, 233]
[229, 234]
[225, 236]
[231, 237]
[226, 238]
[236, 241]
[234, 247]
[256, 269]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.140640020370483

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 12] cc => I, Pos: [5, 12] cc => I, Pos: [7, 17] cc => I, Pos: [7, 17] cc => I, Pos: [9, 13] cc => I, Pos: [9, 13] cc => I, Pos: [10, 19] cc => I, Pos: [10, 19] cc => I, Pos: [12, 20] cc => I, Pos: [12, 20] cc => I, Pos: [13, 26] cc => I, Pos: [13, 26] cc => I, Pos: [15, 28] cc => I, Pos: [15, 28] cc => I, Pos: [16, 25] cc => I, Pos: [16, 25] cc => I, Pos: [17, 31] cc => I, Pos: [17, 31] cc => I, Pos: [23, 30] cc => I, Pos: [23, 30] cc => I, Pos: [24, 50] cc => I, Pos: [24, 50] cc => I, Pos: [25, 29] cc => I, Pos: [25, 29] cc => I, Pos: [26, 32] cc => I, Pos: [26, 32] cc => I, Pos: [33, 38] cc => I, Pos: [33, 38] cc => I, Pos: [36, 51] cc => I, Pos: [36, 51] cc => I, Pos: [37, 44] cc => I, Pos: [37, 44] cc => I, Pos: [38, 43] cc => I, Pos: [38, 43] cc => I, Pos: [40, 47] cc => I, Pos: [40, 47] cc => I, Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [74, 80] cc => I, Pos: [74, 80] cc => I, Pos: [75, 82, 88] ccc => cc, Pos: [76, 87] cc => I, Pos: [76, 87] cc => I, Pos: [78, 81] cc => I, Pos: [78, 81] cc => I, Pos: [81, 85, 91] ccc => cc, Pos: [84, 86, 92] ccc => cc, Pos: [85, 91, 95] ccc => cc, Pos: [86, 92, 98] ccc => cc, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 97] cc => I, Pos: [89, 97] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [95, 101] cc => I, Pos: [95, 101] cc => I, Pos: [102, 112, 118] ccc => cc, Pos: [104, 108, 114] ccc => cc, Pos: [109, 115] cc => I, Pos: [109, 115] cc => I, Pos: [114, 120] cc => I, Pos: [114, 120] cc => I, Pos: [118, 121] cc => I, Pos: [118, 121] cc => I, Pos: [127, 131, 140] ccc => cc, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [136, 141] cc => I, Pos: [136, 141] cc => I, Pos: [139, 149] cc => I, Pos: [139, 149] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [156, 162] cc => I, Pos: [156, 162] cc => I, Pos: [157, 164] cc => I, Pos: [157, 164] cc => I, Pos: [158, 168] cc => I, Pos: [158, 168] cc => I, Pos: [174, 176] cc => I, Pos: [174, 176] cc => I, Pos: [176, 184] cc => I, Pos: [176, 184] cc => I, Pos: [177, 187] cc => I, Pos: [177, 187] cc => I, Pos: [187, 193] cc => I, Pos: [187, 193] cc => I, Pos: [188, 194] cc => I, Pos: [188, 194] cc => I, Pos: [196, 205] cc => I, Pos: [196, 205] cc => I, Pos: [200, 207, 212] ccc => cc, Pos: [205, 209] cc => I, Pos: [205, 209] cc => I, Pos: [206, 211] cc => I, Pos: [206, 211] cc => I, Pos: [219, 231] cc => I, Pos: [219, 231] cc => I, Pos: [221, 229] cc => I, Pos: [221, 229] cc => I, Pos: [222, 228] cc => I, Pos: [222, 228] cc => I, Pos: [224, 232] cc => I, Pos: [224, 232] cc => I, Pos: [225, 236] cc => I, Pos: [225, 236] cc => I, Pos: [226, 238] cc => I, Pos: [226, 238] cc => I, Pos: [229, 234] cc => I, Pos: [229, 234] cc => I, Pos: [230, 233] cc => I, Pos: [230, 233] cc => I, Pos: [231, 237] cc => I, Pos: [231, 237] cc => I, Pos: [234, 247] cc => I, Pos: [234, 247] cc => I, Pos: [236, 241] cc => I, Pos: [236, 241] cc => I, Pos: [256, 269] cc => I, Pos: [256, 269] cc => I]

Plan: 1
[Pos: [5, 12] cc => I,
 Pos: [7, 17] cc => I,
 Pos: [9, 13] cc => I,
 Pos: [10, 19] cc => I,
 Pos: [15, 28] cc => I,
 Pos: [16, 25] cc => I,
 Pos: [23, 30] cc => I,
 Pos: [24, 50] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [33, 38] cc => I,
 Pos: [36, 51] cc => I,
 Pos: [37, 44] cc => I,
 Pos: [40, 47] cc => I,
 Pos: [45, 53] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [74, 80] cc => I,
 Pos: [75, 82, 88] ccc => cc,
 Pos: [76, 87] cc => I,
 Pos: [78, 81] cc => I,
 Pos: [84, 86, 92] ccc => cc,
 Pos: [85, 91, 95] ccc => cc,
 Pos: [89, 97] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [102, 112, 118] ccc => cc,
 Pos: [104, 108, 114] ccc => cc,
 Pos: [109, 115] cc => I,
 Pos: [127, 131, 140] ccc => cc,
 Pos: [130, 136] cc => I,
 Pos: [139, 149] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [156, 162] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [174, 176] cc => I,
 Pos: [177, 187] cc => I,
 Pos: [188, 194] cc => I,
 Pos: [196, 205] cc => I,
 Pos: [200, 207, 212] ccc => cc,
 Pos: [206, 211] cc => I,
 Pos: [219, 231] cc => I,
 Pos: [221, 229] cc => I,
 Pos: [222, 228] cc => I,
 Pos: [224, 232] cc => I,
 Pos: [225, 236] cc => I,
 Pos: [226, 238] cc => I,
 Pos: [230, 233] cc => I,
 Pos: [234, 247] cc => I,
 Pos: [256, 269] cc => I]
Change: 48, Saving: 49

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.10935330390930176

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 12] cc => I,
 Pos: [7, 17] cc => I,
 Pos: [9, 13] cc => I,
 Pos: [10, 19] cc => I,
 Pos: [15, 28] cc => I,
 Pos: [16, 25] cc => I,
 Pos: [23, 30] cc => I,
 Pos: [24, 50] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [33, 38] cc => I,
 Pos: [36, 51] cc => I,
 Pos: [37, 44] cc => I,
 Pos: [40, 47] cc => I,
 Pos: [45, 53] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [74, 80] cc => I,
 Pos: [75, 82, 88] ccc => cc,
 Pos: [76, 87] cc => I,
 Pos: [78, 81] cc => I,
 Pos: [84, 86, 92] ccc => cc,
 Pos: [85, 91, 95] ccc => cc,
 Pos: [89, 97] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [102, 112, 118] ccc => cc,
 Pos: [104, 108, 114] ccc => cc,
 Pos: [109, 115] cc => I,
 Pos: [127, 131, 140] ccc => cc,
 Pos: [130, 136] cc => I,
 Pos: [139, 149] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [156, 162] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [174, 176] cc => I,
 Pos: [177, 187] cc => I,
 Pos: [188, 194] cc => I,
 Pos: [196, 205] cc => I,
 Pos: [200, 207, 212] ccc => cc,
 Pos: [206, 211] cc => I,
 Pos: [219, 231] cc => I,
 Pos: [221, 229] cc => I,
 Pos: [222, 228] cc => I,
 Pos: [224, 232] cc => I,
 Pos: [225, 236] cc => I,
 Pos: [226, 238] cc => I,
 Pos: [230, 233] cc => I,
 Pos: [234, 247] cc => I,
 Pos: [256, 269] cc => I]
Change: 48, Saving: 49

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 12] cc => I
Apply:  Pos: [7, 17] cc => I
Apply:  Pos: [9, 13] cc => I
Apply:  Pos: [10, 19] cc => I
Apply:  Pos: [15, 28] cc => I
Apply:  Pos: [16, 25] cc => I
Apply:  Pos: [23, 30] cc => I
Apply:  Pos: [24, 50] cc => I
Apply:  Pos: [26, 32] cc => I
Apply:  Pos: [33, 38] cc => I
Apply:  Pos: [36, 51] cc => I
Apply:  Pos: [37, 44] cc => I
Apply:  Pos: [40, 47] cc => I
Apply:  Pos: [45, 53] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [74, 80] cc => I
Apply:  Pos: [75, 82, 88] ccc => cc
Apply:  Pos: [76, 87] cc => I
Apply:  Pos: [78, 81] cc => I
Apply:  Pos: [84, 86, 92] ccc => cc
Apply:  Pos: [85, 91, 95] ccc => cc
Apply:  Pos: [89, 97] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [102, 112, 118] ccc => cc
Apply:  Pos: [104, 108, 114] ccc => cc
Apply:  Pos: [109, 115] cc => I
Apply:  Pos: [127, 131, 140] ccc => cc
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [139, 149] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [156, 162] cc => I
Apply:  Pos: [158, 168] cc => I
Apply:  Pos: [174, 176] cc => I
Apply:  Pos: [177, 187] cc => I
Apply:  Pos: [188, 194] cc => I
Apply:  Pos: [196, 205] cc => I
Apply:  Pos: [200, 207, 212] ccc => cc
Apply:  Pos: [206, 211] cc => I
Apply:  Pos: [219, 231] cc => I
Apply:  Pos: [221, 229] cc => I
Apply:  Pos: [222, 228] cc => I
Apply:  Pos: [224, 232] cc => I
Apply:  Pos: [225, 236] cc => I
Apply:  Pos: [226, 238] cc => I
Apply:  Pos: [230, 233] cc => I
Apply:  Pos: [234, 247] cc => I
Apply:  Pos: [256, 269] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [6, 12], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [4, 6], [5, 15], [2, 12], [6, 12], [17, 0], [2, 16], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [6, 5], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [0, 18], [9, 7], [6, 11], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [18, 14], [9, 7], [6, 12], [12, 10], [16, 19], [10, 18], [19, 17], [0, 9], [15, 7], [12, 10], [4, 2], [6, 11], [19, 17], [6, 5], [18, 14], [17, 3], [12, 11], [9, 1], [2, 10], [3, 8], [9, 18], [11, 1], [5, 15], [10, 0], [9, 7], [16, 10], [0, 18], [3, 8], [5, 15], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [9, 7], [12, 10], [0, 18], [7, 1], [6, 5], [19, 0], [17, 3], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  5.249993324279785

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 57]
[52, 58]
[65, 73]
[68, 74]
[70, 80]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[34, 40, 50]
[49, 51, 55]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[1, 10, 12]
[11, 21, 27]
[40, 50, 52]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 57]
[52, 58]
[65, 73]
[68, 74]
[70, 80]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2031867504119873

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 10, 12] ccc => cc, Pos: [11, 21, 27] ccc => cc, Pos: [34, 40, 50] ccc => cc, Pos: [38, 57] cc => I, Pos: [38, 57] cc => I, Pos: [40, 50, 52] ccc => cc, Pos: [49, 51, 55] ccc => cc, Pos: [52, 58] cc => I, Pos: [52, 58] cc => I, Pos: [65, 73] cc => I, Pos: [65, 73] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [70, 80] cc => I, Pos: [70, 80] cc => I]

Plan: 1
[Pos: [1, 10, 12] ccc => cc,
 Pos: [11, 21, 27] ccc => cc,
 Pos: [34, 40, 50] ccc => cc,
 Pos: [38, 57] cc => I,
 Pos: [49, 51, 55] ccc => cc,
 Pos: [52, 58] cc => I,
 Pos: [65, 73] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [70, 80] cc => I]
Change: 9, Saving: 11

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.031234264373779297

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 10, 12] ccc => cc,
 Pos: [11, 21, 27] ccc => cc,
 Pos: [34, 40, 50] ccc => cc,
 Pos: [38, 57] cc => I,
 Pos: [49, 51, 55] ccc => cc,
 Pos: [52, 58] cc => I,
 Pos: [65, 73] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [70, 80] cc => I]
Change: 9, Saving: 11

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 10, 12] ccc => cc
Apply:  Pos: [11, 21, 27] ccc => cc
Apply:  Pos: [34, 40, 50] ccc => cc
Apply:  Pos: [38, 57] cc => I
Apply:  Pos: [49, 51, 55] ccc => cc
Apply:  Pos: [52, 58] cc => I
Apply:  Pos: [65, 73] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [70, 80] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [4, 6], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [6, 12], [6, 5], [2, 12], [17, 0], [2, 16], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [5, 15], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [18, 14], [9, 7], [6, 12], [12, 18], [10, 18], [0, 9], [15, 7], [4, 2], [6, 5], [18, 14], [17, 3], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [7, 1], [6, 5], [19, 0], [17, 3], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  3.2344210147857666

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[12, 22]
[51, 70]
[53, 72]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[12, 22]
[51, 70]
[53, 72]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9063150882720947

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 22] cc => I, Pos: [12, 22] cc => I, Pos: [51, 70] cc => I, Pos: [51, 70] cc => I, Pos: [53, 72] cc => I, Pos: [53, 72] cc => I]

Plan: 1
[Pos: [12, 22] cc => I, Pos: [51, 70] cc => I, Pos: [53, 72] cc => I]
Change: 3, Saving: 3

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015642881393432617

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 22] cc => I, Pos: [51, 70] cc => I, Pos: [53, 72] cc => I]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 22] cc => I
Apply:  Pos: [51, 70] cc => I
Apply:  Pos: [53, 72] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 6], [4, 2], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [6, 5], [2, 12], [17, 0], [2, 16], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [5, 15], [0, 3], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [18, 14], [9, 7], [6, 12], [10, 18], [12, 18], [0, 9], [15, 7], [4, 2], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [7, 1], [19, 0], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  2.9219579696655273

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.781216859817505

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[4, 2], [4, 6], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [6, 5], [2, 12], [17, 0], [2, 16], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [5, 15], [0, 3], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [18, 14], [9, 7], [6, 12], [12, 18], [10, 18], [0, 9], [15, 7], [4, 2], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [7, 1], [19, 0], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  2.781216859817505

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [161] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 322

Reduced: 
 - size: 109 (40.37%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10937166213989258

[4, 2], [6, 12], [0, 3], [10, 18], [7, 1], [4, 6], [0, 18], [2, 16], [11, 1], [9, 7], [12, 10], [3, 8], [4, 6], [9, 7], [8, 14], [19, 3], [17, 0], [2, 16], [5, 11], [12, 10], [4, 6], [5, 15], [2, 12], [10, 18], [1, 13], [17, 0], [9, 7], [6, 12], [19, 3], [17, 0], [10, 18], [2, 16], [9, 7], [6, 5], [0, 3], [9, 18], [11, 7], [16, 10], [6, 5], [17, 3], [2, 12], [19, 0], [11, 9], [6, 5], [16, 10], [18, 8], [0, 3], [2, 12], [6, 12], [16, 19], [1, 13], [11, 7], [17, 3], [18, 8], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [12, 5], [0, 18], [9, 7], [6, 11], [3, 8], [19, 17], [9, 18], [13, 14], [12, 5], [7, 1], [17, 3], [0, 9], [11, 1], [2, 12], [16, 19], [18, 14], [17, 3], [16, 19], [9, 7], [6, 12], [10, 18], [19, 17], [12, 10], [11, 1], [0, 9], [8, 13], [6, 5], [16, 19], [10, 18], [6, 5], [0, 9], [19, 17], [15, 7], [8, 13], [12, 10], [4, 2], [6, 11], [19, 17], [5, 15], [18, 14], [3, 8], [12, 11], [9, 1], [2, 10], [17, 3], [13, 14], [9, 18], [11, 1], [6, 5], [10, 0], [3, 8], [13, 14], [9, 7], [16, 10], [5, 15], [0, 18], [3, 8], [5, 15], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [7, 1], [12, 10], [0, 18], [8, 13], [9, 7], [6, 5], [19, 0], [17, 3], [2, 12], [8, 13], [4, 2], [17, 0], [16, 19], [7, 1], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [16, 19], [11, 7], [8, 14], [12, 5], [10, 9], [19, 3], [2, 16], [17, 0], [8, 14], [18, 13], [11, 1], [6, 12], [2, 16], [17, 0], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [18, 13], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [15, 7], [8, 14], [15, 7], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [18, 13], [6, 5], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [6, 5], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [1, 13], [4, 2], [10, 0], [5, 11], [16, 12], [8, 14], [15, 7], [9, 1], [19, 3], [8, 14], [2, 16], [15, 7], [1, 13], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [5, 15], [8, 13], [19, 3], [11, 7], [9, 1], [4, 6], [16, 10], [8, 13], [5, 15], [19, 0], [2, 12], [11, 7], [19, 0], [5, 15], [3, 8], [9, 1], [2, 12], [4, 6], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [5, 15], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [13, 14], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], [13, 14], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 12]
[9, 13]
[7, 17]
[10, 19]
[12, 20]
[16, 25]
[13, 26]
[15, 28]
[25, 29]
[23, 30]
[17, 31]
[26, 32]
[33, 38]
[38, 43]
[37, 44]
[40, 47]
[24, 50]
[36, 51]
[45, 53]
[64, 72]
[74, 80]
[78, 81]
[76, 87]
[90, 93]
[88, 94]
[89, 97]
[95, 101]
[109, 115]
[114, 120]
[118, 121]
[130, 136]
[136, 141]
[139, 149]
[151, 157]
[155, 161]
[156, 162]
[157, 164]
[158, 168]
[174, 176]
[176, 184]
[177, 187]
[187, 193]
[188, 194]
[196, 205]
[205, 209]
[206, 211]
[222, 228]
[221, 229]
[219, 231]
[224, 232]
[230, 233]
[229, 234]
[225, 236]
[231, 237]
[226, 238]
[236, 241]
[234, 247]
[256, 269]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[75, 82, 88]
[81, 85, 91]
[86, 92, 98]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[84, 86, 92]
[85, 91, 95]
[104, 108, 114]
[102, 112, 118]
[127, 131, 140]
[200, 207, 212]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 12]
[9, 13]
[7, 17]
[10, 19]
[12, 20]
[16, 25]
[13, 26]
[15, 28]
[25, 29]
[23, 30]
[17, 31]
[26, 32]
[33, 38]
[38, 43]
[37, 44]
[40, 47]
[24, 50]
[36, 51]
[45, 53]
[64, 72]
[74, 80]
[78, 81]
[76, 87]
[90, 93]
[88, 94]
[89, 97]
[95, 101]
[109, 115]
[114, 120]
[118, 121]
[130, 136]
[136, 141]
[139, 149]
[151, 157]
[155, 161]
[156, 162]
[157, 164]
[158, 168]
[174, 176]
[176, 184]
[177, 187]
[187, 193]
[188, 194]
[196, 205]
[205, 209]
[206, 211]
[222, 228]
[221, 229]
[219, 231]
[224, 232]
[230, 233]
[229, 234]
[225, 236]
[231, 237]
[226, 238]
[236, 241]
[234, 247]
[256, 269]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.1357197761535645

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 12] cc => I, Pos: [5, 12] cc => I, Pos: [7, 17] cc => I, Pos: [7, 17] cc => I, Pos: [9, 13] cc => I, Pos: [9, 13] cc => I, Pos: [10, 19] cc => I, Pos: [10, 19] cc => I, Pos: [12, 20] cc => I, Pos: [12, 20] cc => I, Pos: [13, 26] cc => I, Pos: [13, 26] cc => I, Pos: [15, 28] cc => I, Pos: [15, 28] cc => I, Pos: [16, 25] cc => I, Pos: [16, 25] cc => I, Pos: [17, 31] cc => I, Pos: [17, 31] cc => I, Pos: [23, 30] cc => I, Pos: [23, 30] cc => I, Pos: [24, 50] cc => I, Pos: [24, 50] cc => I, Pos: [25, 29] cc => I, Pos: [25, 29] cc => I, Pos: [26, 32] cc => I, Pos: [26, 32] cc => I, Pos: [33, 38] cc => I, Pos: [33, 38] cc => I, Pos: [36, 51] cc => I, Pos: [36, 51] cc => I, Pos: [37, 44] cc => I, Pos: [37, 44] cc => I, Pos: [38, 43] cc => I, Pos: [38, 43] cc => I, Pos: [40, 47] cc => I, Pos: [40, 47] cc => I, Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [74, 80] cc => I, Pos: [74, 80] cc => I, Pos: [75, 82, 88] ccc => cc, Pos: [76, 87] cc => I, Pos: [76, 87] cc => I, Pos: [78, 81] cc => I, Pos: [78, 81] cc => I, Pos: [81, 85, 91] ccc => cc, Pos: [84, 86, 92] ccc => cc, Pos: [85, 91, 95] ccc => cc, Pos: [86, 92, 98] ccc => cc, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 97] cc => I, Pos: [89, 97] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [95, 101] cc => I, Pos: [95, 101] cc => I, Pos: [102, 112, 118] ccc => cc, Pos: [104, 108, 114] ccc => cc, Pos: [109, 115] cc => I, Pos: [109, 115] cc => I, Pos: [114, 120] cc => I, Pos: [114, 120] cc => I, Pos: [118, 121] cc => I, Pos: [118, 121] cc => I, Pos: [127, 131, 140] ccc => cc, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [136, 141] cc => I, Pos: [136, 141] cc => I, Pos: [139, 149] cc => I, Pos: [139, 149] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [156, 162] cc => I, Pos: [156, 162] cc => I, Pos: [157, 164] cc => I, Pos: [157, 164] cc => I, Pos: [158, 168] cc => I, Pos: [158, 168] cc => I, Pos: [174, 176] cc => I, Pos: [174, 176] cc => I, Pos: [176, 184] cc => I, Pos: [176, 184] cc => I, Pos: [177, 187] cc => I, Pos: [177, 187] cc => I, Pos: [187, 193] cc => I, Pos: [187, 193] cc => I, Pos: [188, 194] cc => I, Pos: [188, 194] cc => I, Pos: [196, 205] cc => I, Pos: [196, 205] cc => I, Pos: [200, 207, 212] ccc => cc, Pos: [205, 209] cc => I, Pos: [205, 209] cc => I, Pos: [206, 211] cc => I, Pos: [206, 211] cc => I, Pos: [219, 231] cc => I, Pos: [219, 231] cc => I, Pos: [221, 229] cc => I, Pos: [221, 229] cc => I, Pos: [222, 228] cc => I, Pos: [222, 228] cc => I, Pos: [224, 232] cc => I, Pos: [224, 232] cc => I, Pos: [225, 236] cc => I, Pos: [225, 236] cc => I, Pos: [226, 238] cc => I, Pos: [226, 238] cc => I, Pos: [229, 234] cc => I, Pos: [229, 234] cc => I, Pos: [230, 233] cc => I, Pos: [230, 233] cc => I, Pos: [231, 237] cc => I, Pos: [231, 237] cc => I, Pos: [234, 247] cc => I, Pos: [234, 247] cc => I, Pos: [236, 241] cc => I, Pos: [236, 241] cc => I, Pos: [256, 269] cc => I, Pos: [256, 269] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 12] cc => I,
 Pos: [7, 17] cc => I,
 Pos: [13, 26] cc => I,
 Pos: [10, 19] cc => I,
 Pos: [15, 28] cc => I,
 Pos: [16, 25] cc => I,
 Pos: [23, 30] cc => I,
 Pos: [24, 50] cc => I,
 Pos: [33, 38] cc => I,
 Pos: [36, 51] cc => I,
 Pos: [37, 44] cc => I,
 Pos: [40, 47] cc => I,
 Pos: [45, 53] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [74, 80] cc => I,
 Pos: [75, 82, 88] ccc => cc,
 Pos: [76, 87] cc => I,
 Pos: [81, 85, 91] ccc => cc,
 Pos: [86, 92, 98] ccc => cc,
 Pos: [89, 97] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [95, 101] cc => I,
 Pos: [118, 121] cc => I,
 Pos: [114, 120] cc => I,
 Pos: [109, 115] cc => I,
 Pos: [127, 131, 140] ccc => cc,
 Pos: [136, 141] cc => I,
 Pos: [139, 149] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [156, 162] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [174, 176] cc => I,
 Pos: [187, 193] cc => I,
 Pos: [188, 194] cc => I,
 Pos: [205, 209] cc => I,
 Pos: [200, 207, 212] ccc => cc,
 Pos: [206, 211] cc => I,
 Pos: [219, 231] cc => I,
 Pos: [221, 229] cc => I,
 Pos: [222, 228] cc => I,
 Pos: [224, 232] cc => I,
 Pos: [236, 241] cc => I,
 Pos: [226, 238] cc => I,
 Pos: [230, 233] cc => I,
 Pos: [234, 247] cc => I,
 Pos: [256, 269] cc => I]
Change: 47, Saving: 178

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 12] cc => I
Apply:  Pos: [7, 17] cc => I
Apply:  Pos: [13, 26] cc => I
Apply:  Pos: [10, 19] cc => I
Apply:  Pos: [15, 28] cc => I
Apply:  Pos: [16, 25] cc => I
Apply:  Pos: [23, 30] cc => I
Apply:  Pos: [24, 50] cc => I
Apply:  Pos: [33, 38] cc => I
Apply:  Pos: [36, 51] cc => I
Apply:  Pos: [37, 44] cc => I
Apply:  Pos: [40, 47] cc => I
Apply:  Pos: [45, 53] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [74, 80] cc => I
Apply:  Pos: [75, 82, 88] ccc => cc
Apply:  Pos: [76, 87] cc => I
Apply:  Pos: [81, 85, 91] ccc => cc
Apply:  Pos: [86, 92, 98] ccc => cc
Apply:  Pos: [89, 97] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [95, 101] cc => I
Apply:  Pos: [118, 121] cc => I
Apply:  Pos: [114, 120] cc => I
Apply:  Pos: [109, 115] cc => I
Apply:  Pos: [127, 131, 140] ccc => cc
Apply:  Pos: [136, 141] cc => I
Apply:  Pos: [139, 149] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [156, 162] cc => I
Apply:  Pos: [158, 168] cc => I
Apply:  Pos: [174, 176] cc => I
Apply:  Pos: [187, 193] cc => I
Apply:  Pos: [188, 194] cc => I
Apply:  Pos: [205, 209] cc => I
Apply:  Pos: [200, 207, 212] ccc => cc
Apply:  Pos: [206, 211] cc => I
Apply:  Pos: [219, 231] cc => I
Apply:  Pos: [221, 229] cc => I
Apply:  Pos: [222, 228] cc => I
Apply:  Pos: [224, 232] cc => I
Apply:  Pos: [236, 241] cc => I
Apply:  Pos: [226, 238] cc => I
Apply:  Pos: [230, 233] cc => I
Apply:  Pos: [234, 247] cc => I
Apply:  Pos: [256, 269] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [6, 12], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [9, 7], [3, 8], [8, 14], [5, 11], [4, 6], [5, 15], [2, 12], [6, 12], [17, 0], [2, 16], [9, 7], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [6, 5], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [0, 18], [9, 7], [6, 11], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [16, 19], [18, 14], [16, 17], [9, 7], [6, 12], [10, 18], [19, 17], [12, 18], [10, 18], [0, 9], [15, 7], [4, 2], [6, 11], [5, 15], [18, 14], [3, 8], [12, 11], [9, 1], [2, 10], [17, 3], [9, 18], [11, 1], [6, 5], [10, 0], [9, 7], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [9, 7], [12, 10], [0, 18], [8, 13], [7, 1], [6, 5], [19, 0], [17, 3], [2, 12], [4, 2], [17, 0], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [9, 1], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  5.1357197761535645

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 17]
[53, 55]
[40, 60]
[41, 63]
[72, 80]
[70, 85]
[67, 87]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[36, 42, 48]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[1, 11, 13]
[12, 23, 29]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 17]
[53, 55]
[40, 60]
[41, 63]
[72, 80]
[70, 85]
[67, 87]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.233858585357666

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 11, 13] ccc => cc, Pos: [7, 17] cc => I, Pos: [7, 17] cc => I, Pos: [12, 23, 29] ccc => cc, Pos: [36, 42, 48] ccc => cc, Pos: [40, 60] cc => I, Pos: [40, 60] cc => I, Pos: [41, 63] cc => I, Pos: [41, 63] cc => I, Pos: [53, 55] cc => I, Pos: [53, 55] cc => I, Pos: [67, 87] cc => I, Pos: [67, 87] cc => I, Pos: [70, 85] cc => I, Pos: [70, 85] cc => I, Pos: [72, 80] cc => I, Pos: [72, 80] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 11, 13] ccc => cc,
 Pos: [7, 17] cc => I,
 Pos: [12, 23, 29] ccc => cc,
 Pos: [36, 42, 48] ccc => cc,
 Pos: [40, 60] cc => I,
 Pos: [41, 63] cc => I,
 Pos: [53, 55] cc => I,
 Pos: [67, 87] cc => I,
 Pos: [70, 85] cc => I,
 Pos: [72, 80] cc => I]
Change: 10, Saving: 34

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 11, 13] ccc => cc
Apply:  Pos: [7, 17] cc => I
Apply:  Pos: [12, 23, 29] ccc => cc
Apply:  Pos: [36, 42, 48] ccc => cc
Apply:  Pos: [40, 60] cc => I
Apply:  Pos: [41, 63] cc => I
Apply:  Pos: [53, 55] cc => I
Apply:  Pos: [67, 87] cc => I
Apply:  Pos: [70, 85] cc => I
Apply:  Pos: [72, 80] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [4, 6], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [6, 12], [6, 5], [2, 12], [17, 0], [2, 16], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [5, 15], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [19, 17], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [18, 14], [16, 17], [9, 7], [6, 12], [19, 17], [12, 18], [0, 9], [15, 7], [4, 2], [5, 15], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [8, 13], [7, 1], [19, 0], [2, 12], [4, 2], [17, 0], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [9, 1], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  3.233858585357666

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[12, 22]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[12, 22]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.843912363052368

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 22] cc => I, Pos: [12, 22] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 22] cc => I]
Change: 1, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 22] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 6], [4, 2], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [6, 5], [2, 12], [17, 0], [2, 16], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [5, 15], [0, 3], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [19, 17], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [18, 14], [16, 17], [9, 7], [6, 12], [19, 17], [12, 18], [0, 9], [15, 7], [4, 2], [5, 15], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [8, 13], [7, 1], [19, 0], [2, 12], [4, 2], [17, 0], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [9, 1], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  2.843912363052368

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.79789662361145

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [4, 6], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [6, 5], [2, 12], [17, 0], [2, 16], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [5, 15], [0, 3], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [19, 17], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [18, 14], [16, 17], [9, 7], [6, 12], [19, 17], [12, 18], [0, 9], [15, 7], [4, 2], [5, 15], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [8, 13], [7, 1], [19, 0], [2, 12], [4, 2], [17, 0], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [9, 1], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  2.79789662361145

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [162] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 35 - (small)
 - circuit cycle: 324

Reduced: 
 - size: 108 (40.00%)
 - cycle: 216 (40.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.11079907417297363

[4, 2], [6, 12], [0, 3], [10, 18], [7, 1], [4, 6], [0, 18], [2, 16], [11, 1], [9, 7], [12, 10], [3, 8], [4, 6], [9, 7], [8, 14], [19, 3], [17, 0], [2, 16], [5, 11], [12, 10], [4, 6], [5, 15], [2, 12], [10, 18], [1, 13], [17, 0], [9, 7], [6, 12], [19, 3], [17, 0], [10, 18], [2, 16], [9, 7], [6, 5], [0, 3], [9, 18], [11, 7], [16, 10], [6, 5], [17, 3], [2, 12], [19, 0], [11, 9], [6, 5], [16, 10], [18, 8], [0, 3], [2, 12], [6, 12], [16, 19], [1, 13], [11, 7], [17, 3], [18, 8], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [12, 5], [0, 18], [9, 7], [6, 11], [3, 8], [19, 17], [9, 18], [13, 14], [12, 5], [7, 1], [17, 3], [0, 9], [11, 1], [2, 12], [16, 19], [18, 14], [17, 3], [16, 19], [9, 7], [6, 12], [10, 18], [19, 17], [12, 10], [11, 1], [0, 9], [8, 13], [6, 5], [16, 19], [10, 18], [6, 5], [0, 9], [19, 17], [15, 7], [8, 13], [12, 10], [4, 2], [6, 11], [19, 17], [5, 15], [18, 14], [3, 8], [12, 11], [9, 1], [2, 10], [17, 3], [13, 14], [9, 18], [11, 1], [6, 5], [10, 0], [3, 8], [13, 14], [9, 7], [16, 10], [5, 15], [0, 18], [3, 8], [5, 15], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [7, 1], [12, 10], [0, 18], [8, 13], [9, 7], [6, 5], [19, 0], [17, 3], [2, 12], [8, 13], [4, 2], [17, 0], [16, 19], [7, 1], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [16, 19], [11, 7], [8, 14], [12, 5], [10, 9], [19, 3], [2, 16], [17, 0], [8, 14], [18, 13], [11, 1], [6, 12], [2, 16], [17, 0], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [18, 13], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [15, 7], [8, 14], [15, 7], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [18, 13], [6, 5], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [6, 5], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [1, 13], [4, 2], [10, 0], [5, 11], [16, 12], [8, 14], [15, 7], [9, 1], [19, 3], [8, 14], [2, 16], [15, 7], [1, 13], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [5, 15], [8, 13], [19, 3], [11, 7], [9, 1], [4, 6], [16, 10], [8, 13], [5, 15], [19, 0], [2, 12], [11, 7], [19, 0], [5, 15], [3, 8], [9, 1], [2, 12], [4, 6], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [5, 15], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [13, 14], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], [13, 14], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 12]
[9, 13]
[7, 17]
[10, 19]
[12, 20]
[16, 25]
[13, 26]
[15, 28]
[25, 29]
[23, 30]
[17, 31]
[26, 32]
[33, 38]
[38, 43]
[37, 44]
[40, 47]
[24, 50]
[36, 51]
[45, 53]
[64, 72]
[74, 80]
[78, 81]
[76, 87]
[90, 93]
[88, 94]
[89, 97]
[95, 101]
[109, 115]
[114, 120]
[118, 121]
[130, 136]
[136, 141]
[139, 149]
[151, 157]
[155, 161]
[156, 162]
[157, 164]
[158, 168]
[174, 176]
[176, 184]
[177, 187]
[187, 193]
[188, 194]
[196, 205]
[205, 209]
[206, 211]
[222, 228]
[221, 229]
[219, 231]
[224, 232]
[230, 233]
[229, 234]
[225, 236]
[231, 237]
[226, 238]
[236, 241]
[234, 247]
[256, 269]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[75, 82, 88]
[81, 85, 91]
[86, 92, 98]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[84, 86, 92]
[85, 91, 95]
[104, 108, 114]
[102, 112, 118]
[127, 131, 140]
[200, 207, 212]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 12]
[9, 13]
[7, 17]
[10, 19]
[12, 20]
[16, 25]
[13, 26]
[15, 28]
[25, 29]
[23, 30]
[17, 31]
[26, 32]
[33, 38]
[38, 43]
[37, 44]
[40, 47]
[24, 50]
[36, 51]
[45, 53]
[64, 72]
[74, 80]
[78, 81]
[76, 87]
[90, 93]
[88, 94]
[89, 97]
[95, 101]
[109, 115]
[114, 120]
[118, 121]
[130, 136]
[136, 141]
[139, 149]
[151, 157]
[155, 161]
[156, 162]
[157, 164]
[158, 168]
[174, 176]
[176, 184]
[177, 187]
[187, 193]
[188, 194]
[196, 205]
[205, 209]
[206, 211]
[222, 228]
[221, 229]
[219, 231]
[224, 232]
[230, 233]
[229, 234]
[225, 236]
[231, 237]
[226, 238]
[236, 241]
[234, 247]
[256, 269]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.287962198257446

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 12] cc => I, Pos: [5, 12] cc => I, Pos: [7, 17] cc => I, Pos: [7, 17] cc => I, Pos: [9, 13] cc => I, Pos: [9, 13] cc => I, Pos: [10, 19] cc => I, Pos: [10, 19] cc => I, Pos: [12, 20] cc => I, Pos: [12, 20] cc => I, Pos: [13, 26] cc => I, Pos: [13, 26] cc => I, Pos: [15, 28] cc => I, Pos: [15, 28] cc => I, Pos: [16, 25] cc => I, Pos: [16, 25] cc => I, Pos: [17, 31] cc => I, Pos: [17, 31] cc => I, Pos: [23, 30] cc => I, Pos: [23, 30] cc => I, Pos: [24, 50] cc => I, Pos: [24, 50] cc => I, Pos: [25, 29] cc => I, Pos: [25, 29] cc => I, Pos: [26, 32] cc => I, Pos: [26, 32] cc => I, Pos: [33, 38] cc => I, Pos: [33, 38] cc => I, Pos: [36, 51] cc => I, Pos: [36, 51] cc => I, Pos: [37, 44] cc => I, Pos: [37, 44] cc => I, Pos: [38, 43] cc => I, Pos: [38, 43] cc => I, Pos: [40, 47] cc => I, Pos: [40, 47] cc => I, Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [74, 80] cc => I, Pos: [74, 80] cc => I, Pos: [75, 82, 88] ccc => cc, Pos: [76, 87] cc => I, Pos: [76, 87] cc => I, Pos: [78, 81] cc => I, Pos: [78, 81] cc => I, Pos: [81, 85, 91] ccc => cc, Pos: [84, 86, 92] ccc => cc, Pos: [85, 91, 95] ccc => cc, Pos: [86, 92, 98] ccc => cc, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 97] cc => I, Pos: [89, 97] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [95, 101] cc => I, Pos: [95, 101] cc => I, Pos: [102, 112, 118] ccc => cc, Pos: [104, 108, 114] ccc => cc, Pos: [109, 115] cc => I, Pos: [109, 115] cc => I, Pos: [114, 120] cc => I, Pos: [114, 120] cc => I, Pos: [118, 121] cc => I, Pos: [118, 121] cc => I, Pos: [127, 131, 140] ccc => cc, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [136, 141] cc => I, Pos: [136, 141] cc => I, Pos: [139, 149] cc => I, Pos: [139, 149] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [156, 162] cc => I, Pos: [156, 162] cc => I, Pos: [157, 164] cc => I, Pos: [157, 164] cc => I, Pos: [158, 168] cc => I, Pos: [158, 168] cc => I, Pos: [174, 176] cc => I, Pos: [174, 176] cc => I, Pos: [176, 184] cc => I, Pos: [176, 184] cc => I, Pos: [177, 187] cc => I, Pos: [177, 187] cc => I, Pos: [187, 193] cc => I, Pos: [187, 193] cc => I, Pos: [188, 194] cc => I, Pos: [188, 194] cc => I, Pos: [196, 205] cc => I, Pos: [196, 205] cc => I, Pos: [200, 207, 212] ccc => cc, Pos: [205, 209] cc => I, Pos: [205, 209] cc => I, Pos: [206, 211] cc => I, Pos: [206, 211] cc => I, Pos: [219, 231] cc => I, Pos: [219, 231] cc => I, Pos: [221, 229] cc => I, Pos: [221, 229] cc => I, Pos: [222, 228] cc => I, Pos: [222, 228] cc => I, Pos: [224, 232] cc => I, Pos: [224, 232] cc => I, Pos: [225, 236] cc => I, Pos: [225, 236] cc => I, Pos: [226, 238] cc => I, Pos: [226, 238] cc => I, Pos: [229, 234] cc => I, Pos: [229, 234] cc => I, Pos: [230, 233] cc => I, Pos: [230, 233] cc => I, Pos: [231, 237] cc => I, Pos: [231, 237] cc => I, Pos: [234, 247] cc => I, Pos: [234, 247] cc => I, Pos: [236, 241] cc => I, Pos: [236, 241] cc => I, Pos: [256, 269] cc => I, Pos: [256, 269] cc => I]

--------End Timer [Generate Plans]:  0.125532865524292

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 20] cc => I,
 Pos: [17, 31] cc => I,
 Pos: [9, 13] cc => I,
 Pos: [10, 19] cc => I,
 Pos: [15, 28] cc => I,
 Pos: [16, 25] cc => I,
 Pos: [23, 30] cc => I,
 Pos: [24, 50] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [38, 43] cc => I,
 Pos: [36, 51] cc => I,
 Pos: [37, 44] cc => I,
 Pos: [40, 47] cc => I,
 Pos: [45, 53] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [74, 80] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [76, 87] cc => I,
 Pos: [81, 85, 91] ccc => cc,
 Pos: [86, 92, 98] ccc => cc,
 Pos: [89, 97] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [95, 101] cc => I,
 Pos: [118, 121] cc => I,
 Pos: [114, 120] cc => I,
 Pos: [109, 115] cc => I,
 Pos: [127, 131, 140] ccc => cc,
 Pos: [136, 141] cc => I,
 Pos: [139, 149] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [156, 162] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [174, 176] cc => I,
 Pos: [177, 187] cc => I,
 Pos: [188, 194] cc => I,
 Pos: [196, 205] cc => I,
 Pos: [200, 207, 212] ccc => cc,
 Pos: [206, 211] cc => I,
 Pos: [231, 237] cc => I,
 Pos: [229, 234] cc => I,
 Pos: [222, 228] cc => I,
 Pos: [224, 232] cc => I,
 Pos: [236, 241] cc => I,
 Pos: [226, 238] cc => I,
 Pos: [230, 233] cc => I,
 Pos: [256, 269] cc => I]
Change: 47, Saving: 48

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 20] cc => I
Apply:  Pos: [17, 31] cc => I
Apply:  Pos: [9, 13] cc => I
Apply:  Pos: [10, 19] cc => I
Apply:  Pos: [15, 28] cc => I
Apply:  Pos: [16, 25] cc => I
Apply:  Pos: [23, 30] cc => I
Apply:  Pos: [24, 50] cc => I
Apply:  Pos: [26, 32] cc => I
Apply:  Pos: [38, 43] cc => I
Apply:  Pos: [36, 51] cc => I
Apply:  Pos: [37, 44] cc => I
Apply:  Pos: [40, 47] cc => I
Apply:  Pos: [45, 53] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [74, 80] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [76, 87] cc => I
Apply:  Pos: [81, 85, 91] ccc => cc
Apply:  Pos: [86, 92, 98] ccc => cc
Apply:  Pos: [89, 97] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [95, 101] cc => I
Apply:  Pos: [118, 121] cc => I
Apply:  Pos: [114, 120] cc => I
Apply:  Pos: [109, 115] cc => I
Apply:  Pos: [127, 131, 140] ccc => cc
Apply:  Pos: [136, 141] cc => I
Apply:  Pos: [139, 149] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [156, 162] cc => I
Apply:  Pos: [158, 168] cc => I
Apply:  Pos: [174, 176] cc => I
Apply:  Pos: [177, 187] cc => I
Apply:  Pos: [188, 194] cc => I
Apply:  Pos: [196, 205] cc => I
Apply:  Pos: [200, 207, 212] ccc => cc
Apply:  Pos: [206, 211] cc => I
Apply:  Pos: [231, 237] cc => I
Apply:  Pos: [229, 234] cc => I
Apply:  Pos: [222, 228] cc => I
Apply:  Pos: [224, 232] cc => I
Apply:  Pos: [236, 241] cc => I
Apply:  Pos: [226, 238] cc => I
Apply:  Pos: [230, 233] cc => I
Apply:  Pos: [256, 269] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [6, 12], [0, 3], [10, 18], [7, 1], [4, 6], [0, 18], [2, 16], [11, 1], [3, 8], [8, 14], [5, 11], [5, 15], [2, 12], [6, 12], [17, 0], [6, 5], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [0, 18], [9, 7], [6, 11], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 9], [2, 12], [16, 19], [18, 14], [16, 17], [9, 7], [6, 12], [10, 18], [19, 17], [12, 18], [10, 18], [15, 7], [4, 2], [6, 11], [5, 15], [18, 14], [3, 8], [12, 11], [9, 1], [2, 10], [17, 3], [9, 18], [11, 1], [6, 5], [10, 0], [9, 7], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [9, 7], [12, 10], [0, 18], [8, 13], [7, 1], [6, 5], [19, 0], [17, 3], [2, 12], [4, 2], [17, 0], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [5, 15], [19, 3], [9, 1], [16, 10], [3, 8], [5, 11], [2, 16], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [5, 15], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  5.413495063781738

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[51, 53]
[38, 57]
[39, 60]
[69, 77]
[67, 82]
[64, 84]
[147, 159]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[34, 40, 46]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[1, 5, 13]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[51, 53]
[38, 57]
[39, 60]
[69, 77]
[67, 82]
[64, 84]
[147, 159]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2659189701080322

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 5, 13] ccc => cc, Pos: [34, 40, 46] ccc => cc, Pos: [38, 57] cc => I, Pos: [38, 57] cc => I, Pos: [39, 60] cc => I, Pos: [39, 60] cc => I, Pos: [51, 53] cc => I, Pos: [51, 53] cc => I, Pos: [64, 84] cc => I, Pos: [64, 84] cc => I, Pos: [67, 82] cc => I, Pos: [67, 82] cc => I, Pos: [69, 77] cc => I, Pos: [69, 77] cc => I, Pos: [147, 159] cc => I, Pos: [147, 159] cc => I]

--------End Timer [Generate Plans]:  0.03125262260437012

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 5, 13] ccc => cc,
 Pos: [34, 40, 46] ccc => cc,
 Pos: [38, 57] cc => I,
 Pos: [39, 60] cc => I,
 Pos: [51, 53] cc => I,
 Pos: [64, 84] cc => I,
 Pos: [67, 82] cc => I,
 Pos: [69, 77] cc => I,
 Pos: [147, 159] cc => I]
Change: 9, Saving: 9

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 5, 13] ccc => cc
Apply:  Pos: [34, 40, 46] ccc => cc
Apply:  Pos: [38, 57] cc => I
Apply:  Pos: [39, 60] cc => I
Apply:  Pos: [51, 53] cc => I
Apply:  Pos: [64, 84] cc => I
Apply:  Pos: [67, 82] cc => I
Apply:  Pos: [69, 77] cc => I
Apply:  Pos: [147, 159] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [4, 6], [0, 3], [10, 18], [7, 1], [6, 12], [0, 18], [2, 16], [11, 1], [3, 8], [8, 14], [5, 15], [5, 11], [2, 12], [17, 0], [6, 5], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [19, 17], [9, 18], [13, 14], [7, 1], [0, 9], [2, 12], [18, 14], [16, 17], [9, 7], [6, 12], [19, 17], [12, 18], [15, 7], [4, 2], [5, 15], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [8, 13], [7, 1], [19, 0], [2, 12], [4, 2], [17, 0], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [19, 3], [9, 1], [16, 10], [3, 8], [5, 11], [2, 16], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  3.2971715927124023

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[12, 15, 26]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8916175365448

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 15, 26] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 15, 26] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 15, 26] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 6], [4, 2], [0, 3], [10, 18], [7, 1], [6, 12], [0, 18], [2, 16], [11, 1], [3, 8], [8, 14], [5, 11], [6, 5], [2, 12], [17, 0], [5, 15], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [19, 17], [9, 18], [13, 14], [7, 1], [0, 9], [2, 12], [18, 14], [16, 17], [9, 7], [6, 12], [19, 17], [12, 18], [15, 7], [4, 2], [5, 15], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [8, 13], [7, 1], [19, 0], [2, 12], [4, 2], [17, 0], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [19, 3], [9, 1], [16, 10], [3, 8], [5, 11], [2, 16], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  2.8916175365448

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8640382289886475

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [4, 6], [0, 3], [10, 18], [7, 1], [6, 12], [0, 18], [2, 16], [11, 1], [3, 8], [8, 14], [5, 11], [6, 5], [2, 12], [17, 0], [5, 15], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [19, 17], [9, 18], [13, 14], [7, 1], [0, 9], [2, 12], [18, 14], [16, 17], [9, 7], [6, 12], [19, 17], [12, 18], [15, 7], [4, 2], [5, 15], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [8, 13], [7, 1], [19, 0], [2, 12], [4, 2], [17, 0], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [19, 3], [9, 1], [16, 10], [3, 8], [5, 11], [2, 16], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  2.8640382289886475

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [163] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 35 - (small)
 - circuit cycle: 326

Reduced: 
 - size: 107 (39.63%)
 - depth: 10 (22.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10935425758361816

[4, 2], [6, 12], [0, 3], [10, 18], [7, 1], [4, 6], [0, 18], [2, 16], [11, 1], [9, 7], [12, 10], [3, 8], [4, 6], [9, 7], [8, 14], [19, 3], [17, 0], [2, 16], [5, 11], [12, 10], [4, 6], [5, 15], [2, 12], [10, 18], [1, 13], [17, 0], [9, 7], [6, 12], [19, 3], [17, 0], [10, 18], [2, 16], [9, 7], [6, 5], [0, 3], [9, 18], [11, 7], [16, 10], [6, 5], [17, 3], [2, 12], [19, 0], [11, 9], [6, 5], [16, 10], [18, 8], [0, 3], [2, 12], [6, 12], [16, 19], [1, 13], [11, 7], [17, 3], [18, 8], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [12, 5], [0, 18], [9, 7], [6, 11], [3, 8], [19, 17], [9, 18], [13, 14], [12, 5], [7, 1], [17, 3], [0, 9], [11, 1], [2, 12], [16, 19], [18, 14], [17, 3], [16, 19], [9, 7], [6, 12], [10, 18], [19, 17], [12, 10], [11, 1], [0, 9], [8, 13], [6, 5], [16, 19], [10, 18], [6, 5], [0, 9], [19, 17], [15, 7], [8, 13], [12, 10], [4, 2], [6, 11], [19, 17], [5, 15], [18, 14], [3, 8], [12, 11], [9, 1], [2, 10], [17, 3], [13, 14], [9, 18], [11, 1], [6, 5], [10, 0], [3, 8], [13, 14], [9, 7], [16, 10], [5, 15], [0, 18], [3, 8], [5, 15], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [7, 1], [12, 10], [0, 18], [8, 13], [9, 7], [6, 5], [19, 0], [17, 3], [2, 12], [8, 13], [4, 2], [17, 0], [16, 19], [7, 1], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [16, 19], [11, 7], [8, 14], [12, 5], [10, 9], [19, 3], [2, 16], [17, 0], [8, 14], [18, 13], [11, 1], [6, 12], [2, 16], [17, 0], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [18, 13], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [15, 7], [8, 14], [15, 7], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [18, 13], [6, 5], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [6, 5], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [1, 13], [4, 2], [10, 0], [5, 11], [16, 12], [8, 14], [15, 7], [9, 1], [19, 3], [8, 14], [2, 16], [15, 7], [1, 13], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [5, 15], [8, 13], [19, 3], [11, 7], [9, 1], [4, 6], [16, 10], [8, 13], [5, 15], [19, 0], [2, 12], [11, 7], [19, 0], [5, 15], [3, 8], [9, 1], [2, 12], [4, 6], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [5, 15], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [13, 14], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], [13, 14], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 12]
[9, 13]
[7, 17]
[10, 19]
[12, 20]
[16, 25]
[13, 26]
[15, 28]
[25, 29]
[23, 30]
[17, 31]
[26, 32]
[33, 38]
[38, 43]
[37, 44]
[40, 47]
[24, 50]
[36, 51]
[45, 53]
[64, 72]
[74, 80]
[78, 81]
[76, 87]
[90, 93]
[88, 94]
[89, 97]
[95, 101]
[109, 115]
[114, 120]
[118, 121]
[130, 136]
[136, 141]
[139, 149]
[151, 157]
[155, 161]
[156, 162]
[157, 164]
[158, 168]
[174, 176]
[176, 184]
[177, 187]
[187, 193]
[188, 194]
[196, 205]
[205, 209]
[206, 211]
[222, 228]
[221, 229]
[219, 231]
[224, 232]
[230, 233]
[229, 234]
[225, 236]
[231, 237]
[226, 238]
[236, 241]
[234, 247]
[256, 269]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[75, 82, 88]
[81, 85, 91]
[86, 92, 98]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[84, 86, 92]
[85, 91, 95]
[104, 108, 114]
[102, 112, 118]
[127, 131, 140]
[200, 207, 212]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 12]
[9, 13]
[7, 17]
[10, 19]
[12, 20]
[16, 25]
[13, 26]
[15, 28]
[25, 29]
[23, 30]
[17, 31]
[26, 32]
[33, 38]
[38, 43]
[37, 44]
[40, 47]
[24, 50]
[36, 51]
[45, 53]
[64, 72]
[74, 80]
[78, 81]
[76, 87]
[90, 93]
[88, 94]
[89, 97]
[95, 101]
[109, 115]
[114, 120]
[118, 121]
[130, 136]
[136, 141]
[139, 149]
[151, 157]
[155, 161]
[156, 162]
[157, 164]
[158, 168]
[174, 176]
[176, 184]
[177, 187]
[187, 193]
[188, 194]
[196, 205]
[205, 209]
[206, 211]
[222, 228]
[221, 229]
[219, 231]
[224, 232]
[230, 233]
[229, 234]
[225, 236]
[231, 237]
[226, 238]
[236, 241]
[234, 247]
[256, 269]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.218693256378174

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 12] cc => I, Pos: [5, 12] cc => I, Pos: [7, 17] cc => I, Pos: [7, 17] cc => I, Pos: [9, 13] cc => I, Pos: [9, 13] cc => I, Pos: [10, 19] cc => I, Pos: [10, 19] cc => I, Pos: [12, 20] cc => I, Pos: [12, 20] cc => I, Pos: [13, 26] cc => I, Pos: [13, 26] cc => I, Pos: [15, 28] cc => I, Pos: [15, 28] cc => I, Pos: [16, 25] cc => I, Pos: [16, 25] cc => I, Pos: [17, 31] cc => I, Pos: [17, 31] cc => I, Pos: [23, 30] cc => I, Pos: [23, 30] cc => I, Pos: [24, 50] cc => I, Pos: [24, 50] cc => I, Pos: [25, 29] cc => I, Pos: [25, 29] cc => I, Pos: [26, 32] cc => I, Pos: [26, 32] cc => I, Pos: [33, 38] cc => I, Pos: [33, 38] cc => I, Pos: [36, 51] cc => I, Pos: [36, 51] cc => I, Pos: [37, 44] cc => I, Pos: [37, 44] cc => I, Pos: [38, 43] cc => I, Pos: [38, 43] cc => I, Pos: [40, 47] cc => I, Pos: [40, 47] cc => I, Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [74, 80] cc => I, Pos: [74, 80] cc => I, Pos: [75, 82, 88] ccc => cc, Pos: [76, 87] cc => I, Pos: [76, 87] cc => I, Pos: [78, 81] cc => I, Pos: [78, 81] cc => I, Pos: [81, 85, 91] ccc => cc, Pos: [84, 86, 92] ccc => cc, Pos: [85, 91, 95] ccc => cc, Pos: [86, 92, 98] ccc => cc, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 97] cc => I, Pos: [89, 97] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [95, 101] cc => I, Pos: [95, 101] cc => I, Pos: [102, 112, 118] ccc => cc, Pos: [104, 108, 114] ccc => cc, Pos: [109, 115] cc => I, Pos: [109, 115] cc => I, Pos: [114, 120] cc => I, Pos: [114, 120] cc => I, Pos: [118, 121] cc => I, Pos: [118, 121] cc => I, Pos: [127, 131, 140] ccc => cc, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [136, 141] cc => I, Pos: [136, 141] cc => I, Pos: [139, 149] cc => I, Pos: [139, 149] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [156, 162] cc => I, Pos: [156, 162] cc => I, Pos: [157, 164] cc => I, Pos: [157, 164] cc => I, Pos: [158, 168] cc => I, Pos: [158, 168] cc => I, Pos: [174, 176] cc => I, Pos: [174, 176] cc => I, Pos: [176, 184] cc => I, Pos: [176, 184] cc => I, Pos: [177, 187] cc => I, Pos: [177, 187] cc => I, Pos: [187, 193] cc => I, Pos: [187, 193] cc => I, Pos: [188, 194] cc => I, Pos: [188, 194] cc => I, Pos: [196, 205] cc => I, Pos: [196, 205] cc => I, Pos: [200, 207, 212] ccc => cc, Pos: [205, 209] cc => I, Pos: [205, 209] cc => I, Pos: [206, 211] cc => I, Pos: [206, 211] cc => I, Pos: [219, 231] cc => I, Pos: [219, 231] cc => I, Pos: [221, 229] cc => I, Pos: [221, 229] cc => I, Pos: [222, 228] cc => I, Pos: [222, 228] cc => I, Pos: [224, 232] cc => I, Pos: [224, 232] cc => I, Pos: [225, 236] cc => I, Pos: [225, 236] cc => I, Pos: [226, 238] cc => I, Pos: [226, 238] cc => I, Pos: [229, 234] cc => I, Pos: [229, 234] cc => I, Pos: [230, 233] cc => I, Pos: [230, 233] cc => I, Pos: [231, 237] cc => I, Pos: [231, 237] cc => I, Pos: [234, 247] cc => I, Pos: [234, 247] cc => I, Pos: [236, 241] cc => I, Pos: [236, 241] cc => I, Pos: [256, 269] cc => I, Pos: [256, 269] cc => I]

--------End Timer [Generate Plans]:  0.10934948921203613

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 20] cc => I,
 Pos: [7, 17] cc => I,
 Pos: [9, 13] cc => I,
 Pos: [10, 19] cc => I,
 Pos: [15, 28] cc => I,
 Pos: [16, 25] cc => I,
 Pos: [23, 30] cc => I,
 Pos: [24, 50] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [38, 43] cc => I,
 Pos: [36, 51] cc => I,
 Pos: [37, 44] cc => I,
 Pos: [40, 47] cc => I,
 Pos: [45, 53] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [74, 80] cc => I,
 Pos: [75, 82, 88] ccc => cc,
 Pos: [76, 87] cc => I,
 Pos: [78, 81] cc => I,
 Pos: [86, 92, 98] ccc => cc,
 Pos: [95, 101] cc => I,
 Pos: [89, 97] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [118, 121] cc => I,
 Pos: [104, 108, 114] ccc => cc,
 Pos: [109, 115] cc => I,
 Pos: [127, 131, 140] ccc => cc,
 Pos: [130, 136] cc => I,
 Pos: [139, 149] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [156, 162] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [174, 176] cc => I,
 Pos: [177, 187] cc => I,
 Pos: [188, 194] cc => I,
 Pos: [196, 205] cc => I,
 Pos: [200, 207, 212] ccc => cc,
 Pos: [206, 211] cc => I,
 Pos: [231, 237] cc => I,
 Pos: [229, 234] cc => I,
 Pos: [222, 228] cc => I,
 Pos: [224, 232] cc => I,
 Pos: [225, 236] cc => I,
 Pos: [226, 238] cc => I,
 Pos: [230, 233] cc => I,
 Pos: [256, 269] cc => I]
Change: 47, Saving: 47

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 20] cc => I
Apply:  Pos: [7, 17] cc => I
Apply:  Pos: [9, 13] cc => I
Apply:  Pos: [10, 19] cc => I
Apply:  Pos: [15, 28] cc => I
Apply:  Pos: [16, 25] cc => I
Apply:  Pos: [23, 30] cc => I
Apply:  Pos: [24, 50] cc => I
Apply:  Pos: [26, 32] cc => I
Apply:  Pos: [38, 43] cc => I
Apply:  Pos: [36, 51] cc => I
Apply:  Pos: [37, 44] cc => I
Apply:  Pos: [40, 47] cc => I
Apply:  Pos: [45, 53] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [74, 80] cc => I
Apply:  Pos: [75, 82, 88] ccc => cc
Apply:  Pos: [76, 87] cc => I
Apply:  Pos: [78, 81] cc => I
Apply:  Pos: [86, 92, 98] ccc => cc
Apply:  Pos: [95, 101] cc => I
Apply:  Pos: [89, 97] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [118, 121] cc => I
Apply:  Pos: [104, 108, 114] ccc => cc
Apply:  Pos: [109, 115] cc => I
Apply:  Pos: [127, 131, 140] ccc => cc
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [139, 149] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [156, 162] cc => I
Apply:  Pos: [158, 168] cc => I
Apply:  Pos: [174, 176] cc => I
Apply:  Pos: [177, 187] cc => I
Apply:  Pos: [188, 194] cc => I
Apply:  Pos: [196, 205] cc => I
Apply:  Pos: [200, 207, 212] ccc => cc
Apply:  Pos: [206, 211] cc => I
Apply:  Pos: [231, 237] cc => I
Apply:  Pos: [229, 234] cc => I
Apply:  Pos: [222, 228] cc => I
Apply:  Pos: [224, 232] cc => I
Apply:  Pos: [225, 236] cc => I
Apply:  Pos: [226, 238] cc => I
Apply:  Pos: [230, 233] cc => I
Apply:  Pos: [256, 269] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015636920928955078

[4, 2], [6, 12], [0, 3], [10, 18], [7, 1], [4, 6], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [5, 15], [2, 12], [6, 12], [17, 0], [2, 16], [6, 5], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [0, 18], [9, 7], [6, 11], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [18, 14], [9, 7], [6, 12], [10, 18], [19, 17], [12, 18], [16, 19], [10, 18], [0, 9], [15, 7], [4, 2], [6, 11], [5, 15], [18, 14], [17, 3], [12, 11], [9, 1], [2, 10], [3, 8], [9, 18], [11, 1], [6, 5], [10, 0], [9, 7], [16, 10], [0, 18], [3, 8], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [9, 7], [12, 10], [0, 18], [7, 1], [6, 5], [19, 0], [17, 3], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [5, 15], [19, 3], [16, 10], [3, 8], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [5, 15], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  5.343679666519165

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[40, 50]
[38, 57]
[64, 72]
[52, 74]
[69, 78]
[67, 82]
[148, 160]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[1, 5, 12]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[40, 50]
[38, 57]
[64, 72]
[52, 74]
[69, 78]
[67, 82]
[148, 160]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.23442006111145

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 5, 12] ccc => cc, Pos: [38, 57] cc => I, Pos: [38, 57] cc => I, Pos: [40, 50] cc => I, Pos: [40, 50] cc => I, Pos: [52, 74] cc => I, Pos: [52, 74] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [67, 82] cc => I, Pos: [67, 82] cc => I, Pos: [69, 78] cc => I, Pos: [69, 78] cc => I, Pos: [148, 160] cc => I, Pos: [148, 160] cc => I]

--------End Timer [Generate Plans]:  0.031247615814208984

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 5, 12] ccc => cc,
 Pos: [38, 57] cc => I,
 Pos: [40, 50] cc => I,
 Pos: [52, 74] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [67, 82] cc => I,
 Pos: [69, 78] cc => I,
 Pos: [148, 160] cc => I]
Change: 8, Saving: 9

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 5, 12] ccc => cc
Apply:  Pos: [38, 57] cc => I
Apply:  Pos: [40, 50] cc => I
Apply:  Pos: [52, 74] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [67, 82] cc => I
Apply:  Pos: [69, 78] cc => I
Apply:  Pos: [148, 160] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [4, 6], [0, 3], [10, 18], [7, 1], [6, 12], [0, 18], [11, 1], [3, 8], [8, 14], [5, 15], [5, 11], [2, 12], [17, 0], [2, 16], [6, 5], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [0, 18], [9, 7], [3, 8], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [18, 14], [9, 7], [6, 12], [10, 18], [12, 18], [10, 18], [0, 9], [15, 7], [4, 2], [5, 15], [18, 14], [17, 3], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [7, 1], [19, 0], [17, 3], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [19, 3], [16, 10], [3, 8], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  3.265667676925659

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[52, 69]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[11, 15, 26]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[52, 69]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8597450256347656

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 15, 26] ccc => cc, Pos: [52, 69] cc => I, Pos: [52, 69] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 15, 26] ccc => cc, Pos: [52, 69] cc => I]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 15, 26] ccc => cc
Apply:  Pos: [52, 69] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 6], [4, 2], [0, 3], [10, 18], [7, 1], [6, 12], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [6, 5], [2, 12], [17, 0], [2, 16], [5, 15], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [0, 18], [9, 7], [3, 8], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [18, 14], [9, 7], [6, 12], [12, 18], [0, 9], [15, 7], [4, 2], [5, 15], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [7, 1], [19, 0], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [19, 3], [16, 10], [3, 8], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  2.8597450256347656

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.781012773513794

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [4, 6], [0, 3], [10, 18], [7, 1], [6, 12], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [6, 5], [2, 12], [17, 0], [2, 16], [5, 15], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [0, 18], [9, 7], [3, 8], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [18, 14], [9, 7], [6, 12], [12, 18], [0, 9], [15, 7], [4, 2], [5, 15], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [7, 1], [19, 0], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [19, 3], [16, 10], [3, 8], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  2.781012773513794

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [161] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 35 - (small)
 - circuit cycle: 322

Reduced: 
 - size: 109 (40.37%)
 - depth: 10 (22.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936856269836426

[4, 2], [6, 12], [0, 3], [10, 18], [7, 1], [4, 6], [0, 18], [2, 16], [11, 1], [9, 7], [12, 10], [3, 8], [4, 6], [9, 7], [8, 14], [19, 3], [17, 0], [2, 16], [5, 11], [12, 10], [4, 6], [5, 15], [2, 12], [10, 18], [1, 13], [17, 0], [9, 7], [6, 12], [19, 3], [17, 0], [10, 18], [2, 16], [9, 7], [6, 5], [0, 3], [9, 18], [11, 7], [16, 10], [6, 5], [17, 3], [2, 12], [19, 0], [11, 9], [6, 5], [16, 10], [18, 8], [0, 3], [2, 12], [6, 12], [16, 19], [1, 13], [11, 7], [17, 3], [18, 8], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [12, 5], [0, 18], [9, 7], [6, 11], [3, 8], [19, 17], [9, 18], [13, 14], [12, 5], [7, 1], [17, 3], [0, 9], [11, 1], [2, 12], [16, 19], [18, 14], [17, 3], [16, 19], [9, 7], [6, 12], [10, 18], [19, 17], [12, 10], [11, 1], [0, 9], [8, 13], [6, 5], [16, 19], [10, 18], [6, 5], [0, 9], [19, 17], [15, 7], [8, 13], [12, 10], [4, 2], [6, 11], [19, 17], [5, 15], [18, 14], [3, 8], [12, 11], [9, 1], [2, 10], [17, 3], [13, 14], [9, 18], [11, 1], [6, 5], [10, 0], [3, 8], [13, 14], [9, 7], [16, 10], [5, 15], [0, 18], [3, 8], [5, 15], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [7, 1], [12, 10], [0, 18], [8, 13], [9, 7], [6, 5], [19, 0], [17, 3], [2, 12], [8, 13], [4, 2], [17, 0], [16, 19], [7, 1], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [16, 19], [11, 7], [8, 14], [12, 5], [10, 9], [19, 3], [2, 16], [17, 0], [8, 14], [18, 13], [11, 1], [6, 12], [2, 16], [17, 0], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [18, 13], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [15, 7], [8, 14], [15, 7], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [18, 13], [6, 5], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [6, 5], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [1, 13], [4, 2], [10, 0], [5, 11], [16, 12], [8, 14], [15, 7], [9, 1], [19, 3], [8, 14], [2, 16], [15, 7], [1, 13], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [5, 15], [8, 13], [19, 3], [11, 7], [9, 1], [4, 6], [16, 10], [8, 13], [5, 15], [19, 0], [2, 12], [11, 7], [19, 0], [5, 15], [3, 8], [9, 1], [2, 12], [4, 6], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [5, 15], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [13, 14], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], [13, 14], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 12]
[9, 13]
[7, 17]
[10, 19]
[12, 20]
[16, 25]
[13, 26]
[15, 28]
[25, 29]
[23, 30]
[17, 31]
[26, 32]
[33, 38]
[38, 43]
[37, 44]
[40, 47]
[24, 50]
[36, 51]
[45, 53]
[64, 72]
[74, 80]
[78, 81]
[76, 87]
[90, 93]
[88, 94]
[89, 97]
[95, 101]
[109, 115]
[114, 120]
[118, 121]
[130, 136]
[136, 141]
[139, 149]
[151, 157]
[155, 161]
[156, 162]
[157, 164]
[158, 168]
[174, 176]
[176, 184]
[177, 187]
[187, 193]
[188, 194]
[196, 205]
[205, 209]
[206, 211]
[222, 228]
[221, 229]
[219, 231]
[224, 232]
[230, 233]
[229, 234]
[225, 236]
[231, 237]
[226, 238]
[236, 241]
[234, 247]
[256, 269]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[75, 82, 88]
[81, 85, 91]
[86, 92, 98]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[84, 86, 92]
[85, 91, 95]
[104, 108, 114]
[102, 112, 118]
[127, 131, 140]
[200, 207, 212]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 12]
[9, 13]
[7, 17]
[10, 19]
[12, 20]
[16, 25]
[13, 26]
[15, 28]
[25, 29]
[23, 30]
[17, 31]
[26, 32]
[33, 38]
[38, 43]
[37, 44]
[40, 47]
[24, 50]
[36, 51]
[45, 53]
[64, 72]
[74, 80]
[78, 81]
[76, 87]
[90, 93]
[88, 94]
[89, 97]
[95, 101]
[109, 115]
[114, 120]
[118, 121]
[130, 136]
[136, 141]
[139, 149]
[151, 157]
[155, 161]
[156, 162]
[157, 164]
[158, 168]
[174, 176]
[176, 184]
[177, 187]
[187, 193]
[188, 194]
[196, 205]
[205, 209]
[206, 211]
[222, 228]
[221, 229]
[219, 231]
[224, 232]
[230, 233]
[229, 234]
[225, 236]
[231, 237]
[226, 238]
[236, 241]
[234, 247]
[256, 269]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.1213672161102295

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 12] cc => I, Pos: [5, 12] cc => I, Pos: [7, 17] cc => I, Pos: [7, 17] cc => I, Pos: [9, 13] cc => I, Pos: [9, 13] cc => I, Pos: [10, 19] cc => I, Pos: [10, 19] cc => I, Pos: [12, 20] cc => I, Pos: [12, 20] cc => I, Pos: [13, 26] cc => I, Pos: [13, 26] cc => I, Pos: [15, 28] cc => I, Pos: [15, 28] cc => I, Pos: [16, 25] cc => I, Pos: [16, 25] cc => I, Pos: [17, 31] cc => I, Pos: [17, 31] cc => I, Pos: [23, 30] cc => I, Pos: [23, 30] cc => I, Pos: [24, 50] cc => I, Pos: [24, 50] cc => I, Pos: [25, 29] cc => I, Pos: [25, 29] cc => I, Pos: [26, 32] cc => I, Pos: [26, 32] cc => I, Pos: [33, 38] cc => I, Pos: [33, 38] cc => I, Pos: [36, 51] cc => I, Pos: [36, 51] cc => I, Pos: [37, 44] cc => I, Pos: [37, 44] cc => I, Pos: [38, 43] cc => I, Pos: [38, 43] cc => I, Pos: [40, 47] cc => I, Pos: [40, 47] cc => I, Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [74, 80] cc => I, Pos: [74, 80] cc => I, Pos: [75, 82, 88] ccc => cc, Pos: [76, 87] cc => I, Pos: [76, 87] cc => I, Pos: [78, 81] cc => I, Pos: [78, 81] cc => I, Pos: [81, 85, 91] ccc => cc, Pos: [84, 86, 92] ccc => cc, Pos: [85, 91, 95] ccc => cc, Pos: [86, 92, 98] ccc => cc, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 97] cc => I, Pos: [89, 97] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [95, 101] cc => I, Pos: [95, 101] cc => I, Pos: [102, 112, 118] ccc => cc, Pos: [104, 108, 114] ccc => cc, Pos: [109, 115] cc => I, Pos: [109, 115] cc => I, Pos: [114, 120] cc => I, Pos: [114, 120] cc => I, Pos: [118, 121] cc => I, Pos: [118, 121] cc => I, Pos: [127, 131, 140] ccc => cc, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [136, 141] cc => I, Pos: [136, 141] cc => I, Pos: [139, 149] cc => I, Pos: [139, 149] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [156, 162] cc => I, Pos: [156, 162] cc => I, Pos: [157, 164] cc => I, Pos: [157, 164] cc => I, Pos: [158, 168] cc => I, Pos: [158, 168] cc => I, Pos: [174, 176] cc => I, Pos: [174, 176] cc => I, Pos: [176, 184] cc => I, Pos: [176, 184] cc => I, Pos: [177, 187] cc => I, Pos: [177, 187] cc => I, Pos: [187, 193] cc => I, Pos: [187, 193] cc => I, Pos: [188, 194] cc => I, Pos: [188, 194] cc => I, Pos: [196, 205] cc => I, Pos: [196, 205] cc => I, Pos: [200, 207, 212] ccc => cc, Pos: [205, 209] cc => I, Pos: [205, 209] cc => I, Pos: [206, 211] cc => I, Pos: [206, 211] cc => I, Pos: [219, 231] cc => I, Pos: [219, 231] cc => I, Pos: [221, 229] cc => I, Pos: [221, 229] cc => I, Pos: [222, 228] cc => I, Pos: [222, 228] cc => I, Pos: [224, 232] cc => I, Pos: [224, 232] cc => I, Pos: [225, 236] cc => I, Pos: [225, 236] cc => I, Pos: [226, 238] cc => I, Pos: [226, 238] cc => I, Pos: [229, 234] cc => I, Pos: [229, 234] cc => I, Pos: [230, 233] cc => I, Pos: [230, 233] cc => I, Pos: [231, 237] cc => I, Pos: [231, 237] cc => I, Pos: [234, 247] cc => I, Pos: [234, 247] cc => I, Pos: [236, 241] cc => I, Pos: [236, 241] cc => I, Pos: [256, 269] cc => I, Pos: [256, 269] cc => I]

--------End Timer [Generate Plans]:  0.10937237739562988

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 12] cc => I,
 Pos: [7, 17] cc => I,
 Pos: [9, 13] cc => I,
 Pos: [10, 19] cc => I,
 Pos: [15, 28] cc => I,
 Pos: [25, 29] cc => I,
 Pos: [23, 30] cc => I,
 Pos: [24, 50] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [33, 38] cc => I,
 Pos: [36, 51] cc => I,
 Pos: [37, 44] cc => I,
 Pos: [40, 47] cc => I,
 Pos: [45, 53] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [74, 80] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [76, 87] cc => I,
 Pos: [81, 85, 91] ccc => cc,
 Pos: [86, 92, 98] ccc => cc,
 Pos: [89, 97] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [95, 101] cc => I,
 Pos: [118, 121] cc => I,
 Pos: [104, 108, 114] ccc => cc,
 Pos: [109, 115] cc => I,
 Pos: [127, 131, 140] ccc => cc,
 Pos: [130, 136] cc => I,
 Pos: [139, 149] cc => I,
 Pos: [157, 164] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [156, 162] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [176, 184] cc => I,
 Pos: [187, 193] cc => I,
 Pos: [188, 194] cc => I,
 Pos: [205, 209] cc => I,
 Pos: [200, 207, 212] ccc => cc,
 Pos: [206, 211] cc => I,
 Pos: [231, 237] cc => I,
 Pos: [229, 234] cc => I,
 Pos: [222, 228] cc => I,
 Pos: [224, 232] cc => I,
 Pos: [225, 236] cc => I,
 Pos: [226, 238] cc => I,
 Pos: [230, 233] cc => I,
 Pos: [256, 269] cc => I]
Change: 47, Saving: 48

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 12] cc => I
Apply:  Pos: [7, 17] cc => I
Apply:  Pos: [9, 13] cc => I
Apply:  Pos: [10, 19] cc => I
Apply:  Pos: [15, 28] cc => I
Apply:  Pos: [25, 29] cc => I
Apply:  Pos: [23, 30] cc => I
Apply:  Pos: [24, 50] cc => I
Apply:  Pos: [26, 32] cc => I
Apply:  Pos: [33, 38] cc => I
Apply:  Pos: [36, 51] cc => I
Apply:  Pos: [37, 44] cc => I
Apply:  Pos: [40, 47] cc => I
Apply:  Pos: [45, 53] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [74, 80] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [76, 87] cc => I
Apply:  Pos: [81, 85, 91] ccc => cc
Apply:  Pos: [86, 92, 98] ccc => cc
Apply:  Pos: [89, 97] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [95, 101] cc => I
Apply:  Pos: [118, 121] cc => I
Apply:  Pos: [104, 108, 114] ccc => cc
Apply:  Pos: [109, 115] cc => I
Apply:  Pos: [127, 131, 140] ccc => cc
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [139, 149] cc => I
Apply:  Pos: [157, 164] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [156, 162] cc => I
Apply:  Pos: [158, 168] cc => I
Apply:  Pos: [176, 184] cc => I
Apply:  Pos: [187, 193] cc => I
Apply:  Pos: [188, 194] cc => I
Apply:  Pos: [205, 209] cc => I
Apply:  Pos: [200, 207, 212] ccc => cc
Apply:  Pos: [206, 211] cc => I
Apply:  Pos: [231, 237] cc => I
Apply:  Pos: [229, 234] cc => I
Apply:  Pos: [222, 228] cc => I
Apply:  Pos: [224, 232] cc => I
Apply:  Pos: [225, 236] cc => I
Apply:  Pos: [226, 238] cc => I
Apply:  Pos: [230, 233] cc => I
Apply:  Pos: [256, 269] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [6, 12], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [3, 8], [8, 14], [17, 0], [5, 11], [4, 6], [5, 15], [2, 12], [6, 12], [2, 16], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [6, 5], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [0, 18], [9, 7], [6, 11], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 9], [2, 12], [16, 19], [18, 14], [16, 17], [9, 7], [6, 12], [10, 18], [19, 17], [12, 18], [10, 18], [15, 7], [4, 2], [6, 11], [5, 15], [18, 14], [17, 3], [12, 11], [9, 1], [2, 10], [3, 8], [9, 18], [11, 1], [6, 5], [10, 0], [9, 7], [16, 10], [0, 18], [3, 8], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [9, 7], [12, 10], [0, 18], [7, 1], [6, 5], [19, 0], [17, 3], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [8, 14], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [15, 7], [8, 14], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [5, 15], [19, 3], [16, 10], [3, 8], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [5, 15], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  5.230739593505859

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[51, 53]
[38, 57]
[64, 72]
[69, 78]
[67, 82]
[148, 160]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[34, 40, 46]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[1, 11, 13]
[12, 21, 27]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[51, 53]
[38, 57]
[64, 72]
[69, 78]
[67, 82]
[148, 160]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.1786255836486816

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 11, 13] ccc => cc, Pos: [12, 21, 27] ccc => cc, Pos: [34, 40, 46] ccc => cc, Pos: [38, 57] cc => I, Pos: [38, 57] cc => I, Pos: [51, 53] cc => I, Pos: [51, 53] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [67, 82] cc => I, Pos: [67, 82] cc => I, Pos: [69, 78] cc => I, Pos: [69, 78] cc => I, Pos: [148, 160] cc => I, Pos: [148, 160] cc => I]

--------End Timer [Generate Plans]:  0.031249046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 11, 13] ccc => cc,
 Pos: [12, 21, 27] ccc => cc,
 Pos: [34, 40, 46] ccc => cc,
 Pos: [38, 57] cc => I,
 Pos: [51, 53] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [67, 82] cc => I,
 Pos: [69, 78] cc => I,
 Pos: [148, 160] cc => I]
Change: 9, Saving: 9

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 11, 13] ccc => cc
Apply:  Pos: [12, 21, 27] ccc => cc
Apply:  Pos: [34, 40, 46] ccc => cc
Apply:  Pos: [38, 57] cc => I
Apply:  Pos: [51, 53] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [67, 82] cc => I
Apply:  Pos: [69, 78] cc => I
Apply:  Pos: [148, 160] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [4, 6], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [3, 8], [8, 14], [17, 0], [5, 11], [6, 12], [6, 5], [2, 16], [2, 12], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [5, 15], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 9], [2, 12], [18, 14], [16, 17], [9, 7], [6, 12], [19, 17], [12, 18], [15, 7], [4, 2], [5, 15], [18, 14], [17, 3], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [7, 1], [19, 0], [17, 3], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [8, 14], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [15, 7], [8, 14], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [19, 3], [16, 10], [3, 8], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  3.2098746299743652

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[53, 71]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[53, 71]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9304141998291016

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [53, 71] cc => I, Pos: [53, 71] cc => I]

--------End Timer [Generate Plans]:  0.002997875213623047

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [53, 71] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [53, 71] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0010008811950683594

[4, 6], [4, 2], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [3, 8], [8, 14], [17, 0], [5, 11], [6, 5], [6, 12], [2, 12], [2, 16], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [5, 15], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 9], [2, 12], [18, 14], [16, 17], [9, 7], [6, 12], [19, 17], [12, 18], [15, 7], [4, 2], [5, 15], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [7, 1], [19, 0], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [8, 14], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [15, 7], [8, 14], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [19, 3], [16, 10], [3, 8], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  2.934412956237793

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.024405002593994

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [4, 6], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [3, 8], [8, 14], [17, 0], [5, 11], [6, 12], [6, 5], [2, 16], [2, 12], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [5, 15], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 9], [2, 12], [18, 14], [16, 17], [9, 7], [6, 12], [19, 17], [12, 18], [15, 7], [4, 2], [5, 15], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [7, 1], [19, 0], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [8, 14], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [15, 7], [8, 14], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [19, 3], [16, 10], [3, 8], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  3.024405002593994

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [164] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 35 - (small)
 - circuit cycle: 328

Reduced: 
 - size: 106 (39.26%)
 - depth: 10 (22.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10935521125793457

[4, 2], [6, 12], [0, 3], [10, 18], [7, 1], [4, 6], [0, 18], [2, 16], [11, 1], [9, 7], [12, 10], [3, 8], [4, 6], [9, 7], [8, 14], [19, 3], [17, 0], [2, 16], [5, 11], [12, 10], [4, 6], [5, 15], [2, 12], [10, 18], [1, 13], [17, 0], [9, 7], [6, 12], [19, 3], [17, 0], [10, 18], [2, 16], [9, 7], [6, 5], [0, 3], [9, 18], [11, 7], [16, 10], [6, 5], [17, 3], [2, 12], [19, 0], [11, 9], [6, 5], [16, 10], [18, 8], [0, 3], [2, 12], [6, 12], [16, 19], [1, 13], [11, 7], [17, 3], [18, 8], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [12, 5], [0, 18], [9, 7], [6, 11], [3, 8], [19, 17], [9, 18], [13, 14], [12, 5], [7, 1], [17, 3], [0, 9], [11, 1], [2, 12], [16, 19], [18, 14], [17, 3], [16, 19], [9, 7], [6, 12], [10, 18], [19, 17], [12, 10], [11, 1], [0, 9], [8, 13], [6, 5], [16, 19], [10, 18], [6, 5], [0, 9], [19, 17], [15, 7], [8, 13], [12, 10], [4, 2], [6, 11], [19, 17], [5, 15], [18, 14], [3, 8], [12, 11], [9, 1], [2, 10], [17, 3], [13, 14], [9, 18], [11, 1], [6, 5], [10, 0], [3, 8], [13, 14], [9, 7], [16, 10], [5, 15], [0, 18], [3, 8], [5, 15], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [7, 1], [12, 10], [0, 18], [8, 13], [9, 7], [6, 5], [19, 0], [17, 3], [2, 12], [8, 13], [4, 2], [17, 0], [16, 19], [7, 1], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [16, 19], [11, 7], [8, 14], [12, 5], [10, 9], [19, 3], [2, 16], [17, 0], [8, 14], [18, 13], [11, 1], [6, 12], [2, 16], [17, 0], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [18, 13], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [15, 7], [8, 14], [15, 7], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [18, 13], [6, 5], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [6, 5], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [1, 13], [4, 2], [10, 0], [5, 11], [16, 12], [8, 14], [15, 7], [9, 1], [19, 3], [8, 14], [2, 16], [15, 7], [1, 13], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [5, 15], [8, 13], [19, 3], [11, 7], [9, 1], [4, 6], [16, 10], [8, 13], [5, 15], [19, 0], [2, 12], [11, 7], [19, 0], [5, 15], [3, 8], [9, 1], [2, 12], [4, 6], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [5, 15], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [13, 14], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], [13, 14], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 12]
[9, 13]
[7, 17]
[10, 19]
[12, 20]
[16, 25]
[13, 26]
[15, 28]
[25, 29]
[23, 30]
[17, 31]
[26, 32]
[33, 38]
[38, 43]
[37, 44]
[40, 47]
[24, 50]
[36, 51]
[45, 53]
[64, 72]
[74, 80]
[78, 81]
[76, 87]
[90, 93]
[88, 94]
[89, 97]
[95, 101]
[109, 115]
[114, 120]
[118, 121]
[130, 136]
[136, 141]
[139, 149]
[151, 157]
[155, 161]
[156, 162]
[157, 164]
[158, 168]
[174, 176]
[176, 184]
[177, 187]
[187, 193]
[188, 194]
[196, 205]
[205, 209]
[206, 211]
[222, 228]
[221, 229]
[219, 231]
[224, 232]
[230, 233]
[229, 234]
[225, 236]
[231, 237]
[226, 238]
[236, 241]
[234, 247]
[256, 269]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[75, 82, 88]
[81, 85, 91]
[86, 92, 98]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[84, 86, 92]
[85, 91, 95]
[104, 108, 114]
[102, 112, 118]
[127, 131, 140]
[200, 207, 212]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 12]
[9, 13]
[7, 17]
[10, 19]
[12, 20]
[16, 25]
[13, 26]
[15, 28]
[25, 29]
[23, 30]
[17, 31]
[26, 32]
[33, 38]
[38, 43]
[37, 44]
[40, 47]
[24, 50]
[36, 51]
[45, 53]
[64, 72]
[74, 80]
[78, 81]
[76, 87]
[90, 93]
[88, 94]
[89, 97]
[95, 101]
[109, 115]
[114, 120]
[118, 121]
[130, 136]
[136, 141]
[139, 149]
[151, 157]
[155, 161]
[156, 162]
[157, 164]
[158, 168]
[174, 176]
[176, 184]
[177, 187]
[187, 193]
[188, 194]
[196, 205]
[205, 209]
[206, 211]
[222, 228]
[221, 229]
[219, 231]
[224, 232]
[230, 233]
[229, 234]
[225, 236]
[231, 237]
[226, 238]
[236, 241]
[234, 247]
[256, 269]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.2801735401153564

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 12] cc => I, Pos: [5, 12] cc => I, Pos: [7, 17] cc => I, Pos: [7, 17] cc => I, Pos: [9, 13] cc => I, Pos: [9, 13] cc => I, Pos: [10, 19] cc => I, Pos: [10, 19] cc => I, Pos: [12, 20] cc => I, Pos: [12, 20] cc => I, Pos: [13, 26] cc => I, Pos: [13, 26] cc => I, Pos: [15, 28] cc => I, Pos: [15, 28] cc => I, Pos: [16, 25] cc => I, Pos: [16, 25] cc => I, Pos: [17, 31] cc => I, Pos: [17, 31] cc => I, Pos: [23, 30] cc => I, Pos: [23, 30] cc => I, Pos: [24, 50] cc => I, Pos: [24, 50] cc => I, Pos: [25, 29] cc => I, Pos: [25, 29] cc => I, Pos: [26, 32] cc => I, Pos: [26, 32] cc => I, Pos: [33, 38] cc => I, Pos: [33, 38] cc => I, Pos: [36, 51] cc => I, Pos: [36, 51] cc => I, Pos: [37, 44] cc => I, Pos: [37, 44] cc => I, Pos: [38, 43] cc => I, Pos: [38, 43] cc => I, Pos: [40, 47] cc => I, Pos: [40, 47] cc => I, Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [74, 80] cc => I, Pos: [74, 80] cc => I, Pos: [75, 82, 88] ccc => cc, Pos: [76, 87] cc => I, Pos: [76, 87] cc => I, Pos: [78, 81] cc => I, Pos: [78, 81] cc => I, Pos: [81, 85, 91] ccc => cc, Pos: [84, 86, 92] ccc => cc, Pos: [85, 91, 95] ccc => cc, Pos: [86, 92, 98] ccc => cc, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 97] cc => I, Pos: [89, 97] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [95, 101] cc => I, Pos: [95, 101] cc => I, Pos: [102, 112, 118] ccc => cc, Pos: [104, 108, 114] ccc => cc, Pos: [109, 115] cc => I, Pos: [109, 115] cc => I, Pos: [114, 120] cc => I, Pos: [114, 120] cc => I, Pos: [118, 121] cc => I, Pos: [118, 121] cc => I, Pos: [127, 131, 140] ccc => cc, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [136, 141] cc => I, Pos: [136, 141] cc => I, Pos: [139, 149] cc => I, Pos: [139, 149] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [156, 162] cc => I, Pos: [156, 162] cc => I, Pos: [157, 164] cc => I, Pos: [157, 164] cc => I, Pos: [158, 168] cc => I, Pos: [158, 168] cc => I, Pos: [174, 176] cc => I, Pos: [174, 176] cc => I, Pos: [176, 184] cc => I, Pos: [176, 184] cc => I, Pos: [177, 187] cc => I, Pos: [177, 187] cc => I, Pos: [187, 193] cc => I, Pos: [187, 193] cc => I, Pos: [188, 194] cc => I, Pos: [188, 194] cc => I, Pos: [196, 205] cc => I, Pos: [196, 205] cc => I, Pos: [200, 207, 212] ccc => cc, Pos: [205, 209] cc => I, Pos: [205, 209] cc => I, Pos: [206, 211] cc => I, Pos: [206, 211] cc => I, Pos: [219, 231] cc => I, Pos: [219, 231] cc => I, Pos: [221, 229] cc => I, Pos: [221, 229] cc => I, Pos: [222, 228] cc => I, Pos: [222, 228] cc => I, Pos: [224, 232] cc => I, Pos: [224, 232] cc => I, Pos: [225, 236] cc => I, Pos: [225, 236] cc => I, Pos: [226, 238] cc => I, Pos: [226, 238] cc => I, Pos: [229, 234] cc => I, Pos: [229, 234] cc => I, Pos: [230, 233] cc => I, Pos: [230, 233] cc => I, Pos: [231, 237] cc => I, Pos: [231, 237] cc => I, Pos: [234, 247] cc => I, Pos: [234, 247] cc => I, Pos: [236, 241] cc => I, Pos: [236, 241] cc => I, Pos: [256, 269] cc => I, Pos: [256, 269] cc => I]

--------End Timer [Generate Plans]:  0.10935401916503906

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 12] cc => I,
 Pos: [7, 17] cc => I,
 Pos: [13, 26] cc => I,
 Pos: [10, 19] cc => I,
 Pos: [15, 28] cc => I,
 Pos: [16, 25] cc => I,
 Pos: [23, 30] cc => I,
 Pos: [24, 50] cc => I,
 Pos: [38, 43] cc => I,
 Pos: [36, 51] cc => I,
 Pos: [37, 44] cc => I,
 Pos: [40, 47] cc => I,
 Pos: [45, 53] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [74, 80] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [76, 87] cc => I,
 Pos: [78, 81] cc => I,
 Pos: [86, 92, 98] ccc => cc,
 Pos: [95, 101] cc => I,
 Pos: [89, 97] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [118, 121] cc => I,
 Pos: [104, 108, 114] ccc => cc,
 Pos: [109, 115] cc => I,
 Pos: [127, 131, 140] ccc => cc,
 Pos: [130, 136] cc => I,
 Pos: [139, 149] cc => I,
 Pos: [157, 164] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [156, 162] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [174, 176] cc => I,
 Pos: [187, 193] cc => I,
 Pos: [188, 194] cc => I,
 Pos: [205, 209] cc => I,
 Pos: [200, 207, 212] ccc => cc,
 Pos: [206, 211] cc => I,
 Pos: [219, 231] cc => I,
 Pos: [221, 229] cc => I,
 Pos: [222, 228] cc => I,
 Pos: [224, 232] cc => I,
 Pos: [225, 236] cc => I,
 Pos: [226, 238] cc => I,
 Pos: [230, 233] cc => I,
 Pos: [234, 247] cc => I,
 Pos: [256, 269] cc => I]
Change: 47, Saving: 47

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 12] cc => I
Apply:  Pos: [7, 17] cc => I
Apply:  Pos: [13, 26] cc => I
Apply:  Pos: [10, 19] cc => I
Apply:  Pos: [15, 28] cc => I
Apply:  Pos: [16, 25] cc => I
Apply:  Pos: [23, 30] cc => I
Apply:  Pos: [24, 50] cc => I
Apply:  Pos: [38, 43] cc => I
Apply:  Pos: [36, 51] cc => I
Apply:  Pos: [37, 44] cc => I
Apply:  Pos: [40, 47] cc => I
Apply:  Pos: [45, 53] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [74, 80] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [76, 87] cc => I
Apply:  Pos: [78, 81] cc => I
Apply:  Pos: [86, 92, 98] ccc => cc
Apply:  Pos: [95, 101] cc => I
Apply:  Pos: [89, 97] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [118, 121] cc => I
Apply:  Pos: [104, 108, 114] ccc => cc
Apply:  Pos: [109, 115] cc => I
Apply:  Pos: [127, 131, 140] ccc => cc
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [139, 149] cc => I
Apply:  Pos: [157, 164] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [156, 162] cc => I
Apply:  Pos: [158, 168] cc => I
Apply:  Pos: [174, 176] cc => I
Apply:  Pos: [187, 193] cc => I
Apply:  Pos: [188, 194] cc => I
Apply:  Pos: [205, 209] cc => I
Apply:  Pos: [200, 207, 212] ccc => cc
Apply:  Pos: [206, 211] cc => I
Apply:  Pos: [219, 231] cc => I
Apply:  Pos: [221, 229] cc => I
Apply:  Pos: [222, 228] cc => I
Apply:  Pos: [224, 232] cc => I
Apply:  Pos: [225, 236] cc => I
Apply:  Pos: [226, 238] cc => I
Apply:  Pos: [230, 233] cc => I
Apply:  Pos: [234, 247] cc => I
Apply:  Pos: [256, 269] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [6, 12], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [9, 7], [3, 8], [8, 14], [5, 11], [4, 6], [5, 15], [2, 12], [6, 12], [17, 0], [2, 16], [9, 7], [6, 5], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [0, 18], [9, 7], [6, 11], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 9], [2, 12], [18, 14], [9, 7], [6, 12], [10, 18], [19, 17], [12, 18], [16, 19], [10, 18], [15, 7], [4, 2], [6, 11], [5, 15], [18, 14], [17, 3], [12, 11], [9, 1], [2, 10], [3, 8], [9, 18], [11, 1], [6, 5], [10, 0], [9, 7], [16, 10], [0, 18], [3, 8], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [9, 7], [12, 10], [0, 18], [7, 1], [6, 5], [19, 0], [17, 3], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [8, 14], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  5.3895275592803955

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 17]
[42, 52]
[40, 58]
[65, 73]
[54, 75]
[70, 79]
[68, 83]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[1, 11, 13]
[12, 18, 29]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 17]
[42, 52]
[40, 58]
[65, 73]
[54, 75]
[70, 79]
[68, 83]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2502100467681885

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 11, 13] ccc => cc, Pos: [7, 17] cc => I, Pos: [7, 17] cc => I, Pos: [12, 18, 29] ccc => cc, Pos: [40, 58] cc => I, Pos: [40, 58] cc => I, Pos: [42, 52] cc => I, Pos: [42, 52] cc => I, Pos: [54, 75] cc => I, Pos: [54, 75] cc => I, Pos: [65, 73] cc => I, Pos: [65, 73] cc => I, Pos: [68, 83] cc => I, Pos: [68, 83] cc => I, Pos: [70, 79] cc => I, Pos: [70, 79] cc => I]

--------End Timer [Generate Plans]:  0.031248807907104492

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 11, 13] ccc => cc,
 Pos: [7, 17] cc => I,
 Pos: [12, 18, 29] ccc => cc,
 Pos: [40, 58] cc => I,
 Pos: [42, 52] cc => I,
 Pos: [54, 75] cc => I,
 Pos: [65, 73] cc => I,
 Pos: [68, 83] cc => I,
 Pos: [70, 79] cc => I]
Change: 9, Saving: 12

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 11, 13] ccc => cc
Apply:  Pos: [7, 17] cc => I
Apply:  Pos: [12, 18, 29] ccc => cc
Apply:  Pos: [40, 58] cc => I
Apply:  Pos: [42, 52] cc => I
Apply:  Pos: [54, 75] cc => I
Apply:  Pos: [65, 73] cc => I
Apply:  Pos: [68, 83] cc => I
Apply:  Pos: [70, 79] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [4, 6], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [6, 12], [6, 5], [2, 12], [17, 0], [2, 16], [5, 15], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [0, 18], [9, 7], [3, 8], [9, 18], [13, 14], [7, 1], [0, 9], [2, 12], [18, 14], [9, 7], [6, 12], [10, 18], [12, 18], [10, 18], [15, 7], [4, 2], [5, 15], [18, 14], [17, 3], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [7, 1], [19, 0], [17, 3], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [8, 14], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  3.281458854675293

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[12, 22]
[50, 67]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[12, 22]
[50, 67]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.844400405883789

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 22] cc => I, Pos: [12, 22] cc => I, Pos: [50, 67] cc => I, Pos: [50, 67] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 22] cc => I, Pos: [50, 67] cc => I]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 22] cc => I
Apply:  Pos: [50, 67] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 6], [4, 2], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [6, 5], [2, 12], [17, 0], [2, 16], [5, 15], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [0, 3], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [0, 18], [9, 7], [3, 8], [9, 18], [13, 14], [7, 1], [0, 9], [2, 12], [18, 14], [9, 7], [6, 12], [12, 18], [15, 7], [4, 2], [5, 15], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [7, 1], [19, 0], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [8, 14], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  2.844400405883789

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.75020170211792

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [4, 6], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [6, 5], [2, 12], [17, 0], [2, 16], [5, 15], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [0, 3], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [0, 18], [9, 7], [3, 8], [9, 18], [13, 14], [7, 1], [0, 9], [2, 12], [18, 14], [9, 7], [6, 12], [12, 18], [15, 7], [4, 2], [5, 15], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [7, 1], [19, 0], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [8, 14], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  2.75020170211792

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [158] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 35 - (small)
 - circuit cycle: 316

Reduced: 
 - size: 112 (41.48%)
 - depth: 10 (22.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936760902404785

[4, 2], [6, 12], [0, 3], [10, 18], [7, 1], [4, 6], [0, 18], [2, 16], [11, 1], [9, 7], [12, 10], [3, 8], [4, 6], [9, 7], [8, 14], [19, 3], [17, 0], [2, 16], [5, 11], [12, 10], [4, 6], [5, 15], [2, 12], [10, 18], [1, 13], [17, 0], [9, 7], [6, 12], [19, 3], [17, 0], [10, 18], [2, 16], [9, 7], [6, 5], [0, 3], [9, 18], [11, 7], [16, 10], [6, 5], [17, 3], [2, 12], [19, 0], [11, 9], [6, 5], [16, 10], [18, 8], [0, 3], [2, 12], [6, 12], [16, 19], [1, 13], [11, 7], [17, 3], [18, 8], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [12, 5], [0, 18], [9, 7], [6, 11], [3, 8], [19, 17], [9, 18], [13, 14], [12, 5], [7, 1], [17, 3], [0, 9], [11, 1], [2, 12], [16, 19], [18, 14], [17, 3], [16, 19], [9, 7], [6, 12], [10, 18], [19, 17], [12, 10], [11, 1], [0, 9], [8, 13], [6, 5], [16, 19], [10, 18], [6, 5], [0, 9], [19, 17], [15, 7], [8, 13], [12, 10], [4, 2], [6, 11], [19, 17], [5, 15], [18, 14], [3, 8], [12, 11], [9, 1], [2, 10], [17, 3], [13, 14], [9, 18], [11, 1], [6, 5], [10, 0], [3, 8], [13, 14], [9, 7], [16, 10], [5, 15], [0, 18], [3, 8], [5, 15], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [7, 1], [12, 10], [0, 18], [8, 13], [9, 7], [6, 5], [19, 0], [17, 3], [2, 12], [8, 13], [4, 2], [17, 0], [16, 19], [7, 1], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [16, 19], [11, 7], [8, 14], [12, 5], [10, 9], [19, 3], [2, 16], [17, 0], [8, 14], [18, 13], [11, 1], [6, 12], [2, 16], [17, 0], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [18, 13], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [15, 7], [8, 14], [15, 7], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [18, 13], [6, 5], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [6, 5], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [1, 13], [4, 2], [10, 0], [5, 11], [16, 12], [8, 14], [15, 7], [9, 1], [19, 3], [8, 14], [2, 16], [15, 7], [1, 13], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [5, 15], [8, 13], [19, 3], [11, 7], [9, 1], [4, 6], [16, 10], [8, 13], [5, 15], [19, 0], [2, 12], [11, 7], [19, 0], [5, 15], [3, 8], [9, 1], [2, 12], [4, 6], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [5, 15], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [13, 14], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], [13, 14], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 12]
[9, 13]
[7, 17]
[10, 19]
[12, 20]
[16, 25]
[13, 26]
[15, 28]
[25, 29]
[23, 30]
[17, 31]
[26, 32]
[33, 38]
[38, 43]
[37, 44]
[40, 47]
[24, 50]
[36, 51]
[45, 53]
[64, 72]
[74, 80]
[78, 81]
[76, 87]
[90, 93]
[88, 94]
[89, 97]
[95, 101]
[109, 115]
[114, 120]
[118, 121]
[130, 136]
[136, 141]
[139, 149]
[151, 157]
[155, 161]
[156, 162]
[157, 164]
[158, 168]
[174, 176]
[176, 184]
[177, 187]
[187, 193]
[188, 194]
[196, 205]
[205, 209]
[206, 211]
[222, 228]
[221, 229]
[219, 231]
[224, 232]
[230, 233]
[229, 234]
[225, 236]
[231, 237]
[226, 238]
[236, 241]
[234, 247]
[256, 269]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[75, 82, 88]
[81, 85, 91]
[86, 92, 98]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[84, 86, 92]
[85, 91, 95]
[104, 108, 114]
[102, 112, 118]
[127, 131, 140]
[200, 207, 212]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 12]
[9, 13]
[7, 17]
[10, 19]
[12, 20]
[16, 25]
[13, 26]
[15, 28]
[25, 29]
[23, 30]
[17, 31]
[26, 32]
[33, 38]
[38, 43]
[37, 44]
[40, 47]
[24, 50]
[36, 51]
[45, 53]
[64, 72]
[74, 80]
[78, 81]
[76, 87]
[90, 93]
[88, 94]
[89, 97]
[95, 101]
[109, 115]
[114, 120]
[118, 121]
[130, 136]
[136, 141]
[139, 149]
[151, 157]
[155, 161]
[156, 162]
[157, 164]
[158, 168]
[174, 176]
[176, 184]
[177, 187]
[187, 193]
[188, 194]
[196, 205]
[205, 209]
[206, 211]
[222, 228]
[221, 229]
[219, 231]
[224, 232]
[230, 233]
[229, 234]
[225, 236]
[231, 237]
[226, 238]
[236, 241]
[234, 247]
[256, 269]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.20313835144043

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 12] cc => I, Pos: [5, 12] cc => I, Pos: [7, 17] cc => I, Pos: [7, 17] cc => I, Pos: [9, 13] cc => I, Pos: [9, 13] cc => I, Pos: [10, 19] cc => I, Pos: [10, 19] cc => I, Pos: [12, 20] cc => I, Pos: [12, 20] cc => I, Pos: [13, 26] cc => I, Pos: [13, 26] cc => I, Pos: [15, 28] cc => I, Pos: [15, 28] cc => I, Pos: [16, 25] cc => I, Pos: [16, 25] cc => I, Pos: [17, 31] cc => I, Pos: [17, 31] cc => I, Pos: [23, 30] cc => I, Pos: [23, 30] cc => I, Pos: [24, 50] cc => I, Pos: [24, 50] cc => I, Pos: [25, 29] cc => I, Pos: [25, 29] cc => I, Pos: [26, 32] cc => I, Pos: [26, 32] cc => I, Pos: [33, 38] cc => I, Pos: [33, 38] cc => I, Pos: [36, 51] cc => I, Pos: [36, 51] cc => I, Pos: [37, 44] cc => I, Pos: [37, 44] cc => I, Pos: [38, 43] cc => I, Pos: [38, 43] cc => I, Pos: [40, 47] cc => I, Pos: [40, 47] cc => I, Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [74, 80] cc => I, Pos: [74, 80] cc => I, Pos: [75, 82, 88] ccc => cc, Pos: [76, 87] cc => I, Pos: [76, 87] cc => I, Pos: [78, 81] cc => I, Pos: [78, 81] cc => I, Pos: [81, 85, 91] ccc => cc, Pos: [84, 86, 92] ccc => cc, Pos: [85, 91, 95] ccc => cc, Pos: [86, 92, 98] ccc => cc, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 97] cc => I, Pos: [89, 97] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [95, 101] cc => I, Pos: [95, 101] cc => I, Pos: [102, 112, 118] ccc => cc, Pos: [104, 108, 114] ccc => cc, Pos: [109, 115] cc => I, Pos: [109, 115] cc => I, Pos: [114, 120] cc => I, Pos: [114, 120] cc => I, Pos: [118, 121] cc => I, Pos: [118, 121] cc => I, Pos: [127, 131, 140] ccc => cc, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [136, 141] cc => I, Pos: [136, 141] cc => I, Pos: [139, 149] cc => I, Pos: [139, 149] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [156, 162] cc => I, Pos: [156, 162] cc => I, Pos: [157, 164] cc => I, Pos: [157, 164] cc => I, Pos: [158, 168] cc => I, Pos: [158, 168] cc => I, Pos: [174, 176] cc => I, Pos: [174, 176] cc => I, Pos: [176, 184] cc => I, Pos: [176, 184] cc => I, Pos: [177, 187] cc => I, Pos: [177, 187] cc => I, Pos: [187, 193] cc => I, Pos: [187, 193] cc => I, Pos: [188, 194] cc => I, Pos: [188, 194] cc => I, Pos: [196, 205] cc => I, Pos: [196, 205] cc => I, Pos: [200, 207, 212] ccc => cc, Pos: [205, 209] cc => I, Pos: [205, 209] cc => I, Pos: [206, 211] cc => I, Pos: [206, 211] cc => I, Pos: [219, 231] cc => I, Pos: [219, 231] cc => I, Pos: [221, 229] cc => I, Pos: [221, 229] cc => I, Pos: [222, 228] cc => I, Pos: [222, 228] cc => I, Pos: [224, 232] cc => I, Pos: [224, 232] cc => I, Pos: [225, 236] cc => I, Pos: [225, 236] cc => I, Pos: [226, 238] cc => I, Pos: [226, 238] cc => I, Pos: [229, 234] cc => I, Pos: [229, 234] cc => I, Pos: [230, 233] cc => I, Pos: [230, 233] cc => I, Pos: [231, 237] cc => I, Pos: [231, 237] cc => I, Pos: [234, 247] cc => I, Pos: [234, 247] cc => I, Pos: [236, 241] cc => I, Pos: [236, 241] cc => I, Pos: [256, 269] cc => I, Pos: [256, 269] cc => I]

--------End Timer [Generate Plans]:  0.12499237060546875

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 20] cc => I,
 Pos: [17, 31] cc => I,
 Pos: [9, 13] cc => I,
 Pos: [10, 19] cc => I,
 Pos: [15, 28] cc => I,
 Pos: [16, 25] cc => I,
 Pos: [23, 30] cc => I,
 Pos: [24, 50] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [38, 43] cc => I,
 Pos: [36, 51] cc => I,
 Pos: [37, 44] cc => I,
 Pos: [40, 47] cc => I,
 Pos: [45, 53] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [74, 80] cc => I,
 Pos: [75, 82, 88] ccc => cc,
 Pos: [76, 87] cc => I,
 Pos: [81, 85, 91] ccc => cc,
 Pos: [86, 92, 98] ccc => cc,
 Pos: [89, 97] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [95, 101] cc => I,
 Pos: [102, 112, 118] ccc => cc,
 Pos: [104, 108, 114] ccc => cc,
 Pos: [109, 115] cc => I,
 Pos: [127, 131, 140] ccc => cc,
 Pos: [130, 136] cc => I,
 Pos: [139, 149] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [156, 162] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [174, 176] cc => I,
 Pos: [177, 187] cc => I,
 Pos: [188, 194] cc => I,
 Pos: [205, 209] cc => I,
 Pos: [200, 207, 212] ccc => cc,
 Pos: [206, 211] cc => I,
 Pos: [219, 231] cc => I,
 Pos: [221, 229] cc => I,
 Pos: [222, 228] cc => I,
 Pos: [224, 232] cc => I,
 Pos: [236, 241] cc => I,
 Pos: [226, 238] cc => I,
 Pos: [230, 233] cc => I,
 Pos: [234, 247] cc => I,
 Pos: [256, 269] cc => I]
Change: 48, Saving: 49

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 20] cc => I
Apply:  Pos: [17, 31] cc => I
Apply:  Pos: [9, 13] cc => I
Apply:  Pos: [10, 19] cc => I
Apply:  Pos: [15, 28] cc => I
Apply:  Pos: [16, 25] cc => I
Apply:  Pos: [23, 30] cc => I
Apply:  Pos: [24, 50] cc => I
Apply:  Pos: [26, 32] cc => I
Apply:  Pos: [38, 43] cc => I
Apply:  Pos: [36, 51] cc => I
Apply:  Pos: [37, 44] cc => I
Apply:  Pos: [40, 47] cc => I
Apply:  Pos: [45, 53] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [74, 80] cc => I
Apply:  Pos: [75, 82, 88] ccc => cc
Apply:  Pos: [76, 87] cc => I
Apply:  Pos: [81, 85, 91] ccc => cc
Apply:  Pos: [86, 92, 98] ccc => cc
Apply:  Pos: [89, 97] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [95, 101] cc => I
Apply:  Pos: [102, 112, 118] ccc => cc
Apply:  Pos: [104, 108, 114] ccc => cc
Apply:  Pos: [109, 115] cc => I
Apply:  Pos: [127, 131, 140] ccc => cc
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [139, 149] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [156, 162] cc => I
Apply:  Pos: [158, 168] cc => I
Apply:  Pos: [174, 176] cc => I
Apply:  Pos: [177, 187] cc => I
Apply:  Pos: [188, 194] cc => I
Apply:  Pos: [205, 209] cc => I
Apply:  Pos: [200, 207, 212] ccc => cc
Apply:  Pos: [206, 211] cc => I
Apply:  Pos: [219, 231] cc => I
Apply:  Pos: [221, 229] cc => I
Apply:  Pos: [222, 228] cc => I
Apply:  Pos: [224, 232] cc => I
Apply:  Pos: [236, 241] cc => I
Apply:  Pos: [226, 238] cc => I
Apply:  Pos: [230, 233] cc => I
Apply:  Pos: [234, 247] cc => I
Apply:  Pos: [256, 269] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [6, 12], [0, 3], [10, 18], [7, 1], [4, 6], [0, 18], [2, 16], [11, 1], [3, 8], [8, 14], [5, 11], [5, 15], [2, 12], [6, 12], [17, 0], [6, 5], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [0, 18], [9, 7], [6, 11], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [16, 19], [18, 14], [16, 17], [9, 7], [6, 12], [10, 18], [19, 17], [12, 18], [10, 18], [0, 9], [15, 7], [4, 2], [6, 11], [6, 5], [18, 14], [17, 3], [12, 11], [9, 1], [2, 10], [3, 8], [9, 18], [11, 1], [5, 15], [10, 0], [9, 7], [16, 10], [0, 18], [3, 8], [5, 15], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [9, 7], [12, 10], [0, 18], [7, 1], [6, 5], [19, 0], [17, 3], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [9, 1], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  5.328130722045898

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[51, 53]
[38, 59]
[65, 73]
[68, 74]
[70, 80]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[34, 40, 46]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[1, 5, 13]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[32, 38, 58]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[51, 53]
[38, 59]
[65, 73]
[68, 74]
[70, 80]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2655787467956543

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 5, 13] ccc => cc, Pos: [32, 38, 58] ccc => cc, Pos: [34, 40, 46] ccc => cc, Pos: [38, 59] cc => I, Pos: [38, 59] cc => I, Pos: [51, 53] cc => I, Pos: [51, 53] cc => I, Pos: [65, 73] cc => I, Pos: [65, 73] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [70, 80] cc => I, Pos: [70, 80] cc => I]

--------End Timer [Generate Plans]:  0.015611410140991211

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 5, 13] ccc => cc,
 Pos: [38, 59] cc => I,
 Pos: [34, 40, 46] ccc => cc,
 Pos: [51, 53] cc => I,
 Pos: [65, 73] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [70, 80] cc => I]
Change: 7, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 5, 13] ccc => cc
Apply:  Pos: [38, 59] cc => I
Apply:  Pos: [34, 40, 46] ccc => cc
Apply:  Pos: [51, 53] cc => I
Apply:  Pos: [65, 73] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [70, 80] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [4, 6], [0, 3], [10, 18], [7, 1], [6, 12], [0, 18], [2, 16], [11, 1], [3, 8], [8, 14], [5, 15], [5, 11], [2, 12], [17, 0], [6, 5], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [18, 14], [16, 17], [9, 7], [6, 12], [19, 17], [12, 18], [0, 9], [15, 7], [4, 2], [6, 5], [18, 14], [17, 3], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [7, 1], [6, 5], [19, 0], [17, 3], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [9, 1], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  3.2811901569366455

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[53, 72]
[55, 74]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[12, 15, 26]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[53, 72]
[55, 74]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.0155856609344482

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 15, 26] ccc => cc, Pos: [53, 72] cc => I, Pos: [53, 72] cc => I, Pos: [55, 74] cc => I, Pos: [55, 74] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 15, 26] ccc => cc, Pos: [53, 72] cc => I, Pos: [55, 74] cc => I]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 15, 26] ccc => cc
Apply:  Pos: [53, 72] cc => I
Apply:  Pos: [55, 74] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 6], [4, 2], [0, 3], [10, 18], [7, 1], [6, 12], [0, 18], [2, 16], [11, 1], [3, 8], [8, 14], [5, 11], [6, 5], [2, 12], [17, 0], [5, 15], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [18, 14], [16, 17], [9, 7], [6, 12], [19, 17], [12, 18], [0, 9], [15, 7], [4, 2], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [7, 1], [19, 0], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [9, 1], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  3.0155856609344482

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8603856563568115

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [4, 6], [0, 3], [10, 18], [7, 1], [6, 12], [0, 18], [2, 16], [11, 1], [3, 8], [8, 14], [5, 11], [6, 5], [2, 12], [17, 0], [5, 15], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [18, 14], [16, 17], [9, 7], [6, 12], [19, 17], [12, 18], [0, 9], [15, 7], [4, 2], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [7, 1], [19, 0], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [9, 1], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  2.8603856563568115

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [164] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 35 - (small)
 - circuit cycle: 328

Reduced: 
 - size: 106 (39.26%)
 - depth: 10 (22.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374356269836426

[4, 2], [6, 12], [0, 3], [10, 18], [7, 1], [4, 6], [0, 18], [2, 16], [11, 1], [9, 7], [12, 10], [3, 8], [4, 6], [9, 7], [8, 14], [19, 3], [17, 0], [2, 16], [5, 11], [12, 10], [4, 6], [5, 15], [2, 12], [10, 18], [1, 13], [17, 0], [9, 7], [6, 12], [19, 3], [17, 0], [10, 18], [2, 16], [9, 7], [6, 5], [0, 3], [9, 18], [11, 7], [16, 10], [6, 5], [17, 3], [2, 12], [19, 0], [11, 9], [6, 5], [16, 10], [18, 8], [0, 3], [2, 12], [6, 12], [16, 19], [1, 13], [11, 7], [17, 3], [18, 8], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [12, 5], [0, 18], [9, 7], [6, 11], [3, 8], [19, 17], [9, 18], [13, 14], [12, 5], [7, 1], [17, 3], [0, 9], [11, 1], [2, 12], [16, 19], [18, 14], [17, 3], [16, 19], [9, 7], [6, 12], [10, 18], [19, 17], [12, 10], [11, 1], [0, 9], [8, 13], [6, 5], [16, 19], [10, 18], [6, 5], [0, 9], [19, 17], [15, 7], [8, 13], [12, 10], [4, 2], [6, 11], [19, 17], [5, 15], [18, 14], [3, 8], [12, 11], [9, 1], [2, 10], [17, 3], [13, 14], [9, 18], [11, 1], [6, 5], [10, 0], [3, 8], [13, 14], [9, 7], [16, 10], [5, 15], [0, 18], [3, 8], [5, 15], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [7, 1], [12, 10], [0, 18], [8, 13], [9, 7], [6, 5], [19, 0], [17, 3], [2, 12], [8, 13], [4, 2], [17, 0], [16, 19], [7, 1], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [16, 19], [11, 7], [8, 14], [12, 5], [10, 9], [19, 3], [2, 16], [17, 0], [8, 14], [18, 13], [11, 1], [6, 12], [2, 16], [17, 0], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [18, 13], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [15, 7], [8, 14], [15, 7], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [18, 13], [6, 5], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [6, 5], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [1, 13], [4, 2], [10, 0], [5, 11], [16, 12], [8, 14], [15, 7], [9, 1], [19, 3], [8, 14], [2, 16], [15, 7], [1, 13], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [5, 15], [8, 13], [19, 3], [11, 7], [9, 1], [4, 6], [16, 10], [8, 13], [5, 15], [19, 0], [2, 12], [11, 7], [19, 0], [5, 15], [3, 8], [9, 1], [2, 12], [4, 6], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [5, 15], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [13, 14], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], [13, 14], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 12]
[9, 13]
[7, 17]
[10, 19]
[12, 20]
[16, 25]
[13, 26]
[15, 28]
[25, 29]
[23, 30]
[17, 31]
[26, 32]
[33, 38]
[38, 43]
[37, 44]
[40, 47]
[24, 50]
[36, 51]
[45, 53]
[64, 72]
[74, 80]
[78, 81]
[76, 87]
[90, 93]
[88, 94]
[89, 97]
[95, 101]
[109, 115]
[114, 120]
[118, 121]
[130, 136]
[136, 141]
[139, 149]
[151, 157]
[155, 161]
[156, 162]
[157, 164]
[158, 168]
[174, 176]
[176, 184]
[177, 187]
[187, 193]
[188, 194]
[196, 205]
[205, 209]
[206, 211]
[222, 228]
[221, 229]
[219, 231]
[224, 232]
[230, 233]
[229, 234]
[225, 236]
[231, 237]
[226, 238]
[236, 241]
[234, 247]
[256, 269]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[75, 82, 88]
[81, 85, 91]
[86, 92, 98]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[84, 86, 92]
[85, 91, 95]
[104, 108, 114]
[102, 112, 118]
[127, 131, 140]
[200, 207, 212]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 12]
[9, 13]
[7, 17]
[10, 19]
[12, 20]
[16, 25]
[13, 26]
[15, 28]
[25, 29]
[23, 30]
[17, 31]
[26, 32]
[33, 38]
[38, 43]
[37, 44]
[40, 47]
[24, 50]
[36, 51]
[45, 53]
[64, 72]
[74, 80]
[78, 81]
[76, 87]
[90, 93]
[88, 94]
[89, 97]
[95, 101]
[109, 115]
[114, 120]
[118, 121]
[130, 136]
[136, 141]
[139, 149]
[151, 157]
[155, 161]
[156, 162]
[157, 164]
[158, 168]
[174, 176]
[176, 184]
[177, 187]
[187, 193]
[188, 194]
[196, 205]
[205, 209]
[206, 211]
[222, 228]
[221, 229]
[219, 231]
[224, 232]
[230, 233]
[229, 234]
[225, 236]
[231, 237]
[226, 238]
[236, 241]
[234, 247]
[256, 269]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.187552452087402

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 12] cc => I, Pos: [5, 12] cc => I, Pos: [7, 17] cc => I, Pos: [7, 17] cc => I, Pos: [9, 13] cc => I, Pos: [9, 13] cc => I, Pos: [10, 19] cc => I, Pos: [10, 19] cc => I, Pos: [12, 20] cc => I, Pos: [12, 20] cc => I, Pos: [13, 26] cc => I, Pos: [13, 26] cc => I, Pos: [15, 28] cc => I, Pos: [15, 28] cc => I, Pos: [16, 25] cc => I, Pos: [16, 25] cc => I, Pos: [17, 31] cc => I, Pos: [17, 31] cc => I, Pos: [23, 30] cc => I, Pos: [23, 30] cc => I, Pos: [24, 50] cc => I, Pos: [24, 50] cc => I, Pos: [25, 29] cc => I, Pos: [25, 29] cc => I, Pos: [26, 32] cc => I, Pos: [26, 32] cc => I, Pos: [33, 38] cc => I, Pos: [33, 38] cc => I, Pos: [36, 51] cc => I, Pos: [36, 51] cc => I, Pos: [37, 44] cc => I, Pos: [37, 44] cc => I, Pos: [38, 43] cc => I, Pos: [38, 43] cc => I, Pos: [40, 47] cc => I, Pos: [40, 47] cc => I, Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [74, 80] cc => I, Pos: [74, 80] cc => I, Pos: [75, 82, 88] ccc => cc, Pos: [76, 87] cc => I, Pos: [76, 87] cc => I, Pos: [78, 81] cc => I, Pos: [78, 81] cc => I, Pos: [81, 85, 91] ccc => cc, Pos: [84, 86, 92] ccc => cc, Pos: [85, 91, 95] ccc => cc, Pos: [86, 92, 98] ccc => cc, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 97] cc => I, Pos: [89, 97] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [95, 101] cc => I, Pos: [95, 101] cc => I, Pos: [102, 112, 118] ccc => cc, Pos: [104, 108, 114] ccc => cc, Pos: [109, 115] cc => I, Pos: [109, 115] cc => I, Pos: [114, 120] cc => I, Pos: [114, 120] cc => I, Pos: [118, 121] cc => I, Pos: [118, 121] cc => I, Pos: [127, 131, 140] ccc => cc, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [136, 141] cc => I, Pos: [136, 141] cc => I, Pos: [139, 149] cc => I, Pos: [139, 149] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [156, 162] cc => I, Pos: [156, 162] cc => I, Pos: [157, 164] cc => I, Pos: [157, 164] cc => I, Pos: [158, 168] cc => I, Pos: [158, 168] cc => I, Pos: [174, 176] cc => I, Pos: [174, 176] cc => I, Pos: [176, 184] cc => I, Pos: [176, 184] cc => I, Pos: [177, 187] cc => I, Pos: [177, 187] cc => I, Pos: [187, 193] cc => I, Pos: [187, 193] cc => I, Pos: [188, 194] cc => I, Pos: [188, 194] cc => I, Pos: [196, 205] cc => I, Pos: [196, 205] cc => I, Pos: [200, 207, 212] ccc => cc, Pos: [205, 209] cc => I, Pos: [205, 209] cc => I, Pos: [206, 211] cc => I, Pos: [206, 211] cc => I, Pos: [219, 231] cc => I, Pos: [219, 231] cc => I, Pos: [221, 229] cc => I, Pos: [221, 229] cc => I, Pos: [222, 228] cc => I, Pos: [222, 228] cc => I, Pos: [224, 232] cc => I, Pos: [224, 232] cc => I, Pos: [225, 236] cc => I, Pos: [225, 236] cc => I, Pos: [226, 238] cc => I, Pos: [226, 238] cc => I, Pos: [229, 234] cc => I, Pos: [229, 234] cc => I, Pos: [230, 233] cc => I, Pos: [230, 233] cc => I, Pos: [231, 237] cc => I, Pos: [231, 237] cc => I, Pos: [234, 247] cc => I, Pos: [234, 247] cc => I, Pos: [236, 241] cc => I, Pos: [236, 241] cc => I, Pos: [256, 269] cc => I, Pos: [256, 269] cc => I]

--------End Timer [Generate Plans]:  0.12501025199890137

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 20] cc => I,
 Pos: [7, 17] cc => I,
 Pos: [9, 13] cc => I,
 Pos: [10, 19] cc => I,
 Pos: [15, 28] cc => I,
 Pos: [16, 25] cc => I,
 Pos: [23, 30] cc => I,
 Pos: [24, 50] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [38, 43] cc => I,
 Pos: [36, 51] cc => I,
 Pos: [37, 44] cc => I,
 Pos: [40, 47] cc => I,
 Pos: [45, 53] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [74, 80] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [76, 87] cc => I,
 Pos: [78, 81] cc => I,
 Pos: [86, 92, 98] ccc => cc,
 Pos: [95, 101] cc => I,
 Pos: [89, 97] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [118, 121] cc => I,
 Pos: [104, 108, 114] ccc => cc,
 Pos: [109, 115] cc => I,
 Pos: [127, 131, 140] ccc => cc,
 Pos: [136, 141] cc => I,
 Pos: [139, 149] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [156, 162] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [174, 176] cc => I,
 Pos: [187, 193] cc => I,
 Pos: [188, 194] cc => I,
 Pos: [196, 205] cc => I,
 Pos: [200, 207, 212] ccc => cc,
 Pos: [206, 211] cc => I,
 Pos: [231, 237] cc => I,
 Pos: [229, 234] cc => I,
 Pos: [222, 228] cc => I,
 Pos: [224, 232] cc => I,
 Pos: [225, 236] cc => I,
 Pos: [226, 238] cc => I,
 Pos: [230, 233] cc => I,
 Pos: [256, 269] cc => I]
Change: 47, Saving: 47

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 20] cc => I
Apply:  Pos: [7, 17] cc => I
Apply:  Pos: [9, 13] cc => I
Apply:  Pos: [10, 19] cc => I
Apply:  Pos: [15, 28] cc => I
Apply:  Pos: [16, 25] cc => I
Apply:  Pos: [23, 30] cc => I
Apply:  Pos: [24, 50] cc => I
Apply:  Pos: [26, 32] cc => I
Apply:  Pos: [38, 43] cc => I
Apply:  Pos: [36, 51] cc => I
Apply:  Pos: [37, 44] cc => I
Apply:  Pos: [40, 47] cc => I
Apply:  Pos: [45, 53] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [74, 80] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [76, 87] cc => I
Apply:  Pos: [78, 81] cc => I
Apply:  Pos: [86, 92, 98] ccc => cc
Apply:  Pos: [95, 101] cc => I
Apply:  Pos: [89, 97] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [118, 121] cc => I
Apply:  Pos: [104, 108, 114] ccc => cc
Apply:  Pos: [109, 115] cc => I
Apply:  Pos: [127, 131, 140] ccc => cc
Apply:  Pos: [136, 141] cc => I
Apply:  Pos: [139, 149] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [156, 162] cc => I
Apply:  Pos: [158, 168] cc => I
Apply:  Pos: [174, 176] cc => I
Apply:  Pos: [187, 193] cc => I
Apply:  Pos: [188, 194] cc => I
Apply:  Pos: [196, 205] cc => I
Apply:  Pos: [200, 207, 212] ccc => cc
Apply:  Pos: [206, 211] cc => I
Apply:  Pos: [231, 237] cc => I
Apply:  Pos: [229, 234] cc => I
Apply:  Pos: [222, 228] cc => I
Apply:  Pos: [224, 232] cc => I
Apply:  Pos: [225, 236] cc => I
Apply:  Pos: [226, 238] cc => I
Apply:  Pos: [230, 233] cc => I
Apply:  Pos: [256, 269] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [6, 12], [0, 3], [10, 18], [7, 1], [4, 6], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [5, 15], [2, 12], [6, 12], [17, 0], [2, 16], [6, 5], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [0, 18], [9, 7], [6, 11], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 9], [2, 12], [18, 14], [9, 7], [6, 12], [10, 18], [19, 17], [12, 18], [16, 19], [10, 18], [15, 7], [4, 2], [6, 11], [5, 15], [18, 14], [17, 3], [12, 11], [9, 1], [2, 10], [3, 8], [9, 18], [11, 1], [6, 5], [10, 0], [9, 7], [16, 10], [0, 18], [3, 8], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [9, 7], [12, 10], [0, 18], [8, 13], [7, 1], [6, 5], [19, 0], [17, 3], [2, 12], [4, 2], [17, 0], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [5, 15], [19, 3], [16, 10], [3, 8], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [5, 15], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  5.312562704086304

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[40, 50]
[38, 56]
[63, 71]
[52, 73]
[68, 77]
[66, 82]
[147, 159]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[1, 5, 12]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[40, 50]
[38, 56]
[63, 71]
[52, 73]
[68, 77]
[66, 82]
[147, 159]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2031099796295166

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 5, 12] ccc => cc, Pos: [38, 56] cc => I, Pos: [38, 56] cc => I, Pos: [40, 50] cc => I, Pos: [40, 50] cc => I, Pos: [52, 73] cc => I, Pos: [52, 73] cc => I, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [66, 82] cc => I, Pos: [66, 82] cc => I, Pos: [68, 77] cc => I, Pos: [68, 77] cc => I, Pos: [147, 159] cc => I, Pos: [147, 159] cc => I]

--------End Timer [Generate Plans]:  0.015623807907104492

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 5, 12] ccc => cc,
 Pos: [38, 56] cc => I,
 Pos: [40, 50] cc => I,
 Pos: [52, 73] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [66, 82] cc => I,
 Pos: [68, 77] cc => I,
 Pos: [147, 159] cc => I]
Change: 8, Saving: 9

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 5, 12] ccc => cc
Apply:  Pos: [38, 56] cc => I
Apply:  Pos: [40, 50] cc => I
Apply:  Pos: [52, 73] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [66, 82] cc => I
Apply:  Pos: [68, 77] cc => I
Apply:  Pos: [147, 159] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [4, 6], [0, 3], [10, 18], [7, 1], [6, 12], [0, 18], [11, 1], [3, 8], [8, 14], [5, 15], [5, 11], [2, 12], [17, 0], [2, 16], [6, 5], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [0, 18], [9, 7], [3, 8], [9, 18], [13, 14], [7, 1], [0, 9], [2, 12], [18, 14], [9, 7], [6, 12], [10, 18], [12, 18], [10, 18], [15, 7], [4, 2], [5, 15], [18, 14], [17, 3], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [8, 13], [7, 1], [19, 0], [17, 3], [2, 12], [4, 2], [17, 0], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [19, 3], [16, 10], [3, 8], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  3.218733787536621

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[51, 69]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[11, 15, 26]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[51, 69]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8125152587890625

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 15, 26] ccc => cc, Pos: [51, 69] cc => I, Pos: [51, 69] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 15, 26] ccc => cc, Pos: [51, 69] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 15, 26] ccc => cc
Apply:  Pos: [51, 69] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 6], [4, 2], [0, 3], [10, 18], [7, 1], [6, 12], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [6, 5], [2, 12], [17, 0], [2, 16], [5, 15], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [0, 18], [9, 7], [3, 8], [9, 18], [13, 14], [7, 1], [0, 9], [2, 12], [18, 14], [9, 7], [6, 12], [12, 18], [15, 7], [4, 2], [5, 15], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [8, 13], [7, 1], [19, 0], [2, 12], [4, 2], [17, 0], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [19, 3], [16, 10], [3, 8], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  2.8125152587890625

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.750020742416382

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [4, 6], [0, 3], [10, 18], [7, 1], [6, 12], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [6, 5], [2, 12], [17, 0], [2, 16], [5, 15], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [0, 18], [9, 7], [3, 8], [9, 18], [13, 14], [7, 1], [0, 9], [2, 12], [18, 14], [9, 7], [6, 12], [12, 18], [15, 7], [4, 2], [5, 15], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [8, 13], [7, 1], [19, 0], [2, 12], [4, 2], [17, 0], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [19, 3], [16, 10], [3, 8], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  2.750020742416382

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [160] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 35 - (small)
 - circuit cycle: 320

Reduced: 
 - size: 110 (40.74%)
 - depth: 10 (22.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.0934743881225586

[4, 2], [6, 12], [0, 3], [10, 18], [7, 1], [4, 6], [0, 18], [2, 16], [11, 1], [9, 7], [12, 10], [3, 8], [4, 6], [9, 7], [8, 14], [19, 3], [17, 0], [2, 16], [5, 11], [12, 10], [4, 6], [5, 15], [2, 12], [10, 18], [1, 13], [17, 0], [9, 7], [6, 12], [19, 3], [17, 0], [10, 18], [2, 16], [9, 7], [6, 5], [0, 3], [9, 18], [11, 7], [16, 10], [6, 5], [17, 3], [2, 12], [19, 0], [11, 9], [6, 5], [16, 10], [18, 8], [0, 3], [2, 12], [6, 12], [16, 19], [1, 13], [11, 7], [17, 3], [18, 8], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [12, 5], [0, 18], [9, 7], [6, 11], [3, 8], [19, 17], [9, 18], [13, 14], [12, 5], [7, 1], [17, 3], [0, 9], [11, 1], [2, 12], [16, 19], [18, 14], [17, 3], [16, 19], [9, 7], [6, 12], [10, 18], [19, 17], [12, 10], [11, 1], [0, 9], [8, 13], [6, 5], [16, 19], [10, 18], [6, 5], [0, 9], [19, 17], [15, 7], [8, 13], [12, 10], [4, 2], [6, 11], [19, 17], [5, 15], [18, 14], [3, 8], [12, 11], [9, 1], [2, 10], [17, 3], [13, 14], [9, 18], [11, 1], [6, 5], [10, 0], [3, 8], [13, 14], [9, 7], [16, 10], [5, 15], [0, 18], [3, 8], [5, 15], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [7, 1], [12, 10], [0, 18], [8, 13], [9, 7], [6, 5], [19, 0], [17, 3], [2, 12], [8, 13], [4, 2], [17, 0], [16, 19], [7, 1], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [16, 19], [11, 7], [8, 14], [12, 5], [10, 9], [19, 3], [2, 16], [17, 0], [8, 14], [18, 13], [11, 1], [6, 12], [2, 16], [17, 0], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [18, 13], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [15, 7], [8, 14], [15, 7], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [18, 13], [6, 5], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [6, 5], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [1, 13], [4, 2], [10, 0], [5, 11], [16, 12], [8, 14], [15, 7], [9, 1], [19, 3], [8, 14], [2, 16], [15, 7], [1, 13], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [5, 15], [8, 13], [19, 3], [11, 7], [9, 1], [4, 6], [16, 10], [8, 13], [5, 15], [19, 0], [2, 12], [11, 7], [19, 0], [5, 15], [3, 8], [9, 1], [2, 12], [4, 6], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [5, 15], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [13, 14], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], [13, 14], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 12]
[9, 13]
[7, 17]
[10, 19]
[12, 20]
[16, 25]
[13, 26]
[15, 28]
[25, 29]
[23, 30]
[17, 31]
[26, 32]
[33, 38]
[38, 43]
[37, 44]
[40, 47]
[24, 50]
[36, 51]
[45, 53]
[64, 72]
[74, 80]
[78, 81]
[76, 87]
[90, 93]
[88, 94]
[89, 97]
[95, 101]
[109, 115]
[114, 120]
[118, 121]
[130, 136]
[136, 141]
[139, 149]
[151, 157]
[155, 161]
[156, 162]
[157, 164]
[158, 168]
[174, 176]
[176, 184]
[177, 187]
[187, 193]
[188, 194]
[196, 205]
[205, 209]
[206, 211]
[222, 228]
[221, 229]
[219, 231]
[224, 232]
[230, 233]
[229, 234]
[225, 236]
[231, 237]
[226, 238]
[236, 241]
[234, 247]
[256, 269]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[75, 82, 88]
[81, 85, 91]
[86, 92, 98]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[84, 86, 92]
[85, 91, 95]
[104, 108, 114]
[102, 112, 118]
[127, 131, 140]
[200, 207, 212]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 12]
[9, 13]
[7, 17]
[10, 19]
[12, 20]
[16, 25]
[13, 26]
[15, 28]
[25, 29]
[23, 30]
[17, 31]
[26, 32]
[33, 38]
[38, 43]
[37, 44]
[40, 47]
[24, 50]
[36, 51]
[45, 53]
[64, 72]
[74, 80]
[78, 81]
[76, 87]
[90, 93]
[88, 94]
[89, 97]
[95, 101]
[109, 115]
[114, 120]
[118, 121]
[130, 136]
[136, 141]
[139, 149]
[151, 157]
[155, 161]
[156, 162]
[157, 164]
[158, 168]
[174, 176]
[176, 184]
[177, 187]
[187, 193]
[188, 194]
[196, 205]
[205, 209]
[206, 211]
[222, 228]
[221, 229]
[219, 231]
[224, 232]
[230, 233]
[229, 234]
[225, 236]
[231, 237]
[226, 238]
[236, 241]
[234, 247]
[256, 269]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.218780994415283

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 12] cc => I, Pos: [5, 12] cc => I, Pos: [7, 17] cc => I, Pos: [7, 17] cc => I, Pos: [9, 13] cc => I, Pos: [9, 13] cc => I, Pos: [10, 19] cc => I, Pos: [10, 19] cc => I, Pos: [12, 20] cc => I, Pos: [12, 20] cc => I, Pos: [13, 26] cc => I, Pos: [13, 26] cc => I, Pos: [15, 28] cc => I, Pos: [15, 28] cc => I, Pos: [16, 25] cc => I, Pos: [16, 25] cc => I, Pos: [17, 31] cc => I, Pos: [17, 31] cc => I, Pos: [23, 30] cc => I, Pos: [23, 30] cc => I, Pos: [24, 50] cc => I, Pos: [24, 50] cc => I, Pos: [25, 29] cc => I, Pos: [25, 29] cc => I, Pos: [26, 32] cc => I, Pos: [26, 32] cc => I, Pos: [33, 38] cc => I, Pos: [33, 38] cc => I, Pos: [36, 51] cc => I, Pos: [36, 51] cc => I, Pos: [37, 44] cc => I, Pos: [37, 44] cc => I, Pos: [38, 43] cc => I, Pos: [38, 43] cc => I, Pos: [40, 47] cc => I, Pos: [40, 47] cc => I, Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [74, 80] cc => I, Pos: [74, 80] cc => I, Pos: [75, 82, 88] ccc => cc, Pos: [76, 87] cc => I, Pos: [76, 87] cc => I, Pos: [78, 81] cc => I, Pos: [78, 81] cc => I, Pos: [81, 85, 91] ccc => cc, Pos: [84, 86, 92] ccc => cc, Pos: [85, 91, 95] ccc => cc, Pos: [86, 92, 98] ccc => cc, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 97] cc => I, Pos: [89, 97] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [95, 101] cc => I, Pos: [95, 101] cc => I, Pos: [102, 112, 118] ccc => cc, Pos: [104, 108, 114] ccc => cc, Pos: [109, 115] cc => I, Pos: [109, 115] cc => I, Pos: [114, 120] cc => I, Pos: [114, 120] cc => I, Pos: [118, 121] cc => I, Pos: [118, 121] cc => I, Pos: [127, 131, 140] ccc => cc, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [136, 141] cc => I, Pos: [136, 141] cc => I, Pos: [139, 149] cc => I, Pos: [139, 149] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [156, 162] cc => I, Pos: [156, 162] cc => I, Pos: [157, 164] cc => I, Pos: [157, 164] cc => I, Pos: [158, 168] cc => I, Pos: [158, 168] cc => I, Pos: [174, 176] cc => I, Pos: [174, 176] cc => I, Pos: [176, 184] cc => I, Pos: [176, 184] cc => I, Pos: [177, 187] cc => I, Pos: [177, 187] cc => I, Pos: [187, 193] cc => I, Pos: [187, 193] cc => I, Pos: [188, 194] cc => I, Pos: [188, 194] cc => I, Pos: [196, 205] cc => I, Pos: [196, 205] cc => I, Pos: [200, 207, 212] ccc => cc, Pos: [205, 209] cc => I, Pos: [205, 209] cc => I, Pos: [206, 211] cc => I, Pos: [206, 211] cc => I, Pos: [219, 231] cc => I, Pos: [219, 231] cc => I, Pos: [221, 229] cc => I, Pos: [221, 229] cc => I, Pos: [222, 228] cc => I, Pos: [222, 228] cc => I, Pos: [224, 232] cc => I, Pos: [224, 232] cc => I, Pos: [225, 236] cc => I, Pos: [225, 236] cc => I, Pos: [226, 238] cc => I, Pos: [226, 238] cc => I, Pos: [229, 234] cc => I, Pos: [229, 234] cc => I, Pos: [230, 233] cc => I, Pos: [230, 233] cc => I, Pos: [231, 237] cc => I, Pos: [231, 237] cc => I, Pos: [234, 247] cc => I, Pos: [234, 247] cc => I, Pos: [236, 241] cc => I, Pos: [236, 241] cc => I, Pos: [256, 269] cc => I, Pos: [256, 269] cc => I]

--------End Timer [Generate Plans]:  0.12499284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 20] cc => I,
 Pos: [7, 17] cc => I,
 Pos: [13, 26] cc => I,
 Pos: [10, 19] cc => I,
 Pos: [15, 28] cc => I,
 Pos: [25, 29] cc => I,
 Pos: [23, 30] cc => I,
 Pos: [24, 50] cc => I,
 Pos: [33, 38] cc => I,
 Pos: [36, 51] cc => I,
 Pos: [37, 44] cc => I,
 Pos: [40, 47] cc => I,
 Pos: [45, 53] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [74, 80] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [76, 87] cc => I,
 Pos: [81, 85, 91] ccc => cc,
 Pos: [84, 86, 92] ccc => cc,
 Pos: [89, 97] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [95, 101] cc => I,
 Pos: [102, 112, 118] ccc => cc,
 Pos: [104, 108, 114] ccc => cc,
 Pos: [109, 115] cc => I,
 Pos: [127, 131, 140] ccc => cc,
 Pos: [136, 141] cc => I,
 Pos: [139, 149] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [156, 162] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [176, 184] cc => I,
 Pos: [187, 193] cc => I,
 Pos: [188, 194] cc => I,
 Pos: [205, 209] cc => I,
 Pos: [200, 207, 212] ccc => cc,
 Pos: [206, 211] cc => I,
 Pos: [219, 231] cc => I,
 Pos: [229, 234] cc => I,
 Pos: [222, 228] cc => I,
 Pos: [224, 232] cc => I,
 Pos: [236, 241] cc => I,
 Pos: [226, 238] cc => I,
 Pos: [230, 233] cc => I,
 Pos: [256, 269] cc => I]
Change: 46, Saving: 48

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 20] cc => I
Apply:  Pos: [7, 17] cc => I
Apply:  Pos: [13, 26] cc => I
Apply:  Pos: [10, 19] cc => I
Apply:  Pos: [15, 28] cc => I
Apply:  Pos: [25, 29] cc => I
Apply:  Pos: [23, 30] cc => I
Apply:  Pos: [24, 50] cc => I
Apply:  Pos: [33, 38] cc => I
Apply:  Pos: [36, 51] cc => I
Apply:  Pos: [37, 44] cc => I
Apply:  Pos: [40, 47] cc => I
Apply:  Pos: [45, 53] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [74, 80] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [76, 87] cc => I
Apply:  Pos: [81, 85, 91] ccc => cc
Apply:  Pos: [84, 86, 92] ccc => cc
Apply:  Pos: [89, 97] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [95, 101] cc => I
Apply:  Pos: [102, 112, 118] ccc => cc
Apply:  Pos: [104, 108, 114] ccc => cc
Apply:  Pos: [109, 115] cc => I
Apply:  Pos: [127, 131, 140] ccc => cc
Apply:  Pos: [136, 141] cc => I
Apply:  Pos: [139, 149] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [156, 162] cc => I
Apply:  Pos: [158, 168] cc => I
Apply:  Pos: [176, 184] cc => I
Apply:  Pos: [187, 193] cc => I
Apply:  Pos: [188, 194] cc => I
Apply:  Pos: [205, 209] cc => I
Apply:  Pos: [200, 207, 212] ccc => cc
Apply:  Pos: [206, 211] cc => I
Apply:  Pos: [219, 231] cc => I
Apply:  Pos: [229, 234] cc => I
Apply:  Pos: [222, 228] cc => I
Apply:  Pos: [224, 232] cc => I
Apply:  Pos: [236, 241] cc => I
Apply:  Pos: [226, 238] cc => I
Apply:  Pos: [230, 233] cc => I
Apply:  Pos: [256, 269] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [6, 12], [0, 3], [10, 18], [7, 1], [4, 6], [0, 18], [11, 1], [9, 7], [3, 8], [8, 14], [17, 0], [5, 11], [5, 15], [2, 12], [6, 12], [2, 16], [9, 7], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [6, 5], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [0, 18], [9, 7], [6, 11], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 9], [2, 12], [16, 19], [18, 14], [16, 17], [9, 7], [6, 12], [12, 10], [19, 17], [10, 18], [15, 7], [12, 10], [4, 2], [6, 11], [6, 5], [18, 14], [17, 3], [12, 11], [9, 1], [2, 10], [3, 8], [9, 18], [11, 1], [5, 15], [10, 0], [9, 7], [16, 10], [0, 18], [3, 8], [5, 15], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [9, 7], [12, 10], [0, 18], [8, 13], [7, 1], [6, 5], [19, 0], [17, 3], [2, 12], [4, 2], [17, 0], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [15, 7], [8, 14], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [5, 15], [19, 3], [9, 1], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [5, 15], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  5.34377384185791

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 17]
[40, 60]
[66, 74]
[69, 75]
[71, 81]
[150, 163]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[36, 42, 48]
[53, 55, 57]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[1, 5, 14]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[34, 40, 59]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[8, 17]
[40, 60]
[66, 74]
[69, 75]
[71, 81]
[150, 163]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.343722343444824

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 5, 14] ccc => cc, Pos: [8, 17] cc => I, Pos: [8, 17] cc => I, Pos: [34, 40, 59] ccc => cc, Pos: [36, 42, 48] ccc => cc, Pos: [40, 60] cc => I, Pos: [40, 60] cc => I, Pos: [53, 55, 57] ccc => cc, Pos: [66, 74] cc => I, Pos: [66, 74] cc => I, Pos: [69, 75] cc => I, Pos: [69, 75] cc => I, Pos: [71, 81] cc => I, Pos: [71, 81] cc => I, Pos: [150, 163] cc => I, Pos: [150, 163] cc => I]

--------End Timer [Generate Plans]:  0.015625476837158203

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 5, 14] ccc => cc,
 Pos: [8, 17] cc => I,
 Pos: [34, 40, 59] ccc => cc,
 Pos: [36, 42, 48] ccc => cc,
 Pos: [53, 55, 57] ccc => cc,
 Pos: [66, 74] cc => I,
 Pos: [69, 75] cc => I,
 Pos: [71, 81] cc => I,
 Pos: [150, 163] cc => I]
Change: 9, Saving: 9

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 5, 14] ccc => cc
Apply:  Pos: [8, 17] cc => I
Apply:  Pos: [34, 40, 59] ccc => cc
Apply:  Pos: [36, 42, 48] ccc => cc
Apply:  Pos: [53, 55, 57] ccc => cc
Apply:  Pos: [66, 74] cc => I
Apply:  Pos: [69, 75] cc => I
Apply:  Pos: [71, 81] cc => I
Apply:  Pos: [150, 163] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [4, 6], [0, 3], [10, 18], [7, 1], [6, 12], [0, 18], [11, 1], [3, 8], [8, 14], [17, 0], [5, 15], [5, 11], [2, 16], [2, 12], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [6, 5], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [6, 5], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [5, 11], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 9], [2, 12], [18, 14], [16, 17], [9, 7], [6, 12], [12, 18], [19, 17], [10, 18], [15, 7], [4, 2], [6, 11], [18, 14], [17, 3], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [8, 13], [7, 1], [6, 5], [19, 0], [17, 3], [2, 12], [4, 2], [17, 0], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [15, 7], [8, 14], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [9, 1], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  3.3749704360961914

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[56, 76]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[12, 20, 26]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[56, 76]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.0000088214874268

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 20, 26] ccc => cc, Pos: [56, 76] cc => I, Pos: [56, 76] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 20, 26] ccc => cc, Pos: [56, 76] cc => I]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 20, 26] ccc => cc
Apply:  Pos: [56, 76] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 6], [4, 2], [0, 3], [10, 18], [7, 1], [6, 12], [0, 18], [11, 1], [3, 8], [8, 14], [17, 0], [5, 11], [6, 5], [2, 12], [2, 16], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [5, 15], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [6, 5], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [5, 11], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 9], [2, 12], [18, 14], [16, 17], [9, 7], [6, 12], [12, 18], [19, 17], [10, 18], [15, 7], [4, 2], [6, 11], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [8, 13], [7, 1], [6, 5], [19, 0], [2, 12], [4, 2], [17, 0], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [15, 7], [8, 14], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [9, 1], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  3.0000088214874268

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9218709468841553

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [4, 6], [0, 3], [10, 18], [7, 1], [6, 12], [0, 18], [11, 1], [3, 8], [8, 14], [17, 0], [5, 11], [6, 5], [2, 16], [2, 12], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [5, 15], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [6, 5], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [5, 11], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 9], [2, 12], [18, 14], [16, 17], [9, 7], [6, 12], [12, 18], [19, 17], [10, 18], [15, 7], [4, 2], [6, 11], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [8, 13], [7, 1], [6, 5], [19, 0], [2, 12], [4, 2], [17, 0], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [15, 7], [8, 14], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [9, 1], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  2.9218709468841553

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [167] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 334

Reduced: 
 - size: 103 (38.15%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936260223388672

[4, 2], [6, 12], [0, 3], [10, 18], [7, 1], [4, 6], [0, 18], [2, 16], [11, 1], [9, 7], [12, 10], [3, 8], [4, 6], [9, 7], [8, 14], [19, 3], [17, 0], [2, 16], [5, 11], [12, 10], [4, 6], [5, 15], [2, 12], [10, 18], [1, 13], [17, 0], [9, 7], [6, 12], [19, 3], [17, 0], [10, 18], [2, 16], [9, 7], [6, 5], [0, 3], [9, 18], [11, 7], [16, 10], [6, 5], [17, 3], [2, 12], [19, 0], [11, 9], [6, 5], [16, 10], [18, 8], [0, 3], [2, 12], [6, 12], [16, 19], [1, 13], [11, 7], [17, 3], [18, 8], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [12, 5], [0, 18], [9, 7], [6, 11], [3, 8], [19, 17], [9, 18], [13, 14], [12, 5], [7, 1], [17, 3], [0, 9], [11, 1], [2, 12], [16, 19], [18, 14], [17, 3], [16, 19], [9, 7], [6, 12], [10, 18], [19, 17], [12, 10], [11, 1], [0, 9], [8, 13], [6, 5], [16, 19], [10, 18], [6, 5], [0, 9], [19, 17], [15, 7], [8, 13], [12, 10], [4, 2], [6, 11], [19, 17], [5, 15], [18, 14], [3, 8], [12, 11], [9, 1], [2, 10], [17, 3], [13, 14], [9, 18], [11, 1], [6, 5], [10, 0], [3, 8], [13, 14], [9, 7], [16, 10], [5, 15], [0, 18], [3, 8], [5, 15], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [7, 1], [12, 10], [0, 18], [8, 13], [9, 7], [6, 5], [19, 0], [17, 3], [2, 12], [8, 13], [4, 2], [17, 0], [16, 19], [7, 1], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [16, 19], [11, 7], [8, 14], [12, 5], [10, 9], [19, 3], [2, 16], [17, 0], [8, 14], [18, 13], [11, 1], [6, 12], [2, 16], [17, 0], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [18, 13], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [15, 7], [8, 14], [15, 7], [18, 13], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [18, 13], [6, 5], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [6, 5], [11, 7], [8, 14], [0, 3], [10, 9], [16, 19], [1, 13], [4, 2], [10, 0], [5, 11], [16, 12], [8, 14], [15, 7], [9, 1], [19, 3], [8, 14], [2, 16], [15, 7], [1, 13], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [2, 12], [10, 0], [5, 15], [8, 13], [19, 3], [11, 7], [9, 1], [4, 6], [16, 10], [8, 13], [5, 15], [19, 0], [2, 12], [11, 7], [19, 0], [5, 15], [3, 8], [9, 1], [2, 12], [4, 6], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [5, 15], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [13, 14], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], [13, 14], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 12]
[9, 13]
[7, 17]
[10, 19]
[12, 20]
[16, 25]
[13, 26]
[15, 28]
[25, 29]
[23, 30]
[17, 31]
[26, 32]
[33, 38]
[38, 43]
[37, 44]
[40, 47]
[24, 50]
[36, 51]
[45, 53]
[64, 72]
[74, 80]
[78, 81]
[76, 87]
[90, 93]
[88, 94]
[89, 97]
[95, 101]
[109, 115]
[114, 120]
[118, 121]
[130, 136]
[136, 141]
[139, 149]
[151, 157]
[155, 161]
[156, 162]
[157, 164]
[158, 168]
[174, 176]
[176, 184]
[177, 187]
[187, 193]
[188, 194]
[196, 205]
[205, 209]
[206, 211]
[222, 228]
[221, 229]
[219, 231]
[224, 232]
[230, 233]
[229, 234]
[225, 236]
[231, 237]
[226, 238]
[236, 241]
[234, 247]
[256, 269]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[75, 82, 88]
[81, 85, 91]
[86, 92, 98]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[84, 86, 92]
[85, 91, 95]
[104, 108, 114]
[102, 112, 118]
[127, 131, 140]
[200, 207, 212]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 12]
[9, 13]
[7, 17]
[10, 19]
[12, 20]
[16, 25]
[13, 26]
[15, 28]
[25, 29]
[23, 30]
[17, 31]
[26, 32]
[33, 38]
[38, 43]
[37, 44]
[40, 47]
[24, 50]
[36, 51]
[45, 53]
[64, 72]
[74, 80]
[78, 81]
[76, 87]
[90, 93]
[88, 94]
[89, 97]
[95, 101]
[109, 115]
[114, 120]
[118, 121]
[130, 136]
[136, 141]
[139, 149]
[151, 157]
[155, 161]
[156, 162]
[157, 164]
[158, 168]
[174, 176]
[176, 184]
[177, 187]
[187, 193]
[188, 194]
[196, 205]
[205, 209]
[206, 211]
[222, 228]
[221, 229]
[219, 231]
[224, 232]
[230, 233]
[229, 234]
[225, 236]
[231, 237]
[226, 238]
[236, 241]
[234, 247]
[256, 269]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.187436580657959

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 12] cc => I, Pos: [5, 12] cc => I, Pos: [7, 17] cc => I, Pos: [7, 17] cc => I, Pos: [9, 13] cc => I, Pos: [9, 13] cc => I, Pos: [10, 19] cc => I, Pos: [10, 19] cc => I, Pos: [12, 20] cc => I, Pos: [12, 20] cc => I, Pos: [13, 26] cc => I, Pos: [13, 26] cc => I, Pos: [15, 28] cc => I, Pos: [15, 28] cc => I, Pos: [16, 25] cc => I, Pos: [16, 25] cc => I, Pos: [17, 31] cc => I, Pos: [17, 31] cc => I, Pos: [23, 30] cc => I, Pos: [23, 30] cc => I, Pos: [24, 50] cc => I, Pos: [24, 50] cc => I, Pos: [25, 29] cc => I, Pos: [25, 29] cc => I, Pos: [26, 32] cc => I, Pos: [26, 32] cc => I, Pos: [33, 38] cc => I, Pos: [33, 38] cc => I, Pos: [36, 51] cc => I, Pos: [36, 51] cc => I, Pos: [37, 44] cc => I, Pos: [37, 44] cc => I, Pos: [38, 43] cc => I, Pos: [38, 43] cc => I, Pos: [40, 47] cc => I, Pos: [40, 47] cc => I, Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [74, 80] cc => I, Pos: [74, 80] cc => I, Pos: [75, 82, 88] ccc => cc, Pos: [76, 87] cc => I, Pos: [76, 87] cc => I, Pos: [78, 81] cc => I, Pos: [78, 81] cc => I, Pos: [81, 85, 91] ccc => cc, Pos: [84, 86, 92] ccc => cc, Pos: [85, 91, 95] ccc => cc, Pos: [86, 92, 98] ccc => cc, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [89, 97] cc => I, Pos: [89, 97] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [95, 101] cc => I, Pos: [95, 101] cc => I, Pos: [102, 112, 118] ccc => cc, Pos: [104, 108, 114] ccc => cc, Pos: [109, 115] cc => I, Pos: [109, 115] cc => I, Pos: [114, 120] cc => I, Pos: [114, 120] cc => I, Pos: [118, 121] cc => I, Pos: [118, 121] cc => I, Pos: [127, 131, 140] ccc => cc, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [136, 141] cc => I, Pos: [136, 141] cc => I, Pos: [139, 149] cc => I, Pos: [139, 149] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [156, 162] cc => I, Pos: [156, 162] cc => I, Pos: [157, 164] cc => I, Pos: [157, 164] cc => I, Pos: [158, 168] cc => I, Pos: [158, 168] cc => I, Pos: [174, 176] cc => I, Pos: [174, 176] cc => I, Pos: [176, 184] cc => I, Pos: [176, 184] cc => I, Pos: [177, 187] cc => I, Pos: [177, 187] cc => I, Pos: [187, 193] cc => I, Pos: [187, 193] cc => I, Pos: [188, 194] cc => I, Pos: [188, 194] cc => I, Pos: [196, 205] cc => I, Pos: [196, 205] cc => I, Pos: [200, 207, 212] ccc => cc, Pos: [205, 209] cc => I, Pos: [205, 209] cc => I, Pos: [206, 211] cc => I, Pos: [206, 211] cc => I, Pos: [219, 231] cc => I, Pos: [219, 231] cc => I, Pos: [221, 229] cc => I, Pos: [221, 229] cc => I, Pos: [222, 228] cc => I, Pos: [222, 228] cc => I, Pos: [224, 232] cc => I, Pos: [224, 232] cc => I, Pos: [225, 236] cc => I, Pos: [225, 236] cc => I, Pos: [226, 238] cc => I, Pos: [226, 238] cc => I, Pos: [229, 234] cc => I, Pos: [229, 234] cc => I, Pos: [230, 233] cc => I, Pos: [230, 233] cc => I, Pos: [231, 237] cc => I, Pos: [231, 237] cc => I, Pos: [234, 247] cc => I, Pos: [234, 247] cc => I, Pos: [236, 241] cc => I, Pos: [236, 241] cc => I, Pos: [256, 269] cc => I, Pos: [256, 269] cc => I]

Plan: 1
[Pos: [5, 12] cc => I,
 Pos: [7, 17] cc => I,
 Pos: [9, 13] cc => I,
 Pos: [10, 19] cc => I,
 Pos: [15, 28] cc => I,
 Pos: [16, 25] cc => I,
 Pos: [23, 30] cc => I,
 Pos: [24, 50] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [33, 38] cc => I,
 Pos: [36, 51] cc => I,
 Pos: [37, 44] cc => I,
 Pos: [40, 47] cc => I,
 Pos: [45, 53] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [74, 80] cc => I,
 Pos: [75, 82, 88] ccc => cc,
 Pos: [76, 87] cc => I,
 Pos: [78, 81] cc => I,
 Pos: [84, 86, 92] ccc => cc,
 Pos: [85, 91, 95] ccc => cc,
 Pos: [89, 97] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [102, 112, 118] ccc => cc,
 Pos: [104, 108, 114] ccc => cc,
 Pos: [109, 115] cc => I,
 Pos: [127, 131, 140] ccc => cc,
 Pos: [130, 136] cc => I,
 Pos: [139, 149] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [156, 162] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [174, 176] cc => I,
 Pos: [177, 187] cc => I,
 Pos: [188, 194] cc => I,
 Pos: [196, 205] cc => I,
 Pos: [200, 207, 212] ccc => cc,
 Pos: [206, 211] cc => I,
 Pos: [219, 231] cc => I,
 Pos: [221, 229] cc => I,
 Pos: [222, 228] cc => I,
 Pos: [224, 232] cc => I,
 Pos: [225, 236] cc => I,
 Pos: [226, 238] cc => I,
 Pos: [230, 233] cc => I,
 Pos: [234, 247] cc => I,
 Pos: [256, 269] cc => I]
Change: 48, Saving: 49

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.12547612190246582

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 12] cc => I,
 Pos: [7, 17] cc => I,
 Pos: [9, 13] cc => I,
 Pos: [10, 19] cc => I,
 Pos: [15, 28] cc => I,
 Pos: [16, 25] cc => I,
 Pos: [23, 30] cc => I,
 Pos: [24, 50] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [33, 38] cc => I,
 Pos: [36, 51] cc => I,
 Pos: [37, 44] cc => I,
 Pos: [40, 47] cc => I,
 Pos: [45, 53] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [74, 80] cc => I,
 Pos: [75, 82, 88] ccc => cc,
 Pos: [76, 87] cc => I,
 Pos: [78, 81] cc => I,
 Pos: [84, 86, 92] ccc => cc,
 Pos: [85, 91, 95] ccc => cc,
 Pos: [89, 97] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [102, 112, 118] ccc => cc,
 Pos: [104, 108, 114] ccc => cc,
 Pos: [109, 115] cc => I,
 Pos: [127, 131, 140] ccc => cc,
 Pos: [130, 136] cc => I,
 Pos: [139, 149] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [155, 161] cc => I,
 Pos: [156, 162] cc => I,
 Pos: [158, 168] cc => I,
 Pos: [174, 176] cc => I,
 Pos: [177, 187] cc => I,
 Pos: [188, 194] cc => I,
 Pos: [196, 205] cc => I,
 Pos: [200, 207, 212] ccc => cc,
 Pos: [206, 211] cc => I,
 Pos: [219, 231] cc => I,
 Pos: [221, 229] cc => I,
 Pos: [222, 228] cc => I,
 Pos: [224, 232] cc => I,
 Pos: [225, 236] cc => I,
 Pos: [226, 238] cc => I,
 Pos: [230, 233] cc => I,
 Pos: [234, 247] cc => I,
 Pos: [256, 269] cc => I]
Change: 48, Saving: 49

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 12] cc => I
Apply:  Pos: [7, 17] cc => I
Apply:  Pos: [9, 13] cc => I
Apply:  Pos: [10, 19] cc => I
Apply:  Pos: [15, 28] cc => I
Apply:  Pos: [16, 25] cc => I
Apply:  Pos: [23, 30] cc => I
Apply:  Pos: [24, 50] cc => I
Apply:  Pos: [26, 32] cc => I
Apply:  Pos: [33, 38] cc => I
Apply:  Pos: [36, 51] cc => I
Apply:  Pos: [37, 44] cc => I
Apply:  Pos: [40, 47] cc => I
Apply:  Pos: [45, 53] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [74, 80] cc => I
Apply:  Pos: [75, 82, 88] ccc => cc
Apply:  Pos: [76, 87] cc => I
Apply:  Pos: [78, 81] cc => I
Apply:  Pos: [84, 86, 92] ccc => cc
Apply:  Pos: [85, 91, 95] ccc => cc
Apply:  Pos: [89, 97] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [102, 112, 118] ccc => cc
Apply:  Pos: [104, 108, 114] ccc => cc
Apply:  Pos: [109, 115] cc => I
Apply:  Pos: [127, 131, 140] ccc => cc
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [139, 149] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [155, 161] cc => I
Apply:  Pos: [156, 162] cc => I
Apply:  Pos: [158, 168] cc => I
Apply:  Pos: [174, 176] cc => I
Apply:  Pos: [177, 187] cc => I
Apply:  Pos: [188, 194] cc => I
Apply:  Pos: [196, 205] cc => I
Apply:  Pos: [200, 207, 212] ccc => cc
Apply:  Pos: [206, 211] cc => I
Apply:  Pos: [219, 231] cc => I
Apply:  Pos: [221, 229] cc => I
Apply:  Pos: [222, 228] cc => I
Apply:  Pos: [224, 232] cc => I
Apply:  Pos: [225, 236] cc => I
Apply:  Pos: [226, 238] cc => I
Apply:  Pos: [230, 233] cc => I
Apply:  Pos: [234, 247] cc => I
Apply:  Pos: [256, 269] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [6, 12], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [4, 6], [5, 15], [2, 12], [6, 12], [17, 0], [2, 16], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [6, 5], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [5, 15], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 19], [1, 13], [0, 18], [9, 7], [6, 11], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [18, 14], [9, 7], [6, 12], [12, 10], [16, 19], [10, 18], [19, 17], [0, 9], [15, 7], [12, 10], [4, 2], [6, 11], [19, 17], [6, 5], [18, 14], [17, 3], [12, 11], [9, 1], [2, 10], [3, 8], [9, 18], [11, 1], [5, 15], [10, 0], [9, 7], [16, 10], [0, 18], [3, 8], [5, 15], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [9, 7], [12, 10], [0, 18], [7, 1], [6, 5], [19, 0], [17, 3], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  5.312912702560425

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 57]
[52, 58]
[65, 73]
[68, 74]
[70, 80]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[34, 40, 50]
[49, 51, 55]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[1, 10, 12]
[11, 21, 27]
[40, 50, 52]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 57]
[52, 58]
[65, 73]
[68, 74]
[70, 80]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2028162479400635

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 10, 12] ccc => cc, Pos: [11, 21, 27] ccc => cc, Pos: [34, 40, 50] ccc => cc, Pos: [38, 57] cc => I, Pos: [38, 57] cc => I, Pos: [40, 50, 52] ccc => cc, Pos: [49, 51, 55] ccc => cc, Pos: [52, 58] cc => I, Pos: [52, 58] cc => I, Pos: [65, 73] cc => I, Pos: [65, 73] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [70, 80] cc => I, Pos: [70, 80] cc => I]

Plan: 1
[Pos: [1, 10, 12] ccc => cc,
 Pos: [11, 21, 27] ccc => cc,
 Pos: [34, 40, 50] ccc => cc,
 Pos: [38, 57] cc => I,
 Pos: [49, 51, 55] ccc => cc,
 Pos: [52, 58] cc => I,
 Pos: [65, 73] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [70, 80] cc => I]
Change: 9, Saving: 11

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.031248092651367188

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 10, 12] ccc => cc,
 Pos: [11, 21, 27] ccc => cc,
 Pos: [34, 40, 50] ccc => cc,
 Pos: [38, 57] cc => I,
 Pos: [49, 51, 55] ccc => cc,
 Pos: [52, 58] cc => I,
 Pos: [65, 73] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [70, 80] cc => I]
Change: 9, Saving: 11

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 10, 12] ccc => cc
Apply:  Pos: [11, 21, 27] ccc => cc
Apply:  Pos: [34, 40, 50] ccc => cc
Apply:  Pos: [38, 57] cc => I
Apply:  Pos: [49, 51, 55] ccc => cc
Apply:  Pos: [52, 58] cc => I
Apply:  Pos: [65, 73] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [70, 80] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 2], [4, 6], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [6, 12], [6, 5], [2, 12], [17, 0], [2, 16], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [5, 15], [0, 3], [6, 12], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [18, 14], [9, 7], [6, 12], [12, 18], [10, 18], [0, 9], [15, 7], [4, 2], [6, 5], [18, 14], [17, 3], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [7, 1], [6, 5], [19, 0], [17, 3], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  3.2340643405914307

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[12, 22]
[51, 70]
[53, 72]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[12, 22]
[51, 70]
[53, 72]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9219162464141846

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 22] cc => I, Pos: [12, 22] cc => I, Pos: [51, 70] cc => I, Pos: [51, 70] cc => I, Pos: [53, 72] cc => I, Pos: [53, 72] cc => I]

Plan: 1
[Pos: [12, 22] cc => I, Pos: [51, 70] cc => I, Pos: [53, 72] cc => I]
Change: 3, Saving: 3

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 22] cc => I, Pos: [51, 70] cc => I, Pos: [53, 72] cc => I]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 22] cc => I
Apply:  Pos: [51, 70] cc => I
Apply:  Pos: [53, 72] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 6], [4, 2], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [6, 5], [2, 12], [17, 0], [2, 16], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [5, 15], [0, 3], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [18, 14], [9, 7], [6, 12], [10, 18], [12, 18], [0, 9], [15, 7], [4, 2], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [7, 1], [19, 0], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  2.9219162464141846

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.765554904937744

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[4, 2], [4, 6], [0, 3], [10, 18], [7, 1], [0, 18], [11, 1], [3, 8], [8, 14], [5, 11], [6, 5], [2, 12], [17, 0], [2, 16], [0, 3], [9, 18], [17, 3], [19, 0], [11, 9], [5, 15], [0, 3], [16, 19], [17, 3], [2, 10], [16, 12], [10, 0], [15, 7], [8, 13], [5, 11], [19, 3], [16, 17], [1, 13], [0, 18], [9, 7], [3, 8], [19, 17], [9, 18], [13, 14], [7, 1], [0, 7], [2, 12], [18, 14], [9, 7], [6, 12], [12, 18], [10, 18], [0, 9], [15, 7], [4, 2], [18, 14], [12, 11], [9, 1], [2, 10], [9, 18], [11, 1], [10, 0], [16, 10], [0, 18], [12, 11], [16, 19], [10, 18], [9, 1], [8, 14], [12, 10], [0, 18], [7, 1], [19, 0], [2, 12], [4, 2], [17, 0], [8, 13], [0, 3], [11, 9], [18, 8], [17, 3], [13, 14], [0, 9], [2, 10], [11, 7], [12, 5], [10, 9], [19, 3], [11, 1], [6, 12], [15, 7], [8, 14], [5, 11], [2, 12], [9, 7], [3, 8], [12, 5], [10, 18], [13, 14], [19, 17], [8, 14], [12, 10], [17, 3], [11, 9], [18, 8], [5, 11], [16, 12], [15, 7], [10, 0], [4, 6], [7, 1], [12, 10], [19, 0], [3, 8], [18, 13], [11, 7], [0, 3], [10, 9], [16, 19], [9, 1], [4, 2], [10, 0], [5, 11], [16, 12], [1, 13], [19, 3], [8, 14], [2, 16], [12, 11], [16, 19], [4, 2], [9, 18], [0, 3], [11, 1], [10, 0], [19, 3], [16, 10], [3, 8], [2, 12], [5, 11], [2, 16], [9, 1], [10, 0], [17, 3], [11, 9], [18, 14], [19, 0], [2, 10], [1, 13], [10, 9], [6, 11], [0, 18], [15, 7], [12, 5], [19, 3], [4, 2], [9, 18], [6, 5], [16, 10], [17, 3], [12, 11], [11, 9], [16, 12], [0, 18], [19, 3], [5, 15], [2, 10], ----End Timer [Execute Mapping]:  2.765554904937744

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [161] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 322

Reduced: 
 - size: 109 (40.37%)
 - depth: 9 (20.00%)

