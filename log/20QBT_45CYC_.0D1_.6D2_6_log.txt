----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10939955711364746

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 4], [9, 1], [4, 17], [6, 7], [19, 15], [0, 10], [5, 16], [9, 1], [2, 8], [6, 4], [5, 16], [17, 19], [18, 13], [0, 10], [9, 1], [18, 13], [10, 8], [17, 15], [12, 6], [7, 4], [9, 3], [17, 18], [7, 4], [12, 6], [11, 10], [2, 16], [9, 3], [18, 19], [4, 14], [15, 3], [0, 7], [11, 10], [9, 1], [2, 16], [4, 17], [17, 15], [11, 10], [3, 1], [18, 19], [0, 2], [4, 17], [5, 16], [0, 2], [10, 8], [17, 19], [11, 10], [3, 1], [6, 7], [8, 16], [18, 15], [6, 17], [2, 8], [4, 14], [10, 13], [18, 19], [11, 0], [7, 17], [15, 3], [2, 16], [11, 0], [13, 1], [18, 19], [10, 8], [12, 6], [7, 17], [11, 10], [18, 15], [5, 16], [0, 2], [12, 6], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 13], [17, 19], [9, 1], [11, 10], [0, 2], [12, 6], [18, 15], [13, 3], [9, 1], [17, 19], [11, 7], [8, 16], [0, 10], [8, 13], [11, 7], [12, 6], [5, 16], [17, 15], [10, 8], [2, 16], [13, 1], [14, 19], [11, 0], [6, 7], [15, 3], [10, 13], [6, 17], [2, 5], [8, 18], [3, 1], [13, 1], [18, 19], [12, 11], [5, 8], [4, 14], [0, 2], [13, 9], [14, 19], [5, 16], [0, 2], [7, 4], [10, 8], [10, 13], [9, 1], [6, 17], [5, 8], [7, 4], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [0, 7], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [0, 7], [18, 15], [10, 8], [17, 18], [9, 1], [11, 0], [2, 5], [7, 10], [6, 17], [9, 1], [8, 16], [15, 3], [4, 14], [7, 10], [2, 8], [11, 0], [13, 3], [7, 4], [15, 3], [8, 13], [2, 5], [0, 10], [18, 19], [12, 6], [7, 4], [12, 6], [0, 2], [5, 8], [9, 1], [15, 3], [17, 19], [4, 14], [11, 10], [17, 18], [5, 8], [15, 3], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [12, 11], [3, 1], [4, 14], [5, 8], [0, 2], [16, 9], [18, 13], [7, 17], [12, 11], [4, 14], [10, 13], [0, 7], [5, 16], [12, 11], [3, 1], [14, 19], [7, 17], [5, 8], [9, 1], [13, 3], [2, 16], [4, 14], [15, 3], [0, 7], [8, 18], [10, 13], [4, 14], [6, 17], [18, 13], [11, 10], [9, 1], [2, 5], [19, 15], [4, 14], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [11, 0], [7, 4], [13, 3], [17, 18], [11, 0], [5, 8], [12, 6], [7, 17], [13, 1], [14, 19], [0, 2], [5, 16], [18, 15], [17, 19], [12, 11], [0, 10], [7, 4], [5, 8], [13, 3], [18, 19], [7, 17], [5, 16], [12, 6], [10, 8], [17, 19], [2, 5], [18, 13], [6, 4], [9, 1], [8, 16], [12, 11], [17, 19], [2, 16], [12, 11], [3, 1], [8, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [8, 18], [5, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 13]
[12, 16]
[11, 19]
[13, 20]
[18, 21]
[25, 28]
[24, 29]
[26, 32]
[30, 37]
[20, 38]
[31, 39]
[37, 42]
[33, 44]
[45, 48]
[43, 52]
[34, 58]
[61, 65]
[60, 67]
[62, 70]
[69, 75]
[70, 77]
[75, 82]
[71, 87]
[74, 88]
[82, 89]
[86, 92]
[85, 93]
[94, 98]
[89, 99]
[119, 123]
[110, 128]
[124, 130]
[137, 143]
[147, 152]
[150, 156]
[148, 158]
[149, 163]
[160, 167]
[166, 168]
[152, 171]
[161, 172]
[170, 177]
[172, 178]
[184, 192]
[186, 193]
[192, 197]
[185, 198]
[187, 201]
[205, 210]
[202, 214]
[210, 217]
[223, 229]
[227, 231]
[228, 243]
[232, 244]
[229, 245]
[238, 248]
[233, 249]
[241, 257]
[251, 258]
[257, 260]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 8, 15]
[40, 41, 46]
[42, 49, 51]
[55, 63, 72]
[133, 141, 149]
[169, 182, 188]
[193, 199, 205]
[195, 200, 207]
[220, 224, 232]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[191, 195, 200]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 103, 111]
[165, 173, 176]
[253, 262, 268]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 13]
[12, 16]
[11, 19]
[13, 20]
[18, 21]
[25, 28]
[24, 29]
[26, 32]
[30, 37]
[20, 38]
[31, 39]
[37, 42]
[33, 44]
[45, 48]
[43, 52]
[34, 58]
[61, 65]
[60, 67]
[62, 70]
[69, 75]
[70, 77]
[75, 82]
[71, 87]
[74, 88]
[82, 89]
[86, 92]
[85, 93]
[94, 98]
[89, 99]
[119, 123]
[110, 128]
[124, 130]
[137, 143]
[147, 152]
[150, 156]
[148, 158]
[149, 163]
[160, 167]
[166, 168]
[152, 171]
[161, 172]
[170, 177]
[172, 178]
[184, 192]
[186, 193]
[192, 197]
[185, 198]
[187, 201]
[205, 210]
[202, 214]
[210, 217]
[223, 229]
[227, 231]
[228, 243]
[232, 244]
[229, 245]
[238, 248]
[233, 249]
[241, 257]
[251, 258]
[257, 260]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.2187604904174805

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 8, 15] ccc => cc, Pos: [7, 13] cc => I, Pos: [7, 13] cc => I, Pos: [11, 19] cc => I, Pos: [11, 19] cc => I, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [13, 20] cc => I, Pos: [13, 20] cc => I, Pos: [18, 21] cc => I, Pos: [18, 21] cc => I, Pos: [20, 38] cc => I, Pos: [20, 38] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [25, 28] cc => I, Pos: [25, 28] cc => I, Pos: [26, 32] cc => I, Pos: [26, 32] cc => I, Pos: [30, 37] cc => I, Pos: [30, 37] cc => I, Pos: [31, 39] cc => I, Pos: [31, 39] cc => I, Pos: [33, 44] cc => I, Pos: [33, 44] cc => I, Pos: [34, 58] cc => I, Pos: [34, 58] cc => I, Pos: [37, 42] cc => I, Pos: [37, 42] cc => I, Pos: [40, 41, 46] ccc => cc, Pos: [42, 49, 51] ccc => cc, Pos: [43, 52] cc => I, Pos: [43, 52] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [55, 63, 72] ccc => cc, Pos: [60, 67] cc => I, Pos: [60, 67] cc => I, Pos: [61, 65] cc => I, Pos: [61, 65] cc => I, Pos: [62, 70] cc => I, Pos: [62, 70] cc => I, Pos: [69, 75] cc => I, Pos: [69, 75] cc => I, Pos: [70, 77] cc => I, Pos: [70, 77] cc => I, Pos: [71, 87] cc => I, Pos: [71, 87] cc => I, Pos: [74, 88] cc => I, Pos: [74, 88] cc => I, Pos: [75, 82] cc => I, Pos: [75, 82] cc => I, Pos: [82, 89] cc => I, Pos: [82, 89] cc => I, Pos: [85, 93] cc => I, Pos: [85, 93] cc => I, Pos: [86, 92] cc => I, Pos: [86, 92] cc => I, Pos: [89, 99] cc => I, Pos: [89, 99] cc => I, Pos: [94, 98] cc => I, Pos: [94, 98] cc => I, Pos: [100, 103, 111] ccc => cc, Pos: [110, 128] cc => I, Pos: [110, 128] cc => I, Pos: [119, 123] cc => I, Pos: [119, 123] cc => I, Pos: [124, 130] cc => I, Pos: [124, 130] cc => I, Pos: [133, 141, 149] ccc => cc, Pos: [137, 143] cc => I, Pos: [137, 143] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [148, 158] cc => I, Pos: [148, 158] cc => I, Pos: [149, 163] cc => I, Pos: [149, 163] cc => I, Pos: [150, 156] cc => I, Pos: [150, 156] cc => I, Pos: [152, 171] cc => I, Pos: [152, 171] cc => I, Pos: [160, 167] cc => I, Pos: [160, 167] cc => I, Pos: [161, 172] cc => I, Pos: [161, 172] cc => I, Pos: [165, 173, 176] ccc => cc, Pos: [166, 168] cc => I, Pos: [166, 168] cc => I, Pos: [169, 182, 188] ccc => cc, Pos: [170, 177] cc => I, Pos: [170, 177] cc => I, Pos: [172, 178] cc => I, Pos: [172, 178] cc => I, Pos: [184, 192] cc => I, Pos: [184, 192] cc => I, Pos: [185, 198] cc => I, Pos: [185, 198] cc => I, Pos: [186, 193] cc => I, Pos: [186, 193] cc => I, Pos: [187, 201] cc => I, Pos: [187, 201] cc => I, Pos: [191, 195, 200] ccc => cc, Pos: [192, 197] cc => I, Pos: [192, 197] cc => I, Pos: [193, 199, 205] ccc => cc, Pos: [195, 200, 207] ccc => cc, Pos: [202, 214] cc => I, Pos: [202, 214] cc => I, Pos: [205, 210] cc => I, Pos: [205, 210] cc => I, Pos: [210, 217] cc => I, Pos: [210, 217] cc => I, Pos: [220, 224, 232] ccc => cc, Pos: [223, 229] cc => I, Pos: [223, 229] cc => I, Pos: [227, 231] cc => I, Pos: [227, 231] cc => I, Pos: [228, 243] cc => I, Pos: [228, 243] cc => I, Pos: [229, 245] cc => I, Pos: [229, 245] cc => I, Pos: [232, 244] cc => I, Pos: [232, 244] cc => I, Pos: [233, 249] cc => I, Pos: [233, 249] cc => I, Pos: [238, 248] cc => I, Pos: [238, 248] cc => I, Pos: [241, 257] cc => I, Pos: [241, 257] cc => I, Pos: [251, 258] cc => I, Pos: [251, 258] cc => I, Pos: [253, 262, 268] ccc => cc, Pos: [257, 260] cc => I, Pos: [257, 260] cc => I]

Plan: 1
[Pos: [6, 8, 15] ccc => cc,
 Pos: [7, 13] cc => I,
 Pos: [11, 19] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [20, 38] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [25, 28] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [31, 39] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [34, 58] cc => I,
 Pos: [40, 41, 46] ccc => cc,
 Pos: [42, 49, 51] ccc => cc,
 Pos: [43, 52] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [55, 63, 72] ccc => cc,
 Pos: [60, 67] cc => I,
 Pos: [61, 65] cc => I,
 Pos: [62, 70] cc => I,
 Pos: [69, 75] cc => I,
 Pos: [71, 87] cc => I,
 Pos: [74, 88] cc => I,
 Pos: [82, 89] cc => I,
 Pos: [85, 93] cc => I,
 Pos: [86, 92] cc => I,
 Pos: [94, 98] cc => I,
 Pos: [100, 103, 111] ccc => cc,
 Pos: [110, 128] cc => I,
 Pos: [119, 123] cc => I,
 Pos: [124, 130] cc => I,
 Pos: [133, 141, 149] ccc => cc,
 Pos: [137, 143] cc => I,
 Pos: [147, 152] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [160, 167] cc => I,
 Pos: [161, 172] cc => I,
 Pos: [165, 173, 176] ccc => cc,
 Pos: [166, 168] cc => I,
 Pos: [169, 182, 188] ccc => cc,
 Pos: [170, 177] cc => I,
 Pos: [184, 192] cc => I,
 Pos: [185, 198] cc => I,
 Pos: [186, 193] cc => I,
 Pos: [187, 201] cc => I,
 Pos: [191, 195, 200] ccc => cc,
 Pos: [202, 214] cc => I,
 Pos: [205, 210] cc => I,
 Pos: [220, 224, 232] ccc => cc,
 Pos: [223, 229] cc => I,
 Pos: [227, 231] cc => I,
 Pos: [228, 243] cc => I,
 Pos: [233, 249] cc => I,
 Pos: [238, 248] cc => I,
 Pos: [241, 257] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [253, 262, 268] ccc => cc]
Change: 59, Saving: 214

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 8, 15] ccc => cc,
 Pos: [7, 13] cc => I,
 Pos: [11, 19] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [20, 38] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [25, 28] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [31, 39] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [34, 58] cc => I,
 Pos: [40, 41, 46] ccc => cc,
 Pos: [42, 49, 51] ccc => cc,
 Pos: [43, 52] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [55, 63, 72] ccc => cc,
 Pos: [60, 67] cc => I,
 Pos: [61, 65] cc => I,
 Pos: [62, 70] cc => I,
 Pos: [69, 75] cc => I,
 Pos: [71, 87] cc => I,
 Pos: [74, 88] cc => I,
 Pos: [82, 89] cc => I,
 Pos: [85, 93] cc => I,
 Pos: [86, 92] cc => I,
 Pos: [94, 98] cc => I,
 Pos: [100, 103, 111] ccc => cc,
 Pos: [110, 128] cc => I,
 Pos: [119, 123] cc => I,
 Pos: [124, 130] cc => I,
 Pos: [133, 141, 149] ccc => cc,
 Pos: [137, 143] cc => I,
 Pos: [147, 152] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [160, 167] cc => I,
 Pos: [161, 172] cc => I,
 Pos: [165, 173, 176] ccc => cc,
 Pos: [166, 168] cc => I,
 Pos: [169, 182, 188] ccc => cc,
 Pos: [170, 177] cc => I,
 Pos: [184, 192] cc => I,
 Pos: [185, 198] cc => I,
 Pos: [186, 193] cc => I,
 Pos: [187, 201] cc => I,
 Pos: [191, 195, 200] ccc => cc,
 Pos: [202, 214] cc => I,
 Pos: [205, 210] cc => I,
 Pos: [220, 224, 232] ccc => cc,
 Pos: [223, 229] cc => I,
 Pos: [227, 231] cc => I,
 Pos: [228, 243] cc => I,
 Pos: [233, 249] cc => I,
 Pos: [238, 248] cc => I,
 Pos: [241, 257] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [253, 262, 268] ccc => cc]
Change: 59, Saving: 214

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 8, 15] ccc => cc
Apply:  Pos: [7, 13] cc => I
Apply:  Pos: [11, 19] cc => I
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [18, 21] cc => I
Apply:  Pos: [20, 38] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [25, 28] cc => I
Apply:  Pos: [26, 32] cc => I
Apply:  Pos: [30, 37] cc => I
Apply:  Pos: [31, 39] cc => I
Apply:  Pos: [33, 44] cc => I
Apply:  Pos: [34, 58] cc => I
Apply:  Pos: [40, 41, 46] ccc => cc
Apply:  Pos: [42, 49, 51] ccc => cc
Apply:  Pos: [43, 52] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [55, 63, 72] ccc => cc
Apply:  Pos: [60, 67] cc => I
Apply:  Pos: [61, 65] cc => I
Apply:  Pos: [62, 70] cc => I
Apply:  Pos: [69, 75] cc => I
Apply:  Pos: [71, 87] cc => I
Apply:  Pos: [74, 88] cc => I
Apply:  Pos: [82, 89] cc => I
Apply:  Pos: [85, 93] cc => I
Apply:  Pos: [86, 92] cc => I
Apply:  Pos: [94, 98] cc => I
Apply:  Pos: [100, 103, 111] ccc => cc
Apply:  Pos: [110, 128] cc => I
Apply:  Pos: [119, 123] cc => I
Apply:  Pos: [124, 130] cc => I
Apply:  Pos: [133, 141, 149] ccc => cc
Apply:  Pos: [137, 143] cc => I
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [148, 158] cc => I
Apply:  Pos: [150, 156] cc => I
Apply:  Pos: [160, 167] cc => I
Apply:  Pos: [161, 172] cc => I
Apply:  Pos: [165, 173, 176] ccc => cc
Apply:  Pos: [166, 168] cc => I
Apply:  Pos: [169, 182, 188] ccc => cc
Apply:  Pos: [170, 177] cc => I
Apply:  Pos: [184, 192] cc => I
Apply:  Pos: [185, 198] cc => I
Apply:  Pos: [186, 193] cc => I
Apply:  Pos: [187, 201] cc => I
Apply:  Pos: [191, 195, 200] ccc => cc
Apply:  Pos: [202, 214] cc => I
Apply:  Pos: [205, 210] cc => I
Apply:  Pos: [220, 224, 232] ccc => cc
Apply:  Pos: [223, 229] cc => I
Apply:  Pos: [227, 231] cc => I
Apply:  Pos: [228, 243] cc => I
Apply:  Pos: [233, 249] cc => I
Apply:  Pos: [238, 248] cc => I
Apply:  Pos: [241, 257] cc => I
Apply:  Pos: [251, 258] cc => I
Apply:  Pos: [253, 262, 268] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 17], [4, 17], [6, 7], [19, 15], [2, 8], [17, 19], [10, 8], [17, 15], [17, 18], [15, 3], [0, 7], [4, 15], [17, 15], [11, 8], [5, 16], [10, 8], [17, 19], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [8, 13], [12, 6], [2, 5], [17, 15], [10, 8], [5, 16], [13, 1], [14, 19], [11, 0], [6, 7], [15, 3], [10, 13], [8, 18], [3, 1], [13, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [5, 16], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 16], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [17, 18], [6, 17], [8, 16], [15, 3], [4, 14], [2, 8], [13, 3], [8, 13], [2, 5], [0, 10], [17, 18], [0, 16], [9, 1], [18, 19], [4, 14], [11, 10], [15, 3], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [16, 9], [18, 13], [0, 7], [10, 13], [7, 17], [5, 16], [12, 11], [14, 19], [13, 3], [2, 16], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [2, 5], [19, 15], [4, 14], [6, 7], [16, 9], [5, 16], [17, 19], [4, 17], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [5, 8], [13, 3], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  5.2187604904174805

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 22]
[51, 67]
[89, 99]
[103, 114]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[14, 15, 17]
[47, 55, 82]
[102, 104, 109]
[109, 111, 118]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[52, 57, 59]
[85, 86, 95]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[112, 116, 124]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 22]
[51, 67]
[89, 99]
[103, 114]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.828145980834961

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 22] cc => I, Pos: [11, 22] cc => I, Pos: [14, 15, 17] ccc => cc, Pos: [47, 55, 82] ccc => cc, Pos: [51, 67] cc => I, Pos: [51, 67] cc => I, Pos: [52, 57, 59] ccc => cc, Pos: [85, 86, 95] ccc => cc, Pos: [89, 99] cc => I, Pos: [89, 99] cc => I, Pos: [102, 104, 109] ccc => cc, Pos: [103, 114] cc => I, Pos: [103, 114] cc => I, Pos: [109, 111, 118] ccc => cc, Pos: [112, 116, 124] ccc => cc]

Plan: 1
[Pos: [11, 22] cc => I,
 Pos: [14, 15, 17] ccc => cc,
 Pos: [47, 55, 82] ccc => cc,
 Pos: [51, 67] cc => I,
 Pos: [52, 57, 59] ccc => cc,
 Pos: [85, 86, 95] ccc => cc,
 Pos: [89, 99] cc => I,
 Pos: [102, 104, 109] ccc => cc,
 Pos: [103, 114] cc => I,
 Pos: [112, 116, 124] ccc => cc]
Change: 10, Saving: 28

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 22] cc => I,
 Pos: [14, 15, 17] ccc => cc,
 Pos: [47, 55, 82] ccc => cc,
 Pos: [51, 67] cc => I,
 Pos: [52, 57, 59] ccc => cc,
 Pos: [85, 86, 95] ccc => cc,
 Pos: [89, 99] cc => I,
 Pos: [102, 104, 109] ccc => cc,
 Pos: [103, 114] cc => I,
 Pos: [112, 116, 124] ccc => cc]
Change: 10, Saving: 28

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 22] cc => I
Apply:  Pos: [14, 15, 17] ccc => cc
Apply:  Pos: [47, 55, 82] ccc => cc
Apply:  Pos: [51, 67] cc => I
Apply:  Pos: [52, 57, 59] ccc => cc
Apply:  Pos: [85, 86, 95] ccc => cc
Apply:  Pos: [89, 99] cc => I
Apply:  Pos: [102, 104, 109] ccc => cc
Apply:  Pos: [103, 114] cc => I
Apply:  Pos: [112, 116, 124] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [4, 17], [6, 7], [6, 17], [19, 15], [2, 8], [10, 8], [17, 18], [17, 3], [15, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 15], [18, 13], [13, 3], [8, 16], [0, 10], [8, 13], [12, 7], [2, 5], [17, 15], [10, 8], [10, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 13], [10, 8], [9, 1], [5, 8], [18, 15], [13, 1], [2, 16], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [15, 3], [2, 8], [13, 3], [8, 13], [2, 5], [0, 10], [0, 16], [9, 1], [18, 19], [11, 10], [15, 3], [0, 4], [7, 4], [2, 16], [10, 8], [16, 9], [18, 13], [10, 13], [7, 17], [2, 5], [12, 11], [13, 3], [5, 16], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [19, 15], [4, 14], [6, 7], [16, 9], [5, 16], [17, 19], [4, 17], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [5, 8], [13, 3], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [2, 16], [8, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.828145980834961

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[85, 100]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[103, 114, 115]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[43, 47, 48]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[85, 100]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.5155937671661377

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [43, 47, 48] ccc => cc, Pos: [85, 100] cc => I, Pos: [85, 100] cc => I, Pos: [103, 114, 115] ccc => cc]

Plan: 1
[Pos: [43, 47, 48] ccc => cc,
 Pos: [85, 100] cc => I,
 Pos: [103, 114, 115] ccc => cc]
Change: 3, Saving: 8

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [43, 47, 48] ccc => cc,
 Pos: [85, 100] cc => I,
 Pos: [103, 114, 115] ccc => cc]
Change: 3, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [43, 47, 48] ccc => cc
Apply:  Pos: [85, 100] cc => I
Apply:  Pos: [103, 114, 115] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [4, 17], [6, 17], [6, 7], [19, 15], [10, 8], [2, 8], [17, 3], [17, 18], [15, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [10, 8], [12, 7], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 16], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [15, 3], [2, 8], [13, 3], [8, 13], [0, 16], [0, 10], [9, 1], [18, 19], [11, 10], [15, 3], [7, 4], [0, 4], [2, 16], [10, 8], [16, 9], [10, 13], [18, 13], [7, 17], [12, 11], [13, 3], [5, 9], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [19, 15], [4, 14], [6, 7], [16, 9], [17, 19], [4, 17], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [5, 8], [13, 3], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.5155937671661377

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4688072204589844

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 17], [4, 17], [6, 7], [19, 15], [2, 8], [10, 8], [17, 18], [15, 3], [17, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 15], [18, 13], [13, 3], [8, 16], [0, 10], [10, 8], [12, 7], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 13], [10, 8], [9, 1], [5, 8], [18, 15], [13, 1], [2, 16], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [15, 3], [2, 8], [13, 3], [8, 13], [0, 10], [0, 16], [9, 1], [18, 19], [11, 10], [15, 3], [0, 4], [7, 4], [2, 16], [10, 8], [16, 9], [18, 13], [10, 13], [7, 17], [12, 11], [13, 3], [5, 9], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [19, 15], [4, 14], [6, 7], [16, 9], [17, 19], [4, 17], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [5, 8], [13, 3], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [2, 16], [8, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.4688072204589844

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [145] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 290

Reduced: 
 - size: 125 (46.30%)
 - cycle: 250 (46.30%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936665534973145

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 4], [9, 1], [4, 17], [6, 7], [19, 15], [0, 10], [5, 16], [9, 1], [2, 8], [6, 4], [5, 16], [17, 19], [18, 13], [0, 10], [9, 1], [18, 13], [10, 8], [17, 15], [12, 6], [7, 4], [9, 3], [17, 18], [7, 4], [12, 6], [11, 10], [2, 16], [9, 3], [18, 19], [4, 14], [15, 3], [0, 7], [11, 10], [9, 1], [2, 16], [4, 17], [17, 15], [11, 10], [3, 1], [18, 19], [0, 2], [4, 17], [5, 16], [0, 2], [10, 8], [17, 19], [11, 10], [3, 1], [6, 7], [8, 16], [18, 15], [6, 17], [2, 8], [4, 14], [10, 13], [18, 19], [11, 0], [7, 17], [15, 3], [2, 16], [11, 0], [13, 1], [18, 19], [10, 8], [12, 6], [7, 17], [11, 10], [18, 15], [5, 16], [0, 2], [12, 6], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 13], [17, 19], [9, 1], [11, 10], [0, 2], [12, 6], [18, 15], [13, 3], [9, 1], [17, 19], [11, 7], [8, 16], [0, 10], [8, 13], [11, 7], [12, 6], [5, 16], [17, 15], [10, 8], [2, 16], [13, 1], [14, 19], [11, 0], [6, 7], [15, 3], [10, 13], [6, 17], [2, 5], [8, 18], [3, 1], [13, 1], [18, 19], [12, 11], [5, 8], [4, 14], [0, 2], [13, 9], [14, 19], [5, 16], [0, 2], [7, 4], [10, 8], [10, 13], [9, 1], [6, 17], [5, 8], [7, 4], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [0, 7], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [0, 7], [18, 15], [10, 8], [17, 18], [9, 1], [11, 0], [2, 5], [7, 10], [6, 17], [9, 1], [8, 16], [15, 3], [4, 14], [7, 10], [2, 8], [11, 0], [13, 3], [7, 4], [15, 3], [8, 13], [2, 5], [0, 10], [18, 19], [12, 6], [7, 4], [12, 6], [0, 2], [5, 8], [9, 1], [15, 3], [17, 19], [4, 14], [11, 10], [17, 18], [5, 8], [15, 3], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [12, 11], [3, 1], [4, 14], [5, 8], [0, 2], [16, 9], [18, 13], [7, 17], [12, 11], [4, 14], [10, 13], [0, 7], [5, 16], [12, 11], [3, 1], [14, 19], [7, 17], [5, 8], [9, 1], [13, 3], [2, 16], [4, 14], [15, 3], [0, 7], [8, 18], [10, 13], [4, 14], [6, 17], [18, 13], [11, 10], [9, 1], [2, 5], [19, 15], [4, 14], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [11, 0], [7, 4], [13, 3], [17, 18], [11, 0], [5, 8], [12, 6], [7, 17], [13, 1], [14, 19], [0, 2], [5, 16], [18, 15], [17, 19], [12, 11], [0, 10], [7, 4], [5, 8], [13, 3], [18, 19], [7, 17], [5, 16], [12, 6], [10, 8], [17, 19], [2, 5], [18, 13], [6, 4], [9, 1], [8, 16], [12, 11], [17, 19], [2, 16], [12, 11], [3, 1], [8, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [8, 18], [5, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 13]
[12, 16]
[11, 19]
[13, 20]
[18, 21]
[25, 28]
[24, 29]
[26, 32]
[30, 37]
[20, 38]
[31, 39]
[37, 42]
[33, 44]
[45, 48]
[43, 52]
[34, 58]
[61, 65]
[60, 67]
[62, 70]
[69, 75]
[70, 77]
[75, 82]
[71, 87]
[74, 88]
[82, 89]
[86, 92]
[85, 93]
[94, 98]
[89, 99]
[119, 123]
[110, 128]
[124, 130]
[137, 143]
[147, 152]
[150, 156]
[148, 158]
[149, 163]
[160, 167]
[166, 168]
[152, 171]
[161, 172]
[170, 177]
[172, 178]
[184, 192]
[186, 193]
[192, 197]
[185, 198]
[187, 201]
[205, 210]
[202, 214]
[210, 217]
[223, 229]
[227, 231]
[228, 243]
[232, 244]
[229, 245]
[238, 248]
[233, 249]
[241, 257]
[251, 258]
[257, 260]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 8, 15]
[40, 41, 46]
[42, 49, 51]
[55, 63, 72]
[133, 141, 149]
[169, 182, 188]
[193, 199, 205]
[195, 200, 207]
[220, 224, 232]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[191, 195, 200]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 103, 111]
[165, 173, 176]
[253, 262, 268]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 13]
[12, 16]
[11, 19]
[13, 20]
[18, 21]
[25, 28]
[24, 29]
[26, 32]
[30, 37]
[20, 38]
[31, 39]
[37, 42]
[33, 44]
[45, 48]
[43, 52]
[34, 58]
[61, 65]
[60, 67]
[62, 70]
[69, 75]
[70, 77]
[75, 82]
[71, 87]
[74, 88]
[82, 89]
[86, 92]
[85, 93]
[94, 98]
[89, 99]
[119, 123]
[110, 128]
[124, 130]
[137, 143]
[147, 152]
[150, 156]
[148, 158]
[149, 163]
[160, 167]
[166, 168]
[152, 171]
[161, 172]
[170, 177]
[172, 178]
[184, 192]
[186, 193]
[192, 197]
[185, 198]
[187, 201]
[205, 210]
[202, 214]
[210, 217]
[223, 229]
[227, 231]
[228, 243]
[232, 244]
[229, 245]
[238, 248]
[233, 249]
[241, 257]
[251, 258]
[257, 260]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.156262397766113

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 8, 15] ccc => cc, Pos: [7, 13] cc => I, Pos: [7, 13] cc => I, Pos: [11, 19] cc => I, Pos: [11, 19] cc => I, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [13, 20] cc => I, Pos: [13, 20] cc => I, Pos: [18, 21] cc => I, Pos: [18, 21] cc => I, Pos: [20, 38] cc => I, Pos: [20, 38] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [25, 28] cc => I, Pos: [25, 28] cc => I, Pos: [26, 32] cc => I, Pos: [26, 32] cc => I, Pos: [30, 37] cc => I, Pos: [30, 37] cc => I, Pos: [31, 39] cc => I, Pos: [31, 39] cc => I, Pos: [33, 44] cc => I, Pos: [33, 44] cc => I, Pos: [34, 58] cc => I, Pos: [34, 58] cc => I, Pos: [37, 42] cc => I, Pos: [37, 42] cc => I, Pos: [40, 41, 46] ccc => cc, Pos: [42, 49, 51] ccc => cc, Pos: [43, 52] cc => I, Pos: [43, 52] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [55, 63, 72] ccc => cc, Pos: [60, 67] cc => I, Pos: [60, 67] cc => I, Pos: [61, 65] cc => I, Pos: [61, 65] cc => I, Pos: [62, 70] cc => I, Pos: [62, 70] cc => I, Pos: [69, 75] cc => I, Pos: [69, 75] cc => I, Pos: [70, 77] cc => I, Pos: [70, 77] cc => I, Pos: [71, 87] cc => I, Pos: [71, 87] cc => I, Pos: [74, 88] cc => I, Pos: [74, 88] cc => I, Pos: [75, 82] cc => I, Pos: [75, 82] cc => I, Pos: [82, 89] cc => I, Pos: [82, 89] cc => I, Pos: [85, 93] cc => I, Pos: [85, 93] cc => I, Pos: [86, 92] cc => I, Pos: [86, 92] cc => I, Pos: [89, 99] cc => I, Pos: [89, 99] cc => I, Pos: [94, 98] cc => I, Pos: [94, 98] cc => I, Pos: [100, 103, 111] ccc => cc, Pos: [110, 128] cc => I, Pos: [110, 128] cc => I, Pos: [119, 123] cc => I, Pos: [119, 123] cc => I, Pos: [124, 130] cc => I, Pos: [124, 130] cc => I, Pos: [133, 141, 149] ccc => cc, Pos: [137, 143] cc => I, Pos: [137, 143] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [148, 158] cc => I, Pos: [148, 158] cc => I, Pos: [149, 163] cc => I, Pos: [149, 163] cc => I, Pos: [150, 156] cc => I, Pos: [150, 156] cc => I, Pos: [152, 171] cc => I, Pos: [152, 171] cc => I, Pos: [160, 167] cc => I, Pos: [160, 167] cc => I, Pos: [161, 172] cc => I, Pos: [161, 172] cc => I, Pos: [165, 173, 176] ccc => cc, Pos: [166, 168] cc => I, Pos: [166, 168] cc => I, Pos: [169, 182, 188] ccc => cc, Pos: [170, 177] cc => I, Pos: [170, 177] cc => I, Pos: [172, 178] cc => I, Pos: [172, 178] cc => I, Pos: [184, 192] cc => I, Pos: [184, 192] cc => I, Pos: [185, 198] cc => I, Pos: [185, 198] cc => I, Pos: [186, 193] cc => I, Pos: [186, 193] cc => I, Pos: [187, 201] cc => I, Pos: [187, 201] cc => I, Pos: [191, 195, 200] ccc => cc, Pos: [192, 197] cc => I, Pos: [192, 197] cc => I, Pos: [193, 199, 205] ccc => cc, Pos: [195, 200, 207] ccc => cc, Pos: [202, 214] cc => I, Pos: [202, 214] cc => I, Pos: [205, 210] cc => I, Pos: [205, 210] cc => I, Pos: [210, 217] cc => I, Pos: [210, 217] cc => I, Pos: [220, 224, 232] ccc => cc, Pos: [223, 229] cc => I, Pos: [223, 229] cc => I, Pos: [227, 231] cc => I, Pos: [227, 231] cc => I, Pos: [228, 243] cc => I, Pos: [228, 243] cc => I, Pos: [229, 245] cc => I, Pos: [229, 245] cc => I, Pos: [232, 244] cc => I, Pos: [232, 244] cc => I, Pos: [233, 249] cc => I, Pos: [233, 249] cc => I, Pos: [238, 248] cc => I, Pos: [238, 248] cc => I, Pos: [241, 257] cc => I, Pos: [241, 257] cc => I, Pos: [251, 258] cc => I, Pos: [251, 258] cc => I, Pos: [253, 262, 268] ccc => cc, Pos: [257, 260] cc => I, Pos: [257, 260] cc => I]

Plan: 1
[Pos: [6, 8, 15] ccc => cc,
 Pos: [7, 13] cc => I,
 Pos: [11, 19] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [20, 38] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [25, 28] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [31, 39] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [34, 58] cc => I,
 Pos: [40, 41, 46] ccc => cc,
 Pos: [42, 49, 51] ccc => cc,
 Pos: [43, 52] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [55, 63, 72] ccc => cc,
 Pos: [60, 67] cc => I,
 Pos: [61, 65] cc => I,
 Pos: [62, 70] cc => I,
 Pos: [69, 75] cc => I,
 Pos: [71, 87] cc => I,
 Pos: [74, 88] cc => I,
 Pos: [82, 89] cc => I,
 Pos: [85, 93] cc => I,
 Pos: [86, 92] cc => I,
 Pos: [94, 98] cc => I,
 Pos: [100, 103, 111] ccc => cc,
 Pos: [110, 128] cc => I,
 Pos: [119, 123] cc => I,
 Pos: [124, 130] cc => I,
 Pos: [133, 141, 149] ccc => cc,
 Pos: [137, 143] cc => I,
 Pos: [147, 152] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [160, 167] cc => I,
 Pos: [161, 172] cc => I,
 Pos: [165, 173, 176] ccc => cc,
 Pos: [166, 168] cc => I,
 Pos: [169, 182, 188] ccc => cc,
 Pos: [170, 177] cc => I,
 Pos: [184, 192] cc => I,
 Pos: [185, 198] cc => I,
 Pos: [186, 193] cc => I,
 Pos: [187, 201] cc => I,
 Pos: [191, 195, 200] ccc => cc,
 Pos: [202, 214] cc => I,
 Pos: [205, 210] cc => I,
 Pos: [220, 224, 232] ccc => cc,
 Pos: [223, 229] cc => I,
 Pos: [227, 231] cc => I,
 Pos: [228, 243] cc => I,
 Pos: [233, 249] cc => I,
 Pos: [238, 248] cc => I,
 Pos: [241, 257] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [253, 262, 268] ccc => cc]
Change: 59, Saving: 61

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.14061594009399414

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 8, 15] ccc => cc,
 Pos: [7, 13] cc => I,
 Pos: [11, 19] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [20, 38] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [25, 28] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [31, 39] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [34, 58] cc => I,
 Pos: [40, 41, 46] ccc => cc,
 Pos: [42, 49, 51] ccc => cc,
 Pos: [43, 52] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [55, 63, 72] ccc => cc,
 Pos: [60, 67] cc => I,
 Pos: [61, 65] cc => I,
 Pos: [62, 70] cc => I,
 Pos: [69, 75] cc => I,
 Pos: [71, 87] cc => I,
 Pos: [74, 88] cc => I,
 Pos: [82, 89] cc => I,
 Pos: [85, 93] cc => I,
 Pos: [86, 92] cc => I,
 Pos: [94, 98] cc => I,
 Pos: [100, 103, 111] ccc => cc,
 Pos: [110, 128] cc => I,
 Pos: [119, 123] cc => I,
 Pos: [124, 130] cc => I,
 Pos: [133, 141, 149] ccc => cc,
 Pos: [137, 143] cc => I,
 Pos: [147, 152] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [160, 167] cc => I,
 Pos: [161, 172] cc => I,
 Pos: [165, 173, 176] ccc => cc,
 Pos: [166, 168] cc => I,
 Pos: [169, 182, 188] ccc => cc,
 Pos: [170, 177] cc => I,
 Pos: [184, 192] cc => I,
 Pos: [185, 198] cc => I,
 Pos: [186, 193] cc => I,
 Pos: [187, 201] cc => I,
 Pos: [191, 195, 200] ccc => cc,
 Pos: [202, 214] cc => I,
 Pos: [205, 210] cc => I,
 Pos: [220, 224, 232] ccc => cc,
 Pos: [223, 229] cc => I,
 Pos: [227, 231] cc => I,
 Pos: [228, 243] cc => I,
 Pos: [233, 249] cc => I,
 Pos: [238, 248] cc => I,
 Pos: [241, 257] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [253, 262, 268] ccc => cc]
Change: 59, Saving: 61

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 8, 15] ccc => cc
Apply:  Pos: [7, 13] cc => I
Apply:  Pos: [11, 19] cc => I
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [18, 21] cc => I
Apply:  Pos: [20, 38] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [25, 28] cc => I
Apply:  Pos: [26, 32] cc => I
Apply:  Pos: [30, 37] cc => I
Apply:  Pos: [31, 39] cc => I
Apply:  Pos: [33, 44] cc => I
Apply:  Pos: [34, 58] cc => I
Apply:  Pos: [40, 41, 46] ccc => cc
Apply:  Pos: [42, 49, 51] ccc => cc
Apply:  Pos: [43, 52] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [55, 63, 72] ccc => cc
Apply:  Pos: [60, 67] cc => I
Apply:  Pos: [61, 65] cc => I
Apply:  Pos: [62, 70] cc => I
Apply:  Pos: [69, 75] cc => I
Apply:  Pos: [71, 87] cc => I
Apply:  Pos: [74, 88] cc => I
Apply:  Pos: [82, 89] cc => I
Apply:  Pos: [85, 93] cc => I
Apply:  Pos: [86, 92] cc => I
Apply:  Pos: [94, 98] cc => I
Apply:  Pos: [100, 103, 111] ccc => cc
Apply:  Pos: [110, 128] cc => I
Apply:  Pos: [119, 123] cc => I
Apply:  Pos: [124, 130] cc => I
Apply:  Pos: [133, 141, 149] ccc => cc
Apply:  Pos: [137, 143] cc => I
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [148, 158] cc => I
Apply:  Pos: [150, 156] cc => I
Apply:  Pos: [160, 167] cc => I
Apply:  Pos: [161, 172] cc => I
Apply:  Pos: [165, 173, 176] ccc => cc
Apply:  Pos: [166, 168] cc => I
Apply:  Pos: [169, 182, 188] ccc => cc
Apply:  Pos: [170, 177] cc => I
Apply:  Pos: [184, 192] cc => I
Apply:  Pos: [185, 198] cc => I
Apply:  Pos: [186, 193] cc => I
Apply:  Pos: [187, 201] cc => I
Apply:  Pos: [191, 195, 200] ccc => cc
Apply:  Pos: [202, 214] cc => I
Apply:  Pos: [205, 210] cc => I
Apply:  Pos: [220, 224, 232] ccc => cc
Apply:  Pos: [223, 229] cc => I
Apply:  Pos: [227, 231] cc => I
Apply:  Pos: [228, 243] cc => I
Apply:  Pos: [233, 249] cc => I
Apply:  Pos: [238, 248] cc => I
Apply:  Pos: [241, 257] cc => I
Apply:  Pos: [251, 258] cc => I
Apply:  Pos: [253, 262, 268] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.01598501205444336

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 17], [4, 17], [6, 7], [19, 15], [2, 8], [17, 19], [10, 8], [17, 15], [17, 18], [15, 3], [0, 7], [4, 15], [17, 15], [11, 8], [5, 16], [10, 8], [17, 19], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [8, 13], [12, 6], [2, 5], [17, 15], [10, 8], [5, 16], [13, 1], [14, 19], [11, 0], [6, 7], [15, 3], [10, 13], [8, 18], [3, 1], [13, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [5, 16], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 16], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [17, 18], [6, 17], [8, 16], [15, 3], [4, 14], [2, 8], [13, 3], [8, 13], [2, 5], [0, 10], [17, 18], [0, 16], [9, 1], [18, 19], [4, 14], [11, 10], [15, 3], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [16, 9], [18, 13], [0, 7], [10, 13], [7, 17], [5, 16], [12, 11], [14, 19], [13, 3], [2, 16], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [2, 5], [19, 15], [4, 14], [6, 7], [16, 9], [5, 16], [17, 19], [4, 17], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [5, 8], [13, 3], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  5.312863349914551

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 22]
[51, 67]
[89, 99]
[103, 114]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[14, 15, 17]
[47, 55, 82]
[102, 104, 109]
[109, 111, 118]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[52, 57, 59]
[85, 86, 95]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[112, 116, 124]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 22]
[51, 67]
[89, 99]
[103, 114]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.812255620956421

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 22] cc => I, Pos: [11, 22] cc => I, Pos: [14, 15, 17] ccc => cc, Pos: [47, 55, 82] ccc => cc, Pos: [51, 67] cc => I, Pos: [51, 67] cc => I, Pos: [52, 57, 59] ccc => cc, Pos: [85, 86, 95] ccc => cc, Pos: [89, 99] cc => I, Pos: [89, 99] cc => I, Pos: [102, 104, 109] ccc => cc, Pos: [103, 114] cc => I, Pos: [103, 114] cc => I, Pos: [109, 111, 118] ccc => cc, Pos: [112, 116, 124] ccc => cc]

Plan: 1
[Pos: [11, 22] cc => I,
 Pos: [14, 15, 17] ccc => cc,
 Pos: [47, 55, 82] ccc => cc,
 Pos: [51, 67] cc => I,
 Pos: [52, 57, 59] ccc => cc,
 Pos: [85, 86, 95] ccc => cc,
 Pos: [89, 99] cc => I,
 Pos: [102, 104, 109] ccc => cc,
 Pos: [103, 114] cc => I,
 Pos: [112, 116, 124] ccc => cc]
Change: 10, Saving: 10

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015638113021850586

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 22] cc => I,
 Pos: [14, 15, 17] ccc => cc,
 Pos: [47, 55, 82] ccc => cc,
 Pos: [51, 67] cc => I,
 Pos: [52, 57, 59] ccc => cc,
 Pos: [85, 86, 95] ccc => cc,
 Pos: [89, 99] cc => I,
 Pos: [102, 104, 109] ccc => cc,
 Pos: [103, 114] cc => I,
 Pos: [112, 116, 124] ccc => cc]
Change: 10, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 22] cc => I
Apply:  Pos: [14, 15, 17] ccc => cc
Apply:  Pos: [47, 55, 82] ccc => cc
Apply:  Pos: [51, 67] cc => I
Apply:  Pos: [52, 57, 59] ccc => cc
Apply:  Pos: [85, 86, 95] ccc => cc
Apply:  Pos: [89, 99] cc => I
Apply:  Pos: [102, 104, 109] ccc => cc
Apply:  Pos: [103, 114] cc => I
Apply:  Pos: [112, 116, 124] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [4, 17], [6, 7], [6, 17], [19, 15], [2, 8], [10, 8], [17, 18], [17, 3], [15, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 15], [18, 13], [13, 3], [8, 16], [0, 10], [8, 13], [12, 7], [2, 5], [17, 15], [10, 8], [10, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 13], [10, 8], [9, 1], [5, 8], [18, 15], [13, 1], [2, 16], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [15, 3], [2, 8], [13, 3], [8, 13], [2, 5], [0, 10], [0, 16], [9, 1], [18, 19], [11, 10], [15, 3], [0, 4], [7, 4], [2, 16], [10, 8], [16, 9], [18, 13], [10, 13], [7, 17], [2, 5], [12, 11], [13, 3], [5, 16], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [19, 15], [4, 14], [6, 7], [16, 9], [5, 16], [17, 19], [4, 17], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [5, 8], [13, 3], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [2, 16], [8, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.8278937339782715

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[85, 100]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[103, 114, 115]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[43, 47, 48]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[85, 100]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.5000510215759277

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [43, 47, 48] ccc => cc, Pos: [85, 100] cc => I, Pos: [85, 100] cc => I, Pos: [103, 114, 115] ccc => cc]

Plan: 1
[Pos: [43, 47, 48] ccc => cc,
 Pos: [85, 100] cc => I,
 Pos: [103, 114, 115] ccc => cc]
Change: 3, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [43, 47, 48] ccc => cc,
 Pos: [85, 100] cc => I,
 Pos: [103, 114, 115] ccc => cc]
Change: 3, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [43, 47, 48] ccc => cc
Apply:  Pos: [85, 100] cc => I
Apply:  Pos: [103, 114, 115] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [4, 17], [6, 17], [6, 7], [19, 15], [10, 8], [2, 8], [17, 3], [17, 18], [15, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [10, 8], [12, 7], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 16], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [15, 3], [2, 8], [13, 3], [8, 13], [0, 16], [0, 10], [9, 1], [18, 19], [11, 10], [15, 3], [7, 4], [0, 4], [2, 16], [10, 8], [16, 9], [10, 13], [18, 13], [7, 17], [12, 11], [13, 3], [5, 9], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [19, 15], [4, 14], [6, 7], [16, 9], [17, 19], [4, 17], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [5, 8], [13, 3], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.5000510215759277

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4218740463256836

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 17], [4, 17], [6, 7], [19, 15], [2, 8], [10, 8], [17, 18], [15, 3], [17, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 15], [18, 13], [13, 3], [8, 16], [0, 10], [10, 8], [12, 7], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 13], [10, 8], [9, 1], [5, 8], [18, 15], [13, 1], [2, 16], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [15, 3], [2, 8], [13, 3], [8, 13], [0, 10], [0, 16], [9, 1], [18, 19], [11, 10], [15, 3], [0, 4], [7, 4], [2, 16], [10, 8], [16, 9], [18, 13], [10, 13], [7, 17], [12, 11], [13, 3], [5, 9], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [19, 15], [4, 14], [6, 7], [16, 9], [17, 19], [4, 17], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [5, 8], [13, 3], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [2, 16], [8, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.4218740463256836

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [145] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 290

Reduced: 
 - size: 125 (46.30%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09376192092895508

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 4], [9, 1], [4, 17], [6, 7], [19, 15], [0, 10], [5, 16], [9, 1], [2, 8], [6, 4], [5, 16], [17, 19], [18, 13], [0, 10], [9, 1], [18, 13], [10, 8], [17, 15], [12, 6], [7, 4], [9, 3], [17, 18], [7, 4], [12, 6], [11, 10], [2, 16], [9, 3], [18, 19], [4, 14], [15, 3], [0, 7], [11, 10], [9, 1], [2, 16], [4, 17], [17, 15], [11, 10], [3, 1], [18, 19], [0, 2], [4, 17], [5, 16], [0, 2], [10, 8], [17, 19], [11, 10], [3, 1], [6, 7], [8, 16], [18, 15], [6, 17], [2, 8], [4, 14], [10, 13], [18, 19], [11, 0], [7, 17], [15, 3], [2, 16], [11, 0], [13, 1], [18, 19], [10, 8], [12, 6], [7, 17], [11, 10], [18, 15], [5, 16], [0, 2], [12, 6], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 13], [17, 19], [9, 1], [11, 10], [0, 2], [12, 6], [18, 15], [13, 3], [9, 1], [17, 19], [11, 7], [8, 16], [0, 10], [8, 13], [11, 7], [12, 6], [5, 16], [17, 15], [10, 8], [2, 16], [13, 1], [14, 19], [11, 0], [6, 7], [15, 3], [10, 13], [6, 17], [2, 5], [8, 18], [3, 1], [13, 1], [18, 19], [12, 11], [5, 8], [4, 14], [0, 2], [13, 9], [14, 19], [5, 16], [0, 2], [7, 4], [10, 8], [10, 13], [9, 1], [6, 17], [5, 8], [7, 4], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [0, 7], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [0, 7], [18, 15], [10, 8], [17, 18], [9, 1], [11, 0], [2, 5], [7, 10], [6, 17], [9, 1], [8, 16], [15, 3], [4, 14], [7, 10], [2, 8], [11, 0], [13, 3], [7, 4], [15, 3], [8, 13], [2, 5], [0, 10], [18, 19], [12, 6], [7, 4], [12, 6], [0, 2], [5, 8], [9, 1], [15, 3], [17, 19], [4, 14], [11, 10], [17, 18], [5, 8], [15, 3], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [12, 11], [3, 1], [4, 14], [5, 8], [0, 2], [16, 9], [18, 13], [7, 17], [12, 11], [4, 14], [10, 13], [0, 7], [5, 16], [12, 11], [3, 1], [14, 19], [7, 17], [5, 8], [9, 1], [13, 3], [2, 16], [4, 14], [15, 3], [0, 7], [8, 18], [10, 13], [4, 14], [6, 17], [18, 13], [11, 10], [9, 1], [2, 5], [19, 15], [4, 14], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [11, 0], [7, 4], [13, 3], [17, 18], [11, 0], [5, 8], [12, 6], [7, 17], [13, 1], [14, 19], [0, 2], [5, 16], [18, 15], [17, 19], [12, 11], [0, 10], [7, 4], [5, 8], [13, 3], [18, 19], [7, 17], [5, 16], [12, 6], [10, 8], [17, 19], [2, 5], [18, 13], [6, 4], [9, 1], [8, 16], [12, 11], [17, 19], [2, 16], [12, 11], [3, 1], [8, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [8, 18], [5, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 13]
[12, 16]
[11, 19]
[13, 20]
[18, 21]
[25, 28]
[24, 29]
[26, 32]
[30, 37]
[20, 38]
[31, 39]
[37, 42]
[33, 44]
[45, 48]
[43, 52]
[34, 58]
[61, 65]
[60, 67]
[62, 70]
[69, 75]
[70, 77]
[75, 82]
[71, 87]
[74, 88]
[82, 89]
[86, 92]
[85, 93]
[94, 98]
[89, 99]
[119, 123]
[110, 128]
[124, 130]
[137, 143]
[147, 152]
[150, 156]
[148, 158]
[149, 163]
[160, 167]
[166, 168]
[152, 171]
[161, 172]
[170, 177]
[172, 178]
[184, 192]
[186, 193]
[192, 197]
[185, 198]
[187, 201]
[205, 210]
[202, 214]
[210, 217]
[223, 229]
[227, 231]
[228, 243]
[232, 244]
[229, 245]
[238, 248]
[233, 249]
[241, 257]
[251, 258]
[257, 260]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 8, 15]
[40, 41, 46]
[42, 49, 51]
[55, 63, 72]
[133, 141, 149]
[169, 182, 188]
[193, 199, 205]
[195, 200, 207]
[220, 224, 232]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[191, 195, 200]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 103, 111]
[165, 173, 176]
[253, 262, 268]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 13]
[12, 16]
[11, 19]
[13, 20]
[18, 21]
[25, 28]
[24, 29]
[26, 32]
[30, 37]
[20, 38]
[31, 39]
[37, 42]
[33, 44]
[45, 48]
[43, 52]
[34, 58]
[61, 65]
[60, 67]
[62, 70]
[69, 75]
[70, 77]
[75, 82]
[71, 87]
[74, 88]
[82, 89]
[86, 92]
[85, 93]
[94, 98]
[89, 99]
[119, 123]
[110, 128]
[124, 130]
[137, 143]
[147, 152]
[150, 156]
[148, 158]
[149, 163]
[160, 167]
[166, 168]
[152, 171]
[161, 172]
[170, 177]
[172, 178]
[184, 192]
[186, 193]
[192, 197]
[185, 198]
[187, 201]
[205, 210]
[202, 214]
[210, 217]
[223, 229]
[227, 231]
[228, 243]
[232, 244]
[229, 245]
[238, 248]
[233, 249]
[241, 257]
[251, 258]
[257, 260]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.169951677322388

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 8, 15] ccc => cc, Pos: [7, 13] cc => I, Pos: [7, 13] cc => I, Pos: [11, 19] cc => I, Pos: [11, 19] cc => I, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [13, 20] cc => I, Pos: [13, 20] cc => I, Pos: [18, 21] cc => I, Pos: [18, 21] cc => I, Pos: [20, 38] cc => I, Pos: [20, 38] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [25, 28] cc => I, Pos: [25, 28] cc => I, Pos: [26, 32] cc => I, Pos: [26, 32] cc => I, Pos: [30, 37] cc => I, Pos: [30, 37] cc => I, Pos: [31, 39] cc => I, Pos: [31, 39] cc => I, Pos: [33, 44] cc => I, Pos: [33, 44] cc => I, Pos: [34, 58] cc => I, Pos: [34, 58] cc => I, Pos: [37, 42] cc => I, Pos: [37, 42] cc => I, Pos: [40, 41, 46] ccc => cc, Pos: [42, 49, 51] ccc => cc, Pos: [43, 52] cc => I, Pos: [43, 52] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [55, 63, 72] ccc => cc, Pos: [60, 67] cc => I, Pos: [60, 67] cc => I, Pos: [61, 65] cc => I, Pos: [61, 65] cc => I, Pos: [62, 70] cc => I, Pos: [62, 70] cc => I, Pos: [69, 75] cc => I, Pos: [69, 75] cc => I, Pos: [70, 77] cc => I, Pos: [70, 77] cc => I, Pos: [71, 87] cc => I, Pos: [71, 87] cc => I, Pos: [74, 88] cc => I, Pos: [74, 88] cc => I, Pos: [75, 82] cc => I, Pos: [75, 82] cc => I, Pos: [82, 89] cc => I, Pos: [82, 89] cc => I, Pos: [85, 93] cc => I, Pos: [85, 93] cc => I, Pos: [86, 92] cc => I, Pos: [86, 92] cc => I, Pos: [89, 99] cc => I, Pos: [89, 99] cc => I, Pos: [94, 98] cc => I, Pos: [94, 98] cc => I, Pos: [100, 103, 111] ccc => cc, Pos: [110, 128] cc => I, Pos: [110, 128] cc => I, Pos: [119, 123] cc => I, Pos: [119, 123] cc => I, Pos: [124, 130] cc => I, Pos: [124, 130] cc => I, Pos: [133, 141, 149] ccc => cc, Pos: [137, 143] cc => I, Pos: [137, 143] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [148, 158] cc => I, Pos: [148, 158] cc => I, Pos: [149, 163] cc => I, Pos: [149, 163] cc => I, Pos: [150, 156] cc => I, Pos: [150, 156] cc => I, Pos: [152, 171] cc => I, Pos: [152, 171] cc => I, Pos: [160, 167] cc => I, Pos: [160, 167] cc => I, Pos: [161, 172] cc => I, Pos: [161, 172] cc => I, Pos: [165, 173, 176] ccc => cc, Pos: [166, 168] cc => I, Pos: [166, 168] cc => I, Pos: [169, 182, 188] ccc => cc, Pos: [170, 177] cc => I, Pos: [170, 177] cc => I, Pos: [172, 178] cc => I, Pos: [172, 178] cc => I, Pos: [184, 192] cc => I, Pos: [184, 192] cc => I, Pos: [185, 198] cc => I, Pos: [185, 198] cc => I, Pos: [186, 193] cc => I, Pos: [186, 193] cc => I, Pos: [187, 201] cc => I, Pos: [187, 201] cc => I, Pos: [191, 195, 200] ccc => cc, Pos: [192, 197] cc => I, Pos: [192, 197] cc => I, Pos: [193, 199, 205] ccc => cc, Pos: [195, 200, 207] ccc => cc, Pos: [202, 214] cc => I, Pos: [202, 214] cc => I, Pos: [205, 210] cc => I, Pos: [205, 210] cc => I, Pos: [210, 217] cc => I, Pos: [210, 217] cc => I, Pos: [220, 224, 232] ccc => cc, Pos: [223, 229] cc => I, Pos: [223, 229] cc => I, Pos: [227, 231] cc => I, Pos: [227, 231] cc => I, Pos: [228, 243] cc => I, Pos: [228, 243] cc => I, Pos: [229, 245] cc => I, Pos: [229, 245] cc => I, Pos: [232, 244] cc => I, Pos: [232, 244] cc => I, Pos: [233, 249] cc => I, Pos: [233, 249] cc => I, Pos: [238, 248] cc => I, Pos: [238, 248] cc => I, Pos: [241, 257] cc => I, Pos: [241, 257] cc => I, Pos: [251, 258] cc => I, Pos: [251, 258] cc => I, Pos: [253, 262, 268] ccc => cc, Pos: [257, 260] cc => I, Pos: [257, 260] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 8, 15] ccc => cc,
 Pos: [7, 13] cc => I,
 Pos: [11, 19] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [20, 38] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [25, 28] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [31, 39] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [34, 58] cc => I,
 Pos: [40, 41, 46] ccc => cc,
 Pos: [42, 49, 51] ccc => cc,
 Pos: [43, 52] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [55, 63, 72] ccc => cc,
 Pos: [60, 67] cc => I,
 Pos: [61, 65] cc => I,
 Pos: [62, 70] cc => I,
 Pos: [69, 75] cc => I,
 Pos: [71, 87] cc => I,
 Pos: [74, 88] cc => I,
 Pos: [89, 99] cc => I,
 Pos: [85, 93] cc => I,
 Pos: [86, 92] cc => I,
 Pos: [94, 98] cc => I,
 Pos: [100, 103, 111] ccc => cc,
 Pos: [110, 128] cc => I,
 Pos: [119, 123] cc => I,
 Pos: [124, 130] cc => I,
 Pos: [149, 163] cc => I,
 Pos: [137, 143] cc => I,
 Pos: [147, 152] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [160, 167] cc => I,
 Pos: [161, 172] cc => I,
 Pos: [165, 173, 176] ccc => cc,
 Pos: [166, 168] cc => I,
 Pos: [169, 182, 188] ccc => cc,
 Pos: [170, 177] cc => I,
 Pos: [192, 197] cc => I,
 Pos: [185, 198] cc => I,
 Pos: [186, 193] cc => I,
 Pos: [187, 201] cc => I,
 Pos: [191, 195, 200] ccc => cc,
 Pos: [202, 214] cc => I,
 Pos: [205, 210] cc => I,
 Pos: [232, 244] cc => I,
 Pos: [229, 245] cc => I,
 Pos: [227, 231] cc => I,
 Pos: [228, 243] cc => I,
 Pos: [233, 249] cc => I,
 Pos: [238, 248] cc => I,
 Pos: [257, 260] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [253, 262, 268] ccc => cc]
Change: 59, Saving: 218

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 8, 15] ccc => cc
Apply:  Pos: [7, 13] cc => I
Apply:  Pos: [11, 19] cc => I
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [18, 21] cc => I
Apply:  Pos: [20, 38] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [25, 28] cc => I
Apply:  Pos: [26, 32] cc => I
Apply:  Pos: [30, 37] cc => I
Apply:  Pos: [31, 39] cc => I
Apply:  Pos: [33, 44] cc => I
Apply:  Pos: [34, 58] cc => I
Apply:  Pos: [40, 41, 46] ccc => cc
Apply:  Pos: [42, 49, 51] ccc => cc
Apply:  Pos: [43, 52] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [55, 63, 72] ccc => cc
Apply:  Pos: [60, 67] cc => I
Apply:  Pos: [61, 65] cc => I
Apply:  Pos: [62, 70] cc => I
Apply:  Pos: [69, 75] cc => I
Apply:  Pos: [71, 87] cc => I
Apply:  Pos: [74, 88] cc => I
Apply:  Pos: [89, 99] cc => I
Apply:  Pos: [85, 93] cc => I
Apply:  Pos: [86, 92] cc => I
Apply:  Pos: [94, 98] cc => I
Apply:  Pos: [100, 103, 111] ccc => cc
Apply:  Pos: [110, 128] cc => I
Apply:  Pos: [119, 123] cc => I
Apply:  Pos: [124, 130] cc => I
Apply:  Pos: [149, 163] cc => I
Apply:  Pos: [137, 143] cc => I
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [148, 158] cc => I
Apply:  Pos: [150, 156] cc => I
Apply:  Pos: [160, 167] cc => I
Apply:  Pos: [161, 172] cc => I
Apply:  Pos: [165, 173, 176] ccc => cc
Apply:  Pos: [166, 168] cc => I
Apply:  Pos: [169, 182, 188] ccc => cc
Apply:  Pos: [170, 177] cc => I
Apply:  Pos: [192, 197] cc => I
Apply:  Pos: [185, 198] cc => I
Apply:  Pos: [186, 193] cc => I
Apply:  Pos: [187, 201] cc => I
Apply:  Pos: [191, 195, 200] ccc => cc
Apply:  Pos: [202, 214] cc => I
Apply:  Pos: [205, 210] cc => I
Apply:  Pos: [232, 244] cc => I
Apply:  Pos: [229, 245] cc => I
Apply:  Pos: [227, 231] cc => I
Apply:  Pos: [228, 243] cc => I
Apply:  Pos: [233, 249] cc => I
Apply:  Pos: [238, 248] cc => I
Apply:  Pos: [257, 260] cc => I
Apply:  Pos: [251, 258] cc => I
Apply:  Pos: [253, 262, 268] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 17], [4, 17], [6, 7], [19, 15], [2, 8], [17, 19], [10, 8], [17, 15], [17, 18], [15, 3], [0, 7], [4, 15], [17, 15], [11, 8], [5, 16], [10, 8], [17, 19], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [8, 13], [2, 5], [17, 15], [10, 8], [5, 16], [13, 1], [14, 19], [11, 0], [6, 7], [15, 3], [10, 13], [8, 18], [3, 1], [13, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [5, 16], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [17, 18], [6, 17], [8, 16], [15, 3], [4, 14], [2, 8], [13, 3], [8, 13], [0, 10], [17, 18], [0, 16], [9, 1], [18, 19], [4, 14], [11, 10], [15, 3], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [12, 11], [16, 9], [18, 13], [0, 7], [10, 13], [7, 17], [5, 16], [14, 19], [13, 3], [2, 16], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [2, 5], [19, 15], [4, 14], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [12, 11], [0, 10], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  5.169951677322388

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 22]
[51, 67]
[89, 98]
[102, 113]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[14, 15, 17]
[101, 103, 109]
[109, 111, 117]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[52, 57, 59]
[85, 86, 94]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[112, 115, 123]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 22]
[51, 67]
[89, 98]
[102, 113]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7669503688812256

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 22] cc => I, Pos: [11, 22] cc => I, Pos: [14, 15, 17] ccc => cc, Pos: [51, 67] cc => I, Pos: [51, 67] cc => I, Pos: [52, 57, 59] ccc => cc, Pos: [85, 86, 94] ccc => cc, Pos: [89, 98] cc => I, Pos: [89, 98] cc => I, Pos: [101, 103, 109] ccc => cc, Pos: [102, 113] cc => I, Pos: [102, 113] cc => I, Pos: [109, 111, 117] ccc => cc, Pos: [112, 115, 123] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 22] cc => I,
 Pos: [14, 15, 17] ccc => cc,
 Pos: [51, 67] cc => I,
 Pos: [52, 57, 59] ccc => cc,
 Pos: [85, 86, 94] ccc => cc,
 Pos: [89, 98] cc => I,
 Pos: [101, 103, 109] ccc => cc,
 Pos: [102, 113] cc => I,
 Pos: [112, 115, 123] ccc => cc]
Change: 9, Saving: 26

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 22] cc => I
Apply:  Pos: [14, 15, 17] ccc => cc
Apply:  Pos: [51, 67] cc => I
Apply:  Pos: [52, 57, 59] ccc => cc
Apply:  Pos: [85, 86, 94] ccc => cc
Apply:  Pos: [89, 98] cc => I
Apply:  Pos: [101, 103, 109] ccc => cc
Apply:  Pos: [102, 113] cc => I
Apply:  Pos: [112, 115, 123] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [4, 17], [6, 7], [6, 17], [19, 15], [2, 8], [10, 8], [17, 18], [17, 3], [15, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 15], [18, 13], [13, 3], [8, 16], [0, 10], [8, 13], [2, 5], [17, 15], [10, 8], [10, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 13], [10, 8], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [15, 3], [2, 8], [13, 3], [8, 13], [0, 10], [0, 16], [9, 1], [18, 19], [11, 10], [15, 3], [0, 4], [7, 4], [2, 16], [10, 8], [12, 11], [16, 9], [18, 13], [10, 13], [7, 17], [2, 5], [13, 3], [5, 16], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [19, 15], [4, 14], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [12, 11], [0, 10], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [2, 16], [8, 16], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.7669503688812256

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[44, 47, 48]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.500196695327759

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [44, 47, 48] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [44, 47, 48] ccc => cc]
Change: 1, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [44, 47, 48] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [4, 17], [6, 17], [6, 7], [19, 15], [10, 8], [2, 8], [17, 3], [17, 18], [15, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [10, 8], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [15, 3], [2, 8], [13, 3], [8, 13], [0, 16], [0, 10], [9, 1], [18, 19], [11, 10], [15, 3], [7, 4], [0, 4], [2, 16], [10, 8], [12, 11], [16, 9], [10, 13], [18, 13], [7, 17], [2, 5], [13, 3], [5, 16], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [19, 15], [4, 14], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [12, 11], [0, 10], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.500196695327759

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4541356563568115

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 17], [4, 17], [6, 7], [19, 15], [2, 8], [10, 8], [17, 18], [15, 3], [17, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 15], [18, 13], [13, 3], [8, 16], [0, 10], [10, 8], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 13], [10, 8], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [15, 3], [2, 8], [13, 3], [8, 13], [0, 10], [0, 16], [9, 1], [18, 19], [11, 10], [15, 3], [0, 4], [7, 4], [2, 16], [10, 8], [12, 11], [16, 9], [18, 13], [10, 13], [7, 17], [2, 5], [13, 3], [5, 16], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [19, 15], [4, 14], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [12, 11], [0, 10], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [2, 16], [8, 16], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.4541356563568115

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [147] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 294

Reduced: 
 - size: 123 (45.56%)
 - cycle: 246 (45.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936737060546875

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 4], [9, 1], [4, 17], [6, 7], [19, 15], [0, 10], [5, 16], [9, 1], [2, 8], [6, 4], [5, 16], [17, 19], [18, 13], [0, 10], [9, 1], [18, 13], [10, 8], [17, 15], [12, 6], [7, 4], [9, 3], [17, 18], [7, 4], [12, 6], [11, 10], [2, 16], [9, 3], [18, 19], [4, 14], [15, 3], [0, 7], [11, 10], [9, 1], [2, 16], [4, 17], [17, 15], [11, 10], [3, 1], [18, 19], [0, 2], [4, 17], [5, 16], [0, 2], [10, 8], [17, 19], [11, 10], [3, 1], [6, 7], [8, 16], [18, 15], [6, 17], [2, 8], [4, 14], [10, 13], [18, 19], [11, 0], [7, 17], [15, 3], [2, 16], [11, 0], [13, 1], [18, 19], [10, 8], [12, 6], [7, 17], [11, 10], [18, 15], [5, 16], [0, 2], [12, 6], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 13], [17, 19], [9, 1], [11, 10], [0, 2], [12, 6], [18, 15], [13, 3], [9, 1], [17, 19], [11, 7], [8, 16], [0, 10], [8, 13], [11, 7], [12, 6], [5, 16], [17, 15], [10, 8], [2, 16], [13, 1], [14, 19], [11, 0], [6, 7], [15, 3], [10, 13], [6, 17], [2, 5], [8, 18], [3, 1], [13, 1], [18, 19], [12, 11], [5, 8], [4, 14], [0, 2], [13, 9], [14, 19], [5, 16], [0, 2], [7, 4], [10, 8], [10, 13], [9, 1], [6, 17], [5, 8], [7, 4], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [0, 7], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [0, 7], [18, 15], [10, 8], [17, 18], [9, 1], [11, 0], [2, 5], [7, 10], [6, 17], [9, 1], [8, 16], [15, 3], [4, 14], [7, 10], [2, 8], [11, 0], [13, 3], [7, 4], [15, 3], [8, 13], [2, 5], [0, 10], [18, 19], [12, 6], [7, 4], [12, 6], [0, 2], [5, 8], [9, 1], [15, 3], [17, 19], [4, 14], [11, 10], [17, 18], [5, 8], [15, 3], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [12, 11], [3, 1], [4, 14], [5, 8], [0, 2], [16, 9], [18, 13], [7, 17], [12, 11], [4, 14], [10, 13], [0, 7], [5, 16], [12, 11], [3, 1], [14, 19], [7, 17], [5, 8], [9, 1], [13, 3], [2, 16], [4, 14], [15, 3], [0, 7], [8, 18], [10, 13], [4, 14], [6, 17], [18, 13], [11, 10], [9, 1], [2, 5], [19, 15], [4, 14], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [11, 0], [7, 4], [13, 3], [17, 18], [11, 0], [5, 8], [12, 6], [7, 17], [13, 1], [14, 19], [0, 2], [5, 16], [18, 15], [17, 19], [12, 11], [0, 10], [7, 4], [5, 8], [13, 3], [18, 19], [7, 17], [5, 16], [12, 6], [10, 8], [17, 19], [2, 5], [18, 13], [6, 4], [9, 1], [8, 16], [12, 11], [17, 19], [2, 16], [12, 11], [3, 1], [8, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [8, 18], [5, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 13]
[12, 16]
[11, 19]
[13, 20]
[18, 21]
[25, 28]
[24, 29]
[26, 32]
[30, 37]
[20, 38]
[31, 39]
[37, 42]
[33, 44]
[45, 48]
[43, 52]
[34, 58]
[61, 65]
[60, 67]
[62, 70]
[69, 75]
[70, 77]
[75, 82]
[71, 87]
[74, 88]
[82, 89]
[86, 92]
[85, 93]
[94, 98]
[89, 99]
[119, 123]
[110, 128]
[124, 130]
[137, 143]
[147, 152]
[150, 156]
[148, 158]
[149, 163]
[160, 167]
[166, 168]
[152, 171]
[161, 172]
[170, 177]
[172, 178]
[184, 192]
[186, 193]
[192, 197]
[185, 198]
[187, 201]
[205, 210]
[202, 214]
[210, 217]
[223, 229]
[227, 231]
[228, 243]
[232, 244]
[229, 245]
[238, 248]
[233, 249]
[241, 257]
[251, 258]
[257, 260]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 8, 15]
[40, 41, 46]
[42, 49, 51]
[55, 63, 72]
[133, 141, 149]
[169, 182, 188]
[193, 199, 205]
[195, 200, 207]
[220, 224, 232]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[191, 195, 200]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 103, 111]
[165, 173, 176]
[253, 262, 268]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 13]
[12, 16]
[11, 19]
[13, 20]
[18, 21]
[25, 28]
[24, 29]
[26, 32]
[30, 37]
[20, 38]
[31, 39]
[37, 42]
[33, 44]
[45, 48]
[43, 52]
[34, 58]
[61, 65]
[60, 67]
[62, 70]
[69, 75]
[70, 77]
[75, 82]
[71, 87]
[74, 88]
[82, 89]
[86, 92]
[85, 93]
[94, 98]
[89, 99]
[119, 123]
[110, 128]
[124, 130]
[137, 143]
[147, 152]
[150, 156]
[148, 158]
[149, 163]
[160, 167]
[166, 168]
[152, 171]
[161, 172]
[170, 177]
[172, 178]
[184, 192]
[186, 193]
[192, 197]
[185, 198]
[187, 201]
[205, 210]
[202, 214]
[210, 217]
[223, 229]
[227, 231]
[228, 243]
[232, 244]
[229, 245]
[238, 248]
[233, 249]
[241, 257]
[251, 258]
[257, 260]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.20910382270813

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 8, 15] ccc => cc, Pos: [7, 13] cc => I, Pos: [7, 13] cc => I, Pos: [11, 19] cc => I, Pos: [11, 19] cc => I, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [13, 20] cc => I, Pos: [13, 20] cc => I, Pos: [18, 21] cc => I, Pos: [18, 21] cc => I, Pos: [20, 38] cc => I, Pos: [20, 38] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [25, 28] cc => I, Pos: [25, 28] cc => I, Pos: [26, 32] cc => I, Pos: [26, 32] cc => I, Pos: [30, 37] cc => I, Pos: [30, 37] cc => I, Pos: [31, 39] cc => I, Pos: [31, 39] cc => I, Pos: [33, 44] cc => I, Pos: [33, 44] cc => I, Pos: [34, 58] cc => I, Pos: [34, 58] cc => I, Pos: [37, 42] cc => I, Pos: [37, 42] cc => I, Pos: [40, 41, 46] ccc => cc, Pos: [42, 49, 51] ccc => cc, Pos: [43, 52] cc => I, Pos: [43, 52] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [55, 63, 72] ccc => cc, Pos: [60, 67] cc => I, Pos: [60, 67] cc => I, Pos: [61, 65] cc => I, Pos: [61, 65] cc => I, Pos: [62, 70] cc => I, Pos: [62, 70] cc => I, Pos: [69, 75] cc => I, Pos: [69, 75] cc => I, Pos: [70, 77] cc => I, Pos: [70, 77] cc => I, Pos: [71, 87] cc => I, Pos: [71, 87] cc => I, Pos: [74, 88] cc => I, Pos: [74, 88] cc => I, Pos: [75, 82] cc => I, Pos: [75, 82] cc => I, Pos: [82, 89] cc => I, Pos: [82, 89] cc => I, Pos: [85, 93] cc => I, Pos: [85, 93] cc => I, Pos: [86, 92] cc => I, Pos: [86, 92] cc => I, Pos: [89, 99] cc => I, Pos: [89, 99] cc => I, Pos: [94, 98] cc => I, Pos: [94, 98] cc => I, Pos: [100, 103, 111] ccc => cc, Pos: [110, 128] cc => I, Pos: [110, 128] cc => I, Pos: [119, 123] cc => I, Pos: [119, 123] cc => I, Pos: [124, 130] cc => I, Pos: [124, 130] cc => I, Pos: [133, 141, 149] ccc => cc, Pos: [137, 143] cc => I, Pos: [137, 143] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [148, 158] cc => I, Pos: [148, 158] cc => I, Pos: [149, 163] cc => I, Pos: [149, 163] cc => I, Pos: [150, 156] cc => I, Pos: [150, 156] cc => I, Pos: [152, 171] cc => I, Pos: [152, 171] cc => I, Pos: [160, 167] cc => I, Pos: [160, 167] cc => I, Pos: [161, 172] cc => I, Pos: [161, 172] cc => I, Pos: [165, 173, 176] ccc => cc, Pos: [166, 168] cc => I, Pos: [166, 168] cc => I, Pos: [169, 182, 188] ccc => cc, Pos: [170, 177] cc => I, Pos: [170, 177] cc => I, Pos: [172, 178] cc => I, Pos: [172, 178] cc => I, Pos: [184, 192] cc => I, Pos: [184, 192] cc => I, Pos: [185, 198] cc => I, Pos: [185, 198] cc => I, Pos: [186, 193] cc => I, Pos: [186, 193] cc => I, Pos: [187, 201] cc => I, Pos: [187, 201] cc => I, Pos: [191, 195, 200] ccc => cc, Pos: [192, 197] cc => I, Pos: [192, 197] cc => I, Pos: [193, 199, 205] ccc => cc, Pos: [195, 200, 207] ccc => cc, Pos: [202, 214] cc => I, Pos: [202, 214] cc => I, Pos: [205, 210] cc => I, Pos: [205, 210] cc => I, Pos: [210, 217] cc => I, Pos: [210, 217] cc => I, Pos: [220, 224, 232] ccc => cc, Pos: [223, 229] cc => I, Pos: [223, 229] cc => I, Pos: [227, 231] cc => I, Pos: [227, 231] cc => I, Pos: [228, 243] cc => I, Pos: [228, 243] cc => I, Pos: [229, 245] cc => I, Pos: [229, 245] cc => I, Pos: [232, 244] cc => I, Pos: [232, 244] cc => I, Pos: [233, 249] cc => I, Pos: [233, 249] cc => I, Pos: [238, 248] cc => I, Pos: [238, 248] cc => I, Pos: [241, 257] cc => I, Pos: [241, 257] cc => I, Pos: [251, 258] cc => I, Pos: [251, 258] cc => I, Pos: [253, 262, 268] ccc => cc, Pos: [257, 260] cc => I, Pos: [257, 260] cc => I]

--------End Timer [Generate Plans]:  0.15622210502624512

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 8, 15] ccc => cc,
 Pos: [7, 13] cc => I,
 Pos: [11, 19] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [20, 38] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [25, 28] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [31, 39] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [34, 58] cc => I,
 Pos: [40, 41, 46] ccc => cc,
 Pos: [42, 49, 51] ccc => cc,
 Pos: [43, 52] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [55, 63, 72] ccc => cc,
 Pos: [60, 67] cc => I,
 Pos: [61, 65] cc => I,
 Pos: [62, 70] cc => I,
 Pos: [69, 75] cc => I,
 Pos: [71, 87] cc => I,
 Pos: [74, 88] cc => I,
 Pos: [82, 89] cc => I,
 Pos: [85, 93] cc => I,
 Pos: [86, 92] cc => I,
 Pos: [94, 98] cc => I,
 Pos: [100, 103, 111] ccc => cc,
 Pos: [110, 128] cc => I,
 Pos: [119, 123] cc => I,
 Pos: [124, 130] cc => I,
 Pos: [149, 163] cc => I,
 Pos: [137, 143] cc => I,
 Pos: [152, 171] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [160, 167] cc => I,
 Pos: [172, 178] cc => I,
 Pos: [165, 173, 176] ccc => cc,
 Pos: [166, 168] cc => I,
 Pos: [169, 182, 188] ccc => cc,
 Pos: [170, 177] cc => I,
 Pos: [192, 197] cc => I,
 Pos: [185, 198] cc => I,
 Pos: [193, 199, 205] ccc => cc,
 Pos: [187, 201] cc => I,
 Pos: [195, 200, 207] ccc => cc,
 Pos: [202, 214] cc => I,
 Pos: [210, 217] cc => I,
 Pos: [232, 244] cc => I,
 Pos: [223, 229] cc => I,
 Pos: [227, 231] cc => I,
 Pos: [228, 243] cc => I,
 Pos: [233, 249] cc => I,
 Pos: [238, 248] cc => I,
 Pos: [241, 257] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [253, 262, 268] ccc => cc]
Change: 59, Saving: 61

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 8, 15] ccc => cc
Apply:  Pos: [7, 13] cc => I
Apply:  Pos: [11, 19] cc => I
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [18, 21] cc => I
Apply:  Pos: [20, 38] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [25, 28] cc => I
Apply:  Pos: [26, 32] cc => I
Apply:  Pos: [30, 37] cc => I
Apply:  Pos: [31, 39] cc => I
Apply:  Pos: [33, 44] cc => I
Apply:  Pos: [34, 58] cc => I
Apply:  Pos: [40, 41, 46] ccc => cc
Apply:  Pos: [42, 49, 51] ccc => cc
Apply:  Pos: [43, 52] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [55, 63, 72] ccc => cc
Apply:  Pos: [60, 67] cc => I
Apply:  Pos: [61, 65] cc => I
Apply:  Pos: [62, 70] cc => I
Apply:  Pos: [69, 75] cc => I
Apply:  Pos: [71, 87] cc => I
Apply:  Pos: [74, 88] cc => I
Apply:  Pos: [82, 89] cc => I
Apply:  Pos: [85, 93] cc => I
Apply:  Pos: [86, 92] cc => I
Apply:  Pos: [94, 98] cc => I
Apply:  Pos: [100, 103, 111] ccc => cc
Apply:  Pos: [110, 128] cc => I
Apply:  Pos: [119, 123] cc => I
Apply:  Pos: [124, 130] cc => I
Apply:  Pos: [149, 163] cc => I
Apply:  Pos: [137, 143] cc => I
Apply:  Pos: [152, 171] cc => I
Apply:  Pos: [148, 158] cc => I
Apply:  Pos: [150, 156] cc => I
Apply:  Pos: [160, 167] cc => I
Apply:  Pos: [172, 178] cc => I
Apply:  Pos: [165, 173, 176] ccc => cc
Apply:  Pos: [166, 168] cc => I
Apply:  Pos: [169, 182, 188] ccc => cc
Apply:  Pos: [170, 177] cc => I
Apply:  Pos: [192, 197] cc => I
Apply:  Pos: [185, 198] cc => I
Apply:  Pos: [193, 199, 205] ccc => cc
Apply:  Pos: [187, 201] cc => I
Apply:  Pos: [195, 200, 207] ccc => cc
Apply:  Pos: [202, 214] cc => I
Apply:  Pos: [210, 217] cc => I
Apply:  Pos: [232, 244] cc => I
Apply:  Pos: [223, 229] cc => I
Apply:  Pos: [227, 231] cc => I
Apply:  Pos: [228, 243] cc => I
Apply:  Pos: [233, 249] cc => I
Apply:  Pos: [238, 248] cc => I
Apply:  Pos: [241, 257] cc => I
Apply:  Pos: [251, 258] cc => I
Apply:  Pos: [253, 262, 268] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 17], [4, 17], [6, 7], [19, 15], [2, 8], [17, 19], [10, 8], [17, 15], [17, 18], [15, 3], [0, 7], [4, 15], [17, 15], [11, 8], [5, 16], [10, 8], [17, 19], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [8, 13], [12, 6], [2, 5], [17, 15], [10, 8], [5, 16], [13, 1], [14, 19], [11, 0], [6, 7], [15, 3], [10, 13], [8, 18], [3, 1], [13, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [5, 16], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [17, 18], [9, 1], [6, 17], [8, 16], [15, 3], [4, 14], [2, 8], [13, 3], [15, 3], [8, 13], [0, 10], [17, 18], [0, 16], [18, 19], [4, 14], [11, 10], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [12, 11], [4, 14], [16, 9], [18, 13], [7, 17], [4, 19], [10, 13], [0, 17], [5, 16], [14, 19], [7, 17], [13, 3], [2, 16], [15, 3], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [2, 5], [19, 15], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [13, 3], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  5.365325927734375

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 22]
[51, 67]
[89, 92]
[90, 99]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[14, 15, 17]
[47, 55, 82]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[52, 57, 59]
[85, 87, 96]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[114, 118, 125]
[116, 122, 127]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 22]
[51, 67]
[89, 92]
[90, 99]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8286654949188232

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 22] cc => I, Pos: [11, 22] cc => I, Pos: [14, 15, 17] ccc => cc, Pos: [47, 55, 82] ccc => cc, Pos: [51, 67] cc => I, Pos: [51, 67] cc => I, Pos: [52, 57, 59] ccc => cc, Pos: [85, 87, 96] ccc => cc, Pos: [89, 92] cc => I, Pos: [89, 92] cc => I, Pos: [90, 99] cc => I, Pos: [90, 99] cc => I, Pos: [114, 118, 125] ccc => cc, Pos: [116, 122, 127] ccc => cc]

--------End Timer [Generate Plans]:  0.015623092651367188

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 22] cc => I,
 Pos: [14, 15, 17] ccc => cc,
 Pos: [47, 55, 82] ccc => cc,
 Pos: [51, 67] cc => I,
 Pos: [52, 57, 59] ccc => cc,
 Pos: [85, 87, 96] ccc => cc,
 Pos: [89, 92] cc => I,
 Pos: [90, 99] cc => I,
 Pos: [114, 118, 125] ccc => cc,
 Pos: [116, 122, 127] ccc => cc]
Change: 10, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 22] cc => I
Apply:  Pos: [14, 15, 17] ccc => cc
Apply:  Pos: [47, 55, 82] ccc => cc
Apply:  Pos: [51, 67] cc => I
Apply:  Pos: [52, 57, 59] ccc => cc
Apply:  Pos: [85, 87, 96] ccc => cc
Apply:  Pos: [89, 92] cc => I
Apply:  Pos: [90, 99] cc => I
Apply:  Pos: [114, 118, 125] ccc => cc
Apply:  Pos: [116, 122, 127] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [4, 17], [6, 7], [6, 17], [19, 15], [2, 8], [10, 8], [17, 18], [17, 3], [15, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 15], [18, 13], [13, 3], [8, 16], [0, 10], [8, 13], [12, 7], [2, 5], [17, 15], [10, 8], [10, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 13], [10, 8], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [18, 15], [10, 8], [6, 17], [9, 1], [17, 18], [8, 16], [2, 8], [13, 3], [8, 13], [0, 10], [0, 16], [18, 19], [11, 10], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [12, 11], [4, 14], [16, 9], [18, 13], [7, 17], [4, 19], [10, 13], [0, 17], [2, 5], [14, 19], [6, 7], [13, 3], [5, 16], [15, 3], [8, 18], [10, 13], [7, 17], [18, 13], [11, 10], [19, 15], [16, 9], [5, 8], [17, 19], [4, 17], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [13, 3], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [2, 16], [8, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.8442885875701904

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[43, 47, 48]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.5314290523529053

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [43, 47, 48] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [43, 47, 48] ccc => cc]
Change: 1, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [43, 47, 48] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [4, 17], [6, 17], [6, 7], [19, 15], [10, 8], [2, 8], [17, 3], [17, 18], [15, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [10, 8], [12, 7], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [18, 15], [10, 8], [6, 17], [9, 1], [17, 18], [8, 16], [2, 8], [13, 3], [8, 13], [0, 16], [0, 10], [18, 19], [11, 10], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [12, 11], [4, 14], [16, 9], [18, 13], [7, 17], [4, 19], [10, 13], [0, 17], [2, 5], [14, 19], [6, 7], [13, 3], [5, 16], [15, 3], [8, 18], [10, 13], [7, 17], [18, 13], [11, 10], [19, 15], [16, 9], [5, 8], [17, 19], [4, 17], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [13, 3], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.5314290523529053

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.51582670211792

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 17], [4, 17], [6, 7], [19, 15], [2, 8], [10, 8], [17, 18], [15, 3], [17, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 15], [18, 13], [13, 3], [8, 16], [0, 10], [10, 8], [12, 7], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 13], [10, 8], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [18, 15], [10, 8], [6, 17], [9, 1], [17, 18], [8, 16], [2, 8], [13, 3], [8, 13], [0, 10], [0, 16], [18, 19], [11, 10], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [12, 11], [4, 14], [16, 9], [18, 13], [7, 17], [4, 19], [10, 13], [0, 17], [2, 5], [14, 19], [6, 7], [13, 3], [5, 16], [15, 3], [8, 18], [10, 13], [7, 17], [18, 13], [11, 10], [19, 15], [16, 9], [5, 8], [17, 19], [4, 17], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [13, 3], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [2, 16], [8, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.51582670211792

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [147] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 294

Reduced: 
 - size: 123 (45.56%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.1096343994140625

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 4], [9, 1], [4, 17], [6, 7], [19, 15], [0, 10], [5, 16], [9, 1], [2, 8], [6, 4], [5, 16], [17, 19], [18, 13], [0, 10], [9, 1], [18, 13], [10, 8], [17, 15], [12, 6], [7, 4], [9, 3], [17, 18], [7, 4], [12, 6], [11, 10], [2, 16], [9, 3], [18, 19], [4, 14], [15, 3], [0, 7], [11, 10], [9, 1], [2, 16], [4, 17], [17, 15], [11, 10], [3, 1], [18, 19], [0, 2], [4, 17], [5, 16], [0, 2], [10, 8], [17, 19], [11, 10], [3, 1], [6, 7], [8, 16], [18, 15], [6, 17], [2, 8], [4, 14], [10, 13], [18, 19], [11, 0], [7, 17], [15, 3], [2, 16], [11, 0], [13, 1], [18, 19], [10, 8], [12, 6], [7, 17], [11, 10], [18, 15], [5, 16], [0, 2], [12, 6], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 13], [17, 19], [9, 1], [11, 10], [0, 2], [12, 6], [18, 15], [13, 3], [9, 1], [17, 19], [11, 7], [8, 16], [0, 10], [8, 13], [11, 7], [12, 6], [5, 16], [17, 15], [10, 8], [2, 16], [13, 1], [14, 19], [11, 0], [6, 7], [15, 3], [10, 13], [6, 17], [2, 5], [8, 18], [3, 1], [13, 1], [18, 19], [12, 11], [5, 8], [4, 14], [0, 2], [13, 9], [14, 19], [5, 16], [0, 2], [7, 4], [10, 8], [10, 13], [9, 1], [6, 17], [5, 8], [7, 4], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [0, 7], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [0, 7], [18, 15], [10, 8], [17, 18], [9, 1], [11, 0], [2, 5], [7, 10], [6, 17], [9, 1], [8, 16], [15, 3], [4, 14], [7, 10], [2, 8], [11, 0], [13, 3], [7, 4], [15, 3], [8, 13], [2, 5], [0, 10], [18, 19], [12, 6], [7, 4], [12, 6], [0, 2], [5, 8], [9, 1], [15, 3], [17, 19], [4, 14], [11, 10], [17, 18], [5, 8], [15, 3], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [12, 11], [3, 1], [4, 14], [5, 8], [0, 2], [16, 9], [18, 13], [7, 17], [12, 11], [4, 14], [10, 13], [0, 7], [5, 16], [12, 11], [3, 1], [14, 19], [7, 17], [5, 8], [9, 1], [13, 3], [2, 16], [4, 14], [15, 3], [0, 7], [8, 18], [10, 13], [4, 14], [6, 17], [18, 13], [11, 10], [9, 1], [2, 5], [19, 15], [4, 14], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [11, 0], [7, 4], [13, 3], [17, 18], [11, 0], [5, 8], [12, 6], [7, 17], [13, 1], [14, 19], [0, 2], [5, 16], [18, 15], [17, 19], [12, 11], [0, 10], [7, 4], [5, 8], [13, 3], [18, 19], [7, 17], [5, 16], [12, 6], [10, 8], [17, 19], [2, 5], [18, 13], [6, 4], [9, 1], [8, 16], [12, 11], [17, 19], [2, 16], [12, 11], [3, 1], [8, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [8, 18], [5, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 13]
[12, 16]
[11, 19]
[13, 20]
[18, 21]
[25, 28]
[24, 29]
[26, 32]
[30, 37]
[20, 38]
[31, 39]
[37, 42]
[33, 44]
[45, 48]
[43, 52]
[34, 58]
[61, 65]
[60, 67]
[62, 70]
[69, 75]
[70, 77]
[75, 82]
[71, 87]
[74, 88]
[82, 89]
[86, 92]
[85, 93]
[94, 98]
[89, 99]
[119, 123]
[110, 128]
[124, 130]
[137, 143]
[147, 152]
[150, 156]
[148, 158]
[149, 163]
[160, 167]
[166, 168]
[152, 171]
[161, 172]
[170, 177]
[172, 178]
[184, 192]
[186, 193]
[192, 197]
[185, 198]
[187, 201]
[205, 210]
[202, 214]
[210, 217]
[223, 229]
[227, 231]
[228, 243]
[232, 244]
[229, 245]
[238, 248]
[233, 249]
[241, 257]
[251, 258]
[257, 260]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 8, 15]
[40, 41, 46]
[42, 49, 51]
[55, 63, 72]
[133, 141, 149]
[169, 182, 188]
[193, 199, 205]
[195, 200, 207]
[220, 224, 232]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[191, 195, 200]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 103, 111]
[165, 173, 176]
[253, 262, 268]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 13]
[12, 16]
[11, 19]
[13, 20]
[18, 21]
[25, 28]
[24, 29]
[26, 32]
[30, 37]
[20, 38]
[31, 39]
[37, 42]
[33, 44]
[45, 48]
[43, 52]
[34, 58]
[61, 65]
[60, 67]
[62, 70]
[69, 75]
[70, 77]
[75, 82]
[71, 87]
[74, 88]
[82, 89]
[86, 92]
[85, 93]
[94, 98]
[89, 99]
[119, 123]
[110, 128]
[124, 130]
[137, 143]
[147, 152]
[150, 156]
[148, 158]
[149, 163]
[160, 167]
[166, 168]
[152, 171]
[161, 172]
[170, 177]
[172, 178]
[184, 192]
[186, 193]
[192, 197]
[185, 198]
[187, 201]
[205, 210]
[202, 214]
[210, 217]
[223, 229]
[227, 231]
[228, 243]
[232, 244]
[229, 245]
[238, 248]
[233, 249]
[241, 257]
[251, 258]
[257, 260]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.1871497631073

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 8, 15] ccc => cc, Pos: [7, 13] cc => I, Pos: [7, 13] cc => I, Pos: [11, 19] cc => I, Pos: [11, 19] cc => I, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [13, 20] cc => I, Pos: [13, 20] cc => I, Pos: [18, 21] cc => I, Pos: [18, 21] cc => I, Pos: [20, 38] cc => I, Pos: [20, 38] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [25, 28] cc => I, Pos: [25, 28] cc => I, Pos: [26, 32] cc => I, Pos: [26, 32] cc => I, Pos: [30, 37] cc => I, Pos: [30, 37] cc => I, Pos: [31, 39] cc => I, Pos: [31, 39] cc => I, Pos: [33, 44] cc => I, Pos: [33, 44] cc => I, Pos: [34, 58] cc => I, Pos: [34, 58] cc => I, Pos: [37, 42] cc => I, Pos: [37, 42] cc => I, Pos: [40, 41, 46] ccc => cc, Pos: [42, 49, 51] ccc => cc, Pos: [43, 52] cc => I, Pos: [43, 52] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [55, 63, 72] ccc => cc, Pos: [60, 67] cc => I, Pos: [60, 67] cc => I, Pos: [61, 65] cc => I, Pos: [61, 65] cc => I, Pos: [62, 70] cc => I, Pos: [62, 70] cc => I, Pos: [69, 75] cc => I, Pos: [69, 75] cc => I, Pos: [70, 77] cc => I, Pos: [70, 77] cc => I, Pos: [71, 87] cc => I, Pos: [71, 87] cc => I, Pos: [74, 88] cc => I, Pos: [74, 88] cc => I, Pos: [75, 82] cc => I, Pos: [75, 82] cc => I, Pos: [82, 89] cc => I, Pos: [82, 89] cc => I, Pos: [85, 93] cc => I, Pos: [85, 93] cc => I, Pos: [86, 92] cc => I, Pos: [86, 92] cc => I, Pos: [89, 99] cc => I, Pos: [89, 99] cc => I, Pos: [94, 98] cc => I, Pos: [94, 98] cc => I, Pos: [100, 103, 111] ccc => cc, Pos: [110, 128] cc => I, Pos: [110, 128] cc => I, Pos: [119, 123] cc => I, Pos: [119, 123] cc => I, Pos: [124, 130] cc => I, Pos: [124, 130] cc => I, Pos: [133, 141, 149] ccc => cc, Pos: [137, 143] cc => I, Pos: [137, 143] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [148, 158] cc => I, Pos: [148, 158] cc => I, Pos: [149, 163] cc => I, Pos: [149, 163] cc => I, Pos: [150, 156] cc => I, Pos: [150, 156] cc => I, Pos: [152, 171] cc => I, Pos: [152, 171] cc => I, Pos: [160, 167] cc => I, Pos: [160, 167] cc => I, Pos: [161, 172] cc => I, Pos: [161, 172] cc => I, Pos: [165, 173, 176] ccc => cc, Pos: [166, 168] cc => I, Pos: [166, 168] cc => I, Pos: [169, 182, 188] ccc => cc, Pos: [170, 177] cc => I, Pos: [170, 177] cc => I, Pos: [172, 178] cc => I, Pos: [172, 178] cc => I, Pos: [184, 192] cc => I, Pos: [184, 192] cc => I, Pos: [185, 198] cc => I, Pos: [185, 198] cc => I, Pos: [186, 193] cc => I, Pos: [186, 193] cc => I, Pos: [187, 201] cc => I, Pos: [187, 201] cc => I, Pos: [191, 195, 200] ccc => cc, Pos: [192, 197] cc => I, Pos: [192, 197] cc => I, Pos: [193, 199, 205] ccc => cc, Pos: [195, 200, 207] ccc => cc, Pos: [202, 214] cc => I, Pos: [202, 214] cc => I, Pos: [205, 210] cc => I, Pos: [205, 210] cc => I, Pos: [210, 217] cc => I, Pos: [210, 217] cc => I, Pos: [220, 224, 232] ccc => cc, Pos: [223, 229] cc => I, Pos: [223, 229] cc => I, Pos: [227, 231] cc => I, Pos: [227, 231] cc => I, Pos: [228, 243] cc => I, Pos: [228, 243] cc => I, Pos: [229, 245] cc => I, Pos: [229, 245] cc => I, Pos: [232, 244] cc => I, Pos: [232, 244] cc => I, Pos: [233, 249] cc => I, Pos: [233, 249] cc => I, Pos: [238, 248] cc => I, Pos: [238, 248] cc => I, Pos: [241, 257] cc => I, Pos: [241, 257] cc => I, Pos: [251, 258] cc => I, Pos: [251, 258] cc => I, Pos: [253, 262, 268] ccc => cc, Pos: [257, 260] cc => I, Pos: [257, 260] cc => I]

--------End Timer [Generate Plans]:  0.1407177448272705

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 8, 15] ccc => cc,
 Pos: [7, 13] cc => I,
 Pos: [11, 19] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [20, 38] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [25, 28] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [37, 42] cc => I,
 Pos: [31, 39] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [34, 58] cc => I,
 Pos: [40, 41, 46] ccc => cc,
 Pos: [43, 52] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [55, 63, 72] ccc => cc,
 Pos: [60, 67] cc => I,
 Pos: [61, 65] cc => I,
 Pos: [62, 70] cc => I,
 Pos: [75, 82] cc => I,
 Pos: [71, 87] cc => I,
 Pos: [74, 88] cc => I,
 Pos: [85, 93] cc => I,
 Pos: [86, 92] cc => I,
 Pos: [89, 99] cc => I,
 Pos: [94, 98] cc => I,
 Pos: [100, 103, 111] ccc => cc,
 Pos: [110, 128] cc => I,
 Pos: [119, 123] cc => I,
 Pos: [124, 130] cc => I,
 Pos: [133, 141, 149] ccc => cc,
 Pos: [137, 143] cc => I,
 Pos: [147, 152] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [160, 167] cc => I,
 Pos: [161, 172] cc => I,
 Pos: [165, 173, 176] ccc => cc,
 Pos: [166, 168] cc => I,
 Pos: [169, 182, 188] ccc => cc,
 Pos: [170, 177] cc => I,
 Pos: [184, 192] cc => I,
 Pos: [185, 198] cc => I,
 Pos: [186, 193] cc => I,
 Pos: [187, 201] cc => I,
 Pos: [191, 195, 200] ccc => cc,
 Pos: [202, 214] cc => I,
 Pos: [210, 217] cc => I,
 Pos: [232, 244] cc => I,
 Pos: [229, 245] cc => I,
 Pos: [227, 231] cc => I,
 Pos: [228, 243] cc => I,
 Pos: [233, 249] cc => I,
 Pos: [238, 248] cc => I,
 Pos: [241, 257] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [253, 262, 268] ccc => cc]
Change: 58, Saving: 60

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 8, 15] ccc => cc
Apply:  Pos: [7, 13] cc => I
Apply:  Pos: [11, 19] cc => I
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [18, 21] cc => I
Apply:  Pos: [20, 38] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [25, 28] cc => I
Apply:  Pos: [26, 32] cc => I
Apply:  Pos: [37, 42] cc => I
Apply:  Pos: [31, 39] cc => I
Apply:  Pos: [33, 44] cc => I
Apply:  Pos: [34, 58] cc => I
Apply:  Pos: [40, 41, 46] ccc => cc
Apply:  Pos: [43, 52] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [55, 63, 72] ccc => cc
Apply:  Pos: [60, 67] cc => I
Apply:  Pos: [61, 65] cc => I
Apply:  Pos: [62, 70] cc => I
Apply:  Pos: [75, 82] cc => I
Apply:  Pos: [71, 87] cc => I
Apply:  Pos: [74, 88] cc => I
Apply:  Pos: [85, 93] cc => I
Apply:  Pos: [86, 92] cc => I
Apply:  Pos: [89, 99] cc => I
Apply:  Pos: [94, 98] cc => I
Apply:  Pos: [100, 103, 111] ccc => cc
Apply:  Pos: [110, 128] cc => I
Apply:  Pos: [119, 123] cc => I
Apply:  Pos: [124, 130] cc => I
Apply:  Pos: [133, 141, 149] ccc => cc
Apply:  Pos: [137, 143] cc => I
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [148, 158] cc => I
Apply:  Pos: [150, 156] cc => I
Apply:  Pos: [160, 167] cc => I
Apply:  Pos: [161, 172] cc => I
Apply:  Pos: [165, 173, 176] ccc => cc
Apply:  Pos: [166, 168] cc => I
Apply:  Pos: [169, 182, 188] ccc => cc
Apply:  Pos: [170, 177] cc => I
Apply:  Pos: [184, 192] cc => I
Apply:  Pos: [185, 198] cc => I
Apply:  Pos: [186, 193] cc => I
Apply:  Pos: [187, 201] cc => I
Apply:  Pos: [191, 195, 200] ccc => cc
Apply:  Pos: [202, 214] cc => I
Apply:  Pos: [210, 217] cc => I
Apply:  Pos: [232, 244] cc => I
Apply:  Pos: [229, 245] cc => I
Apply:  Pos: [227, 231] cc => I
Apply:  Pos: [228, 243] cc => I
Apply:  Pos: [233, 249] cc => I
Apply:  Pos: [238, 248] cc => I
Apply:  Pos: [241, 257] cc => I
Apply:  Pos: [251, 258] cc => I
Apply:  Pos: [253, 262, 268] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015610218048095703

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 17], [4, 17], [6, 7], [19, 15], [2, 8], [17, 19], [10, 8], [17, 15], [17, 18], [11, 10], [15, 3], [0, 7], [4, 15], [17, 15], [5, 16], [10, 8], [17, 19], [11, 10], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [12, 6], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [8, 13], [2, 5], [17, 15], [10, 8], [5, 16], [13, 1], [14, 19], [11, 0], [6, 7], [15, 3], [10, 13], [8, 18], [3, 1], [13, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [5, 16], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 16], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [17, 18], [6, 17], [8, 16], [15, 3], [4, 14], [2, 8], [13, 3], [8, 13], [2, 5], [0, 10], [17, 18], [0, 16], [9, 1], [18, 19], [4, 14], [11, 10], [15, 3], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [16, 9], [18, 13], [0, 7], [10, 13], [7, 17], [5, 16], [12, 11], [14, 19], [13, 3], [2, 16], [4, 14], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [2, 5], [19, 15], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  5.343477725982666

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 22]
[52, 68]
[90, 100]
[104, 115]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[14, 16, 18]
[15, 21, 23]
[103, 105, 110]
[110, 112, 120]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[12, 15, 21]
[53, 58, 60]
[86, 87, 96]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 117, 126]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 22]
[52, 68]
[90, 100]
[104, 115]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8280696868896484

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 22] cc => I, Pos: [11, 22] cc => I, Pos: [12, 15, 21] ccc => cc, Pos: [14, 16, 18] ccc => cc, Pos: [15, 21, 23] ccc => cc, Pos: [52, 68] cc => I, Pos: [52, 68] cc => I, Pos: [53, 58, 60] ccc => cc, Pos: [86, 87, 96] ccc => cc, Pos: [90, 100] cc => I, Pos: [90, 100] cc => I, Pos: [103, 105, 110] ccc => cc, Pos: [104, 115] cc => I, Pos: [104, 115] cc => I, Pos: [110, 112, 120] ccc => cc, Pos: [113, 117, 126] ccc => cc]

--------End Timer [Generate Plans]:  0.031248092651367188

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 22] cc => I,
 Pos: [12, 15, 21] ccc => cc,
 Pos: [14, 16, 18] ccc => cc,
 Pos: [52, 68] cc => I,
 Pos: [53, 58, 60] ccc => cc,
 Pos: [86, 87, 96] ccc => cc,
 Pos: [90, 100] cc => I,
 Pos: [110, 112, 120] ccc => cc,
 Pos: [104, 115] cc => I,
 Pos: [113, 117, 126] ccc => cc]
Change: 10, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 22] cc => I
Apply:  Pos: [12, 15, 21] ccc => cc
Apply:  Pos: [14, 16, 18] ccc => cc
Apply:  Pos: [52, 68] cc => I
Apply:  Pos: [53, 58, 60] ccc => cc
Apply:  Pos: [86, 87, 96] ccc => cc
Apply:  Pos: [90, 100] cc => I
Apply:  Pos: [110, 112, 120] ccc => cc
Apply:  Pos: [104, 115] cc => I
Apply:  Pos: [113, 117, 126] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [4, 17], [6, 7], [6, 17], [19, 15], [2, 8], [11, 10], [17, 18], [17, 3], [10, 8], [15, 3], [0, 7], [4, 15], [5, 16], [11, 10], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [12, 6], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 15], [18, 13], [13, 3], [8, 16], [0, 10], [8, 13], [2, 5], [17, 15], [10, 8], [10, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 13], [10, 8], [9, 1], [5, 8], [18, 15], [13, 1], [2, 16], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [15, 3], [2, 8], [13, 3], [8, 13], [2, 5], [0, 10], [0, 16], [9, 1], [18, 19], [11, 10], [15, 3], [0, 7], [7, 4], [2, 16], [10, 8], [16, 9], [18, 13], [0, 17], [10, 13], [7, 17], [2, 5], [12, 11], [13, 3], [5, 16], [4, 14], [15, 3], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [19, 15], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [2, 16], [8, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.8593177795410156

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[86, 102]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 14, 19]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[44, 47, 48]
[101, 110, 114]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[86, 102]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.515629291534424

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [11, 14, 19] ccc => cc, Pos: [44, 47, 48] ccc => cc, Pos: [86, 102] cc => I, Pos: [86, 102] cc => I, Pos: [101, 110, 114] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 11] cc => I,
 Pos: [44, 47, 48] ccc => cc,
 Pos: [86, 102] cc => I,
 Pos: [101, 110, 114] ccc => cc]
Change: 4, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [44, 47, 48] ccc => cc
Apply:  Pos: [86, 102] cc => I
Apply:  Pos: [101, 110, 114] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [4, 17], [6, 17], [6, 7], [19, 15], [2, 8], [17, 3], [17, 18], [10, 8], [15, 3], [0, 7], [4, 15], [5, 16], [11, 10], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [12, 6], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [10, 8], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 16], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [15, 3], [2, 8], [13, 3], [8, 13], [0, 16], [0, 10], [9, 1], [18, 19], [11, 10], [15, 3], [0, 7], [7, 4], [2, 16], [10, 8], [16, 9], [18, 13], [0, 17], [10, 13], [6, 7], [12, 11], [13, 3], [5, 16], [4, 14], [15, 3], [8, 18], [10, 13], [7, 17], [18, 13], [11, 10], [19, 15], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.515629291534424

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[93, 100, 109]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3906641006469727

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [93, 100, 109] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [93, 100, 109] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [93, 100, 109] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [6, 17], [4, 17], [6, 7], [19, 15], [2, 8], [17, 18], [17, 3], [10, 8], [15, 3], [0, 7], [4, 15], [5, 16], [11, 10], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [12, 6], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 15], [18, 13], [13, 3], [8, 16], [0, 10], [10, 8], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 13], [10, 8], [9, 1], [5, 8], [18, 15], [13, 1], [2, 16], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [15, 3], [2, 8], [13, 3], [8, 13], [0, 10], [0, 16], [9, 1], [18, 19], [11, 10], [15, 3], [0, 7], [7, 4], [2, 16], [10, 8], [5, 16], [18, 13], [0, 17], [10, 13], [6, 7], [12, 11], [13, 3], [16, 9], [4, 14], [15, 3], [8, 18], [10, 13], [7, 17], [18, 13], [11, 10], [19, 15], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [2, 16], [8, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.3906641006469727

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3753814697265625

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [4, 17], [6, 7], [6, 17], [19, 15], [2, 8], [17, 3], [17, 18], [10, 8], [15, 3], [0, 7], [4, 15], [5, 16], [11, 10], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [12, 6], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [10, 8], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 16], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [15, 3], [2, 8], [13, 3], [8, 13], [0, 16], [0, 10], [9, 1], [18, 19], [11, 10], [15, 3], [0, 7], [7, 4], [2, 16], [10, 8], [5, 16], [18, 13], [0, 17], [10, 13], [6, 7], [12, 11], [13, 3], [16, 9], [4, 14], [15, 3], [8, 18], [10, 13], [7, 17], [18, 13], [11, 10], [19, 15], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.3753814697265625

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [142] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 284

Reduced: 
 - size: 128 (47.41%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10935068130493164

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 4], [9, 1], [4, 17], [6, 7], [19, 15], [0, 10], [5, 16], [9, 1], [2, 8], [6, 4], [5, 16], [17, 19], [18, 13], [0, 10], [9, 1], [18, 13], [10, 8], [17, 15], [12, 6], [7, 4], [9, 3], [17, 18], [7, 4], [12, 6], [11, 10], [2, 16], [9, 3], [18, 19], [4, 14], [15, 3], [0, 7], [11, 10], [9, 1], [2, 16], [4, 17], [17, 15], [11, 10], [3, 1], [18, 19], [0, 2], [4, 17], [5, 16], [0, 2], [10, 8], [17, 19], [11, 10], [3, 1], [6, 7], [8, 16], [18, 15], [6, 17], [2, 8], [4, 14], [10, 13], [18, 19], [11, 0], [7, 17], [15, 3], [2, 16], [11, 0], [13, 1], [18, 19], [10, 8], [12, 6], [7, 17], [11, 10], [18, 15], [5, 16], [0, 2], [12, 6], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 13], [17, 19], [9, 1], [11, 10], [0, 2], [12, 6], [18, 15], [13, 3], [9, 1], [17, 19], [11, 7], [8, 16], [0, 10], [8, 13], [11, 7], [12, 6], [5, 16], [17, 15], [10, 8], [2, 16], [13, 1], [14, 19], [11, 0], [6, 7], [15, 3], [10, 13], [6, 17], [2, 5], [8, 18], [3, 1], [13, 1], [18, 19], [12, 11], [5, 8], [4, 14], [0, 2], [13, 9], [14, 19], [5, 16], [0, 2], [7, 4], [10, 8], [10, 13], [9, 1], [6, 17], [5, 8], [7, 4], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [0, 7], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [0, 7], [18, 15], [10, 8], [17, 18], [9, 1], [11, 0], [2, 5], [7, 10], [6, 17], [9, 1], [8, 16], [15, 3], [4, 14], [7, 10], [2, 8], [11, 0], [13, 3], [7, 4], [15, 3], [8, 13], [2, 5], [0, 10], [18, 19], [12, 6], [7, 4], [12, 6], [0, 2], [5, 8], [9, 1], [15, 3], [17, 19], [4, 14], [11, 10], [17, 18], [5, 8], [15, 3], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [12, 11], [3, 1], [4, 14], [5, 8], [0, 2], [16, 9], [18, 13], [7, 17], [12, 11], [4, 14], [10, 13], [0, 7], [5, 16], [12, 11], [3, 1], [14, 19], [7, 17], [5, 8], [9, 1], [13, 3], [2, 16], [4, 14], [15, 3], [0, 7], [8, 18], [10, 13], [4, 14], [6, 17], [18, 13], [11, 10], [9, 1], [2, 5], [19, 15], [4, 14], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [11, 0], [7, 4], [13, 3], [17, 18], [11, 0], [5, 8], [12, 6], [7, 17], [13, 1], [14, 19], [0, 2], [5, 16], [18, 15], [17, 19], [12, 11], [0, 10], [7, 4], [5, 8], [13, 3], [18, 19], [7, 17], [5, 16], [12, 6], [10, 8], [17, 19], [2, 5], [18, 13], [6, 4], [9, 1], [8, 16], [12, 11], [17, 19], [2, 16], [12, 11], [3, 1], [8, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [8, 18], [5, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 13]
[12, 16]
[11, 19]
[13, 20]
[18, 21]
[25, 28]
[24, 29]
[26, 32]
[30, 37]
[20, 38]
[31, 39]
[37, 42]
[33, 44]
[45, 48]
[43, 52]
[34, 58]
[61, 65]
[60, 67]
[62, 70]
[69, 75]
[70, 77]
[75, 82]
[71, 87]
[74, 88]
[82, 89]
[86, 92]
[85, 93]
[94, 98]
[89, 99]
[119, 123]
[110, 128]
[124, 130]
[137, 143]
[147, 152]
[150, 156]
[148, 158]
[149, 163]
[160, 167]
[166, 168]
[152, 171]
[161, 172]
[170, 177]
[172, 178]
[184, 192]
[186, 193]
[192, 197]
[185, 198]
[187, 201]
[205, 210]
[202, 214]
[210, 217]
[223, 229]
[227, 231]
[228, 243]
[232, 244]
[229, 245]
[238, 248]
[233, 249]
[241, 257]
[251, 258]
[257, 260]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 8, 15]
[40, 41, 46]
[42, 49, 51]
[55, 63, 72]
[133, 141, 149]
[169, 182, 188]
[193, 199, 205]
[195, 200, 207]
[220, 224, 232]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[191, 195, 200]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 103, 111]
[165, 173, 176]
[253, 262, 268]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 13]
[12, 16]
[11, 19]
[13, 20]
[18, 21]
[25, 28]
[24, 29]
[26, 32]
[30, 37]
[20, 38]
[31, 39]
[37, 42]
[33, 44]
[45, 48]
[43, 52]
[34, 58]
[61, 65]
[60, 67]
[62, 70]
[69, 75]
[70, 77]
[75, 82]
[71, 87]
[74, 88]
[82, 89]
[86, 92]
[85, 93]
[94, 98]
[89, 99]
[119, 123]
[110, 128]
[124, 130]
[137, 143]
[147, 152]
[150, 156]
[148, 158]
[149, 163]
[160, 167]
[166, 168]
[152, 171]
[161, 172]
[170, 177]
[172, 178]
[184, 192]
[186, 193]
[192, 197]
[185, 198]
[187, 201]
[205, 210]
[202, 214]
[210, 217]
[223, 229]
[227, 231]
[228, 243]
[232, 244]
[229, 245]
[238, 248]
[233, 249]
[241, 257]
[251, 258]
[257, 260]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.311941146850586

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 8, 15] ccc => cc, Pos: [7, 13] cc => I, Pos: [7, 13] cc => I, Pos: [11, 19] cc => I, Pos: [11, 19] cc => I, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [13, 20] cc => I, Pos: [13, 20] cc => I, Pos: [18, 21] cc => I, Pos: [18, 21] cc => I, Pos: [20, 38] cc => I, Pos: [20, 38] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [25, 28] cc => I, Pos: [25, 28] cc => I, Pos: [26, 32] cc => I, Pos: [26, 32] cc => I, Pos: [30, 37] cc => I, Pos: [30, 37] cc => I, Pos: [31, 39] cc => I, Pos: [31, 39] cc => I, Pos: [33, 44] cc => I, Pos: [33, 44] cc => I, Pos: [34, 58] cc => I, Pos: [34, 58] cc => I, Pos: [37, 42] cc => I, Pos: [37, 42] cc => I, Pos: [40, 41, 46] ccc => cc, Pos: [42, 49, 51] ccc => cc, Pos: [43, 52] cc => I, Pos: [43, 52] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [55, 63, 72] ccc => cc, Pos: [60, 67] cc => I, Pos: [60, 67] cc => I, Pos: [61, 65] cc => I, Pos: [61, 65] cc => I, Pos: [62, 70] cc => I, Pos: [62, 70] cc => I, Pos: [69, 75] cc => I, Pos: [69, 75] cc => I, Pos: [70, 77] cc => I, Pos: [70, 77] cc => I, Pos: [71, 87] cc => I, Pos: [71, 87] cc => I, Pos: [74, 88] cc => I, Pos: [74, 88] cc => I, Pos: [75, 82] cc => I, Pos: [75, 82] cc => I, Pos: [82, 89] cc => I, Pos: [82, 89] cc => I, Pos: [85, 93] cc => I, Pos: [85, 93] cc => I, Pos: [86, 92] cc => I, Pos: [86, 92] cc => I, Pos: [89, 99] cc => I, Pos: [89, 99] cc => I, Pos: [94, 98] cc => I, Pos: [94, 98] cc => I, Pos: [100, 103, 111] ccc => cc, Pos: [110, 128] cc => I, Pos: [110, 128] cc => I, Pos: [119, 123] cc => I, Pos: [119, 123] cc => I, Pos: [124, 130] cc => I, Pos: [124, 130] cc => I, Pos: [133, 141, 149] ccc => cc, Pos: [137, 143] cc => I, Pos: [137, 143] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [148, 158] cc => I, Pos: [148, 158] cc => I, Pos: [149, 163] cc => I, Pos: [149, 163] cc => I, Pos: [150, 156] cc => I, Pos: [150, 156] cc => I, Pos: [152, 171] cc => I, Pos: [152, 171] cc => I, Pos: [160, 167] cc => I, Pos: [160, 167] cc => I, Pos: [161, 172] cc => I, Pos: [161, 172] cc => I, Pos: [165, 173, 176] ccc => cc, Pos: [166, 168] cc => I, Pos: [166, 168] cc => I, Pos: [169, 182, 188] ccc => cc, Pos: [170, 177] cc => I, Pos: [170, 177] cc => I, Pos: [172, 178] cc => I, Pos: [172, 178] cc => I, Pos: [184, 192] cc => I, Pos: [184, 192] cc => I, Pos: [185, 198] cc => I, Pos: [185, 198] cc => I, Pos: [186, 193] cc => I, Pos: [186, 193] cc => I, Pos: [187, 201] cc => I, Pos: [187, 201] cc => I, Pos: [191, 195, 200] ccc => cc, Pos: [192, 197] cc => I, Pos: [192, 197] cc => I, Pos: [193, 199, 205] ccc => cc, Pos: [195, 200, 207] ccc => cc, Pos: [202, 214] cc => I, Pos: [202, 214] cc => I, Pos: [205, 210] cc => I, Pos: [205, 210] cc => I, Pos: [210, 217] cc => I, Pos: [210, 217] cc => I, Pos: [220, 224, 232] ccc => cc, Pos: [223, 229] cc => I, Pos: [223, 229] cc => I, Pos: [227, 231] cc => I, Pos: [227, 231] cc => I, Pos: [228, 243] cc => I, Pos: [228, 243] cc => I, Pos: [229, 245] cc => I, Pos: [229, 245] cc => I, Pos: [232, 244] cc => I, Pos: [232, 244] cc => I, Pos: [233, 249] cc => I, Pos: [233, 249] cc => I, Pos: [238, 248] cc => I, Pos: [238, 248] cc => I, Pos: [241, 257] cc => I, Pos: [241, 257] cc => I, Pos: [251, 258] cc => I, Pos: [251, 258] cc => I, Pos: [253, 262, 268] ccc => cc, Pos: [257, 260] cc => I, Pos: [257, 260] cc => I]

--------End Timer [Generate Plans]:  0.15622568130493164

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 8, 15] ccc => cc,
 Pos: [7, 13] cc => I,
 Pos: [11, 19] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [20, 38] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [25, 28] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [37, 42] cc => I,
 Pos: [31, 39] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [34, 58] cc => I,
 Pos: [40, 41, 46] ccc => cc,
 Pos: [43, 52] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [55, 63, 72] ccc => cc,
 Pos: [60, 67] cc => I,
 Pos: [61, 65] cc => I,
 Pos: [70, 77] cc => I,
 Pos: [69, 75] cc => I,
 Pos: [71, 87] cc => I,
 Pos: [74, 88] cc => I,
 Pos: [89, 99] cc => I,
 Pos: [85, 93] cc => I,
 Pos: [86, 92] cc => I,
 Pos: [94, 98] cc => I,
 Pos: [100, 103, 111] ccc => cc,
 Pos: [110, 128] cc => I,
 Pos: [119, 123] cc => I,
 Pos: [124, 130] cc => I,
 Pos: [149, 163] cc => I,
 Pos: [137, 143] cc => I,
 Pos: [147, 152] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [160, 167] cc => I,
 Pos: [161, 172] cc => I,
 Pos: [165, 173, 176] ccc => cc,
 Pos: [166, 168] cc => I,
 Pos: [169, 182, 188] ccc => cc,
 Pos: [170, 177] cc => I,
 Pos: [192, 197] cc => I,
 Pos: [185, 198] cc => I,
 Pos: [186, 193] cc => I,
 Pos: [187, 201] cc => I,
 Pos: [191, 195, 200] ccc => cc,
 Pos: [202, 214] cc => I,
 Pos: [210, 217] cc => I,
 Pos: [232, 244] cc => I,
 Pos: [229, 245] cc => I,
 Pos: [227, 231] cc => I,
 Pos: [228, 243] cc => I,
 Pos: [233, 249] cc => I,
 Pos: [238, 248] cc => I,
 Pos: [241, 257] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [253, 262, 268] ccc => cc]
Change: 58, Saving: 60

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 8, 15] ccc => cc
Apply:  Pos: [7, 13] cc => I
Apply:  Pos: [11, 19] cc => I
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [18, 21] cc => I
Apply:  Pos: [20, 38] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [25, 28] cc => I
Apply:  Pos: [26, 32] cc => I
Apply:  Pos: [37, 42] cc => I
Apply:  Pos: [31, 39] cc => I
Apply:  Pos: [33, 44] cc => I
Apply:  Pos: [34, 58] cc => I
Apply:  Pos: [40, 41, 46] ccc => cc
Apply:  Pos: [43, 52] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [55, 63, 72] ccc => cc
Apply:  Pos: [60, 67] cc => I
Apply:  Pos: [61, 65] cc => I
Apply:  Pos: [70, 77] cc => I
Apply:  Pos: [69, 75] cc => I
Apply:  Pos: [71, 87] cc => I
Apply:  Pos: [74, 88] cc => I
Apply:  Pos: [89, 99] cc => I
Apply:  Pos: [85, 93] cc => I
Apply:  Pos: [86, 92] cc => I
Apply:  Pos: [94, 98] cc => I
Apply:  Pos: [100, 103, 111] ccc => cc
Apply:  Pos: [110, 128] cc => I
Apply:  Pos: [119, 123] cc => I
Apply:  Pos: [124, 130] cc => I
Apply:  Pos: [149, 163] cc => I
Apply:  Pos: [137, 143] cc => I
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [148, 158] cc => I
Apply:  Pos: [150, 156] cc => I
Apply:  Pos: [160, 167] cc => I
Apply:  Pos: [161, 172] cc => I
Apply:  Pos: [165, 173, 176] ccc => cc
Apply:  Pos: [166, 168] cc => I
Apply:  Pos: [169, 182, 188] ccc => cc
Apply:  Pos: [170, 177] cc => I
Apply:  Pos: [192, 197] cc => I
Apply:  Pos: [185, 198] cc => I
Apply:  Pos: [186, 193] cc => I
Apply:  Pos: [187, 201] cc => I
Apply:  Pos: [191, 195, 200] ccc => cc
Apply:  Pos: [202, 214] cc => I
Apply:  Pos: [210, 217] cc => I
Apply:  Pos: [232, 244] cc => I
Apply:  Pos: [229, 245] cc => I
Apply:  Pos: [227, 231] cc => I
Apply:  Pos: [228, 243] cc => I
Apply:  Pos: [233, 249] cc => I
Apply:  Pos: [238, 248] cc => I
Apply:  Pos: [241, 257] cc => I
Apply:  Pos: [251, 258] cc => I
Apply:  Pos: [253, 262, 268] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 17], [4, 17], [6, 7], [19, 15], [2, 8], [17, 19], [10, 8], [17, 15], [17, 18], [11, 10], [15, 3], [0, 7], [4, 15], [17, 15], [5, 16], [10, 8], [17, 19], [11, 10], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [7, 17], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [8, 13], [2, 5], [17, 15], [10, 8], [5, 16], [13, 1], [14, 19], [11, 0], [6, 7], [15, 3], [10, 13], [8, 18], [3, 1], [13, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [5, 16], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [17, 18], [6, 17], [8, 16], [15, 3], [4, 14], [2, 8], [13, 3], [8, 13], [0, 10], [17, 18], [0, 16], [9, 1], [18, 19], [4, 14], [11, 10], [15, 3], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [12, 11], [16, 9], [18, 13], [0, 7], [10, 13], [7, 17], [5, 16], [14, 19], [13, 3], [2, 16], [4, 14], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [2, 5], [19, 15], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  6.468166828155518

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 22]
[52, 68]
[90, 99]
[103, 114]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[14, 16, 18]
[15, 21, 23]
[102, 104, 110]
[110, 112, 119]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[12, 15, 21]
[53, 58, 60]
[86, 87, 95]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 116, 125]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 22]
[52, 68]
[90, 99]
[103, 114]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.781482696533203

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 22] cc => I, Pos: [11, 22] cc => I, Pos: [12, 15, 21] ccc => cc, Pos: [14, 16, 18] ccc => cc, Pos: [15, 21, 23] ccc => cc, Pos: [52, 68] cc => I, Pos: [52, 68] cc => I, Pos: [53, 58, 60] ccc => cc, Pos: [86, 87, 95] ccc => cc, Pos: [90, 99] cc => I, Pos: [90, 99] cc => I, Pos: [102, 104, 110] ccc => cc, Pos: [103, 114] cc => I, Pos: [103, 114] cc => I, Pos: [110, 112, 119] ccc => cc, Pos: [113, 116, 125] ccc => cc]

--------End Timer [Generate Plans]:  0.015642404556274414

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 22] cc => I,
 Pos: [15, 21, 23] ccc => cc,
 Pos: [14, 16, 18] ccc => cc,
 Pos: [52, 68] cc => I,
 Pos: [53, 58, 60] ccc => cc,
 Pos: [86, 87, 95] ccc => cc,
 Pos: [90, 99] cc => I,
 Pos: [102, 104, 110] ccc => cc,
 Pos: [103, 114] cc => I,
 Pos: [113, 116, 125] ccc => cc]
Change: 10, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 22] cc => I
Apply:  Pos: [15, 21, 23] ccc => cc
Apply:  Pos: [14, 16, 18] ccc => cc
Apply:  Pos: [52, 68] cc => I
Apply:  Pos: [53, 58, 60] ccc => cc
Apply:  Pos: [86, 87, 95] ccc => cc
Apply:  Pos: [90, 99] cc => I
Apply:  Pos: [102, 104, 110] ccc => cc
Apply:  Pos: [103, 114] cc => I
Apply:  Pos: [113, 116, 125] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [4, 17], [6, 7], [6, 17], [19, 15], [2, 8], [10, 8], [17, 18], [17, 3], [11, 8], [15, 3], [0, 7], [4, 15], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [7, 17], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 15], [18, 13], [13, 3], [8, 16], [0, 10], [8, 13], [2, 5], [17, 15], [10, 8], [10, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 13], [10, 8], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [15, 3], [2, 8], [13, 3], [8, 13], [0, 10], [0, 16], [9, 1], [18, 19], [11, 10], [15, 3], [0, 4], [7, 4], [2, 16], [10, 8], [12, 11], [16, 9], [18, 13], [10, 13], [7, 17], [2, 5], [13, 3], [5, 16], [4, 14], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [19, 15], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [2, 16], [8, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.7971251010894775

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[44, 47, 48]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4693875312805176

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [44, 47, 48] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [44, 47, 48] ccc => cc]
Change: 1, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [44, 47, 48] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [4, 17], [6, 17], [6, 7], [19, 15], [10, 8], [2, 8], [17, 3], [17, 18], [11, 8], [15, 3], [0, 7], [4, 15], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [7, 17], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [10, 8], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [15, 3], [2, 8], [13, 3], [8, 13], [0, 16], [0, 10], [9, 1], [18, 19], [11, 10], [15, 3], [7, 4], [0, 4], [2, 16], [10, 8], [12, 11], [16, 9], [10, 13], [18, 13], [7, 17], [2, 5], [13, 3], [5, 16], [4, 14], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [19, 15], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.4693875312805176

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.432860851287842

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 17], [4, 17], [6, 7], [19, 15], [2, 8], [10, 8], [17, 18], [17, 3], [11, 8], [15, 3], [0, 7], [4, 15], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [7, 17], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 15], [18, 13], [13, 3], [8, 16], [0, 10], [10, 8], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 13], [10, 8], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [15, 3], [2, 8], [13, 3], [8, 13], [0, 10], [0, 16], [9, 1], [18, 19], [11, 10], [15, 3], [0, 4], [7, 4], [2, 16], [10, 8], [12, 11], [16, 9], [18, 13], [10, 13], [7, 17], [2, 5], [13, 3], [5, 16], [4, 14], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [19, 15], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [2, 16], [8, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.432860851287842

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [147] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 294

Reduced: 
 - size: 123 (45.56%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936284065246582

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 4], [9, 1], [4, 17], [6, 7], [19, 15], [0, 10], [5, 16], [9, 1], [2, 8], [6, 4], [5, 16], [17, 19], [18, 13], [0, 10], [9, 1], [18, 13], [10, 8], [17, 15], [12, 6], [7, 4], [9, 3], [17, 18], [7, 4], [12, 6], [11, 10], [2, 16], [9, 3], [18, 19], [4, 14], [15, 3], [0, 7], [11, 10], [9, 1], [2, 16], [4, 17], [17, 15], [11, 10], [3, 1], [18, 19], [0, 2], [4, 17], [5, 16], [0, 2], [10, 8], [17, 19], [11, 10], [3, 1], [6, 7], [8, 16], [18, 15], [6, 17], [2, 8], [4, 14], [10, 13], [18, 19], [11, 0], [7, 17], [15, 3], [2, 16], [11, 0], [13, 1], [18, 19], [10, 8], [12, 6], [7, 17], [11, 10], [18, 15], [5, 16], [0, 2], [12, 6], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 13], [17, 19], [9, 1], [11, 10], [0, 2], [12, 6], [18, 15], [13, 3], [9, 1], [17, 19], [11, 7], [8, 16], [0, 10], [8, 13], [11, 7], [12, 6], [5, 16], [17, 15], [10, 8], [2, 16], [13, 1], [14, 19], [11, 0], [6, 7], [15, 3], [10, 13], [6, 17], [2, 5], [8, 18], [3, 1], [13, 1], [18, 19], [12, 11], [5, 8], [4, 14], [0, 2], [13, 9], [14, 19], [5, 16], [0, 2], [7, 4], [10, 8], [10, 13], [9, 1], [6, 17], [5, 8], [7, 4], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [0, 7], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [0, 7], [18, 15], [10, 8], [17, 18], [9, 1], [11, 0], [2, 5], [7, 10], [6, 17], [9, 1], [8, 16], [15, 3], [4, 14], [7, 10], [2, 8], [11, 0], [13, 3], [7, 4], [15, 3], [8, 13], [2, 5], [0, 10], [18, 19], [12, 6], [7, 4], [12, 6], [0, 2], [5, 8], [9, 1], [15, 3], [17, 19], [4, 14], [11, 10], [17, 18], [5, 8], [15, 3], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [12, 11], [3, 1], [4, 14], [5, 8], [0, 2], [16, 9], [18, 13], [7, 17], [12, 11], [4, 14], [10, 13], [0, 7], [5, 16], [12, 11], [3, 1], [14, 19], [7, 17], [5, 8], [9, 1], [13, 3], [2, 16], [4, 14], [15, 3], [0, 7], [8, 18], [10, 13], [4, 14], [6, 17], [18, 13], [11, 10], [9, 1], [2, 5], [19, 15], [4, 14], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [11, 0], [7, 4], [13, 3], [17, 18], [11, 0], [5, 8], [12, 6], [7, 17], [13, 1], [14, 19], [0, 2], [5, 16], [18, 15], [17, 19], [12, 11], [0, 10], [7, 4], [5, 8], [13, 3], [18, 19], [7, 17], [5, 16], [12, 6], [10, 8], [17, 19], [2, 5], [18, 13], [6, 4], [9, 1], [8, 16], [12, 11], [17, 19], [2, 16], [12, 11], [3, 1], [8, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [8, 18], [5, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 13]
[12, 16]
[11, 19]
[13, 20]
[18, 21]
[25, 28]
[24, 29]
[26, 32]
[30, 37]
[20, 38]
[31, 39]
[37, 42]
[33, 44]
[45, 48]
[43, 52]
[34, 58]
[61, 65]
[60, 67]
[62, 70]
[69, 75]
[70, 77]
[75, 82]
[71, 87]
[74, 88]
[82, 89]
[86, 92]
[85, 93]
[94, 98]
[89, 99]
[119, 123]
[110, 128]
[124, 130]
[137, 143]
[147, 152]
[150, 156]
[148, 158]
[149, 163]
[160, 167]
[166, 168]
[152, 171]
[161, 172]
[170, 177]
[172, 178]
[184, 192]
[186, 193]
[192, 197]
[185, 198]
[187, 201]
[205, 210]
[202, 214]
[210, 217]
[223, 229]
[227, 231]
[228, 243]
[232, 244]
[229, 245]
[238, 248]
[233, 249]
[241, 257]
[251, 258]
[257, 260]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 8, 15]
[40, 41, 46]
[42, 49, 51]
[55, 63, 72]
[133, 141, 149]
[169, 182, 188]
[193, 199, 205]
[195, 200, 207]
[220, 224, 232]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[191, 195, 200]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 103, 111]
[165, 173, 176]
[253, 262, 268]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 13]
[12, 16]
[11, 19]
[13, 20]
[18, 21]
[25, 28]
[24, 29]
[26, 32]
[30, 37]
[20, 38]
[31, 39]
[37, 42]
[33, 44]
[45, 48]
[43, 52]
[34, 58]
[61, 65]
[60, 67]
[62, 70]
[69, 75]
[70, 77]
[75, 82]
[71, 87]
[74, 88]
[82, 89]
[86, 92]
[85, 93]
[94, 98]
[89, 99]
[119, 123]
[110, 128]
[124, 130]
[137, 143]
[147, 152]
[150, 156]
[148, 158]
[149, 163]
[160, 167]
[166, 168]
[152, 171]
[161, 172]
[170, 177]
[172, 178]
[184, 192]
[186, 193]
[192, 197]
[185, 198]
[187, 201]
[205, 210]
[202, 214]
[210, 217]
[223, 229]
[227, 231]
[228, 243]
[232, 244]
[229, 245]
[238, 248]
[233, 249]
[241, 257]
[251, 258]
[257, 260]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.2645344734191895

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 8, 15] ccc => cc, Pos: [7, 13] cc => I, Pos: [7, 13] cc => I, Pos: [11, 19] cc => I, Pos: [11, 19] cc => I, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [13, 20] cc => I, Pos: [13, 20] cc => I, Pos: [18, 21] cc => I, Pos: [18, 21] cc => I, Pos: [20, 38] cc => I, Pos: [20, 38] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [25, 28] cc => I, Pos: [25, 28] cc => I, Pos: [26, 32] cc => I, Pos: [26, 32] cc => I, Pos: [30, 37] cc => I, Pos: [30, 37] cc => I, Pos: [31, 39] cc => I, Pos: [31, 39] cc => I, Pos: [33, 44] cc => I, Pos: [33, 44] cc => I, Pos: [34, 58] cc => I, Pos: [34, 58] cc => I, Pos: [37, 42] cc => I, Pos: [37, 42] cc => I, Pos: [40, 41, 46] ccc => cc, Pos: [42, 49, 51] ccc => cc, Pos: [43, 52] cc => I, Pos: [43, 52] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [55, 63, 72] ccc => cc, Pos: [60, 67] cc => I, Pos: [60, 67] cc => I, Pos: [61, 65] cc => I, Pos: [61, 65] cc => I, Pos: [62, 70] cc => I, Pos: [62, 70] cc => I, Pos: [69, 75] cc => I, Pos: [69, 75] cc => I, Pos: [70, 77] cc => I, Pos: [70, 77] cc => I, Pos: [71, 87] cc => I, Pos: [71, 87] cc => I, Pos: [74, 88] cc => I, Pos: [74, 88] cc => I, Pos: [75, 82] cc => I, Pos: [75, 82] cc => I, Pos: [82, 89] cc => I, Pos: [82, 89] cc => I, Pos: [85, 93] cc => I, Pos: [85, 93] cc => I, Pos: [86, 92] cc => I, Pos: [86, 92] cc => I, Pos: [89, 99] cc => I, Pos: [89, 99] cc => I, Pos: [94, 98] cc => I, Pos: [94, 98] cc => I, Pos: [100, 103, 111] ccc => cc, Pos: [110, 128] cc => I, Pos: [110, 128] cc => I, Pos: [119, 123] cc => I, Pos: [119, 123] cc => I, Pos: [124, 130] cc => I, Pos: [124, 130] cc => I, Pos: [133, 141, 149] ccc => cc, Pos: [137, 143] cc => I, Pos: [137, 143] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [148, 158] cc => I, Pos: [148, 158] cc => I, Pos: [149, 163] cc => I, Pos: [149, 163] cc => I, Pos: [150, 156] cc => I, Pos: [150, 156] cc => I, Pos: [152, 171] cc => I, Pos: [152, 171] cc => I, Pos: [160, 167] cc => I, Pos: [160, 167] cc => I, Pos: [161, 172] cc => I, Pos: [161, 172] cc => I, Pos: [165, 173, 176] ccc => cc, Pos: [166, 168] cc => I, Pos: [166, 168] cc => I, Pos: [169, 182, 188] ccc => cc, Pos: [170, 177] cc => I, Pos: [170, 177] cc => I, Pos: [172, 178] cc => I, Pos: [172, 178] cc => I, Pos: [184, 192] cc => I, Pos: [184, 192] cc => I, Pos: [185, 198] cc => I, Pos: [185, 198] cc => I, Pos: [186, 193] cc => I, Pos: [186, 193] cc => I, Pos: [187, 201] cc => I, Pos: [187, 201] cc => I, Pos: [191, 195, 200] ccc => cc, Pos: [192, 197] cc => I, Pos: [192, 197] cc => I, Pos: [193, 199, 205] ccc => cc, Pos: [195, 200, 207] ccc => cc, Pos: [202, 214] cc => I, Pos: [202, 214] cc => I, Pos: [205, 210] cc => I, Pos: [205, 210] cc => I, Pos: [210, 217] cc => I, Pos: [210, 217] cc => I, Pos: [220, 224, 232] ccc => cc, Pos: [223, 229] cc => I, Pos: [223, 229] cc => I, Pos: [227, 231] cc => I, Pos: [227, 231] cc => I, Pos: [228, 243] cc => I, Pos: [228, 243] cc => I, Pos: [229, 245] cc => I, Pos: [229, 245] cc => I, Pos: [232, 244] cc => I, Pos: [232, 244] cc => I, Pos: [233, 249] cc => I, Pos: [233, 249] cc => I, Pos: [238, 248] cc => I, Pos: [238, 248] cc => I, Pos: [241, 257] cc => I, Pos: [241, 257] cc => I, Pos: [251, 258] cc => I, Pos: [251, 258] cc => I, Pos: [253, 262, 268] ccc => cc, Pos: [257, 260] cc => I, Pos: [257, 260] cc => I]

--------End Timer [Generate Plans]:  0.14061570167541504

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 8, 15] ccc => cc,
 Pos: [13, 20] cc => I,
 Pos: [11, 19] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [25, 28] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [31, 39] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [34, 58] cc => I,
 Pos: [40, 41, 46] ccc => cc,
 Pos: [42, 49, 51] ccc => cc,
 Pos: [43, 52] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [55, 63, 72] ccc => cc,
 Pos: [60, 67] cc => I,
 Pos: [61, 65] cc => I,
 Pos: [70, 77] cc => I,
 Pos: [69, 75] cc => I,
 Pos: [71, 87] cc => I,
 Pos: [74, 88] cc => I,
 Pos: [89, 99] cc => I,
 Pos: [85, 93] cc => I,
 Pos: [86, 92] cc => I,
 Pos: [94, 98] cc => I,
 Pos: [100, 103, 111] ccc => cc,
 Pos: [110, 128] cc => I,
 Pos: [119, 123] cc => I,
 Pos: [124, 130] cc => I,
 Pos: [133, 141, 149] ccc => cc,
 Pos: [137, 143] cc => I,
 Pos: [152, 171] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [160, 167] cc => I,
 Pos: [161, 172] cc => I,
 Pos: [165, 173, 176] ccc => cc,
 Pos: [166, 168] cc => I,
 Pos: [169, 182, 188] ccc => cc,
 Pos: [170, 177] cc => I,
 Pos: [192, 197] cc => I,
 Pos: [185, 198] cc => I,
 Pos: [193, 199, 205] ccc => cc,
 Pos: [187, 201] cc => I,
 Pos: [191, 195, 200] ccc => cc,
 Pos: [202, 214] cc => I,
 Pos: [210, 217] cc => I,
 Pos: [232, 244] cc => I,
 Pos: [229, 245] cc => I,
 Pos: [227, 231] cc => I,
 Pos: [228, 243] cc => I,
 Pos: [233, 249] cc => I,
 Pos: [238, 248] cc => I,
 Pos: [257, 260] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [253, 262, 268] ccc => cc]
Change: 58, Saving: 60

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 8, 15] ccc => cc
Apply:  Pos: [13, 20] cc => I
Apply:  Pos: [11, 19] cc => I
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [18, 21] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [25, 28] cc => I
Apply:  Pos: [26, 32] cc => I
Apply:  Pos: [30, 37] cc => I
Apply:  Pos: [31, 39] cc => I
Apply:  Pos: [33, 44] cc => I
Apply:  Pos: [34, 58] cc => I
Apply:  Pos: [40, 41, 46] ccc => cc
Apply:  Pos: [42, 49, 51] ccc => cc
Apply:  Pos: [43, 52] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [55, 63, 72] ccc => cc
Apply:  Pos: [60, 67] cc => I
Apply:  Pos: [61, 65] cc => I
Apply:  Pos: [70, 77] cc => I
Apply:  Pos: [69, 75] cc => I
Apply:  Pos: [71, 87] cc => I
Apply:  Pos: [74, 88] cc => I
Apply:  Pos: [89, 99] cc => I
Apply:  Pos: [85, 93] cc => I
Apply:  Pos: [86, 92] cc => I
Apply:  Pos: [94, 98] cc => I
Apply:  Pos: [100, 103, 111] ccc => cc
Apply:  Pos: [110, 128] cc => I
Apply:  Pos: [119, 123] cc => I
Apply:  Pos: [124, 130] cc => I
Apply:  Pos: [133, 141, 149] ccc => cc
Apply:  Pos: [137, 143] cc => I
Apply:  Pos: [152, 171] cc => I
Apply:  Pos: [148, 158] cc => I
Apply:  Pos: [150, 156] cc => I
Apply:  Pos: [160, 167] cc => I
Apply:  Pos: [161, 172] cc => I
Apply:  Pos: [165, 173, 176] ccc => cc
Apply:  Pos: [166, 168] cc => I
Apply:  Pos: [169, 182, 188] ccc => cc
Apply:  Pos: [170, 177] cc => I
Apply:  Pos: [192, 197] cc => I
Apply:  Pos: [185, 198] cc => I
Apply:  Pos: [193, 199, 205] ccc => cc
Apply:  Pos: [187, 201] cc => I
Apply:  Pos: [191, 195, 200] ccc => cc
Apply:  Pos: [202, 214] cc => I
Apply:  Pos: [210, 217] cc => I
Apply:  Pos: [232, 244] cc => I
Apply:  Pos: [229, 245] cc => I
Apply:  Pos: [227, 231] cc => I
Apply:  Pos: [228, 243] cc => I
Apply:  Pos: [233, 249] cc => I
Apply:  Pos: [238, 248] cc => I
Apply:  Pos: [257, 260] cc => I
Apply:  Pos: [251, 258] cc => I
Apply:  Pos: [253, 262, 268] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 17], [9, 1], [4, 17], [6, 7], [19, 15], [2, 8], [17, 19], [10, 8], [17, 15], [17, 18], [15, 3], [0, 7], [9, 1], [4, 15], [17, 15], [11, 8], [5, 16], [10, 8], [17, 19], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [7, 17], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [8, 13], [2, 5], [17, 15], [10, 8], [5, 16], [13, 1], [14, 19], [11, 0], [6, 7], [15, 3], [10, 13], [8, 18], [3, 1], [13, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [5, 16], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 16], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [17, 18], [9, 1], [6, 17], [8, 16], [15, 3], [4, 14], [2, 8], [13, 3], [8, 13], [2, 5], [0, 10], [17, 18], [0, 16], [18, 19], [4, 14], [11, 10], [15, 3], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [12, 11], [4, 14], [16, 9], [18, 13], [0, 7], [4, 19], [10, 13], [7, 17], [5, 16], [14, 19], [13, 3], [2, 16], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [2, 5], [19, 15], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [12, 11], [0, 10], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  5.4051501750946045

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 18]
[12, 24]
[53, 69]
[92, 101]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[15, 16, 19]
[113, 116, 122]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[54, 59, 61]
[87, 89, 98]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[117, 120, 128]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 18]
[12, 24]
[53, 69]
[92, 101]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.922128200531006

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 18] cc => I, Pos: [7, 18] cc => I, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [15, 16, 19] ccc => cc, Pos: [53, 69] cc => I, Pos: [53, 69] cc => I, Pos: [54, 59, 61] ccc => cc, Pos: [87, 89, 98] ccc => cc, Pos: [92, 101] cc => I, Pos: [92, 101] cc => I, Pos: [113, 116, 122] ccc => cc, Pos: [117, 120, 128] ccc => cc]

--------End Timer [Generate Plans]:  0.015610694885253906

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 18] cc => I,
 Pos: [12, 24] cc => I,
 Pos: [15, 16, 19] ccc => cc,
 Pos: [53, 69] cc => I,
 Pos: [54, 59, 61] ccc => cc,
 Pos: [87, 89, 98] ccc => cc,
 Pos: [92, 101] cc => I,
 Pos: [113, 116, 122] ccc => cc,
 Pos: [117, 120, 128] ccc => cc]
Change: 9, Saving: 9

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 18] cc => I
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [15, 16, 19] ccc => cc
Apply:  Pos: [53, 69] cc => I
Apply:  Pos: [54, 59, 61] ccc => cc
Apply:  Pos: [87, 89, 98] ccc => cc
Apply:  Pos: [92, 101] cc => I
Apply:  Pos: [113, 116, 122] ccc => cc
Apply:  Pos: [117, 120, 128] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 17], [4, 17], [6, 7], [19, 15], [2, 8], [10, 8], [17, 18], [17, 3], [15, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [7, 17], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 15], [18, 13], [13, 3], [8, 16], [0, 10], [8, 13], [2, 5], [17, 15], [10, 8], [10, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 13], [10, 8], [9, 1], [5, 8], [18, 15], [13, 1], [2, 16], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [6, 17], [9, 1], [17, 18], [8, 16], [15, 3], [2, 8], [13, 3], [8, 13], [2, 5], [0, 10], [0, 16], [18, 19], [11, 10], [15, 3], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [12, 11], [4, 14], [16, 9], [18, 13], [0, 17], [4, 19], [10, 13], [7, 17], [2, 5], [14, 19], [13, 3], [5, 16], [15, 3], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [19, 15], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [12, 11], [0, 10], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [2, 16], [8, 16], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.9377388954162598

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[87, 106]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[44, 47, 48]
[105, 113, 117]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[87, 106]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6095759868621826

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [44, 47, 48] ccc => cc, Pos: [87, 106] cc => I, Pos: [87, 106] cc => I, Pos: [105, 113, 117] ccc => cc]

--------End Timer [Generate Plans]:  0.01563715934753418

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [44, 47, 48] ccc => cc,
 Pos: [87, 106] cc => I,
 Pos: [105, 113, 117] ccc => cc]
Change: 3, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [44, 47, 48] ccc => cc
Apply:  Pos: [87, 106] cc => I
Apply:  Pos: [105, 113, 117] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [4, 17], [6, 7], [6, 17], [19, 15], [10, 8], [2, 8], [17, 3], [17, 18], [15, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [7, 17], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [10, 8], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 16], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [6, 17], [9, 1], [17, 18], [8, 16], [15, 3], [2, 8], [13, 3], [8, 13], [0, 16], [0, 10], [18, 19], [11, 10], [15, 3], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [12, 11], [4, 14], [16, 9], [18, 13], [0, 17], [4, 19], [10, 13], [6, 7], [14, 19], [13, 3], [5, 16], [15, 3], [8, 18], [10, 13], [7, 17], [18, 13], [11, 10], [19, 15], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [12, 11], [0, 10], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.625213146209717

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[98, 106, 114]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.5470755100250244

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [98, 106, 114] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [98, 106, 114] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [98, 106, 114] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [4, 17], [6, 17], [6, 7], [19, 15], [2, 8], [10, 8], [17, 18], [15, 3], [17, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [7, 17], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 15], [18, 13], [13, 3], [8, 16], [0, 10], [10, 8], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 13], [10, 8], [9, 1], [5, 8], [18, 15], [13, 1], [2, 16], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [6, 17], [9, 1], [17, 18], [8, 16], [15, 3], [2, 8], [13, 3], [8, 13], [0, 10], [0, 16], [18, 19], [11, 10], [15, 3], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [12, 11], [4, 14], [5, 16], [18, 13], [0, 17], [4, 19], [10, 13], [6, 7], [14, 19], [13, 3], [16, 9], [15, 3], [8, 18], [10, 13], [7, 17], [18, 13], [11, 10], [19, 15], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [12, 11], [0, 10], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [2, 16], [8, 16], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.5470755100250244

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.5001907348632812

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 17], [4, 17], [6, 7], [19, 15], [10, 8], [2, 8], [17, 18], [17, 3], [15, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [7, 17], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [10, 8], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 16], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [6, 17], [9, 1], [17, 18], [8, 16], [15, 3], [2, 8], [13, 3], [8, 13], [0, 16], [0, 10], [18, 19], [11, 10], [15, 3], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [12, 11], [4, 14], [5, 16], [18, 13], [0, 17], [4, 19], [10, 13], [6, 7], [14, 19], [13, 3], [16, 9], [15, 3], [8, 18], [10, 13], [7, 17], [18, 13], [11, 10], [19, 15], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [12, 11], [0, 10], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.5158209800720215

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [147] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 294

Reduced: 
 - size: 123 (45.56%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09340310096740723

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 4], [9, 1], [4, 17], [6, 7], [19, 15], [0, 10], [5, 16], [9, 1], [2, 8], [6, 4], [5, 16], [17, 19], [18, 13], [0, 10], [9, 1], [18, 13], [10, 8], [17, 15], [12, 6], [7, 4], [9, 3], [17, 18], [7, 4], [12, 6], [11, 10], [2, 16], [9, 3], [18, 19], [4, 14], [15, 3], [0, 7], [11, 10], [9, 1], [2, 16], [4, 17], [17, 15], [11, 10], [3, 1], [18, 19], [0, 2], [4, 17], [5, 16], [0, 2], [10, 8], [17, 19], [11, 10], [3, 1], [6, 7], [8, 16], [18, 15], [6, 17], [2, 8], [4, 14], [10, 13], [18, 19], [11, 0], [7, 17], [15, 3], [2, 16], [11, 0], [13, 1], [18, 19], [10, 8], [12, 6], [7, 17], [11, 10], [18, 15], [5, 16], [0, 2], [12, 6], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 13], [17, 19], [9, 1], [11, 10], [0, 2], [12, 6], [18, 15], [13, 3], [9, 1], [17, 19], [11, 7], [8, 16], [0, 10], [8, 13], [11, 7], [12, 6], [5, 16], [17, 15], [10, 8], [2, 16], [13, 1], [14, 19], [11, 0], [6, 7], [15, 3], [10, 13], [6, 17], [2, 5], [8, 18], [3, 1], [13, 1], [18, 19], [12, 11], [5, 8], [4, 14], [0, 2], [13, 9], [14, 19], [5, 16], [0, 2], [7, 4], [10, 8], [10, 13], [9, 1], [6, 17], [5, 8], [7, 4], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [0, 7], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [0, 7], [18, 15], [10, 8], [17, 18], [9, 1], [11, 0], [2, 5], [7, 10], [6, 17], [9, 1], [8, 16], [15, 3], [4, 14], [7, 10], [2, 8], [11, 0], [13, 3], [7, 4], [15, 3], [8, 13], [2, 5], [0, 10], [18, 19], [12, 6], [7, 4], [12, 6], [0, 2], [5, 8], [9, 1], [15, 3], [17, 19], [4, 14], [11, 10], [17, 18], [5, 8], [15, 3], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [12, 11], [3, 1], [4, 14], [5, 8], [0, 2], [16, 9], [18, 13], [7, 17], [12, 11], [4, 14], [10, 13], [0, 7], [5, 16], [12, 11], [3, 1], [14, 19], [7, 17], [5, 8], [9, 1], [13, 3], [2, 16], [4, 14], [15, 3], [0, 7], [8, 18], [10, 13], [4, 14], [6, 17], [18, 13], [11, 10], [9, 1], [2, 5], [19, 15], [4, 14], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [11, 0], [7, 4], [13, 3], [17, 18], [11, 0], [5, 8], [12, 6], [7, 17], [13, 1], [14, 19], [0, 2], [5, 16], [18, 15], [17, 19], [12, 11], [0, 10], [7, 4], [5, 8], [13, 3], [18, 19], [7, 17], [5, 16], [12, 6], [10, 8], [17, 19], [2, 5], [18, 13], [6, 4], [9, 1], [8, 16], [12, 11], [17, 19], [2, 16], [12, 11], [3, 1], [8, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [8, 18], [5, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 13]
[12, 16]
[11, 19]
[13, 20]
[18, 21]
[25, 28]
[24, 29]
[26, 32]
[30, 37]
[20, 38]
[31, 39]
[37, 42]
[33, 44]
[45, 48]
[43, 52]
[34, 58]
[61, 65]
[60, 67]
[62, 70]
[69, 75]
[70, 77]
[75, 82]
[71, 87]
[74, 88]
[82, 89]
[86, 92]
[85, 93]
[94, 98]
[89, 99]
[119, 123]
[110, 128]
[124, 130]
[137, 143]
[147, 152]
[150, 156]
[148, 158]
[149, 163]
[160, 167]
[166, 168]
[152, 171]
[161, 172]
[170, 177]
[172, 178]
[184, 192]
[186, 193]
[192, 197]
[185, 198]
[187, 201]
[205, 210]
[202, 214]
[210, 217]
[223, 229]
[227, 231]
[228, 243]
[232, 244]
[229, 245]
[238, 248]
[233, 249]
[241, 257]
[251, 258]
[257, 260]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 8, 15]
[40, 41, 46]
[42, 49, 51]
[55, 63, 72]
[133, 141, 149]
[169, 182, 188]
[193, 199, 205]
[195, 200, 207]
[220, 224, 232]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[191, 195, 200]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 103, 111]
[165, 173, 176]
[253, 262, 268]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 13]
[12, 16]
[11, 19]
[13, 20]
[18, 21]
[25, 28]
[24, 29]
[26, 32]
[30, 37]
[20, 38]
[31, 39]
[37, 42]
[33, 44]
[45, 48]
[43, 52]
[34, 58]
[61, 65]
[60, 67]
[62, 70]
[69, 75]
[70, 77]
[75, 82]
[71, 87]
[74, 88]
[82, 89]
[86, 92]
[85, 93]
[94, 98]
[89, 99]
[119, 123]
[110, 128]
[124, 130]
[137, 143]
[147, 152]
[150, 156]
[148, 158]
[149, 163]
[160, 167]
[166, 168]
[152, 171]
[161, 172]
[170, 177]
[172, 178]
[184, 192]
[186, 193]
[192, 197]
[185, 198]
[187, 201]
[205, 210]
[202, 214]
[210, 217]
[223, 229]
[227, 231]
[228, 243]
[232, 244]
[229, 245]
[238, 248]
[233, 249]
[241, 257]
[251, 258]
[257, 260]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.265598773956299

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 8, 15] ccc => cc, Pos: [7, 13] cc => I, Pos: [7, 13] cc => I, Pos: [11, 19] cc => I, Pos: [11, 19] cc => I, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [13, 20] cc => I, Pos: [13, 20] cc => I, Pos: [18, 21] cc => I, Pos: [18, 21] cc => I, Pos: [20, 38] cc => I, Pos: [20, 38] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [25, 28] cc => I, Pos: [25, 28] cc => I, Pos: [26, 32] cc => I, Pos: [26, 32] cc => I, Pos: [30, 37] cc => I, Pos: [30, 37] cc => I, Pos: [31, 39] cc => I, Pos: [31, 39] cc => I, Pos: [33, 44] cc => I, Pos: [33, 44] cc => I, Pos: [34, 58] cc => I, Pos: [34, 58] cc => I, Pos: [37, 42] cc => I, Pos: [37, 42] cc => I, Pos: [40, 41, 46] ccc => cc, Pos: [42, 49, 51] ccc => cc, Pos: [43, 52] cc => I, Pos: [43, 52] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [55, 63, 72] ccc => cc, Pos: [60, 67] cc => I, Pos: [60, 67] cc => I, Pos: [61, 65] cc => I, Pos: [61, 65] cc => I, Pos: [62, 70] cc => I, Pos: [62, 70] cc => I, Pos: [69, 75] cc => I, Pos: [69, 75] cc => I, Pos: [70, 77] cc => I, Pos: [70, 77] cc => I, Pos: [71, 87] cc => I, Pos: [71, 87] cc => I, Pos: [74, 88] cc => I, Pos: [74, 88] cc => I, Pos: [75, 82] cc => I, Pos: [75, 82] cc => I, Pos: [82, 89] cc => I, Pos: [82, 89] cc => I, Pos: [85, 93] cc => I, Pos: [85, 93] cc => I, Pos: [86, 92] cc => I, Pos: [86, 92] cc => I, Pos: [89, 99] cc => I, Pos: [89, 99] cc => I, Pos: [94, 98] cc => I, Pos: [94, 98] cc => I, Pos: [100, 103, 111] ccc => cc, Pos: [110, 128] cc => I, Pos: [110, 128] cc => I, Pos: [119, 123] cc => I, Pos: [119, 123] cc => I, Pos: [124, 130] cc => I, Pos: [124, 130] cc => I, Pos: [133, 141, 149] ccc => cc, Pos: [137, 143] cc => I, Pos: [137, 143] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [148, 158] cc => I, Pos: [148, 158] cc => I, Pos: [149, 163] cc => I, Pos: [149, 163] cc => I, Pos: [150, 156] cc => I, Pos: [150, 156] cc => I, Pos: [152, 171] cc => I, Pos: [152, 171] cc => I, Pos: [160, 167] cc => I, Pos: [160, 167] cc => I, Pos: [161, 172] cc => I, Pos: [161, 172] cc => I, Pos: [165, 173, 176] ccc => cc, Pos: [166, 168] cc => I, Pos: [166, 168] cc => I, Pos: [169, 182, 188] ccc => cc, Pos: [170, 177] cc => I, Pos: [170, 177] cc => I, Pos: [172, 178] cc => I, Pos: [172, 178] cc => I, Pos: [184, 192] cc => I, Pos: [184, 192] cc => I, Pos: [185, 198] cc => I, Pos: [185, 198] cc => I, Pos: [186, 193] cc => I, Pos: [186, 193] cc => I, Pos: [187, 201] cc => I, Pos: [187, 201] cc => I, Pos: [191, 195, 200] ccc => cc, Pos: [192, 197] cc => I, Pos: [192, 197] cc => I, Pos: [193, 199, 205] ccc => cc, Pos: [195, 200, 207] ccc => cc, Pos: [202, 214] cc => I, Pos: [202, 214] cc => I, Pos: [205, 210] cc => I, Pos: [205, 210] cc => I, Pos: [210, 217] cc => I, Pos: [210, 217] cc => I, Pos: [220, 224, 232] ccc => cc, Pos: [223, 229] cc => I, Pos: [223, 229] cc => I, Pos: [227, 231] cc => I, Pos: [227, 231] cc => I, Pos: [228, 243] cc => I, Pos: [228, 243] cc => I, Pos: [229, 245] cc => I, Pos: [229, 245] cc => I, Pos: [232, 244] cc => I, Pos: [232, 244] cc => I, Pos: [233, 249] cc => I, Pos: [233, 249] cc => I, Pos: [238, 248] cc => I, Pos: [238, 248] cc => I, Pos: [241, 257] cc => I, Pos: [241, 257] cc => I, Pos: [251, 258] cc => I, Pos: [251, 258] cc => I, Pos: [253, 262, 268] ccc => cc, Pos: [257, 260] cc => I, Pos: [257, 260] cc => I]

--------End Timer [Generate Plans]:  0.156266450881958

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 8, 15] ccc => cc,
 Pos: [13, 20] cc => I,
 Pos: [11, 19] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [25, 28] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [37, 42] cc => I,
 Pos: [31, 39] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [34, 58] cc => I,
 Pos: [40, 41, 46] ccc => cc,
 Pos: [43, 52] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [55, 63, 72] ccc => cc,
 Pos: [60, 67] cc => I,
 Pos: [61, 65] cc => I,
 Pos: [70, 77] cc => I,
 Pos: [69, 75] cc => I,
 Pos: [71, 87] cc => I,
 Pos: [74, 88] cc => I,
 Pos: [89, 99] cc => I,
 Pos: [85, 93] cc => I,
 Pos: [86, 92] cc => I,
 Pos: [94, 98] cc => I,
 Pos: [100, 103, 111] ccc => cc,
 Pos: [110, 128] cc => I,
 Pos: [119, 123] cc => I,
 Pos: [124, 130] cc => I,
 Pos: [149, 163] cc => I,
 Pos: [137, 143] cc => I,
 Pos: [147, 152] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [160, 167] cc => I,
 Pos: [172, 178] cc => I,
 Pos: [165, 173, 176] ccc => cc,
 Pos: [166, 168] cc => I,
 Pos: [169, 182, 188] ccc => cc,
 Pos: [170, 177] cc => I,
 Pos: [184, 192] cc => I,
 Pos: [185, 198] cc => I,
 Pos: [186, 193] cc => I,
 Pos: [187, 201] cc => I,
 Pos: [191, 195, 200] ccc => cc,
 Pos: [202, 214] cc => I,
 Pos: [210, 217] cc => I,
 Pos: [220, 224, 232] ccc => cc,
 Pos: [229, 245] cc => I,
 Pos: [227, 231] cc => I,
 Pos: [228, 243] cc => I,
 Pos: [233, 249] cc => I,
 Pos: [238, 248] cc => I,
 Pos: [257, 260] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [253, 262, 268] ccc => cc]
Change: 57, Saving: 59

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 8, 15] ccc => cc
Apply:  Pos: [13, 20] cc => I
Apply:  Pos: [11, 19] cc => I
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [18, 21] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [25, 28] cc => I
Apply:  Pos: [26, 32] cc => I
Apply:  Pos: [37, 42] cc => I
Apply:  Pos: [31, 39] cc => I
Apply:  Pos: [33, 44] cc => I
Apply:  Pos: [34, 58] cc => I
Apply:  Pos: [40, 41, 46] ccc => cc
Apply:  Pos: [43, 52] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [55, 63, 72] ccc => cc
Apply:  Pos: [60, 67] cc => I
Apply:  Pos: [61, 65] cc => I
Apply:  Pos: [70, 77] cc => I
Apply:  Pos: [69, 75] cc => I
Apply:  Pos: [71, 87] cc => I
Apply:  Pos: [74, 88] cc => I
Apply:  Pos: [89, 99] cc => I
Apply:  Pos: [85, 93] cc => I
Apply:  Pos: [86, 92] cc => I
Apply:  Pos: [94, 98] cc => I
Apply:  Pos: [100, 103, 111] ccc => cc
Apply:  Pos: [110, 128] cc => I
Apply:  Pos: [119, 123] cc => I
Apply:  Pos: [124, 130] cc => I
Apply:  Pos: [149, 163] cc => I
Apply:  Pos: [137, 143] cc => I
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [148, 158] cc => I
Apply:  Pos: [150, 156] cc => I
Apply:  Pos: [160, 167] cc => I
Apply:  Pos: [172, 178] cc => I
Apply:  Pos: [165, 173, 176] ccc => cc
Apply:  Pos: [166, 168] cc => I
Apply:  Pos: [169, 182, 188] ccc => cc
Apply:  Pos: [170, 177] cc => I
Apply:  Pos: [184, 192] cc => I
Apply:  Pos: [185, 198] cc => I
Apply:  Pos: [186, 193] cc => I
Apply:  Pos: [187, 201] cc => I
Apply:  Pos: [191, 195, 200] ccc => cc
Apply:  Pos: [202, 214] cc => I
Apply:  Pos: [210, 217] cc => I
Apply:  Pos: [220, 224, 232] ccc => cc
Apply:  Pos: [229, 245] cc => I
Apply:  Pos: [227, 231] cc => I
Apply:  Pos: [228, 243] cc => I
Apply:  Pos: [233, 249] cc => I
Apply:  Pos: [238, 248] cc => I
Apply:  Pos: [257, 260] cc => I
Apply:  Pos: [251, 258] cc => I
Apply:  Pos: [253, 262, 268] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 17], [9, 1], [4, 17], [6, 7], [19, 15], [2, 8], [17, 19], [10, 8], [17, 15], [17, 18], [11, 10], [15, 3], [0, 7], [9, 1], [4, 15], [17, 15], [5, 16], [10, 8], [17, 19], [11, 10], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [7, 17], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [8, 13], [2, 5], [17, 15], [10, 8], [5, 16], [13, 1], [14, 19], [11, 0], [6, 7], [15, 3], [10, 13], [8, 18], [3, 1], [13, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [5, 16], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [17, 18], [6, 17], [8, 16], [15, 3], [4, 14], [2, 8], [13, 3], [15, 3], [8, 13], [0, 10], [17, 18], [0, 16], [9, 1], [18, 19], [4, 14], [11, 10], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [16, 9], [18, 13], [0, 7], [10, 13], [7, 17], [5, 16], [12, 11], [14, 19], [13, 3], [2, 16], [4, 14], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [2, 5], [19, 15], [6, 7], [16, 9], [5, 16], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [12, 11], [0, 10], [5, 8], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  5.421865224838257

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 19]
[12, 24]
[54, 70]
[91, 94]
[92, 102]
[105, 116]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[15, 17, 20]
[16, 23, 25]
[104, 106, 111]
[111, 113, 121]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[13, 16, 23]
[55, 60, 62]
[88, 89, 98]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[114, 118, 127]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 19]
[12, 24]
[54, 70]
[91, 94]
[92, 102]
[105, 116]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.907074451446533

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 19] cc => I, Pos: [7, 19] cc => I, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [13, 16, 23] ccc => cc, Pos: [15, 17, 20] ccc => cc, Pos: [16, 23, 25] ccc => cc, Pos: [54, 70] cc => I, Pos: [54, 70] cc => I, Pos: [55, 60, 62] ccc => cc, Pos: [88, 89, 98] ccc => cc, Pos: [91, 94] cc => I, Pos: [91, 94] cc => I, Pos: [92, 102] cc => I, Pos: [92, 102] cc => I, Pos: [104, 106, 111] ccc => cc, Pos: [105, 116] cc => I, Pos: [105, 116] cc => I, Pos: [111, 113, 121] ccc => cc, Pos: [114, 118, 127] ccc => cc]

--------End Timer [Generate Plans]:  0.030644893646240234

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 19] cc => I,
 Pos: [12, 24] cc => I,
 Pos: [13, 16, 23] ccc => cc,
 Pos: [15, 17, 20] ccc => cc,
 Pos: [54, 70] cc => I,
 Pos: [55, 60, 62] ccc => cc,
 Pos: [88, 89, 98] ccc => cc,
 Pos: [91, 94] cc => I,
 Pos: [92, 102] cc => I,
 Pos: [111, 113, 121] ccc => cc,
 Pos: [105, 116] cc => I,
 Pos: [114, 118, 127] ccc => cc]
Change: 12, Saving: 13

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 19] cc => I
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [13, 16, 23] ccc => cc
Apply:  Pos: [15, 17, 20] ccc => cc
Apply:  Pos: [54, 70] cc => I
Apply:  Pos: [55, 60, 62] ccc => cc
Apply:  Pos: [88, 89, 98] ccc => cc
Apply:  Pos: [91, 94] cc => I
Apply:  Pos: [92, 102] cc => I
Apply:  Pos: [111, 113, 121] ccc => cc
Apply:  Pos: [105, 116] cc => I
Apply:  Pos: [114, 118, 127] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 17], [4, 17], [6, 7], [19, 15], [2, 8], [11, 10], [17, 18], [17, 3], [10, 8], [15, 3], [0, 7], [4, 15], [5, 16], [11, 10], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [7, 17], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 15], [18, 13], [13, 3], [8, 16], [0, 10], [8, 13], [2, 5], [17, 15], [10, 8], [10, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 13], [10, 8], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [2, 8], [13, 3], [8, 13], [0, 10], [0, 16], [9, 1], [18, 19], [11, 10], [0, 7], [7, 4], [2, 16], [10, 8], [16, 9], [18, 13], [0, 17], [10, 13], [7, 17], [2, 5], [12, 11], [13, 3], [5, 16], [4, 14], [15, 3], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [19, 15], [6, 7], [16, 9], [5, 16], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [12, 11], [0, 10], [5, 8], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [2, 16], [8, 16], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.9377193450927734

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 14, 19]
[102, 112, 113]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[44, 47, 48]
[98, 107, 111]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4843175411224365

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [11, 14, 19] ccc => cc, Pos: [44, 47, 48] ccc => cc, Pos: [98, 107, 111] ccc => cc, Pos: [102, 112, 113] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 11] cc => I,
 Pos: [44, 47, 48] ccc => cc,
 Pos: [98, 107, 111] ccc => cc,
 Pos: [102, 112, 113] ccc => cc]
Change: 4, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [44, 47, 48] ccc => cc
Apply:  Pos: [98, 107, 111] ccc => cc
Apply:  Pos: [102, 112, 113] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [4, 17], [6, 7], [6, 17], [19, 15], [2, 8], [17, 3], [17, 18], [10, 8], [15, 3], [0, 7], [4, 15], [5, 16], [11, 10], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [7, 17], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [10, 8], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [2, 8], [13, 3], [8, 13], [0, 16], [0, 10], [9, 1], [18, 19], [11, 10], [0, 7], [7, 4], [2, 16], [10, 8], [16, 9], [18, 13], [0, 17], [10, 13], [6, 7], [2, 5], [12, 11], [13, 3], [5, 9], [4, 14], [15, 3], [8, 18], [10, 13], [7, 17], [18, 13], [11, 10], [19, 15], [16, 9], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [12, 11], [0, 10], [5, 8], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.4843175411224365

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3905766010284424

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [4, 17], [6, 17], [6, 7], [19, 15], [2, 8], [17, 18], [17, 3], [10, 8], [15, 3], [0, 7], [4, 15], [5, 16], [11, 10], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [7, 17], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 15], [18, 13], [13, 3], [8, 16], [0, 10], [10, 8], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 13], [10, 8], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [2, 8], [13, 3], [8, 13], [0, 10], [0, 16], [9, 1], [18, 19], [11, 10], [0, 7], [7, 4], [2, 16], [10, 8], [16, 9], [18, 13], [0, 17], [10, 13], [6, 7], [2, 5], [12, 11], [13, 3], [5, 9], [4, 14], [15, 3], [8, 18], [10, 13], [7, 17], [18, 13], [11, 10], [19, 15], [16, 9], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [12, 11], [0, 10], [5, 8], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [2, 16], [8, 16], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.3905766010284424

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [142] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 284

Reduced: 
 - size: 128 (47.41%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10937237739562988

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 4], [9, 1], [4, 17], [6, 7], [19, 15], [0, 10], [5, 16], [9, 1], [2, 8], [6, 4], [5, 16], [17, 19], [18, 13], [0, 10], [9, 1], [18, 13], [10, 8], [17, 15], [12, 6], [7, 4], [9, 3], [17, 18], [7, 4], [12, 6], [11, 10], [2, 16], [9, 3], [18, 19], [4, 14], [15, 3], [0, 7], [11, 10], [9, 1], [2, 16], [4, 17], [17, 15], [11, 10], [3, 1], [18, 19], [0, 2], [4, 17], [5, 16], [0, 2], [10, 8], [17, 19], [11, 10], [3, 1], [6, 7], [8, 16], [18, 15], [6, 17], [2, 8], [4, 14], [10, 13], [18, 19], [11, 0], [7, 17], [15, 3], [2, 16], [11, 0], [13, 1], [18, 19], [10, 8], [12, 6], [7, 17], [11, 10], [18, 15], [5, 16], [0, 2], [12, 6], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 13], [17, 19], [9, 1], [11, 10], [0, 2], [12, 6], [18, 15], [13, 3], [9, 1], [17, 19], [11, 7], [8, 16], [0, 10], [8, 13], [11, 7], [12, 6], [5, 16], [17, 15], [10, 8], [2, 16], [13, 1], [14, 19], [11, 0], [6, 7], [15, 3], [10, 13], [6, 17], [2, 5], [8, 18], [3, 1], [13, 1], [18, 19], [12, 11], [5, 8], [4, 14], [0, 2], [13, 9], [14, 19], [5, 16], [0, 2], [7, 4], [10, 8], [10, 13], [9, 1], [6, 17], [5, 8], [7, 4], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [0, 7], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [0, 7], [18, 15], [10, 8], [17, 18], [9, 1], [11, 0], [2, 5], [7, 10], [6, 17], [9, 1], [8, 16], [15, 3], [4, 14], [7, 10], [2, 8], [11, 0], [13, 3], [7, 4], [15, 3], [8, 13], [2, 5], [0, 10], [18, 19], [12, 6], [7, 4], [12, 6], [0, 2], [5, 8], [9, 1], [15, 3], [17, 19], [4, 14], [11, 10], [17, 18], [5, 8], [15, 3], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [12, 11], [3, 1], [4, 14], [5, 8], [0, 2], [16, 9], [18, 13], [7, 17], [12, 11], [4, 14], [10, 13], [0, 7], [5, 16], [12, 11], [3, 1], [14, 19], [7, 17], [5, 8], [9, 1], [13, 3], [2, 16], [4, 14], [15, 3], [0, 7], [8, 18], [10, 13], [4, 14], [6, 17], [18, 13], [11, 10], [9, 1], [2, 5], [19, 15], [4, 14], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [11, 0], [7, 4], [13, 3], [17, 18], [11, 0], [5, 8], [12, 6], [7, 17], [13, 1], [14, 19], [0, 2], [5, 16], [18, 15], [17, 19], [12, 11], [0, 10], [7, 4], [5, 8], [13, 3], [18, 19], [7, 17], [5, 16], [12, 6], [10, 8], [17, 19], [2, 5], [18, 13], [6, 4], [9, 1], [8, 16], [12, 11], [17, 19], [2, 16], [12, 11], [3, 1], [8, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [8, 18], [5, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 13]
[12, 16]
[11, 19]
[13, 20]
[18, 21]
[25, 28]
[24, 29]
[26, 32]
[30, 37]
[20, 38]
[31, 39]
[37, 42]
[33, 44]
[45, 48]
[43, 52]
[34, 58]
[61, 65]
[60, 67]
[62, 70]
[69, 75]
[70, 77]
[75, 82]
[71, 87]
[74, 88]
[82, 89]
[86, 92]
[85, 93]
[94, 98]
[89, 99]
[119, 123]
[110, 128]
[124, 130]
[137, 143]
[147, 152]
[150, 156]
[148, 158]
[149, 163]
[160, 167]
[166, 168]
[152, 171]
[161, 172]
[170, 177]
[172, 178]
[184, 192]
[186, 193]
[192, 197]
[185, 198]
[187, 201]
[205, 210]
[202, 214]
[210, 217]
[223, 229]
[227, 231]
[228, 243]
[232, 244]
[229, 245]
[238, 248]
[233, 249]
[241, 257]
[251, 258]
[257, 260]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 8, 15]
[40, 41, 46]
[42, 49, 51]
[55, 63, 72]
[133, 141, 149]
[169, 182, 188]
[193, 199, 205]
[195, 200, 207]
[220, 224, 232]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[191, 195, 200]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 103, 111]
[165, 173, 176]
[253, 262, 268]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 13]
[12, 16]
[11, 19]
[13, 20]
[18, 21]
[25, 28]
[24, 29]
[26, 32]
[30, 37]
[20, 38]
[31, 39]
[37, 42]
[33, 44]
[45, 48]
[43, 52]
[34, 58]
[61, 65]
[60, 67]
[62, 70]
[69, 75]
[70, 77]
[75, 82]
[71, 87]
[74, 88]
[82, 89]
[86, 92]
[85, 93]
[94, 98]
[89, 99]
[119, 123]
[110, 128]
[124, 130]
[137, 143]
[147, 152]
[150, 156]
[148, 158]
[149, 163]
[160, 167]
[166, 168]
[152, 171]
[161, 172]
[170, 177]
[172, 178]
[184, 192]
[186, 193]
[192, 197]
[185, 198]
[187, 201]
[205, 210]
[202, 214]
[210, 217]
[223, 229]
[227, 231]
[228, 243]
[232, 244]
[229, 245]
[238, 248]
[233, 249]
[241, 257]
[251, 258]
[257, 260]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.2032790184021

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 8, 15] ccc => cc, Pos: [7, 13] cc => I, Pos: [7, 13] cc => I, Pos: [11, 19] cc => I, Pos: [11, 19] cc => I, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [13, 20] cc => I, Pos: [13, 20] cc => I, Pos: [18, 21] cc => I, Pos: [18, 21] cc => I, Pos: [20, 38] cc => I, Pos: [20, 38] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [25, 28] cc => I, Pos: [25, 28] cc => I, Pos: [26, 32] cc => I, Pos: [26, 32] cc => I, Pos: [30, 37] cc => I, Pos: [30, 37] cc => I, Pos: [31, 39] cc => I, Pos: [31, 39] cc => I, Pos: [33, 44] cc => I, Pos: [33, 44] cc => I, Pos: [34, 58] cc => I, Pos: [34, 58] cc => I, Pos: [37, 42] cc => I, Pos: [37, 42] cc => I, Pos: [40, 41, 46] ccc => cc, Pos: [42, 49, 51] ccc => cc, Pos: [43, 52] cc => I, Pos: [43, 52] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [55, 63, 72] ccc => cc, Pos: [60, 67] cc => I, Pos: [60, 67] cc => I, Pos: [61, 65] cc => I, Pos: [61, 65] cc => I, Pos: [62, 70] cc => I, Pos: [62, 70] cc => I, Pos: [69, 75] cc => I, Pos: [69, 75] cc => I, Pos: [70, 77] cc => I, Pos: [70, 77] cc => I, Pos: [71, 87] cc => I, Pos: [71, 87] cc => I, Pos: [74, 88] cc => I, Pos: [74, 88] cc => I, Pos: [75, 82] cc => I, Pos: [75, 82] cc => I, Pos: [82, 89] cc => I, Pos: [82, 89] cc => I, Pos: [85, 93] cc => I, Pos: [85, 93] cc => I, Pos: [86, 92] cc => I, Pos: [86, 92] cc => I, Pos: [89, 99] cc => I, Pos: [89, 99] cc => I, Pos: [94, 98] cc => I, Pos: [94, 98] cc => I, Pos: [100, 103, 111] ccc => cc, Pos: [110, 128] cc => I, Pos: [110, 128] cc => I, Pos: [119, 123] cc => I, Pos: [119, 123] cc => I, Pos: [124, 130] cc => I, Pos: [124, 130] cc => I, Pos: [133, 141, 149] ccc => cc, Pos: [137, 143] cc => I, Pos: [137, 143] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [148, 158] cc => I, Pos: [148, 158] cc => I, Pos: [149, 163] cc => I, Pos: [149, 163] cc => I, Pos: [150, 156] cc => I, Pos: [150, 156] cc => I, Pos: [152, 171] cc => I, Pos: [152, 171] cc => I, Pos: [160, 167] cc => I, Pos: [160, 167] cc => I, Pos: [161, 172] cc => I, Pos: [161, 172] cc => I, Pos: [165, 173, 176] ccc => cc, Pos: [166, 168] cc => I, Pos: [166, 168] cc => I, Pos: [169, 182, 188] ccc => cc, Pos: [170, 177] cc => I, Pos: [170, 177] cc => I, Pos: [172, 178] cc => I, Pos: [172, 178] cc => I, Pos: [184, 192] cc => I, Pos: [184, 192] cc => I, Pos: [185, 198] cc => I, Pos: [185, 198] cc => I, Pos: [186, 193] cc => I, Pos: [186, 193] cc => I, Pos: [187, 201] cc => I, Pos: [187, 201] cc => I, Pos: [191, 195, 200] ccc => cc, Pos: [192, 197] cc => I, Pos: [192, 197] cc => I, Pos: [193, 199, 205] ccc => cc, Pos: [195, 200, 207] ccc => cc, Pos: [202, 214] cc => I, Pos: [202, 214] cc => I, Pos: [205, 210] cc => I, Pos: [205, 210] cc => I, Pos: [210, 217] cc => I, Pos: [210, 217] cc => I, Pos: [220, 224, 232] ccc => cc, Pos: [223, 229] cc => I, Pos: [223, 229] cc => I, Pos: [227, 231] cc => I, Pos: [227, 231] cc => I, Pos: [228, 243] cc => I, Pos: [228, 243] cc => I, Pos: [229, 245] cc => I, Pos: [229, 245] cc => I, Pos: [232, 244] cc => I, Pos: [232, 244] cc => I, Pos: [233, 249] cc => I, Pos: [233, 249] cc => I, Pos: [238, 248] cc => I, Pos: [238, 248] cc => I, Pos: [241, 257] cc => I, Pos: [241, 257] cc => I, Pos: [251, 258] cc => I, Pos: [251, 258] cc => I, Pos: [253, 262, 268] ccc => cc, Pos: [257, 260] cc => I, Pos: [257, 260] cc => I]

--------End Timer [Generate Plans]:  0.14042210578918457

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 8, 15] ccc => cc,
 Pos: [7, 13] cc => I,
 Pos: [11, 19] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [20, 38] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [25, 28] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [31, 39] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [34, 58] cc => I,
 Pos: [40, 41, 46] ccc => cc,
 Pos: [42, 49, 51] ccc => cc,
 Pos: [43, 52] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [55, 63, 72] ccc => cc,
 Pos: [60, 67] cc => I,
 Pos: [61, 65] cc => I,
 Pos: [70, 77] cc => I,
 Pos: [75, 82] cc => I,
 Pos: [71, 87] cc => I,
 Pos: [74, 88] cc => I,
 Pos: [85, 93] cc => I,
 Pos: [86, 92] cc => I,
 Pos: [89, 99] cc => I,
 Pos: [94, 98] cc => I,
 Pos: [100, 103, 111] ccc => cc,
 Pos: [110, 128] cc => I,
 Pos: [119, 123] cc => I,
 Pos: [124, 130] cc => I,
 Pos: [149, 163] cc => I,
 Pos: [137, 143] cc => I,
 Pos: [152, 171] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [160, 167] cc => I,
 Pos: [172, 178] cc => I,
 Pos: [165, 173, 176] ccc => cc,
 Pos: [166, 168] cc => I,
 Pos: [169, 182, 188] ccc => cc,
 Pos: [170, 177] cc => I,
 Pos: [192, 197] cc => I,
 Pos: [185, 198] cc => I,
 Pos: [186, 193] cc => I,
 Pos: [187, 201] cc => I,
 Pos: [191, 195, 200] ccc => cc,
 Pos: [202, 214] cc => I,
 Pos: [210, 217] cc => I,
 Pos: [232, 244] cc => I,
 Pos: [229, 245] cc => I,
 Pos: [227, 231] cc => I,
 Pos: [228, 243] cc => I,
 Pos: [233, 249] cc => I,
 Pos: [238, 248] cc => I,
 Pos: [257, 260] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [253, 262, 268] ccc => cc]
Change: 59, Saving: 61

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 8, 15] ccc => cc
Apply:  Pos: [7, 13] cc => I
Apply:  Pos: [11, 19] cc => I
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [18, 21] cc => I
Apply:  Pos: [20, 38] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [25, 28] cc => I
Apply:  Pos: [26, 32] cc => I
Apply:  Pos: [30, 37] cc => I
Apply:  Pos: [31, 39] cc => I
Apply:  Pos: [33, 44] cc => I
Apply:  Pos: [34, 58] cc => I
Apply:  Pos: [40, 41, 46] ccc => cc
Apply:  Pos: [42, 49, 51] ccc => cc
Apply:  Pos: [43, 52] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [55, 63, 72] ccc => cc
Apply:  Pos: [60, 67] cc => I
Apply:  Pos: [61, 65] cc => I
Apply:  Pos: [70, 77] cc => I
Apply:  Pos: [75, 82] cc => I
Apply:  Pos: [71, 87] cc => I
Apply:  Pos: [74, 88] cc => I
Apply:  Pos: [85, 93] cc => I
Apply:  Pos: [86, 92] cc => I
Apply:  Pos: [89, 99] cc => I
Apply:  Pos: [94, 98] cc => I
Apply:  Pos: [100, 103, 111] ccc => cc
Apply:  Pos: [110, 128] cc => I
Apply:  Pos: [119, 123] cc => I
Apply:  Pos: [124, 130] cc => I
Apply:  Pos: [149, 163] cc => I
Apply:  Pos: [137, 143] cc => I
Apply:  Pos: [152, 171] cc => I
Apply:  Pos: [148, 158] cc => I
Apply:  Pos: [150, 156] cc => I
Apply:  Pos: [160, 167] cc => I
Apply:  Pos: [172, 178] cc => I
Apply:  Pos: [165, 173, 176] ccc => cc
Apply:  Pos: [166, 168] cc => I
Apply:  Pos: [169, 182, 188] ccc => cc
Apply:  Pos: [170, 177] cc => I
Apply:  Pos: [192, 197] cc => I
Apply:  Pos: [185, 198] cc => I
Apply:  Pos: [186, 193] cc => I
Apply:  Pos: [187, 201] cc => I
Apply:  Pos: [191, 195, 200] ccc => cc
Apply:  Pos: [202, 214] cc => I
Apply:  Pos: [210, 217] cc => I
Apply:  Pos: [232, 244] cc => I
Apply:  Pos: [229, 245] cc => I
Apply:  Pos: [227, 231] cc => I
Apply:  Pos: [228, 243] cc => I
Apply:  Pos: [233, 249] cc => I
Apply:  Pos: [238, 248] cc => I
Apply:  Pos: [257, 260] cc => I
Apply:  Pos: [251, 258] cc => I
Apply:  Pos: [253, 262, 268] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.01562356948852539

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 17], [4, 17], [6, 7], [19, 15], [2, 8], [17, 19], [10, 8], [17, 15], [17, 18], [15, 3], [0, 7], [4, 15], [17, 15], [11, 8], [5, 16], [10, 8], [17, 19], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [7, 17], [15, 3], [2, 16], [13, 1], [10, 8], [12, 6], [5, 16], [14, 19], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [8, 13], [2, 5], [17, 15], [10, 8], [5, 16], [13, 1], [14, 19], [11, 0], [6, 7], [15, 3], [10, 13], [8, 18], [3, 1], [13, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [5, 16], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [17, 18], [9, 1], [6, 17], [8, 16], [15, 3], [4, 14], [2, 8], [13, 3], [15, 3], [8, 13], [0, 10], [17, 18], [0, 16], [18, 19], [4, 14], [11, 10], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [12, 11], [16, 9], [18, 13], [0, 7], [10, 13], [7, 17], [5, 16], [14, 19], [13, 3], [2, 16], [4, 14], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [2, 5], [19, 15], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [12, 11], [0, 10], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  5.35932469367981

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 22]
[51, 67]
[89, 92]
[90, 99]
[102, 113]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[14, 15, 17]
[101, 103, 109]
[109, 111, 118]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[52, 57, 59]
[85, 87, 96]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[112, 115, 124]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 22]
[51, 67]
[89, 92]
[90, 99]
[102, 113]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7968578338623047

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 22] cc => I, Pos: [11, 22] cc => I, Pos: [14, 15, 17] ccc => cc, Pos: [51, 67] cc => I, Pos: [51, 67] cc => I, Pos: [52, 57, 59] ccc => cc, Pos: [85, 87, 96] ccc => cc, Pos: [89, 92] cc => I, Pos: [89, 92] cc => I, Pos: [90, 99] cc => I, Pos: [90, 99] cc => I, Pos: [101, 103, 109] ccc => cc, Pos: [102, 113] cc => I, Pos: [102, 113] cc => I, Pos: [109, 111, 118] ccc => cc, Pos: [112, 115, 124] ccc => cc]

--------End Timer [Generate Plans]:  0.01561880111694336

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 22] cc => I,
 Pos: [14, 15, 17] ccc => cc,
 Pos: [51, 67] cc => I,
 Pos: [52, 57, 59] ccc => cc,
 Pos: [85, 87, 96] ccc => cc,
 Pos: [89, 92] cc => I,
 Pos: [90, 99] cc => I,
 Pos: [109, 111, 118] ccc => cc,
 Pos: [102, 113] cc => I,
 Pos: [112, 115, 124] ccc => cc]
Change: 10, Saving: 11

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 22] cc => I
Apply:  Pos: [14, 15, 17] ccc => cc
Apply:  Pos: [51, 67] cc => I
Apply:  Pos: [52, 57, 59] ccc => cc
Apply:  Pos: [85, 87, 96] ccc => cc
Apply:  Pos: [89, 92] cc => I
Apply:  Pos: [90, 99] cc => I
Apply:  Pos: [109, 111, 118] ccc => cc
Apply:  Pos: [102, 113] cc => I
Apply:  Pos: [112, 115, 124] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [4, 17], [6, 7], [6, 17], [19, 15], [2, 8], [10, 8], [17, 18], [17, 3], [15, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [7, 17], [15, 3], [2, 16], [13, 1], [10, 8], [12, 6], [5, 16], [14, 19], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 15], [18, 13], [13, 3], [8, 16], [0, 10], [8, 13], [2, 5], [17, 15], [10, 8], [10, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 13], [10, 8], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [6, 17], [9, 1], [17, 18], [8, 16], [2, 8], [13, 3], [8, 13], [0, 10], [0, 16], [18, 19], [11, 10], [0, 7], [7, 4], [2, 16], [10, 8], [12, 11], [16, 9], [18, 13], [0, 17], [10, 13], [7, 17], [2, 5], [13, 3], [5, 16], [4, 14], [15, 3], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [19, 15], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [12, 11], [0, 10], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [2, 16], [8, 16], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.812476634979248

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[44, 47, 48]
[99, 107, 111]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.531294107437134

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [44, 47, 48] ccc => cc, Pos: [99, 107, 111] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [44, 47, 48] ccc => cc, Pos: [99, 107, 111] ccc => cc]
Change: 2, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [44, 47, 48] ccc => cc
Apply:  Pos: [99, 107, 111] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [4, 17], [6, 17], [6, 7], [19, 15], [10, 8], [2, 8], [17, 3], [17, 18], [15, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [7, 17], [15, 3], [2, 16], [13, 1], [10, 8], [12, 6], [5, 16], [14, 19], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [10, 8], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [6, 17], [9, 1], [17, 18], [8, 16], [2, 8], [13, 3], [8, 13], [0, 16], [0, 10], [18, 19], [11, 10], [0, 7], [7, 4], [2, 16], [10, 8], [12, 11], [16, 9], [18, 13], [0, 17], [10, 13], [6, 7], [2, 5], [13, 3], [5, 16], [4, 14], [15, 3], [8, 18], [10, 13], [7, 17], [18, 13], [11, 10], [19, 15], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [12, 11], [0, 10], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.531294107437134

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.421905755996704

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 17], [4, 17], [6, 7], [19, 15], [2, 8], [10, 8], [17, 18], [15, 3], [17, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [7, 17], [15, 3], [2, 16], [13, 1], [10, 8], [12, 6], [5, 16], [14, 19], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 15], [18, 13], [13, 3], [8, 16], [0, 10], [10, 8], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 13], [10, 8], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [6, 17], [9, 1], [17, 18], [8, 16], [2, 8], [13, 3], [8, 13], [0, 10], [0, 16], [18, 19], [11, 10], [0, 7], [7, 4], [2, 16], [10, 8], [12, 11], [16, 9], [18, 13], [0, 17], [10, 13], [6, 7], [2, 5], [13, 3], [5, 16], [4, 14], [15, 3], [8, 18], [10, 13], [7, 17], [18, 13], [11, 10], [19, 15], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [12, 11], [0, 10], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [2, 16], [8, 16], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.421905755996704

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [144] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 288

Reduced: 
 - size: 126 (46.67%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374356269836426

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 4], [9, 1], [4, 17], [6, 7], [19, 15], [0, 10], [5, 16], [9, 1], [2, 8], [6, 4], [5, 16], [17, 19], [18, 13], [0, 10], [9, 1], [18, 13], [10, 8], [17, 15], [12, 6], [7, 4], [9, 3], [17, 18], [7, 4], [12, 6], [11, 10], [2, 16], [9, 3], [18, 19], [4, 14], [15, 3], [0, 7], [11, 10], [9, 1], [2, 16], [4, 17], [17, 15], [11, 10], [3, 1], [18, 19], [0, 2], [4, 17], [5, 16], [0, 2], [10, 8], [17, 19], [11, 10], [3, 1], [6, 7], [8, 16], [18, 15], [6, 17], [2, 8], [4, 14], [10, 13], [18, 19], [11, 0], [7, 17], [15, 3], [2, 16], [11, 0], [13, 1], [18, 19], [10, 8], [12, 6], [7, 17], [11, 10], [18, 15], [5, 16], [0, 2], [12, 6], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 13], [17, 19], [9, 1], [11, 10], [0, 2], [12, 6], [18, 15], [13, 3], [9, 1], [17, 19], [11, 7], [8, 16], [0, 10], [8, 13], [11, 7], [12, 6], [5, 16], [17, 15], [10, 8], [2, 16], [13, 1], [14, 19], [11, 0], [6, 7], [15, 3], [10, 13], [6, 17], [2, 5], [8, 18], [3, 1], [13, 1], [18, 19], [12, 11], [5, 8], [4, 14], [0, 2], [13, 9], [14, 19], [5, 16], [0, 2], [7, 4], [10, 8], [10, 13], [9, 1], [6, 17], [5, 8], [7, 4], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [0, 7], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [0, 7], [18, 15], [10, 8], [17, 18], [9, 1], [11, 0], [2, 5], [7, 10], [6, 17], [9, 1], [8, 16], [15, 3], [4, 14], [7, 10], [2, 8], [11, 0], [13, 3], [7, 4], [15, 3], [8, 13], [2, 5], [0, 10], [18, 19], [12, 6], [7, 4], [12, 6], [0, 2], [5, 8], [9, 1], [15, 3], [17, 19], [4, 14], [11, 10], [17, 18], [5, 8], [15, 3], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [12, 11], [3, 1], [4, 14], [5, 8], [0, 2], [16, 9], [18, 13], [7, 17], [12, 11], [4, 14], [10, 13], [0, 7], [5, 16], [12, 11], [3, 1], [14, 19], [7, 17], [5, 8], [9, 1], [13, 3], [2, 16], [4, 14], [15, 3], [0, 7], [8, 18], [10, 13], [4, 14], [6, 17], [18, 13], [11, 10], [9, 1], [2, 5], [19, 15], [4, 14], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [11, 0], [7, 4], [13, 3], [17, 18], [11, 0], [5, 8], [12, 6], [7, 17], [13, 1], [14, 19], [0, 2], [5, 16], [18, 15], [17, 19], [12, 11], [0, 10], [7, 4], [5, 8], [13, 3], [18, 19], [7, 17], [5, 16], [12, 6], [10, 8], [17, 19], [2, 5], [18, 13], [6, 4], [9, 1], [8, 16], [12, 11], [17, 19], [2, 16], [12, 11], [3, 1], [8, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [8, 18], [5, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 13]
[12, 16]
[11, 19]
[13, 20]
[18, 21]
[25, 28]
[24, 29]
[26, 32]
[30, 37]
[20, 38]
[31, 39]
[37, 42]
[33, 44]
[45, 48]
[43, 52]
[34, 58]
[61, 65]
[60, 67]
[62, 70]
[69, 75]
[70, 77]
[75, 82]
[71, 87]
[74, 88]
[82, 89]
[86, 92]
[85, 93]
[94, 98]
[89, 99]
[119, 123]
[110, 128]
[124, 130]
[137, 143]
[147, 152]
[150, 156]
[148, 158]
[149, 163]
[160, 167]
[166, 168]
[152, 171]
[161, 172]
[170, 177]
[172, 178]
[184, 192]
[186, 193]
[192, 197]
[185, 198]
[187, 201]
[205, 210]
[202, 214]
[210, 217]
[223, 229]
[227, 231]
[228, 243]
[232, 244]
[229, 245]
[238, 248]
[233, 249]
[241, 257]
[251, 258]
[257, 260]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 8, 15]
[40, 41, 46]
[42, 49, 51]
[55, 63, 72]
[133, 141, 149]
[169, 182, 188]
[193, 199, 205]
[195, 200, 207]
[220, 224, 232]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[191, 195, 200]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 103, 111]
[165, 173, 176]
[253, 262, 268]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 13]
[12, 16]
[11, 19]
[13, 20]
[18, 21]
[25, 28]
[24, 29]
[26, 32]
[30, 37]
[20, 38]
[31, 39]
[37, 42]
[33, 44]
[45, 48]
[43, 52]
[34, 58]
[61, 65]
[60, 67]
[62, 70]
[69, 75]
[70, 77]
[75, 82]
[71, 87]
[74, 88]
[82, 89]
[86, 92]
[85, 93]
[94, 98]
[89, 99]
[119, 123]
[110, 128]
[124, 130]
[137, 143]
[147, 152]
[150, 156]
[148, 158]
[149, 163]
[160, 167]
[166, 168]
[152, 171]
[161, 172]
[170, 177]
[172, 178]
[184, 192]
[186, 193]
[192, 197]
[185, 198]
[187, 201]
[205, 210]
[202, 214]
[210, 217]
[223, 229]
[227, 231]
[228, 243]
[232, 244]
[229, 245]
[238, 248]
[233, 249]
[241, 257]
[251, 258]
[257, 260]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.218836545944214

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 8, 15] ccc => cc, Pos: [7, 13] cc => I, Pos: [7, 13] cc => I, Pos: [11, 19] cc => I, Pos: [11, 19] cc => I, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [13, 20] cc => I, Pos: [13, 20] cc => I, Pos: [18, 21] cc => I, Pos: [18, 21] cc => I, Pos: [20, 38] cc => I, Pos: [20, 38] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [25, 28] cc => I, Pos: [25, 28] cc => I, Pos: [26, 32] cc => I, Pos: [26, 32] cc => I, Pos: [30, 37] cc => I, Pos: [30, 37] cc => I, Pos: [31, 39] cc => I, Pos: [31, 39] cc => I, Pos: [33, 44] cc => I, Pos: [33, 44] cc => I, Pos: [34, 58] cc => I, Pos: [34, 58] cc => I, Pos: [37, 42] cc => I, Pos: [37, 42] cc => I, Pos: [40, 41, 46] ccc => cc, Pos: [42, 49, 51] ccc => cc, Pos: [43, 52] cc => I, Pos: [43, 52] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [55, 63, 72] ccc => cc, Pos: [60, 67] cc => I, Pos: [60, 67] cc => I, Pos: [61, 65] cc => I, Pos: [61, 65] cc => I, Pos: [62, 70] cc => I, Pos: [62, 70] cc => I, Pos: [69, 75] cc => I, Pos: [69, 75] cc => I, Pos: [70, 77] cc => I, Pos: [70, 77] cc => I, Pos: [71, 87] cc => I, Pos: [71, 87] cc => I, Pos: [74, 88] cc => I, Pos: [74, 88] cc => I, Pos: [75, 82] cc => I, Pos: [75, 82] cc => I, Pos: [82, 89] cc => I, Pos: [82, 89] cc => I, Pos: [85, 93] cc => I, Pos: [85, 93] cc => I, Pos: [86, 92] cc => I, Pos: [86, 92] cc => I, Pos: [89, 99] cc => I, Pos: [89, 99] cc => I, Pos: [94, 98] cc => I, Pos: [94, 98] cc => I, Pos: [100, 103, 111] ccc => cc, Pos: [110, 128] cc => I, Pos: [110, 128] cc => I, Pos: [119, 123] cc => I, Pos: [119, 123] cc => I, Pos: [124, 130] cc => I, Pos: [124, 130] cc => I, Pos: [133, 141, 149] ccc => cc, Pos: [137, 143] cc => I, Pos: [137, 143] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [148, 158] cc => I, Pos: [148, 158] cc => I, Pos: [149, 163] cc => I, Pos: [149, 163] cc => I, Pos: [150, 156] cc => I, Pos: [150, 156] cc => I, Pos: [152, 171] cc => I, Pos: [152, 171] cc => I, Pos: [160, 167] cc => I, Pos: [160, 167] cc => I, Pos: [161, 172] cc => I, Pos: [161, 172] cc => I, Pos: [165, 173, 176] ccc => cc, Pos: [166, 168] cc => I, Pos: [166, 168] cc => I, Pos: [169, 182, 188] ccc => cc, Pos: [170, 177] cc => I, Pos: [170, 177] cc => I, Pos: [172, 178] cc => I, Pos: [172, 178] cc => I, Pos: [184, 192] cc => I, Pos: [184, 192] cc => I, Pos: [185, 198] cc => I, Pos: [185, 198] cc => I, Pos: [186, 193] cc => I, Pos: [186, 193] cc => I, Pos: [187, 201] cc => I, Pos: [187, 201] cc => I, Pos: [191, 195, 200] ccc => cc, Pos: [192, 197] cc => I, Pos: [192, 197] cc => I, Pos: [193, 199, 205] ccc => cc, Pos: [195, 200, 207] ccc => cc, Pos: [202, 214] cc => I, Pos: [202, 214] cc => I, Pos: [205, 210] cc => I, Pos: [205, 210] cc => I, Pos: [210, 217] cc => I, Pos: [210, 217] cc => I, Pos: [220, 224, 232] ccc => cc, Pos: [223, 229] cc => I, Pos: [223, 229] cc => I, Pos: [227, 231] cc => I, Pos: [227, 231] cc => I, Pos: [228, 243] cc => I, Pos: [228, 243] cc => I, Pos: [229, 245] cc => I, Pos: [229, 245] cc => I, Pos: [232, 244] cc => I, Pos: [232, 244] cc => I, Pos: [233, 249] cc => I, Pos: [233, 249] cc => I, Pos: [238, 248] cc => I, Pos: [238, 248] cc => I, Pos: [241, 257] cc => I, Pos: [241, 257] cc => I, Pos: [251, 258] cc => I, Pos: [251, 258] cc => I, Pos: [253, 262, 268] ccc => cc, Pos: [257, 260] cc => I, Pos: [257, 260] cc => I]

--------End Timer [Generate Plans]:  0.15619230270385742

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 8, 15] ccc => cc,
 Pos: [7, 13] cc => I,
 Pos: [11, 19] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [20, 38] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [25, 28] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [31, 39] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [34, 58] cc => I,
 Pos: [40, 41, 46] ccc => cc,
 Pos: [42, 49, 51] ccc => cc,
 Pos: [43, 52] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [55, 63, 72] ccc => cc,
 Pos: [60, 67] cc => I,
 Pos: [61, 65] cc => I,
 Pos: [62, 70] cc => I,
 Pos: [75, 82] cc => I,
 Pos: [71, 87] cc => I,
 Pos: [74, 88] cc => I,
 Pos: [85, 93] cc => I,
 Pos: [86, 92] cc => I,
 Pos: [89, 99] cc => I,
 Pos: [94, 98] cc => I,
 Pos: [100, 103, 111] ccc => cc,
 Pos: [110, 128] cc => I,
 Pos: [119, 123] cc => I,
 Pos: [124, 130] cc => I,
 Pos: [149, 163] cc => I,
 Pos: [137, 143] cc => I,
 Pos: [147, 152] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [160, 167] cc => I,
 Pos: [172, 178] cc => I,
 Pos: [165, 173, 176] ccc => cc,
 Pos: [166, 168] cc => I,
 Pos: [169, 182, 188] ccc => cc,
 Pos: [170, 177] cc => I,
 Pos: [184, 192] cc => I,
 Pos: [185, 198] cc => I,
 Pos: [186, 193] cc => I,
 Pos: [187, 201] cc => I,
 Pos: [195, 200, 207] ccc => cc,
 Pos: [202, 214] cc => I,
 Pos: [210, 217] cc => I,
 Pos: [220, 224, 232] ccc => cc,
 Pos: [229, 245] cc => I,
 Pos: [227, 231] cc => I,
 Pos: [228, 243] cc => I,
 Pos: [233, 249] cc => I,
 Pos: [238, 248] cc => I,
 Pos: [257, 260] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [253, 262, 268] ccc => cc]
Change: 59, Saving: 61

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 8, 15] ccc => cc
Apply:  Pos: [7, 13] cc => I
Apply:  Pos: [11, 19] cc => I
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [18, 21] cc => I
Apply:  Pos: [20, 38] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [25, 28] cc => I
Apply:  Pos: [26, 32] cc => I
Apply:  Pos: [30, 37] cc => I
Apply:  Pos: [31, 39] cc => I
Apply:  Pos: [33, 44] cc => I
Apply:  Pos: [34, 58] cc => I
Apply:  Pos: [40, 41, 46] ccc => cc
Apply:  Pos: [42, 49, 51] ccc => cc
Apply:  Pos: [43, 52] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [55, 63, 72] ccc => cc
Apply:  Pos: [60, 67] cc => I
Apply:  Pos: [61, 65] cc => I
Apply:  Pos: [62, 70] cc => I
Apply:  Pos: [75, 82] cc => I
Apply:  Pos: [71, 87] cc => I
Apply:  Pos: [74, 88] cc => I
Apply:  Pos: [85, 93] cc => I
Apply:  Pos: [86, 92] cc => I
Apply:  Pos: [89, 99] cc => I
Apply:  Pos: [94, 98] cc => I
Apply:  Pos: [100, 103, 111] ccc => cc
Apply:  Pos: [110, 128] cc => I
Apply:  Pos: [119, 123] cc => I
Apply:  Pos: [124, 130] cc => I
Apply:  Pos: [149, 163] cc => I
Apply:  Pos: [137, 143] cc => I
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [148, 158] cc => I
Apply:  Pos: [150, 156] cc => I
Apply:  Pos: [160, 167] cc => I
Apply:  Pos: [172, 178] cc => I
Apply:  Pos: [165, 173, 176] ccc => cc
Apply:  Pos: [166, 168] cc => I
Apply:  Pos: [169, 182, 188] ccc => cc
Apply:  Pos: [170, 177] cc => I
Apply:  Pos: [184, 192] cc => I
Apply:  Pos: [185, 198] cc => I
Apply:  Pos: [186, 193] cc => I
Apply:  Pos: [187, 201] cc => I
Apply:  Pos: [195, 200, 207] ccc => cc
Apply:  Pos: [202, 214] cc => I
Apply:  Pos: [210, 217] cc => I
Apply:  Pos: [220, 224, 232] ccc => cc
Apply:  Pos: [229, 245] cc => I
Apply:  Pos: [227, 231] cc => I
Apply:  Pos: [228, 243] cc => I
Apply:  Pos: [233, 249] cc => I
Apply:  Pos: [238, 248] cc => I
Apply:  Pos: [257, 260] cc => I
Apply:  Pos: [251, 258] cc => I
Apply:  Pos: [253, 262, 268] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 17], [4, 17], [6, 7], [19, 15], [2, 8], [17, 19], [10, 8], [17, 15], [17, 18], [15, 3], [0, 7], [4, 15], [17, 15], [11, 8], [5, 16], [10, 8], [17, 19], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [12, 6], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [8, 13], [2, 5], [17, 15], [10, 8], [5, 16], [13, 1], [14, 19], [11, 0], [6, 7], [15, 3], [10, 13], [8, 18], [3, 1], [13, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [5, 16], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [17, 18], [6, 17], [8, 16], [15, 3], [4, 14], [2, 8], [13, 3], [15, 3], [8, 13], [0, 10], [17, 18], [0, 16], [9, 1], [18, 19], [4, 14], [11, 10], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [16, 9], [18, 13], [7, 17], [10, 13], [0, 17], [5, 16], [12, 11], [14, 19], [7, 17], [13, 3], [2, 16], [4, 14], [15, 3], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [2, 5], [19, 15], [6, 7], [16, 9], [5, 16], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [12, 11], [0, 10], [5, 8], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  5.375028848648071

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 22]
[51, 67]
[88, 91]
[89, 99]
[102, 113]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[14, 15, 17]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[52, 57, 59]
[85, 86, 95]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[111, 116, 124]
[114, 121, 126]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 22]
[51, 67]
[88, 91]
[89, 99]
[102, 113]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.843780517578125

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 22] cc => I, Pos: [11, 22] cc => I, Pos: [14, 15, 17] ccc => cc, Pos: [51, 67] cc => I, Pos: [51, 67] cc => I, Pos: [52, 57, 59] ccc => cc, Pos: [85, 86, 95] ccc => cc, Pos: [88, 91] cc => I, Pos: [88, 91] cc => I, Pos: [89, 99] cc => I, Pos: [89, 99] cc => I, Pos: [102, 113] cc => I, Pos: [102, 113] cc => I, Pos: [111, 116, 124] ccc => cc, Pos: [114, 121, 126] ccc => cc]

--------End Timer [Generate Plans]:  0.015625

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 22] cc => I,
 Pos: [14, 15, 17] ccc => cc,
 Pos: [51, 67] cc => I,
 Pos: [52, 57, 59] ccc => cc,
 Pos: [85, 86, 95] ccc => cc,
 Pos: [88, 91] cc => I,
 Pos: [89, 99] cc => I,
 Pos: [102, 113] cc => I,
 Pos: [111, 116, 124] ccc => cc,
 Pos: [114, 121, 126] ccc => cc]
Change: 10, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 22] cc => I
Apply:  Pos: [14, 15, 17] ccc => cc
Apply:  Pos: [51, 67] cc => I
Apply:  Pos: [52, 57, 59] ccc => cc
Apply:  Pos: [85, 86, 95] ccc => cc
Apply:  Pos: [88, 91] cc => I
Apply:  Pos: [89, 99] cc => I
Apply:  Pos: [102, 113] cc => I
Apply:  Pos: [111, 116, 124] ccc => cc
Apply:  Pos: [114, 121, 126] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [4, 17], [6, 7], [6, 17], [19, 15], [2, 8], [10, 8], [17, 18], [17, 3], [15, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [12, 6], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 15], [18, 13], [13, 3], [8, 16], [0, 10], [8, 13], [2, 5], [17, 15], [10, 8], [10, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 13], [10, 8], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [2, 8], [13, 3], [8, 13], [0, 10], [0, 16], [9, 1], [18, 19], [11, 10], [0, 7], [7, 4], [2, 16], [10, 8], [16, 9], [18, 13], [7, 17], [10, 13], [0, 17], [2, 5], [12, 11], [6, 7], [13, 3], [5, 16], [4, 14], [15, 3], [8, 18], [10, 13], [7, 17], [18, 13], [11, 10], [19, 15], [16, 9], [5, 16], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [12, 11], [0, 10], [5, 8], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [2, 16], [8, 16], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.859405517578125

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[103, 112, 113]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[44, 47, 48]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.484412431716919

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [44, 47, 48] ccc => cc, Pos: [103, 112, 113] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [44, 47, 48] ccc => cc, Pos: [103, 112, 113] ccc => cc]
Change: 2, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [44, 47, 48] ccc => cc
Apply:  Pos: [103, 112, 113] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [4, 17], [6, 17], [6, 7], [19, 15], [10, 8], [2, 8], [17, 3], [17, 18], [15, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [12, 6], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [10, 8], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [2, 8], [13, 3], [8, 13], [0, 16], [0, 10], [9, 1], [18, 19], [11, 10], [0, 7], [7, 4], [2, 16], [10, 8], [16, 9], [18, 13], [7, 17], [10, 13], [0, 17], [2, 5], [12, 11], [6, 7], [13, 3], [5, 9], [4, 14], [15, 3], [8, 18], [10, 13], [7, 17], [18, 13], [11, 10], [19, 15], [16, 9], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [12, 11], [0, 10], [5, 8], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.484412431716919

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.499945878982544

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 17], [4, 17], [6, 7], [19, 15], [2, 8], [10, 8], [17, 18], [15, 3], [17, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [12, 6], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 15], [18, 13], [13, 3], [8, 16], [0, 10], [10, 8], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 13], [10, 8], [9, 1], [5, 8], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [2, 8], [13, 3], [8, 13], [0, 10], [0, 16], [9, 1], [18, 19], [11, 10], [0, 7], [7, 4], [2, 16], [10, 8], [16, 9], [18, 13], [7, 17], [10, 13], [0, 17], [2, 5], [12, 11], [6, 7], [13, 3], [5, 9], [4, 14], [15, 3], [8, 18], [10, 13], [7, 17], [18, 13], [11, 10], [19, 15], [16, 9], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [12, 11], [0, 10], [5, 8], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [2, 16], [8, 16], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.499945878982544

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [145] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 290

Reduced: 
 - size: 125 (46.30%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10938715934753418

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 4], [9, 1], [4, 17], [6, 7], [19, 15], [0, 10], [5, 16], [9, 1], [2, 8], [6, 4], [5, 16], [17, 19], [18, 13], [0, 10], [9, 1], [18, 13], [10, 8], [17, 15], [12, 6], [7, 4], [9, 3], [17, 18], [7, 4], [12, 6], [11, 10], [2, 16], [9, 3], [18, 19], [4, 14], [15, 3], [0, 7], [11, 10], [9, 1], [2, 16], [4, 17], [17, 15], [11, 10], [3, 1], [18, 19], [0, 2], [4, 17], [5, 16], [0, 2], [10, 8], [17, 19], [11, 10], [3, 1], [6, 7], [8, 16], [18, 15], [6, 17], [2, 8], [4, 14], [10, 13], [18, 19], [11, 0], [7, 17], [15, 3], [2, 16], [11, 0], [13, 1], [18, 19], [10, 8], [12, 6], [7, 17], [11, 10], [18, 15], [5, 16], [0, 2], [12, 6], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [12, 6], [0, 7], [18, 13], [17, 19], [9, 1], [11, 10], [0, 2], [12, 6], [18, 15], [13, 3], [9, 1], [17, 19], [11, 7], [8, 16], [0, 10], [8, 13], [11, 7], [12, 6], [5, 16], [17, 15], [10, 8], [2, 16], [13, 1], [14, 19], [11, 0], [6, 7], [15, 3], [10, 13], [6, 17], [2, 5], [8, 18], [3, 1], [13, 1], [18, 19], [12, 11], [5, 8], [4, 14], [0, 2], [13, 9], [14, 19], [5, 16], [0, 2], [7, 4], [10, 8], [10, 13], [9, 1], [6, 17], [5, 8], [7, 4], [18, 15], [13, 1], [2, 5], [8, 18], [11, 10], [15, 3], [0, 7], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [0, 7], [18, 15], [10, 8], [17, 18], [9, 1], [11, 0], [2, 5], [7, 10], [6, 17], [9, 1], [8, 16], [15, 3], [4, 14], [7, 10], [2, 8], [11, 0], [13, 3], [7, 4], [15, 3], [8, 13], [2, 5], [0, 10], [18, 19], [12, 6], [7, 4], [12, 6], [0, 2], [5, 8], [9, 1], [15, 3], [17, 19], [4, 14], [11, 10], [17, 18], [5, 8], [15, 3], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [12, 11], [3, 1], [4, 14], [5, 8], [0, 2], [16, 9], [18, 13], [7, 17], [12, 11], [4, 14], [10, 13], [0, 7], [5, 16], [12, 11], [3, 1], [14, 19], [7, 17], [5, 8], [9, 1], [13, 3], [2, 16], [4, 14], [15, 3], [0, 7], [8, 18], [10, 13], [4, 14], [6, 17], [18, 13], [11, 10], [9, 1], [2, 5], [19, 15], [4, 14], [6, 7], [16, 9], [5, 8], [17, 19], [4, 17], [13, 3], [8, 16], [7, 10], [18, 19], [11, 0], [7, 4], [13, 3], [17, 18], [11, 0], [5, 8], [12, 6], [7, 17], [13, 1], [14, 19], [0, 2], [5, 16], [18, 15], [17, 19], [12, 11], [0, 10], [7, 4], [5, 8], [13, 3], [18, 19], [7, 17], [5, 16], [12, 6], [10, 8], [17, 19], [2, 5], [18, 13], [6, 4], [9, 1], [8, 16], [12, 11], [17, 19], [2, 16], [12, 11], [3, 1], [8, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [8, 18], [5, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 13]
[12, 16]
[11, 19]
[13, 20]
[18, 21]
[25, 28]
[24, 29]
[26, 32]
[30, 37]
[20, 38]
[31, 39]
[37, 42]
[33, 44]
[45, 48]
[43, 52]
[34, 58]
[61, 65]
[60, 67]
[62, 70]
[69, 75]
[70, 77]
[75, 82]
[71, 87]
[74, 88]
[82, 89]
[86, 92]
[85, 93]
[94, 98]
[89, 99]
[119, 123]
[110, 128]
[124, 130]
[137, 143]
[147, 152]
[150, 156]
[148, 158]
[149, 163]
[160, 167]
[166, 168]
[152, 171]
[161, 172]
[170, 177]
[172, 178]
[184, 192]
[186, 193]
[192, 197]
[185, 198]
[187, 201]
[205, 210]
[202, 214]
[210, 217]
[223, 229]
[227, 231]
[228, 243]
[232, 244]
[229, 245]
[238, 248]
[233, 249]
[241, 257]
[251, 258]
[257, 260]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 8, 15]
[40, 41, 46]
[42, 49, 51]
[55, 63, 72]
[133, 141, 149]
[169, 182, 188]
[193, 199, 205]
[195, 200, 207]
[220, 224, 232]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[191, 195, 200]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[100, 103, 111]
[165, 173, 176]
[253, 262, 268]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 13]
[12, 16]
[11, 19]
[13, 20]
[18, 21]
[25, 28]
[24, 29]
[26, 32]
[30, 37]
[20, 38]
[31, 39]
[37, 42]
[33, 44]
[45, 48]
[43, 52]
[34, 58]
[61, 65]
[60, 67]
[62, 70]
[69, 75]
[70, 77]
[75, 82]
[71, 87]
[74, 88]
[82, 89]
[86, 92]
[85, 93]
[94, 98]
[89, 99]
[119, 123]
[110, 128]
[124, 130]
[137, 143]
[147, 152]
[150, 156]
[148, 158]
[149, 163]
[160, 167]
[166, 168]
[152, 171]
[161, 172]
[170, 177]
[172, 178]
[184, 192]
[186, 193]
[192, 197]
[185, 198]
[187, 201]
[205, 210]
[202, 214]
[210, 217]
[223, 229]
[227, 231]
[228, 243]
[232, 244]
[229, 245]
[238, 248]
[233, 249]
[241, 257]
[251, 258]
[257, 260]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.171916961669922

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 8, 15] ccc => cc, Pos: [7, 13] cc => I, Pos: [7, 13] cc => I, Pos: [11, 19] cc => I, Pos: [11, 19] cc => I, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [13, 20] cc => I, Pos: [13, 20] cc => I, Pos: [18, 21] cc => I, Pos: [18, 21] cc => I, Pos: [20, 38] cc => I, Pos: [20, 38] cc => I, Pos: [24, 29] cc => I, Pos: [24, 29] cc => I, Pos: [25, 28] cc => I, Pos: [25, 28] cc => I, Pos: [26, 32] cc => I, Pos: [26, 32] cc => I, Pos: [30, 37] cc => I, Pos: [30, 37] cc => I, Pos: [31, 39] cc => I, Pos: [31, 39] cc => I, Pos: [33, 44] cc => I, Pos: [33, 44] cc => I, Pos: [34, 58] cc => I, Pos: [34, 58] cc => I, Pos: [37, 42] cc => I, Pos: [37, 42] cc => I, Pos: [40, 41, 46] ccc => cc, Pos: [42, 49, 51] ccc => cc, Pos: [43, 52] cc => I, Pos: [43, 52] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [55, 63, 72] ccc => cc, Pos: [60, 67] cc => I, Pos: [60, 67] cc => I, Pos: [61, 65] cc => I, Pos: [61, 65] cc => I, Pos: [62, 70] cc => I, Pos: [62, 70] cc => I, Pos: [69, 75] cc => I, Pos: [69, 75] cc => I, Pos: [70, 77] cc => I, Pos: [70, 77] cc => I, Pos: [71, 87] cc => I, Pos: [71, 87] cc => I, Pos: [74, 88] cc => I, Pos: [74, 88] cc => I, Pos: [75, 82] cc => I, Pos: [75, 82] cc => I, Pos: [82, 89] cc => I, Pos: [82, 89] cc => I, Pos: [85, 93] cc => I, Pos: [85, 93] cc => I, Pos: [86, 92] cc => I, Pos: [86, 92] cc => I, Pos: [89, 99] cc => I, Pos: [89, 99] cc => I, Pos: [94, 98] cc => I, Pos: [94, 98] cc => I, Pos: [100, 103, 111] ccc => cc, Pos: [110, 128] cc => I, Pos: [110, 128] cc => I, Pos: [119, 123] cc => I, Pos: [119, 123] cc => I, Pos: [124, 130] cc => I, Pos: [124, 130] cc => I, Pos: [133, 141, 149] ccc => cc, Pos: [137, 143] cc => I, Pos: [137, 143] cc => I, Pos: [147, 152] cc => I, Pos: [147, 152] cc => I, Pos: [148, 158] cc => I, Pos: [148, 158] cc => I, Pos: [149, 163] cc => I, Pos: [149, 163] cc => I, Pos: [150, 156] cc => I, Pos: [150, 156] cc => I, Pos: [152, 171] cc => I, Pos: [152, 171] cc => I, Pos: [160, 167] cc => I, Pos: [160, 167] cc => I, Pos: [161, 172] cc => I, Pos: [161, 172] cc => I, Pos: [165, 173, 176] ccc => cc, Pos: [166, 168] cc => I, Pos: [166, 168] cc => I, Pos: [169, 182, 188] ccc => cc, Pos: [170, 177] cc => I, Pos: [170, 177] cc => I, Pos: [172, 178] cc => I, Pos: [172, 178] cc => I, Pos: [184, 192] cc => I, Pos: [184, 192] cc => I, Pos: [185, 198] cc => I, Pos: [185, 198] cc => I, Pos: [186, 193] cc => I, Pos: [186, 193] cc => I, Pos: [187, 201] cc => I, Pos: [187, 201] cc => I, Pos: [191, 195, 200] ccc => cc, Pos: [192, 197] cc => I, Pos: [192, 197] cc => I, Pos: [193, 199, 205] ccc => cc, Pos: [195, 200, 207] ccc => cc, Pos: [202, 214] cc => I, Pos: [202, 214] cc => I, Pos: [205, 210] cc => I, Pos: [205, 210] cc => I, Pos: [210, 217] cc => I, Pos: [210, 217] cc => I, Pos: [220, 224, 232] ccc => cc, Pos: [223, 229] cc => I, Pos: [223, 229] cc => I, Pos: [227, 231] cc => I, Pos: [227, 231] cc => I, Pos: [228, 243] cc => I, Pos: [228, 243] cc => I, Pos: [229, 245] cc => I, Pos: [229, 245] cc => I, Pos: [232, 244] cc => I, Pos: [232, 244] cc => I, Pos: [233, 249] cc => I, Pos: [233, 249] cc => I, Pos: [238, 248] cc => I, Pos: [238, 248] cc => I, Pos: [241, 257] cc => I, Pos: [241, 257] cc => I, Pos: [251, 258] cc => I, Pos: [251, 258] cc => I, Pos: [253, 262, 268] ccc => cc, Pos: [257, 260] cc => I, Pos: [257, 260] cc => I]

Plan: 1
[Pos: [6, 8, 15] ccc => cc,
 Pos: [7, 13] cc => I,
 Pos: [11, 19] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [20, 38] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [25, 28] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [31, 39] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [34, 58] cc => I,
 Pos: [40, 41, 46] ccc => cc,
 Pos: [42, 49, 51] ccc => cc,
 Pos: [43, 52] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [55, 63, 72] ccc => cc,
 Pos: [60, 67] cc => I,
 Pos: [61, 65] cc => I,
 Pos: [62, 70] cc => I,
 Pos: [69, 75] cc => I,
 Pos: [71, 87] cc => I,
 Pos: [74, 88] cc => I,
 Pos: [82, 89] cc => I,
 Pos: [85, 93] cc => I,
 Pos: [86, 92] cc => I,
 Pos: [94, 98] cc => I,
 Pos: [100, 103, 111] ccc => cc,
 Pos: [110, 128] cc => I,
 Pos: [119, 123] cc => I,
 Pos: [124, 130] cc => I,
 Pos: [133, 141, 149] ccc => cc,
 Pos: [137, 143] cc => I,
 Pos: [147, 152] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [160, 167] cc => I,
 Pos: [161, 172] cc => I,
 Pos: [165, 173, 176] ccc => cc,
 Pos: [166, 168] cc => I,
 Pos: [169, 182, 188] ccc => cc,
 Pos: [170, 177] cc => I,
 Pos: [184, 192] cc => I,
 Pos: [185, 198] cc => I,
 Pos: [186, 193] cc => I,
 Pos: [187, 201] cc => I,
 Pos: [191, 195, 200] ccc => cc,
 Pos: [202, 214] cc => I,
 Pos: [205, 210] cc => I,
 Pos: [220, 224, 232] ccc => cc,
 Pos: [223, 229] cc => I,
 Pos: [227, 231] cc => I,
 Pos: [228, 243] cc => I,
 Pos: [233, 249] cc => I,
 Pos: [238, 248] cc => I,
 Pos: [241, 257] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [253, 262, 268] ccc => cc]
Change: 59, Saving: 61

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.14060163497924805

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 8, 15] ccc => cc,
 Pos: [7, 13] cc => I,
 Pos: [11, 19] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [20, 38] cc => I,
 Pos: [24, 29] cc => I,
 Pos: [25, 28] cc => I,
 Pos: [26, 32] cc => I,
 Pos: [30, 37] cc => I,
 Pos: [31, 39] cc => I,
 Pos: [33, 44] cc => I,
 Pos: [34, 58] cc => I,
 Pos: [40, 41, 46] ccc => cc,
 Pos: [42, 49, 51] ccc => cc,
 Pos: [43, 52] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [55, 63, 72] ccc => cc,
 Pos: [60, 67] cc => I,
 Pos: [61, 65] cc => I,
 Pos: [62, 70] cc => I,
 Pos: [69, 75] cc => I,
 Pos: [71, 87] cc => I,
 Pos: [74, 88] cc => I,
 Pos: [82, 89] cc => I,
 Pos: [85, 93] cc => I,
 Pos: [86, 92] cc => I,
 Pos: [94, 98] cc => I,
 Pos: [100, 103, 111] ccc => cc,
 Pos: [110, 128] cc => I,
 Pos: [119, 123] cc => I,
 Pos: [124, 130] cc => I,
 Pos: [133, 141, 149] ccc => cc,
 Pos: [137, 143] cc => I,
 Pos: [147, 152] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [160, 167] cc => I,
 Pos: [161, 172] cc => I,
 Pos: [165, 173, 176] ccc => cc,
 Pos: [166, 168] cc => I,
 Pos: [169, 182, 188] ccc => cc,
 Pos: [170, 177] cc => I,
 Pos: [184, 192] cc => I,
 Pos: [185, 198] cc => I,
 Pos: [186, 193] cc => I,
 Pos: [187, 201] cc => I,
 Pos: [191, 195, 200] ccc => cc,
 Pos: [202, 214] cc => I,
 Pos: [205, 210] cc => I,
 Pos: [220, 224, 232] ccc => cc,
 Pos: [223, 229] cc => I,
 Pos: [227, 231] cc => I,
 Pos: [228, 243] cc => I,
 Pos: [233, 249] cc => I,
 Pos: [238, 248] cc => I,
 Pos: [241, 257] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [253, 262, 268] ccc => cc]
Change: 59, Saving: 61

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 8, 15] ccc => cc
Apply:  Pos: [7, 13] cc => I
Apply:  Pos: [11, 19] cc => I
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [18, 21] cc => I
Apply:  Pos: [20, 38] cc => I
Apply:  Pos: [24, 29] cc => I
Apply:  Pos: [25, 28] cc => I
Apply:  Pos: [26, 32] cc => I
Apply:  Pos: [30, 37] cc => I
Apply:  Pos: [31, 39] cc => I
Apply:  Pos: [33, 44] cc => I
Apply:  Pos: [34, 58] cc => I
Apply:  Pos: [40, 41, 46] ccc => cc
Apply:  Pos: [42, 49, 51] ccc => cc
Apply:  Pos: [43, 52] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [55, 63, 72] ccc => cc
Apply:  Pos: [60, 67] cc => I
Apply:  Pos: [61, 65] cc => I
Apply:  Pos: [62, 70] cc => I
Apply:  Pos: [69, 75] cc => I
Apply:  Pos: [71, 87] cc => I
Apply:  Pos: [74, 88] cc => I
Apply:  Pos: [82, 89] cc => I
Apply:  Pos: [85, 93] cc => I
Apply:  Pos: [86, 92] cc => I
Apply:  Pos: [94, 98] cc => I
Apply:  Pos: [100, 103, 111] ccc => cc
Apply:  Pos: [110, 128] cc => I
Apply:  Pos: [119, 123] cc => I
Apply:  Pos: [124, 130] cc => I
Apply:  Pos: [133, 141, 149] ccc => cc
Apply:  Pos: [137, 143] cc => I
Apply:  Pos: [147, 152] cc => I
Apply:  Pos: [148, 158] cc => I
Apply:  Pos: [150, 156] cc => I
Apply:  Pos: [160, 167] cc => I
Apply:  Pos: [161, 172] cc => I
Apply:  Pos: [165, 173, 176] ccc => cc
Apply:  Pos: [166, 168] cc => I
Apply:  Pos: [169, 182, 188] ccc => cc
Apply:  Pos: [170, 177] cc => I
Apply:  Pos: [184, 192] cc => I
Apply:  Pos: [185, 198] cc => I
Apply:  Pos: [186, 193] cc => I
Apply:  Pos: [187, 201] cc => I
Apply:  Pos: [191, 195, 200] ccc => cc
Apply:  Pos: [202, 214] cc => I
Apply:  Pos: [205, 210] cc => I
Apply:  Pos: [220, 224, 232] ccc => cc
Apply:  Pos: [223, 229] cc => I
Apply:  Pos: [227, 231] cc => I
Apply:  Pos: [228, 243] cc => I
Apply:  Pos: [233, 249] cc => I
Apply:  Pos: [238, 248] cc => I
Apply:  Pos: [241, 257] cc => I
Apply:  Pos: [251, 258] cc => I
Apply:  Pos: [253, 262, 268] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 17], [4, 17], [6, 7], [19, 15], [2, 8], [17, 19], [10, 8], [17, 15], [17, 18], [15, 3], [0, 7], [4, 15], [17, 15], [11, 8], [5, 16], [10, 8], [17, 19], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [8, 13], [12, 6], [2, 5], [17, 15], [10, 8], [5, 16], [13, 1], [14, 19], [11, 0], [6, 7], [15, 3], [10, 13], [8, 18], [3, 1], [13, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [5, 16], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 16], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [12, 6], [18, 15], [10, 8], [17, 18], [6, 17], [8, 16], [15, 3], [4, 14], [2, 8], [13, 3], [8, 13], [2, 5], [0, 10], [17, 18], [0, 16], [9, 1], [18, 19], [4, 14], [11, 10], [15, 3], [0, 7], [14, 19], [7, 4], [2, 16], [10, 8], [16, 9], [18, 13], [0, 7], [10, 13], [7, 17], [5, 16], [12, 11], [14, 19], [13, 3], [2, 16], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [2, 5], [19, 15], [4, 14], [6, 7], [16, 9], [5, 16], [17, 19], [4, 17], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [5, 8], [13, 3], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  5.31251859664917

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 22]
[51, 67]
[89, 99]
[103, 114]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[14, 15, 17]
[47, 55, 82]
[102, 104, 109]
[109, 111, 118]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[52, 57, 59]
[85, 86, 95]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[112, 116, 124]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[11, 22]
[51, 67]
[89, 99]
[103, 114]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8124544620513916

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 22] cc => I, Pos: [11, 22] cc => I, Pos: [14, 15, 17] ccc => cc, Pos: [47, 55, 82] ccc => cc, Pos: [51, 67] cc => I, Pos: [51, 67] cc => I, Pos: [52, 57, 59] ccc => cc, Pos: [85, 86, 95] ccc => cc, Pos: [89, 99] cc => I, Pos: [89, 99] cc => I, Pos: [102, 104, 109] ccc => cc, Pos: [103, 114] cc => I, Pos: [103, 114] cc => I, Pos: [109, 111, 118] ccc => cc, Pos: [112, 116, 124] ccc => cc]

Plan: 1
[Pos: [11, 22] cc => I,
 Pos: [14, 15, 17] ccc => cc,
 Pos: [47, 55, 82] ccc => cc,
 Pos: [51, 67] cc => I,
 Pos: [52, 57, 59] ccc => cc,
 Pos: [85, 86, 95] ccc => cc,
 Pos: [89, 99] cc => I,
 Pos: [102, 104, 109] ccc => cc,
 Pos: [103, 114] cc => I,
 Pos: [112, 116, 124] ccc => cc]
Change: 10, Saving: 10

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.031857967376708984

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 22] cc => I,
 Pos: [14, 15, 17] ccc => cc,
 Pos: [47, 55, 82] ccc => cc,
 Pos: [51, 67] cc => I,
 Pos: [52, 57, 59] ccc => cc,
 Pos: [85, 86, 95] ccc => cc,
 Pos: [89, 99] cc => I,
 Pos: [102, 104, 109] ccc => cc,
 Pos: [103, 114] cc => I,
 Pos: [112, 116, 124] ccc => cc]
Change: 10, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 22] cc => I
Apply:  Pos: [14, 15, 17] ccc => cc
Apply:  Pos: [47, 55, 82] ccc => cc
Apply:  Pos: [51, 67] cc => I
Apply:  Pos: [52, 57, 59] ccc => cc
Apply:  Pos: [85, 86, 95] ccc => cc
Apply:  Pos: [89, 99] cc => I
Apply:  Pos: [102, 104, 109] ccc => cc
Apply:  Pos: [103, 114] cc => I
Apply:  Pos: [112, 116, 124] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [4, 17], [6, 7], [6, 17], [19, 15], [2, 8], [10, 8], [17, 18], [17, 3], [15, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 15], [18, 13], [13, 3], [8, 16], [0, 10], [8, 13], [12, 7], [2, 5], [17, 15], [10, 8], [10, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 13], [10, 8], [9, 1], [5, 8], [18, 15], [13, 1], [2, 16], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [15, 3], [2, 8], [13, 3], [8, 13], [2, 5], [0, 10], [0, 16], [9, 1], [18, 19], [11, 10], [15, 3], [0, 4], [7, 4], [2, 16], [10, 8], [16, 9], [18, 13], [10, 13], [7, 17], [2, 5], [12, 11], [13, 3], [5, 16], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [19, 15], [4, 14], [6, 7], [16, 9], [5, 16], [17, 19], [4, 17], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [5, 8], [13, 3], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [2, 16], [8, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.8443124294281006

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[85, 100]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[103, 114, 115]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[43, 47, 48]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[85, 100]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4844305515289307

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [43, 47, 48] ccc => cc, Pos: [85, 100] cc => I, Pos: [85, 100] cc => I, Pos: [103, 114, 115] ccc => cc]

Plan: 1
[Pos: [43, 47, 48] ccc => cc,
 Pos: [85, 100] cc => I,
 Pos: [103, 114, 115] ccc => cc]
Change: 3, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015606403350830078

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [43, 47, 48] ccc => cc,
 Pos: [85, 100] cc => I,
 Pos: [103, 114, 115] ccc => cc]
Change: 3, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [43, 47, 48] ccc => cc
Apply:  Pos: [85, 100] cc => I
Apply:  Pos: [103, 114, 115] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [4, 17], [6, 17], [6, 7], [19, 15], [10, 8], [2, 8], [17, 3], [17, 18], [15, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 13], [18, 15], [13, 3], [8, 16], [0, 10], [10, 8], [12, 7], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 8], [10, 13], [9, 1], [5, 8], [18, 15], [13, 1], [2, 16], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [15, 3], [2, 8], [13, 3], [8, 13], [0, 16], [0, 10], [9, 1], [18, 19], [11, 10], [15, 3], [7, 4], [0, 4], [2, 16], [10, 8], [16, 9], [10, 13], [18, 13], [7, 17], [12, 11], [13, 3], [5, 9], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [19, 15], [4, 14], [6, 7], [16, 9], [17, 19], [4, 17], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [5, 8], [13, 3], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [8, 16], [2, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.5000369548797607

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4212286472320557

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[16, 9], [13, 1], [0, 2], [18, 19], [5, 8], [11, 10], [6, 17], [4, 17], [6, 7], [19, 15], [2, 8], [10, 8], [17, 18], [15, 3], [17, 3], [0, 7], [4, 15], [11, 8], [5, 16], [10, 8], [6, 7], [8, 16], [18, 3], [6, 17], [2, 8], [10, 13], [15, 3], [2, 16], [13, 1], [10, 8], [5, 16], [14, 19], [7, 17], [4, 14], [9, 3], [8, 13], [19, 15], [0, 7], [18, 15], [18, 13], [13, 3], [8, 16], [0, 10], [10, 8], [12, 7], [2, 5], [17, 15], [8, 13], [14, 19], [11, 0], [6, 7], [15, 3], [13, 1], [8, 18], [3, 1], [18, 19], [12, 11], [5, 8], [4, 14], [13, 9], [14, 19], [10, 13], [10, 8], [9, 1], [5, 8], [18, 15], [13, 1], [2, 16], [8, 18], [11, 10], [15, 3], [10, 13], [17, 19], [3, 1], [5, 16], [18, 15], [10, 8], [6, 17], [17, 18], [8, 16], [15, 3], [2, 8], [13, 3], [8, 13], [0, 10], [0, 16], [9, 1], [18, 19], [11, 10], [15, 3], [0, 4], [7, 4], [2, 16], [10, 8], [16, 9], [18, 13], [10, 13], [7, 17], [12, 11], [13, 3], [5, 9], [15, 3], [0, 7], [8, 18], [10, 13], [6, 17], [18, 13], [11, 10], [19, 15], [4, 14], [6, 7], [16, 9], [17, 19], [4, 17], [8, 16], [7, 10], [18, 19], [17, 18], [7, 17], [13, 1], [14, 19], [0, 2], [18, 15], [17, 19], [0, 10], [5, 8], [13, 3], [18, 19], [7, 17], [10, 8], [2, 5], [8, 18], [6, 4], [9, 1], [2, 16], [8, 16], [12, 11], [3, 1], [18, 13], [7, 4], [19, 15], [9, 3], [7, 10], [11, 0], [5, 16], ----End Timer [Execute Mapping]:  2.4212286472320557

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [145] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 290

Reduced: 
 - size: 125 (46.30%)
 - depth: 9 (20.00%)

